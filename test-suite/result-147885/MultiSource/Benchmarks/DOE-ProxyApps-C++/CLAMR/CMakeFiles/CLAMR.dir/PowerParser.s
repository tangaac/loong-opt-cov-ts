	.file	"PowerParser.cc"
                                        # Start of file scope inline assembly
	.globl	_ZSt21ios_base_library_initv

                                        # End of file scope inline assembly
	.section	.text._ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,"axG",@progbits,_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,comdat
	.weak	_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	addi.d	$sp, $sp, -656
	.cfi_def_cfa_offset 656
	st.d	$ra, $sp, 648                   # 8-byte Folded Spill
	st.d	$fp, $sp, 640                   # 8-byte Folded Spill
	st.d	$s0, $sp, 632                   # 8-byte Folded Spill
	st.d	$s1, $sp, 624                   # 8-byte Folded Spill
	st.d	$s2, $sp, 616                   # 8-byte Folded Spill
	st.d	$s3, $sp, 608                   # 8-byte Folded Spill
	st.d	$s4, $sp, 600                   # 8-byte Folded Spill
	st.d	$s5, $sp, 592                   # 8-byte Folded Spill
	st.d	$s6, $sp, 584                   # 8-byte Folded Spill
	st.d	$s7, $sp, 576                   # 8-byte Folded Spill
	st.d	$s8, $sp, 568                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a3, 8
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a3, $a3, 0
	sub.d	$a5, $a5, $a3
	srai.d	$a5, $a5, 2
	addi.w	$a6, $a5, 0
	st.d	$a4, $sp, 40                    # 8-byte Folded Spill
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	move	$s3, $a1
	move	$s0, $a0
	blez	$a6, .LBB0_3
# %bb.1:                                # %.lr.ph.preheader
	bstrpick.d	$a0, $a5, 30, 0
	ori	$a1, $zero, 8
	bgeu	$a0, $a1, .LBB0_4
# %bb.2:
	move	$a1, $zero
	ori	$fp, $zero, 1
	b	.LBB0_7
.LBB0_3:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i.thread
	ori	$fp, $zero, 1
	b	.LBB0_11
.LBB0_4:                                # %vector.ph
	bstrpick.d	$a1, $a5, 30, 3
	slli.d	$a1, $a1, 3
	vrepli.w	$vr0, 1
	addi.d	$a2, $a3, 16
	move	$a4, $a1
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB0_5:                                # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a2, -16
	vld	$vr3, $a2, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a4, $a4, -8
	addi.d	$a2, $a2, 32
	bnez	$a4, .LBB0_5
# %bb.6:                                # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$fp, $vr0, 0
	beq	$a0, $a1, .LBB0_9
.LBB0_7:                                # %.lr.ph.preheader99
	alsl.d	$a2, $a1, $a3, 2
	sub.d	$a0, $a0, $a1
	.p2align	4, , 16
.LBB0_8:                                # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a2, 0
	mul.w	$fp, $a1, $fp
	addi.d	$a0, $a0, -1
	addi.d	$a2, $a2, 4
	bnez	$a0, .LBB0_8
.LBB0_9:                                # %._crit_edge
	bltz	$fp, .LBB0_66
# %bb.10:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	beqz	$fp, .LBB0_16
.LBB0_11:                               # %.lr.ph.preheader.i.i.i.i.i
	slli.d	$s4, $fp, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 536
	alsl.d	$s1, $fp, $a0, 2
	st.d	$s1, $sp, 552
	move	$a1, $zero
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 544
	slli.d	$s5, $fp, 3
.Ltmp0:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1:
# %bb.12:                               # %.noexc47
	st.d	$a0, $sp, 512
	alsl.d	$a1, $fp, $a0, 3
	st.d	$a1, $sp, 528
	st.d	$zero, $a0, 0
	ori	$a2, $zero, 1
	addi.d	$a1, $a0, 8
	beq	$fp, $a2, .LBB0_14
# %bb.13:                               # %.lr.ph.i.preheader.i.i.i.i.i
	add.d	$s1, $a0, $s5
	addi.d	$a2, $s5, -8
	move	$a0, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a1, $s1
.LBB0_14:                               # %.lr.ph.preheader.i.i.i.i.i50
	st.d	$a1, $sp, 520
.Ltmp3:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp4:
# %bb.15:                               # %.noexc59
	move	$s5, $a0
	st.d	$a0, $sp, 488
	alsl.d	$a0, $fp, $a0, 2
	st.d	$a0, $sp, 504
	ori	$a1, $zero, 255
	move	$a0, $s5
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s5, $s4
	b	.LBB0_17
.LBB0_16:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i57
	move	$a0, $zero
	st.d	$zero, $sp, 552
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 536
	st.d	$zero, $sp, 528
	vst	$vr0, $sp, 512
	st.d	$zero, $sp, 504
	vst	$vr0, $sp, 488
.LBB0_17:                               # %.loopexit
	st.d	$a0, $sp, 496
	st.w	$zero, $sp, 484
.Ltmp6:
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp7:
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB0_22
# %bb.19:
	ld.d	$fp, $s3, 8
	beqz	$fp, .LBB0_22
# %bb.20:                               # %.lr.ph.i.preheader
	ld.d	$s1, $s3, 0
	.p2align	4, , 16
.LBB0_21:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s1, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s1, 0
	addi.d	$fp, $fp, -1
	addi.d	$s1, $s1, 1
	bnez	$fp, .LBB0_21
.LBB0_22:                               # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s7, $zero
	move	$s8, $zero
	addi.d	$s4, $sp, 72
	addi.d	$a0, $s0, 992
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s1, $a0, -1973
	ori	$s2, $zero, 16
	addi.w	$fp, $zero, -1
	b	.LBB0_26
.LBB0_23:                               #   in Loop: Header=BB0_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB0_24:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a0, $sp, 56
	st.d	$a0, $s5, 8
	ld.d	$a0, $s0, 1040
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 1040
.LBB0_25:                               # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB0_26 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$s7, $s7, 432
.LBB0_26:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.w	$a3, $a3, $a4
	bge	$s8, $a3, .LBB0_56
# %bb.27:                               #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s1
	add.d	$a1, $s8, $a1
	beqz	$a1, .LBB0_29
# %bb.28:                               #   in Loop: Header=BB0_26 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB0_30
	.p2align	4, , 16
.LBB0_29:                               #   in Loop: Header=BB0_26 Depth=1
	add.d	$a0, $a2, $s7
.LBB0_30:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s5, $a0, 240
	st.d	$s4, $sp, 56
	st.d	$a1, $sp, 560
	move	$a0, $s4
	bltu	$a1, $s2, .LBB0_33
# %bb.31:                               # %.noexc.i.i
                                        #   in Loop: Header=BB0_26 Depth=1
.Ltmp12:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 560
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp13:
# %bb.32:                               # %.noexc61
                                        #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a1, $sp, 560
	st.d	$a0, $sp, 56
	st.d	$a1, $sp, 72
.LBB0_33:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB0_26 Depth=1
	beq	$a1, $fp, .LBB0_36
# %bb.34:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB0_26 Depth=1
	bnez	$a1, .LBB0_39
# %bb.35:                               #   in Loop: Header=BB0_26 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
.LBB0_36:                               #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	bne	$a2, $a0, .LBB0_40
.LBB0_37:                               #   in Loop: Header=BB0_26 Depth=1
	ld.d	$s5, $sp, 56
	beqz	$a2, .LBB0_45
# %bb.38:                               #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a1, $s3, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	bne	$s5, $s4, .LBB0_41
	b	.LBB0_42
	.p2align	4, , 16
.LBB0_39:                               #   in Loop: Header=BB0_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	beq	$a2, $a0, .LBB0_37
.LBB0_40:                               # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB0_26 Depth=1
	ld.d	$s5, $sp, 56
	move	$s6, $zero
	beq	$s5, $s4, .LBB0_42
.LBB0_41:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB0_42:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB0_26 Depth=1
	beqz	$s6, .LBB0_25
# %bb.43:                               #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a0, $s0, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s1
	add.d	$a2, $s8, $a2
	beqz	$a2, .LBB0_46
# %bb.44:                               #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB0_47
.LBB0_45:                               #   in Loop: Header=BB0_26 Depth=1
	ori	$s6, $zero, 1
	bne	$s5, $s4, .LBB0_41
	b	.LBB0_42
.LBB0_46:                               #   in Loop: Header=BB0_26 Depth=1
	add.d	$a0, $a1, $s7
.LBB0_47:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit63
                                        #   in Loop: Header=BB0_26 Depth=1
	ldptr.w	$a6, $s0, 2792
.Ltmp15:
	addi.d	$a1, $sp, 484
	st.d	$a1, $sp, 16
	addi.d	$a1, $sp, 88
	st.d	$a1, $sp, 8
	addi.d	$a4, $sp, 512
	addi.d	$a5, $sp, 488
	addi.d	$a7, $sp, 536
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.d	$a1, $sp, 0
	move	$a1, $s3
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp16:
# %bb.48:                               #   in Loop: Header=BB0_26 Depth=1
	ld.d	$a0, $s0, 1056
	ld.d	$s5, $s0, 1040
	addi.d	$a0, $a0, -32
	beq	$s5, $a0, .LBB0_55
# %bb.49:                               #   in Loop: Header=BB0_26 Depth=1
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $s3, 8
	ld.d	$s6, $s3, 0
	st.d	$a1, $sp, 56
	bltu	$a1, $s2, .LBB0_52
# %bb.50:                               # %.noexc.i.i66
                                        #   in Loop: Header=BB0_26 Depth=1
.Ltmp17:
	addi.d	$a1, $sp, 56
	move	$a0, $s5
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp18:
# %bb.51:                               # %.noexc67
                                        #   in Loop: Header=BB0_26 Depth=1
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 56
	st.d	$a1, $s5, 16
.LBB0_52:                               # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB0_26 Depth=1
	beq	$a1, $fp, .LBB0_24
# %bb.53:                               # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB0_26 Depth=1
	bnez	$a1, .LBB0_23
# %bb.54:                               #   in Loop: Header=BB0_26 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB0_24
.LBB0_55:                               #   in Loop: Header=BB0_26 Depth=1
.Ltmp19:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp20:
	b	.LBB0_25
.LBB0_56:
.Ltmp9:
	addi.d	$a1, $sp, 88
	addi.d	$a2, $sp, 484
	addi.d	$s1, $sp, 88
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp10:
# %bb.57:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s1
	ld.d	$a0, $sp, 184
	st.d	$a2, $sp, 104
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 200
	st.d	$a1, $sp, 112
	beq	$a0, $a2, .LBB0_59
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB0_59:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 88
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 96
	addi.d	$a0, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 488
	beqz	$a0, .LBB0_61
# %bb.60:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB0_61:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB0_63
# %bb.62:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB0_63:                               # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB0_65
# %bb.64:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB0_65:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit71
	ld.d	$s8, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 600                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 608                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 616                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 624                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 632                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 640                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 648                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 656
	ret
.LBB0_66:                               # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB0_67:
.Ltmp5:
	move	$fp, $a0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB0_76
	b	.LBB0_79
.LBB0_68:
.Ltmp2:
	move	$fp, $a0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB0_77
	b	.LBB0_80
.LBB0_69:
.Ltmp11:
	b	.LBB0_73
.LBB0_70:
.Ltmp8:
	move	$fp, $a0
	b	.LBB0_74
.LBB0_71:
.Ltmp14:
	b	.LBB0_73
.LBB0_72:
.Ltmp21:
.LBB0_73:
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB0_74:
	ld.d	$a0, $sp, 488
	bnez	$a0, .LBB0_78
# %bb.75:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit73
	ld.d	$a0, $sp, 512
	bnez	$a0, .LBB0_79
.LBB0_76:                               # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit75
	ld.d	$a0, $sp, 536
	bnez	$a0, .LBB0_80
.LBB0_77:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit77
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB0_78:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB0_76
.LBB0_79:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB0_77
.LBB0_80:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end0:
	.size	_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb, .Lfunc_end0-_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,"aG",@progbits,_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,comdat
	.p2align	2, 0x0
GCC_except_table0:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    # >> Call Site 1 <<
	.uleb128 .Ltmp0-.Lfunc_begin0           #   Call between .Lfunc_begin0 and .Ltmp0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0           #     jumps to .Ltmp2
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Ltmp3-.Ltmp1                  #   Call between .Ltmp1 and .Ltmp3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3-.Lfunc_begin0           # >> Call Site 4 <<
	.uleb128 .Ltmp4-.Ltmp3                  #   Call between .Ltmp3 and .Ltmp4
	.uleb128 .Ltmp5-.Lfunc_begin0           #     jumps to .Ltmp5
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp4-.Lfunc_begin0           # >> Call Site 5 <<
	.uleb128 .Ltmp6-.Ltmp4                  #   Call between .Ltmp4 and .Ltmp6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp6-.Lfunc_begin0           # >> Call Site 6 <<
	.uleb128 .Ltmp7-.Ltmp6                  #   Call between .Ltmp6 and .Ltmp7
	.uleb128 .Ltmp8-.Lfunc_begin0           #     jumps to .Ltmp8
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp7-.Lfunc_begin0           # >> Call Site 7 <<
	.uleb128 .Ltmp12-.Ltmp7                 #   Call between .Ltmp7 and .Ltmp12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp12-.Lfunc_begin0          # >> Call Site 8 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.uleb128 .Ltmp14-.Lfunc_begin0          #     jumps to .Ltmp14
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp13-.Lfunc_begin0          # >> Call Site 9 <<
	.uleb128 .Ltmp15-.Ltmp13                #   Call between .Ltmp13 and .Ltmp15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp15-.Lfunc_begin0          # >> Call Site 10 <<
	.uleb128 .Ltmp20-.Ltmp15                #   Call between .Ltmp15 and .Ltmp20
	.uleb128 .Ltmp21-.Lfunc_begin0          #     jumps to .Ltmp21
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp9-.Lfunc_begin0           # >> Call Site 11 <<
	.uleb128 .Ltmp10-.Ltmp9                 #   Call between .Ltmp9 and .Ltmp10
	.uleb128 .Ltmp11-.Lfunc_begin0          #     jumps to .Ltmp11
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp10-.Lfunc_begin0          # >> Call Site 12 <<
	.uleb128 .Lfunc_end0-.Ltmp10            #   Call between .Ltmp10 and .Lfunc_end0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.LCPI1_0:
	.dword	8                               # 0x8
	.dword	8315736636066521431             # 0x73676e696e726157
	.text
	.globl	_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a2
	ld.w	$a2, $a2, 0
	beqz	$a2, .LBB1_59
# %bb.1:
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 3
	bne	$a2, $a0, .LBB1_5
# %bb.2:
	ld.d	$a0, $s1, 64
	addi.d	$s2, $sp, 56
	st.d	$s2, $sp, 40
	st.d	$zero, $sp, 48
	st.b	$zero, $sp, 56
	beqz	$a0, .LBB1_11
# %bb.3:
	ld.d	$a1, $s1, 48
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB1_11
# %bb.4:
	ld.d	$a3, $s1, 56
	sub.d	$a4, $a0, $a3
.Ltmp22:
	addi.d	$a0, $sp, 40
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp23:
	b	.LBB1_12
.LBB1_5:                                # %._crit_edge.i.i
	pcalau12i	$a0, %pc_hi20(.LCPI1_0)
	vld	$vr0, $a0, %pc_lo12(.LCPI1_0)
	addi.d	$s4, $sp, 56
	st.d	$s4, $sp, 40
	vst	$vr0, $sp, 48
	ori	$a0, $zero, 2
	st.b	$zero, $sp, 64
	bne	$a2, $a0, .LBB1_7
# %bb.6:
.Ltmp30:
	pcalau12i	$a0, %pc_hi20(.L.str.205)
	addi.d	$a3, $a0, %pc_lo12(.L.str.205)
	addi.d	$a0, $sp, 40
	ori	$a2, $zero, 8
	ori	$a4, $zero, 12
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp31:
.LBB1_7:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB1_52
# %bb.8:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a0, $a0, $a1
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB1_60
# %bb.9:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB1_16
# %bb.10:
	ld.bu	$a0, $s2, 67
	b	.LBB1_18
.LBB1_11:
	addi.d	$a1, $s1, 96
.Ltmp24:
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp25:
.LBB1_12:                               # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 40
	ld.d	$a2, $sp, 48
	addi.d	$a0, $fp, 1880
.Ltmp27:
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp28:
# %bb.13:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB1_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1_15:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.w	$a0, $s0, 0
	stptr.w	$a0, $fp, 2256
	b	.LBB1_59
.LBB1_16:
.Ltmp32:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp33:
# %bb.17:                               # %.noexc59
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp34:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp35:
.LBB1_18:                               # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp36:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp37:
# %bb.19:                               # %.noexc61
.Ltmp38:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp39:
# %bb.20:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a1, $sp, 40
	ld.d	$a2, $sp, 48
.Ltmp40:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp41:
# %bb.21:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit26
.Ltmp42:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.206)
	addi.d	$a1, $a0, %pc_lo12(.L.str.206)
	ori	$a2, $zero, 57
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp43:
# %bb.22:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB1_60
# %bb.23:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i64
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB1_25
# %bb.24:
	ld.bu	$a0, $s3, 67
	b	.LBB1_27
.LBB1_25:
.Ltmp44:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp45:
# %bb.26:                               # %.noexc69
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp46:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp47:
.LBB1_27:                               # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i66
.Ltmp48:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp49:
# %bb.28:                               # %.noexc71
.Ltmp50:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp51:
# %bb.29:                               # %_ZNSolsEPFRSoS_E.exit29
.Ltmp52:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s2, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.207)
	addi.d	$a1, $a0, %pc_lo12(.L.str.207)
	ori	$a2, $zero, 70
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp53:
# %bb.30:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit31
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB1_60
# %bb.31:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i75
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB1_33
# %bb.32:
	ld.bu	$a0, $s2, 67
	b	.LBB1_35
.LBB1_33:
.Ltmp54:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp55:
# %bb.34:                               # %.noexc80
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp56:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp57:
.LBB1_35:                               # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i77
.Ltmp58:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp59:
# %bb.36:                               # %.noexc82
.Ltmp60:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp61:
# %bb.37:                               # %_ZNSolsEPFRSoS_E.exit33
	ld.d	$a0, $s1, 64
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB1_40
# %bb.38:                               # %_ZNSolsEPFRSoS_E.exit33
	ld.d	$a1, $s1, 48
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB1_40
# %bb.39:
	ld.d	$a3, $s1, 56
	sub.d	$a4, $a0, $a3
.Ltmp62:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp63:
	b	.LBB1_41
.LBB1_40:
	addi.d	$a1, $s1, 96
.Ltmp64:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp65:
.LBB1_41:                               # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit41
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
.Ltmp67:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp68:
# %bb.42:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit43
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB1_62
# %bb.43:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i86
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB1_45
# %bb.44:
	ld.bu	$a0, $s2, 67
	b	.LBB1_47
.LBB1_45:
.Ltmp69:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp70:
# %bb.46:                               # %.noexc91
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp71:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp72:
.LBB1_47:                               # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i88
.Ltmp73:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp74:
# %bb.48:                               # %.noexc93
.Ltmp75:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp76:
# %bb.49:                               # %_ZNSolsEPFRSoS_E.exit45
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB1_51
# %bb.50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i46
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1_51:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	move	$a0, $zero
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
.LBB1_52:
	ld.w	$a0, $s0, 0
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB1_57
# %bb.53:
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a2, $a0, 12
	beq	$a1, $a2, .LBB1_56
# %bb.54:
.Ltmp77:
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(sleep)
	jirl	$ra, $ra, 0
.Ltmp78:
# %bb.55:
	ld.d	$a0, $fp, 520
.LBB1_56:                               # %.invoke96
.Ltmp79:
	pcaddu18i	$ra, %call36(_ZN2PP4Comm19global_abort_parserEv)
	jirl	$ra, $ra, 0
.Ltmp80:
.LBB1_57:
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB1_59
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i52
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1_59:
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB1_60:                               # %.invoke
.Ltmp84:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp85:
# %bb.61:                               # %.cont
.LBB1_62:
.Ltmp81:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp82:
# %bb.63:                               # %.noexc90
.LBB1_64:
.Ltmp66:
	b	.LBB1_70
.LBB1_65:
.Ltmp29:
	b	.LBB1_67
.LBB1_66:
.Ltmp26:
.LBB1_67:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s2, .LBB1_76
# %bb.68:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB1_75
.LBB1_69:
.Ltmp83:
.LBB1_70:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s3, .LBB1_73
# %bb.71:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i49
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB1_73
.LBB1_72:
.Ltmp86:
	move	$fp, $a0
.LBB1_73:
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB1_76
# %bb.74:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i55
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
.LBB1_75:                               # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1_76:                               # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end1:
	.size	_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end1-_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table1:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Ltmp22-.Lfunc_begin1          # >> Call Site 1 <<
	.uleb128 .Ltmp23-.Ltmp22                #   Call between .Ltmp22 and .Ltmp23
	.uleb128 .Ltmp26-.Lfunc_begin1          #     jumps to .Ltmp26
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp30-.Lfunc_begin1          # >> Call Site 2 <<
	.uleb128 .Ltmp31-.Ltmp30                #   Call between .Ltmp30 and .Ltmp31
	.uleb128 .Ltmp86-.Lfunc_begin1          #     jumps to .Ltmp86
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp24-.Lfunc_begin1          # >> Call Site 3 <<
	.uleb128 .Ltmp25-.Ltmp24                #   Call between .Ltmp24 and .Ltmp25
	.uleb128 .Ltmp26-.Lfunc_begin1          #     jumps to .Ltmp26
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp27-.Lfunc_begin1          # >> Call Site 4 <<
	.uleb128 .Ltmp28-.Ltmp27                #   Call between .Ltmp27 and .Ltmp28
	.uleb128 .Ltmp29-.Lfunc_begin1          #     jumps to .Ltmp29
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp28-.Lfunc_begin1          # >> Call Site 5 <<
	.uleb128 .Ltmp32-.Ltmp28                #   Call between .Ltmp28 and .Ltmp32
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp32-.Lfunc_begin1          # >> Call Site 6 <<
	.uleb128 .Ltmp61-.Ltmp32                #   Call between .Ltmp32 and .Ltmp61
	.uleb128 .Ltmp86-.Lfunc_begin1          #     jumps to .Ltmp86
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp62-.Lfunc_begin1          # >> Call Site 7 <<
	.uleb128 .Ltmp65-.Ltmp62                #   Call between .Ltmp62 and .Ltmp65
	.uleb128 .Ltmp66-.Lfunc_begin1          #     jumps to .Ltmp66
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp67-.Lfunc_begin1          # >> Call Site 8 <<
	.uleb128 .Ltmp76-.Ltmp67                #   Call between .Ltmp67 and .Ltmp76
	.uleb128 .Ltmp83-.Lfunc_begin1          #     jumps to .Ltmp83
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp76-.Lfunc_begin1          # >> Call Site 9 <<
	.uleb128 .Ltmp77-.Ltmp76                #   Call between .Ltmp76 and .Ltmp77
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp77-.Lfunc_begin1          # >> Call Site 10 <<
	.uleb128 .Ltmp80-.Ltmp77                #   Call between .Ltmp77 and .Ltmp80
	.uleb128 .Ltmp86-.Lfunc_begin1          #     jumps to .Ltmp86
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp80-.Lfunc_begin1          # >> Call Site 11 <<
	.uleb128 .Ltmp84-.Ltmp80                #   Call between .Ltmp80 and .Ltmp84
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp84-.Lfunc_begin1          # >> Call Site 12 <<
	.uleb128 .Ltmp85-.Ltmp84                #   Call between .Ltmp84 and .Ltmp85
	.uleb128 .Ltmp86-.Lfunc_begin1          #     jumps to .Ltmp86
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp81-.Lfunc_begin1          # >> Call Site 13 <<
	.uleb128 .Ltmp82-.Ltmp81                #   Call between .Ltmp81 and .Ltmp82
	.uleb128 .Ltmp83-.Lfunc_begin1          #     jumps to .Ltmp83
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp82-.Lfunc_begin1          # >> Call Site 14 <<
	.uleb128 .Lfunc_end1-.Ltmp82            #   Call between .Ltmp82 and .Lfunc_end1
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,"axG",@progbits,_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,comdat
	.weak	_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	addi.d	$sp, $sp, -656
	.cfi_def_cfa_offset 656
	st.d	$ra, $sp, 648                   # 8-byte Folded Spill
	st.d	$fp, $sp, 640                   # 8-byte Folded Spill
	st.d	$s0, $sp, 632                   # 8-byte Folded Spill
	st.d	$s1, $sp, 624                   # 8-byte Folded Spill
	st.d	$s2, $sp, 616                   # 8-byte Folded Spill
	st.d	$s3, $sp, 608                   # 8-byte Folded Spill
	st.d	$s4, $sp, 600                   # 8-byte Folded Spill
	st.d	$s5, $sp, 592                   # 8-byte Folded Spill
	st.d	$s6, $sp, 584                   # 8-byte Folded Spill
	st.d	$s7, $sp, 576                   # 8-byte Folded Spill
	st.d	$s8, $sp, 568                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a3, 8
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a3, $a3, 0
	sub.d	$a5, $a5, $a3
	srai.d	$a5, $a5, 2
	addi.w	$a6, $a5, 0
	st.d	$a4, $sp, 40                    # 8-byte Folded Spill
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	move	$s3, $a1
	move	$s0, $a0
	blez	$a6, .LBB2_3
# %bb.1:                                # %.lr.ph.preheader
	bstrpick.d	$a0, $a5, 30, 0
	ori	$a1, $zero, 8
	bgeu	$a0, $a1, .LBB2_4
# %bb.2:
	move	$a1, $zero
	ori	$fp, $zero, 1
	b	.LBB2_7
.LBB2_3:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i.thread
	ori	$fp, $zero, 1
	b	.LBB2_11
.LBB2_4:                                # %vector.ph
	bstrpick.d	$a1, $a5, 30, 3
	slli.d	$a1, $a1, 3
	vrepli.w	$vr0, 1
	addi.d	$a2, $a3, 16
	move	$a4, $a1
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB2_5:                                # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a2, -16
	vld	$vr3, $a2, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a4, $a4, -8
	addi.d	$a2, $a2, 32
	bnez	$a4, .LBB2_5
# %bb.6:                                # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$fp, $vr0, 0
	beq	$a0, $a1, .LBB2_9
.LBB2_7:                                # %.lr.ph.preheader99
	alsl.d	$a2, $a1, $a3, 2
	sub.d	$a0, $a0, $a1
	.p2align	4, , 16
.LBB2_8:                                # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a2, 0
	mul.w	$fp, $a1, $fp
	addi.d	$a0, $a0, -1
	addi.d	$a2, $a2, 4
	bnez	$a0, .LBB2_8
.LBB2_9:                                # %._crit_edge
	bltz	$fp, .LBB2_66
# %bb.10:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	beqz	$fp, .LBB2_16
.LBB2_11:                               # %.lr.ph.preheader.i.i.i.i.i
	slli.d	$s4, $fp, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 536
	alsl.d	$s1, $fp, $a0, 2
	st.d	$s1, $sp, 552
	move	$a1, $zero
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 544
	slli.d	$s5, $fp, 3
.Ltmp87:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp88:
# %bb.12:                               # %.noexc47
	st.d	$a0, $sp, 512
	alsl.d	$a1, $fp, $a0, 3
	st.d	$a1, $sp, 528
	st.d	$zero, $a0, 0
	ori	$a2, $zero, 1
	addi.d	$a1, $a0, 8
	beq	$fp, $a2, .LBB2_14
# %bb.13:                               # %.lr.ph.i.preheader.i.i.i.i.i
	add.d	$s1, $a0, $s5
	addi.d	$a2, $s5, -8
	move	$a0, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a1, $s1
.LBB2_14:                               # %.lr.ph.preheader.i.i.i.i.i50
	st.d	$a1, $sp, 520
.Ltmp90:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp91:
# %bb.15:                               # %.noexc59
	move	$s5, $a0
	st.d	$a0, $sp, 488
	alsl.d	$a0, $fp, $a0, 2
	st.d	$a0, $sp, 504
	ori	$a1, $zero, 255
	move	$a0, $s5
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s5, $s4
	b	.LBB2_17
.LBB2_16:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i57
	move	$a0, $zero
	st.d	$zero, $sp, 552
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 536
	st.d	$zero, $sp, 528
	vst	$vr0, $sp, 512
	st.d	$zero, $sp, 504
	vst	$vr0, $sp, 488
.LBB2_17:                               # %.loopexit
	st.d	$a0, $sp, 496
	st.w	$zero, $sp, 484
.Ltmp93:
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp94:
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB2_22
# %bb.19:
	ld.d	$fp, $s3, 8
	beqz	$fp, .LBB2_22
# %bb.20:                               # %.lr.ph.i.preheader
	ld.d	$s1, $s3, 0
	.p2align	4, , 16
.LBB2_21:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s1, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s1, 0
	addi.d	$fp, $fp, -1
	addi.d	$s1, $s1, 1
	bnez	$fp, .LBB2_21
.LBB2_22:                               # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s7, $zero
	move	$s8, $zero
	addi.d	$s4, $sp, 72
	addi.d	$a0, $s0, 992
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s1, $a0, -1973
	ori	$s2, $zero, 16
	addi.w	$fp, $zero, -1
	b	.LBB2_26
.LBB2_23:                               #   in Loop: Header=BB2_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB2_24:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a0, $sp, 56
	st.d	$a0, $s5, 8
	ld.d	$a0, $s0, 1040
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 1040
.LBB2_25:                               # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB2_26 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$s7, $s7, 432
.LBB2_26:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.w	$a3, $a3, $a4
	bge	$s8, $a3, .LBB2_56
# %bb.27:                               #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s1
	add.d	$a1, $s8, $a1
	beqz	$a1, .LBB2_29
# %bb.28:                               #   in Loop: Header=BB2_26 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB2_30
	.p2align	4, , 16
.LBB2_29:                               #   in Loop: Header=BB2_26 Depth=1
	add.d	$a0, $a2, $s7
.LBB2_30:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s5, $a0, 240
	st.d	$s4, $sp, 56
	st.d	$a1, $sp, 560
	move	$a0, $s4
	bltu	$a1, $s2, .LBB2_33
# %bb.31:                               # %.noexc.i.i
                                        #   in Loop: Header=BB2_26 Depth=1
.Ltmp99:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 560
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp100:
# %bb.32:                               # %.noexc61
                                        #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a1, $sp, 560
	st.d	$a0, $sp, 56
	st.d	$a1, $sp, 72
.LBB2_33:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB2_26 Depth=1
	beq	$a1, $fp, .LBB2_36
# %bb.34:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB2_26 Depth=1
	bnez	$a1, .LBB2_39
# %bb.35:                               #   in Loop: Header=BB2_26 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
.LBB2_36:                               #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	bne	$a2, $a0, .LBB2_40
.LBB2_37:                               #   in Loop: Header=BB2_26 Depth=1
	ld.d	$s5, $sp, 56
	beqz	$a2, .LBB2_45
# %bb.38:                               #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a1, $s3, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	bne	$s5, $s4, .LBB2_41
	b	.LBB2_42
	.p2align	4, , 16
.LBB2_39:                               #   in Loop: Header=BB2_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	beq	$a2, $a0, .LBB2_37
.LBB2_40:                               # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB2_26 Depth=1
	ld.d	$s5, $sp, 56
	move	$s6, $zero
	beq	$s5, $s4, .LBB2_42
.LBB2_41:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2_42:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB2_26 Depth=1
	beqz	$s6, .LBB2_25
# %bb.43:                               #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a0, $s0, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s1
	add.d	$a2, $s8, $a2
	beqz	$a2, .LBB2_46
# %bb.44:                               #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB2_47
.LBB2_45:                               #   in Loop: Header=BB2_26 Depth=1
	ori	$s6, $zero, 1
	bne	$s5, $s4, .LBB2_41
	b	.LBB2_42
.LBB2_46:                               #   in Loop: Header=BB2_26 Depth=1
	add.d	$a0, $a1, $s7
.LBB2_47:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit63
                                        #   in Loop: Header=BB2_26 Depth=1
	ldptr.w	$a6, $s0, 2792
.Ltmp102:
	addi.d	$a1, $sp, 484
	st.d	$a1, $sp, 16
	addi.d	$a1, $sp, 88
	st.d	$a1, $sp, 8
	addi.d	$a4, $sp, 512
	addi.d	$a5, $sp, 488
	addi.d	$a7, $sp, 536
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.d	$a1, $sp, 0
	move	$a1, $s3
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp103:
# %bb.48:                               #   in Loop: Header=BB2_26 Depth=1
	ld.d	$a0, $s0, 1056
	ld.d	$s5, $s0, 1040
	addi.d	$a0, $a0, -32
	beq	$s5, $a0, .LBB2_55
# %bb.49:                               #   in Loop: Header=BB2_26 Depth=1
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $s3, 8
	ld.d	$s6, $s3, 0
	st.d	$a1, $sp, 56
	bltu	$a1, $s2, .LBB2_52
# %bb.50:                               # %.noexc.i.i66
                                        #   in Loop: Header=BB2_26 Depth=1
.Ltmp104:
	addi.d	$a1, $sp, 56
	move	$a0, $s5
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp105:
# %bb.51:                               # %.noexc67
                                        #   in Loop: Header=BB2_26 Depth=1
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 56
	st.d	$a1, $s5, 16
.LBB2_52:                               # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB2_26 Depth=1
	beq	$a1, $fp, .LBB2_24
# %bb.53:                               # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB2_26 Depth=1
	bnez	$a1, .LBB2_23
# %bb.54:                               #   in Loop: Header=BB2_26 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB2_24
.LBB2_55:                               #   in Loop: Header=BB2_26 Depth=1
.Ltmp106:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp107:
	b	.LBB2_25
.LBB2_56:
.Ltmp96:
	addi.d	$a1, $sp, 88
	addi.d	$a2, $sp, 484
	addi.d	$s1, $sp, 88
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp97:
# %bb.57:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s1
	ld.d	$a0, $sp, 184
	st.d	$a2, $sp, 104
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 200
	st.d	$a1, $sp, 112
	beq	$a0, $a2, .LBB2_59
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2_59:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 88
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 96
	addi.d	$a0, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 488
	beqz	$a0, .LBB2_61
# %bb.60:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2_61:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB2_63
# %bb.62:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2_63:                               # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB2_65
# %bb.64:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2_65:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit71
	ld.d	$s8, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 600                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 608                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 616                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 624                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 632                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 640                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 648                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 656
	ret
.LBB2_66:                               # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB2_67:
.Ltmp92:
	move	$fp, $a0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB2_76
	b	.LBB2_79
.LBB2_68:
.Ltmp89:
	move	$fp, $a0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB2_77
	b	.LBB2_80
.LBB2_69:
.Ltmp98:
	b	.LBB2_73
.LBB2_70:
.Ltmp95:
	move	$fp, $a0
	b	.LBB2_74
.LBB2_71:
.Ltmp101:
	b	.LBB2_73
.LBB2_72:
.Ltmp108:
.LBB2_73:
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB2_74:
	ld.d	$a0, $sp, 488
	bnez	$a0, .LBB2_78
# %bb.75:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit73
	ld.d	$a0, $sp, 512
	bnez	$a0, .LBB2_79
.LBB2_76:                               # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit75
	ld.d	$a0, $sp, 536
	bnez	$a0, .LBB2_80
.LBB2_77:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit77
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB2_78:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB2_76
.LBB2_79:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB2_77
.LBB2_80:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end2:
	.size	_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb, .Lfunc_end2-_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,"aG",@progbits,_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb,comdat
	.p2align	2, 0x0
GCC_except_table2:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2    # >> Call Site 1 <<
	.uleb128 .Ltmp87-.Lfunc_begin2          #   Call between .Lfunc_begin2 and .Ltmp87
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp87-.Lfunc_begin2          # >> Call Site 2 <<
	.uleb128 .Ltmp88-.Ltmp87                #   Call between .Ltmp87 and .Ltmp88
	.uleb128 .Ltmp89-.Lfunc_begin2          #     jumps to .Ltmp89
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp88-.Lfunc_begin2          # >> Call Site 3 <<
	.uleb128 .Ltmp90-.Ltmp88                #   Call between .Ltmp88 and .Ltmp90
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp90-.Lfunc_begin2          # >> Call Site 4 <<
	.uleb128 .Ltmp91-.Ltmp90                #   Call between .Ltmp90 and .Ltmp91
	.uleb128 .Ltmp92-.Lfunc_begin2          #     jumps to .Ltmp92
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp91-.Lfunc_begin2          # >> Call Site 5 <<
	.uleb128 .Ltmp93-.Ltmp91                #   Call between .Ltmp91 and .Ltmp93
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp93-.Lfunc_begin2          # >> Call Site 6 <<
	.uleb128 .Ltmp94-.Ltmp93                #   Call between .Ltmp93 and .Ltmp94
	.uleb128 .Ltmp95-.Lfunc_begin2          #     jumps to .Ltmp95
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp94-.Lfunc_begin2          # >> Call Site 7 <<
	.uleb128 .Ltmp99-.Ltmp94                #   Call between .Ltmp94 and .Ltmp99
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp99-.Lfunc_begin2          # >> Call Site 8 <<
	.uleb128 .Ltmp100-.Ltmp99               #   Call between .Ltmp99 and .Ltmp100
	.uleb128 .Ltmp101-.Lfunc_begin2         #     jumps to .Ltmp101
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp100-.Lfunc_begin2         # >> Call Site 9 <<
	.uleb128 .Ltmp102-.Ltmp100              #   Call between .Ltmp100 and .Ltmp102
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp102-.Lfunc_begin2         # >> Call Site 10 <<
	.uleb128 .Ltmp107-.Ltmp102              #   Call between .Ltmp102 and .Ltmp107
	.uleb128 .Ltmp108-.Lfunc_begin2         #     jumps to .Ltmp108
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp96-.Lfunc_begin2          # >> Call Site 11 <<
	.uleb128 .Ltmp97-.Ltmp96                #   Call between .Ltmp96 and .Ltmp97
	.uleb128 .Ltmp98-.Lfunc_begin2          #     jumps to .Ltmp98
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp97-.Lfunc_begin2          # >> Call Site 12 <<
	.uleb128 .Lfunc_end2-.Ltmp97            #   Call between .Ltmp97 and .Lfunc_end2
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb,"axG",@progbits,_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb,comdat
	.weak	_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	addi.d	$s5, $sp, 24
	st.d	$s5, $sp, 8
	beqz	$a1, .LBB3_11
# %bb.1:
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s3, $a1
	move	$s2, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 40
	move	$a0, $s5
	bltu	$s4, $a1, .LBB3_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB3_3:                                # %._crit_edge.i.i
	beqz	$s4, .LBB3_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB3_6
# %bb.5:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB3_7
.LBB3_6:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB3_7:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
.Ltmp109:
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser7get_intIiEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb)
	jirl	$ra, $ra, 0
.Ltmp110:
# %bb.8:
	ld.d	$a0, $sp, 8
	beq	$a0, $s5, .LBB3_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB3_10:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB3_11:                               # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB3_12:
.Ltmp111:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s5, .LBB3_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB3_14:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end3:
	.size	_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb, .Lfunc_end3-_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb,"aG",@progbits,_ZN2PP11PowerParser7get_intIiEEvPKcPT_RKSt6vectorIiSaIiEEb,comdat
	.p2align	2, 0x0
GCC_except_table3:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin3-.Lfunc_begin3    # >> Call Site 1 <<
	.uleb128 .Ltmp109-.Lfunc_begin3         #   Call between .Lfunc_begin3 and .Ltmp109
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp109-.Lfunc_begin3         # >> Call Site 2 <<
	.uleb128 .Ltmp110-.Ltmp109              #   Call between .Ltmp109 and .Ltmp110
	.uleb128 .Ltmp111-.Lfunc_begin3         #     jumps to .Ltmp111
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp110-.Lfunc_begin3         # >> Call Site 3 <<
	.uleb128 .Lfunc_end3-.Ltmp110           #   Call between .Ltmp110 and .Lfunc_end3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.p2align	5
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	addi.d	$s2, $a0, 16
	st.d	$s2, $a0, 0
	beqz	$a1, .LBB4_8
# %bb.1:
	move	$s0, $a1
	move	$fp, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a0, $zero, 16
	st.d	$s1, $sp, 0
	bltu	$s1, $a0, .LBB4_3
# %bb.2:                                # %.noexc
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	move	$s2, $a0
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB4_3:                                # %._crit_edge.i
	beqz	$s1, .LBB4_7
# %bb.4:                                # %._crit_edge.i
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB4_6
# %bb.5:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s2, 0
	b	.LBB4_7
.LBB4_6:
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_7:
	ld.d	$a0, $sp, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB4_8:
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end4:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_, .Lfunc_end4-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb,"axG",@progbits,_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb,comdat
	.weak	_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	addi.d	$s5, $sp, 24
	st.d	$s5, $sp, 8
	beqz	$a1, .LBB5_11
# %bb.1:
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s3, $a1
	move	$s2, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 40
	move	$a0, $s5
	bltu	$s4, $a1, .LBB5_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB5_3:                                # %._crit_edge.i.i
	beqz	$s4, .LBB5_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB5_6
# %bb.5:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB5_7
.LBB5_6:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB5_7:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
.Ltmp112:
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser7get_intIlEEvRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_RKSt6vectorIiSaIiEEb)
	jirl	$ra, $ra, 0
.Ltmp113:
# %bb.8:
	ld.d	$a0, $sp, 8
	beq	$a0, $s5, .LBB5_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB5_10:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB5_11:                               # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB5_12:
.Ltmp114:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s5, .LBB5_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB5_14:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end5:
	.size	_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb, .Lfunc_end5-_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb,"aG",@progbits,_ZN2PP11PowerParser7get_intIlEEvPKcPT_RKSt6vectorIiSaIiEEb,comdat
	.p2align	2, 0x0
GCC_except_table5:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4    # >> Call Site 1 <<
	.uleb128 .Ltmp112-.Lfunc_begin4         #   Call between .Lfunc_begin4 and .Ltmp112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp112-.Lfunc_begin4         # >> Call Site 2 <<
	.uleb128 .Ltmp113-.Ltmp112              #   Call between .Ltmp112 and .Ltmp113
	.uleb128 .Ltmp114-.Lfunc_begin4         #     jumps to .Ltmp114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp113-.Lfunc_begin4         # >> Call Site 3 <<
	.uleb128 .Lfunc_end5-.Ltmp113           #   Call between .Ltmp113 and .Lfunc_end5
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParserC2Ev         # -- Begin function _ZN2PP11PowerParserC2Ev
	.p2align	5
	.type	_ZN2PP11PowerParserC2Ev,@function
_ZN2PP11PowerParserC2Ev:                # @_ZN2PP11PowerParserC2Ev
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 544
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	st.d	$a0, $fp, 528
	st.d	$zero, $fp, 536
	st.b	$zero, $fp, 544
	addi.d	$a0, $fp, 576
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	st.d	$a0, $fp, 560
	st.d	$zero, $fp, 568
	st.b	$zero, $fp, 576
	addi.d	$s0, $fp, 592
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp115:
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp116:
# %bb.1:                                # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit
	addi.d	$a0, $fp, 688
	st.w	$zero, $fp, 688
	st.d	$zero, $fp, 696
	st.d	$a0, $fp, 704
	st.d	$a0, $fp, 712
	st.d	$zero, $fp, 720
	addi.d	$a0, $fp, 736
	st.w	$zero, $fp, 736
	st.d	$zero, $fp, 744
	st.d	$a0, $fp, 752
	st.d	$a0, $fp, 760
	st.d	$zero, $fp, 768
	addi.d	$a0, $fp, 784
	st.w	$zero, $fp, 784
	st.d	$zero, $fp, 792
	st.d	$a0, $fp, 800
	st.d	$a0, $fp, 808
	addi.d	$a0, $fp, 816
	addi.d	$s1, $fp, 824
	ori	$a2, $zero, 88
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp118:
	move	$a0, $s1
	move	$a1, $zero
	st.d	$s0, $sp, 48                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp119:
# %bb.2:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EEC2Ev.exit
	addi.d	$s2, $fp, 904
	ori	$a2, $zero, 80
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp121:
	move	$a0, $s2
	move	$a1, $zero
	st.d	$s1, $sp, 40                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp122:
# %bb.3:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EEC2Ev.exit31
	addi.d	$s3, $fp, 992
	ori	$a2, $zero, 80
	move	$a0, $s3
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp124:
	move	$a0, $s3
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp125:
# %bb.4:                                # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit32
	addi.d	$s4, $fp, 1080
.Ltmp127:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp128:
# %bb.5:
	addi.d	$s5, $fp, 1472
.Ltmp130:
	move	$a0, $s5
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp131:
# %bb.6:
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	addi.d	$s5, $fp, 1864
.Ltmp133:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp134:
# %bb.7:
	st.d	$s5, $sp, 8                     # 8-byte Folded Spill
	ori	$a0, $zero, 2280
	add.d	$a1, $fp, $a0
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	stptr.d	$a1, $fp, 2264
	stptr.d	$zero, $fp, 2272
	stx.b	$zero, $fp, $a0
	addi.d	$s5, $fp, 2047
	addi.d	$s7, $s5, 249
	ori	$a2, $zero, 80
	move	$a0, $s7
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp136:
	move	$a0, $s7
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp137:
# %bb.8:                                # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEC2Ev.exit
	addi.d	$s8, $s5, 329
	ori	$a2, $zero, 80
	move	$a0, $s8
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp139:
	move	$a0, $s8
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp140:
# %bb.9:                                # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEC2Ev.exit
	addi.d	$s1, $s5, 417
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp142:
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp143:
# %bb.10:                               # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit33
	addi.d	$s4, $s5, 497
	ori	$a2, $zero, 80
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp145:
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp146:
# %bb.11:                               # %_ZNSt5dequeIbSaIbEEC2Ev.exit
	addi.d	$s0, $s5, 585
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp148:
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp149:
# %bb.12:                               # %_ZNSt5dequeIbSaIbEEC2Ev.exit34
	addi.d	$s5, $s5, 665
	ori	$a2, $zero, 80
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp151:
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp152:
# %bb.13:                               # %_ZNSt5dequeIiSaIiEEC2Ev.exit
.Ltmp154:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp155:
# %bb.14:
.Ltmp156:
	move	$s6, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4CommC1Ev)
	jirl	$ra, $ra, 0
.Ltmp157:
# %bb.15:
	st.d	$s6, $fp, 520
.Ltmp159:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser4initEv)
	jirl	$ra, $ra, 0
.Ltmp160:
# %bb.16:
	stptr.w	$zero, $fp, 2456
	st.d	$zero, $fp, 512
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB6_17:
.Ltmp158:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	ori	$a1, $zero, 16
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB6_32
.LBB6_18:
.Ltmp153:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_33
.LBB6_19:
.Ltmp150:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_34
.LBB6_20:
.Ltmp147:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_35
.LBB6_21:
.Ltmp144:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_36
.LBB6_22:
.Ltmp141:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_37
.LBB6_23:
.Ltmp138:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_38
.LBB6_24:
.Ltmp135:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_41
.LBB6_25:
.Ltmp132:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_42
.LBB6_26:
.Ltmp129:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_43
.LBB6_27:
.Ltmp126:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_44
.LBB6_28:
.Ltmp123:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_45
.LBB6_29:
.Ltmp120:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_46
.LBB6_30:
.Ltmp117:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB6_47
.LBB6_31:
.Ltmp161:
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
.LBB6_32:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEED2Ev)
	jirl	$ra, $ra, 0
.LBB6_33:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB6_34:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB6_35:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB6_36:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB6_37:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB6_38:
	ldptr.d	$a0, $fp, 2264
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB6_40
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB6_40:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB6_41:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB6_42:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB6_43:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB6_44:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB6_45:
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB6_46:
	addi.d	$s0, $fp, 680
	addi.d	$s1, $fp, 728
	addi.d	$a0, $fp, 776
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB6_47:
	ld.d	$a0, $fp, 560
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB6_50
# %bb.48:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	ld.d	$a0, $fp, 528
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB6_51
.LBB6_49:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB6_50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 528
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB6_49
.LBB6_51:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end6:
	.size	_ZN2PP11PowerParserC2Ev, .Lfunc_end6-_ZN2PP11PowerParserC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table6:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp115-.Lfunc_begin5         #   Call between .Lfunc_begin5 and .Ltmp115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp115-.Lfunc_begin5         # >> Call Site 2 <<
	.uleb128 .Ltmp116-.Ltmp115              #   Call between .Ltmp115 and .Ltmp116
	.uleb128 .Ltmp117-.Lfunc_begin5         #     jumps to .Ltmp117
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp116-.Lfunc_begin5         # >> Call Site 3 <<
	.uleb128 .Ltmp118-.Ltmp116              #   Call between .Ltmp116 and .Ltmp118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp118-.Lfunc_begin5         # >> Call Site 4 <<
	.uleb128 .Ltmp119-.Ltmp118              #   Call between .Ltmp118 and .Ltmp119
	.uleb128 .Ltmp120-.Lfunc_begin5         #     jumps to .Ltmp120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp119-.Lfunc_begin5         # >> Call Site 5 <<
	.uleb128 .Ltmp121-.Ltmp119              #   Call between .Ltmp119 and .Ltmp121
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp121-.Lfunc_begin5         # >> Call Site 6 <<
	.uleb128 .Ltmp122-.Ltmp121              #   Call between .Ltmp121 and .Ltmp122
	.uleb128 .Ltmp123-.Lfunc_begin5         #     jumps to .Ltmp123
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp122-.Lfunc_begin5         # >> Call Site 7 <<
	.uleb128 .Ltmp124-.Ltmp122              #   Call between .Ltmp122 and .Ltmp124
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp124-.Lfunc_begin5         # >> Call Site 8 <<
	.uleb128 .Ltmp125-.Ltmp124              #   Call between .Ltmp124 and .Ltmp125
	.uleb128 .Ltmp126-.Lfunc_begin5         #     jumps to .Ltmp126
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp127-.Lfunc_begin5         # >> Call Site 9 <<
	.uleb128 .Ltmp128-.Ltmp127              #   Call between .Ltmp127 and .Ltmp128
	.uleb128 .Ltmp129-.Lfunc_begin5         #     jumps to .Ltmp129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp130-.Lfunc_begin5         # >> Call Site 10 <<
	.uleb128 .Ltmp131-.Ltmp130              #   Call between .Ltmp130 and .Ltmp131
	.uleb128 .Ltmp132-.Lfunc_begin5         #     jumps to .Ltmp132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp133-.Lfunc_begin5         # >> Call Site 11 <<
	.uleb128 .Ltmp134-.Ltmp133              #   Call between .Ltmp133 and .Ltmp134
	.uleb128 .Ltmp135-.Lfunc_begin5         #     jumps to .Ltmp135
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp134-.Lfunc_begin5         # >> Call Site 12 <<
	.uleb128 .Ltmp136-.Ltmp134              #   Call between .Ltmp134 and .Ltmp136
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp136-.Lfunc_begin5         # >> Call Site 13 <<
	.uleb128 .Ltmp137-.Ltmp136              #   Call between .Ltmp136 and .Ltmp137
	.uleb128 .Ltmp138-.Lfunc_begin5         #     jumps to .Ltmp138
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp137-.Lfunc_begin5         # >> Call Site 14 <<
	.uleb128 .Ltmp139-.Ltmp137              #   Call between .Ltmp137 and .Ltmp139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp139-.Lfunc_begin5         # >> Call Site 15 <<
	.uleb128 .Ltmp140-.Ltmp139              #   Call between .Ltmp139 and .Ltmp140
	.uleb128 .Ltmp141-.Lfunc_begin5         #     jumps to .Ltmp141
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp140-.Lfunc_begin5         # >> Call Site 16 <<
	.uleb128 .Ltmp142-.Ltmp140              #   Call between .Ltmp140 and .Ltmp142
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp142-.Lfunc_begin5         # >> Call Site 17 <<
	.uleb128 .Ltmp143-.Ltmp142              #   Call between .Ltmp142 and .Ltmp143
	.uleb128 .Ltmp144-.Lfunc_begin5         #     jumps to .Ltmp144
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp143-.Lfunc_begin5         # >> Call Site 18 <<
	.uleb128 .Ltmp145-.Ltmp143              #   Call between .Ltmp143 and .Ltmp145
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp145-.Lfunc_begin5         # >> Call Site 19 <<
	.uleb128 .Ltmp146-.Ltmp145              #   Call between .Ltmp145 and .Ltmp146
	.uleb128 .Ltmp147-.Lfunc_begin5         #     jumps to .Ltmp147
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp146-.Lfunc_begin5         # >> Call Site 20 <<
	.uleb128 .Ltmp148-.Ltmp146              #   Call between .Ltmp146 and .Ltmp148
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp148-.Lfunc_begin5         # >> Call Site 21 <<
	.uleb128 .Ltmp149-.Ltmp148              #   Call between .Ltmp148 and .Ltmp149
	.uleb128 .Ltmp150-.Lfunc_begin5         #     jumps to .Ltmp150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp149-.Lfunc_begin5         # >> Call Site 22 <<
	.uleb128 .Ltmp151-.Ltmp149              #   Call between .Ltmp149 and .Ltmp151
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp151-.Lfunc_begin5         # >> Call Site 23 <<
	.uleb128 .Ltmp152-.Ltmp151              #   Call between .Ltmp151 and .Ltmp152
	.uleb128 .Ltmp153-.Lfunc_begin5         #     jumps to .Ltmp153
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp154-.Lfunc_begin5         # >> Call Site 24 <<
	.uleb128 .Ltmp155-.Ltmp154              #   Call between .Ltmp154 and .Ltmp155
	.uleb128 .Ltmp161-.Lfunc_begin5         #     jumps to .Ltmp161
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp156-.Lfunc_begin5         # >> Call Site 25 <<
	.uleb128 .Ltmp157-.Ltmp156              #   Call between .Ltmp156 and .Ltmp157
	.uleb128 .Ltmp158-.Lfunc_begin5         #     jumps to .Ltmp158
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp159-.Lfunc_begin5         # >> Call Site 26 <<
	.uleb128 .Ltmp160-.Ltmp159              #   Call between .Ltmp159 and .Ltmp160
	.uleb128 .Ltmp161-.Lfunc_begin5         #     jumps to .Ltmp161
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp160-.Lfunc_begin5         # >> Call Site 27 <<
	.uleb128 .Lfunc_end6-.Ltmp160           #   Call between .Ltmp160 and .Lfunc_end6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0                          # -- Begin function _ZN2PP11PowerParser4initEv
.LCPI7_0:
	.dword	0x7fdfffffffffffff              # double 8.9884656743115785E+307
.LCPI7_1:
	.dword	0x47efffffe0000000              # double 3.4028234663852886E+38
.LCPI7_2:
	.dword	0x0010000000000000              # double 2.2250738585072014E-308
.LCPI7_3:
	.dword	0x3810000000000000              # double 1.1754943508222875E-38
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0
.LCPI7_4:
	.dword	8                               # 0x8
	.dword	7310293764108612723             # 0x6573617265727473
	.text
	.globl	_ZN2PP11PowerParser4initEv
	.p2align	5
	.type	_ZN2PP11PowerParser4initEv,@function
_ZN2PP11PowerParser4initEv:             # @_ZN2PP11PowerParser4initEv
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -2032
	.cfi_def_cfa_offset 2032
	st.d	$ra, $sp, 2024                  # 8-byte Folded Spill
	st.d	$fp, $sp, 2016                  # 8-byte Folded Spill
	st.d	$s0, $sp, 2008                  # 8-byte Folded Spill
	st.d	$s1, $sp, 2000                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1992                  # 8-byte Folded Spill
	st.d	$s3, $sp, 1984                  # 8-byte Folded Spill
	st.d	$s4, $sp, 1976                  # 8-byte Folded Spill
	st.d	$s5, $sp, 1968                  # 8-byte Folded Spill
	st.d	$s6, $sp, 1960                  # 8-byte Folded Spill
	st.d	$s7, $sp, 1952                  # 8-byte Folded Spill
	st.d	$s8, $sp, 1944                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2528
	sub.d	$sp, $sp, $a1
	.cfi_def_cfa_offset 8656
	move	$s0, $a0
	st.w	$zero, $a0, 672
	addi.d	$a0, $a0, 904
	st.d	$a0, $s0, 984
	ori	$a0, $zero, 1
	stptr.w	$a0, $s0, 2792
	stptr.w	$zero, $s0, 2256
	lu12i.w	$a0, 2
	ori	$a0, $a0, 224
	add.d	$fp, $sp, $a0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 208
	add.d	$a0, $sp, $a0
	st.d	$fp, $a0, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 216
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 224
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp162:
	pcalau12i	$a0, %pc_hi20(.LCPI7_0)
	fld.d	$fa0, $a0, %pc_lo12(.LCPI7_0)
	lu12i.w	$a0, 2
	ori	$a0, $a0, 240
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 1
	ori	$a2, $zero, 1
	lu12i.w	$a3, 2
	ori	$a3, $a3, 208
	add.d	$a3, $sp, $a3
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp163:
# %bb.1:
	lu12i.w	$a0, 2
	ori	$a0, $a0, 208
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	lu12i.w	$a1, 2
	ori	$a1, $a1, 224
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_3:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %pc_hi20(.L.str.123)
	addi.d	$a0, $a0, %pc_lo12(.L.str.123)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 8
	lu12i.w	$a2, 2
	ori	$a2, $a2, 56
	add.d	$s1, $sp, $a2
	lu12i.w	$a2, 2
	ori	$a2, $a2, 40
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	lu12i.w	$a2, 2
	ori	$a2, $a2, 56
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 2
	ori	$a1, $a1, 64
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 12
	lu12i.w	$a1, 2
	ori	$a1, $a1, 48
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 68
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 24
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 240
	add.d	$a0, $sp, $a0
	ld.d	$fp, $a0, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 8
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_6
# %bb.4:                                # %.noexc.i.i
.Ltmp165:
	lu12i.w	$a0, 2
	ori	$a0, $a0, 8
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp166:
# %bb.5:                                # %.noexc741
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 2
	ori	$a2, $a2, 8
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 2
	ori	$a2, $a2, 24
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_6:                                # %._crit_edge.i.i.i
	addi.w	$s4, $zero, -1
	beq	$a1, $s4, .LBB7_10
# %bb.7:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB7_9
# %bb.8:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB7_10
.LBB7_9:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_10:                               # %.noexc.i743
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 2
	ori	$a1, $a1, 16
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4088
	add.d	$fp, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4072
	add.d	$a0, $sp, $a0
	st.d	$fp, $a0, 0
	ori	$a0, $zero, 18
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp168:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4072
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp169:
# %bb.11:                               # %.noexc744
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.124)
	addi.d	$a2, $a2, %pc_lo12(.L.str.124)
	vld	$vr0, $a2, 0
	ld.h	$a2, $a2, 16
	lu12i.w	$a3, 1
	ori	$a3, $a3, 4072
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	lu12i.w	$a3, 1
	ori	$a3, $a3, 4088
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.h	$a2, $a0, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 4080
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp171:
	lu12i.w	$a0, 2
	ori	$a0, $a0, 72
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 2
	ori	$a1, $a1, 40
	add.d	$a1, $sp, $a1
	lu12i.w	$a2, 2
	ori	$a2, $a2, 8
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 4072
	add.d	$a4, $sp, $a4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp172:
# %bb.12:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i746
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4088
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_14:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit748
	lu12i.w	$a0, 2
	ori	$a0, $a0, 8
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i749
	lu12i.w	$a1, 2
	ori	$a1, $a1, 24
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_16:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit751
	lu12i.w	$a0, 2
	ori	$a0, $a0, 40
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i752
	lu12i.w	$a1, 2
	ori	$a1, $a1, 56
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_18:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit754
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3624
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 80
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 72
	add.d	$a0, $sp, $a0
	ld.d	$fp, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_21
# %bb.19:                               # %.noexc.i.i756
.Ltmp174:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3216
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp175:
# %bb.20:                               # %.noexc757
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3216
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3608
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3624
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_21:                               # %._crit_edge.i.i.i755
	beq	$a1, $s4, .LBB7_25
# %bb.22:                               # %._crit_edge.i.i.i755
	bnez	$a1, .LBB7_24
# %bb.23:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB7_25
.LBB7_24:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_25:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3216
	add.d	$a1, $sp, $a1
	ld.d	$s1, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$fp, $sp, $a1
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s2, .LBB7_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i758
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3624
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_28
.LBB7_27:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	addi.d	$a2, $s1, 1
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3616
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3624
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp177:
	lu12i.w	$a1, 2
	ori	$a1, $a1, 72
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp178:
# %bb.29:                               # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
.Ltmp180:
	addi.d	$s1, $s0, 680
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp181:
# %bb.30:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i759
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3624
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_32:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit761
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3760
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3744
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3752
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3760
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp183:
	pcalau12i	$a0, %pc_hi20(.LCPI7_1)
	fld.d	$fa0, $a0, %pc_lo12(.LCPI7_1)
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3776
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 1
	ori	$a2, $zero, 1
	lu12i.w	$a3, 1
	ori	$a3, $a3, 3744
	add.d	$a3, $sp, $a3
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp184:
# %bb.33:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i766
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3760
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_35:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit768
	pcalau12i	$a0, %pc_hi20(.L.str.125)
	addi.d	$a0, $a0, %pc_lo12(.L.str.125)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 7
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3592
	add.d	$s3, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3576
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3592
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3599
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 11
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3584
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3603
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3560
	add.d	$s5, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3784
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3776
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3544
	add.d	$a0, $sp, $a0
	st.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s5
	bltu	$a1, $a2, .LBB7_38
# %bb.36:                               # %.noexc.i.i774
.Ltmp186:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3544
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp187:
# %bb.37:                               # %.noexc775
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3544
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3560
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_38:                               # %._crit_edge.i.i.i773
	beq	$a1, $s4, .LBB7_42
# %bb.39:                               # %._crit_edge.i.i.i773
	bnez	$a1, .LBB7_41
# %bb.40:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_42
.LBB7_41:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_42:                               # %._crit_edge.i.i777
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3552
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.126)
	addi.d	$a0, $a0, %pc_lo12(.L.str.126)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 5
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3528
	add.d	$s2, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3512
	add.d	$a2, $sp, $a2
	st.d	$s2, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3528
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3533
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 13
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3520
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3541
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp189:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3576
	add.d	$a1, $sp, $a1
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3544
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 3512
	add.d	$a4, $sp, $a4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp190:
# %bb.43:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3512
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_45
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i781
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3528
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_45:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit783
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_47
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i784
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_47:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit786
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3576
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_49
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i787
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3592
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_49:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit789
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3232
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3616
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	ld.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_52
# %bb.50:                               # %.noexc.i.i791
.Ltmp192:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2824
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp193:
# %bb.51:                               # %.noexc792
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2824
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3216
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3232
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_52:                               # %._crit_edge.i.i.i790
	beq	$a1, $s4, .LBB7_56
# %bb.53:                               # %._crit_edge.i.i.i790
	bnez	$a1, .LBB7_55
# %bb.54:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB7_56
.LBB7_55:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_56:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2824
	add.d	$a1, $sp, $a1
	ld.d	$s3, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s2, .LBB7_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i794
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_59
.LBB7_58:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i799
	addi.d	$a2, $s3, 1
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_59:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i795
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3224
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3232
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp195:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3608
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp196:
# %bb.60:                               # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit802
.Ltmp198:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp199:
# %bb.61:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_63
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i803
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_63:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit805
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3368
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3352
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3360
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3368
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp201:
	lu12i.w	$a0, 524287
	ori	$a1, $a0, 4095
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3384
	add.d	$a0, $sp, $a0
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 3352
	add.d	$a4, $sp, $a4
	move	$a5, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp202:
# %bb.64:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3352
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_66
# %bb.65:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i810
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3368
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_66:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit812
	pcalau12i	$a0, %pc_hi20(.L.str.127)
	addi.d	$a0, $a0, %pc_lo12(.L.str.127)
	ld.d	$a1, $a0, 0
	ld.b	$a0, $a0, 8
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3200
	add.d	$s3, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3184
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3200
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3208
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 9
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3192
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3209
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3168
	add.d	$s5, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3392
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3384
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3152
	add.d	$a0, $sp, $a0
	st.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s5
	bltu	$a1, $a2, .LBB7_69
# %bb.67:                               # %.noexc.i.i818
.Ltmp204:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3152
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp205:
# %bb.68:                               # %.noexc819
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3152
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3168
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_69:                               # %._crit_edge.i.i.i817
	beq	$a1, $s4, .LBB7_73
# %bb.70:                               # %._crit_edge.i.i.i817
	bnez	$a1, .LBB7_72
# %bb.71:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_73
.LBB7_72:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_73:                               # %._crit_edge.i.i821
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3160
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.128)
	addi.d	$a0, $a0, %pc_lo12(.L.str.128)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 7
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3136
	add.d	$s2, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3120
	add.d	$a2, $sp, $a2
	st.d	$s2, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3136
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3143
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 15
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3128
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3151
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp207:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3184
	add.d	$a1, $sp, $a1
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3152
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 3120
	add.d	$a4, $sp, $a4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp208:
# %bb.74:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_76
# %bb.75:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i825
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3136
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_76:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit827
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_78
# %bb.77:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i828
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3168
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_78:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit830
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_80
# %bb.79:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i831
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_80:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit833
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2840
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3224
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	ld.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_83
# %bb.81:                               # %.noexc.i.i835
.Ltmp210:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2432
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp211:
# %bb.82:                               # %.noexc836
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2432
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2824
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2840
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_83:                               # %._crit_edge.i.i.i834
	beq	$a1, $s4, .LBB7_87
# %bb.84:                               # %._crit_edge.i.i.i834
	bnez	$a1, .LBB7_86
# %bb.85:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB7_87
.LBB7_86:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_87:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2432
	add.d	$a1, $sp, $a1
	ld.d	$s3, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s2, .LBB7_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i838
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2840
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_90
.LBB7_89:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i843
	addi.d	$a2, $s3, 1
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_90:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i839
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2832
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2840
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp213:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3216
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp214:
# %bb.91:                               # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit846
.Ltmp216:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp217:
# %bb.92:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_94
# %bb.93:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i847
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2840
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_94:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit849
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2976
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2960
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2968
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2976
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp219:
	pcalau12i	$a0, %pc_hi20(.LCPI7_2)
	fld.d	$fa0, $a0, %pc_lo12(.LCPI7_2)
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2992
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 1
	ori	$a2, $zero, 1
	lu12i.w	$a3, 1
	ori	$a3, $a3, 2960
	add.d	$a3, $sp, $a3
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp220:
# %bb.95:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2960
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_97
# %bb.96:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i854
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2976
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_97:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit856
	pcalau12i	$a0, %pc_hi20(.L.str.129)
	addi.d	$a0, $a0, %pc_lo12(.L.str.129)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 8
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2808
	add.d	$s3, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2792
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2808
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2816
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 12
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2800
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2820
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2776
	add.d	$s5, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3000
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2992
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2760
	add.d	$a0, $sp, $a0
	st.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s5
	bltu	$a1, $a2, .LBB7_100
# %bb.98:                               # %.noexc.i.i862
.Ltmp222:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2760
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp223:
# %bb.99:                               # %.noexc863
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2760
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2776
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_100:                              # %._crit_edge.i.i.i861
	beq	$a1, $s4, .LBB7_104
# %bb.101:                              # %._crit_edge.i.i.i861
	bnez	$a1, .LBB7_103
# %bb.102:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_104
.LBB7_103:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_104:                              # %._crit_edge.i.i865
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2768
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.130)
	addi.d	$a0, $a0, %pc_lo12(.L.str.130)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 6
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2744
	add.d	$s2, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2728
	add.d	$a2, $sp, $a2
	st.d	$s2, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2744
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2750
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 14
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2736
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2758
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp225:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2792
	add.d	$a1, $sp, $a1
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2760
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 2728
	add.d	$a4, $sp, $a4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp226:
# %bb.105:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2728
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_107
# %bb.106:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i869
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2744
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_107:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit871
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2760
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_109
# %bb.108:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i872
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2776
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_109:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit874
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2792
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_111
# %bb.110:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i875
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2808
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_111:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit877
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2448
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2832
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	ld.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_114
# %bb.112:                              # %.noexc.i.i879
.Ltmp228:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2040
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp229:
# %bb.113:                              # %.noexc880
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2040
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2432
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2448
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_114:                              # %._crit_edge.i.i.i878
	beq	$a1, $s4, .LBB7_118
# %bb.115:                              # %._crit_edge.i.i.i878
	bnez	$a1, .LBB7_117
# %bb.116:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB7_118
.LBB7_117:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_118:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2040
	add.d	$a1, $sp, $a1
	ld.d	$s3, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s2, .LBB7_120
# %bb.119:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i882
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2448
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_121
.LBB7_120:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i887
	addi.d	$a2, $s3, 1
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_121:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i883
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2440
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2448
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp231:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2824
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp232:
# %bb.122:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit890
.Ltmp234:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp235:
# %bb.123:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_125
# %bb.124:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i891
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2448
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_125:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit893
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2584
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2568
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2576
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2584
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp237:
	pcalau12i	$a0, %pc_hi20(.LCPI7_3)
	fld.d	$fa0, $a0, %pc_lo12(.LCPI7_3)
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2600
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 1
	ori	$a2, $zero, 1
	lu12i.w	$a3, 1
	ori	$a3, $a3, 2568
	add.d	$a3, $sp, $a3
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp238:
# %bb.126:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2568
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_128
# %bb.127:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i898
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2584
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_128:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit900
	pcalau12i	$a0, %pc_hi20(.L.str.131)
	addi.d	$a0, $a0, %pc_lo12(.L.str.131)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 7
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2416
	add.d	$s3, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2400
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2416
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2423
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 11
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2408
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2427
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2384
	add.d	$s5, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2608
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2600
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2368
	add.d	$a0, $sp, $a0
	st.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s5
	bltu	$a1, $a2, .LBB7_131
# %bb.129:                              # %.noexc.i.i906
.Ltmp240:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2368
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp241:
# %bb.130:                              # %.noexc907
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2368
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2384
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_131:                              # %._crit_edge.i.i.i905
	beq	$a1, $s4, .LBB7_135
# %bb.132:                              # %._crit_edge.i.i.i905
	bnez	$a1, .LBB7_134
# %bb.133:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_135
.LBB7_134:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_135:                              # %._crit_edge.i.i909
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2376
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.132)
	addi.d	$a0, $a0, %pc_lo12(.L.str.132)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 5
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2352
	add.d	$s2, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2336
	add.d	$a2, $sp, $a2
	st.d	$s2, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2352
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2357
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 13
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2344
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2365
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp243:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2400
	add.d	$a1, $sp, $a1
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2368
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 2336
	add.d	$a4, $sp, $a4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp244:
# %bb.136:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2336
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_138
# %bb.137:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i913
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2352
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_138:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit915
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2368
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_140
# %bb.139:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i916
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2384
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_140:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit918
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2400
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_142
# %bb.141:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i919
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2416
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_142:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit921
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2056
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2440
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	ld.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_145
# %bb.143:                              # %.noexc.i.i923
.Ltmp246:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1648
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp247:
# %bb.144:                              # %.noexc924
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1648
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2040
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2056
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_145:                              # %._crit_edge.i.i.i922
	beq	$a1, $s4, .LBB7_149
# %bb.146:                              # %._crit_edge.i.i.i922
	bnez	$a1, .LBB7_148
# %bb.147:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB7_149
.LBB7_148:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_149:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1648
	add.d	$a1, $sp, $a1
	ld.d	$s3, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s2, .LBB7_151
# %bb.150:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i926
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2056
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_152
.LBB7_151:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i931
	addi.d	$a2, $s3, 1
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_152:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i927
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2048
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2056
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp249:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2432
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp250:
# %bb.153:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit934
.Ltmp252:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp253:
# %bb.154:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_156
# %bb.155:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i935
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2056
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_156:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit937
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2192
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2176
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2184
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2192
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp255:
	lu12i.w	$a1, -524288
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2208
	add.d	$a0, $sp, $a0
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 2176
	add.d	$a4, $sp, $a4
	move	$a5, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp256:
# %bb.157:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2176
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_159
# %bb.158:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i942
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2192
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_159:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit944
	pcalau12i	$a0, %pc_hi20(.L.str.133)
	addi.d	$a0, $a0, %pc_lo12(.L.str.133)
	ld.d	$a1, $a0, 0
	ld.b	$a0, $a0, 8
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2024
	add.d	$s3, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2008
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 2024
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2032
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 9
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2016
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2033
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1992
	add.d	$s5, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2216
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2208
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1976
	add.d	$a0, $sp, $a0
	st.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s5
	bltu	$a1, $a2, .LBB7_162
# %bb.160:                              # %.noexc.i.i950
.Ltmp258:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1976
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp259:
# %bb.161:                              # %.noexc951
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1976
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1992
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_162:                              # %._crit_edge.i.i.i949
	beq	$a1, $s4, .LBB7_166
# %bb.163:                              # %._crit_edge.i.i.i949
	bnez	$a1, .LBB7_165
# %bb.164:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_166
.LBB7_165:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_166:                              # %._crit_edge.i.i953
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1984
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.134)
	addi.d	$a0, $a0, %pc_lo12(.L.str.134)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 7
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1960
	add.d	$s2, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1944
	add.d	$a2, $sp, $a2
	st.d	$s2, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1960
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1967
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 15
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1952
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1975
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp261:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2008
	add.d	$a1, $sp, $a1
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1976
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 1944
	add.d	$a4, $sp, $a4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp262:
# %bb.167:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_169
# %bb.168:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i957
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1960
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_169:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit959
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_171
# %bb.170:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i960
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_171:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit962
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_173
# %bb.172:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i963
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_173:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit965
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1664
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2048
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	ld.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1816
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_176
# %bb.174:                              # %.noexc.i.i967
.Ltmp264:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1816
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp265:
# %bb.175:                              # %.noexc968
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1816
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1648
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1664
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_176:                              # %._crit_edge.i.i.i966
	beq	$a1, $s4, .LBB7_180
# %bb.177:                              # %._crit_edge.i.i.i966
	bnez	$a1, .LBB7_179
# %bb.178:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB7_180
.LBB7_179:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_180:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1816
	add.d	$a1, $sp, $a1
	ld.d	$s3, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s2, .LBB7_182
# %bb.181:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i970
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_183
.LBB7_182:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i975
	addi.d	$a2, $s3, 1
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_183:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i971
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1656
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1664
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp267:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2040
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp268:
# %bb.184:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit978
.Ltmp270:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp271:
# %bb.185:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_187
# %bb.186:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i979
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_187:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit981
	ld.d	$a0, $s0, 520
	ld.w	$a1, $a0, 4
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1800
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1784
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1792
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1800
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp273:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1816
	add.d	$a0, $sp, $a0
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 1784
	add.d	$a4, $sp, $a4
	move	$a5, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp274:
# %bb.188:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1784
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_190
# %bb.189:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i986
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1800
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_190:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit988
	pcalau12i	$a0, %pc_hi20(.L.str.135)
	addi.d	$a0, $a0, %pc_lo12(.L.str.135)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 7
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1632
	add.d	$s3, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1616
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1632
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1639
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 11
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1624
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1643
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1600
	add.d	$s5, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1824
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1816
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1584
	add.d	$a0, $sp, $a0
	st.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s5
	bltu	$a1, $a2, .LBB7_193
# %bb.191:                              # %.noexc.i.i994
.Ltmp276:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1584
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp277:
# %bb.192:                              # %.noexc995
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1584
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1600
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_193:                              # %._crit_edge.i.i.i993
	beq	$a1, $s4, .LBB7_197
# %bb.194:                              # %._crit_edge.i.i.i993
	bnez	$a1, .LBB7_196
# %bb.195:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_197
.LBB7_196:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_197:                              # %.noexc.i998
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1592
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1568
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1552
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 21
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp279:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1552
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp280:
# %bb.198:                              # %.noexc999
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.136)
	addi.d	$a2, $a2, %pc_lo12(.L.str.136)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 13
	lu12i.w	$a3, 1
	ori	$a3, $a3, 1552
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	lu12i.w	$a3, 1
	ori	$a3, $a3, 1568
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 13
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1552
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1560
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp282:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1616
	add.d	$a1, $sp, $a1
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1584
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 1552
	add.d	$a4, $sp, $a4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp283:
# %bb.199:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1552
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_201
# %bb.200:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1001
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1568
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_201:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1003
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1584
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_203
# %bb.202:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1004
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1600
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_203:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1006
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1616
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_205
# %bb.204:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1007
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1632
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_205:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1009
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1464
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1656
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	ld.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB7_208
# %bb.206:                              # %.noexc.i.i1011
.Ltmp285:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1248
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp286:
# %bb.207:                              # %.noexc1012
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1248
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1448
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1464
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_208:                              # %._crit_edge.i.i.i1010
	beq	$a1, $s4, .LBB7_212
# %bb.209:                              # %._crit_edge.i.i.i1010
	bnez	$a1, .LBB7_211
# %bb.210:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB7_212
.LBB7_211:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_212:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1248
	add.d	$a1, $sp, $a1
	ld.d	$s3, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s2, .LBB7_214
# %bb.213:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1014
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_215
.LBB7_214:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1019
	addi.d	$a2, $s3, 1
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_215:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1015
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1456
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1464
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp288:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1648
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp289:
# %bb.216:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1022
.Ltmp291:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp292:
# %bb.217:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_219
# %bb.218:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1023
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_219:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1025
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1432
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1416
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 472822
	ori	$a0, $a0, 865
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1432
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1424
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1436
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1400
	add.d	$s2, $sp, $a1
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1384
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	lu12i.w	$a1, 443926
	ori	$s7, $a1, 1394
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1400
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1392
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1404
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1368
	add.d	$s3, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1352
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 31
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp294:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1352
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp295:
# %bb.220:                              # %.noexc1036
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1352
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.139)
	addi.d	$a2, $a2, %pc_lo12(.L.str.139)
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 23
	ld.d	$a2, $a2, 16
	lu12i.w	$a4, 1
	ori	$a4, $a4, 1368
	add.d	$a4, $sp, $a4
	st.d	$a1, $a4, 0
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 23
	st.d	$a2, $a0, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1352
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1360
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp297:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1416
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 1384
	add.d	$a4, $sp, $a4
	lu12i.w	$a5, 1
	ori	$a5, $a5, 1352
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp298:
# %bb.221:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1352
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_223
# %bb.222:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1038
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1368
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_223:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1040
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1384
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_225
# %bb.224:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1041
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1400
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_225:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1043
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1416
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_227
# %bb.226:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1044
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1432
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_227:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1046
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1264
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1456
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_230
# %bb.228:                              # %.noexc.i.i1048
.Ltmp300:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1048
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp301:
# %bb.229:                              # %.noexc1049
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1048
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1248
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1264
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_230:                              # %._crit_edge.i.i.i1047
	beq	$a1, $s4, .LBB7_234
# %bb.231:                              # %._crit_edge.i.i.i1047
	bnez	$a1, .LBB7_233
# %bb.232:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_234
.LBB7_233:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_234:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1048
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_236
# %bb.235:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1050
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_237
.LBB7_236:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1055
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_237:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1051
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1256
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1264
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp303:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1448
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp304:
# %bb.238:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
.Ltmp306:
	addi.d	$s0, $s0, 776
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp307:
# %bb.239:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_241
# %bb.240:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_241:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$s5, $sp, $a1
	beq	$a0, $s5, .LBB7_243
# %bb.242:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_243:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$s6, $sp, $a1
	beq	$a0, $s6, .LBB7_245
# %bb.244:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_245:                              # %_ZN2PP8FunctionD2Ev.exit.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_247
# %bb.246:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1058
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_247:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_249
# %bb.248:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1061
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_249:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1063
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1232
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1216
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 452247
	ori	$a0, $a0, 865
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1232
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1224
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1236
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1200
	add.d	$s2, $sp, $a1
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1184
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1200
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1192
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1204
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1168
	add.d	$s8, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1152
	add.d	$a0, $sp, $a0
	st.d	$s8, $a0, 0
	ori	$a0, $zero, 29
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp309:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1152
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp310:
# %bb.250:                              # %.noexc1074
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1152
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.141)
	addi.d	$a2, $a2, %pc_lo12(.L.str.141)
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 21
	ld.d	$a2, $a2, 16
	lu12i.w	$a4, 1
	ori	$a4, $a4, 1168
	add.d	$a4, $sp, $a4
	st.d	$a1, $a4, 0
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 21
	st.d	$a2, $a0, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1160
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp312:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1216
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 1184
	add.d	$a4, $sp, $a4
	lu12i.w	$a5, 1
	ori	$a5, $a5, 1152
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp313:
# %bb.251:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s8, .LBB7_253
# %bb.252:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1076
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1168
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_253:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1078
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_255
# %bb.254:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1079
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_255:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1081
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_257
# %bb.256:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1082
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_257:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1084
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1064
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1256
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_260
# %bb.258:                              # %.noexc.i.i1086
.Ltmp315:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 848
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp316:
# %bb.259:                              # %.noexc1087
	lu12i.w	$a1, 1
	ori	$a1, $a1, 848
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1048
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 1064
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_260:                              # %._crit_edge.i.i.i1085
	beq	$a1, $s4, .LBB7_264
# %bb.261:                              # %._crit_edge.i.i.i1085
	bnez	$a1, .LBB7_263
# %bb.262:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_264
.LBB7_263:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_264:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 848
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_266
# %bb.265:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1089
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1064
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_267
.LBB7_266:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1094
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_267:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1090
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1056
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1064
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp318:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1248
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp319:
# %bb.268:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1097
.Ltmp321:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp322:
# %bb.269:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_271
# %bb.270:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1098
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_271:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1099
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_273
# %bb.272:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1100
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_273:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1101
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_275
# %bb.274:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1102
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_275:                              # %_ZN2PP8FunctionD2Ev.exit.i1103
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_277
# %bb.276:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1104
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_277:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1110
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_279
# %bb.278:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1111
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1064
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_279:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1113
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1032
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1016
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 452119
	ori	$a0, $a0, 1121
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1032
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1024
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1036
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1000
	add.d	$s2, $sp, $a1
	lu12i.w	$a1, 1
	ori	$a1, $a1, 984
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1000
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 992
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1004
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 968
	add.d	$s8, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 952
	add.d	$a0, $sp, $a0
	st.d	$s8, $a0, 0
	ori	$a0, $zero, 27
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp324:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 952
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp325:
# %bb.280:                              # %.noexc1124
	lu12i.w	$a1, 1
	ori	$a1, $a1, 952
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.143)
	addi.d	$a2, $a2, %pc_lo12(.L.str.143)
	vld	$vr0, $a2, 0
	ld.w	$a3, $a2, 23
	ld.d	$a2, $a2, 16
	lu12i.w	$a4, 1
	ori	$a4, $a4, 968
	add.d	$a4, $sp, $a4
	st.d	$a1, $a4, 0
	vst	$vr0, $a0, 0
	st.w	$a3, $a0, 23
	st.d	$a2, $a0, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 952
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 960
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp327:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1016
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 984
	add.d	$a4, $sp, $a4
	lu12i.w	$a5, 1
	ori	$a5, $a5, 952
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp328:
# %bb.281:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 952
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s8, .LBB7_283
# %bb.282:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1126
	lu12i.w	$a1, 1
	ori	$a1, $a1, 968
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_283:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1128
	lu12i.w	$a0, 1
	ori	$a0, $a0, 984
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_285
# %bb.284:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1129
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1000
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_285:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1131
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1016
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_287
# %bb.286:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1132
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1032
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_287:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1134
	lu12i.w	$a0, 1
	ori	$a0, $a0, 864
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1056
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_290
# %bb.288:                              # %.noexc.i.i1136
.Ltmp330:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 648
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp331:
# %bb.289:                              # %.noexc1137
	lu12i.w	$a1, 1
	ori	$a1, $a1, 648
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 848
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 864
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_290:                              # %._crit_edge.i.i.i1135
	beq	$a1, $s4, .LBB7_294
# %bb.291:                              # %._crit_edge.i.i.i1135
	bnez	$a1, .LBB7_293
# %bb.292:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_294
.LBB7_293:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_294:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 648
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_296
# %bb.295:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1139
	lu12i.w	$a1, 1
	ori	$a1, $a1, 864
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_297
.LBB7_296:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1144
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_297:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1140
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 856
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 864
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp333:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1048
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp334:
# %bb.298:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1147
.Ltmp336:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp337:
# %bb.299:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_301
# %bb.300:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1148
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_301:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1149
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_303
# %bb.302:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1150
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_303:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1151
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_305
# %bb.304:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1152
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_305:                              # %_ZN2PP8FunctionD2Ev.exit.i1153
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_307
# %bb.306:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1154
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_307:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1160
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_309
# %bb.308:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1161
	lu12i.w	$a1, 1
	ori	$a1, $a1, 864
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_309:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1163
	lu12i.w	$a0, 1
	ori	$a0, $a0, 832
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 816
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 444054
	ori	$a0, $a0, 1379
	lu12i.w	$a1, 1
	ori	$a1, $a1, 832
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 824
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 836
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 800
	add.d	$s2, $sp, $a1
	lu12i.w	$a1, 1
	ori	$a1, $a1, 784
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 800
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 792
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 804
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 768
	add.d	$s8, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 752
	add.d	$a0, $sp, $a0
	st.d	$s8, $a0, 0
	ori	$a0, $zero, 30
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp339:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 752
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp340:
# %bb.310:                              # %.noexc1174
	lu12i.w	$a1, 1
	ori	$a1, $a1, 752
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.145)
	addi.d	$a2, $a2, %pc_lo12(.L.str.145)
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 22
	ld.d	$a2, $a2, 16
	lu12i.w	$a4, 1
	ori	$a4, $a4, 768
	add.d	$a4, $sp, $a4
	st.d	$a1, $a4, 0
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 22
	st.d	$a2, $a0, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 752
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 760
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp342:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 816
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 784
	add.d	$a4, $sp, $a4
	lu12i.w	$a5, 1
	ori	$a5, $a5, 752
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp343:
# %bb.311:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 752
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s8, .LBB7_313
# %bb.312:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1176
	lu12i.w	$a1, 1
	ori	$a1, $a1, 768
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_313:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1178
	lu12i.w	$a0, 1
	ori	$a0, $a0, 784
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_315
# %bb.314:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1179
	lu12i.w	$a1, 1
	ori	$a1, $a1, 800
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_315:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1181
	lu12i.w	$a0, 1
	ori	$a0, $a0, 816
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_317
# %bb.316:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1182
	lu12i.w	$a1, 1
	ori	$a1, $a1, 832
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_317:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1184
	lu12i.w	$a0, 1
	ori	$a0, $a0, 664
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 856
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_320
# %bb.318:                              # %.noexc.i.i1186
.Ltmp345:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 448
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp346:
# %bb.319:                              # %.noexc1187
	lu12i.w	$a1, 1
	ori	$a1, $a1, 448
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 648
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 664
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_320:                              # %._crit_edge.i.i.i1185
	beq	$a1, $s4, .LBB7_324
# %bb.321:                              # %._crit_edge.i.i.i1185
	bnez	$a1, .LBB7_323
# %bb.322:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_324
.LBB7_323:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_324:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 448
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_326
# %bb.325:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1189
	lu12i.w	$a1, 1
	ori	$a1, $a1, 664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_327
.LBB7_326:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1194
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_327:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1190
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 656
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 664
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp348:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 848
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp349:
# %bb.328:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1197
.Ltmp351:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp352:
# %bb.329:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_331
# %bb.330:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1198
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_331:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1199
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_333
# %bb.332:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1200
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_333:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1201
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_335
# %bb.334:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1202
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_335:                              # %_ZN2PP8FunctionD2Ev.exit.i1203
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_337
# %bb.336:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1204
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_337:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1210
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_339
# %bb.338:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1211
	lu12i.w	$a1, 1
	ori	$a1, $a1, 664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_339:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1213
	pcalau12i	$a0, %pc_hi20(.L.str.146)
	addi.d	$a0, $a0, %pc_lo12(.L.str.146)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 632
	add.d	$s1, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 616
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 632
	add.d	$a2, $sp, $a2
	st.h	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 634
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 3
	lu12i.w	$a1, 1
	ori	$a1, $a1, 624
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 635
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 600
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 584
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 600
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 592
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 604
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 568
	add.d	$s3, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 552
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 22
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp354:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 552
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp355:
# %bb.340:                              # %.noexc1224
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.147)
	addi.d	$a2, $a2, %pc_lo12(.L.str.147)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 14
	lu12i.w	$a3, 1
	ori	$a3, $a3, 552
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	lu12i.w	$a3, 1
	ori	$a3, $a3, 568
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 14
	lu12i.w	$a0, 1
	ori	$a0, $a0, 552
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 560
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp357:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 616
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 584
	add.d	$a4, $sp, $a4
	lu12i.w	$a5, 1
	ori	$a5, $a5, 552
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp358:
# %bb.341:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 552
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_343
# %bb.342:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1226
	lu12i.w	$a1, 1
	ori	$a1, $a1, 568
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_343:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1228
	lu12i.w	$a0, 1
	ori	$a0, $a0, 584
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_345
# %bb.344:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1229
	lu12i.w	$a1, 1
	ori	$a1, $a1, 600
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_345:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1231
	lu12i.w	$a0, 1
	ori	$a0, $a0, 616
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_347
# %bb.346:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1232
	lu12i.w	$a1, 1
	ori	$a1, $a1, 632
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_347:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1234
	lu12i.w	$a0, 1
	ori	$a0, $a0, 464
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 656
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_350
# %bb.348:                              # %.noexc.i.i1236
.Ltmp360:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 248
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp361:
# %bb.349:                              # %.noexc1237
	lu12i.w	$a1, 1
	ori	$a1, $a1, 248
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 448
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 464
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_350:                              # %._crit_edge.i.i.i1235
	beq	$a1, $s4, .LBB7_354
# %bb.351:                              # %._crit_edge.i.i.i1235
	bnez	$a1, .LBB7_353
# %bb.352:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_354
.LBB7_353:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_354:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 248
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_356
# %bb.355:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1239
	lu12i.w	$a1, 1
	ori	$a1, $a1, 464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_357
.LBB7_356:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1244
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_357:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1240
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 456
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 464
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp363:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 648
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp364:
# %bb.358:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1247
.Ltmp366:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp367:
# %bb.359:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_361
# %bb.360:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1248
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_361:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1249
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_363
# %bb.362:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1250
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_363:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1251
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_365
# %bb.364:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1252
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_365:                              # %_ZN2PP8FunctionD2Ev.exit.i1253
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_367
# %bb.366:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1254
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_367:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1260
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_369
# %bb.368:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1261
	lu12i.w	$a1, 1
	ori	$a1, $a1, 464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_369:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1263
	lu12i.w	$a0, 1
	ori	$a0, $a0, 432
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 416
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 427830
	ori	$a0, $a0, 3939
	lu12i.w	$a1, 1
	ori	$a1, $a1, 432
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 424
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 436
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 400
	add.d	$s2, $sp, $a1
	lu12i.w	$a1, 1
	ori	$a1, $a1, 384
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 400
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 392
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 404
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 368
	add.d	$s3, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 352
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 17
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp369:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 352
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp370:
# %bb.370:                              # %.noexc1274
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.149)
	addi.d	$a2, $a2, %pc_lo12(.L.str.149)
	vld	$vr0, $a2, 0
	ld.b	$a2, $a2, 16
	lu12i.w	$a3, 1
	ori	$a3, $a3, 352
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	lu12i.w	$a3, 1
	ori	$a3, $a3, 368
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.b	$a2, $a0, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 352
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 360
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp372:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 416
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 384
	add.d	$a4, $sp, $a4
	lu12i.w	$a5, 1
	ori	$a5, $a5, 352
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp373:
# %bb.371:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 352
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_373
# %bb.372:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1276
	lu12i.w	$a1, 1
	ori	$a1, $a1, 368
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_373:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1278
	lu12i.w	$a0, 1
	ori	$a0, $a0, 384
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_375
# %bb.374:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1279
	lu12i.w	$a1, 1
	ori	$a1, $a1, 400
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_375:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1281
	lu12i.w	$a0, 1
	ori	$a0, $a0, 416
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_377
# %bb.376:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1282
	lu12i.w	$a1, 1
	ori	$a1, $a1, 432
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_377:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1284
	lu12i.w	$a0, 1
	ori	$a0, $a0, 264
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 456
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_380
# %bb.378:                              # %.noexc.i.i1286
.Ltmp375:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 48
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp376:
# %bb.379:                              # %.noexc1287
	lu12i.w	$a1, 1
	ori	$a1, $a1, 48
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 248
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 264
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_380:                              # %._crit_edge.i.i.i1285
	beq	$a1, $s4, .LBB7_384
# %bb.381:                              # %._crit_edge.i.i.i1285
	bnez	$a1, .LBB7_383
# %bb.382:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_384
.LBB7_383:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_384:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 48
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_386
# %bb.385:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1289
	lu12i.w	$a1, 1
	ori	$a1, $a1, 264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_387
.LBB7_386:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1294
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_387:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1290
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 256
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 264
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp378:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 448
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp379:
# %bb.388:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1297
.Ltmp381:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp382:
# %bb.389:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_391
# %bb.390:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1298
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_391:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1299
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_393
# %bb.392:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1300
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_393:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1301
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_395
# %bb.394:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1302
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_395:                              # %_ZN2PP8FunctionD2Ev.exit.i1303
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_397
# %bb.396:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1304
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_397:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1310
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_399
# %bb.398:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1311
	lu12i.w	$a1, 1
	ori	$a1, $a1, 264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_399:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1313
	pcalau12i	$a0, %pc_hi20(.L.str.150)
	addi.d	$a0, $a0, %pc_lo12(.L.str.150)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 232
	add.d	$s1, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 216
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 232
	add.d	$a2, $sp, $a2
	st.h	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 234
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 3
	lu12i.w	$a1, 1
	ori	$a1, $a1, 224
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 235
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 200
	add.d	$s2, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 184
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 200
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 192
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 204
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.151)
	addi.d	$a0, $a0, %pc_lo12(.L.str.151)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 7
	lu12i.w	$a2, 1
	ori	$a2, $a2, 168
	add.d	$s3, $sp, $a2
	lu12i.w	$a2, 1
	ori	$a2, $a2, 152
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 168
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 175
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 11
	lu12i.w	$a1, 1
	ori	$a1, $a1, 160
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 179
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp384:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 216
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	lu12i.w	$a4, 1
	ori	$a4, $a4, 184
	add.d	$a4, $sp, $a4
	lu12i.w	$a5, 1
	ori	$a5, $a5, 152
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp385:
# %bb.400:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_402
# %bb.401:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1326
	lu12i.w	$a1, 1
	ori	$a1, $a1, 168
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_402:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1328
	lu12i.w	$a0, 1
	ori	$a0, $a0, 184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_404
# %bb.403:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1329
	lu12i.w	$a1, 1
	ori	$a1, $a1, 200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_404:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1331
	lu12i.w	$a0, 1
	ori	$a0, $a0, 216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_406
# %bb.405:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1332
	lu12i.w	$a1, 1
	ori	$a1, $a1, 232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_406:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1334
	lu12i.w	$a0, 1
	ori	$a0, $a0, 64
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 256
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_409
# %bb.407:                              # %.noexc.i.i1336
.Ltmp387:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3944
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp388:
# %bb.408:                              # %.noexc1337
	ori	$a1, $zero, 3944
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 48
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 64
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_409:                              # %._crit_edge.i.i.i1335
	beq	$a1, $s4, .LBB7_413
# %bb.410:                              # %._crit_edge.i.i.i1335
	bnez	$a1, .LBB7_412
# %bb.411:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_413
.LBB7_412:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_413:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3944
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_415
# %bb.414:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1339
	lu12i.w	$a1, 1
	ori	$a1, $a1, 64
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_416
.LBB7_415:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1344
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_416:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1340
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 56
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 64
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp390:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 248
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp391:
# %bb.417:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1347
.Ltmp393:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp394:
# %bb.418:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_420
# %bb.419:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1348
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_420:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1349
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_422
# %bb.421:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1350
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_422:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1351
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_424
# %bb.423:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1352
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_424:                              # %_ZN2PP8FunctionD2Ev.exit.i1353
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_426
# %bb.425:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1354
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_426:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1360
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_428
# %bb.427:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1361
	lu12i.w	$a1, 1
	ori	$a1, $a1, 64
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_428:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1363
	lu12i.w	$a0, 1
	ori	$a0, $a0, 32
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 16
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 472614
	ori	$a0, $a0, 358
	lu12i.w	$a1, 1
	ori	$a1, $a1, 32
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	lu12i.w	$a1, 1
	ori	$a1, $a1, 24
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 36
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	lu12i.w	$a1, 1
	add.d	$s2, $sp, $a1
	ori	$a1, $zero, 4080
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	ori	$a1, $zero, 4088
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 4064
	add.d	$s3, $sp, $a0
	ori	$a0, $zero, 4048
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 24
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp396:
	ori	$a0, $zero, 4048
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp397:
# %bb.429:                              # %.noexc1374
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.153)
	addi.d	$a2, $a2, %pc_lo12(.L.str.153)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 16
	ori	$a3, $zero, 4048
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 4064
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 16
	ori	$a0, $zero, 4048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 4056
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp399:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 16
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 4080
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 4048
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp400:
# %bb.430:
	ori	$a0, $zero, 4048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_432
# %bb.431:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1376
	ori	$a1, $zero, 4064
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_432:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1378
	ori	$a0, $zero, 4080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_434
# %bb.433:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1379
	lu12i.w	$a1, 1
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_434:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1381
	lu12i.w	$a0, 1
	ori	$a0, $a0, 16
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_436
# %bb.435:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1382
	lu12i.w	$a1, 1
	ori	$a1, $a1, 32
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_436:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1384
	ori	$a0, $zero, 3960
	add.d	$s1, $sp, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 56
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_439
# %bb.437:                              # %.noexc.i.i1386
.Ltmp402:
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3744
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp403:
# %bb.438:                              # %.noexc1387
	ori	$a1, $zero, 3744
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 3944
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 3960
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_439:                              # %._crit_edge.i.i.i1385
	beq	$a1, $s4, .LBB7_443
# %bb.440:                              # %._crit_edge.i.i.i1385
	bnez	$a1, .LBB7_442
# %bb.441:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_443
.LBB7_442:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_443:
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3744
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_445
# %bb.444:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1389
	ori	$a1, $zero, 3960
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_446
.LBB7_445:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1394
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_446:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1390
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 3952
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 3960
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp405:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 48
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp406:
# %bb.447:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1397
.Ltmp408:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp409:
# %bb.448:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_450
# %bb.449:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1398
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_450:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1399
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_452
# %bb.451:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1400
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_452:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1401
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_454
# %bb.453:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1402
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_454:                              # %_ZN2PP8FunctionD2Ev.exit.i1403
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_456
# %bb.455:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1404
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_456:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1410
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_458
# %bb.457:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1411
	ori	$a1, $zero, 3960
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_458:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1413
	pcalau12i	$a0, %pc_hi20(.L.str.154)
	addi.d	$a0, $a0, %pc_lo12(.L.str.154)
	ld.w	$a1, $a0, 0
	ld.b	$a0, $a0, 4
	ori	$a2, $zero, 3928
	add.d	$s1, $sp, $a2
	ori	$a2, $zero, 3912
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	ori	$a2, $zero, 3928
	add.d	$a2, $sp, $a2
	st.w	$a1, $a2, 0
	ori	$a1, $zero, 3932
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 5
	ori	$a1, $zero, 3920
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3933
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3896
	add.d	$s2, $sp, $a0
	ori	$a0, $zero, 3880
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3896
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 3888
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3900
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3864
	add.d	$s8, $sp, $a0
	ori	$a0, $zero, 3848
	add.d	$a0, $sp, $a0
	st.d	$s8, $a0, 0
	ori	$a0, $zero, 31
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp411:
	ori	$a0, $zero, 3848
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp412:
# %bb.459:                              # %.noexc1424
	ori	$a1, $zero, 3848
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.155)
	addi.d	$a2, $a2, %pc_lo12(.L.str.155)
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 23
	ld.d	$a2, $a2, 16
	ori	$a4, $zero, 3864
	add.d	$a4, $sp, $a4
	st.d	$a1, $a4, 0
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 23
	st.d	$a2, $a0, 16
	ori	$a0, $zero, 3848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 3856
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp414:
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3912
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 3880
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 3848
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp415:
# %bb.460:
	ori	$a0, $zero, 3848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s8, .LBB7_462
# %bb.461:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1426
	ori	$a1, $zero, 3864
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_462:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1428
	ori	$a0, $zero, 3880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_464
# %bb.463:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1429
	ori	$a1, $zero, 3896
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_464:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1431
	ori	$a0, $zero, 3912
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_466
# %bb.465:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1432
	ori	$a1, $zero, 3928
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_466:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1434
	ori	$a0, $zero, 3760
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 3952
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_469
# %bb.467:                              # %.noexc.i.i1436
.Ltmp417:
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3544
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp418:
# %bb.468:                              # %.noexc1437
	ori	$a1, $zero, 3544
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 3744
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 3760
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_469:                              # %._crit_edge.i.i.i1435
	beq	$a1, $s4, .LBB7_473
# %bb.470:                              # %._crit_edge.i.i.i1435
	bnez	$a1, .LBB7_472
# %bb.471:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_473
.LBB7_472:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_473:
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3544
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_475
# %bb.474:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1439
	ori	$a1, $zero, 3760
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_476
.LBB7_475:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1444
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_476:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1440
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 3752
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 3760
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp420:
	ori	$a1, $zero, 3944
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp421:
# %bb.477:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1447
.Ltmp423:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp424:
# %bb.478:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_480
# %bb.479:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1448
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_480:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1449
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_482
# %bb.481:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1450
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_482:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1451
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_484
# %bb.483:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1452
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_484:                              # %_ZN2PP8FunctionD2Ev.exit.i1453
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_486
# %bb.485:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1454
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_486:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1460
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_488
# %bb.487:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1461
	ori	$a1, $zero, 3760
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_488:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1463
	pcalau12i	$a0, %pc_hi20(.L.str.156)
	addi.d	$a0, $a0, %pc_lo12(.L.str.156)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	ori	$a2, $zero, 3728
	add.d	$s1, $sp, $a2
	ori	$a2, $zero, 3712
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	ori	$a2, $zero, 3728
	add.d	$a2, $sp, $a2
	st.h	$a1, $a2, 0
	ori	$a1, $zero, 3730
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 3
	ori	$a1, $zero, 3720
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3731
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3696
	add.d	$s2, $sp, $a0
	ori	$a0, $zero, 3680
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3696
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 3688
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3700
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3664
	add.d	$s3, $sp, $a0
	ori	$a0, $zero, 3648
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 20
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp426:
	ori	$a0, $zero, 3648
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp427:
# %bb.489:                              # %.noexc1474
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.157)
	addi.d	$a2, $a2, %pc_lo12(.L.str.157)
	vld	$vr0, $a2, 0
	ld.w	$a2, $a2, 16
	ori	$a3, $zero, 3648
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 3664
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.w	$a2, $a0, 16
	ori	$a0, $zero, 3648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 3656
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp429:
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3712
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 3680
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 3648
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp430:
# %bb.490:
	ori	$a0, $zero, 3648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_492
# %bb.491:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1476
	ori	$a1, $zero, 3664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_492:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1478
	ori	$a0, $zero, 3680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_494
# %bb.493:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1479
	ori	$a1, $zero, 3696
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_494:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1481
	ori	$a0, $zero, 3712
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_496
# %bb.495:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1482
	ori	$a1, $zero, 3728
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_496:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1484
	ori	$a0, $zero, 3560
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 3752
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_499
# %bb.497:                              # %.noexc.i.i1486
.Ltmp432:
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3344
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp433:
# %bb.498:                              # %.noexc1487
	ori	$a1, $zero, 3344
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 3544
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 3560
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_499:                              # %._crit_edge.i.i.i1485
	beq	$a1, $s4, .LBB7_503
# %bb.500:                              # %._crit_edge.i.i.i1485
	bnez	$a1, .LBB7_502
# %bb.501:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_503
.LBB7_502:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_503:
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3344
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_505
# %bb.504:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1489
	ori	$a1, $zero, 3560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_506
.LBB7_505:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1494
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_506:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1490
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 3552
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 3560
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp435:
	ori	$a1, $zero, 3744
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp436:
# %bb.507:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1497
.Ltmp438:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp439:
# %bb.508:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_510
# %bb.509:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1498
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_510:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1499
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_512
# %bb.511:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1500
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_512:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1501
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_514
# %bb.513:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1502
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_514:                              # %_ZN2PP8FunctionD2Ev.exit.i1503
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_516
# %bb.515:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1504
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_516:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1510
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_518
# %bb.517:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1511
	ori	$a1, $zero, 3560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_518:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1513
	pcalau12i	$a0, %pc_hi20(.L.str.158)
	addi.d	$a0, $a0, %pc_lo12(.L.str.158)
	ld.w	$a1, $a0, 0
	ld.b	$a0, $a0, 4
	ori	$a2, $zero, 3528
	add.d	$s1, $sp, $a2
	ori	$a2, $zero, 3512
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	ori	$a2, $zero, 3528
	add.d	$a2, $sp, $a2
	st.w	$a1, $a2, 0
	ori	$a1, $zero, 3532
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 5
	ori	$a1, $zero, 3520
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3533
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3496
	add.d	$s2, $sp, $a0
	ori	$a0, $zero, 3480
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3496
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 3488
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3500
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3464
	add.d	$s3, $sp, $a0
	ori	$a0, $zero, 3448
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 21
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp441:
	ori	$a0, $zero, 3448
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp442:
# %bb.519:                              # %.noexc1524
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.159)
	addi.d	$a2, $a2, %pc_lo12(.L.str.159)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 13
	ori	$a3, $zero, 3448
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 3464
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 13
	ori	$a0, $zero, 3448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 3456
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp444:
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3512
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 3480
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 3448
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp445:
# %bb.520:
	ori	$a0, $zero, 3448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_522
# %bb.521:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1526
	ori	$a1, $zero, 3464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_522:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1528
	ori	$a0, $zero, 3480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_524
# %bb.523:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1529
	ori	$a1, $zero, 3496
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_524:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1531
	ori	$a0, $zero, 3512
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_526
# %bb.525:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1532
	ori	$a1, $zero, 3528
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_526:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1534
	ori	$a0, $zero, 3360
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 3552
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_529
# %bb.527:                              # %.noexc.i.i1536
.Ltmp447:
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3144
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp448:
# %bb.528:                              # %.noexc1537
	ori	$a1, $zero, 3144
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 3344
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 3360
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_529:                              # %._crit_edge.i.i.i1535
	beq	$a1, $s4, .LBB7_533
# %bb.530:                              # %._crit_edge.i.i.i1535
	bnez	$a1, .LBB7_532
# %bb.531:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_533
.LBB7_532:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_533:
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3144
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_535
# %bb.534:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1539
	ori	$a1, $zero, 3360
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_536
.LBB7_535:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1544
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_536:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1540
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 3352
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 3360
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp450:
	ori	$a1, $zero, 3544
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp451:
# %bb.537:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1547
.Ltmp453:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp454:
# %bb.538:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_540
# %bb.539:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1548
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_540:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1549
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_542
# %bb.541:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1550
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_542:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1551
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_544
# %bb.543:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1552
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_544:                              # %_ZN2PP8FunctionD2Ev.exit.i1553
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_546
# %bb.545:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1554
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_546:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1560
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_548
# %bb.547:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1561
	ori	$a1, $zero, 3360
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_548:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1563
	pcalau12i	$a0, %pc_hi20(.L.str.160)
	addi.d	$a0, $a0, %pc_lo12(.L.str.160)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	ori	$a2, $zero, 3328
	add.d	$s1, $sp, $a2
	ori	$a2, $zero, 3312
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	ori	$a2, $zero, 3328
	add.d	$a2, $sp, $a2
	st.h	$a1, $a2, 0
	ori	$a1, $zero, 3330
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 3
	ori	$a1, $zero, 3320
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3331
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3296
	add.d	$s2, $sp, $a0
	ori	$a0, $zero, 3280
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3296
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 3288
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3300
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 3264
	add.d	$s3, $sp, $a0
	ori	$a0, $zero, 3248
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 20
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp456:
	ori	$a0, $zero, 3248
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp457:
# %bb.549:                              # %.noexc1574
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.161)
	addi.d	$a2, $a2, %pc_lo12(.L.str.161)
	vld	$vr0, $a2, 0
	ld.w	$a2, $a2, 16
	ori	$a3, $zero, 3248
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 3264
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.w	$a2, $a0, 16
	ori	$a0, $zero, 3248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 3256
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp459:
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3312
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 3280
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 3248
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp460:
# %bb.550:
	ori	$a0, $zero, 3248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_552
# %bb.551:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1576
	ori	$a1, $zero, 3264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_552:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1578
	ori	$a0, $zero, 3280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_554
# %bb.553:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1579
	ori	$a1, $zero, 3296
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_554:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1581
	ori	$a0, $zero, 3312
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_556
# %bb.555:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1582
	ori	$a1, $zero, 3328
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_556:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1584
	ori	$a0, $zero, 3160
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 3352
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_559
# %bb.557:                              # %.noexc.i.i1586
.Ltmp462:
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2944
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp463:
# %bb.558:                              # %.noexc1587
	ori	$a1, $zero, 2944
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 3144
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 3160
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_559:                              # %._crit_edge.i.i.i1585
	beq	$a1, $s4, .LBB7_563
# %bb.560:                              # %._crit_edge.i.i.i1585
	bnez	$a1, .LBB7_562
# %bb.561:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_563
.LBB7_562:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_563:
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2944
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_565
# %bb.564:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1589
	ori	$a1, $zero, 3160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_566
.LBB7_565:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1594
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_566:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1590
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 3152
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 3160
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp465:
	ori	$a1, $zero, 3344
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp466:
# %bb.567:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1597
.Ltmp468:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp469:
# %bb.568:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_570
# %bb.569:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1598
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_570:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1599
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_572
# %bb.571:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1600
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_572:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1601
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_574
# %bb.573:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1602
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_574:                              # %_ZN2PP8FunctionD2Ev.exit.i1603
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_576
# %bb.575:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1604
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_576:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1610
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_578
# %bb.577:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1611
	ori	$a1, $zero, 3160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_578:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1613
	ori	$a0, $zero, 3128
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 3112
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$s8, 427750
	ori	$a0, $s8, 2419
	ori	$a1, $zero, 3128
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 3120
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a1, $zero, 3132
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	ori	$a1, $zero, 3096
	add.d	$s2, $sp, $a1
	ori	$a1, $zero, 3080
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	ori	$a1, $zero, 3096
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	ori	$a1, $zero, 3088
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3100
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.163)
	addi.d	$a0, $a0, %pc_lo12(.L.str.163)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 7
	ori	$a2, $zero, 3064
	add.d	$s3, $sp, $a2
	ori	$a2, $zero, 3048
	add.d	$a2, $sp, $a2
	st.d	$s3, $a2, 0
	ori	$a2, $zero, 3064
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	ori	$a1, $zero, 3071
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 15
	ori	$a1, $zero, 3056
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 3079
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp471:
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 3112
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 3080
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 3048
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp472:
# %bb.579:
	ori	$a0, $zero, 3048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_581
# %bb.580:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1626
	ori	$a1, $zero, 3064
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_581:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1628
	ori	$a0, $zero, 3080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_583
# %bb.582:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1629
	ori	$a1, $zero, 3096
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_583:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1631
	ori	$a0, $zero, 3112
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_585
# %bb.584:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1632
	ori	$a1, $zero, 3128
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_585:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1634
	ori	$a0, $zero, 2960
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 3152
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_588
# %bb.586:                              # %.noexc.i.i1636
.Ltmp474:
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2744
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp475:
# %bb.587:                              # %.noexc1637
	ori	$a1, $zero, 2744
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 2944
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2960
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_588:                              # %._crit_edge.i.i.i1635
	beq	$a1, $s4, .LBB7_592
# %bb.589:                              # %._crit_edge.i.i.i1635
	bnez	$a1, .LBB7_591
# %bb.590:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_592
.LBB7_591:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_592:
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2744
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_594
# %bb.593:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1639
	ori	$a1, $zero, 2960
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_595
.LBB7_594:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1644
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_595:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1640
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 2952
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2960
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp477:
	ori	$a1, $zero, 3144
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp478:
# %bb.596:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1647
.Ltmp480:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp481:
# %bb.597:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_599
# %bb.598:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1648
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_599:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1649
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_601
# %bb.600:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1650
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_601:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1651
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_603
# %bb.602:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1652
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_603:                              # %_ZN2PP8FunctionD2Ev.exit.i1653
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_605
# %bb.604:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1654
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_605:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1660
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_607
# %bb.606:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1661
	ori	$a1, $zero, 2960
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_607:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1663
	ori	$a0, $zero, 2928
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 476967
	ori	$a0, $a0, 371
	ori	$a1, $zero, 2928
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 2920
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a1, $zero, 2932
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	ori	$a1, $zero, 2896
	add.d	$s2, $sp, $a1
	ori	$a1, $zero, 2880
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	ori	$a1, $zero, 2896
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	ori	$a1, $zero, 2888
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2900
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2864
	add.d	$s3, $sp, $a0
	ori	$a0, $zero, 2848
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 22
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp483:
	ori	$a0, $zero, 2848
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp484:
# %bb.608:                              # %.noexc1674
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.165)
	addi.d	$a2, $a2, %pc_lo12(.L.str.165)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 14
	ori	$a3, $zero, 2848
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 2864
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 14
	ori	$a0, $zero, 2848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 2856
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp486:
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2912
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 2880
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 2848
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp487:
# %bb.609:
	ori	$a0, $zero, 2848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_611
# %bb.610:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1676
	ori	$a1, $zero, 2864
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_611:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1678
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_613
# %bb.612:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1679
	ori	$a1, $zero, 2896
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_613:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1681
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_615
# %bb.614:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1682
	ori	$a1, $zero, 2928
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_615:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1684
	ori	$a0, $zero, 2760
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2952
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_618
# %bb.616:                              # %.noexc.i.i1686
.Ltmp489:
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2544
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp490:
# %bb.617:                              # %.noexc1687
	ori	$a1, $zero, 2544
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 2744
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2760
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_618:                              # %._crit_edge.i.i.i1685
	beq	$a1, $s4, .LBB7_622
# %bb.619:                              # %._crit_edge.i.i.i1685
	bnez	$a1, .LBB7_621
# %bb.620:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_622
.LBB7_621:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_622:
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2544
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_624
# %bb.623:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1689
	ori	$a1, $zero, 2760
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_625
.LBB7_624:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1694
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_625:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1690
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 2752
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2760
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp492:
	ori	$a1, $zero, 2944
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp493:
# %bb.626:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1697
.Ltmp495:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp496:
# %bb.627:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_629
# %bb.628:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1698
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_629:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1699
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_631
# %bb.630:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1700
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_631:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1701
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_633
# %bb.632:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1702
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_633:                              # %_ZN2PP8FunctionD2Ev.exit.i1703
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_635
# %bb.634:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1704
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_635:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1710
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_637
# %bb.636:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1711
	ori	$a1, $zero, 2760
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_637:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1713
	pcalau12i	$a0, %pc_hi20(.L.str.166)
	addi.d	$a0, $a0, %pc_lo12(.L.str.166)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	ori	$a2, $zero, 2728
	add.d	$s1, $sp, $a2
	ori	$a2, $zero, 2712
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	ori	$a2, $zero, 2728
	add.d	$a2, $sp, $a2
	st.h	$a1, $a2, 0
	ori	$a1, $zero, 2730
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 3
	ori	$a1, $zero, 2720
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2731
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2696
	add.d	$s2, $sp, $a0
	ori	$a0, $zero, 2680
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2696
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 2688
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2700
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2664
	add.d	$s3, $sp, $a0
	ori	$a0, $zero, 2648
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 23
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp498:
	ori	$a0, $zero, 2648
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp499:
# %bb.638:                              # %.noexc1724
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.167)
	addi.d	$a2, $a2, %pc_lo12(.L.str.167)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 15
	ori	$a3, $zero, 2648
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 2664
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 15
	ori	$a0, $zero, 2648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 2656
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp501:
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2712
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 2680
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 2648
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp502:
# %bb.639:
	ori	$a0, $zero, 2648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_641
# %bb.640:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1726
	ori	$a1, $zero, 2664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_641:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1728
	ori	$a0, $zero, 2680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_643
# %bb.642:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1729
	ori	$a1, $zero, 2696
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_643:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1731
	ori	$a0, $zero, 2712
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_645
# %bb.644:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1732
	ori	$a1, $zero, 2728
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_645:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1734
	ori	$a0, $zero, 2560
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2752
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_648
# %bb.646:                              # %.noexc.i.i1736
.Ltmp504:
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp505:
# %bb.647:                              # %.noexc1737
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 2544
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2560
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_648:                              # %._crit_edge.i.i.i1735
	beq	$a1, $s4, .LBB7_652
# %bb.649:                              # %._crit_edge.i.i.i1735
	bnez	$a1, .LBB7_651
# %bb.650:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_652
.LBB7_651:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_652:
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_654
# %bb.653:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1739
	ori	$a1, $zero, 2560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_655
.LBB7_654:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1744
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_655:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1740
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 2552
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2560
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp507:
	ori	$a1, $zero, 2744
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp508:
# %bb.656:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1747
.Ltmp510:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp511:
# %bb.657:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_659
# %bb.658:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1748
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_659:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1749
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_661
# %bb.660:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1750
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_661:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1751
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_663
# %bb.662:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1752
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_663:                              # %_ZN2PP8FunctionD2Ev.exit.i1753
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_665
# %bb.664:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1754
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_665:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1760
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_667
# %bb.666:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1761
	ori	$a1, $zero, 2560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_667:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1763
	ori	$a0, $zero, 2528
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2512
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $s8, 372
	ori	$a1, $zero, 2528
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 2520
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a1, $zero, 2532
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	ori	$a1, $zero, 2496
	add.d	$s2, $sp, $a1
	ori	$a1, $zero, 2480
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	ori	$a1, $zero, 2496
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	ori	$a1, $zero, 2488
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2500
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2464
	add.d	$s3, $sp, $a0
	ori	$a0, $zero, 2448
	add.d	$a0, $sp, $a0
	st.d	$s3, $a0, 0
	ori	$a0, $zero, 18
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp513:
	ori	$a0, $zero, 2448
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp514:
# %bb.668:                              # %.noexc1774
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.169)
	addi.d	$a2, $a2, %pc_lo12(.L.str.169)
	vld	$vr0, $a2, 0
	ld.h	$a2, $a2, 16
	ori	$a3, $zero, 2448
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 2464
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.h	$a2, $a0, 16
	ori	$a0, $zero, 2448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 2456
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp516:
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2512
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	ori	$a4, $zero, 2480
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 2448
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp517:
# %bb.669:
	ori	$a0, $zero, 2448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_671
# %bb.670:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1776
	ori	$a1, $zero, 2464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_671:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1778
	ori	$a0, $zero, 2480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_673
# %bb.672:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1779
	ori	$a1, $zero, 2496
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_673:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1781
	ori	$a0, $zero, 2512
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_675
# %bb.674:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1782
	ori	$a1, $zero, 2528
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_675:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1784
	ori	$a0, $zero, 2360
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2552
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_678
# %bb.676:                              # %.noexc.i.i1786
.Ltmp519:
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2144
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp520:
# %bb.677:                              # %.noexc1787
	ori	$a1, $zero, 2144
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 2344
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2360
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_678:                              # %._crit_edge.i.i.i1785
	beq	$a1, $s4, .LBB7_682
# %bb.679:                              # %._crit_edge.i.i.i1785
	bnez	$a1, .LBB7_681
# %bb.680:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_682
.LBB7_681:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_682:
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2144
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_684
# %bb.683:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1789
	ori	$a1, $zero, 2360
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_685
.LBB7_684:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1794
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_685:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1790
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 2352
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2360
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp522:
	ori	$a1, $zero, 2544
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp523:
# %bb.686:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1797
.Ltmp525:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp526:
# %bb.687:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_689
# %bb.688:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1798
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_689:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1799
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_691
# %bb.690:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1800
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_691:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1801
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_693
# %bb.692:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1802
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_693:                              # %_ZN2PP8FunctionD2Ev.exit.i1803
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_695
# %bb.694:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1804
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_695:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1810
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_697
# %bb.696:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1811
	ori	$a1, $zero, 2360
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_697:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1813
	pcalau12i	$a0, %pc_hi20(.L.str.170)
	addi.d	$a0, $a0, %pc_lo12(.L.str.170)
	ld.w	$a1, $a0, 0
	ld.b	$a0, $a0, 4
	ori	$a2, $zero, 2328
	add.d	$s1, $sp, $a2
	ori	$a2, $zero, 2312
	add.d	$a2, $sp, $a2
	st.d	$s1, $a2, 0
	ori	$a2, $zero, 2328
	add.d	$a2, $sp, $a2
	st.w	$a1, $a2, 0
	ori	$a1, $zero, 2332
	add.d	$a1, $sp, $a1
	st.b	$a0, $a1, 0
	ori	$a0, $zero, 5
	ori	$a1, $zero, 2320
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2333
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2296
	add.d	$s2, $sp, $a0
	ori	$a0, $zero, 2280
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2296
	add.d	$a0, $sp, $a0
	st.w	$s7, $a0, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 2288
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2300
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2264
	add.d	$s8, $sp, $a0
	ori	$a0, $zero, 2248
	add.d	$a0, $sp, $a0
	st.d	$s8, $a0, 0
	ori	$a0, $zero, 18
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp528:
	ori	$a0, $zero, 2248
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp529:
# %bb.698:                              # %.noexc1824
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.171)
	addi.d	$a2, $a2, %pc_lo12(.L.str.171)
	vld	$vr0, $a2, 0
	ld.h	$a2, $a2, 16
	ori	$a3, $zero, 2248
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 2264
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.h	$a2, $a0, 16
	ori	$a0, $zero, 2248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 2256
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp531:
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2312
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 2
	ori	$a4, $zero, 2280
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 2248
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp532:
# %bb.699:
	ori	$a0, $zero, 2248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s8, .LBB7_701
# %bb.700:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1826
	ori	$a1, $zero, 2264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_701:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1828
	ori	$a0, $zero, 2280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_703
# %bb.702:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1829
	ori	$a1, $zero, 2296
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_703:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1831
	ori	$a0, $zero, 2312
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_705
# %bb.704:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1832
	ori	$a1, $zero, 2328
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_705:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1834
	ori	$a0, $zero, 2160
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2352
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 1944
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_708
# %bb.706:                              # %.noexc.i.i1836
.Ltmp534:
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	addi.d	$a1, $sp, 1944
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp535:
# %bb.707:                              # %.noexc1837
	ld.d	$a1, $sp, 1944
	ori	$a2, $zero, 2144
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2160
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB7_708:                              # %._crit_edge.i.i.i1835
	beq	$a1, $s4, .LBB7_712
# %bb.709:                              # %._crit_edge.i.i.i1835
	bnez	$a1, .LBB7_711
# %bb.710:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_712
.LBB7_711:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_712:
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s2, $sp, 1944
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_714
# %bb.713:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1839
	ori	$a1, $zero, 2160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_715
.LBB7_714:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1844
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_715:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1840
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2160
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp537:
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp538:
# %bb.716:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1847
.Ltmp540:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp541:
# %bb.717:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_719
# %bb.718:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1848
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_719:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1849
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_721
# %bb.720:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1850
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_721:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1851
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_723
# %bb.722:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1852
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_723:                              # %_ZN2PP8FunctionD2Ev.exit.i1853
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_725
# %bb.724:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1854
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_725:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1860
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_727
# %bb.726:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1861
	ori	$a1, $zero, 2160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_727:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1863
	ori	$a0, $zero, 2128
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2112
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	lu12i.w	$a0, 411382
	ori	$a0, $a0, 3430
	ori	$a1, $zero, 2128
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
	ori	$a0, $zero, 4
	ori	$a1, $zero, 2120
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a1, $zero, 2132
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	ori	$a1, $zero, 2096
	add.d	$s2, $sp, $a1
	ori	$a1, $zero, 2080
	add.d	$a1, $sp, $a1
	st.d	$s2, $a1, 0
	ori	$a1, $zero, 2096
	add.d	$a1, $sp, $a1
	st.w	$s7, $a1, 0
	ori	$a1, $zero, 2088
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2100
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2064
	add.d	$s8, $sp, $a0
	ori	$a0, $zero, 2048
	add.d	$a0, $sp, $a0
	st.d	$s8, $a0, 0
	ori	$a0, $zero, 22
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp543:
	ori	$a0, $zero, 2048
	add.d	$a0, $sp, $a0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp544:
# %bb.728:                              # %.noexc1874
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.173)
	addi.d	$a2, $a2, %pc_lo12(.L.str.173)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 14
	ori	$a3, $zero, 2048
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 2064
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 14
	ori	$a0, $zero, 2048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 2056
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.Ltmp546:
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2112
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 1
	ori	$a3, $zero, 2
	ori	$a4, $zero, 2080
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 2048
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp547:
# %bb.729:
	ori	$a0, $zero, 2048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s8, .LBB7_731
# %bb.730:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1876
	ori	$a1, $zero, 2064
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_731:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1878
	ori	$a0, $zero, 2080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_733
# %bb.732:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1879
	ori	$a1, $zero, 2096
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_733:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1881
	ori	$a0, $zero, 2112
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_735
# %bb.734:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1882
	ori	$a1, $zero, 2128
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_735:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1884
	addi.d	$s1, $sp, 1960
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	ld.d	$s2, $a0, 0
	st.d	$s1, $sp, 1944
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 1744
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_738
# %bb.736:                              # %.noexc.i.i1886
.Ltmp549:
	addi.d	$a0, $sp, 1944
	addi.d	$a1, $sp, 1744
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp550:
# %bb.737:                              # %.noexc1887
	ld.d	$a1, $sp, 1744
	st.d	$a0, $sp, 1944
	st.d	$a1, $sp, 1960
.LBB7_738:                              # %._crit_edge.i.i.i1885
	beq	$a1, $s4, .LBB7_742
# %bb.739:                              # %._crit_edge.i.i.i1885
	bnez	$a1, .LBB7_741
# %bb.740:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_742
.LBB7_741:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_742:
	ld.d	$a0, $sp, 1944
	ld.d	$s2, $sp, 1744
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_744
# %bb.743:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1889
	ld.d	$a1, $sp, 1960
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_745
.LBB7_744:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1894
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_745:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1890
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 1944
	st.d	$zero, $sp, 1952
	st.b	$zero, $sp, 1960
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp552:
	ori	$a1, $zero, 2144
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp553:
# %bb.746:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1897
.Ltmp555:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp556:
# %bb.747:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_749
# %bb.748:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1898
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_749:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1899
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_751
# %bb.750:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1900
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_751:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1901
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_753
# %bb.752:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1902
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_753:                              # %_ZN2PP8FunctionD2Ev.exit.i1903
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_755
# %bb.754:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1904
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_755:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1910
	ld.d	$a0, $sp, 1944
	beq	$a0, $s1, .LBB7_757
# %bb.756:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1911
	ld.d	$a1, $sp, 1960
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_757:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1913
	pcalau12i	$a0, %pc_hi20(.L.str.174)
	addi.d	$a0, $a0, %pc_lo12(.L.str.174)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	addi.d	$s1, $sp, 1928
	st.d	$s1, $sp, 1912
	st.h	$a1, $sp, 1928
	st.b	$a0, $sp, 1930
	ori	$a0, $zero, 3
	st.d	$a0, $sp, 1920
	st.b	$zero, $sp, 1931
	addi.d	$s2, $sp, 1896
	st.d	$s2, $sp, 1880
	st.w	$s7, $sp, 1896
	ori	$a0, $zero, 4
	st.d	$a0, $sp, 1888
	st.b	$zero, $sp, 1900
	addi.d	$s8, $sp, 1864
	st.d	$s8, $sp, 1848
	ori	$a0, $zero, 25
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp558:
	addi.d	$a0, $sp, 1848
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp559:
# %bb.758:                              # %.noexc1924
	st.d	$a0, $sp, 1848
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.175)
	addi.d	$a2, $a2, %pc_lo12(.L.str.175)
	vld	$vr0, $a2, 0
	ld.b	$a3, $a2, 24
	ld.d	$a2, $a2, 16
	st.d	$a1, $sp, 1864
	vst	$vr0, $a0, 0
	st.b	$a3, $a0, 24
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 1848
	st.d	$a1, $sp, 1856
	stx.b	$zero, $a0, $a1
.Ltmp561:
	addi.d	$a0, $sp, 1944
	addi.d	$a1, $sp, 1912
	ori	$a2, $zero, 1
	ori	$a3, $zero, 2
	addi.d	$a4, $sp, 1880
	addi.d	$a5, $sp, 1848
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp562:
# %bb.759:
	ld.d	$a0, $sp, 1848
	beq	$a0, $s8, .LBB7_761
# %bb.760:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1926
	ld.d	$a1, $sp, 1864
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_761:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1928
	ld.d	$a0, $sp, 1880
	beq	$a0, $s2, .LBB7_763
# %bb.762:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1929
	ld.d	$a1, $sp, 1896
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_763:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1931
	ld.d	$a0, $sp, 1912
	beq	$a0, $s1, .LBB7_765
# %bb.764:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1932
	ld.d	$a1, $sp, 1928
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_765:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1934
	addi.d	$s1, $sp, 1760
	ld.d	$a1, $sp, 1952
	ld.d	$s2, $sp, 1944
	st.d	$s1, $sp, 1744
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 1544
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_768
# %bb.766:                              # %.noexc.i.i1936
.Ltmp564:
	addi.d	$a0, $sp, 1744
	addi.d	$a1, $sp, 1544
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp565:
# %bb.767:                              # %.noexc1937
	ld.d	$a1, $sp, 1544
	st.d	$a0, $sp, 1744
	st.d	$a1, $sp, 1760
.LBB7_768:                              # %._crit_edge.i.i.i1935
	beq	$a1, $s4, .LBB7_772
# %bb.769:                              # %._crit_edge.i.i.i1935
	bnez	$a1, .LBB7_771
# %bb.770:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_772
.LBB7_771:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_772:
	ld.d	$a0, $sp, 1744
	ld.d	$s2, $sp, 1544
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_774
# %bb.773:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1939
	ld.d	$a1, $sp, 1760
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_775
.LBB7_774:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1944
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_775:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1940
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 1744
	st.d	$zero, $sp, 1752
	st.b	$zero, $sp, 1760
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp567:
	addi.d	$a1, $sp, 1944
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp568:
# %bb.776:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1947
.Ltmp570:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp571:
# %bb.777:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_779
# %bb.778:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1948
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_779:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1949
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_781
# %bb.780:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i1950
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_781:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i1951
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_783
# %bb.782:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i1952
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_783:                              # %_ZN2PP8FunctionD2Ev.exit.i1953
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_785
# %bb.784:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1954
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_785:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit1960
	ld.d	$a0, $sp, 1744
	beq	$a0, $s1, .LBB7_787
# %bb.786:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1961
	ld.d	$a1, $sp, 1760
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_787:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1963
	pcalau12i	$a0, %pc_hi20(.L.str.176)
	addi.d	$a0, $a0, %pc_lo12(.L.str.176)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	addi.d	$s1, $sp, 1728
	st.d	$s1, $sp, 1712
	st.h	$a1, $sp, 1728
	st.b	$a0, $sp, 1730
	ori	$a0, $zero, 3
	st.d	$a0, $sp, 1720
	st.b	$zero, $sp, 1731
	addi.d	$s2, $sp, 1696
	st.d	$s2, $sp, 1680
	st.w	$s7, $sp, 1696
	ori	$a0, $zero, 4
	st.d	$a0, $sp, 1688
	st.b	$zero, $sp, 1700
	addi.d	$s8, $sp, 1664
	st.d	$s8, $sp, 1648
	ori	$a0, $zero, 30
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp573:
	addi.d	$a0, $sp, 1648
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp574:
# %bb.788:                              # %.noexc1974
	st.d	$a0, $sp, 1648
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.177)
	addi.d	$a2, $a2, %pc_lo12(.L.str.177)
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 22
	ld.d	$a2, $a2, 16
	st.d	$a1, $sp, 1664
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 22
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 1648
	st.d	$a1, $sp, 1656
	stx.b	$zero, $a0, $a1
.Ltmp576:
	addi.d	$a0, $sp, 1744
	addi.d	$a1, $sp, 1712
	ori	$a2, $zero, 1
	ori	$a3, $zero, 2
	addi.d	$a4, $sp, 1680
	addi.d	$a5, $sp, 1648
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp577:
# %bb.789:
	ld.d	$a0, $sp, 1648
	beq	$a0, $s8, .LBB7_791
# %bb.790:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1976
	ld.d	$a1, $sp, 1664
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_791:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1978
	ld.d	$a0, $sp, 1680
	beq	$a0, $s2, .LBB7_793
# %bb.792:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1979
	ld.d	$a1, $sp, 1696
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_793:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1981
	ld.d	$a0, $sp, 1712
	beq	$a0, $s1, .LBB7_795
# %bb.794:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1982
	ld.d	$a1, $sp, 1728
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_795:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1984
	addi.d	$s1, $sp, 1560
	ld.d	$a1, $sp, 1752
	ld.d	$s2, $sp, 1744
	st.d	$s1, $sp, 1544
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 1344
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_798
# %bb.796:                              # %.noexc.i.i1986
.Ltmp579:
	addi.d	$a0, $sp, 1544
	addi.d	$a1, $sp, 1344
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp580:
# %bb.797:                              # %.noexc1987
	ld.d	$a1, $sp, 1344
	st.d	$a0, $sp, 1544
	st.d	$a1, $sp, 1560
.LBB7_798:                              # %._crit_edge.i.i.i1985
	beq	$a1, $s4, .LBB7_802
# %bb.799:                              # %._crit_edge.i.i.i1985
	bnez	$a1, .LBB7_801
# %bb.800:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_802
.LBB7_801:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_802:
	ld.d	$a0, $sp, 1544
	ld.d	$s2, $sp, 1344
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_804
# %bb.803:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1989
	ld.d	$a1, $sp, 1560
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_805
.LBB7_804:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i1994
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_805:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i1990
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 1544
	st.d	$zero, $sp, 1552
	st.b	$zero, $sp, 1560
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp582:
	addi.d	$a1, $sp, 1744
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp583:
# %bb.806:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit1997
.Ltmp585:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp586:
# %bb.807:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_809
# %bb.808:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i1998
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_809:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i1999
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_811
# %bb.810:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2000
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_811:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2001
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_813
# %bb.812:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2002
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_813:                              # %_ZN2PP8FunctionD2Ev.exit.i2003
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_815
# %bb.814:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2004
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_815:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2010
	ld.d	$a0, $sp, 1544
	beq	$a0, $s1, .LBB7_817
# %bb.816:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2011
	ld.d	$a1, $sp, 1560
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_817:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2013
	pcalau12i	$a0, %pc_hi20(.L.str.178)
	addi.d	$a0, $a0, %pc_lo12(.L.str.178)
	ld.h	$a1, $a0, 0
	ld.b	$a0, $a0, 2
	addi.d	$s1, $sp, 1528
	st.d	$s1, $sp, 1512
	st.h	$a1, $sp, 1528
	st.b	$a0, $sp, 1530
	ori	$a0, $zero, 3
	st.d	$a0, $sp, 1520
	st.b	$zero, $sp, 1531
	addi.d	$s2, $sp, 1496
	st.d	$s2, $sp, 1480
	st.w	$s7, $sp, 1496
	ori	$a0, $zero, 4
	st.d	$a0, $sp, 1488
	st.b	$zero, $sp, 1500
	addi.d	$s7, $sp, 1464
	st.d	$s7, $sp, 1448
	ori	$a0, $zero, 29
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp588:
	addi.d	$a0, $sp, 1448
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp589:
# %bb.818:                              # %.noexc2024
	st.d	$a0, $sp, 1448
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.179)
	addi.d	$a2, $a2, %pc_lo12(.L.str.179)
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 21
	ld.d	$a2, $a2, 16
	st.d	$a1, $sp, 1464
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 21
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 1448
	st.d	$a1, $sp, 1456
	stx.b	$zero, $a0, $a1
.Ltmp591:
	addi.d	$a0, $sp, 1544
	addi.d	$a1, $sp, 1512
	ori	$a2, $zero, 1
	ori	$a3, $zero, 2
	addi.d	$a4, $sp, 1480
	addi.d	$a5, $sp, 1448
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp592:
# %bb.819:
	ld.d	$a0, $sp, 1448
	beq	$a0, $s7, .LBB7_821
# %bb.820:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2026
	ld.d	$a1, $sp, 1464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_821:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2028
	ld.d	$a0, $sp, 1480
	beq	$a0, $s2, .LBB7_823
# %bb.822:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2029
	ld.d	$a1, $sp, 1496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_823:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2031
	ld.d	$a0, $sp, 1512
	beq	$a0, $s1, .LBB7_825
# %bb.824:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2032
	ld.d	$a1, $sp, 1528
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_825:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2034
	addi.d	$s1, $sp, 1360
	ld.d	$a1, $sp, 1552
	ld.d	$s2, $sp, 1544
	st.d	$s1, $sp, 1344
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 1144
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_828
# %bb.826:                              # %.noexc.i.i2036
.Ltmp594:
	addi.d	$a0, $sp, 1344
	addi.d	$a1, $sp, 1144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp595:
# %bb.827:                              # %.noexc2037
	ld.d	$a1, $sp, 1144
	st.d	$a0, $sp, 1344
	st.d	$a1, $sp, 1360
.LBB7_828:                              # %._crit_edge.i.i.i2035
	beq	$a1, $s4, .LBB7_832
# %bb.829:                              # %._crit_edge.i.i.i2035
	bnez	$a1, .LBB7_831
# %bb.830:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_832
.LBB7_831:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_832:
	ld.d	$a0, $sp, 1344
	ld.d	$s2, $sp, 1144
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_834
# %bb.833:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2039
	ld.d	$a1, $sp, 1360
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_835
.LBB7_834:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2044
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_835:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2040
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 1344
	st.d	$zero, $sp, 1352
	st.b	$zero, $sp, 1360
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp597:
	addi.d	$a1, $sp, 1544
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp598:
# %bb.836:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2047
.Ltmp600:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp601:
# %bb.837:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_839
# %bb.838:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2048
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_839:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2049
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_841
# %bb.840:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2050
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_841:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2051
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_843
# %bb.842:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2052
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_843:                              # %_ZN2PP8FunctionD2Ev.exit.i2053
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_845
# %bb.844:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2054
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_845:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2060
	ld.d	$a0, $sp, 1344
	beq	$a0, $s1, .LBB7_847
# %bb.846:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2061
	ld.d	$a1, $sp, 1360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_847:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2063
	pcalau12i	$a0, %pc_hi20(.L.str.180)
	addi.d	$a0, $a0, %pc_lo12(.L.str.180)
	ld.w	$a1, $a0, 0
	ld.h	$a0, $a0, 4
	addi.d	$s1, $sp, 1328
	st.d	$s1, $sp, 1312
	st.w	$a1, $sp, 1328
	st.h	$a0, $sp, 1332
	ori	$a0, $zero, 6
	st.d	$a0, $sp, 1320
	st.b	$zero, $sp, 1334
	pcalau12i	$a1, %pc_hi20(.L.str.181)
	addi.d	$a1, $a1, %pc_lo12(.L.str.181)
	ld.w	$s7, $a1, 0
	ld.h	$s8, $a1, 4
	addi.d	$s2, $sp, 1296
	st.d	$s2, $sp, 1280
	st.w	$s7, $sp, 1296
	st.h	$s8, $sp, 1300
	st.d	$a0, $sp, 1288
	st.b	$zero, $sp, 1302
	addi.d	$s3, $sp, 1264
	st.d	$s3, $sp, 1248
	ori	$a0, $zero, 22
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp603:
	addi.d	$a0, $sp, 1248
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp604:
# %bb.848:                              # %.noexc2074
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.182)
	addi.d	$a2, $a2, %pc_lo12(.L.str.182)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 14
	st.d	$a0, $sp, 1248
	st.d	$a1, $sp, 1264
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 14
	ld.d	$a0, $sp, 1248
	st.d	$a1, $sp, 1256
	stx.b	$zero, $a0, $a1
.Ltmp606:
	addi.d	$a0, $sp, 1344
	addi.d	$a1, $sp, 1312
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	addi.d	$a4, $sp, 1280
	addi.d	$a5, $sp, 1248
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp607:
# %bb.849:
	ld.d	$a0, $sp, 1248
	beq	$a0, $s3, .LBB7_851
# %bb.850:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2076
	ld.d	$a1, $sp, 1264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_851:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2078
	ld.d	$a0, $sp, 1280
	beq	$a0, $s2, .LBB7_853
# %bb.852:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2079
	ld.d	$a1, $sp, 1296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_853:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2081
	ld.d	$a0, $sp, 1312
	beq	$a0, $s1, .LBB7_855
# %bb.854:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2082
	ld.d	$a1, $sp, 1328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_855:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2084
	addi.d	$s1, $sp, 1160
	ld.d	$a1, $sp, 1352
	ld.d	$s2, $sp, 1344
	st.d	$s1, $sp, 1144
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 944
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_858
# %bb.856:                              # %.noexc.i.i2086
.Ltmp609:
	addi.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 944
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp610:
# %bb.857:                              # %.noexc2087
	ld.d	$a1, $sp, 944
	st.d	$a0, $sp, 1144
	st.d	$a1, $sp, 1160
.LBB7_858:                              # %._crit_edge.i.i.i2085
	beq	$a1, $s4, .LBB7_862
# %bb.859:                              # %._crit_edge.i.i.i2085
	bnez	$a1, .LBB7_861
# %bb.860:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_862
.LBB7_861:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_862:
	ld.d	$a0, $sp, 1144
	ld.d	$s2, $sp, 944
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_864
# %bb.863:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2089
	ld.d	$a1, $sp, 1160
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_865
.LBB7_864:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2094
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_865:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2090
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 1144
	st.d	$zero, $sp, 1152
	st.b	$zero, $sp, 1160
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp612:
	addi.d	$a1, $sp, 1344
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp613:
# %bb.866:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2097
.Ltmp615:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp616:
# %bb.867:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_869
# %bb.868:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2098
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_869:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2099
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_871
# %bb.870:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2100
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_871:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2101
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_873
# %bb.872:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2102
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_873:                              # %_ZN2PP8FunctionD2Ev.exit.i2103
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_875
# %bb.874:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2104
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_875:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2110
	ld.d	$a0, $sp, 1144
	beq	$a0, $s1, .LBB7_877
# %bb.876:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2111
	ld.d	$a1, $sp, 1160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_877:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2113
	pcalau12i	$a0, %pc_hi20(.L.str.183)
	addi.d	$a0, $a0, %pc_lo12(.L.str.183)
	ld.w	$a1, $a0, 0
	ld.h	$a0, $a0, 4
	addi.d	$s1, $sp, 1128
	st.d	$s1, $sp, 1112
	st.w	$a1, $sp, 1128
	st.h	$a0, $sp, 1132
	ori	$a0, $zero, 6
	st.d	$a0, $sp, 1120
	st.b	$zero, $sp, 1134
	addi.d	$s2, $sp, 1096
	st.d	$s2, $sp, 1080
	st.w	$s7, $sp, 1096
	st.h	$s8, $sp, 1100
	st.d	$a0, $sp, 1088
	st.b	$zero, $sp, 1102
	addi.d	$s3, $sp, 1064
	st.d	$s3, $sp, 1048
	ori	$a0, $zero, 23
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp618:
	addi.d	$a0, $sp, 1048
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp619:
# %bb.878:                              # %.noexc2124
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.184)
	addi.d	$a2, $a2, %pc_lo12(.L.str.184)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 15
	st.d	$a0, $sp, 1048
	st.d	$a1, $sp, 1064
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 15
	ld.d	$a0, $sp, 1048
	st.d	$a1, $sp, 1056
	stx.b	$zero, $a0, $a1
.Ltmp621:
	addi.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 1112
	ori	$a2, $zero, 1
	ori	$a3, $zero, 2
	addi.d	$a4, $sp, 1080
	addi.d	$a5, $sp, 1048
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp622:
# %bb.879:
	ld.d	$a0, $sp, 1048
	beq	$a0, $s3, .LBB7_881
# %bb.880:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2126
	ld.d	$a1, $sp, 1064
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_881:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2128
	ld.d	$a0, $sp, 1080
	beq	$a0, $s2, .LBB7_883
# %bb.882:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2129
	ld.d	$a1, $sp, 1096
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_883:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2131
	ld.d	$a0, $sp, 1112
	beq	$a0, $s1, .LBB7_885
# %bb.884:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2132
	ld.d	$a1, $sp, 1128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_885:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2134
	addi.d	$s1, $sp, 960
	ld.d	$a1, $sp, 1152
	ld.d	$s2, $sp, 1144
	st.d	$s1, $sp, 944
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 744
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_888
# %bb.886:                              # %.noexc.i.i2136
.Ltmp624:
	addi.d	$a0, $sp, 944
	addi.d	$a1, $sp, 744
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp625:
# %bb.887:                              # %.noexc2137
	ld.d	$a1, $sp, 744
	st.d	$a0, $sp, 944
	st.d	$a1, $sp, 960
.LBB7_888:                              # %._crit_edge.i.i.i2135
	beq	$a1, $s4, .LBB7_892
# %bb.889:                              # %._crit_edge.i.i.i2135
	bnez	$a1, .LBB7_891
# %bb.890:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_892
.LBB7_891:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_892:
	ld.d	$a0, $sp, 944
	ld.d	$s2, $sp, 744
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_894
# %bb.893:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2139
	ld.d	$a1, $sp, 960
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_895
.LBB7_894:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2144
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_895:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2140
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 944
	st.d	$zero, $sp, 952
	st.b	$zero, $sp, 960
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp627:
	addi.d	$a1, $sp, 1144
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp628:
# %bb.896:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2147
.Ltmp630:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp631:
# %bb.897:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_899
# %bb.898:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2148
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_899:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2149
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_901
# %bb.900:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2150
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_901:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2151
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_903
# %bb.902:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2152
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_903:                              # %_ZN2PP8FunctionD2Ev.exit.i2153
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_905
# %bb.904:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2154
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_905:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2160
	ld.d	$a0, $sp, 944
	beq	$a0, $s1, .LBB7_907
# %bb.906:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2161
	ld.d	$a1, $sp, 960
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_907:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2163
	pcalau12i	$a0, %pc_hi20(.LCPI7_4)
	vld	$vr0, $a0, %pc_lo12(.LCPI7_4)
	addi.d	$s1, $sp, 928
	st.d	$s1, $sp, 912
	vst	$vr0, $sp, 920
	st.b	$zero, $sp, 936
	addi.d	$s2, $sp, 896
	st.d	$s2, $sp, 880
	st.w	$s7, $sp, 896
	st.h	$s8, $sp, 900
	ori	$a0, $zero, 6
	st.d	$a0, $sp, 888
	st.b	$zero, $sp, 902
	addi.d	$s3, $sp, 864
	st.d	$s3, $sp, 848
	ori	$a0, $zero, 23
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp633:
	addi.d	$a0, $sp, 848
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp634:
# %bb.908:                              # %.noexc2174
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.186)
	addi.d	$a2, $a2, %pc_lo12(.L.str.186)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 15
	st.d	$a0, $sp, 848
	st.d	$a1, $sp, 864
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 15
	ld.d	$a0, $sp, 848
	st.d	$a1, $sp, 856
	stx.b	$zero, $a0, $a1
.Ltmp636:
	addi.d	$a0, $sp, 944
	addi.d	$a1, $sp, 912
	ori	$a2, $zero, 1
	ori	$a3, $zero, 3
	addi.d	$a4, $sp, 880
	addi.d	$a5, $sp, 848
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp637:
# %bb.909:
	ld.d	$a0, $sp, 848
	beq	$a0, $s3, .LBB7_911
# %bb.910:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2176
	ld.d	$a1, $sp, 864
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_911:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2178
	ld.d	$a0, $sp, 880
	beq	$a0, $s2, .LBB7_913
# %bb.912:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2179
	ld.d	$a1, $sp, 896
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_913:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2181
	ld.d	$a0, $sp, 912
	beq	$a0, $s1, .LBB7_915
# %bb.914:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2182
	ld.d	$a1, $sp, 928
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_915:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2184
	addi.d	$s1, $sp, 760
	ld.d	$a1, $sp, 952
	ld.d	$s2, $sp, 944
	st.d	$s1, $sp, 744
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 544
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_918
# %bb.916:                              # %.noexc.i.i2186
.Ltmp639:
	addi.d	$a0, $sp, 744
	addi.d	$a1, $sp, 544
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp640:
# %bb.917:                              # %.noexc2187
	ld.d	$a1, $sp, 544
	st.d	$a0, $sp, 744
	st.d	$a1, $sp, 760
.LBB7_918:                              # %._crit_edge.i.i.i2185
	beq	$a1, $s4, .LBB7_922
# %bb.919:                              # %._crit_edge.i.i.i2185
	bnez	$a1, .LBB7_921
# %bb.920:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_922
.LBB7_921:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_922:
	ld.d	$a0, $sp, 744
	ld.d	$s2, $sp, 544
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_924
# %bb.923:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2189
	ld.d	$a1, $sp, 760
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_925
.LBB7_924:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2194
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_925:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2190
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 744
	st.d	$zero, $sp, 752
	st.b	$zero, $sp, 760
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp642:
	addi.d	$a1, $sp, 944
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp643:
# %bb.926:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2197
.Ltmp645:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp646:
# %bb.927:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_929
# %bb.928:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2198
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_929:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2199
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_931
# %bb.930:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2200
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_931:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2201
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_933
# %bb.932:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2202
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_933:                              # %_ZN2PP8FunctionD2Ev.exit.i2203
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_935
# %bb.934:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2204
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_935:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2210
	ld.d	$a0, $sp, 744
	beq	$a0, $s1, .LBB7_937
# %bb.936:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2211
	ld.d	$a1, $sp, 760
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_937:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2213
	pcalau12i	$a0, %pc_hi20(.L.str.187)
	addi.d	$a0, $a0, %pc_lo12(.L.str.187)
	ld.d	$a1, $a0, 0
	ld.b	$a0, $a0, 8
	addi.d	$s1, $sp, 728
	st.d	$s1, $sp, 712
	st.d	$a1, $sp, 728
	st.b	$a0, $sp, 736
	ori	$a0, $zero, 9
	st.d	$a0, $sp, 720
	st.b	$zero, $sp, 737
	addi.d	$s2, $sp, 696
	st.d	$s2, $sp, 680
	st.w	$s7, $sp, 696
	st.h	$s8, $sp, 700
	ori	$a0, $zero, 6
	st.d	$a0, $sp, 688
	st.b	$zero, $sp, 702
	addi.d	$s3, $sp, 664
	st.d	$s3, $sp, 648
	ori	$a0, $zero, 24
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp648:
	addi.d	$a0, $sp, 648
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp649:
# %bb.938:                              # %.noexc2224
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.188)
	addi.d	$a2, $a2, %pc_lo12(.L.str.188)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 16
	st.d	$a0, $sp, 648
	st.d	$a1, $sp, 664
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 648
	st.d	$a1, $sp, 656
	stx.b	$zero, $a0, $a1
.Ltmp651:
	addi.d	$a0, $sp, 744
	addi.d	$a1, $sp, 712
	ori	$a2, $zero, 1
	ori	$a3, $zero, 3
	addi.d	$a4, $sp, 680
	addi.d	$a5, $sp, 648
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp652:
# %bb.939:
	ld.d	$a0, $sp, 648
	beq	$a0, $s3, .LBB7_941
# %bb.940:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2226
	ld.d	$a1, $sp, 664
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_941:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2228
	ld.d	$a0, $sp, 680
	beq	$a0, $s2, .LBB7_943
# %bb.942:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2229
	ld.d	$a1, $sp, 696
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_943:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2231
	ld.d	$a0, $sp, 712
	beq	$a0, $s1, .LBB7_945
# %bb.944:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2232
	ld.d	$a1, $sp, 728
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_945:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2234
	addi.d	$s1, $sp, 560
	ld.d	$a1, $sp, 752
	ld.d	$s2, $sp, 744
	st.d	$s1, $sp, 544
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 344
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_948
# %bb.946:                              # %.noexc.i.i2236
.Ltmp654:
	addi.d	$a0, $sp, 544
	addi.d	$a1, $sp, 344
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp655:
# %bb.947:                              # %.noexc2237
	ld.d	$a1, $sp, 344
	st.d	$a0, $sp, 544
	st.d	$a1, $sp, 560
.LBB7_948:                              # %._crit_edge.i.i.i2235
	beq	$a1, $s4, .LBB7_952
# %bb.949:                              # %._crit_edge.i.i.i2235
	bnez	$a1, .LBB7_951
# %bb.950:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_952
.LBB7_951:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_952:
	ld.d	$a0, $sp, 544
	ld.d	$s2, $sp, 344
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_954
# %bb.953:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2239
	ld.d	$a1, $sp, 560
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_955
.LBB7_954:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2244
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_955:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2240
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 544
	st.d	$zero, $sp, 552
	st.b	$zero, $sp, 560
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp657:
	addi.d	$a1, $sp, 744
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp658:
# %bb.956:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2247
.Ltmp660:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp661:
# %bb.957:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_959
# %bb.958:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2248
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_959:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2249
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_961
# %bb.960:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2250
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_961:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2251
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_963
# %bb.962:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2252
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_963:                              # %_ZN2PP8FunctionD2Ev.exit.i2253
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_965
# %bb.964:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2254
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_965:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2260
	ld.d	$a0, $sp, 544
	beq	$a0, $s1, .LBB7_967
# %bb.966:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2261
	ld.d	$a1, $sp, 560
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_967:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2263
	pcalau12i	$a0, %pc_hi20(.L.str.189)
	addi.d	$a0, $a0, %pc_lo12(.L.str.189)
	ld.d	$a1, $a0, 0
	ld.b	$a0, $a0, 8
	addi.d	$s1, $sp, 528
	st.d	$s1, $sp, 512
	st.d	$a1, $sp, 528
	st.b	$a0, $sp, 536
	ori	$a0, $zero, 9
	st.d	$a0, $sp, 520
	st.b	$zero, $sp, 537
	addi.d	$s2, $sp, 496
	st.d	$s2, $sp, 480
	st.w	$s7, $sp, 496
	st.h	$s8, $sp, 500
	ori	$a0, $zero, 6
	st.d	$a0, $sp, 488
	st.b	$zero, $sp, 502
	pcalau12i	$a0, %pc_hi20(.L.str.190)
	addi.d	$a0, $a0, %pc_lo12(.L.str.190)
	ld.d	$a1, $a0, 6
	ld.d	$a0, $a0, 0
	addi.d	$s3, $sp, 464
	st.d	$s3, $sp, 448
	st.d	$a1, $sp, 470
	st.d	$a0, $sp, 464
	ori	$a0, $zero, 14
	st.d	$a0, $sp, 456
	st.b	$zero, $sp, 478
.Ltmp663:
	addi.d	$a0, $sp, 544
	addi.d	$a1, $sp, 512
	ori	$a2, $zero, 1
	ori	$a3, $zero, 3
	addi.d	$a4, $sp, 480
	addi.d	$a5, $sp, 448
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp664:
# %bb.968:
	ld.d	$a0, $sp, 448
	beq	$a0, $s3, .LBB7_970
# %bb.969:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2276
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_970:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2278
	ld.d	$a0, $sp, 480
	beq	$a0, $s2, .LBB7_972
# %bb.971:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2279
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_972:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2281
	ld.d	$a0, $sp, 512
	beq	$a0, $s1, .LBB7_974
# %bb.973:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2282
	ld.d	$a1, $sp, 528
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_974:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2284
	addi.d	$s1, $sp, 360
	ld.d	$a1, $sp, 552
	ld.d	$s2, $sp, 544
	st.d	$s1, $sp, 344
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_977
# %bb.975:                              # %.noexc.i.i2286
.Ltmp666:
	addi.d	$a0, $sp, 344
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp667:
# %bb.976:                              # %.noexc2287
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 344
	st.d	$a1, $sp, 360
.LBB7_977:                              # %._crit_edge.i.i.i2285
	beq	$a1, $s4, .LBB7_981
# %bb.978:                              # %._crit_edge.i.i.i2285
	bnez	$a1, .LBB7_980
# %bb.979:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_981
.LBB7_980:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_981:
	ld.d	$a0, $sp, 344
	ld.d	$s2, $sp, 144
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_983
# %bb.982:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2289
	ld.d	$a1, $sp, 360
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_984
.LBB7_983:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2294
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_984:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2290
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 344
	st.d	$zero, $sp, 352
	st.b	$zero, $sp, 360
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp669:
	addi.d	$a1, $sp, 544
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp670:
# %bb.985:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2297
.Ltmp672:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp673:
# %bb.986:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_988
# %bb.987:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2298
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_988:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2299
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_990
# %bb.989:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2300
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_990:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2301
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_992
# %bb.991:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2302
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_992:                              # %_ZN2PP8FunctionD2Ev.exit.i2303
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_994
# %bb.993:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2304
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_994:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2310
	ld.d	$a0, $sp, 344
	beq	$a0, $s1, .LBB7_996
# %bb.995:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2311
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_996:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2313
	pcalau12i	$a0, %pc_hi20(.L.str.191)
	addi.d	$a0, $a0, %pc_lo12(.L.str.191)
	ld.w	$a1, $a0, 0
	ld.w	$a0, $a0, 3
	addi.d	$s1, $sp, 328
	st.d	$s1, $sp, 312
	st.w	$a1, $sp, 328
	st.w	$a0, $sp, 331
	ori	$a0, $zero, 7
	st.d	$a0, $sp, 320
	st.b	$zero, $sp, 335
	addi.d	$s2, $sp, 296
	st.d	$s2, $sp, 280
	st.w	$s7, $sp, 296
	st.h	$s8, $sp, 300
	ori	$a0, $zero, 6
	st.d	$a0, $sp, 288
	st.b	$zero, $sp, 302
	addi.d	$s7, $sp, 264
	st.d	$s7, $sp, 248
	ori	$a0, $zero, 26
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp675:
	addi.d	$a0, $sp, 248
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp676:
# %bb.997:                              # %.noexc2324
	st.d	$a0, $sp, 248
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.192)
	addi.d	$a2, $a2, %pc_lo12(.L.str.192)
	vld	$vr0, $a2, 0
	ld.h	$a3, $a2, 24
	ld.d	$a2, $a2, 16
	st.d	$a1, $sp, 264
	vst	$vr0, $a0, 0
	st.h	$a3, $a0, 24
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 248
	st.d	$a1, $sp, 256
	stx.b	$zero, $a0, $a1
.Ltmp678:
	addi.d	$a0, $sp, 344
	addi.d	$a1, $sp, 312
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	addi.d	$a4, $sp, 280
	addi.d	$a5, $sp, 248
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp679:
# %bb.998:
	ld.d	$a0, $sp, 248
	beq	$a0, $s7, .LBB7_1000
# %bb.999:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2326
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1000:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2328
	ld.d	$a0, $sp, 280
	beq	$a0, $s2, .LBB7_1002
# %bb.1001:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2329
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1002:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2331
	ld.d	$a0, $sp, 312
	beq	$a0, $s1, .LBB7_1004
# %bb.1003:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2332
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1004:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2334
	addi.d	$s1, $sp, 160
	ld.d	$a1, $sp, 352
	ld.d	$s2, $sp, 344
	st.d	$s1, $sp, 144
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 16
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_1007
# %bb.1005:                             # %.noexc.i.i2336
.Ltmp681:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp682:
# %bb.1006:                             # %.noexc2337
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB7_1007:                             # %._crit_edge.i.i.i2335
	beq	$a1, $s4, .LBB7_1011
# %bb.1008:                             # %._crit_edge.i.i.i2335
	bnez	$a1, .LBB7_1010
# %bb.1009:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_1011
.LBB7_1010:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_1011:
	ld.d	$a0, $sp, 144
	ld.d	$s2, $sp, 16
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_1013
# %bb.1012:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2339
	ld.d	$a1, $sp, 160
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_1014
.LBB7_1013:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2344
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_1014:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2340
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 144
	st.d	$zero, $sp, 152
	st.b	$zero, $sp, 160
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp684:
	addi.d	$a1, $sp, 344
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp685:
# %bb.1015:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2347
.Ltmp687:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp688:
# %bb.1016:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1018
# %bb.1017:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2348
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1018:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2349
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1020
# %bb.1019:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2350
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1020:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2351
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_1022
# %bb.1021:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2352
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1022:                             # %_ZN2PP8FunctionD2Ev.exit.i2353
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_1024
# %bb.1023:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2354
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1024:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2360
	ld.d	$a0, $sp, 144
	beq	$a0, $s1, .LBB7_1026
# %bb.1025:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2361
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1026:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2363
	pcalau12i	$a0, %pc_hi20(.L.str.193)
	addi.d	$a0, $a0, %pc_lo12(.L.str.193)
	ld.w	$a1, $a0, 0
	ld.w	$a0, $a0, 3
	addi.d	$s1, $sp, 128
	st.d	$s1, $sp, 112
	st.w	$a1, $sp, 128
	st.w	$a0, $sp, 131
	ori	$a0, $zero, 7
	st.d	$a0, $sp, 120
	st.b	$zero, $sp, 135
	pcalau12i	$a1, %pc_hi20(.L.str.194)
	addi.d	$a1, $a1, %pc_lo12(.L.str.194)
	ld.w	$a2, $a1, 0
	ld.w	$a1, $a1, 3
	addi.d	$s2, $sp, 96
	st.d	$s2, $sp, 80
	st.w	$a2, $sp, 96
	st.w	$a1, $sp, 99
	st.d	$a0, $sp, 88
	st.b	$zero, $sp, 103
	addi.d	$s7, $sp, 64
	st.d	$s7, $sp, 48
	ori	$a0, $zero, 28
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp690:
	addi.d	$a0, $sp, 48
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp691:
# %bb.1027:                             # %.noexc2374
	st.d	$a0, $sp, 48
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	pcalau12i	$a2, %pc_hi20(.L.str.195)
	addi.d	$a2, $a2, %pc_lo12(.L.str.195)
	vld	$vr0, $a2, 0
	ld.w	$a3, $a2, 24
	ld.d	$a2, $a2, 16
	st.d	$a1, $sp, 64
	vst	$vr0, $a0, 0
	st.w	$a3, $a0, 24
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 48
	st.d	$a1, $sp, 56
	stx.b	$zero, $a0, $a1
.Ltmp693:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 112
	ori	$a2, $zero, 1
	ori	$a3, $zero, 1
	addi.d	$a4, $sp, 80
	addi.d	$a5, $sp, 48
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_)
	jirl	$ra, $ra, 0
.Ltmp694:
# %bb.1028:
	ld.d	$a0, $sp, 48
	beq	$a0, $s7, .LBB7_1030
# %bb.1029:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2376
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1030:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2378
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB7_1032
# %bb.1031:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2379
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1032:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2381
	ld.d	$a0, $sp, 112
	beq	$a0, $s1, .LBB7_1034
# %bb.1033:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2382
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1034:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2384
	addi.d	$s1, $sp, 32
	ld.d	$a1, $sp, 152
	ld.d	$s2, $sp, 144
	st.d	$s1, $sp, 16
	ori	$a2, $zero, 16
	lu12i.w	$a0, 2
	ori	$a0, $a0, 368
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB7_1037
# %bb.1035:                             # %.noexc.i.i2386
.Ltmp696:
	addi.d	$a0, $sp, 16
	lu12i.w	$a1, 2
	ori	$a1, $a1, 368
	add.d	$a1, $sp, $a1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp697:
# %bb.1036:                             # %.noexc2387
	lu12i.w	$a1, 2
	ori	$a1, $a1, 368
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB7_1037:                             # %._crit_edge.i.i.i2385
	beq	$a1, $s4, .LBB7_1041
# %bb.1038:                             # %._crit_edge.i.i.i2385
	bnez	$a1, .LBB7_1040
# %bb.1039:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_1041
.LBB7_1040:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_1041:
	ld.d	$a0, $sp, 16
	lu12i.w	$a1, 2
	ori	$a1, $a1, 368
	add.d	$a1, $sp, $a1
	ld.d	$s2, $a1, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	st.d	$fp, $a1, 0
	beq	$a0, $s1, .LBB7_1043
# %bb.1042:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2389
	ld.d	$a1, $sp, 32
	lu12i.w	$a2, 1
	ori	$a2, $a2, 3904
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	st.d	$a1, $a0, 0
	b	.LBB7_1044
.LBB7_1043:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i2394
	addi.d	$a2, $s2, 1
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_1044:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i2390
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	st.d	$s1, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $sp, 32
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
.Ltmp699:
	addi.d	$a1, $sp, 144
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp700:
# %bb.1045:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit2397
.Ltmp702:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a1, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp703:
# %bb.1046:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1048
# %bb.1047:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i2398
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1048:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i2399
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1050
# %bb.1049:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i2400
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1050:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i2401
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3936
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s6, .LBB7_1052
# %bb.1051:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i2402
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3952
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1052:                             # %_ZN2PP8FunctionD2Ev.exit.i2403
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $fp, .LBB7_1054
# %bb.1053:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2404
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3920
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1054:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev.exit2410
	ld.d	$a0, $sp, 16
	beq	$a0, $s1, .LBB7_1056
# %bb.1055:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2411
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1056:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2413
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	beq	$a0, $a1, .LBB7_1058
# %bb.1057:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2414
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1058:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2415
	ld.d	$a0, $sp, 184
	addi.d	$a1, $sp, 200
	beq	$a0, $a1, .LBB7_1060
# %bb.1059:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1060:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i
	ld.d	$a0, $sp, 144
	addi.d	$a1, $sp, 160
	beq	$a0, $a1, .LBB7_1062
# %bb.1061:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1062:                             # %_ZN2PP8FunctionD2Ev.exit
	ld.d	$a0, $sp, 416
	addi.d	$a1, $sp, 432
	beq	$a0, $a1, .LBB7_1064
# %bb.1063:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2417
	ld.d	$a1, $sp, 432
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1064:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2418
	ld.d	$a0, $sp, 384
	addi.d	$a1, $sp, 400
	beq	$a0, $a1, .LBB7_1066
# %bb.1065:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2419
	ld.d	$a1, $sp, 400
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1066:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2420
	ld.d	$a0, $sp, 344
	addi.d	$a1, $sp, 360
	beq	$a0, $a1, .LBB7_1068
# %bb.1067:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2421
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1068:                             # %_ZN2PP8FunctionD2Ev.exit2425
	ld.d	$a0, $sp, 616
	addi.d	$a1, $sp, 632
	beq	$a0, $a1, .LBB7_1070
# %bb.1069:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2426
	ld.d	$a1, $sp, 632
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1070:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2427
	ld.d	$a0, $sp, 584
	addi.d	$a1, $sp, 600
	beq	$a0, $a1, .LBB7_1072
# %bb.1071:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2428
	ld.d	$a1, $sp, 600
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1072:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2429
	ld.d	$a0, $sp, 544
	addi.d	$a1, $sp, 560
	beq	$a0, $a1, .LBB7_1074
# %bb.1073:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2430
	ld.d	$a1, $sp, 560
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1074:                             # %_ZN2PP8FunctionD2Ev.exit2434
	ld.d	$a0, $sp, 816
	addi.d	$a1, $sp, 832
	beq	$a0, $a1, .LBB7_1076
# %bb.1075:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2435
	ld.d	$a1, $sp, 832
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1076:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2436
	ld.d	$a0, $sp, 784
	addi.d	$a1, $sp, 800
	beq	$a0, $a1, .LBB7_1078
# %bb.1077:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2437
	ld.d	$a1, $sp, 800
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1078:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2438
	ld.d	$a0, $sp, 744
	addi.d	$a1, $sp, 760
	beq	$a0, $a1, .LBB7_1080
# %bb.1079:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2439
	ld.d	$a1, $sp, 760
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1080:                             # %_ZN2PP8FunctionD2Ev.exit2443
	ld.d	$a0, $sp, 1016
	addi.d	$a1, $sp, 1032
	beq	$a0, $a1, .LBB7_1082
# %bb.1081:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2444
	ld.d	$a1, $sp, 1032
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1082:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2445
	ld.d	$a0, $sp, 984
	addi.d	$a1, $sp, 1000
	beq	$a0, $a1, .LBB7_1084
# %bb.1083:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2446
	ld.d	$a1, $sp, 1000
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1084:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2447
	ld.d	$a0, $sp, 944
	addi.d	$a1, $sp, 960
	beq	$a0, $a1, .LBB7_1086
# %bb.1085:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2448
	ld.d	$a1, $sp, 960
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1086:                             # %_ZN2PP8FunctionD2Ev.exit2452
	ld.d	$a0, $sp, 1216
	addi.d	$a1, $sp, 1232
	beq	$a0, $a1, .LBB7_1088
# %bb.1087:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2453
	ld.d	$a1, $sp, 1232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1088:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2454
	ld.d	$a0, $sp, 1184
	addi.d	$a1, $sp, 1200
	beq	$a0, $a1, .LBB7_1090
# %bb.1089:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2455
	ld.d	$a1, $sp, 1200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1090:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2456
	ld.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 1160
	beq	$a0, $a1, .LBB7_1092
# %bb.1091:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2457
	ld.d	$a1, $sp, 1160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1092:                             # %_ZN2PP8FunctionD2Ev.exit2461
	ld.d	$a0, $sp, 1416
	addi.d	$a1, $sp, 1432
	beq	$a0, $a1, .LBB7_1094
# %bb.1093:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2462
	ld.d	$a1, $sp, 1432
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1094:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2463
	ld.d	$a0, $sp, 1384
	addi.d	$a1, $sp, 1400
	beq	$a0, $a1, .LBB7_1096
# %bb.1095:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2464
	ld.d	$a1, $sp, 1400
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1096:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2465
	ld.d	$a0, $sp, 1344
	addi.d	$a1, $sp, 1360
	beq	$a0, $a1, .LBB7_1098
# %bb.1097:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2466
	ld.d	$a1, $sp, 1360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1098:                             # %_ZN2PP8FunctionD2Ev.exit2470
	ld.d	$a0, $sp, 1616
	addi.d	$a1, $sp, 1632
	beq	$a0, $a1, .LBB7_1100
# %bb.1099:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2471
	ld.d	$a1, $sp, 1632
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1100:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2472
	ld.d	$a0, $sp, 1584
	addi.d	$a1, $sp, 1600
	beq	$a0, $a1, .LBB7_1102
# %bb.1101:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2473
	ld.d	$a1, $sp, 1600
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1102:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2474
	ld.d	$a0, $sp, 1544
	addi.d	$a1, $sp, 1560
	beq	$a0, $a1, .LBB7_1104
# %bb.1103:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2475
	ld.d	$a1, $sp, 1560
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1104:                             # %_ZN2PP8FunctionD2Ev.exit2479
	ld.d	$a0, $sp, 1816
	addi.d	$a1, $sp, 1832
	beq	$a0, $a1, .LBB7_1106
# %bb.1105:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2480
	ld.d	$a1, $sp, 1832
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1106:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2481
	ld.d	$a0, $sp, 1784
	addi.d	$a1, $sp, 1800
	beq	$a0, $a1, .LBB7_1108
# %bb.1107:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2482
	ld.d	$a1, $sp, 1800
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1108:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2483
	ld.d	$a0, $sp, 1744
	addi.d	$a1, $sp, 1760
	beq	$a0, $a1, .LBB7_1110
# %bb.1109:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2484
	ld.d	$a1, $sp, 1760
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1110:                             # %_ZN2PP8FunctionD2Ev.exit2488
	ld.d	$a0, $sp, 2016
	addi.d	$a1, $sp, 2032
	beq	$a0, $a1, .LBB7_1112
# %bb.1111:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2489
	ld.d	$a1, $sp, 2032
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1112:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2490
	ld.d	$a0, $sp, 1984
	addi.d	$a1, $sp, 2000
	beq	$a0, $a1, .LBB7_1114
# %bb.1113:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2491
	ld.d	$a1, $sp, 2000
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1114:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2492
	ld.d	$a0, $sp, 1944
	addi.d	$a1, $sp, 1960
	beq	$a0, $a1, .LBB7_1116
# %bb.1115:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2493
	ld.d	$a1, $sp, 1960
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1116:                             # %_ZN2PP8FunctionD2Ev.exit2497
	ori	$a0, $zero, 2216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2232
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1118
# %bb.1117:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2498
	ori	$a1, $zero, 2232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1118:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2499
	ori	$a0, $zero, 2184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2200
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1120
# %bb.1119:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2500
	ori	$a1, $zero, 2200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1120:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2501
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2160
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1122
# %bb.1121:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2502
	ori	$a1, $zero, 2160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1122:                             # %_ZN2PP8FunctionD2Ev.exit2506
	ori	$a0, $zero, 2416
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2432
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1124
# %bb.1123:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2507
	ori	$a1, $zero, 2432
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1124:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2508
	ori	$a0, $zero, 2384
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2400
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1126
# %bb.1125:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2509
	ori	$a1, $zero, 2400
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1126:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2510
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2360
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1128
# %bb.1127:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2511
	ori	$a1, $zero, 2360
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1128:                             # %_ZN2PP8FunctionD2Ev.exit2515
	ori	$a0, $zero, 2616
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2632
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1130
# %bb.1129:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2516
	ori	$a1, $zero, 2632
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1130:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2517
	ori	$a0, $zero, 2584
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2600
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1132
# %bb.1131:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2518
	ori	$a1, $zero, 2600
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1132:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2519
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2560
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1134
# %bb.1133:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2520
	ori	$a1, $zero, 2560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1134:                             # %_ZN2PP8FunctionD2Ev.exit2524
	ori	$a0, $zero, 2816
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2832
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1136
# %bb.1135:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2525
	ori	$a1, $zero, 2832
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1136:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2526
	ori	$a0, $zero, 2784
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2800
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1138
# %bb.1137:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2527
	ori	$a1, $zero, 2800
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1138:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2528
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2760
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1140
# %bb.1139:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2529
	ori	$a1, $zero, 2760
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1140:                             # %_ZN2PP8FunctionD2Ev.exit2533
	ori	$a0, $zero, 3016
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3032
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1142
# %bb.1141:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2534
	ori	$a1, $zero, 3032
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1142:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2535
	ori	$a0, $zero, 2984
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3000
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1144
# %bb.1143:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2536
	ori	$a1, $zero, 3000
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1144:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2537
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2960
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1146
# %bb.1145:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2538
	ori	$a1, $zero, 2960
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1146:                             # %_ZN2PP8FunctionD2Ev.exit2542
	ori	$a0, $zero, 3216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3232
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1148
# %bb.1147:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2543
	ori	$a1, $zero, 3232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1148:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2544
	ori	$a0, $zero, 3184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3200
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1150
# %bb.1149:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2545
	ori	$a1, $zero, 3200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1150:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2546
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3160
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1152
# %bb.1151:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2547
	ori	$a1, $zero, 3160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1152:                             # %_ZN2PP8FunctionD2Ev.exit2551
	ori	$a0, $zero, 3416
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3432
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1154
# %bb.1153:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2552
	ori	$a1, $zero, 3432
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1154:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2553
	ori	$a0, $zero, 3384
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3400
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1156
# %bb.1155:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2554
	ori	$a1, $zero, 3400
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1156:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2555
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3360
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1158
# %bb.1157:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2556
	ori	$a1, $zero, 3360
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1158:                             # %_ZN2PP8FunctionD2Ev.exit2560
	ori	$a0, $zero, 3616
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3632
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1160
# %bb.1159:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2561
	ori	$a1, $zero, 3632
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1160:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2562
	ori	$a0, $zero, 3584
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3600
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1162
# %bb.1161:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2563
	ori	$a1, $zero, 3600
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1162:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2564
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3560
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1164
# %bb.1163:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2565
	ori	$a1, $zero, 3560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1164:                             # %_ZN2PP8FunctionD2Ev.exit2569
	ori	$a0, $zero, 3816
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3832
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1166
# %bb.1165:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2570
	ori	$a1, $zero, 3832
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1166:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2571
	ori	$a0, $zero, 3784
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3800
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1168
# %bb.1167:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2572
	ori	$a1, $zero, 3800
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1168:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2573
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3760
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1170
# %bb.1169:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2574
	ori	$a1, $zero, 3760
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1170:                             # %_ZN2PP8FunctionD2Ev.exit2578
	ori	$a0, $zero, 4016
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 4032
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1172
# %bb.1171:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2579
	ori	$a1, $zero, 4032
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1172:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2580
	ori	$a0, $zero, 3984
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 4000
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1174
# %bb.1173:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2581
	ori	$a1, $zero, 4000
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1174:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2582
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 3960
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1176
# %bb.1175:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2583
	ori	$a1, $zero, 3960
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1176:                             # %_ZN2PP8FunctionD2Ev.exit2587
	lu12i.w	$a0, 1
	ori	$a0, $a0, 120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 136
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1178
# %bb.1177:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2588
	lu12i.w	$a1, 1
	ori	$a1, $a1, 136
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1178:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2589
	lu12i.w	$a0, 1
	ori	$a0, $a0, 88
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 104
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1180
# %bb.1179:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2590
	lu12i.w	$a1, 1
	ori	$a1, $a1, 104
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1180:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2591
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 64
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1182
# %bb.1181:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2592
	lu12i.w	$a1, 1
	ori	$a1, $a1, 64
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1182:                             # %_ZN2PP8FunctionD2Ev.exit2596
	lu12i.w	$a0, 1
	ori	$a0, $a0, 320
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 336
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1184
# %bb.1183:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2597
	lu12i.w	$a1, 1
	ori	$a1, $a1, 336
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1184:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2598
	lu12i.w	$a0, 1
	ori	$a0, $a0, 288
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 304
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1186
# %bb.1185:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2599
	lu12i.w	$a1, 1
	ori	$a1, $a1, 304
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1186:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2600
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 264
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1188
# %bb.1187:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2601
	lu12i.w	$a1, 1
	ori	$a1, $a1, 264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1188:                             # %_ZN2PP8FunctionD2Ev.exit2605
	lu12i.w	$a0, 1
	ori	$a0, $a0, 520
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 536
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1190
# %bb.1189:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2606
	lu12i.w	$a1, 1
	ori	$a1, $a1, 536
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1190:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2607
	lu12i.w	$a0, 1
	ori	$a0, $a0, 488
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 504
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1192
# %bb.1191:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2608
	lu12i.w	$a1, 1
	ori	$a1, $a1, 504
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1192:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2609
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 464
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1194
# %bb.1193:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2610
	lu12i.w	$a1, 1
	ori	$a1, $a1, 464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1194:                             # %_ZN2PP8FunctionD2Ev.exit2614
	lu12i.w	$a0, 1
	ori	$a0, $a0, 720
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 736
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1196
# %bb.1195:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2615
	lu12i.w	$a1, 1
	ori	$a1, $a1, 736
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1196:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2616
	lu12i.w	$a0, 1
	ori	$a0, $a0, 688
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 704
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1198
# %bb.1197:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2617
	lu12i.w	$a1, 1
	ori	$a1, $a1, 704
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1198:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2618
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 664
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1200
# %bb.1199:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2619
	lu12i.w	$a1, 1
	ori	$a1, $a1, 664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1200:                             # %_ZN2PP8FunctionD2Ev.exit2623
	lu12i.w	$a0, 1
	ori	$a0, $a0, 920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 936
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1202
# %bb.1201:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2624
	lu12i.w	$a1, 1
	ori	$a1, $a1, 936
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1202:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2625
	lu12i.w	$a0, 1
	ori	$a0, $a0, 888
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 904
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1204
# %bb.1203:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2626
	lu12i.w	$a1, 1
	ori	$a1, $a1, 904
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1204:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2627
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 864
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1206
# %bb.1205:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2628
	lu12i.w	$a1, 1
	ori	$a1, $a1, 864
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1206:                             # %_ZN2PP8FunctionD2Ev.exit2632
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1136
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1208
# %bb.1207:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2633
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1136
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1208:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2634
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1088
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1104
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1210
# %bb.1209:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2635
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1104
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1210:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2636
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1064
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1212
# %bb.1211:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2637
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1064
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1212:                             # %_ZN2PP8FunctionD2Ev.exit2641
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1320
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1336
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1214
# %bb.1213:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2642
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1336
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1214:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2643
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1288
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1304
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1216
# %bb.1215:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2644
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1304
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1216:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2645
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1264
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1218
# %bb.1217:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2646
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1218:                             # %_ZN2PP8FunctionD2Ev.exit2650
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1520
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1536
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1220
# %bb.1219:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2651
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1536
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1220:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2652
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1488
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1504
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1222
# %bb.1221:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i2653
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1504
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1222:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i2654
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1464
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1224
# %bb.1223:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i2655
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1464
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1224:                             # %_ZN2PP8FunctionD2Ev.exit2659
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1752
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1768
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1226
# %bb.1225:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2660
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1768
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1226:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2661
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1720
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB7_1228
# %bb.1227:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1736
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1228:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1688
	add.d	$a1, $sp, $a1
	ld.d	$fp, $a1, 0
	beq	$a0, $fp, .LBB7_1234
# %bb.1229:                             # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB7_1231
	.p2align	4, , 16
.LBB7_1230:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB7_1231 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB7_1233
.LBB7_1231:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB7_1230
# %bb.1232:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB7_1231 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1230
.LBB7_1233:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB7_1234:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB7_1236
# %bb.1235:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1696
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1236:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1664
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1238
# %bb.1237:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1238:                             # %_ZN2PP8VariableD2Ev.exit
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1816
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2160
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1240
# %bb.1239:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2663
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1240:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2664
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2112
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB7_1242
# %bb.1241:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2128
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1242:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i2666
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2080
	add.d	$a1, $sp, $a1
	ld.d	$fp, $a1, 0
	beq	$a0, $fp, .LBB7_1248
# %bb.1243:                             # %.lr.ph.i.i.i2668.preheader
	addi.d	$s0, $a0, 16
	b	.LBB7_1245
	.p2align	4, , 16
.LBB7_1244:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i2671
                                        #   in Loop: Header=BB7_1245 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB7_1247
.LBB7_1245:                             # %.lr.ph.i.i.i2668
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB7_1244
# %bb.1246:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i2670
                                        #   in Loop: Header=BB7_1245 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1244
.LBB7_1247:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i2673
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB7_1248:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i2675
	beqz	$a0, .LBB7_1250
# %bb.1249:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2088
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1250:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i2677
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2056
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1252
# %bb.1251:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i2678
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2056
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1252:                             # %_ZN2PP8VariableD2Ev.exit2682
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2208
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2536
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2552
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1254
# %bb.1253:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2683
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2552
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1254:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2684
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2504
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB7_1256
# %bb.1255:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2520
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1256:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i2686
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2464
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2472
	add.d	$a1, $sp, $a1
	ld.d	$fp, $a1, 0
	beq	$a0, $fp, .LBB7_1262
# %bb.1257:                             # %.lr.ph.i.i.i2688.preheader
	addi.d	$s0, $a0, 16
	b	.LBB7_1259
	.p2align	4, , 16
.LBB7_1258:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i2691
                                        #   in Loop: Header=BB7_1259 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB7_1261
.LBB7_1259:                             # %.lr.ph.i.i.i2688
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB7_1258
# %bb.1260:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i2690
                                        #   in Loop: Header=BB7_1259 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1258
.LBB7_1261:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i2693
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2464
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB7_1262:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i2695
	beqz	$a0, .LBB7_1264
# %bb.1263:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2480
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1264:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i2697
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2448
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1266
# %bb.1265:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i2698
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2448
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1266:                             # %_ZN2PP8VariableD2Ev.exit2702
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2600
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2928
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2944
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1268
# %bb.1267:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2703
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2944
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1268:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2704
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2896
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB7_1270
# %bb.1269:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2912
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1270:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i2706
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2856
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2864
	add.d	$a1, $sp, $a1
	ld.d	$fp, $a1, 0
	beq	$a0, $fp, .LBB7_1276
# %bb.1271:                             # %.lr.ph.i.i.i2708.preheader
	addi.d	$s0, $a0, 16
	b	.LBB7_1273
	.p2align	4, , 16
.LBB7_1272:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i2711
                                        #   in Loop: Header=BB7_1273 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB7_1275
.LBB7_1273:                             # %.lr.ph.i.i.i2708
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB7_1272
# %bb.1274:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i2710
                                        #   in Loop: Header=BB7_1273 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1272
.LBB7_1275:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i2713
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2856
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB7_1276:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i2715
	beqz	$a0, .LBB7_1278
# %bb.1277:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2872
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1278:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i2717
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2840
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1280
# %bb.1279:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i2718
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2840
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1280:                             # %_ZN2PP8VariableD2Ev.exit2722
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2992
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3320
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3336
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1282
# %bb.1281:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2723
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3336
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1282:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2724
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3288
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB7_1284
# %bb.1283:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3304
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1284:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i2726
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3256
	add.d	$a1, $sp, $a1
	ld.d	$fp, $a1, 0
	beq	$a0, $fp, .LBB7_1290
# %bb.1285:                             # %.lr.ph.i.i.i2728.preheader
	addi.d	$s0, $a0, 16
	b	.LBB7_1287
	.p2align	4, , 16
.LBB7_1286:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i2731
                                        #   in Loop: Header=BB7_1287 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB7_1289
.LBB7_1287:                             # %.lr.ph.i.i.i2728
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB7_1286
# %bb.1288:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i2730
                                        #   in Loop: Header=BB7_1287 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1286
.LBB7_1289:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i2733
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB7_1290:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i2735
	beqz	$a0, .LBB7_1292
# %bb.1291:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3264
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1292:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i2737
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3232
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1294
# %bb.1293:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i2738
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1294:                             # %_ZN2PP8VariableD2Ev.exit2742
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3384
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3712
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3728
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1296
# %bb.1295:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2743
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3728
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1296:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2744
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB7_1298
# %bb.1297:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3696
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1298:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i2746
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3640
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3648
	add.d	$a1, $sp, $a1
	ld.d	$fp, $a1, 0
	beq	$a0, $fp, .LBB7_1304
# %bb.1299:                             # %.lr.ph.i.i.i2748.preheader
	addi.d	$s0, $a0, 16
	b	.LBB7_1301
	.p2align	4, , 16
.LBB7_1300:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i2751
                                        #   in Loop: Header=BB7_1301 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB7_1303
.LBB7_1301:                             # %.lr.ph.i.i.i2748
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB7_1300
# %bb.1302:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i2750
                                        #   in Loop: Header=BB7_1301 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1300
.LBB7_1303:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i2753
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3640
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB7_1304:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i2755
	beqz	$a0, .LBB7_1306
# %bb.1305:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3656
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1306:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i2757
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3624
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1308
# %bb.1307:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i2758
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3624
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1308:                             # %_ZN2PP8VariableD2Ev.exit2762
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3776
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 2
	ori	$a0, $a0, 176
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 2
	ori	$a1, $a1, 192
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1310
# %bb.1309:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2763
	lu12i.w	$a1, 2
	ori	$a1, $a1, 192
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1310:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i2764
	lu12i.w	$a0, 2
	ori	$a0, $a0, 144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB7_1312
# %bb.1311:
	lu12i.w	$a1, 2
	ori	$a1, $a1, 160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1312:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i2766
	lu12i.w	$a0, 2
	ori	$a0, $a0, 104
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 2
	ori	$a1, $a1, 112
	add.d	$a1, $sp, $a1
	ld.d	$fp, $a1, 0
	beq	$a0, $fp, .LBB7_1318
# %bb.1313:                             # %.lr.ph.i.i.i2768.preheader
	addi.d	$s0, $a0, 16
	b	.LBB7_1315
	.p2align	4, , 16
.LBB7_1314:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i2771
                                        #   in Loop: Header=BB7_1315 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB7_1317
.LBB7_1315:                             # %.lr.ph.i.i.i2768
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB7_1314
# %bb.1316:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i2770
                                        #   in Loop: Header=BB7_1315 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1314
.LBB7_1317:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i2773
	lu12i.w	$a0, 2
	ori	$a0, $a0, 104
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB7_1318:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i2775
	beqz	$a0, .LBB7_1320
# %bb.1319:
	lu12i.w	$a1, 2
	ori	$a1, $a1, 120
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1320:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i2777
	lu12i.w	$a0, 2
	ori	$a0, $a0, 72
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	lu12i.w	$a1, 2
	ori	$a1, $a1, 88
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB7_1322
# %bb.1321:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i2778
	lu12i.w	$a1, 2
	ori	$a1, $a1, 88
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1322:                             # %_ZN2PP8VariableD2Ev.exit2782
	lu12i.w	$a0, 2
	ori	$a0, $a0, 240
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2528
	add.d	$sp, $sp, $a0
	ld.d	$s8, $sp, 1944                  # 8-byte Folded Reload
	ld.d	$s7, $sp, 1952                  # 8-byte Folded Reload
	ld.d	$s6, $sp, 1960                  # 8-byte Folded Reload
	ld.d	$s5, $sp, 1968                  # 8-byte Folded Reload
	ld.d	$s4, $sp, 1976                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1984                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1992                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 2000                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 2008                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 2016                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 2024                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 2032
	ret
.LBB7_1323:
.Ltmp698:
	move	$s0, $a0
	b	.LBB7_1370
.LBB7_1324:
.Ltmp683:
	move	$s0, $a0
	b	.LBB7_1384
.LBB7_1325:
.Ltmp668:
	move	$s0, $a0
	b	.LBB7_1398
.LBB7_1326:
.Ltmp656:
	move	$s0, $a0
	b	.LBB7_1399
.LBB7_1327:
.Ltmp641:
	move	$s0, $a0
	b	.LBB7_1400
.LBB7_1328:
.Ltmp626:
	move	$s0, $a0
	b	.LBB7_1401
.LBB7_1329:
.Ltmp611:
	move	$s0, $a0
	b	.LBB7_1402
.LBB7_1330:
.Ltmp596:
	move	$s0, $a0
	b	.LBB7_1403
.LBB7_1331:
.Ltmp581:
	move	$s0, $a0
	b	.LBB7_1404
.LBB7_1332:
.Ltmp566:
	move	$s0, $a0
	b	.LBB7_1405
.LBB7_1333:
.Ltmp551:
	move	$s0, $a0
	b	.LBB7_1406
.LBB7_1334:
.Ltmp536:
	move	$s0, $a0
	b	.LBB7_1407
.LBB7_1335:
.Ltmp521:
	move	$s0, $a0
	b	.LBB7_1408
.LBB7_1336:
.Ltmp506:
	move	$s0, $a0
	b	.LBB7_1409
.LBB7_1337:
.Ltmp491:
	move	$s0, $a0
	b	.LBB7_1410
.LBB7_1338:
.Ltmp476:
	move	$s0, $a0
	b	.LBB7_1411
.LBB7_1339:
.Ltmp464:
	move	$s0, $a0
	b	.LBB7_1412
.LBB7_1340:
.Ltmp449:
	move	$s0, $a0
	b	.LBB7_1413
.LBB7_1341:
.Ltmp434:
	move	$s0, $a0
	b	.LBB7_1414
.LBB7_1342:
.Ltmp419:
	move	$s0, $a0
	b	.LBB7_1415
.LBB7_1343:
.Ltmp404:
	move	$s0, $a0
	b	.LBB7_1416
.LBB7_1344:
.Ltmp389:
	move	$s0, $a0
	b	.LBB7_1417
.LBB7_1345:
.Ltmp377:
	move	$s0, $a0
	b	.LBB7_1418
.LBB7_1346:
.Ltmp362:
	move	$s0, $a0
	b	.LBB7_1419
.LBB7_1347:
.Ltmp347:
	move	$s0, $a0
	b	.LBB7_1420
.LBB7_1348:
.Ltmp332:
	move	$s0, $a0
	b	.LBB7_1421
.LBB7_1349:
.Ltmp317:
	move	$s0, $a0
	b	.LBB7_1422
.LBB7_1350:
.Ltmp302:
	move	$s0, $a0
	b	.LBB7_1423
.LBB7_1351:
.Ltmp287:
	move	$s0, $a0
	b	.LBB7_1424
.LBB7_1352:
.Ltmp278:
	move	$s0, $a0
	b	.LBB7_1779
.LBB7_1353:
.Ltmp266:
	move	$s0, $a0
	b	.LBB7_1426
.LBB7_1354:
.Ltmp260:
	move	$s0, $a0
	b	.LBB7_1792
.LBB7_1355:
.Ltmp248:
	move	$s0, $a0
	b	.LBB7_1428
.LBB7_1356:
.Ltmp242:
	move	$s0, $a0
	b	.LBB7_1805
.LBB7_1357:
.Ltmp230:
	move	$s0, $a0
	b	.LBB7_1430
.LBB7_1358:
.Ltmp224:
	move	$s0, $a0
	b	.LBB7_1818
.LBB7_1359:
.Ltmp212:
	move	$s0, $a0
	b	.LBB7_1432
.LBB7_1360:
.Ltmp206:
	move	$s0, $a0
	b	.LBB7_1831
.LBB7_1361:
.Ltmp194:
	move	$s0, $a0
	b	.LBB7_1434
.LBB7_1362:
.Ltmp188:
	move	$s0, $a0
	b	.LBB7_1844
.LBB7_1363:
.Ltmp176:
	move	$s0, $a0
	b	.LBB7_1436
.LBB7_1364:
.Ltmp167:
	move	$s0, $a0
	b	.LBB7_1858
.LBB7_1365:
.Ltmp704:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1368
.LBB7_1366:
.Ltmp701:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1368
# %bb.1367:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2391
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1368:                             # %.body2395
	ld.d	$a0, $sp, 16
	beq	$a0, $s1, .LBB7_1370
# %bb.1369:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3221
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1370:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3223
	addi.d	$a0, $sp, 144
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1384
.LBB7_1371:
.Ltmp695:
	ld.d	$a2, $sp, 48
	move	$s0, $a0
	bne	$a2, $s7, .LBB7_1374
# %bb.1372:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3214
	ld.d	$a0, $sp, 80
	bne	$a0, $s2, .LBB7_1376
.LBB7_1373:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3217
	ld.d	$a0, $sp, 112
	bne	$a0, $s1, .LBB7_1377
	b	.LBB7_1384
.LBB7_1374:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3212
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB7_1373
	b	.LBB7_1376
.LBB7_1375:
.Ltmp692:
	move	$s0, $a0
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB7_1373
.LBB7_1376:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3215
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 112
	beq	$a0, $s1, .LBB7_1384
.LBB7_1377:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3218
	ld.d	$a1, $sp, 128
	b	.LBB7_1383
.LBB7_1378:
.Ltmp689:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1381
.LBB7_1379:
.Ltmp686:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1381
# %bb.1380:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2341
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1381:                             # %.body2345
	ld.d	$a0, $sp, 144
	beq	$a0, $s1, .LBB7_1384
# %bb.1382:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3209
	ld.d	$a1, $sp, 160
.LBB7_1383:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1384:
	addi.d	$a0, $sp, 344
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1398
.LBB7_1385:
.Ltmp680:
	ld.d	$a2, $sp, 248
	move	$s0, $a0
	bne	$a2, $s7, .LBB7_1388
# %bb.1386:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3202
	ld.d	$a0, $sp, 280
	bne	$a0, $s2, .LBB7_1390
.LBB7_1387:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3205
	ld.d	$a0, $sp, 312
	bne	$a0, $s1, .LBB7_1391
	b	.LBB7_1398
.LBB7_1388:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3200
	ld.d	$a0, $sp, 264
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 280
	beq	$a0, $s2, .LBB7_1387
	b	.LBB7_1390
.LBB7_1389:
.Ltmp677:
	move	$s0, $a0
	ld.d	$a0, $sp, 280
	beq	$a0, $s2, .LBB7_1387
.LBB7_1390:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3203
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 312
	beq	$a0, $s1, .LBB7_1398
.LBB7_1391:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3206
	ld.d	$a1, $sp, 328
	b	.LBB7_1397
.LBB7_1392:
.Ltmp674:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1395
.LBB7_1393:
.Ltmp671:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1395
# %bb.1394:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2291
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1395:                             # %.body2295
	ld.d	$a0, $sp, 344
	beq	$a0, $s1, .LBB7_1398
# %bb.1396:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3197
	ld.d	$a1, $sp, 360
.LBB7_1397:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1398:
	addi.d	$a0, $sp, 544
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1399:
	addi.d	$a0, $sp, 744
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1400:
	addi.d	$a0, $sp, 944
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1401:
	addi.d	$a0, $sp, 1144
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1402:
	addi.d	$a0, $sp, 1344
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1403:
	addi.d	$a0, $sp, 1544
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1404:
	addi.d	$a0, $sp, 1744
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1405:
	addi.d	$a0, $sp, 1944
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1406:
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1407:
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1408:
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1409:
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1410:
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1411:
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1412:
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1413:
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1414:
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1415:
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1416:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1417:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1418:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1419:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1420:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1421:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1422:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1423:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8FunctionD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1424:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1425:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2884
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1816
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB7_1426:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1427:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2869
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2208
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB7_1428:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1429:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2854
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2600
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB7_1430:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1431:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2839
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2992
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB7_1432:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1433:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2824
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3384
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB7_1434:
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1435:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2809
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3776
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB7_1436:
	lu12i.w	$a0, 2
	ori	$a0, $a0, 72
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB7_1437:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2794
	lu12i.w	$a0, 2
	ori	$a0, $a0, 240
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB7_1438:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2785
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB7_1439:
.Ltmp665:
	ld.d	$a2, $sp, 448
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1442
# %bb.1440:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3190
	ld.d	$a0, $sp, 480
	bne	$a0, $s2, .LBB7_1443
.LBB7_1441:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3193
	ld.d	$a0, $sp, 512
	beq	$a0, $s1, .LBB7_1399
	b	.LBB7_1444
.LBB7_1442:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3188
	ld.d	$a0, $sp, 464
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 480
	beq	$a0, $s2, .LBB7_1441
.LBB7_1443:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3191
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 512
	beq	$a0, $s1, .LBB7_1399
.LBB7_1444:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3194
	ld.d	$a1, $sp, 528
	b	.LBB7_1450
.LBB7_1445:
.Ltmp662:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1448
.LBB7_1446:
.Ltmp659:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1448
# %bb.1447:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2241
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1448:                             # %.body2245
	ld.d	$a0, $sp, 544
	beq	$a0, $s1, .LBB7_1399
# %bb.1449:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3185
	ld.d	$a1, $sp, 560
.LBB7_1450:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1399
.LBB7_1451:
.Ltmp653:
	ld.d	$a2, $sp, 648
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1454
# %bb.1452:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3178
	ld.d	$a0, $sp, 680
	bne	$a0, $s2, .LBB7_1456
.LBB7_1453:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3181
	ld.d	$a0, $sp, 712
	beq	$a0, $s1, .LBB7_1400
	b	.LBB7_1457
.LBB7_1454:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3176
	ld.d	$a0, $sp, 664
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 680
	beq	$a0, $s2, .LBB7_1453
	b	.LBB7_1456
.LBB7_1455:
.Ltmp650:
	move	$s0, $a0
	ld.d	$a0, $sp, 680
	beq	$a0, $s2, .LBB7_1453
.LBB7_1456:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3179
	ld.d	$a1, $sp, 696
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 712
	beq	$a0, $s1, .LBB7_1400
.LBB7_1457:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3182
	ld.d	$a1, $sp, 728
	b	.LBB7_1463
.LBB7_1458:
.Ltmp647:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1461
.LBB7_1459:
.Ltmp644:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1461
# %bb.1460:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2191
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1461:                             # %.body2195
	ld.d	$a0, $sp, 744
	beq	$a0, $s1, .LBB7_1400
# %bb.1462:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3173
	ld.d	$a1, $sp, 760
.LBB7_1463:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1400
.LBB7_1464:
.Ltmp638:
	ld.d	$a2, $sp, 848
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1467
# %bb.1465:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3166
	ld.d	$a0, $sp, 880
	bne	$a0, $s2, .LBB7_1469
.LBB7_1466:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3169
	ld.d	$a0, $sp, 912
	beq	$a0, $s1, .LBB7_1401
	b	.LBB7_1470
.LBB7_1467:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3164
	ld.d	$a0, $sp, 864
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 880
	beq	$a0, $s2, .LBB7_1466
	b	.LBB7_1469
.LBB7_1468:
.Ltmp635:
	move	$s0, $a0
	ld.d	$a0, $sp, 880
	beq	$a0, $s2, .LBB7_1466
.LBB7_1469:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3167
	ld.d	$a1, $sp, 896
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 912
	beq	$a0, $s1, .LBB7_1401
.LBB7_1470:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3170
	ld.d	$a1, $sp, 928
	b	.LBB7_1476
.LBB7_1471:
.Ltmp632:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1474
.LBB7_1472:
.Ltmp629:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1474
# %bb.1473:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2141
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1474:                             # %.body2145
	ld.d	$a0, $sp, 944
	beq	$a0, $s1, .LBB7_1401
# %bb.1475:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3161
	ld.d	$a1, $sp, 960
.LBB7_1476:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1401
.LBB7_1477:
.Ltmp623:
	ld.d	$a2, $sp, 1048
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1480
# %bb.1478:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3154
	ld.d	$a0, $sp, 1080
	bne	$a0, $s2, .LBB7_1482
.LBB7_1479:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3157
	ld.d	$a0, $sp, 1112
	beq	$a0, $s1, .LBB7_1402
	b	.LBB7_1483
.LBB7_1480:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3152
	ld.d	$a0, $sp, 1064
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1080
	beq	$a0, $s2, .LBB7_1479
	b	.LBB7_1482
.LBB7_1481:
.Ltmp620:
	move	$s0, $a0
	ld.d	$a0, $sp, 1080
	beq	$a0, $s2, .LBB7_1479
.LBB7_1482:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3155
	ld.d	$a1, $sp, 1096
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1112
	beq	$a0, $s1, .LBB7_1402
.LBB7_1483:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3158
	ld.d	$a1, $sp, 1128
	b	.LBB7_1489
.LBB7_1484:
.Ltmp617:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1487
.LBB7_1485:
.Ltmp614:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1487
# %bb.1486:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2091
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1487:                             # %.body2095
	ld.d	$a0, $sp, 1144
	beq	$a0, $s1, .LBB7_1402
# %bb.1488:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3149
	ld.d	$a1, $sp, 1160
.LBB7_1489:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1402
.LBB7_1490:
.Ltmp608:
	ld.d	$a2, $sp, 1248
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1493
# %bb.1491:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3142
	ld.d	$a0, $sp, 1280
	bne	$a0, $s2, .LBB7_1495
.LBB7_1492:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3145
	ld.d	$a0, $sp, 1312
	beq	$a0, $s1, .LBB7_1403
	b	.LBB7_1496
.LBB7_1493:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3140
	ld.d	$a0, $sp, 1264
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1280
	beq	$a0, $s2, .LBB7_1492
	b	.LBB7_1495
.LBB7_1494:
.Ltmp605:
	move	$s0, $a0
	ld.d	$a0, $sp, 1280
	beq	$a0, $s2, .LBB7_1492
.LBB7_1495:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3143
	ld.d	$a1, $sp, 1296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1312
	beq	$a0, $s1, .LBB7_1403
.LBB7_1496:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3146
	ld.d	$a1, $sp, 1328
	b	.LBB7_1502
.LBB7_1497:
.Ltmp602:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1500
.LBB7_1498:
.Ltmp599:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1500
# %bb.1499:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i2041
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1500:                             # %.body2045
	ld.d	$a0, $sp, 1344
	beq	$a0, $s1, .LBB7_1403
# %bb.1501:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3137
	ld.d	$a1, $sp, 1360
.LBB7_1502:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1403
.LBB7_1503:
.Ltmp593:
	ld.d	$a2, $sp, 1448
	move	$s0, $a0
	bne	$a2, $s7, .LBB7_1506
# %bb.1504:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3130
	ld.d	$a0, $sp, 1480
	bne	$a0, $s2, .LBB7_1508
.LBB7_1505:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3133
	ld.d	$a0, $sp, 1512
	beq	$a0, $s1, .LBB7_1404
	b	.LBB7_1509
.LBB7_1506:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3128
	ld.d	$a0, $sp, 1464
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1480
	beq	$a0, $s2, .LBB7_1505
	b	.LBB7_1508
.LBB7_1507:
.Ltmp590:
	move	$s0, $a0
	ld.d	$a0, $sp, 1480
	beq	$a0, $s2, .LBB7_1505
.LBB7_1508:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3131
	ld.d	$a1, $sp, 1496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1512
	beq	$a0, $s1, .LBB7_1404
.LBB7_1509:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3134
	ld.d	$a1, $sp, 1528
	b	.LBB7_1515
.LBB7_1510:
.Ltmp587:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1513
.LBB7_1511:
.Ltmp584:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1513
# %bb.1512:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1991
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1513:                             # %.body1995
	ld.d	$a0, $sp, 1544
	beq	$a0, $s1, .LBB7_1404
# %bb.1514:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3125
	ld.d	$a1, $sp, 1560
.LBB7_1515:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1404
.LBB7_1516:
.Ltmp578:
	ld.d	$a2, $sp, 1648
	move	$s0, $a0
	bne	$a2, $s8, .LBB7_1519
# %bb.1517:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3118
	ld.d	$a0, $sp, 1680
	bne	$a0, $s2, .LBB7_1521
.LBB7_1518:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3121
	ld.d	$a0, $sp, 1712
	beq	$a0, $s1, .LBB7_1405
	b	.LBB7_1522
.LBB7_1519:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3116
	ld.d	$a0, $sp, 1664
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1680
	beq	$a0, $s2, .LBB7_1518
	b	.LBB7_1521
.LBB7_1520:
.Ltmp575:
	move	$s0, $a0
	ld.d	$a0, $sp, 1680
	beq	$a0, $s2, .LBB7_1518
.LBB7_1521:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3119
	ld.d	$a1, $sp, 1696
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1712
	beq	$a0, $s1, .LBB7_1405
.LBB7_1522:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3122
	ld.d	$a1, $sp, 1728
	b	.LBB7_1528
.LBB7_1523:
.Ltmp572:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1526
.LBB7_1524:
.Ltmp569:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1526
# %bb.1525:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1941
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1526:                             # %.body1945
	ld.d	$a0, $sp, 1744
	beq	$a0, $s1, .LBB7_1405
# %bb.1527:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3113
	ld.d	$a1, $sp, 1760
.LBB7_1528:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1405
.LBB7_1529:
.Ltmp563:
	ld.d	$a2, $sp, 1848
	move	$s0, $a0
	bne	$a2, $s8, .LBB7_1532
# %bb.1530:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3106
	ld.d	$a0, $sp, 1880
	bne	$a0, $s2, .LBB7_1534
.LBB7_1531:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3109
	ld.d	$a0, $sp, 1912
	beq	$a0, $s1, .LBB7_1406
	b	.LBB7_1535
.LBB7_1532:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3104
	ld.d	$a0, $sp, 1864
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1880
	beq	$a0, $s2, .LBB7_1531
	b	.LBB7_1534
.LBB7_1533:
.Ltmp560:
	move	$s0, $a0
	ld.d	$a0, $sp, 1880
	beq	$a0, $s2, .LBB7_1531
.LBB7_1534:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3107
	ld.d	$a1, $sp, 1896
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1912
	beq	$a0, $s1, .LBB7_1406
.LBB7_1535:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3110
	ld.d	$a1, $sp, 1928
	b	.LBB7_1541
.LBB7_1536:
.Ltmp557:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1539
.LBB7_1537:
.Ltmp554:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1539
# %bb.1538:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1891
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1539:                             # %.body1895
	ld.d	$a0, $sp, 1944
	beq	$a0, $s1, .LBB7_1406
# %bb.1540:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3101
	ld.d	$a1, $sp, 1960
.LBB7_1541:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1406
.LBB7_1542:
.Ltmp548:
	ori	$a1, $zero, 2048
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s8, .LBB7_1545
# %bb.1543:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3094
	ori	$a0, $zero, 2080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1547
.LBB7_1544:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3097
	ori	$a0, $zero, 2112
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1407
	b	.LBB7_1548
.LBB7_1545:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3092
	ori	$a0, $zero, 2064
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1544
	b	.LBB7_1547
.LBB7_1546:
.Ltmp545:
	move	$s0, $a0
	ori	$a0, $zero, 2080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1544
.LBB7_1547:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3095
	ori	$a1, $zero, 2096
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2112
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1407
.LBB7_1548:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3098
	ori	$a1, $zero, 2128
	b	.LBB7_1554
.LBB7_1549:
.Ltmp542:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1552
.LBB7_1550:
.Ltmp539:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1552
# %bb.1551:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1841
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1552:                             # %.body1845
	ori	$a0, $zero, 2144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1407
# %bb.1553:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3089
	ori	$a1, $zero, 2160
.LBB7_1554:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1407
.LBB7_1555:
.Ltmp533:
	ori	$a1, $zero, 2248
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s8, .LBB7_1558
# %bb.1556:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3082
	ori	$a0, $zero, 2280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1560
.LBB7_1557:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3085
	ori	$a0, $zero, 2312
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1408
	b	.LBB7_1561
.LBB7_1558:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3080
	ori	$a0, $zero, 2264
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1557
	b	.LBB7_1560
.LBB7_1559:
.Ltmp530:
	move	$s0, $a0
	ori	$a0, $zero, 2280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1557
.LBB7_1560:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3083
	ori	$a1, $zero, 2296
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2312
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1408
.LBB7_1561:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3086
	ori	$a1, $zero, 2328
	b	.LBB7_1567
.LBB7_1562:
.Ltmp527:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1565
.LBB7_1563:
.Ltmp524:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1565
# %bb.1564:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1791
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1565:                             # %.body1795
	ori	$a0, $zero, 2344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1408
# %bb.1566:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3077
	ori	$a1, $zero, 2360
.LBB7_1567:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1408
.LBB7_1568:
.Ltmp518:
	ori	$a1, $zero, 2448
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1571
# %bb.1569:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3070
	ori	$a0, $zero, 2480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1573
.LBB7_1570:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3073
	ori	$a0, $zero, 2512
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1409
	b	.LBB7_1574
.LBB7_1571:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3068
	ori	$a0, $zero, 2464
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1570
	b	.LBB7_1573
.LBB7_1572:
.Ltmp515:
	move	$s0, $a0
	ori	$a0, $zero, 2480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1570
.LBB7_1573:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3071
	ori	$a1, $zero, 2496
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2512
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1409
.LBB7_1574:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3074
	ori	$a1, $zero, 2528
	b	.LBB7_1580
.LBB7_1575:
.Ltmp512:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1578
.LBB7_1576:
.Ltmp509:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1578
# %bb.1577:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1741
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1578:                             # %.body1745
	ori	$a0, $zero, 2544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1409
# %bb.1579:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3065
	ori	$a1, $zero, 2560
.LBB7_1580:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1409
.LBB7_1581:
.Ltmp503:
	ori	$a1, $zero, 2648
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1584
# %bb.1582:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3058
	ori	$a0, $zero, 2680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1586
.LBB7_1583:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3061
	ori	$a0, $zero, 2712
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1410
	b	.LBB7_1587
.LBB7_1584:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3056
	ori	$a0, $zero, 2664
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1583
	b	.LBB7_1586
.LBB7_1585:
.Ltmp500:
	move	$s0, $a0
	ori	$a0, $zero, 2680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1583
.LBB7_1586:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3059
	ori	$a1, $zero, 2696
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2712
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1410
.LBB7_1587:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3062
	ori	$a1, $zero, 2728
	b	.LBB7_1593
.LBB7_1588:
.Ltmp497:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1591
.LBB7_1589:
.Ltmp494:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1591
# %bb.1590:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1691
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1591:                             # %.body1695
	ori	$a0, $zero, 2744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1410
# %bb.1592:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3053
	ori	$a1, $zero, 2760
.LBB7_1593:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1410
.LBB7_1594:
.Ltmp488:
	ori	$a1, $zero, 2848
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1597
# %bb.1595:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3046
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1599
.LBB7_1596:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3049
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1411
	b	.LBB7_1600
.LBB7_1597:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3044
	ori	$a0, $zero, 2864
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1596
	b	.LBB7_1599
.LBB7_1598:
.Ltmp485:
	move	$s0, $a0
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1596
.LBB7_1599:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3047
	ori	$a1, $zero, 2896
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1411
.LBB7_1600:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3050
	ori	$a1, $zero, 2928
	b	.LBB7_1606
.LBB7_1601:
.Ltmp482:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1604
.LBB7_1602:
.Ltmp479:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1604
# %bb.1603:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1641
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1604:                             # %.body1645
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1411
# %bb.1605:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3041
	ori	$a1, $zero, 2960
.LBB7_1606:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1411
.LBB7_1607:
.Ltmp473:
	ori	$a1, $zero, 3048
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1610
# %bb.1608:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3034
	ori	$a0, $zero, 3080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1611
.LBB7_1609:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3037
	ori	$a0, $zero, 3112
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1412
	b	.LBB7_1612
.LBB7_1610:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3032
	ori	$a0, $zero, 3064
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1609
.LBB7_1611:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3035
	ori	$a1, $zero, 3096
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3112
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1412
.LBB7_1612:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3038
	ori	$a1, $zero, 3128
	b	.LBB7_1618
.LBB7_1613:
.Ltmp470:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1616
.LBB7_1614:
.Ltmp467:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1616
# %bb.1615:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1591
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1616:                             # %.body1595
	ori	$a0, $zero, 3144
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1412
# %bb.1617:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3029
	ori	$a1, $zero, 3160
.LBB7_1618:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1412
.LBB7_1619:
.Ltmp461:
	ori	$a1, $zero, 3248
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1622
# %bb.1620:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3022
	ori	$a0, $zero, 3280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1624
.LBB7_1621:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3025
	ori	$a0, $zero, 3312
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1413
	b	.LBB7_1625
.LBB7_1622:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3020
	ori	$a0, $zero, 3264
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1621
	b	.LBB7_1624
.LBB7_1623:
.Ltmp458:
	move	$s0, $a0
	ori	$a0, $zero, 3280
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1621
.LBB7_1624:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3023
	ori	$a1, $zero, 3296
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3312
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1413
.LBB7_1625:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3026
	ori	$a1, $zero, 3328
	b	.LBB7_1631
.LBB7_1626:
.Ltmp455:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1629
.LBB7_1627:
.Ltmp452:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1629
# %bb.1628:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1541
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1629:                             # %.body1545
	ori	$a0, $zero, 3344
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1413
# %bb.1630:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3017
	ori	$a1, $zero, 3360
.LBB7_1631:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1413
.LBB7_1632:
.Ltmp446:
	ori	$a1, $zero, 3448
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1635
# %bb.1633:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3010
	ori	$a0, $zero, 3480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1637
.LBB7_1634:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3013
	ori	$a0, $zero, 3512
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1414
	b	.LBB7_1638
.LBB7_1635:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3008
	ori	$a0, $zero, 3464
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1634
	b	.LBB7_1637
.LBB7_1636:
.Ltmp443:
	move	$s0, $a0
	ori	$a0, $zero, 3480
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1634
.LBB7_1637:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3011
	ori	$a1, $zero, 3496
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3512
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1414
.LBB7_1638:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3014
	ori	$a1, $zero, 3528
	b	.LBB7_1644
.LBB7_1639:
.Ltmp440:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1642
.LBB7_1640:
.Ltmp437:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1642
# %bb.1641:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1491
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1642:                             # %.body1495
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1414
# %bb.1643:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3005
	ori	$a1, $zero, 3560
.LBB7_1644:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1414
.LBB7_1645:
.Ltmp431:
	ori	$a1, $zero, 3648
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s3, .LBB7_1648
# %bb.1646:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2998
	ori	$a0, $zero, 3680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1650
.LBB7_1647:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3001
	ori	$a0, $zero, 3712
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1415
	b	.LBB7_1651
.LBB7_1648:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2996
	ori	$a0, $zero, 3664
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1647
	b	.LBB7_1650
.LBB7_1649:
.Ltmp428:
	move	$s0, $a0
	ori	$a0, $zero, 3680
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1647
.LBB7_1650:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2999
	ori	$a1, $zero, 3696
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3712
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1415
.LBB7_1651:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3002
	ori	$a1, $zero, 3728
	b	.LBB7_1657
.LBB7_1652:
.Ltmp425:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1655
.LBB7_1653:
.Ltmp422:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1655
# %bb.1654:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1441
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1655:                             # %.body1445
	ori	$a0, $zero, 3744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1415
# %bb.1656:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2993
	ori	$a1, $zero, 3760
.LBB7_1657:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1415
.LBB7_1658:
.Ltmp416:
	ori	$a1, $zero, 3848
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	bne	$a2, $s8, .LBB7_1661
# %bb.1659:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2986
	ori	$a0, $zero, 3880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB7_1663
.LBB7_1660:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2989
	ori	$a0, $zero, 3912
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1416
	b	.LBB7_1664
.LBB7_1661:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2984
	ori	$a0, $zero, 3864
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1660
	b	.LBB7_1663
.LBB7_1662:
.Ltmp413:
	move	$s0, $a0
	ori	$a0, $zero, 3880
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1660
.LBB7_1663:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2987
	ori	$a1, $zero, 3896
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3912
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1416
.LBB7_1664:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2990
	ori	$a1, $zero, 3928
	b	.LBB7_1670
.LBB7_1665:
.Ltmp410:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1668
.LBB7_1666:
.Ltmp407:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1668
# %bb.1667:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1391
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1668:                             # %.body1395
	ori	$a0, $zero, 3944
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1416
# %bb.1669:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2981
	ori	$a1, $zero, 3960
.LBB7_1670:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1416
.LBB7_1671:
.Ltmp401:
	ori	$a1, $zero, 4048
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s3, .LBB7_1674
# %bb.1672:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2972
	ori	$a0, $zero, 4064
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1674
.LBB7_1673:
.Ltmp398:
	move	$s0, $a0
.LBB7_1674:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2974
	ori	$a0, $zero, 4080
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1676
# %bb.1675:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2975
	lu12i.w	$a1, 1
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1676:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2977
	lu12i.w	$a0, 1
	ori	$a0, $a0, 16
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1417
# %bb.1677:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2978
	lu12i.w	$a1, 1
	ori	$a1, $a1, 32
	b	.LBB7_1683
.LBB7_1678:
.Ltmp395:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1681
.LBB7_1679:
.Ltmp392:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1681
# %bb.1680:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1341
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1681:                             # %.body1345
	lu12i.w	$a0, 1
	ori	$a0, $a0, 48
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1417
# %bb.1682:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2969
	lu12i.w	$a1, 1
	ori	$a1, $a1, 64
.LBB7_1683:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1417
.LBB7_1684:
.Ltmp386:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 152
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s3, .LBB7_1686
# %bb.1685:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2960
	lu12i.w	$a0, 1
	ori	$a0, $a0, 168
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1686:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2962
	lu12i.w	$a0, 1
	ori	$a0, $a0, 184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1688
# %bb.1687:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2963
	lu12i.w	$a1, 1
	ori	$a1, $a1, 200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1688:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2965
	lu12i.w	$a0, 1
	ori	$a0, $a0, 216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1418
# %bb.1689:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2966
	lu12i.w	$a1, 1
	ori	$a1, $a1, 232
	b	.LBB7_1695
.LBB7_1690:
.Ltmp383:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1693
.LBB7_1691:
.Ltmp380:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1693
# %bb.1692:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1291
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1693:                             # %.body1295
	lu12i.w	$a0, 1
	ori	$a0, $a0, 248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1418
# %bb.1694:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2957
	lu12i.w	$a1, 1
	ori	$a1, $a1, 264
.LBB7_1695:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1418
.LBB7_1696:
.Ltmp374:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 352
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s3, .LBB7_1699
# %bb.1697:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2948
	lu12i.w	$a0, 1
	ori	$a0, $a0, 368
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1699
.LBB7_1698:
.Ltmp371:
	move	$s0, $a0
.LBB7_1699:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2950
	lu12i.w	$a0, 1
	ori	$a0, $a0, 384
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1701
# %bb.1700:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2951
	lu12i.w	$a1, 1
	ori	$a1, $a1, 400
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1701:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2953
	lu12i.w	$a0, 1
	ori	$a0, $a0, 416
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1419
# %bb.1702:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2954
	lu12i.w	$a1, 1
	ori	$a1, $a1, 432
	b	.LBB7_1708
.LBB7_1703:
.Ltmp368:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1706
.LBB7_1704:
.Ltmp365:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1706
# %bb.1705:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1241
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1706:                             # %.body1245
	lu12i.w	$a0, 1
	ori	$a0, $a0, 448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1419
# %bb.1707:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2945
	lu12i.w	$a1, 1
	ori	$a1, $a1, 464
.LBB7_1708:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1419
.LBB7_1709:
.Ltmp359:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 552
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s3, .LBB7_1712
# %bb.1710:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2936
	lu12i.w	$a0, 1
	ori	$a0, $a0, 568
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1712
.LBB7_1711:
.Ltmp356:
	move	$s0, $a0
.LBB7_1712:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2938
	lu12i.w	$a0, 1
	ori	$a0, $a0, 584
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1714
# %bb.1713:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2939
	lu12i.w	$a1, 1
	ori	$a1, $a1, 600
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1714:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2941
	lu12i.w	$a0, 1
	ori	$a0, $a0, 616
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1420
# %bb.1715:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2942
	lu12i.w	$a1, 1
	ori	$a1, $a1, 632
	b	.LBB7_1721
.LBB7_1716:
.Ltmp353:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1719
.LBB7_1717:
.Ltmp350:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1719
# %bb.1718:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1191
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1719:                             # %.body1195
	lu12i.w	$a0, 1
	ori	$a0, $a0, 648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1420
# %bb.1720:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2933
	lu12i.w	$a1, 1
	ori	$a1, $a1, 664
.LBB7_1721:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1420
.LBB7_1722:
.Ltmp344:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 752
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s8, .LBB7_1725
# %bb.1723:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2924
	lu12i.w	$a0, 1
	ori	$a0, $a0, 768
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1725
.LBB7_1724:
.Ltmp341:
	move	$s0, $a0
.LBB7_1725:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2926
	lu12i.w	$a0, 1
	ori	$a0, $a0, 784
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1727
# %bb.1726:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2927
	lu12i.w	$a1, 1
	ori	$a1, $a1, 800
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1727:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2929
	lu12i.w	$a0, 1
	ori	$a0, $a0, 816
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1421
# %bb.1728:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2930
	lu12i.w	$a1, 1
	ori	$a1, $a1, 832
	b	.LBB7_1734
.LBB7_1729:
.Ltmp338:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1732
.LBB7_1730:
.Ltmp335:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1732
# %bb.1731:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1141
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1732:                             # %.body1145
	lu12i.w	$a0, 1
	ori	$a0, $a0, 848
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1421
# %bb.1733:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2921
	lu12i.w	$a1, 1
	ori	$a1, $a1, 864
.LBB7_1734:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1421
.LBB7_1735:
.Ltmp329:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 952
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s8, .LBB7_1738
# %bb.1736:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2912
	lu12i.w	$a0, 1
	ori	$a0, $a0, 968
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1738
.LBB7_1737:
.Ltmp326:
	move	$s0, $a0
.LBB7_1738:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2914
	lu12i.w	$a0, 1
	ori	$a0, $a0, 984
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1740
# %bb.1739:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2915
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1000
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1740:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2917
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1016
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1422
# %bb.1741:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2918
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1032
	b	.LBB7_1747
.LBB7_1742:
.Ltmp323:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1745
.LBB7_1743:
.Ltmp320:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1745
# %bb.1744:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1091
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1745:                             # %.body1095
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1048
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1422
# %bb.1746:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2909
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1064
.LBB7_1747:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1422
.LBB7_1748:
.Ltmp314:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1152
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s8, .LBB7_1751
# %bb.1749:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2900
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1168
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1751
.LBB7_1750:
.Ltmp311:
	move	$s0, $a0
.LBB7_1751:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2902
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1753
# %bb.1752:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2903
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1753:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2905
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1423
# %bb.1754:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2906
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1232
	b	.LBB7_1760
.LBB7_1755:
.Ltmp308:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1758
.LBB7_1756:
.Ltmp305:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1758
# %bb.1757:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1052
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1758:                             # %.body1056
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1248
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1423
# %bb.1759:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2897
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1264
.LBB7_1760:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1423
.LBB7_1761:
.Ltmp299:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1352
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s3, .LBB7_1764
# %bb.1762:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2888
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1368
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1764
.LBB7_1763:
.Ltmp296:
	move	$s0, $a0
.LBB7_1764:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2890
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1384
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1766
# %bb.1765:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2891
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1400
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1766:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2893
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1416
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1424
# %bb.1767:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2894
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1432
	b	.LBB7_1773
.LBB7_1768:
.Ltmp293:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1771
.LBB7_1769:
.Ltmp290:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1771
# %bb.1770:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i1016
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1771:                             # %.body1020
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1448
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1424
# %bb.1772:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2885
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1464
.LBB7_1773:
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1424
.LBB7_1774:
.Ltmp284:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1552
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1777
# %bb.1775:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2876
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1568
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1777
.LBB7_1776:
.Ltmp281:
	move	$s0, $a0
.LBB7_1777:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2878
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1584
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1779
# %bb.1778:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2879
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1600
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1779:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2881
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1616
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_1425
# %bb.1780:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2882
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1632
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1425
.LBB7_1781:
.Ltmp275:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1784
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1426
# %bb.1782:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2873
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1800
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1426
.LBB7_1783:
.Ltmp272:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1786
.LBB7_1784:
.Ltmp269:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1786
# %bb.1785:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i972
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1786:                             # %.body976
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1648
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1426
# %bb.1787:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2870
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1664
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1426
.LBB7_1788:
.Ltmp263:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1944
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1790
# %bb.1789:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2861
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1960
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1790:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2863
	lu12i.w	$a0, 1
	ori	$a0, $a0, 1976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1792
# %bb.1791:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2864
	lu12i.w	$a1, 1
	ori	$a1, $a1, 1992
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1792:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2866
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2008
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_1427
# %bb.1793:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2867
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2024
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1427
.LBB7_1794:
.Ltmp257:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2176
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1428
# %bb.1795:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2858
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2192
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1428
.LBB7_1796:
.Ltmp254:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1799
.LBB7_1797:
.Ltmp251:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1799
# %bb.1798:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i928
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1799:                             # %.body932
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2040
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1428
# %bb.1800:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2855
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2056
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1428
.LBB7_1801:
.Ltmp245:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2336
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1803
# %bb.1802:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2846
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2352
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1803:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2848
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2368
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1805
# %bb.1804:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2849
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2384
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1805:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2851
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2400
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_1429
# %bb.1806:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2852
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2416
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1429
.LBB7_1807:
.Ltmp239:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2568
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1430
# %bb.1808:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2843
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2584
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1430
.LBB7_1809:
.Ltmp236:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1812
.LBB7_1810:
.Ltmp233:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1812
# %bb.1811:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i884
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1812:                             # %.body888
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2432
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1430
# %bb.1813:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2840
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2448
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1430
.LBB7_1814:
.Ltmp227:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2728
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1816
# %bb.1815:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2831
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2744
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1816:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2833
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2760
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1818
# %bb.1817:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2834
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2776
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1818:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2836
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2792
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_1431
# %bb.1819:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2837
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2808
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1431
.LBB7_1820:
.Ltmp221:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2960
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1432
# %bb.1821:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2828
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2976
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1432
.LBB7_1822:
.Ltmp218:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1825
.LBB7_1823:
.Ltmp215:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1825
# %bb.1824:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i840
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1825:                             # %.body844
	lu12i.w	$a0, 1
	ori	$a0, $a0, 2824
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1432
# %bb.1826:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2825
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2840
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1432
.LBB7_1827:
.Ltmp209:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3120
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1829
# %bb.1828:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2816
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3136
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1829:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2818
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1831
# %bb.1830:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2819
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3168
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1831:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2821
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3184
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_1433
# %bb.1832:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2822
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1433
.LBB7_1833:
.Ltmp203:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3352
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1434
# %bb.1834:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2813
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3368
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1434
.LBB7_1835:
.Ltmp200:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1838
.LBB7_1836:
.Ltmp197:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1838
# %bb.1837:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i796
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1838:                             # %.body800
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3216
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1434
# %bb.1839:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2810
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3232
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1434
.LBB7_1840:
.Ltmp191:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3512
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1842
# %bb.1841:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2801
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3528
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1842:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2803
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3544
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s5, .LBB7_1844
# %bb.1843:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2804
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3560
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1844:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2806
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3576
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s3, .LBB7_1435
# %bb.1845:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2807
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3592
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1435
.LBB7_1846:
.Ltmp185:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3744
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $s2, .LBB7_1436
# %bb.1847:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2798
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3760
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1436
.LBB7_1848:
.Ltmp182:
	move	$s0, $a0
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB7_1851
.LBB7_1849:
.Ltmp179:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3904
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1851
# %bb.1850:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3920
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1851:                             # %.body
	lu12i.w	$a0, 1
	ori	$a0, $a0, 3608
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1436
# %bb.1852:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2795
	lu12i.w	$a1, 1
	ori	$a1, $a1, 3624
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1436
.LBB7_1853:
.Ltmp173:
	lu12i.w	$a1, 1
	ori	$a1, $a1, 4072
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1856
# %bb.1854:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2786
	lu12i.w	$a0, 1
	ori	$a0, $a0, 4088
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1856
.LBB7_1855:
.Ltmp170:
	move	$s0, $a0
.LBB7_1856:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2788
	lu12i.w	$a0, 2
	ori	$a0, $a0, 8
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB7_1858
# %bb.1857:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2789
	lu12i.w	$a1, 2
	ori	$a1, $a1, 24
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_1858:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2791
	lu12i.w	$a0, 2
	ori	$a0, $a0, 40
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB7_1437
# %bb.1859:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2792
	lu12i.w	$a1, 2
	ori	$a1, $a1, 56
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB7_1437
.LBB7_1860:
.Ltmp164:
	lu12i.w	$a1, 2
	ori	$a1, $a1, 208
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB7_1438
# %bb.1861:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2783
	lu12i.w	$a0, 2
	ori	$a0, $a0, 224
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end7:
	.size	_ZN2PP11PowerParser4initEv, .Lfunc_end7-_ZN2PP11PowerParser4initEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table7:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Ltmp162-.Lfunc_begin6         # >> Call Site 1 <<
	.uleb128 .Ltmp163-.Ltmp162              #   Call between .Ltmp162 and .Ltmp163
	.uleb128 .Ltmp164-.Lfunc_begin6         #     jumps to .Ltmp164
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp163-.Lfunc_begin6         # >> Call Site 2 <<
	.uleb128 .Ltmp165-.Ltmp163              #   Call between .Ltmp163 and .Ltmp165
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp165-.Lfunc_begin6         # >> Call Site 3 <<
	.uleb128 .Ltmp166-.Ltmp165              #   Call between .Ltmp165 and .Ltmp166
	.uleb128 .Ltmp167-.Lfunc_begin6         #     jumps to .Ltmp167
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp166-.Lfunc_begin6         # >> Call Site 4 <<
	.uleb128 .Ltmp168-.Ltmp166              #   Call between .Ltmp166 and .Ltmp168
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp168-.Lfunc_begin6         # >> Call Site 5 <<
	.uleb128 .Ltmp169-.Ltmp168              #   Call between .Ltmp168 and .Ltmp169
	.uleb128 .Ltmp170-.Lfunc_begin6         #     jumps to .Ltmp170
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp171-.Lfunc_begin6         # >> Call Site 6 <<
	.uleb128 .Ltmp172-.Ltmp171              #   Call between .Ltmp171 and .Ltmp172
	.uleb128 .Ltmp173-.Lfunc_begin6         #     jumps to .Ltmp173
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp172-.Lfunc_begin6         # >> Call Site 7 <<
	.uleb128 .Ltmp174-.Ltmp172              #   Call between .Ltmp172 and .Ltmp174
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp174-.Lfunc_begin6         # >> Call Site 8 <<
	.uleb128 .Ltmp175-.Ltmp174              #   Call between .Ltmp174 and .Ltmp175
	.uleb128 .Ltmp176-.Lfunc_begin6         #     jumps to .Ltmp176
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp175-.Lfunc_begin6         # >> Call Site 9 <<
	.uleb128 .Ltmp177-.Ltmp175              #   Call between .Ltmp175 and .Ltmp177
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp177-.Lfunc_begin6         # >> Call Site 10 <<
	.uleb128 .Ltmp178-.Ltmp177              #   Call between .Ltmp177 and .Ltmp178
	.uleb128 .Ltmp179-.Lfunc_begin6         #     jumps to .Ltmp179
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp180-.Lfunc_begin6         # >> Call Site 11 <<
	.uleb128 .Ltmp181-.Ltmp180              #   Call between .Ltmp180 and .Ltmp181
	.uleb128 .Ltmp182-.Lfunc_begin6         #     jumps to .Ltmp182
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp181-.Lfunc_begin6         # >> Call Site 12 <<
	.uleb128 .Ltmp183-.Ltmp181              #   Call between .Ltmp181 and .Ltmp183
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp183-.Lfunc_begin6         # >> Call Site 13 <<
	.uleb128 .Ltmp184-.Ltmp183              #   Call between .Ltmp183 and .Ltmp184
	.uleb128 .Ltmp185-.Lfunc_begin6         #     jumps to .Ltmp185
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp184-.Lfunc_begin6         # >> Call Site 14 <<
	.uleb128 .Ltmp186-.Ltmp184              #   Call between .Ltmp184 and .Ltmp186
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp186-.Lfunc_begin6         # >> Call Site 15 <<
	.uleb128 .Ltmp187-.Ltmp186              #   Call between .Ltmp186 and .Ltmp187
	.uleb128 .Ltmp188-.Lfunc_begin6         #     jumps to .Ltmp188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp187-.Lfunc_begin6         # >> Call Site 16 <<
	.uleb128 .Ltmp189-.Ltmp187              #   Call between .Ltmp187 and .Ltmp189
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp189-.Lfunc_begin6         # >> Call Site 17 <<
	.uleb128 .Ltmp190-.Ltmp189              #   Call between .Ltmp189 and .Ltmp190
	.uleb128 .Ltmp191-.Lfunc_begin6         #     jumps to .Ltmp191
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp190-.Lfunc_begin6         # >> Call Site 18 <<
	.uleb128 .Ltmp192-.Ltmp190              #   Call between .Ltmp190 and .Ltmp192
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp192-.Lfunc_begin6         # >> Call Site 19 <<
	.uleb128 .Ltmp193-.Ltmp192              #   Call between .Ltmp192 and .Ltmp193
	.uleb128 .Ltmp194-.Lfunc_begin6         #     jumps to .Ltmp194
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp193-.Lfunc_begin6         # >> Call Site 20 <<
	.uleb128 .Ltmp195-.Ltmp193              #   Call between .Ltmp193 and .Ltmp195
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp195-.Lfunc_begin6         # >> Call Site 21 <<
	.uleb128 .Ltmp196-.Ltmp195              #   Call between .Ltmp195 and .Ltmp196
	.uleb128 .Ltmp197-.Lfunc_begin6         #     jumps to .Ltmp197
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp198-.Lfunc_begin6         # >> Call Site 22 <<
	.uleb128 .Ltmp199-.Ltmp198              #   Call between .Ltmp198 and .Ltmp199
	.uleb128 .Ltmp200-.Lfunc_begin6         #     jumps to .Ltmp200
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp199-.Lfunc_begin6         # >> Call Site 23 <<
	.uleb128 .Ltmp201-.Ltmp199              #   Call between .Ltmp199 and .Ltmp201
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp201-.Lfunc_begin6         # >> Call Site 24 <<
	.uleb128 .Ltmp202-.Ltmp201              #   Call between .Ltmp201 and .Ltmp202
	.uleb128 .Ltmp203-.Lfunc_begin6         #     jumps to .Ltmp203
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp202-.Lfunc_begin6         # >> Call Site 25 <<
	.uleb128 .Ltmp204-.Ltmp202              #   Call between .Ltmp202 and .Ltmp204
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp204-.Lfunc_begin6         # >> Call Site 26 <<
	.uleb128 .Ltmp205-.Ltmp204              #   Call between .Ltmp204 and .Ltmp205
	.uleb128 .Ltmp206-.Lfunc_begin6         #     jumps to .Ltmp206
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp205-.Lfunc_begin6         # >> Call Site 27 <<
	.uleb128 .Ltmp207-.Ltmp205              #   Call between .Ltmp205 and .Ltmp207
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp207-.Lfunc_begin6         # >> Call Site 28 <<
	.uleb128 .Ltmp208-.Ltmp207              #   Call between .Ltmp207 and .Ltmp208
	.uleb128 .Ltmp209-.Lfunc_begin6         #     jumps to .Ltmp209
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp208-.Lfunc_begin6         # >> Call Site 29 <<
	.uleb128 .Ltmp210-.Ltmp208              #   Call between .Ltmp208 and .Ltmp210
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp210-.Lfunc_begin6         # >> Call Site 30 <<
	.uleb128 .Ltmp211-.Ltmp210              #   Call between .Ltmp210 and .Ltmp211
	.uleb128 .Ltmp212-.Lfunc_begin6         #     jumps to .Ltmp212
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp211-.Lfunc_begin6         # >> Call Site 31 <<
	.uleb128 .Ltmp213-.Ltmp211              #   Call between .Ltmp211 and .Ltmp213
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp213-.Lfunc_begin6         # >> Call Site 32 <<
	.uleb128 .Ltmp214-.Ltmp213              #   Call between .Ltmp213 and .Ltmp214
	.uleb128 .Ltmp215-.Lfunc_begin6         #     jumps to .Ltmp215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp216-.Lfunc_begin6         # >> Call Site 33 <<
	.uleb128 .Ltmp217-.Ltmp216              #   Call between .Ltmp216 and .Ltmp217
	.uleb128 .Ltmp218-.Lfunc_begin6         #     jumps to .Ltmp218
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp217-.Lfunc_begin6         # >> Call Site 34 <<
	.uleb128 .Ltmp219-.Ltmp217              #   Call between .Ltmp217 and .Ltmp219
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp219-.Lfunc_begin6         # >> Call Site 35 <<
	.uleb128 .Ltmp220-.Ltmp219              #   Call between .Ltmp219 and .Ltmp220
	.uleb128 .Ltmp221-.Lfunc_begin6         #     jumps to .Ltmp221
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp220-.Lfunc_begin6         # >> Call Site 36 <<
	.uleb128 .Ltmp222-.Ltmp220              #   Call between .Ltmp220 and .Ltmp222
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp222-.Lfunc_begin6         # >> Call Site 37 <<
	.uleb128 .Ltmp223-.Ltmp222              #   Call between .Ltmp222 and .Ltmp223
	.uleb128 .Ltmp224-.Lfunc_begin6         #     jumps to .Ltmp224
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp223-.Lfunc_begin6         # >> Call Site 38 <<
	.uleb128 .Ltmp225-.Ltmp223              #   Call between .Ltmp223 and .Ltmp225
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp225-.Lfunc_begin6         # >> Call Site 39 <<
	.uleb128 .Ltmp226-.Ltmp225              #   Call between .Ltmp225 and .Ltmp226
	.uleb128 .Ltmp227-.Lfunc_begin6         #     jumps to .Ltmp227
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp226-.Lfunc_begin6         # >> Call Site 40 <<
	.uleb128 .Ltmp228-.Ltmp226              #   Call between .Ltmp226 and .Ltmp228
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp228-.Lfunc_begin6         # >> Call Site 41 <<
	.uleb128 .Ltmp229-.Ltmp228              #   Call between .Ltmp228 and .Ltmp229
	.uleb128 .Ltmp230-.Lfunc_begin6         #     jumps to .Ltmp230
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp229-.Lfunc_begin6         # >> Call Site 42 <<
	.uleb128 .Ltmp231-.Ltmp229              #   Call between .Ltmp229 and .Ltmp231
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp231-.Lfunc_begin6         # >> Call Site 43 <<
	.uleb128 .Ltmp232-.Ltmp231              #   Call between .Ltmp231 and .Ltmp232
	.uleb128 .Ltmp233-.Lfunc_begin6         #     jumps to .Ltmp233
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp234-.Lfunc_begin6         # >> Call Site 44 <<
	.uleb128 .Ltmp235-.Ltmp234              #   Call between .Ltmp234 and .Ltmp235
	.uleb128 .Ltmp236-.Lfunc_begin6         #     jumps to .Ltmp236
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp235-.Lfunc_begin6         # >> Call Site 45 <<
	.uleb128 .Ltmp237-.Ltmp235              #   Call between .Ltmp235 and .Ltmp237
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp237-.Lfunc_begin6         # >> Call Site 46 <<
	.uleb128 .Ltmp238-.Ltmp237              #   Call between .Ltmp237 and .Ltmp238
	.uleb128 .Ltmp239-.Lfunc_begin6         #     jumps to .Ltmp239
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp238-.Lfunc_begin6         # >> Call Site 47 <<
	.uleb128 .Ltmp240-.Ltmp238              #   Call between .Ltmp238 and .Ltmp240
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp240-.Lfunc_begin6         # >> Call Site 48 <<
	.uleb128 .Ltmp241-.Ltmp240              #   Call between .Ltmp240 and .Ltmp241
	.uleb128 .Ltmp242-.Lfunc_begin6         #     jumps to .Ltmp242
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp241-.Lfunc_begin6         # >> Call Site 49 <<
	.uleb128 .Ltmp243-.Ltmp241              #   Call between .Ltmp241 and .Ltmp243
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp243-.Lfunc_begin6         # >> Call Site 50 <<
	.uleb128 .Ltmp244-.Ltmp243              #   Call between .Ltmp243 and .Ltmp244
	.uleb128 .Ltmp245-.Lfunc_begin6         #     jumps to .Ltmp245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp244-.Lfunc_begin6         # >> Call Site 51 <<
	.uleb128 .Ltmp246-.Ltmp244              #   Call between .Ltmp244 and .Ltmp246
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp246-.Lfunc_begin6         # >> Call Site 52 <<
	.uleb128 .Ltmp247-.Ltmp246              #   Call between .Ltmp246 and .Ltmp247
	.uleb128 .Ltmp248-.Lfunc_begin6         #     jumps to .Ltmp248
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp247-.Lfunc_begin6         # >> Call Site 53 <<
	.uleb128 .Ltmp249-.Ltmp247              #   Call between .Ltmp247 and .Ltmp249
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp249-.Lfunc_begin6         # >> Call Site 54 <<
	.uleb128 .Ltmp250-.Ltmp249              #   Call between .Ltmp249 and .Ltmp250
	.uleb128 .Ltmp251-.Lfunc_begin6         #     jumps to .Ltmp251
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp252-.Lfunc_begin6         # >> Call Site 55 <<
	.uleb128 .Ltmp253-.Ltmp252              #   Call between .Ltmp252 and .Ltmp253
	.uleb128 .Ltmp254-.Lfunc_begin6         #     jumps to .Ltmp254
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp253-.Lfunc_begin6         # >> Call Site 56 <<
	.uleb128 .Ltmp255-.Ltmp253              #   Call between .Ltmp253 and .Ltmp255
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp255-.Lfunc_begin6         # >> Call Site 57 <<
	.uleb128 .Ltmp256-.Ltmp255              #   Call between .Ltmp255 and .Ltmp256
	.uleb128 .Ltmp257-.Lfunc_begin6         #     jumps to .Ltmp257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp256-.Lfunc_begin6         # >> Call Site 58 <<
	.uleb128 .Ltmp258-.Ltmp256              #   Call between .Ltmp256 and .Ltmp258
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp258-.Lfunc_begin6         # >> Call Site 59 <<
	.uleb128 .Ltmp259-.Ltmp258              #   Call between .Ltmp258 and .Ltmp259
	.uleb128 .Ltmp260-.Lfunc_begin6         #     jumps to .Ltmp260
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp259-.Lfunc_begin6         # >> Call Site 60 <<
	.uleb128 .Ltmp261-.Ltmp259              #   Call between .Ltmp259 and .Ltmp261
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp261-.Lfunc_begin6         # >> Call Site 61 <<
	.uleb128 .Ltmp262-.Ltmp261              #   Call between .Ltmp261 and .Ltmp262
	.uleb128 .Ltmp263-.Lfunc_begin6         #     jumps to .Ltmp263
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp262-.Lfunc_begin6         # >> Call Site 62 <<
	.uleb128 .Ltmp264-.Ltmp262              #   Call between .Ltmp262 and .Ltmp264
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp264-.Lfunc_begin6         # >> Call Site 63 <<
	.uleb128 .Ltmp265-.Ltmp264              #   Call between .Ltmp264 and .Ltmp265
	.uleb128 .Ltmp266-.Lfunc_begin6         #     jumps to .Ltmp266
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp265-.Lfunc_begin6         # >> Call Site 64 <<
	.uleb128 .Ltmp267-.Ltmp265              #   Call between .Ltmp265 and .Ltmp267
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp267-.Lfunc_begin6         # >> Call Site 65 <<
	.uleb128 .Ltmp268-.Ltmp267              #   Call between .Ltmp267 and .Ltmp268
	.uleb128 .Ltmp269-.Lfunc_begin6         #     jumps to .Ltmp269
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp270-.Lfunc_begin6         # >> Call Site 66 <<
	.uleb128 .Ltmp271-.Ltmp270              #   Call between .Ltmp270 and .Ltmp271
	.uleb128 .Ltmp272-.Lfunc_begin6         #     jumps to .Ltmp272
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp271-.Lfunc_begin6         # >> Call Site 67 <<
	.uleb128 .Ltmp273-.Ltmp271              #   Call between .Ltmp271 and .Ltmp273
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp273-.Lfunc_begin6         # >> Call Site 68 <<
	.uleb128 .Ltmp274-.Ltmp273              #   Call between .Ltmp273 and .Ltmp274
	.uleb128 .Ltmp275-.Lfunc_begin6         #     jumps to .Ltmp275
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp274-.Lfunc_begin6         # >> Call Site 69 <<
	.uleb128 .Ltmp276-.Ltmp274              #   Call between .Ltmp274 and .Ltmp276
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp276-.Lfunc_begin6         # >> Call Site 70 <<
	.uleb128 .Ltmp277-.Ltmp276              #   Call between .Ltmp276 and .Ltmp277
	.uleb128 .Ltmp278-.Lfunc_begin6         #     jumps to .Ltmp278
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp277-.Lfunc_begin6         # >> Call Site 71 <<
	.uleb128 .Ltmp279-.Ltmp277              #   Call between .Ltmp277 and .Ltmp279
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp279-.Lfunc_begin6         # >> Call Site 72 <<
	.uleb128 .Ltmp280-.Ltmp279              #   Call between .Ltmp279 and .Ltmp280
	.uleb128 .Ltmp281-.Lfunc_begin6         #     jumps to .Ltmp281
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp282-.Lfunc_begin6         # >> Call Site 73 <<
	.uleb128 .Ltmp283-.Ltmp282              #   Call between .Ltmp282 and .Ltmp283
	.uleb128 .Ltmp284-.Lfunc_begin6         #     jumps to .Ltmp284
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp283-.Lfunc_begin6         # >> Call Site 74 <<
	.uleb128 .Ltmp285-.Ltmp283              #   Call between .Ltmp283 and .Ltmp285
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp285-.Lfunc_begin6         # >> Call Site 75 <<
	.uleb128 .Ltmp286-.Ltmp285              #   Call between .Ltmp285 and .Ltmp286
	.uleb128 .Ltmp287-.Lfunc_begin6         #     jumps to .Ltmp287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp286-.Lfunc_begin6         # >> Call Site 76 <<
	.uleb128 .Ltmp288-.Ltmp286              #   Call between .Ltmp286 and .Ltmp288
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp288-.Lfunc_begin6         # >> Call Site 77 <<
	.uleb128 .Ltmp289-.Ltmp288              #   Call between .Ltmp288 and .Ltmp289
	.uleb128 .Ltmp290-.Lfunc_begin6         #     jumps to .Ltmp290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp291-.Lfunc_begin6         # >> Call Site 78 <<
	.uleb128 .Ltmp292-.Ltmp291              #   Call between .Ltmp291 and .Ltmp292
	.uleb128 .Ltmp293-.Lfunc_begin6         #     jumps to .Ltmp293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp292-.Lfunc_begin6         # >> Call Site 79 <<
	.uleb128 .Ltmp294-.Ltmp292              #   Call between .Ltmp292 and .Ltmp294
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp294-.Lfunc_begin6         # >> Call Site 80 <<
	.uleb128 .Ltmp295-.Ltmp294              #   Call between .Ltmp294 and .Ltmp295
	.uleb128 .Ltmp296-.Lfunc_begin6         #     jumps to .Ltmp296
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp297-.Lfunc_begin6         # >> Call Site 81 <<
	.uleb128 .Ltmp298-.Ltmp297              #   Call between .Ltmp297 and .Ltmp298
	.uleb128 .Ltmp299-.Lfunc_begin6         #     jumps to .Ltmp299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp298-.Lfunc_begin6         # >> Call Site 82 <<
	.uleb128 .Ltmp300-.Ltmp298              #   Call between .Ltmp298 and .Ltmp300
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp300-.Lfunc_begin6         # >> Call Site 83 <<
	.uleb128 .Ltmp301-.Ltmp300              #   Call between .Ltmp300 and .Ltmp301
	.uleb128 .Ltmp302-.Lfunc_begin6         #     jumps to .Ltmp302
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp301-.Lfunc_begin6         # >> Call Site 84 <<
	.uleb128 .Ltmp303-.Ltmp301              #   Call between .Ltmp301 and .Ltmp303
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp303-.Lfunc_begin6         # >> Call Site 85 <<
	.uleb128 .Ltmp304-.Ltmp303              #   Call between .Ltmp303 and .Ltmp304
	.uleb128 .Ltmp305-.Lfunc_begin6         #     jumps to .Ltmp305
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp306-.Lfunc_begin6         # >> Call Site 86 <<
	.uleb128 .Ltmp307-.Ltmp306              #   Call between .Ltmp306 and .Ltmp307
	.uleb128 .Ltmp308-.Lfunc_begin6         #     jumps to .Ltmp308
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp307-.Lfunc_begin6         # >> Call Site 87 <<
	.uleb128 .Ltmp309-.Ltmp307              #   Call between .Ltmp307 and .Ltmp309
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp309-.Lfunc_begin6         # >> Call Site 88 <<
	.uleb128 .Ltmp310-.Ltmp309              #   Call between .Ltmp309 and .Ltmp310
	.uleb128 .Ltmp311-.Lfunc_begin6         #     jumps to .Ltmp311
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp312-.Lfunc_begin6         # >> Call Site 89 <<
	.uleb128 .Ltmp313-.Ltmp312              #   Call between .Ltmp312 and .Ltmp313
	.uleb128 .Ltmp314-.Lfunc_begin6         #     jumps to .Ltmp314
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp313-.Lfunc_begin6         # >> Call Site 90 <<
	.uleb128 .Ltmp315-.Ltmp313              #   Call between .Ltmp313 and .Ltmp315
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp315-.Lfunc_begin6         # >> Call Site 91 <<
	.uleb128 .Ltmp316-.Ltmp315              #   Call between .Ltmp315 and .Ltmp316
	.uleb128 .Ltmp317-.Lfunc_begin6         #     jumps to .Ltmp317
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp316-.Lfunc_begin6         # >> Call Site 92 <<
	.uleb128 .Ltmp318-.Ltmp316              #   Call between .Ltmp316 and .Ltmp318
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp318-.Lfunc_begin6         # >> Call Site 93 <<
	.uleb128 .Ltmp319-.Ltmp318              #   Call between .Ltmp318 and .Ltmp319
	.uleb128 .Ltmp320-.Lfunc_begin6         #     jumps to .Ltmp320
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp321-.Lfunc_begin6         # >> Call Site 94 <<
	.uleb128 .Ltmp322-.Ltmp321              #   Call between .Ltmp321 and .Ltmp322
	.uleb128 .Ltmp323-.Lfunc_begin6         #     jumps to .Ltmp323
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp322-.Lfunc_begin6         # >> Call Site 95 <<
	.uleb128 .Ltmp324-.Ltmp322              #   Call between .Ltmp322 and .Ltmp324
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp324-.Lfunc_begin6         # >> Call Site 96 <<
	.uleb128 .Ltmp325-.Ltmp324              #   Call between .Ltmp324 and .Ltmp325
	.uleb128 .Ltmp326-.Lfunc_begin6         #     jumps to .Ltmp326
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp327-.Lfunc_begin6         # >> Call Site 97 <<
	.uleb128 .Ltmp328-.Ltmp327              #   Call between .Ltmp327 and .Ltmp328
	.uleb128 .Ltmp329-.Lfunc_begin6         #     jumps to .Ltmp329
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp328-.Lfunc_begin6         # >> Call Site 98 <<
	.uleb128 .Ltmp330-.Ltmp328              #   Call between .Ltmp328 and .Ltmp330
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp330-.Lfunc_begin6         # >> Call Site 99 <<
	.uleb128 .Ltmp331-.Ltmp330              #   Call between .Ltmp330 and .Ltmp331
	.uleb128 .Ltmp332-.Lfunc_begin6         #     jumps to .Ltmp332
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp331-.Lfunc_begin6         # >> Call Site 100 <<
	.uleb128 .Ltmp333-.Ltmp331              #   Call between .Ltmp331 and .Ltmp333
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp333-.Lfunc_begin6         # >> Call Site 101 <<
	.uleb128 .Ltmp334-.Ltmp333              #   Call between .Ltmp333 and .Ltmp334
	.uleb128 .Ltmp335-.Lfunc_begin6         #     jumps to .Ltmp335
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp336-.Lfunc_begin6         # >> Call Site 102 <<
	.uleb128 .Ltmp337-.Ltmp336              #   Call between .Ltmp336 and .Ltmp337
	.uleb128 .Ltmp338-.Lfunc_begin6         #     jumps to .Ltmp338
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp337-.Lfunc_begin6         # >> Call Site 103 <<
	.uleb128 .Ltmp339-.Ltmp337              #   Call between .Ltmp337 and .Ltmp339
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp339-.Lfunc_begin6         # >> Call Site 104 <<
	.uleb128 .Ltmp340-.Ltmp339              #   Call between .Ltmp339 and .Ltmp340
	.uleb128 .Ltmp341-.Lfunc_begin6         #     jumps to .Ltmp341
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp342-.Lfunc_begin6         # >> Call Site 105 <<
	.uleb128 .Ltmp343-.Ltmp342              #   Call between .Ltmp342 and .Ltmp343
	.uleb128 .Ltmp344-.Lfunc_begin6         #     jumps to .Ltmp344
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp343-.Lfunc_begin6         # >> Call Site 106 <<
	.uleb128 .Ltmp345-.Ltmp343              #   Call between .Ltmp343 and .Ltmp345
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp345-.Lfunc_begin6         # >> Call Site 107 <<
	.uleb128 .Ltmp346-.Ltmp345              #   Call between .Ltmp345 and .Ltmp346
	.uleb128 .Ltmp347-.Lfunc_begin6         #     jumps to .Ltmp347
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp346-.Lfunc_begin6         # >> Call Site 108 <<
	.uleb128 .Ltmp348-.Ltmp346              #   Call between .Ltmp346 and .Ltmp348
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp348-.Lfunc_begin6         # >> Call Site 109 <<
	.uleb128 .Ltmp349-.Ltmp348              #   Call between .Ltmp348 and .Ltmp349
	.uleb128 .Ltmp350-.Lfunc_begin6         #     jumps to .Ltmp350
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp351-.Lfunc_begin6         # >> Call Site 110 <<
	.uleb128 .Ltmp352-.Ltmp351              #   Call between .Ltmp351 and .Ltmp352
	.uleb128 .Ltmp353-.Lfunc_begin6         #     jumps to .Ltmp353
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp352-.Lfunc_begin6         # >> Call Site 111 <<
	.uleb128 .Ltmp354-.Ltmp352              #   Call between .Ltmp352 and .Ltmp354
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp354-.Lfunc_begin6         # >> Call Site 112 <<
	.uleb128 .Ltmp355-.Ltmp354              #   Call between .Ltmp354 and .Ltmp355
	.uleb128 .Ltmp356-.Lfunc_begin6         #     jumps to .Ltmp356
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp357-.Lfunc_begin6         # >> Call Site 113 <<
	.uleb128 .Ltmp358-.Ltmp357              #   Call between .Ltmp357 and .Ltmp358
	.uleb128 .Ltmp359-.Lfunc_begin6         #     jumps to .Ltmp359
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp358-.Lfunc_begin6         # >> Call Site 114 <<
	.uleb128 .Ltmp360-.Ltmp358              #   Call between .Ltmp358 and .Ltmp360
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp360-.Lfunc_begin6         # >> Call Site 115 <<
	.uleb128 .Ltmp361-.Ltmp360              #   Call between .Ltmp360 and .Ltmp361
	.uleb128 .Ltmp362-.Lfunc_begin6         #     jumps to .Ltmp362
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp361-.Lfunc_begin6         # >> Call Site 116 <<
	.uleb128 .Ltmp363-.Ltmp361              #   Call between .Ltmp361 and .Ltmp363
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp363-.Lfunc_begin6         # >> Call Site 117 <<
	.uleb128 .Ltmp364-.Ltmp363              #   Call between .Ltmp363 and .Ltmp364
	.uleb128 .Ltmp365-.Lfunc_begin6         #     jumps to .Ltmp365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp366-.Lfunc_begin6         # >> Call Site 118 <<
	.uleb128 .Ltmp367-.Ltmp366              #   Call between .Ltmp366 and .Ltmp367
	.uleb128 .Ltmp368-.Lfunc_begin6         #     jumps to .Ltmp368
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp367-.Lfunc_begin6         # >> Call Site 119 <<
	.uleb128 .Ltmp369-.Ltmp367              #   Call between .Ltmp367 and .Ltmp369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp369-.Lfunc_begin6         # >> Call Site 120 <<
	.uleb128 .Ltmp370-.Ltmp369              #   Call between .Ltmp369 and .Ltmp370
	.uleb128 .Ltmp371-.Lfunc_begin6         #     jumps to .Ltmp371
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp372-.Lfunc_begin6         # >> Call Site 121 <<
	.uleb128 .Ltmp373-.Ltmp372              #   Call between .Ltmp372 and .Ltmp373
	.uleb128 .Ltmp374-.Lfunc_begin6         #     jumps to .Ltmp374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp373-.Lfunc_begin6         # >> Call Site 122 <<
	.uleb128 .Ltmp375-.Ltmp373              #   Call between .Ltmp373 and .Ltmp375
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp375-.Lfunc_begin6         # >> Call Site 123 <<
	.uleb128 .Ltmp376-.Ltmp375              #   Call between .Ltmp375 and .Ltmp376
	.uleb128 .Ltmp377-.Lfunc_begin6         #     jumps to .Ltmp377
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp376-.Lfunc_begin6         # >> Call Site 124 <<
	.uleb128 .Ltmp378-.Ltmp376              #   Call between .Ltmp376 and .Ltmp378
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp378-.Lfunc_begin6         # >> Call Site 125 <<
	.uleb128 .Ltmp379-.Ltmp378              #   Call between .Ltmp378 and .Ltmp379
	.uleb128 .Ltmp380-.Lfunc_begin6         #     jumps to .Ltmp380
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp381-.Lfunc_begin6         # >> Call Site 126 <<
	.uleb128 .Ltmp382-.Ltmp381              #   Call between .Ltmp381 and .Ltmp382
	.uleb128 .Ltmp383-.Lfunc_begin6         #     jumps to .Ltmp383
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp382-.Lfunc_begin6         # >> Call Site 127 <<
	.uleb128 .Ltmp384-.Ltmp382              #   Call between .Ltmp382 and .Ltmp384
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp384-.Lfunc_begin6         # >> Call Site 128 <<
	.uleb128 .Ltmp385-.Ltmp384              #   Call between .Ltmp384 and .Ltmp385
	.uleb128 .Ltmp386-.Lfunc_begin6         #     jumps to .Ltmp386
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp385-.Lfunc_begin6         # >> Call Site 129 <<
	.uleb128 .Ltmp387-.Ltmp385              #   Call between .Ltmp385 and .Ltmp387
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp387-.Lfunc_begin6         # >> Call Site 130 <<
	.uleb128 .Ltmp388-.Ltmp387              #   Call between .Ltmp387 and .Ltmp388
	.uleb128 .Ltmp389-.Lfunc_begin6         #     jumps to .Ltmp389
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp388-.Lfunc_begin6         # >> Call Site 131 <<
	.uleb128 .Ltmp390-.Ltmp388              #   Call between .Ltmp388 and .Ltmp390
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp390-.Lfunc_begin6         # >> Call Site 132 <<
	.uleb128 .Ltmp391-.Ltmp390              #   Call between .Ltmp390 and .Ltmp391
	.uleb128 .Ltmp392-.Lfunc_begin6         #     jumps to .Ltmp392
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp393-.Lfunc_begin6         # >> Call Site 133 <<
	.uleb128 .Ltmp394-.Ltmp393              #   Call between .Ltmp393 and .Ltmp394
	.uleb128 .Ltmp395-.Lfunc_begin6         #     jumps to .Ltmp395
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp394-.Lfunc_begin6         # >> Call Site 134 <<
	.uleb128 .Ltmp396-.Ltmp394              #   Call between .Ltmp394 and .Ltmp396
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp396-.Lfunc_begin6         # >> Call Site 135 <<
	.uleb128 .Ltmp397-.Ltmp396              #   Call between .Ltmp396 and .Ltmp397
	.uleb128 .Ltmp398-.Lfunc_begin6         #     jumps to .Ltmp398
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp399-.Lfunc_begin6         # >> Call Site 136 <<
	.uleb128 .Ltmp400-.Ltmp399              #   Call between .Ltmp399 and .Ltmp400
	.uleb128 .Ltmp401-.Lfunc_begin6         #     jumps to .Ltmp401
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp400-.Lfunc_begin6         # >> Call Site 137 <<
	.uleb128 .Ltmp402-.Ltmp400              #   Call between .Ltmp400 and .Ltmp402
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp402-.Lfunc_begin6         # >> Call Site 138 <<
	.uleb128 .Ltmp403-.Ltmp402              #   Call between .Ltmp402 and .Ltmp403
	.uleb128 .Ltmp404-.Lfunc_begin6         #     jumps to .Ltmp404
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp403-.Lfunc_begin6         # >> Call Site 139 <<
	.uleb128 .Ltmp405-.Ltmp403              #   Call between .Ltmp403 and .Ltmp405
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp405-.Lfunc_begin6         # >> Call Site 140 <<
	.uleb128 .Ltmp406-.Ltmp405              #   Call between .Ltmp405 and .Ltmp406
	.uleb128 .Ltmp407-.Lfunc_begin6         #     jumps to .Ltmp407
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp408-.Lfunc_begin6         # >> Call Site 141 <<
	.uleb128 .Ltmp409-.Ltmp408              #   Call between .Ltmp408 and .Ltmp409
	.uleb128 .Ltmp410-.Lfunc_begin6         #     jumps to .Ltmp410
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp409-.Lfunc_begin6         # >> Call Site 142 <<
	.uleb128 .Ltmp411-.Ltmp409              #   Call between .Ltmp409 and .Ltmp411
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp411-.Lfunc_begin6         # >> Call Site 143 <<
	.uleb128 .Ltmp412-.Ltmp411              #   Call between .Ltmp411 and .Ltmp412
	.uleb128 .Ltmp413-.Lfunc_begin6         #     jumps to .Ltmp413
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp414-.Lfunc_begin6         # >> Call Site 144 <<
	.uleb128 .Ltmp415-.Ltmp414              #   Call between .Ltmp414 and .Ltmp415
	.uleb128 .Ltmp416-.Lfunc_begin6         #     jumps to .Ltmp416
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp415-.Lfunc_begin6         # >> Call Site 145 <<
	.uleb128 .Ltmp417-.Ltmp415              #   Call between .Ltmp415 and .Ltmp417
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp417-.Lfunc_begin6         # >> Call Site 146 <<
	.uleb128 .Ltmp418-.Ltmp417              #   Call between .Ltmp417 and .Ltmp418
	.uleb128 .Ltmp419-.Lfunc_begin6         #     jumps to .Ltmp419
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp418-.Lfunc_begin6         # >> Call Site 147 <<
	.uleb128 .Ltmp420-.Ltmp418              #   Call between .Ltmp418 and .Ltmp420
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp420-.Lfunc_begin6         # >> Call Site 148 <<
	.uleb128 .Ltmp421-.Ltmp420              #   Call between .Ltmp420 and .Ltmp421
	.uleb128 .Ltmp422-.Lfunc_begin6         #     jumps to .Ltmp422
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp423-.Lfunc_begin6         # >> Call Site 149 <<
	.uleb128 .Ltmp424-.Ltmp423              #   Call between .Ltmp423 and .Ltmp424
	.uleb128 .Ltmp425-.Lfunc_begin6         #     jumps to .Ltmp425
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp424-.Lfunc_begin6         # >> Call Site 150 <<
	.uleb128 .Ltmp426-.Ltmp424              #   Call between .Ltmp424 and .Ltmp426
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp426-.Lfunc_begin6         # >> Call Site 151 <<
	.uleb128 .Ltmp427-.Ltmp426              #   Call between .Ltmp426 and .Ltmp427
	.uleb128 .Ltmp428-.Lfunc_begin6         #     jumps to .Ltmp428
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp429-.Lfunc_begin6         # >> Call Site 152 <<
	.uleb128 .Ltmp430-.Ltmp429              #   Call between .Ltmp429 and .Ltmp430
	.uleb128 .Ltmp431-.Lfunc_begin6         #     jumps to .Ltmp431
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp430-.Lfunc_begin6         # >> Call Site 153 <<
	.uleb128 .Ltmp432-.Ltmp430              #   Call between .Ltmp430 and .Ltmp432
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp432-.Lfunc_begin6         # >> Call Site 154 <<
	.uleb128 .Ltmp433-.Ltmp432              #   Call between .Ltmp432 and .Ltmp433
	.uleb128 .Ltmp434-.Lfunc_begin6         #     jumps to .Ltmp434
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp433-.Lfunc_begin6         # >> Call Site 155 <<
	.uleb128 .Ltmp435-.Ltmp433              #   Call between .Ltmp433 and .Ltmp435
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp435-.Lfunc_begin6         # >> Call Site 156 <<
	.uleb128 .Ltmp436-.Ltmp435              #   Call between .Ltmp435 and .Ltmp436
	.uleb128 .Ltmp437-.Lfunc_begin6         #     jumps to .Ltmp437
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp438-.Lfunc_begin6         # >> Call Site 157 <<
	.uleb128 .Ltmp439-.Ltmp438              #   Call between .Ltmp438 and .Ltmp439
	.uleb128 .Ltmp440-.Lfunc_begin6         #     jumps to .Ltmp440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp439-.Lfunc_begin6         # >> Call Site 158 <<
	.uleb128 .Ltmp441-.Ltmp439              #   Call between .Ltmp439 and .Ltmp441
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp441-.Lfunc_begin6         # >> Call Site 159 <<
	.uleb128 .Ltmp442-.Ltmp441              #   Call between .Ltmp441 and .Ltmp442
	.uleb128 .Ltmp443-.Lfunc_begin6         #     jumps to .Ltmp443
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp444-.Lfunc_begin6         # >> Call Site 160 <<
	.uleb128 .Ltmp445-.Ltmp444              #   Call between .Ltmp444 and .Ltmp445
	.uleb128 .Ltmp446-.Lfunc_begin6         #     jumps to .Ltmp446
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp445-.Lfunc_begin6         # >> Call Site 161 <<
	.uleb128 .Ltmp447-.Ltmp445              #   Call between .Ltmp445 and .Ltmp447
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp447-.Lfunc_begin6         # >> Call Site 162 <<
	.uleb128 .Ltmp448-.Ltmp447              #   Call between .Ltmp447 and .Ltmp448
	.uleb128 .Ltmp449-.Lfunc_begin6         #     jumps to .Ltmp449
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp448-.Lfunc_begin6         # >> Call Site 163 <<
	.uleb128 .Ltmp450-.Ltmp448              #   Call between .Ltmp448 and .Ltmp450
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp450-.Lfunc_begin6         # >> Call Site 164 <<
	.uleb128 .Ltmp451-.Ltmp450              #   Call between .Ltmp450 and .Ltmp451
	.uleb128 .Ltmp452-.Lfunc_begin6         #     jumps to .Ltmp452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp453-.Lfunc_begin6         # >> Call Site 165 <<
	.uleb128 .Ltmp454-.Ltmp453              #   Call between .Ltmp453 and .Ltmp454
	.uleb128 .Ltmp455-.Lfunc_begin6         #     jumps to .Ltmp455
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp454-.Lfunc_begin6         # >> Call Site 166 <<
	.uleb128 .Ltmp456-.Ltmp454              #   Call between .Ltmp454 and .Ltmp456
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp456-.Lfunc_begin6         # >> Call Site 167 <<
	.uleb128 .Ltmp457-.Ltmp456              #   Call between .Ltmp456 and .Ltmp457
	.uleb128 .Ltmp458-.Lfunc_begin6         #     jumps to .Ltmp458
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp459-.Lfunc_begin6         # >> Call Site 168 <<
	.uleb128 .Ltmp460-.Ltmp459              #   Call between .Ltmp459 and .Ltmp460
	.uleb128 .Ltmp461-.Lfunc_begin6         #     jumps to .Ltmp461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp460-.Lfunc_begin6         # >> Call Site 169 <<
	.uleb128 .Ltmp462-.Ltmp460              #   Call between .Ltmp460 and .Ltmp462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp462-.Lfunc_begin6         # >> Call Site 170 <<
	.uleb128 .Ltmp463-.Ltmp462              #   Call between .Ltmp462 and .Ltmp463
	.uleb128 .Ltmp464-.Lfunc_begin6         #     jumps to .Ltmp464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp463-.Lfunc_begin6         # >> Call Site 171 <<
	.uleb128 .Ltmp465-.Ltmp463              #   Call between .Ltmp463 and .Ltmp465
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp465-.Lfunc_begin6         # >> Call Site 172 <<
	.uleb128 .Ltmp466-.Ltmp465              #   Call between .Ltmp465 and .Ltmp466
	.uleb128 .Ltmp467-.Lfunc_begin6         #     jumps to .Ltmp467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp468-.Lfunc_begin6         # >> Call Site 173 <<
	.uleb128 .Ltmp469-.Ltmp468              #   Call between .Ltmp468 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin6         #     jumps to .Ltmp470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp469-.Lfunc_begin6         # >> Call Site 174 <<
	.uleb128 .Ltmp471-.Ltmp469              #   Call between .Ltmp469 and .Ltmp471
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp471-.Lfunc_begin6         # >> Call Site 175 <<
	.uleb128 .Ltmp472-.Ltmp471              #   Call between .Ltmp471 and .Ltmp472
	.uleb128 .Ltmp473-.Lfunc_begin6         #     jumps to .Ltmp473
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp472-.Lfunc_begin6         # >> Call Site 176 <<
	.uleb128 .Ltmp474-.Ltmp472              #   Call between .Ltmp472 and .Ltmp474
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp474-.Lfunc_begin6         # >> Call Site 177 <<
	.uleb128 .Ltmp475-.Ltmp474              #   Call between .Ltmp474 and .Ltmp475
	.uleb128 .Ltmp476-.Lfunc_begin6         #     jumps to .Ltmp476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp475-.Lfunc_begin6         # >> Call Site 178 <<
	.uleb128 .Ltmp477-.Ltmp475              #   Call between .Ltmp475 and .Ltmp477
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp477-.Lfunc_begin6         # >> Call Site 179 <<
	.uleb128 .Ltmp478-.Ltmp477              #   Call between .Ltmp477 and .Ltmp478
	.uleb128 .Ltmp479-.Lfunc_begin6         #     jumps to .Ltmp479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp480-.Lfunc_begin6         # >> Call Site 180 <<
	.uleb128 .Ltmp481-.Ltmp480              #   Call between .Ltmp480 and .Ltmp481
	.uleb128 .Ltmp482-.Lfunc_begin6         #     jumps to .Ltmp482
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp481-.Lfunc_begin6         # >> Call Site 181 <<
	.uleb128 .Ltmp483-.Ltmp481              #   Call between .Ltmp481 and .Ltmp483
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp483-.Lfunc_begin6         # >> Call Site 182 <<
	.uleb128 .Ltmp484-.Ltmp483              #   Call between .Ltmp483 and .Ltmp484
	.uleb128 .Ltmp485-.Lfunc_begin6         #     jumps to .Ltmp485
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp486-.Lfunc_begin6         # >> Call Site 183 <<
	.uleb128 .Ltmp487-.Ltmp486              #   Call between .Ltmp486 and .Ltmp487
	.uleb128 .Ltmp488-.Lfunc_begin6         #     jumps to .Ltmp488
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp487-.Lfunc_begin6         # >> Call Site 184 <<
	.uleb128 .Ltmp489-.Ltmp487              #   Call between .Ltmp487 and .Ltmp489
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp489-.Lfunc_begin6         # >> Call Site 185 <<
	.uleb128 .Ltmp490-.Ltmp489              #   Call between .Ltmp489 and .Ltmp490
	.uleb128 .Ltmp491-.Lfunc_begin6         #     jumps to .Ltmp491
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp490-.Lfunc_begin6         # >> Call Site 186 <<
	.uleb128 .Ltmp492-.Ltmp490              #   Call between .Ltmp490 and .Ltmp492
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp492-.Lfunc_begin6         # >> Call Site 187 <<
	.uleb128 .Ltmp493-.Ltmp492              #   Call between .Ltmp492 and .Ltmp493
	.uleb128 .Ltmp494-.Lfunc_begin6         #     jumps to .Ltmp494
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp495-.Lfunc_begin6         # >> Call Site 188 <<
	.uleb128 .Ltmp496-.Ltmp495              #   Call between .Ltmp495 and .Ltmp496
	.uleb128 .Ltmp497-.Lfunc_begin6         #     jumps to .Ltmp497
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp496-.Lfunc_begin6         # >> Call Site 189 <<
	.uleb128 .Ltmp498-.Ltmp496              #   Call between .Ltmp496 and .Ltmp498
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp498-.Lfunc_begin6         # >> Call Site 190 <<
	.uleb128 .Ltmp499-.Ltmp498              #   Call between .Ltmp498 and .Ltmp499
	.uleb128 .Ltmp500-.Lfunc_begin6         #     jumps to .Ltmp500
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp501-.Lfunc_begin6         # >> Call Site 191 <<
	.uleb128 .Ltmp502-.Ltmp501              #   Call between .Ltmp501 and .Ltmp502
	.uleb128 .Ltmp503-.Lfunc_begin6         #     jumps to .Ltmp503
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp502-.Lfunc_begin6         # >> Call Site 192 <<
	.uleb128 .Ltmp504-.Ltmp502              #   Call between .Ltmp502 and .Ltmp504
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp504-.Lfunc_begin6         # >> Call Site 193 <<
	.uleb128 .Ltmp505-.Ltmp504              #   Call between .Ltmp504 and .Ltmp505
	.uleb128 .Ltmp506-.Lfunc_begin6         #     jumps to .Ltmp506
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp505-.Lfunc_begin6         # >> Call Site 194 <<
	.uleb128 .Ltmp507-.Ltmp505              #   Call between .Ltmp505 and .Ltmp507
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp507-.Lfunc_begin6         # >> Call Site 195 <<
	.uleb128 .Ltmp508-.Ltmp507              #   Call between .Ltmp507 and .Ltmp508
	.uleb128 .Ltmp509-.Lfunc_begin6         #     jumps to .Ltmp509
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp510-.Lfunc_begin6         # >> Call Site 196 <<
	.uleb128 .Ltmp511-.Ltmp510              #   Call between .Ltmp510 and .Ltmp511
	.uleb128 .Ltmp512-.Lfunc_begin6         #     jumps to .Ltmp512
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp511-.Lfunc_begin6         # >> Call Site 197 <<
	.uleb128 .Ltmp513-.Ltmp511              #   Call between .Ltmp511 and .Ltmp513
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp513-.Lfunc_begin6         # >> Call Site 198 <<
	.uleb128 .Ltmp514-.Ltmp513              #   Call between .Ltmp513 and .Ltmp514
	.uleb128 .Ltmp515-.Lfunc_begin6         #     jumps to .Ltmp515
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp516-.Lfunc_begin6         # >> Call Site 199 <<
	.uleb128 .Ltmp517-.Ltmp516              #   Call between .Ltmp516 and .Ltmp517
	.uleb128 .Ltmp518-.Lfunc_begin6         #     jumps to .Ltmp518
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp517-.Lfunc_begin6         # >> Call Site 200 <<
	.uleb128 .Ltmp519-.Ltmp517              #   Call between .Ltmp517 and .Ltmp519
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp519-.Lfunc_begin6         # >> Call Site 201 <<
	.uleb128 .Ltmp520-.Ltmp519              #   Call between .Ltmp519 and .Ltmp520
	.uleb128 .Ltmp521-.Lfunc_begin6         #     jumps to .Ltmp521
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp520-.Lfunc_begin6         # >> Call Site 202 <<
	.uleb128 .Ltmp522-.Ltmp520              #   Call between .Ltmp520 and .Ltmp522
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp522-.Lfunc_begin6         # >> Call Site 203 <<
	.uleb128 .Ltmp523-.Ltmp522              #   Call between .Ltmp522 and .Ltmp523
	.uleb128 .Ltmp524-.Lfunc_begin6         #     jumps to .Ltmp524
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp525-.Lfunc_begin6         # >> Call Site 204 <<
	.uleb128 .Ltmp526-.Ltmp525              #   Call between .Ltmp525 and .Ltmp526
	.uleb128 .Ltmp527-.Lfunc_begin6         #     jumps to .Ltmp527
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp526-.Lfunc_begin6         # >> Call Site 205 <<
	.uleb128 .Ltmp528-.Ltmp526              #   Call between .Ltmp526 and .Ltmp528
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp528-.Lfunc_begin6         # >> Call Site 206 <<
	.uleb128 .Ltmp529-.Ltmp528              #   Call between .Ltmp528 and .Ltmp529
	.uleb128 .Ltmp530-.Lfunc_begin6         #     jumps to .Ltmp530
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp531-.Lfunc_begin6         # >> Call Site 207 <<
	.uleb128 .Ltmp532-.Ltmp531              #   Call between .Ltmp531 and .Ltmp532
	.uleb128 .Ltmp533-.Lfunc_begin6         #     jumps to .Ltmp533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp532-.Lfunc_begin6         # >> Call Site 208 <<
	.uleb128 .Ltmp534-.Ltmp532              #   Call between .Ltmp532 and .Ltmp534
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp534-.Lfunc_begin6         # >> Call Site 209 <<
	.uleb128 .Ltmp535-.Ltmp534              #   Call between .Ltmp534 and .Ltmp535
	.uleb128 .Ltmp536-.Lfunc_begin6         #     jumps to .Ltmp536
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp535-.Lfunc_begin6         # >> Call Site 210 <<
	.uleb128 .Ltmp537-.Ltmp535              #   Call between .Ltmp535 and .Ltmp537
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp537-.Lfunc_begin6         # >> Call Site 211 <<
	.uleb128 .Ltmp538-.Ltmp537              #   Call between .Ltmp537 and .Ltmp538
	.uleb128 .Ltmp539-.Lfunc_begin6         #     jumps to .Ltmp539
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp540-.Lfunc_begin6         # >> Call Site 212 <<
	.uleb128 .Ltmp541-.Ltmp540              #   Call between .Ltmp540 and .Ltmp541
	.uleb128 .Ltmp542-.Lfunc_begin6         #     jumps to .Ltmp542
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp541-.Lfunc_begin6         # >> Call Site 213 <<
	.uleb128 .Ltmp543-.Ltmp541              #   Call between .Ltmp541 and .Ltmp543
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp543-.Lfunc_begin6         # >> Call Site 214 <<
	.uleb128 .Ltmp544-.Ltmp543              #   Call between .Ltmp543 and .Ltmp544
	.uleb128 .Ltmp545-.Lfunc_begin6         #     jumps to .Ltmp545
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp546-.Lfunc_begin6         # >> Call Site 215 <<
	.uleb128 .Ltmp547-.Ltmp546              #   Call between .Ltmp546 and .Ltmp547
	.uleb128 .Ltmp548-.Lfunc_begin6         #     jumps to .Ltmp548
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp547-.Lfunc_begin6         # >> Call Site 216 <<
	.uleb128 .Ltmp549-.Ltmp547              #   Call between .Ltmp547 and .Ltmp549
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp549-.Lfunc_begin6         # >> Call Site 217 <<
	.uleb128 .Ltmp550-.Ltmp549              #   Call between .Ltmp549 and .Ltmp550
	.uleb128 .Ltmp551-.Lfunc_begin6         #     jumps to .Ltmp551
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp550-.Lfunc_begin6         # >> Call Site 218 <<
	.uleb128 .Ltmp552-.Ltmp550              #   Call between .Ltmp550 and .Ltmp552
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp552-.Lfunc_begin6         # >> Call Site 219 <<
	.uleb128 .Ltmp553-.Ltmp552              #   Call between .Ltmp552 and .Ltmp553
	.uleb128 .Ltmp554-.Lfunc_begin6         #     jumps to .Ltmp554
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp555-.Lfunc_begin6         # >> Call Site 220 <<
	.uleb128 .Ltmp556-.Ltmp555              #   Call between .Ltmp555 and .Ltmp556
	.uleb128 .Ltmp557-.Lfunc_begin6         #     jumps to .Ltmp557
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp556-.Lfunc_begin6         # >> Call Site 221 <<
	.uleb128 .Ltmp558-.Ltmp556              #   Call between .Ltmp556 and .Ltmp558
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp558-.Lfunc_begin6         # >> Call Site 222 <<
	.uleb128 .Ltmp559-.Ltmp558              #   Call between .Ltmp558 and .Ltmp559
	.uleb128 .Ltmp560-.Lfunc_begin6         #     jumps to .Ltmp560
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp561-.Lfunc_begin6         # >> Call Site 223 <<
	.uleb128 .Ltmp562-.Ltmp561              #   Call between .Ltmp561 and .Ltmp562
	.uleb128 .Ltmp563-.Lfunc_begin6         #     jumps to .Ltmp563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp562-.Lfunc_begin6         # >> Call Site 224 <<
	.uleb128 .Ltmp564-.Ltmp562              #   Call between .Ltmp562 and .Ltmp564
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp564-.Lfunc_begin6         # >> Call Site 225 <<
	.uleb128 .Ltmp565-.Ltmp564              #   Call between .Ltmp564 and .Ltmp565
	.uleb128 .Ltmp566-.Lfunc_begin6         #     jumps to .Ltmp566
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp565-.Lfunc_begin6         # >> Call Site 226 <<
	.uleb128 .Ltmp567-.Ltmp565              #   Call between .Ltmp565 and .Ltmp567
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp567-.Lfunc_begin6         # >> Call Site 227 <<
	.uleb128 .Ltmp568-.Ltmp567              #   Call between .Ltmp567 and .Ltmp568
	.uleb128 .Ltmp569-.Lfunc_begin6         #     jumps to .Ltmp569
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp570-.Lfunc_begin6         # >> Call Site 228 <<
	.uleb128 .Ltmp571-.Ltmp570              #   Call between .Ltmp570 and .Ltmp571
	.uleb128 .Ltmp572-.Lfunc_begin6         #     jumps to .Ltmp572
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp571-.Lfunc_begin6         # >> Call Site 229 <<
	.uleb128 .Ltmp573-.Ltmp571              #   Call between .Ltmp571 and .Ltmp573
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp573-.Lfunc_begin6         # >> Call Site 230 <<
	.uleb128 .Ltmp574-.Ltmp573              #   Call between .Ltmp573 and .Ltmp574
	.uleb128 .Ltmp575-.Lfunc_begin6         #     jumps to .Ltmp575
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp576-.Lfunc_begin6         # >> Call Site 231 <<
	.uleb128 .Ltmp577-.Ltmp576              #   Call between .Ltmp576 and .Ltmp577
	.uleb128 .Ltmp578-.Lfunc_begin6         #     jumps to .Ltmp578
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp577-.Lfunc_begin6         # >> Call Site 232 <<
	.uleb128 .Ltmp579-.Ltmp577              #   Call between .Ltmp577 and .Ltmp579
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp579-.Lfunc_begin6         # >> Call Site 233 <<
	.uleb128 .Ltmp580-.Ltmp579              #   Call between .Ltmp579 and .Ltmp580
	.uleb128 .Ltmp581-.Lfunc_begin6         #     jumps to .Ltmp581
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp580-.Lfunc_begin6         # >> Call Site 234 <<
	.uleb128 .Ltmp582-.Ltmp580              #   Call between .Ltmp580 and .Ltmp582
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp582-.Lfunc_begin6         # >> Call Site 235 <<
	.uleb128 .Ltmp583-.Ltmp582              #   Call between .Ltmp582 and .Ltmp583
	.uleb128 .Ltmp584-.Lfunc_begin6         #     jumps to .Ltmp584
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp585-.Lfunc_begin6         # >> Call Site 236 <<
	.uleb128 .Ltmp586-.Ltmp585              #   Call between .Ltmp585 and .Ltmp586
	.uleb128 .Ltmp587-.Lfunc_begin6         #     jumps to .Ltmp587
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp586-.Lfunc_begin6         # >> Call Site 237 <<
	.uleb128 .Ltmp588-.Ltmp586              #   Call between .Ltmp586 and .Ltmp588
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp588-.Lfunc_begin6         # >> Call Site 238 <<
	.uleb128 .Ltmp589-.Ltmp588              #   Call between .Ltmp588 and .Ltmp589
	.uleb128 .Ltmp590-.Lfunc_begin6         #     jumps to .Ltmp590
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp591-.Lfunc_begin6         # >> Call Site 239 <<
	.uleb128 .Ltmp592-.Ltmp591              #   Call between .Ltmp591 and .Ltmp592
	.uleb128 .Ltmp593-.Lfunc_begin6         #     jumps to .Ltmp593
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp592-.Lfunc_begin6         # >> Call Site 240 <<
	.uleb128 .Ltmp594-.Ltmp592              #   Call between .Ltmp592 and .Ltmp594
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp594-.Lfunc_begin6         # >> Call Site 241 <<
	.uleb128 .Ltmp595-.Ltmp594              #   Call between .Ltmp594 and .Ltmp595
	.uleb128 .Ltmp596-.Lfunc_begin6         #     jumps to .Ltmp596
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp595-.Lfunc_begin6         # >> Call Site 242 <<
	.uleb128 .Ltmp597-.Ltmp595              #   Call between .Ltmp595 and .Ltmp597
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp597-.Lfunc_begin6         # >> Call Site 243 <<
	.uleb128 .Ltmp598-.Ltmp597              #   Call between .Ltmp597 and .Ltmp598
	.uleb128 .Ltmp599-.Lfunc_begin6         #     jumps to .Ltmp599
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp600-.Lfunc_begin6         # >> Call Site 244 <<
	.uleb128 .Ltmp601-.Ltmp600              #   Call between .Ltmp600 and .Ltmp601
	.uleb128 .Ltmp602-.Lfunc_begin6         #     jumps to .Ltmp602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp601-.Lfunc_begin6         # >> Call Site 245 <<
	.uleb128 .Ltmp603-.Ltmp601              #   Call between .Ltmp601 and .Ltmp603
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp603-.Lfunc_begin6         # >> Call Site 246 <<
	.uleb128 .Ltmp604-.Ltmp603              #   Call between .Ltmp603 and .Ltmp604
	.uleb128 .Ltmp605-.Lfunc_begin6         #     jumps to .Ltmp605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp606-.Lfunc_begin6         # >> Call Site 247 <<
	.uleb128 .Ltmp607-.Ltmp606              #   Call between .Ltmp606 and .Ltmp607
	.uleb128 .Ltmp608-.Lfunc_begin6         #     jumps to .Ltmp608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp607-.Lfunc_begin6         # >> Call Site 248 <<
	.uleb128 .Ltmp609-.Ltmp607              #   Call between .Ltmp607 and .Ltmp609
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp609-.Lfunc_begin6         # >> Call Site 249 <<
	.uleb128 .Ltmp610-.Ltmp609              #   Call between .Ltmp609 and .Ltmp610
	.uleb128 .Ltmp611-.Lfunc_begin6         #     jumps to .Ltmp611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp610-.Lfunc_begin6         # >> Call Site 250 <<
	.uleb128 .Ltmp612-.Ltmp610              #   Call between .Ltmp610 and .Ltmp612
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp612-.Lfunc_begin6         # >> Call Site 251 <<
	.uleb128 .Ltmp613-.Ltmp612              #   Call between .Ltmp612 and .Ltmp613
	.uleb128 .Ltmp614-.Lfunc_begin6         #     jumps to .Ltmp614
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp615-.Lfunc_begin6         # >> Call Site 252 <<
	.uleb128 .Ltmp616-.Ltmp615              #   Call between .Ltmp615 and .Ltmp616
	.uleb128 .Ltmp617-.Lfunc_begin6         #     jumps to .Ltmp617
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp616-.Lfunc_begin6         # >> Call Site 253 <<
	.uleb128 .Ltmp618-.Ltmp616              #   Call between .Ltmp616 and .Ltmp618
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp618-.Lfunc_begin6         # >> Call Site 254 <<
	.uleb128 .Ltmp619-.Ltmp618              #   Call between .Ltmp618 and .Ltmp619
	.uleb128 .Ltmp620-.Lfunc_begin6         #     jumps to .Ltmp620
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp621-.Lfunc_begin6         # >> Call Site 255 <<
	.uleb128 .Ltmp622-.Ltmp621              #   Call between .Ltmp621 and .Ltmp622
	.uleb128 .Ltmp623-.Lfunc_begin6         #     jumps to .Ltmp623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp622-.Lfunc_begin6         # >> Call Site 256 <<
	.uleb128 .Ltmp624-.Ltmp622              #   Call between .Ltmp622 and .Ltmp624
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp624-.Lfunc_begin6         # >> Call Site 257 <<
	.uleb128 .Ltmp625-.Ltmp624              #   Call between .Ltmp624 and .Ltmp625
	.uleb128 .Ltmp626-.Lfunc_begin6         #     jumps to .Ltmp626
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp625-.Lfunc_begin6         # >> Call Site 258 <<
	.uleb128 .Ltmp627-.Ltmp625              #   Call between .Ltmp625 and .Ltmp627
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp627-.Lfunc_begin6         # >> Call Site 259 <<
	.uleb128 .Ltmp628-.Ltmp627              #   Call between .Ltmp627 and .Ltmp628
	.uleb128 .Ltmp629-.Lfunc_begin6         #     jumps to .Ltmp629
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp630-.Lfunc_begin6         # >> Call Site 260 <<
	.uleb128 .Ltmp631-.Ltmp630              #   Call between .Ltmp630 and .Ltmp631
	.uleb128 .Ltmp632-.Lfunc_begin6         #     jumps to .Ltmp632
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp631-.Lfunc_begin6         # >> Call Site 261 <<
	.uleb128 .Ltmp633-.Ltmp631              #   Call between .Ltmp631 and .Ltmp633
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp633-.Lfunc_begin6         # >> Call Site 262 <<
	.uleb128 .Ltmp634-.Ltmp633              #   Call between .Ltmp633 and .Ltmp634
	.uleb128 .Ltmp635-.Lfunc_begin6         #     jumps to .Ltmp635
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp636-.Lfunc_begin6         # >> Call Site 263 <<
	.uleb128 .Ltmp637-.Ltmp636              #   Call between .Ltmp636 and .Ltmp637
	.uleb128 .Ltmp638-.Lfunc_begin6         #     jumps to .Ltmp638
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp637-.Lfunc_begin6         # >> Call Site 264 <<
	.uleb128 .Ltmp639-.Ltmp637              #   Call between .Ltmp637 and .Ltmp639
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp639-.Lfunc_begin6         # >> Call Site 265 <<
	.uleb128 .Ltmp640-.Ltmp639              #   Call between .Ltmp639 and .Ltmp640
	.uleb128 .Ltmp641-.Lfunc_begin6         #     jumps to .Ltmp641
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp640-.Lfunc_begin6         # >> Call Site 266 <<
	.uleb128 .Ltmp642-.Ltmp640              #   Call between .Ltmp640 and .Ltmp642
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp642-.Lfunc_begin6         # >> Call Site 267 <<
	.uleb128 .Ltmp643-.Ltmp642              #   Call between .Ltmp642 and .Ltmp643
	.uleb128 .Ltmp644-.Lfunc_begin6         #     jumps to .Ltmp644
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp645-.Lfunc_begin6         # >> Call Site 268 <<
	.uleb128 .Ltmp646-.Ltmp645              #   Call between .Ltmp645 and .Ltmp646
	.uleb128 .Ltmp647-.Lfunc_begin6         #     jumps to .Ltmp647
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp646-.Lfunc_begin6         # >> Call Site 269 <<
	.uleb128 .Ltmp648-.Ltmp646              #   Call between .Ltmp646 and .Ltmp648
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp648-.Lfunc_begin6         # >> Call Site 270 <<
	.uleb128 .Ltmp649-.Ltmp648              #   Call between .Ltmp648 and .Ltmp649
	.uleb128 .Ltmp650-.Lfunc_begin6         #     jumps to .Ltmp650
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp651-.Lfunc_begin6         # >> Call Site 271 <<
	.uleb128 .Ltmp652-.Ltmp651              #   Call between .Ltmp651 and .Ltmp652
	.uleb128 .Ltmp653-.Lfunc_begin6         #     jumps to .Ltmp653
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp652-.Lfunc_begin6         # >> Call Site 272 <<
	.uleb128 .Ltmp654-.Ltmp652              #   Call between .Ltmp652 and .Ltmp654
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp654-.Lfunc_begin6         # >> Call Site 273 <<
	.uleb128 .Ltmp655-.Ltmp654              #   Call between .Ltmp654 and .Ltmp655
	.uleb128 .Ltmp656-.Lfunc_begin6         #     jumps to .Ltmp656
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp655-.Lfunc_begin6         # >> Call Site 274 <<
	.uleb128 .Ltmp657-.Ltmp655              #   Call between .Ltmp655 and .Ltmp657
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp657-.Lfunc_begin6         # >> Call Site 275 <<
	.uleb128 .Ltmp658-.Ltmp657              #   Call between .Ltmp657 and .Ltmp658
	.uleb128 .Ltmp659-.Lfunc_begin6         #     jumps to .Ltmp659
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp660-.Lfunc_begin6         # >> Call Site 276 <<
	.uleb128 .Ltmp661-.Ltmp660              #   Call between .Ltmp660 and .Ltmp661
	.uleb128 .Ltmp662-.Lfunc_begin6         #     jumps to .Ltmp662
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp661-.Lfunc_begin6         # >> Call Site 277 <<
	.uleb128 .Ltmp663-.Ltmp661              #   Call between .Ltmp661 and .Ltmp663
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp663-.Lfunc_begin6         # >> Call Site 278 <<
	.uleb128 .Ltmp664-.Ltmp663              #   Call between .Ltmp663 and .Ltmp664
	.uleb128 .Ltmp665-.Lfunc_begin6         #     jumps to .Ltmp665
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp664-.Lfunc_begin6         # >> Call Site 279 <<
	.uleb128 .Ltmp666-.Ltmp664              #   Call between .Ltmp664 and .Ltmp666
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp666-.Lfunc_begin6         # >> Call Site 280 <<
	.uleb128 .Ltmp667-.Ltmp666              #   Call between .Ltmp666 and .Ltmp667
	.uleb128 .Ltmp668-.Lfunc_begin6         #     jumps to .Ltmp668
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp667-.Lfunc_begin6         # >> Call Site 281 <<
	.uleb128 .Ltmp669-.Ltmp667              #   Call between .Ltmp667 and .Ltmp669
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp669-.Lfunc_begin6         # >> Call Site 282 <<
	.uleb128 .Ltmp670-.Ltmp669              #   Call between .Ltmp669 and .Ltmp670
	.uleb128 .Ltmp671-.Lfunc_begin6         #     jumps to .Ltmp671
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp672-.Lfunc_begin6         # >> Call Site 283 <<
	.uleb128 .Ltmp673-.Ltmp672              #   Call between .Ltmp672 and .Ltmp673
	.uleb128 .Ltmp674-.Lfunc_begin6         #     jumps to .Ltmp674
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp673-.Lfunc_begin6         # >> Call Site 284 <<
	.uleb128 .Ltmp675-.Ltmp673              #   Call between .Ltmp673 and .Ltmp675
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp675-.Lfunc_begin6         # >> Call Site 285 <<
	.uleb128 .Ltmp676-.Ltmp675              #   Call between .Ltmp675 and .Ltmp676
	.uleb128 .Ltmp677-.Lfunc_begin6         #     jumps to .Ltmp677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp678-.Lfunc_begin6         # >> Call Site 286 <<
	.uleb128 .Ltmp679-.Ltmp678              #   Call between .Ltmp678 and .Ltmp679
	.uleb128 .Ltmp680-.Lfunc_begin6         #     jumps to .Ltmp680
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp679-.Lfunc_begin6         # >> Call Site 287 <<
	.uleb128 .Ltmp681-.Ltmp679              #   Call between .Ltmp679 and .Ltmp681
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp681-.Lfunc_begin6         # >> Call Site 288 <<
	.uleb128 .Ltmp682-.Ltmp681              #   Call between .Ltmp681 and .Ltmp682
	.uleb128 .Ltmp683-.Lfunc_begin6         #     jumps to .Ltmp683
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp682-.Lfunc_begin6         # >> Call Site 289 <<
	.uleb128 .Ltmp684-.Ltmp682              #   Call between .Ltmp682 and .Ltmp684
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp684-.Lfunc_begin6         # >> Call Site 290 <<
	.uleb128 .Ltmp685-.Ltmp684              #   Call between .Ltmp684 and .Ltmp685
	.uleb128 .Ltmp686-.Lfunc_begin6         #     jumps to .Ltmp686
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp687-.Lfunc_begin6         # >> Call Site 291 <<
	.uleb128 .Ltmp688-.Ltmp687              #   Call between .Ltmp687 and .Ltmp688
	.uleb128 .Ltmp689-.Lfunc_begin6         #     jumps to .Ltmp689
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp688-.Lfunc_begin6         # >> Call Site 292 <<
	.uleb128 .Ltmp690-.Ltmp688              #   Call between .Ltmp688 and .Ltmp690
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp690-.Lfunc_begin6         # >> Call Site 293 <<
	.uleb128 .Ltmp691-.Ltmp690              #   Call between .Ltmp690 and .Ltmp691
	.uleb128 .Ltmp692-.Lfunc_begin6         #     jumps to .Ltmp692
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp693-.Lfunc_begin6         # >> Call Site 294 <<
	.uleb128 .Ltmp694-.Ltmp693              #   Call between .Ltmp693 and .Ltmp694
	.uleb128 .Ltmp695-.Lfunc_begin6         #     jumps to .Ltmp695
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp694-.Lfunc_begin6         # >> Call Site 295 <<
	.uleb128 .Ltmp696-.Ltmp694              #   Call between .Ltmp694 and .Ltmp696
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp696-.Lfunc_begin6         # >> Call Site 296 <<
	.uleb128 .Ltmp697-.Ltmp696              #   Call between .Ltmp696 and .Ltmp697
	.uleb128 .Ltmp698-.Lfunc_begin6         #     jumps to .Ltmp698
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp697-.Lfunc_begin6         # >> Call Site 297 <<
	.uleb128 .Ltmp699-.Ltmp697              #   Call between .Ltmp697 and .Ltmp699
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp699-.Lfunc_begin6         # >> Call Site 298 <<
	.uleb128 .Ltmp700-.Ltmp699              #   Call between .Ltmp699 and .Ltmp700
	.uleb128 .Ltmp701-.Lfunc_begin6         #     jumps to .Ltmp701
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp702-.Lfunc_begin6         # >> Call Site 299 <<
	.uleb128 .Ltmp703-.Ltmp702              #   Call between .Ltmp702 and .Ltmp703
	.uleb128 .Ltmp704-.Lfunc_begin6         #     jumps to .Ltmp704
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp703-.Lfunc_begin6         # >> Call Site 300 <<
	.uleb128 .Lfunc_end7-.Ltmp703           #   Call between .Ltmp703 and .Lfunc_end7
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEED2Ev,"axG",@progbits,_ZNSt5dequeIiSaIiEED2Ev,comdat
	.weak	_ZNSt5dequeIiSaIiEED2Ev         # -- Begin function _ZNSt5dequeIiSaIiEED2Ev
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEED2Ev,@function
_ZNSt5dequeIiSaIiEED2Ev:                # @_ZNSt5dequeIiSaIiEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB8_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB8_5
# %bb.2:                                # %.lr.ph.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB8_3:                                # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB8_3
# %bb.4:                                # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.loopexit.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB8_5:                                # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB8_6:                                # %_ZNSt11_Deque_baseIiSaIiEED2Ev.exit
	ret
.Lfunc_end8:
	.size	_ZNSt5dequeIiSaIiEED2Ev, .Lfunc_end8-_ZNSt5dequeIiSaIiEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEED2Ev,"axG",@progbits,_ZNSt5dequeIbSaIbEED2Ev,comdat
	.weak	_ZNSt5dequeIbSaIbEED2Ev         # -- Begin function _ZNSt5dequeIbSaIbEED2Ev
	.p2align	5
	.type	_ZNSt5dequeIbSaIbEED2Ev,@function
_ZNSt5dequeIbSaIbEED2Ev:                # @_ZNSt5dequeIbSaIbEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB9_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB9_5
# %bb.2:                                # %.lr.ph.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB9_3:                                # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB9_3
# %bb.4:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB9_5:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB9_6:                                # %_ZNSt11_Deque_baseIbSaIbEED2Ev.exit
	ret
.Lfunc_end9:
	.size	_ZNSt5dequeIbSaIbEED2Ev, .Lfunc_end9-_ZNSt5dequeIbSaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.weak	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	5
	.type	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	vld	$vr0, $a0, 16
	vld	$vr1, $a0, 32
	vld	$vr2, $a0, 48
	vld	$vr3, $a0, 64
	vst	$vr0, $sp, 32
	vst	$vr1, $sp, 48
	vst	$vr2, $sp, 0
	vst	$vr3, $sp, 16
.Ltmp705:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_)
	jirl	$ra, $ra, 0
.Ltmp706:
# %bb.1:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB10_7
# %bb.2:
	ld.d	$s0, $fp, 72
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB10_6
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB10_4:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB10_4
# %bb.5:                                # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.loopexit.i
	ld.d	$a0, $fp, 0
.LBB10_6:                               # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i
	ld.d	$a1, $fp, 8
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB10_7:                               # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB10_8:
.Ltmp707:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end10:
	.size	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end10-_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"aG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table10:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Ltmp705-.Lfunc_begin7         # >> Call Site 1 <<
	.uleb128 .Ltmp706-.Ltmp705              #   Call between .Ltmp705 and .Ltmp706
	.uleb128 .Ltmp707-.Lfunc_begin7         #     jumps to .Ltmp707
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp706-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Lfunc_end10-.Ltmp706          #   Call between .Ltmp706 and .Lfunc_end10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev,"axG",@progbits,_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev,comdat
	.weak	_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev # -- Begin function _ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev,@function
_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev: # @_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	vld	$vr0, $a0, 16
	vld	$vr1, $a0, 32
	vld	$vr2, $a0, 48
	vld	$vr3, $a0, 64
	vst	$vr0, $sp, 32
	vst	$vr1, $sp, 48
	vst	$vr2, $sp, 0
	vst	$vr3, $sp, 16
.Ltmp708:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp709:
# %bb.1:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB11_7
# %bb.2:
	ld.d	$s0, $fp, 72
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB11_6
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB11_4:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 520
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB11_4
# %bb.5:                                # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i
	ld.d	$a0, $fp, 0
.LBB11_6:                               # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
	ld.d	$a1, $fp, 8
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB11_7:                               # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EED2Ev.exit
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB11_8:
.Ltmp710:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end11:
	.size	_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev, .Lfunc_end11-_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev,"aG",@progbits,_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table11:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Ltmp708-.Lfunc_begin8         # >> Call Site 1 <<
	.uleb128 .Ltmp709-.Ltmp708              #   Call between .Ltmp708 and .Ltmp709
	.uleb128 .Ltmp710-.Lfunc_begin8         #     jumps to .Ltmp710
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp709-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Lfunc_end11-.Ltmp709          #   Call between .Ltmp709 and .Lfunc_end11
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev,"axG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev,comdat
	.weak	_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev # -- Begin function _ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev,@function
_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev: # @_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$s2, $a0, 16
	ld.d	$s3, $a0, 32
	ld.d	$s4, $a0, 40
	ld.d	$s0, $a0, 48
	ld.d	$s5, $a0, 72
	ld.d	$s1, $a0, 56
	addi.d	$s6, $s4, 8
	bgeu	$s6, $s5, .LBB12_3
	.p2align	4, , 16
.LBB12_1:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s6, 0
	addi.d	$a1, $a0, 568
.Ltmp711:
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_)
	jirl	$ra, $ra, 0
.Ltmp712:
# %bb.2:                                # %.noexc
                                        #   in Loop: Header=BB12_1 Depth=1
	addi.d	$s6, $s6, 8
	bltu	$s6, $s5, .LBB12_1
.LBB12_3:                               # %._crit_edge.i.i
	beq	$s4, $s5, .LBB12_5
# %bb.4:
.Ltmp714:
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_)
	jirl	$ra, $ra, 0
.Ltmp715:
	b	.LBB12_6
.LBB12_5:
	move	$s1, $s2
.LBB12_6:                               # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_.exit.i
.Ltmp716:
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_)
	jirl	$ra, $ra, 0
.Ltmp717:
# %bb.7:                                # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB12_13
# %bb.8:
	ld.d	$s0, $fp, 72
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB12_12
# %bb.9:                                # %.lr.ph.i.i3.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB12_10:                              # %.lr.ph.i.i3
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 568
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB12_10
# %bb.11:                               # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i
	ld.d	$a0, $fp, 0
.LBB12_12:                              # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
	ld.d	$a1, $fp, 8
	slli.d	$a1, $a1, 3
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB12_13:                              # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EED2Ev.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB12_14:                              # %.loopexit.split-lp
.Ltmp718:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB12_15:                              # %.loopexit
.Ltmp713:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end12:
	.size	_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev, .Lfunc_end12-_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev,"aG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table12:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Ltmp711-.Lfunc_begin9         # >> Call Site 1 <<
	.uleb128 .Ltmp712-.Ltmp711              #   Call between .Ltmp711 and .Ltmp712
	.uleb128 .Ltmp713-.Lfunc_begin9         #     jumps to .Ltmp713
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp714-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp717-.Ltmp714              #   Call between .Ltmp714 and .Ltmp717
	.uleb128 .Ltmp718-.Lfunc_begin9         #     jumps to .Ltmp718
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp717-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Lfunc_end12-.Ltmp717          #   Call between .Ltmp717 and .Lfunc_end12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev,"axG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev,comdat
	.weak	_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev # -- Begin function _ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev,@function
_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev:      # @_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$s0, $a0, 16
	ld.d	$s3, $a0, 32
	ld.d	$s4, $a0, 40
	ld.d	$s2, $a0, 48
	ld.d	$s5, $a0, 72
	ld.d	$s1, $a0, 56
	addi.d	$s6, $s4, 8
	bgeu	$s6, $s5, .LBB13_2
	.p2align	4, , 16
.LBB13_1:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s6, 0
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s6, $s6, 8
	bltu	$s6, $s5, .LBB13_1
.LBB13_2:                               # %._crit_edge.i.i
	beq	$s4, $s5, .LBB13_7
# %bb.3:
	beq	$s0, $s3, .LBB13_5
	.p2align	4, , 16
.LBB13_4:                               # %.lr.ph.i6.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 432
	bne	$s0, $s3, .LBB13_4
.LBB13_5:                               # %_ZSt8_DestroyIPN2PP3CmdEEvT_S3_.exit9.i.i
	beq	$s1, $s2, .LBB13_9
	.p2align	4, , 16
.LBB13_6:                               # %.lr.ph.i11.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 432
	bne	$s1, $s2, .LBB13_6
	b	.LBB13_9
.LBB13_7:
	beq	$s0, $s2, .LBB13_9
	.p2align	4, , 16
.LBB13_8:                               # %.lr.ph.i16.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 432
	bne	$s0, $s2, .LBB13_8
.LBB13_9:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB13_15
# %bb.10:
	ld.d	$s0, $fp, 72
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB13_14
# %bb.11:                               # %.lr.ph.i.i1.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB13_12:                              # %.lr.ph.i.i1
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 432
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB13_12
# %bb.13:                               # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i
	ld.d	$a0, $fp, 0
.LBB13_14:                              # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
	ld.d	$a1, $fp, 8
	slli.d	$a1, $a1, 3
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB13_15:                              # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end13:
	.size	_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev, .Lfunc_end13-_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 16
.Ltmp719:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp720:
# %bb.1:                                # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB14_2:
.Ltmp721:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end14:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev, .Lfunc_end14-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,"aG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table14:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Ltmp719-.Lfunc_begin10        # >> Call Site 1 <<
	.uleb128 .Ltmp720-.Ltmp719              #   Call between .Ltmp719 and .Ltmp720
	.uleb128 .Ltmp721-.Lfunc_begin10        #     jumps to .Ltmp721
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp720-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Lfunc_end14-.Ltmp720          #   Call between .Ltmp720 and .Lfunc_end14
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev,"axG",@progbits,_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev,comdat
	.weak	_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev # -- Begin function _ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev
	.p2align	5
	.type	_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev,@function
_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev: # @_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 16
.Ltmp722:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E)
	jirl	$ra, $ra, 0
.Ltmp723:
# %bb.1:                                # %_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB15_2:
.Ltmp724:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end15:
	.size	_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev, .Lfunc_end15-_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev,"aG",@progbits,_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table15:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Ltmp722-.Lfunc_begin11        # >> Call Site 1 <<
	.uleb128 .Ltmp723-.Ltmp722              #   Call between .Ltmp722 and .Ltmp723
	.uleb128 .Ltmp724-.Lfunc_begin11        #     jumps to .Ltmp724
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp723-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Lfunc_end15-.Ltmp723          #   Call between .Ltmp723 and .Lfunc_end15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 16
.Ltmp725:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp726:
# %bb.1:                                # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB16_2:
.Ltmp727:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end16:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev, .Lfunc_end16-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,"aG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table16:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Ltmp725-.Lfunc_begin12        # >> Call Site 1 <<
	.uleb128 .Ltmp726-.Ltmp725              #   Call between .Ltmp725 and .Ltmp726
	.uleb128 .Ltmp727-.Lfunc_begin12        #     jumps to .Ltmp727
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp726-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Lfunc_end16-.Ltmp726          #   Call between .Ltmp726 and .Lfunc_end16
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s8, $a1
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 544
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	st.d	$a0, $fp, 528
	st.d	$zero, $fp, 536
	st.b	$zero, $fp, 544
	addi.d	$a0, $fp, 576
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	st.d	$a0, $fp, 560
	st.d	$zero, $fp, 568
	st.b	$zero, $fp, 576
	addi.d	$s0, $fp, 592
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp728:
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp729:
# %bb.1:                                # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit
	addi.d	$a0, $fp, 688
	st.w	$zero, $fp, 688
	st.d	$zero, $fp, 696
	st.d	$a0, $fp, 704
	st.d	$a0, $fp, 712
	st.d	$zero, $fp, 720
	addi.d	$a0, $fp, 736
	st.w	$zero, $fp, 736
	st.d	$zero, $fp, 744
	st.d	$a0, $fp, 752
	st.d	$a0, $fp, 760
	st.d	$zero, $fp, 768
	addi.d	$a0, $fp, 784
	st.w	$zero, $fp, 784
	st.d	$zero, $fp, 792
	st.d	$a0, $fp, 800
	st.d	$a0, $fp, 808
	addi.d	$a0, $fp, 816
	addi.d	$s6, $fp, 824
	ori	$a2, $zero, 88
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp731:
	move	$a0, $s6
	move	$a1, $zero
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp732:
# %bb.2:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EEC2Ev.exit
	addi.d	$s4, $fp, 904
	ori	$a2, $zero, 80
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp734:
	move	$a0, $s4
	move	$a1, $zero
	st.d	$s6, $sp, 48                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp735:
# %bb.3:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EEC2Ev.exit31
	addi.d	$s3, $fp, 992
	ori	$a2, $zero, 80
	move	$a0, $s3
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp737:
	move	$a0, $s3
	move	$a1, $zero
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp738:
# %bb.4:                                # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit32
	addi.d	$s5, $fp, 1080
.Ltmp740:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp741:
# %bb.5:
	addi.d	$s1, $fp, 1472
.Ltmp743:
	move	$a0, $s1
	st.d	$s5, $sp, 24                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp744:
# %bb.6:
	addi.d	$a0, $fp, 1864
.Ltmp746:
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp747:
# %bb.7:
	ori	$a0, $zero, 2280
	add.d	$a1, $fp, $a0
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	stptr.d	$a1, $fp, 2264
	stptr.d	$zero, $fp, 2272
	stx.b	$zero, $fp, $a0
	addi.d	$s2, $fp, 2047
	addi.d	$s7, $s2, 249
	ori	$a2, $zero, 80
	move	$a0, $s7
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp749:
	move	$a0, $s7
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp750:
# %bb.8:                                # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEC2Ev.exit
	addi.d	$s1, $s2, 329
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp752:
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp753:
# %bb.9:                                # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEC2Ev.exit
	addi.d	$s4, $s2, 417
	ori	$a2, $zero, 80
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp755:
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp756:
# %bb.10:                               # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit33
	addi.d	$s5, $s2, 497
	ori	$a2, $zero, 80
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp758:
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp759:
# %bb.11:                               # %_ZNSt5dequeIbSaIbEEC2Ev.exit
	addi.d	$s0, $s2, 585
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp761:
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp762:
# %bb.12:                               # %_ZNSt5dequeIbSaIbEEC2Ev.exit34
	addi.d	$s6, $s2, 665
	ori	$a2, $zero, 80
	move	$a0, $s6
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp764:
	move	$a0, $s6
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp765:
# %bb.13:                               # %_ZNSt5dequeIiSaIiEEC2Ev.exit
.Ltmp767:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp768:
# %bb.14:
.Ltmp769:
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4CommC1Ev)
	jirl	$ra, $ra, 0
.Ltmp770:
# %bb.15:
	st.d	$s2, $fp, 520
.Ltmp772:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser4initEv)
	jirl	$ra, $ra, 0
.Ltmp773:
# %bb.16:
	stptr.w	$zero, $fp, 2456
	addi.d	$s2, $sp, 96
	ld.d	$a1, $s8, 8
	ld.d	$s8, $s8, 0
	st.d	$s2, $sp, 80
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s2
	bltu	$a1, $a2, .LBB17_19
# %bb.17:                               # %.noexc.i
.Ltmp774:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp775:
# %bb.18:                               # %.noexc
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB17_19:                              # %._crit_edge.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB17_23
# %bb.20:                               # %._crit_edge.i.i
	bnez	$a1, .LBB17_22
# %bb.21:
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB17_23
.LBB17_22:
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB17_23:
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 88
.Ltmp777:
	addi.d	$a1, $sp, 80
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp778:
# %bb.24:
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB17_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB17_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	st.d	$zero, $fp, 512
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB17_27:
.Ltmp779:
	ld.d	$a2, $sp, 80
	move	$s8, $a0
	beq	$a2, $s2, .LBB17_45
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a0, $sp, 96
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB17_30
.LBB17_29:
.Ltmp771:
	move	$s8, $a0
	ori	$a1, $zero, 16
	move	$a0, $s2
.LBB17_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB17_45
.LBB17_31:
.Ltmp766:
	move	$s8, $a0
	b	.LBB17_46
.LBB17_32:
.Ltmp763:
	move	$s8, $a0
	b	.LBB17_47
.LBB17_33:
.Ltmp760:
	move	$s8, $a0
	b	.LBB17_48
.LBB17_34:
.Ltmp757:
	move	$s8, $a0
	b	.LBB17_49
.LBB17_35:
.Ltmp754:
	move	$s8, $a0
	b	.LBB17_50
.LBB17_36:
.Ltmp751:
	move	$s8, $a0
	b	.LBB17_51
.LBB17_37:
.Ltmp748:
	move	$s8, $a0
	b	.LBB17_54
.LBB17_38:
.Ltmp745:
	move	$s8, $a0
	b	.LBB17_55
.LBB17_39:
.Ltmp742:
	move	$s8, $a0
	b	.LBB17_56
.LBB17_40:
.Ltmp739:
	move	$s8, $a0
	b	.LBB17_57
.LBB17_41:
.Ltmp736:
	move	$s8, $a0
	b	.LBB17_58
.LBB17_42:
.Ltmp733:
	move	$s8, $a0
	b	.LBB17_59
.LBB17_43:
.Ltmp730:
	move	$s8, $a0
	b	.LBB17_60
.LBB17_44:
.Ltmp776:
	move	$s8, $a0
.LBB17_45:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEED2Ev)
	jirl	$ra, $ra, 0
.LBB17_46:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB17_47:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB17_48:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB17_49:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB17_50:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB17_51:
	ldptr.d	$a0, $fp, 2264
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB17_53
# %bb.52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB17_53:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB17_54:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB17_55:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB17_56:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB17_57:
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB17_58:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB17_59:
	addi.d	$s0, $fp, 680
	addi.d	$s1, $fp, 728
	addi.d	$a0, $fp, 776
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB17_60:
	ld.d	$a0, $fp, 560
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB17_63
# %bb.61:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
	ld.d	$a0, $fp, 528
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB17_64
.LBB17_62:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB17_63:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 528
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB17_62
.LBB17_64:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i44
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end17:
	.size	_ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end17-_ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table17:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp728-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp728
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp728-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp729-.Ltmp728              #   Call between .Ltmp728 and .Ltmp729
	.uleb128 .Ltmp730-.Lfunc_begin13        #     jumps to .Ltmp730
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp729-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Ltmp731-.Ltmp729              #   Call between .Ltmp729 and .Ltmp731
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp731-.Lfunc_begin13        # >> Call Site 4 <<
	.uleb128 .Ltmp732-.Ltmp731              #   Call between .Ltmp731 and .Ltmp732
	.uleb128 .Ltmp733-.Lfunc_begin13        #     jumps to .Ltmp733
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp732-.Lfunc_begin13        # >> Call Site 5 <<
	.uleb128 .Ltmp734-.Ltmp732              #   Call between .Ltmp732 and .Ltmp734
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp734-.Lfunc_begin13        # >> Call Site 6 <<
	.uleb128 .Ltmp735-.Ltmp734              #   Call between .Ltmp734 and .Ltmp735
	.uleb128 .Ltmp736-.Lfunc_begin13        #     jumps to .Ltmp736
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp735-.Lfunc_begin13        # >> Call Site 7 <<
	.uleb128 .Ltmp737-.Ltmp735              #   Call between .Ltmp735 and .Ltmp737
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp737-.Lfunc_begin13        # >> Call Site 8 <<
	.uleb128 .Ltmp738-.Ltmp737              #   Call between .Ltmp737 and .Ltmp738
	.uleb128 .Ltmp739-.Lfunc_begin13        #     jumps to .Ltmp739
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp740-.Lfunc_begin13        # >> Call Site 9 <<
	.uleb128 .Ltmp741-.Ltmp740              #   Call between .Ltmp740 and .Ltmp741
	.uleb128 .Ltmp742-.Lfunc_begin13        #     jumps to .Ltmp742
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp743-.Lfunc_begin13        # >> Call Site 10 <<
	.uleb128 .Ltmp744-.Ltmp743              #   Call between .Ltmp743 and .Ltmp744
	.uleb128 .Ltmp745-.Lfunc_begin13        #     jumps to .Ltmp745
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp746-.Lfunc_begin13        # >> Call Site 11 <<
	.uleb128 .Ltmp747-.Ltmp746              #   Call between .Ltmp746 and .Ltmp747
	.uleb128 .Ltmp748-.Lfunc_begin13        #     jumps to .Ltmp748
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp747-.Lfunc_begin13        # >> Call Site 12 <<
	.uleb128 .Ltmp749-.Ltmp747              #   Call between .Ltmp747 and .Ltmp749
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp749-.Lfunc_begin13        # >> Call Site 13 <<
	.uleb128 .Ltmp750-.Ltmp749              #   Call between .Ltmp749 and .Ltmp750
	.uleb128 .Ltmp751-.Lfunc_begin13        #     jumps to .Ltmp751
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp750-.Lfunc_begin13        # >> Call Site 14 <<
	.uleb128 .Ltmp752-.Ltmp750              #   Call between .Ltmp750 and .Ltmp752
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp752-.Lfunc_begin13        # >> Call Site 15 <<
	.uleb128 .Ltmp753-.Ltmp752              #   Call between .Ltmp752 and .Ltmp753
	.uleb128 .Ltmp754-.Lfunc_begin13        #     jumps to .Ltmp754
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp753-.Lfunc_begin13        # >> Call Site 16 <<
	.uleb128 .Ltmp755-.Ltmp753              #   Call between .Ltmp753 and .Ltmp755
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp755-.Lfunc_begin13        # >> Call Site 17 <<
	.uleb128 .Ltmp756-.Ltmp755              #   Call between .Ltmp755 and .Ltmp756
	.uleb128 .Ltmp757-.Lfunc_begin13        #     jumps to .Ltmp757
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp756-.Lfunc_begin13        # >> Call Site 18 <<
	.uleb128 .Ltmp758-.Ltmp756              #   Call between .Ltmp756 and .Ltmp758
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp758-.Lfunc_begin13        # >> Call Site 19 <<
	.uleb128 .Ltmp759-.Ltmp758              #   Call between .Ltmp758 and .Ltmp759
	.uleb128 .Ltmp760-.Lfunc_begin13        #     jumps to .Ltmp760
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp759-.Lfunc_begin13        # >> Call Site 20 <<
	.uleb128 .Ltmp761-.Ltmp759              #   Call between .Ltmp759 and .Ltmp761
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp761-.Lfunc_begin13        # >> Call Site 21 <<
	.uleb128 .Ltmp762-.Ltmp761              #   Call between .Ltmp761 and .Ltmp762
	.uleb128 .Ltmp763-.Lfunc_begin13        #     jumps to .Ltmp763
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp762-.Lfunc_begin13        # >> Call Site 22 <<
	.uleb128 .Ltmp764-.Ltmp762              #   Call between .Ltmp762 and .Ltmp764
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp764-.Lfunc_begin13        # >> Call Site 23 <<
	.uleb128 .Ltmp765-.Ltmp764              #   Call between .Ltmp764 and .Ltmp765
	.uleb128 .Ltmp766-.Lfunc_begin13        #     jumps to .Ltmp766
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp767-.Lfunc_begin13        # >> Call Site 24 <<
	.uleb128 .Ltmp768-.Ltmp767              #   Call between .Ltmp767 and .Ltmp768
	.uleb128 .Ltmp776-.Lfunc_begin13        #     jumps to .Ltmp776
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp769-.Lfunc_begin13        # >> Call Site 25 <<
	.uleb128 .Ltmp770-.Ltmp769              #   Call between .Ltmp769 and .Ltmp770
	.uleb128 .Ltmp771-.Lfunc_begin13        #     jumps to .Ltmp771
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp772-.Lfunc_begin13        # >> Call Site 26 <<
	.uleb128 .Ltmp775-.Ltmp772              #   Call between .Ltmp772 and .Ltmp775
	.uleb128 .Ltmp776-.Lfunc_begin13        #     jumps to .Ltmp776
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp775-.Lfunc_begin13        # >> Call Site 27 <<
	.uleb128 .Ltmp777-.Ltmp775              #   Call between .Ltmp775 and .Ltmp777
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp777-.Lfunc_begin13        # >> Call Site 28 <<
	.uleb128 .Ltmp778-.Ltmp777              #   Call between .Ltmp777 and .Ltmp778
	.uleb128 .Ltmp779-.Lfunc_begin13        #     jumps to .Ltmp779
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp778-.Lfunc_begin13        # >> Call Site 29 <<
	.uleb128 .Lfunc_end17-.Ltmp778          #   Call between .Ltmp778 and .Lfunc_end17
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -192
	.cfi_def_cfa_offset 192
	st.d	$ra, $sp, 184                   # 8-byte Folded Spill
	st.d	$fp, $sp, 176                   # 8-byte Folded Spill
	st.d	$s0, $sp, 168                   # 8-byte Folded Spill
	st.d	$s1, $sp, 160                   # 8-byte Folded Spill
	st.d	$s2, $sp, 152                   # 8-byte Folded Spill
	st.d	$s3, $sp, 144                   # 8-byte Folded Spill
	st.d	$s4, $sp, 136                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s2, $sp, 112
	st.d	$s2, $sp, 96
	st.d	$zero, $sp, 104
	st.b	$zero, $sp, 112
	addi.d	$s4, $sp, 80
	ld.d	$a1, $a1, 8
	ld.d	$s1, $s0, 0
	st.d	$s4, $sp, 64
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 128
	move	$a0, $s4
	bltu	$a1, $a2, .LBB18_3
# %bb.1:                                # %.noexc.i9
.Ltmp780:
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp781:
# %bb.2:                                # %.noexc10
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB18_3:                               # %._crit_edge.i.i8
	addi.w	$s3, $zero, -1
	beq	$a1, $s3, .LBB18_7
# %bb.4:                                # %._crit_edge.i.i8
	bnez	$a1, .LBB18_6
# %bb.5:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB18_7
.LBB18_6:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB18_7:
	ld.d	$a0, $sp, 128
	st.d	$a0, $sp, 72
.Ltmp782:
	addi.d	$a1, $sp, 64
	addi.d	$a2, $sp, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_)
	jirl	$ra, $ra, 0
.Ltmp783:
# %bb.8:
	ld.d	$a0, $sp, 64
	beq	$a0, $s4, .LBB18_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB18_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
.Ltmp785:
	addi.d	$a1, $sp, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp786:
# %bb.11:
	addi.d	$s1, $sp, 48
	ld.d	$a1, $s0, 8
	ld.d	$s0, $s0, 0
	st.d	$s1, $sp, 32
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 128
	move	$a0, $s1
	bltu	$a1, $a2, .LBB18_14
# %bb.12:                               # %.noexc.i12
.Ltmp787:
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp788:
# %bb.13:                               # %.noexc13
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB18_14:                              # %._crit_edge.i.i11
	beq	$a1, $s3, .LBB18_18
# %bb.15:                               # %._crit_edge.i.i11
	bnez	$a1, .LBB18_17
# %bb.16:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB18_18
.LBB18_17:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB18_18:
	ld.d	$a0, $sp, 128
	st.d	$a0, $sp, 40
	addi.d	$s4, $sp, 16
	ld.d	$a1, $sp, 104
	ld.d	$s0, $sp, 96
	st.d	$s4, $sp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 128
	move	$a0, $s4
	bltu	$a1, $a2, .LBB18_21
# %bb.19:                               # %.noexc.i16
.Ltmp790:
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp791:
# %bb.20:                               # %.noexc17
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB18_21:                              # %._crit_edge.i.i15
	beq	$a1, $s3, .LBB18_25
# %bb.22:                               # %._crit_edge.i.i15
	bnez	$a1, .LBB18_24
# %bb.23:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB18_25
.LBB18_24:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB18_25:
	ld.d	$a0, $sp, 128
	st.d	$a0, $sp, 8
.Ltmp793:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_)
	jirl	$ra, $ra, 0
.Ltmp794:
# %bb.26:
	ld.d	$a0, $sp, 0
	beq	$a0, $s4, .LBB18_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i19
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB18_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21
	ld.d	$a0, $sp, 32
	beq	$a0, $s1, .LBB18_30
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB18_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	ld.d	$a0, $sp, 96
	beq	$a0, $s2, .LBB18_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i25
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB18_32:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
	ld.d	$s4, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 168                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 176                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 184                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 192
	ret
.LBB18_33:
.Ltmp792:
	move	$fp, $a0
	b	.LBB18_36
.LBB18_34:
.Ltmp795:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB18_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB18_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33
	ld.d	$a0, $sp, 32
	beq	$a0, $s1, .LBB18_42
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	b	.LBB18_40
.LBB18_38:
.Ltmp784:
	ld.d	$a2, $sp, 64
	move	$fp, $a0
	beq	$a2, $s4, .LBB18_42
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
	ld.d	$a0, $sp, 80
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB18_40:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit30
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB18_42
.LBB18_41:
.Ltmp789:
	move	$fp, $a0
.LBB18_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit30
	ld.d	$a0, $sp, 96
	beq	$a0, $s2, .LBB18_44
# %bb.43:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i37
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB18_44:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit39
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end18:
	.size	_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end18-_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table18:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Ltmp780-.Lfunc_begin14        # >> Call Site 1 <<
	.uleb128 .Ltmp781-.Ltmp780              #   Call between .Ltmp780 and .Ltmp781
	.uleb128 .Ltmp789-.Lfunc_begin14        #     jumps to .Ltmp789
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp781-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp782-.Ltmp781              #   Call between .Ltmp781 and .Ltmp782
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp782-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Ltmp783-.Ltmp782              #   Call between .Ltmp782 and .Ltmp783
	.uleb128 .Ltmp784-.Lfunc_begin14        #     jumps to .Ltmp784
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp783-.Lfunc_begin14        # >> Call Site 4 <<
	.uleb128 .Ltmp785-.Ltmp783              #   Call between .Ltmp783 and .Ltmp785
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp785-.Lfunc_begin14        # >> Call Site 5 <<
	.uleb128 .Ltmp788-.Ltmp785              #   Call between .Ltmp785 and .Ltmp788
	.uleb128 .Ltmp789-.Lfunc_begin14        #     jumps to .Ltmp789
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp788-.Lfunc_begin14        # >> Call Site 6 <<
	.uleb128 .Ltmp790-.Ltmp788              #   Call between .Ltmp788 and .Ltmp790
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp790-.Lfunc_begin14        # >> Call Site 7 <<
	.uleb128 .Ltmp791-.Ltmp790              #   Call between .Ltmp790 and .Ltmp791
	.uleb128 .Ltmp792-.Lfunc_begin14        #     jumps to .Ltmp792
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp791-.Lfunc_begin14        # >> Call Site 8 <<
	.uleb128 .Ltmp793-.Ltmp791              #   Call between .Ltmp791 and .Ltmp793
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp793-.Lfunc_begin14        # >> Call Site 9 <<
	.uleb128 .Ltmp794-.Ltmp793              #   Call between .Ltmp793 and .Ltmp794
	.uleb128 .Ltmp795-.Lfunc_begin14        #     jumps to .Ltmp795
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp794-.Lfunc_begin14        # >> Call Site 10 <<
	.uleb128 .Lfunc_end18-.Ltmp794          #   Call between .Ltmp794 and .Lfunc_end18
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParserC2EPKc       # -- Begin function _ZN2PP11PowerParserC2EPKc
	.p2align	5
	.type	_ZN2PP11PowerParserC2EPKc,@function
_ZN2PP11PowerParserC2EPKc:              # @_ZN2PP11PowerParserC2EPKc
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	st.d	$s7, $sp, 160                   # 8-byte Folded Spill
	st.d	$s8, $sp, 152                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s4, $a1
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 544
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	st.d	$a0, $fp, 528
	st.d	$zero, $fp, 536
	st.b	$zero, $fp, 544
	addi.d	$a0, $fp, 576
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	st.d	$a0, $fp, 560
	st.d	$zero, $fp, 568
	st.b	$zero, $fp, 576
	addi.d	$s3, $fp, 592
	ori	$a2, $zero, 80
	move	$a0, $s3
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp796:
	move	$a0, $s3
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp797:
# %bb.1:                                # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit
	addi.d	$a0, $fp, 688
	st.w	$zero, $fp, 688
	st.d	$zero, $fp, 696
	st.d	$a0, $fp, 704
	st.d	$a0, $fp, 712
	st.d	$zero, $fp, 720
	addi.d	$a0, $fp, 736
	st.w	$zero, $fp, 736
	st.d	$zero, $fp, 744
	st.d	$a0, $fp, 752
	st.d	$a0, $fp, 760
	st.d	$zero, $fp, 768
	addi.d	$a0, $fp, 784
	st.w	$zero, $fp, 784
	st.d	$zero, $fp, 792
	st.d	$a0, $fp, 800
	st.d	$a0, $fp, 808
	addi.d	$a0, $fp, 816
	addi.d	$s1, $fp, 824
	ori	$a2, $zero, 88
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp799:
	move	$a0, $s1
	move	$a1, $zero
	st.d	$s3, $sp, 56                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp800:
# %bb.2:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EEC2Ev.exit
	addi.d	$s2, $fp, 904
	ori	$a2, $zero, 80
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp802:
	move	$a0, $s2
	move	$a1, $zero
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp803:
# %bb.3:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EEC2Ev.exit37
	addi.d	$s5, $fp, 992
	ori	$a2, $zero, 80
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp805:
	move	$a0, $s5
	move	$a1, $zero
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp806:
# %bb.4:                                # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit38
	addi.d	$s6, $fp, 1080
.Ltmp808:
	move	$a0, $s6
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp809:
# %bb.5:
	addi.d	$s0, $fp, 1472
.Ltmp811:
	move	$a0, $s0
	st.d	$s6, $sp, 16                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp812:
# %bb.6:
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	addi.d	$s0, $fp, 1864
.Ltmp814:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp815:
# %bb.7:
	st.d	$s0, $sp, 0                     # 8-byte Folded Spill
	ori	$a0, $zero, 2280
	add.d	$a1, $fp, $a0
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	stptr.d	$a1, $fp, 2264
	stptr.d	$zero, $fp, 2272
	stx.b	$zero, $fp, $a0
	addi.d	$s0, $fp, 2047
	addi.d	$s7, $s0, 249
	ori	$a2, $zero, 80
	move	$a0, $s7
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp817:
	move	$a0, $s7
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp818:
# %bb.8:                                # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEC2Ev.exit
	addi.d	$s8, $s0, 329
	ori	$a2, $zero, 80
	move	$a0, $s8
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp820:
	move	$a0, $s8
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp821:
# %bb.9:                                # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEC2Ev.exit
	addi.d	$s1, $s0, 417
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp823:
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp824:
# %bb.10:                               # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev.exit39
	addi.d	$s5, $s0, 497
	ori	$a2, $zero, 80
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp826:
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp827:
# %bb.11:                               # %_ZNSt5dequeIbSaIbEEC2Ev.exit
	addi.d	$s6, $s0, 585
	ori	$a2, $zero, 80
	move	$a0, $s6
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp829:
	move	$a0, $s6
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp830:
# %bb.12:                               # %_ZNSt5dequeIbSaIbEEC2Ev.exit40
	addi.d	$s0, $s0, 665
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp832:
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp833:
# %bb.13:                               # %_ZNSt5dequeIiSaIiEEC2Ev.exit
.Ltmp835:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp836:
# %bb.14:
.Ltmp838:
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2PP4CommC1Ev)
	jirl	$ra, $ra, 0
.Ltmp839:
# %bb.15:
	st.d	$s2, $fp, 520
	addi.d	$s3, $sp, 128
	st.d	$s3, $sp, 112
	beqz	$s4, .LBB19_37
# %bb.16:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 144
	move	$a0, $s3
	bltu	$s2, $a1, .LBB19_19
# %bb.17:                               # %.noexc.i
.Ltmp841:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp842:
# %bb.18:                               # %.noexc41
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB19_19:                              # %._crit_edge.i.i
	beqz	$s2, .LBB19_23
# %bb.20:                               # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB19_22
# %bb.21:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB19_23
.LBB19_22:
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB19_23:
	ld.d	$a0, $sp, 144
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 120
	stx.b	$zero, $a1, $a0
.Ltmp843:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser4initEv)
	jirl	$ra, $ra, 0
.Ltmp844:
# %bb.24:
	stptr.w	$zero, $fp, 2456
	addi.d	$s2, $sp, 96
	ld.d	$a1, $sp, 120
	ld.d	$s4, $sp, 112
	st.d	$s2, $sp, 80
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	move	$a0, $s2
	bltu	$a1, $a2, .LBB19_27
# %bb.25:                               # %.noexc.i43
.Ltmp845:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp846:
# %bb.26:                               # %.noexc44
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB19_27:                              # %._crit_edge.i.i42
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB19_31
# %bb.28:                               # %._crit_edge.i.i42
	bnez	$a1, .LBB19_30
# %bb.29:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB19_31
.LBB19_30:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB19_31:
	ld.d	$a0, $sp, 144
	st.d	$a0, $sp, 88
.Ltmp848:
	addi.d	$a1, $sp, 80
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp849:
# %bb.32:
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB19_34
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB19_34:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 112
	st.d	$zero, $fp, 512
	beq	$a0, $s3, .LBB19_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB19_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	ld.d	$s8, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB19_37:
.Ltmp851:
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp852:
# %bb.38:                               # %.noexc
.LBB19_39:
.Ltmp850:
	ld.d	$a2, $sp, 80
	move	$s4, $a0
	beq	$a2, $s2, .LBB19_57
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	ld.d	$a0, $sp, 96
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB19_57
.LBB19_41:
.Ltmp840:
	move	$s4, $a0
	ori	$a1, $zero, 16
	move	$a0, $s2
	b	.LBB19_59
.LBB19_42:
.Ltmp837:
	b	.LBB19_61
.LBB19_43:
.Ltmp834:
	move	$s4, $a0
	b	.LBB19_63
.LBB19_44:
.Ltmp831:
	move	$s4, $a0
	b	.LBB19_64
.LBB19_45:
.Ltmp828:
	move	$s4, $a0
	b	.LBB19_65
.LBB19_46:
.Ltmp825:
	move	$s4, $a0
	b	.LBB19_66
.LBB19_47:
.Ltmp822:
	move	$s4, $a0
	b	.LBB19_67
.LBB19_48:
.Ltmp819:
	move	$s4, $a0
	b	.LBB19_68
.LBB19_49:
.Ltmp816:
	move	$s4, $a0
	b	.LBB19_71
.LBB19_50:
.Ltmp813:
	move	$s4, $a0
	b	.LBB19_72
.LBB19_51:
.Ltmp810:
	move	$s4, $a0
	b	.LBB19_73
.LBB19_52:
.Ltmp807:
	move	$s4, $a0
	b	.LBB19_74
.LBB19_53:
.Ltmp804:
	move	$s4, $a0
	b	.LBB19_75
.LBB19_54:
.Ltmp801:
	move	$s4, $a0
	b	.LBB19_76
.LBB19_55:
.Ltmp798:
	move	$s4, $a0
	b	.LBB19_77
.LBB19_56:
.Ltmp847:
	move	$s4, $a0
.LBB19_57:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50
	ld.d	$a0, $sp, 112
	beq	$a0, $s3, .LBB19_62
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i51
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
.LBB19_59:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB19_62
.LBB19_60:
.Ltmp853:
.LBB19_61:
	move	$s4, $a0
.LBB19_62:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEED2Ev)
	jirl	$ra, $ra, 0
.LBB19_63:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB19_64:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB19_65:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB19_66:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB19_67:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB19_68:
	ldptr.d	$a0, $fp, 2264
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB19_70
# %bb.69:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i54
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB19_70:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit56
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB19_71:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB19_72:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB19_73:
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB19_74:
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB19_75:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB19_76:
	addi.d	$s0, $fp, 680
	addi.d	$s1, $fp, 728
	addi.d	$a0, $fp, 776
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB19_77:
	ld.d	$a0, $fp, 560
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB19_80
# %bb.78:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit59
	ld.d	$a0, $fp, 528
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB19_81
.LBB19_79:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit62
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB19_80:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i57
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 528
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB19_79
.LBB19_81:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i60
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end19:
	.size	_ZN2PP11PowerParserC2EPKc, .Lfunc_end19-_ZN2PP11PowerParserC2EPKc
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table19:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15  # >> Call Site 1 <<
	.uleb128 .Ltmp796-.Lfunc_begin15        #   Call between .Lfunc_begin15 and .Ltmp796
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp796-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp797-.Ltmp796              #   Call between .Ltmp796 and .Ltmp797
	.uleb128 .Ltmp798-.Lfunc_begin15        #     jumps to .Ltmp798
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp797-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp799-.Ltmp797              #   Call between .Ltmp797 and .Ltmp799
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp799-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Ltmp800-.Ltmp799              #   Call between .Ltmp799 and .Ltmp800
	.uleb128 .Ltmp801-.Lfunc_begin15        #     jumps to .Ltmp801
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp800-.Lfunc_begin15        # >> Call Site 5 <<
	.uleb128 .Ltmp802-.Ltmp800              #   Call between .Ltmp800 and .Ltmp802
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp802-.Lfunc_begin15        # >> Call Site 6 <<
	.uleb128 .Ltmp803-.Ltmp802              #   Call between .Ltmp802 and .Ltmp803
	.uleb128 .Ltmp804-.Lfunc_begin15        #     jumps to .Ltmp804
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp803-.Lfunc_begin15        # >> Call Site 7 <<
	.uleb128 .Ltmp805-.Ltmp803              #   Call between .Ltmp803 and .Ltmp805
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp805-.Lfunc_begin15        # >> Call Site 8 <<
	.uleb128 .Ltmp806-.Ltmp805              #   Call between .Ltmp805 and .Ltmp806
	.uleb128 .Ltmp807-.Lfunc_begin15        #     jumps to .Ltmp807
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp808-.Lfunc_begin15        # >> Call Site 9 <<
	.uleb128 .Ltmp809-.Ltmp808              #   Call between .Ltmp808 and .Ltmp809
	.uleb128 .Ltmp810-.Lfunc_begin15        #     jumps to .Ltmp810
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp811-.Lfunc_begin15        # >> Call Site 10 <<
	.uleb128 .Ltmp812-.Ltmp811              #   Call between .Ltmp811 and .Ltmp812
	.uleb128 .Ltmp813-.Lfunc_begin15        #     jumps to .Ltmp813
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp814-.Lfunc_begin15        # >> Call Site 11 <<
	.uleb128 .Ltmp815-.Ltmp814              #   Call between .Ltmp814 and .Ltmp815
	.uleb128 .Ltmp816-.Lfunc_begin15        #     jumps to .Ltmp816
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp815-.Lfunc_begin15        # >> Call Site 12 <<
	.uleb128 .Ltmp817-.Ltmp815              #   Call between .Ltmp815 and .Ltmp817
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp817-.Lfunc_begin15        # >> Call Site 13 <<
	.uleb128 .Ltmp818-.Ltmp817              #   Call between .Ltmp817 and .Ltmp818
	.uleb128 .Ltmp819-.Lfunc_begin15        #     jumps to .Ltmp819
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp818-.Lfunc_begin15        # >> Call Site 14 <<
	.uleb128 .Ltmp820-.Ltmp818              #   Call between .Ltmp818 and .Ltmp820
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp820-.Lfunc_begin15        # >> Call Site 15 <<
	.uleb128 .Ltmp821-.Ltmp820              #   Call between .Ltmp820 and .Ltmp821
	.uleb128 .Ltmp822-.Lfunc_begin15        #     jumps to .Ltmp822
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp821-.Lfunc_begin15        # >> Call Site 16 <<
	.uleb128 .Ltmp823-.Ltmp821              #   Call between .Ltmp821 and .Ltmp823
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp823-.Lfunc_begin15        # >> Call Site 17 <<
	.uleb128 .Ltmp824-.Ltmp823              #   Call between .Ltmp823 and .Ltmp824
	.uleb128 .Ltmp825-.Lfunc_begin15        #     jumps to .Ltmp825
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp824-.Lfunc_begin15        # >> Call Site 18 <<
	.uleb128 .Ltmp826-.Ltmp824              #   Call between .Ltmp824 and .Ltmp826
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp826-.Lfunc_begin15        # >> Call Site 19 <<
	.uleb128 .Ltmp827-.Ltmp826              #   Call between .Ltmp826 and .Ltmp827
	.uleb128 .Ltmp828-.Lfunc_begin15        #     jumps to .Ltmp828
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp827-.Lfunc_begin15        # >> Call Site 20 <<
	.uleb128 .Ltmp829-.Ltmp827              #   Call between .Ltmp827 and .Ltmp829
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp829-.Lfunc_begin15        # >> Call Site 21 <<
	.uleb128 .Ltmp830-.Ltmp829              #   Call between .Ltmp829 and .Ltmp830
	.uleb128 .Ltmp831-.Lfunc_begin15        #     jumps to .Ltmp831
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp830-.Lfunc_begin15        # >> Call Site 22 <<
	.uleb128 .Ltmp832-.Ltmp830              #   Call between .Ltmp830 and .Ltmp832
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp832-.Lfunc_begin15        # >> Call Site 23 <<
	.uleb128 .Ltmp833-.Ltmp832              #   Call between .Ltmp832 and .Ltmp833
	.uleb128 .Ltmp834-.Lfunc_begin15        #     jumps to .Ltmp834
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp835-.Lfunc_begin15        # >> Call Site 24 <<
	.uleb128 .Ltmp836-.Ltmp835              #   Call between .Ltmp835 and .Ltmp836
	.uleb128 .Ltmp837-.Lfunc_begin15        #     jumps to .Ltmp837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp838-.Lfunc_begin15        # >> Call Site 25 <<
	.uleb128 .Ltmp839-.Ltmp838              #   Call between .Ltmp838 and .Ltmp839
	.uleb128 .Ltmp840-.Lfunc_begin15        #     jumps to .Ltmp840
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp839-.Lfunc_begin15        # >> Call Site 26 <<
	.uleb128 .Ltmp841-.Ltmp839              #   Call between .Ltmp839 and .Ltmp841
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp841-.Lfunc_begin15        # >> Call Site 27 <<
	.uleb128 .Ltmp842-.Ltmp841              #   Call between .Ltmp841 and .Ltmp842
	.uleb128 .Ltmp853-.Lfunc_begin15        #     jumps to .Ltmp853
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp842-.Lfunc_begin15        # >> Call Site 28 <<
	.uleb128 .Ltmp843-.Ltmp842              #   Call between .Ltmp842 and .Ltmp843
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp843-.Lfunc_begin15        # >> Call Site 29 <<
	.uleb128 .Ltmp846-.Ltmp843              #   Call between .Ltmp843 and .Ltmp846
	.uleb128 .Ltmp847-.Lfunc_begin15        #     jumps to .Ltmp847
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp846-.Lfunc_begin15        # >> Call Site 30 <<
	.uleb128 .Ltmp848-.Ltmp846              #   Call between .Ltmp846 and .Ltmp848
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp848-.Lfunc_begin15        # >> Call Site 31 <<
	.uleb128 .Ltmp849-.Ltmp848              #   Call between .Ltmp848 and .Ltmp849
	.uleb128 .Ltmp850-.Lfunc_begin15        #     jumps to .Ltmp850
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp849-.Lfunc_begin15        # >> Call Site 32 <<
	.uleb128 .Ltmp851-.Ltmp849              #   Call between .Ltmp849 and .Ltmp851
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp851-.Lfunc_begin15        # >> Call Site 33 <<
	.uleb128 .Ltmp852-.Ltmp851              #   Call between .Ltmp851 and .Ltmp852
	.uleb128 .Ltmp853-.Lfunc_begin15        #     jumps to .Ltmp853
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp852-.Lfunc_begin15        # >> Call Site 34 <<
	.uleb128 .Lfunc_end19-.Ltmp852          #   Call between .Ltmp852 and .Lfunc_end19
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParserD2Ev         # -- Begin function _ZN2PP11PowerParserD2Ev
	.p2align	5
	.type	_ZN2PP11PowerParserD2Ev,@function
_ZN2PP11PowerParserD2Ev:                # @_ZN2PP11PowerParserD2Ev
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	addi.d	$a0, $a0, 8
.Ltmp854:
	pcaddu18i	$ra, %call36(_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv)
	jirl	$ra, $ra, 0
.Ltmp855:
# %bb.1:                                # %.noexc
	bnez	$a0, .LBB20_3
# %bb.2:
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.w	$a1, $a0, 32
	ori	$a1, $a1, 4
.Ltmp856:
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
.Ltmp857:
.LBB20_3:                               # %_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv.exit
	ld.d	$a1, $fp, 512
	beqz	$a1, .LBB20_5
# %bb.4:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	ld.d	$a2, $a0, 0
	ld.d	$a2, $a2, -24
	add.d	$a0, $a0, $a2
.Ltmp858:
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5rdbufEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp859:
.LBB20_5:
	ld.d	$s0, $fp, 520
	beqz	$s0, .LBB20_7
# %bb.6:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4CommD1Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_7:
	addi.d	$s6, $fp, 592
	ld.d	$s2, $fp, 608
	ld.d	$s3, $fp, 616
	ld.d	$s0, $fp, 624
	ld.d	$s1, $fp, 632
	st.d	$s2, $sp, 80
	st.d	$s3, $sp, 88
	vld	$vr0, $fp, 640
	vld	$vr1, $fp, 656
	st.d	$s0, $sp, 96
	st.d	$s1, $sp, 104
	vst	$vr0, $sp, 48
	vst	$vr1, $sp, 64
.Ltmp860:
	addi.d	$a1, $sp, 80
	addi.d	$a2, $sp, 48
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_)
	jirl	$ra, $ra, 0
.Ltmp861:
# %bb.8:                                # %.noexc.i
	ld.d	$s4, $fp, 664
	bgeu	$s1, $s4, .LBB20_11
# %bb.9:                                # %.lr.ph.i.i.i.preheader
	move	$a1, $s1
	.p2align	4, , 16
.LBB20_10:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s5, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s5
	bltu	$s5, $s4, .LBB20_10
.LBB20_11:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	st.d	$s2, $fp, 640
	st.d	$s3, $fp, 648
	ld.d	$a1, $fp, 696
	st.d	$s0, $fp, 656
	st.d	$s1, $fp, 664
	addi.d	$s0, $fp, 680
.Ltmp863:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp864:
# %bb.12:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE5clearEv.exit
	addi.d	$a0, $fp, 688
	st.d	$zero, $fp, 696
	st.d	$a0, $fp, 704
	ld.d	$a1, $fp, 792
	st.d	$a0, $fp, 712
	st.d	$zero, $fp, 720
	addi.d	$s1, $fp, 776
.Ltmp866:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp867:
# %bb.13:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE5clearEv.exit
	addi.d	$a0, $fp, 784
	st.d	$zero, $fp, 792
	st.d	$a0, $fp, 800
	st.d	$a0, $fp, 808
	vld	$vr0, $fp, 840
	vld	$vr1, $fp, 856
	st.d	$zero, $fp, 816
	addi.d	$s2, $fp, 824
	vst	$vr0, $sp, 80
	vst	$vr1, $sp, 96
.Ltmp869:
	addi.d	$a1, $sp, 80
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp870:
# %bb.14:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv.exit
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	vld	$vr0, $fp, 920
	vld	$vr1, $fp, 936
	addi.d	$s0, $fp, 904
	vst	$vr0, $sp, 80
	vst	$vr1, $sp, 96
.Ltmp872:
	addi.d	$a1, $sp, 80
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp873:
# %bb.15:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv.exit3
	st.d	$s0, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	addi.d	$s8, $fp, 2047
	addi.d	$s5, $s8, 249
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv)
	jirl	$ra, $ra, 0
	addi.d	$s6, $s8, 329
	ldptr.d	$s0, $fp, 2392
	ldptr.d	$s1, $fp, 2400
	ori	$a0, $zero, 2424
	vldx	$vr0, $fp, $a0
	ldptr.d	$s2, $fp, 2408
	ldptr.d	$s3, $fp, 2416
	st.d	$s0, $sp, 80
	vst	$vr0, $sp, 48
	ori	$a0, $zero, 2440
	vldx	$vr0, $fp, $a0
	st.d	$s1, $sp, 88
	st.d	$s2, $sp, 96
	st.d	$s3, $sp, 104
	vst	$vr0, $sp, 64
.Ltmp875:
	addi.d	$a1, $sp, 80
	addi.d	$a2, $sp, 48
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp876:
# %bb.16:                               # %.noexc.i4
	ldptr.d	$s4, $fp, 2448
	bgeu	$s3, $s4, .LBB20_19
# %bb.17:                               # %.lr.ph.i.i.i5.preheader
	move	$a1, $s3
	.p2align	4, , 16
.LBB20_18:                              # %.lr.ph.i.i.i5
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s7, $a1, 8
	ori	$a1, $zero, 520
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s7
	bltu	$s7, $s4, .LBB20_18
.LBB20_19:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5clearEv.exit
	stptr.d	$s0, $fp, 2424
	stptr.d	$s1, $fp, 2432
	stptr.d	$s2, $fp, 2440
	stptr.d	$s3, $fp, 2448
	addi.d	$s7, $sp, 96
	st.d	$s7, $sp, 80
	ld.d	$a2, $fp, 1576
	st.d	$zero, $sp, 88
	st.b	$zero, $sp, 96
	addi.d	$a0, $fp, 1568
.Ltmp878:
	move	$a1, $zero
	move	$a3, $s7
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp879:
# %bb.20:                               # %.noexc10
	ld.wu	$a2, $fp, 1560
	addi.d	$a0, $fp, 1496
	ld.d	$a3, $fp, 1576
	ld.d	$a1, $fp, 1568
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp880:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp881:
# %bb.21:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 80
	beq	$a0, $s7, .LBB20_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ldptr.d	$a0, $fp, 2712
	beqz	$a0, .LBB20_29
# %bb.24:
	ldptr.d	$s0, $fp, 2784
	ldptr.d	$a1, $fp, 2752
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB20_28
# %bb.25:                               # %.lr.ph.i.i.i12.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB20_26:                              # %.lr.ph.i.i.i12
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB20_26
# %bb.27:                               # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.loopexit.i.i
	ldptr.d	$a0, $fp, 2712
.LBB20_28:                              # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i.i
	ldptr.d	$a1, $fp, 2720
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_29:                              # %_ZNSt5dequeIiSaIiEED2Ev.exit
	ldptr.d	$a0, $fp, 2632
	beqz	$a0, .LBB20_35
# %bb.30:
	ldptr.d	$s0, $fp, 2704
	ldptr.d	$a1, $fp, 2672
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB20_34
# %bb.31:                               # %.lr.ph.i.i.i15.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB20_32:                              # %.lr.ph.i.i.i15
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB20_32
# %bb.33:                               # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i
	ldptr.d	$a0, $fp, 2632
.LBB20_34:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i
	ldptr.d	$a1, $fp, 2640
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_35:                              # %_ZNSt5dequeIbSaIbEED2Ev.exit
	ldptr.d	$a0, $fp, 2544
	beqz	$a0, .LBB20_41
# %bb.36:
	ldptr.d	$s0, $fp, 2616
	ldptr.d	$a1, $fp, 2584
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB20_40
# %bb.37:                               # %.lr.ph.i.i.i20.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB20_38:                              # %.lr.ph.i.i.i20
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB20_38
# %bb.39:                               # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i22
	ldptr.d	$a0, $fp, 2544
.LBB20_40:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i19
	ldptr.d	$a1, $fp, 2552
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_41:                              # %_ZNSt5dequeIbSaIbEED2Ev.exit24
	addi.d	$a0, $s8, 417
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ldptr.d	$a0, $fp, 2264
	addi.d	$a1, $s8, 233
	beq	$a0, $a1, .LBB20_43
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i25
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_43:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s3, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s5, $s3, 0
	addi.d	$s0, $fp, 1472
	addi.d	$s4, $fp, 1864
	st.d	$s5, $fp, 1864
	ld.d	$s7, $s3, 64
	ld.d	$a0, $s5, -24
	ld.d	$s6, $s3, 72
	pcalau12i	$a1, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$s7, $s4, $a0
	ld.d	$a0, $fp, 1960
	st.d	$s6, $fp, 1880
	addi.d	$s8, $a1, 16
	addi.d	$a1, $fp, 1976
	st.d	$s8, $fp, 1888
	beq	$a0, $a1, .LBB20_45
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_45:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$s2, $a0, 16
	st.d	$s2, $fp, 1888
	addi.d	$a0, $fp, 1944
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s3, 16
	st.d	$s1, $fp, 1864
	ld.d	$s3, $s3, 24
	ld.d	$a0, $s1, -24
	stx.d	$s3, $s4, $a0
	st.d	$zero, $fp, 1872
	addi.d	$a0, $fp, 1992
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	st.d	$s5, $fp, 1472
	ld.d	$a0, $s5, -24
	stx.d	$s7, $s0, $a0
	ld.d	$a0, $fp, 1568
	st.d	$s6, $fp, 1488
	addi.d	$a1, $fp, 1584
	st.d	$s8, $fp, 1496
	beq	$a0, $a1, .LBB20_47
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i28
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_47:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit30
	st.d	$s2, $fp, 1496
	addi.d	$a0, $fp, 1552
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	st.d	$s1, $fp, 1472
	ld.d	$a0, $s1, -24
	stx.d	$s3, $s0, $a0
	st.d	$zero, $fp, 1480
	addi.d	$a0, $fp, 1600
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	st.d	$s5, $fp, 1080
	ld.d	$a0, $s5, -24
	addi.d	$s0, $fp, 1080
	stx.d	$s7, $s0, $a0
	ld.d	$a0, $fp, 1176
	st.d	$s6, $fp, 1096
	addi.d	$a1, $fp, 1192
	st.d	$s8, $fp, 1104
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB20_49
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i31
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_49:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit33
	st.d	$s2, $fp, 1104
	addi.d	$a0, $fp, 1160
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	st.d	$s1, $fp, 1080
	ld.d	$a0, $s1, -24
	stx.d	$s3, $s0, $a0
	st.d	$zero, $fp, 1088
	addi.d	$a0, $fp, 1208
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 992
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 792
.Ltmp883:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp884:
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
# %bb.50:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev.exit
	ld.d	$a1, $fp, 744
	addi.d	$a0, $fp, 728
.Ltmp886:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E)
	jirl	$ra, $ra, 0
.Ltmp887:
# %bb.51:                               # %_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEED2Ev.exit
	ld.d	$a1, $fp, 696
.Ltmp889:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp890:
# %bb.52:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 560
	addi.d	$a1, $fp, 576
	beq	$a0, $a1, .LBB20_54
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_54:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	ld.d	$a0, $fp, 528
	addi.d	$a1, $fp, 544
	beq	$a0, $a1, .LBB20_56
# %bb.55:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i37
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_56:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit39
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB20_57:
.Ltmp891:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_58:
.Ltmp888:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_59:
.Ltmp885:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_60:
.Ltmp877:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_61:
.Ltmp874:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_62:
.Ltmp871:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_63:
.Ltmp868:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_64:
.Ltmp865:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_65:
.Ltmp862:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB20_66:
.Ltmp882:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end20:
	.size	_ZN2PP11PowerParserD2Ev, .Lfunc_end20-_ZN2PP11PowerParserD2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table20:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Ltmp854-.Lfunc_begin16        # >> Call Site 1 <<
	.uleb128 .Ltmp859-.Ltmp854              #   Call between .Ltmp854 and .Ltmp859
	.uleb128 .Ltmp882-.Lfunc_begin16        #     jumps to .Ltmp882
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp859-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp860-.Ltmp859              #   Call between .Ltmp859 and .Ltmp860
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp860-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Ltmp861-.Ltmp860              #   Call between .Ltmp860 and .Ltmp861
	.uleb128 .Ltmp862-.Lfunc_begin16        #     jumps to .Ltmp862
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp861-.Lfunc_begin16        # >> Call Site 4 <<
	.uleb128 .Ltmp863-.Ltmp861              #   Call between .Ltmp861 and .Ltmp863
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp863-.Lfunc_begin16        # >> Call Site 5 <<
	.uleb128 .Ltmp864-.Ltmp863              #   Call between .Ltmp863 and .Ltmp864
	.uleb128 .Ltmp865-.Lfunc_begin16        #     jumps to .Ltmp865
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp866-.Lfunc_begin16        # >> Call Site 6 <<
	.uleb128 .Ltmp867-.Ltmp866              #   Call between .Ltmp866 and .Ltmp867
	.uleb128 .Ltmp868-.Lfunc_begin16        #     jumps to .Ltmp868
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp869-.Lfunc_begin16        # >> Call Site 7 <<
	.uleb128 .Ltmp870-.Ltmp869              #   Call between .Ltmp869 and .Ltmp870
	.uleb128 .Ltmp871-.Lfunc_begin16        #     jumps to .Ltmp871
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp872-.Lfunc_begin16        # >> Call Site 8 <<
	.uleb128 .Ltmp873-.Ltmp872              #   Call between .Ltmp872 and .Ltmp873
	.uleb128 .Ltmp874-.Lfunc_begin16        #     jumps to .Ltmp874
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp873-.Lfunc_begin16        # >> Call Site 9 <<
	.uleb128 .Ltmp875-.Ltmp873              #   Call between .Ltmp873 and .Ltmp875
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp875-.Lfunc_begin16        # >> Call Site 10 <<
	.uleb128 .Ltmp876-.Ltmp875              #   Call between .Ltmp875 and .Ltmp876
	.uleb128 .Ltmp877-.Lfunc_begin16        #     jumps to .Ltmp877
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp876-.Lfunc_begin16        # >> Call Site 11 <<
	.uleb128 .Ltmp878-.Ltmp876              #   Call between .Ltmp876 and .Ltmp878
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp878-.Lfunc_begin16        # >> Call Site 12 <<
	.uleb128 .Ltmp881-.Ltmp878              #   Call between .Ltmp878 and .Ltmp881
	.uleb128 .Ltmp882-.Lfunc_begin16        #     jumps to .Ltmp882
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp881-.Lfunc_begin16        # >> Call Site 13 <<
	.uleb128 .Ltmp883-.Ltmp881              #   Call between .Ltmp881 and .Ltmp883
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp883-.Lfunc_begin16        # >> Call Site 14 <<
	.uleb128 .Ltmp884-.Ltmp883              #   Call between .Ltmp883 and .Ltmp884
	.uleb128 .Ltmp885-.Lfunc_begin16        #     jumps to .Ltmp885
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp886-.Lfunc_begin16        # >> Call Site 15 <<
	.uleb128 .Ltmp887-.Ltmp886              #   Call between .Ltmp886 and .Ltmp887
	.uleb128 .Ltmp888-.Lfunc_begin16        #     jumps to .Ltmp888
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp889-.Lfunc_begin16        # >> Call Site 16 <<
	.uleb128 .Ltmp890-.Ltmp889              #   Call between .Ltmp889 and .Ltmp890
	.uleb128 .Ltmp891-.Lfunc_begin16        #     jumps to .Ltmp891
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp890-.Lfunc_begin16        # >> Call Site 17 <<
	.uleb128 .Lfunc_end20-.Ltmp890          #   Call between .Ltmp890 and .Lfunc_end20
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	5
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZSt9terminatev)
	jirl	$ra, $ra, 0
.Lfunc_end21:
	.size	__clang_call_terminate, .Lfunc_end21-__clang_call_terminate
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv,"axG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv,comdat
	.weak	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv # -- Begin function _ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv
	.p2align	5
	.type	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv,@function
_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv: # @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	vld	$vr0, $a0, 16
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	ld.d	$s3, $a0, 16
	ld.d	$s0, $a0, 32
	ld.d	$s4, $a0, 40
	ld.d	$s1, $a0, 48
	ld.d	$s5, $a0, 72
	ld.d	$s2, $a0, 56
	addi.d	$s6, $s4, 8
	bgeu	$s6, $s5, .LBB22_3
	.p2align	4, , 16
.LBB22_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s6, 0
	addi.d	$a1, $a0, 568
.Ltmp892:
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_)
	jirl	$ra, $ra, 0
.Ltmp893:
# %bb.2:                                # %.noexc
                                        #   in Loop: Header=BB22_1 Depth=1
	addi.d	$s6, $s6, 8
	bltu	$s6, $s5, .LBB22_1
.LBB22_3:                               # %._crit_edge.i.i.i
	beq	$s4, $s5, .LBB22_5
# %bb.4:
.Ltmp895:
	move	$a0, $s3
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_)
	jirl	$ra, $ra, 0
.Ltmp896:
	b	.LBB22_6
.LBB22_5:
	move	$s2, $s3
.LBB22_6:                               # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_.exit.i
.Ltmp897:
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_)
	jirl	$ra, $ra, 0
.Ltmp898:
# %bb.7:                                # %.noexc2
	ld.d	$s1, $fp, 72
	bgeu	$s4, $s1, .LBB22_10
# %bb.8:                                # %.lr.ph.i.i.preheader
	move	$a1, $s4
	.p2align	4, , 16
.LBB22_9:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s2, $a1, 8
	ori	$a1, $zero, 568
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s2
	bltu	$s2, $s1, .LBB22_9
.LBB22_10:                              # %.loopexit
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $fp, 48
	st.d	$s0, $fp, 64
	st.d	$s4, $fp, 72
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB22_11:                              # %.loopexit.split-lp
.Ltmp899:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB22_12:                              # %.loopexit4
.Ltmp894:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end22:
	.size	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv, .Lfunc_end22-_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv,"aG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv,comdat
	.p2align	2, 0x0
GCC_except_table22:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Ltmp892-.Lfunc_begin17        # >> Call Site 1 <<
	.uleb128 .Ltmp893-.Ltmp892              #   Call between .Ltmp892 and .Ltmp893
	.uleb128 .Ltmp894-.Lfunc_begin17        #     jumps to .Ltmp894
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp895-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Ltmp898-.Ltmp895              #   Call between .Ltmp895 and .Ltmp898
	.uleb128 .Ltmp899-.Lfunc_begin17        #     jumps to .Ltmp899
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp898-.Lfunc_begin17        # >> Call Site 3 <<
	.uleb128 .Lfunc_end22-.Ltmp898          #   Call between .Ltmp898 and .Lfunc_end22
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_ # -- Begin function _ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_
	.p2align	5
	.type	_ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_,@function
_ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_: # @_ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	addi.d	$sp, $sp, -992
	.cfi_def_cfa_offset 992
	st.d	$ra, $sp, 984                   # 8-byte Folded Spill
	st.d	$fp, $sp, 976                   # 8-byte Folded Spill
	st.d	$s0, $sp, 968                   # 8-byte Folded Spill
	st.d	$s1, $sp, 960                   # 8-byte Folded Spill
	st.d	$s2, $sp, 952                   # 8-byte Folded Spill
	st.d	$s3, $sp, 944                   # 8-byte Folded Spill
	st.d	$s4, $sp, 936                   # 8-byte Folded Spill
	st.d	$s5, $sp, 928                   # 8-byte Folded Spill
	st.d	$s6, $sp, 920                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$a0, $a0, 520
	move	$s1, $a2
	move	$s0, $a1
	beqz	$a0, .LBB23_2
# %bb.1:
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB23_68
.LBB23_2:
	ld.d	$a0, $s0, 8
	ld.d	$a1, $s0, 0
	ori	$a2, $zero, 1
	bne	$a0, $a2, .LBB23_5
# %bb.3:                                # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	ld.bu	$a0, $a1, 0
	ori	$a2, $zero, 32
	bne	$a0, $a2, .LBB23_5
# %bb.4:                                # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.d	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.111)
	addi.d	$a3, $a0, %pc_lo12(.L.str.111)
	ori	$a4, $zero, 1
	move	$a0, $s1
	move	$a1, $zero
	ld.d	$s6, $sp, 920                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 928                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 936                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 944                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 952                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 960                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 968                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 976                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 984                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 992
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jr	$t8
.LBB23_5:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread173
	addi.d	$a0, $sp, 400
	ori	$a2, $zero, 8
	addi.d	$s2, $sp, 400
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 400
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.bu	$a0, $a0, 32
	andi	$a0, $a0, 5
	beqz	$a0, .LBB23_10
# %bb.6:
.Ltmp900:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp901:
# %bb.7:
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	addi.d	$s1, $sp, 24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB23_115
# %bb.8:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB23_21
# %bb.9:
	ld.bu	$a0, $s2, 67
	b	.LBB23_23
.LBB23_10:                              # %.lr.ph
	addi.d	$s3, $sp, 432
	addi.d	$s4, $s1, 16
	ori	$s5, $zero, 15
	b	.LBB23_13
	.p2align	4, , 16
.LBB23_11:                              # %.noexc
                                        #   in Loop: Header=BB23_13 Depth=1
	ld.d	$a1, $s1, 0
	ld.d	$a0, $sp, 400
.LBB23_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB23_13 Depth=1
	stx.b	$s6, $a1, $s2
	ld.d	$a1, $s1, 0
	addi.d	$a2, $s2, 1
	st.d	$a2, $s1, 8
	stx.b	$zero, $a1, $a2
	ld.d	$a0, $a0, -24
	ldx.bu	$a0, $s3, $a0
	andi	$a0, $a0, 5
	bnez	$a0, .LBB23_17
.LBB23_13:                              # =>This Inner Loop Header: Depth=1
.Ltmp959:
	addi.d	$a0, $sp, 400
	addi.d	$a1, $sp, 3
	pcaddu18i	$ra, %call36(_ZNSi3getERc)
	jirl	$ra, $ra, 0
.Ltmp960:
# %bb.14:                               #   in Loop: Header=BB23_13 Depth=1
	ld.d	$a0, $sp, 400
	ld.d	$a1, $a0, -24
	ldx.bu	$a1, $s3, $a1
	andi	$a1, $a1, 5
	bnez	$a1, .LBB23_17
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB23_13 Depth=1
	ld.d	$a1, $s1, 0
	ld.bu	$s6, $sp, 3
	ld.d	$a2, $s4, 0
	ld.d	$s2, $s1, 8
	xor	$a3, $a1, $s4
	sltui	$a3, $a3, 1
	masknez	$a2, $a2, $a3
	maskeqz	$a3, $s5, $a3
	or	$a2, $a3, $a2
	bltu	$s2, $a2, .LBB23_12
# %bb.16:                               #   in Loop: Header=BB23_13 Depth=1
.Ltmp961:
	ori	$a4, $zero, 1
	move	$a0, $s1
	move	$a1, $s2
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp962:
	b	.LBB23_11
.LBB23_17:                              # %._crit_edge
	ld.w	$a0, $s1, 8
	beqz	$a0, .LBB23_55
# %bb.18:
	addi.d	$a0, $sp, 416
.Ltmp964:
	pcaddu18i	$ra, %call36(_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv)
	jirl	$ra, $ra, 0
.Ltmp965:
# %bb.19:                               # %.noexc56
	bnez	$a0, .LBB23_67
# %bb.20:
	ld.d	$a0, $sp, 400
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 400
	add.d	$a0, $a1, $a0
	ld.w	$a1, $a0, 32
	ori	$a1, $a1, 4
.Ltmp966:
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
.Ltmp967:
	b	.LBB23_67
.LBB23_21:
.Ltmp903:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp904:
# %bb.22:                               # %.noexc59
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp905:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp906:
.LBB23_23:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp907:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp908:
# %bb.24:                               # %.noexc61
.Ltmp909:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp910:
# %bb.25:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp911:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.196)
	addi.d	$a1, $a0, %pc_lo12(.L.str.196)
	ori	$a2, $zero, 15
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp912:
# %bb.26:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB23_115
# %bb.27:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i64
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB23_29
# %bb.28:
	ld.bu	$a0, $s3, 67
	b	.LBB23_31
.LBB23_29:
.Ltmp913:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp914:
# %bb.30:                               # %.noexc69
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp915:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp916:
.LBB23_31:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i66
.Ltmp917:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp918:
# %bb.32:                               # %.noexc71
.Ltmp919:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp920:
# %bb.33:                               # %_ZNSolsEPFRSoS_E.exit19
.Ltmp921:
	pcalau12i	$a0, %pc_hi20(.L.str.197)
	addi.d	$a1, $a0, %pc_lo12(.L.str.197)
	ori	$a2, $zero, 39
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp922:
# %bb.34:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit20
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB23_115
# %bb.35:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i75
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB23_37
# %bb.36:
	ld.bu	$a0, $s2, 67
	b	.LBB23_39
.LBB23_37:
.Ltmp923:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp924:
# %bb.38:                               # %.noexc80
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp925:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp926:
.LBB23_39:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i77
.Ltmp927:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp928:
# %bb.40:                               # %.noexc82
.Ltmp929:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp930:
# %bb.41:                               # %_ZNSolsEPFRSoS_E.exit21
.Ltmp931:
	pcalau12i	$a0, %pc_hi20(.L.str.198)
	addi.d	$a1, $a0, %pc_lo12(.L.str.198)
	ori	$a2, $zero, 24
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp932:
# %bb.42:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit22
	ld.d	$a1, $s0, 0
	ld.d	$a2, $s0, 8
.Ltmp933:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp934:
# %bb.43:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB23_115
# %bb.44:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i86
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB23_46
# %bb.45:
	ld.bu	$a0, $s3, 67
	b	.LBB23_48
.LBB23_46:
.Ltmp935:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp936:
# %bb.47:                               # %.noexc91
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp937:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp938:
.LBB23_48:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i88
.Ltmp939:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp940:
# %bb.49:                               # %.noexc93
.Ltmp941:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp942:
# %bb.50:                               # %_ZNSolsEPFRSoS_E.exit23
	ld.d	$a0, $s0, 8
	bnez	$a0, .LBB23_63
# %bb.51:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit25.thread
.Ltmp943:
	pcalau12i	$a0, %pc_hi20(.L.str.199)
	addi.d	$a1, $a0, %pc_lo12(.L.str.199)
	ori	$a2, $zero, 25
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp944:
# %bb.52:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit26
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB23_115
# %bb.53:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i97
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB23_59
# %bb.54:
	ld.bu	$a0, $s0, 67
	b	.LBB23_61
.LBB23_55:
.Ltmp969:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp970:
# %bb.56:
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	addi.d	$s1, $sp, 24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB23_117
# %bb.57:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i108
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB23_69
# %bb.58:
	ld.bu	$a0, $s2, 67
	b	.LBB23_71
.LBB23_59:
.Ltmp945:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp946:
# %bb.60:                               # %.noexc102
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp947:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp948:
.LBB23_61:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i99
.Ltmp949:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp950:
# %bb.62:                               # %.noexc104
.Ltmp951:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp952:
.LBB23_63:                              # %_ZNSolsEPFRSoS_E.exit27
	ori	$a0, $zero, 2
	st.w	$a0, $sp, 4
.Ltmp953:
	addi.d	$a1, $sp, 8
	addi.d	$a2, $sp, 4
	addi.d	$s0, $sp, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp954:
.LBB23_64:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 8
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 104
	st.d	$a2, $sp, 24
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 120
	st.d	$a1, $sp, 32
	beq	$a0, $a2, .LBB23_66
# %bb.65:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB23_66:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 32
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 8
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 8
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 16
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
.LBB23_67:
	addi.d	$a0, $sp, 400
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB23_68:
	ld.d	$s6, $sp, 920                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 928                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 936                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 944                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 952                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 960                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 968                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 976                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 984                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 992
	ret
.LBB23_69:
.Ltmp972:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp973:
# %bb.70:                               # %.noexc113
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp974:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp975:
.LBB23_71:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i110
.Ltmp976:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp977:
# %bb.72:                               # %.noexc115
.Ltmp978:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp979:
# %bb.73:                               # %_ZNSolsEPFRSoS_E.exit29
.Ltmp980:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.196)
	addi.d	$a1, $a0, %pc_lo12(.L.str.196)
	ori	$a2, $zero, 15
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp981:
# %bb.74:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit31
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB23_117
# %bb.75:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i119
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB23_77
# %bb.76:
	ld.bu	$a0, $s3, 67
	b	.LBB23_79
.LBB23_77:
.Ltmp982:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp983:
# %bb.78:                               # %.noexc124
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp984:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp985:
.LBB23_79:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i121
.Ltmp986:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp987:
# %bb.80:                               # %.noexc126
.Ltmp988:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp989:
# %bb.81:                               # %_ZNSolsEPFRSoS_E.exit33
.Ltmp990:
	pcalau12i	$a0, %pc_hi20(.L.str.200)
	addi.d	$a1, $a0, %pc_lo12(.L.str.200)
	ori	$a2, $zero, 30
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp991:
# %bb.82:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit35
	ld.d	$a1, $s0, 0
	ld.d	$a2, $s0, 8
.Ltmp992:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp993:
# %bb.83:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit37
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB23_117
# %bb.84:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i130
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB23_86
# %bb.85:
	ld.bu	$a0, $s2, 67
	b	.LBB23_88
.LBB23_86:
.Ltmp994:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp995:
# %bb.87:                               # %.noexc135
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp996:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp997:
.LBB23_88:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i132
.Ltmp998:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp999:
# %bb.89:                               # %.noexc137
.Ltmp1000:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1001:
# %bb.90:                               # %_ZNSolsEPFRSoS_E.exit39
.Ltmp1002:
	pcalau12i	$a0, %pc_hi20(.L.str.201)
	addi.d	$a1, $a0, %pc_lo12(.L.str.201)
	ori	$a2, $zero, 56
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1003:
# %bb.91:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit41
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB23_117
# %bb.92:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i141
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB23_94
# %bb.93:
	ld.bu	$a0, $s0, 67
	b	.LBB23_96
.LBB23_94:
.Ltmp1004:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1005:
# %bb.95:                               # %.noexc146
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp1006:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp1007:
.LBB23_96:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i143
.Ltmp1008:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1009:
# %bb.97:                               # %.noexc148
.Ltmp1010:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1011:
# %bb.98:                               # %_ZNSolsEPFRSoS_E.exit43
.Ltmp1012:
	pcalau12i	$a0, %pc_hi20(.L.str.202)
	addi.d	$a1, $a0, %pc_lo12(.L.str.202)
	ori	$a2, $zero, 33
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1013:
# %bb.99:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit45
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB23_117
# %bb.100:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i152
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB23_102
# %bb.101:
	ld.bu	$a0, $s0, 67
	b	.LBB23_104
.LBB23_102:
.Ltmp1014:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1015:
# %bb.103:                              # %.noexc157
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp1016:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp1017:
.LBB23_104:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i154
.Ltmp1018:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1019:
# %bb.105:                              # %.noexc159
.Ltmp1020:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1021:
# %bb.106:                              # %_ZNSolsEPFRSoS_E.exit47
.Ltmp1022:
	pcalau12i	$a0, %pc_hi20(.L.str.203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.203)
	ori	$a2, $zero, 74
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1023:
# %bb.107:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit49
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB23_117
# %bb.108:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i163
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB23_110
# %bb.109:
	ld.bu	$a0, $s0, 67
	b	.LBB23_112
.LBB23_110:
.Ltmp1024:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1025:
# %bb.111:                              # %.noexc168
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp1026:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp1027:
.LBB23_112:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i165
.Ltmp1028:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1029:
# %bb.113:                              # %.noexc170
.Ltmp1030:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1031:
# %bb.114:                              # %_ZNSolsEPFRSoS_E.exit51
	ori	$a0, $zero, 2
	st.w	$a0, $sp, 4
.Ltmp1032:
	addi.d	$a1, $sp, 8
	addi.d	$a2, $sp, 4
	addi.d	$s0, $sp, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1033:
	b	.LBB23_64
.LBB23_115:                             # %.invoke
.Ltmp956:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp957:
# %bb.116:                              # %.cont
.LBB23_117:                             # %.invoke183
.Ltmp1035:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1036:
# %bb.118:                              # %.cont184
.LBB23_119:
.Ltmp1034:
	b	.LBB23_128
.LBB23_120:
.Ltmp971:
	b	.LBB23_126
.LBB23_121:                             # %.loopexit.split-lp
.Ltmp968:
	b	.LBB23_126
.LBB23_122:
.Ltmp955:
	b	.LBB23_128
.LBB23_123:
.Ltmp902:
	b	.LBB23_126
.LBB23_124:
.Ltmp1037:
	b	.LBB23_128
.LBB23_125:                             # %.loopexit
.Ltmp963:
.LBB23_126:
	move	$fp, $a0
	addi.d	$a0, $sp, 400
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB23_127:
.Ltmp958:
.LBB23_128:
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 400
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end23:
	.size	_ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_, .Lfunc_end23-_ZN2PP11PowerParser16read_into_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table23:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Lfunc_begin18-.Lfunc_begin18  # >> Call Site 1 <<
	.uleb128 .Ltmp900-.Lfunc_begin18        #   Call between .Lfunc_begin18 and .Ltmp900
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp900-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Ltmp901-.Ltmp900              #   Call between .Ltmp900 and .Ltmp901
	.uleb128 .Ltmp902-.Lfunc_begin18        #     jumps to .Ltmp902
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp959-.Lfunc_begin18        # >> Call Site 3 <<
	.uleb128 .Ltmp962-.Ltmp959              #   Call between .Ltmp959 and .Ltmp962
	.uleb128 .Ltmp963-.Lfunc_begin18        #     jumps to .Ltmp963
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp964-.Lfunc_begin18        # >> Call Site 4 <<
	.uleb128 .Ltmp967-.Ltmp964              #   Call between .Ltmp964 and .Ltmp967
	.uleb128 .Ltmp968-.Lfunc_begin18        #     jumps to .Ltmp968
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp903-.Lfunc_begin18        # >> Call Site 5 <<
	.uleb128 .Ltmp944-.Ltmp903              #   Call between .Ltmp903 and .Ltmp944
	.uleb128 .Ltmp958-.Lfunc_begin18        #     jumps to .Ltmp958
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp969-.Lfunc_begin18        # >> Call Site 6 <<
	.uleb128 .Ltmp970-.Ltmp969              #   Call between .Ltmp969 and .Ltmp970
	.uleb128 .Ltmp971-.Lfunc_begin18        #     jumps to .Ltmp971
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp945-.Lfunc_begin18        # >> Call Site 7 <<
	.uleb128 .Ltmp952-.Ltmp945              #   Call between .Ltmp945 and .Ltmp952
	.uleb128 .Ltmp958-.Lfunc_begin18        #     jumps to .Ltmp958
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp953-.Lfunc_begin18        # >> Call Site 8 <<
	.uleb128 .Ltmp954-.Ltmp953              #   Call between .Ltmp953 and .Ltmp954
	.uleb128 .Ltmp955-.Lfunc_begin18        #     jumps to .Ltmp955
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp954-.Lfunc_begin18        # >> Call Site 9 <<
	.uleb128 .Ltmp972-.Ltmp954              #   Call between .Ltmp954 and .Ltmp972
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp972-.Lfunc_begin18        # >> Call Site 10 <<
	.uleb128 .Ltmp1031-.Ltmp972             #   Call between .Ltmp972 and .Ltmp1031
	.uleb128 .Ltmp1037-.Lfunc_begin18       #     jumps to .Ltmp1037
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1032-.Lfunc_begin18       # >> Call Site 11 <<
	.uleb128 .Ltmp1033-.Ltmp1032            #   Call between .Ltmp1032 and .Ltmp1033
	.uleb128 .Ltmp1034-.Lfunc_begin18       #     jumps to .Ltmp1034
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp956-.Lfunc_begin18        # >> Call Site 12 <<
	.uleb128 .Ltmp957-.Ltmp956              #   Call between .Ltmp956 and .Ltmp957
	.uleb128 .Ltmp958-.Lfunc_begin18        #     jumps to .Ltmp958
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1035-.Lfunc_begin18       # >> Call Site 13 <<
	.uleb128 .Ltmp1036-.Ltmp1035            #   Call between .Ltmp1035 and .Ltmp1036
	.uleb128 .Ltmp1037-.Lfunc_begin18       #     jumps to .Ltmp1037
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1036-.Lfunc_begin18       # >> Call Site 14 <<
	.uleb128 .Lfunc_end23-.Ltmp1036         #   Call between .Ltmp1036 and .Lfunc_end23
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ld.d	$a0, $a0, 520
	beqz	$a0, .LBB24_27
# %bb.1:
	move	$fp, $a1
	ld.w	$a1, $a0, 4
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB24_27
# %bb.2:
	ld.w	$a1, $a0, 8
	ld.w	$a2, $a0, 12
	st.w	$zero, $sp, 12
	bne	$a1, $a2, .LBB24_4
# %bb.3:
	ld.d	$a1, $fp, 8
	st.w	$a1, $sp, 12
.LBB24_4:
	addi.d	$a1, $sp, 12
	ori	$a2, $zero, 4
	pcaddu18i	$ra, %call36(_ZN2PP4Comm9broadcastEPci)
	jirl	$ra, $ra, 0
	ld.w	$s2, $sp, 12
	bltz	$s2, .LBB24_28
# %bb.5:                                # %_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_.exit.i
	beqz	$s2, .LBB24_14
# %bb.6:                                # %_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_.exit
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	add.d	$s3, $a0, $s2
	ori	$a1, $zero, 97
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 520
	ld.w	$a1, $a0, 8
	ld.w	$a2, $a0, 12
	bne	$a1, $a2, .LBB24_20
# %bb.7:                                # %iter.check
	ld.d	$a1, $fp, 0
	move	$a3, $zero
	ori	$a4, $zero, 16
	bstrpick.d	$a2, $s2, 31, 0
	bltu	$s2, $a4, .LBB24_19
# %bb.8:                                # %iter.check
	sub.d	$a5, $s1, $a1
	ori	$a4, $zero, 32
	bltu	$a5, $a4, .LBB24_19
# %bb.9:                                # %vector.main.loop.iter.check
	bgeu	$s2, $a4, .LBB24_15
# %bb.10:
	move	$a3, $zero
.LBB24_11:                              # %vec.epilog.ph
	move	$a4, $a3
	bstrpick.d	$a3, $a2, 30, 4
	slli.d	$a3, $a3, 4
	.p2align	4, , 16
.LBB24_12:                              # %vec.epilog.vector.body
                                        # =>This Inner Loop Header: Depth=1
	vldx	$vr0, $a1, $a4
	vstx	$vr0, $s1, $a4
	addi.d	$a4, $a4, 16
	bne	$a3, $a4, .LBB24_12
# %bb.13:                               # %vec.epilog.middle.block
	bne	$a3, $a2, .LBB24_19
	b	.LBB24_20
.LBB24_14:                              # %_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_.exit.thread
	ld.d	$a0, $s0, 520
	move	$s1, $zero
	move	$s3, $zero
	b	.LBB24_20
.LBB24_15:                              # %vector.ph
	move	$a4, $zero
	bstrpick.d	$a3, $a2, 30, 5
	slli.d	$a3, $a3, 5
	.p2align	4, , 16
.LBB24_16:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vldx	$vr0, $a1, $a4
	add.d	$a5, $a1, $a4
	vld	$vr1, $a5, 16
	add.d	$a5, $s1, $a4
	vstx	$vr0, $s1, $a4
	addi.d	$a4, $a4, 32
	vst	$vr1, $a5, 16
	bne	$a3, $a4, .LBB24_16
# %bb.17:                               # %middle.block
	beq	$a3, $a2, .LBB24_20
# %bb.18:                               # %vec.epilog.iter.check
	andi	$a4, $a2, 16
	bnez	$a4, .LBB24_11
	.p2align	4, , 16
.LBB24_19:                              # %vec.epilog.scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	ldx.b	$a4, $a1, $a3
	stx.b	$a4, $s1, $a3
	addi.d	$a3, $a3, 1
	bne	$a2, $a3, .LBB24_19
.LBB24_20:                              # %.loopexit
.Ltmp1038:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4Comm9broadcastEPci)
	jirl	$ra, $ra, 0
.Ltmp1039:
# %bb.21:
	ld.d	$a0, $s0, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	beq	$a1, $a0, .LBB24_26
# %bb.22:
	ld.w	$a1, $sp, 12
.Ltmp1040:
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc)
	jirl	$ra, $ra, 0
.Ltmp1041:
# %bb.23:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEm.exit.preheader
	ld.w	$a0, $sp, 12
	blez	$a0, .LBB24_26
# %bb.24:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEm.exit.preheader55
	move	$a0, $zero
	.p2align	4, , 16
.LBB24_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEm.exit
                                        # =>This Inner Loop Header: Depth=1
	ldx.b	$a1, $s1, $a0
	ld.d	$a2, $fp, 0
	stx.b	$a1, $a2, $a0
	ld.w	$a1, $sp, 12
	addi.d	$a0, $a0, 1
	blt	$a0, $a1, .LBB24_25
.LBB24_26:                              # %_ZNSt6vectorIcSaIcEED2Ev.exit23
	sub.d	$a1, $s3, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB24_27:
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB24_28:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB24_29:                              # %_ZNSt6vectorIcSaIcEED2Ev.exit
.Ltmp1042:
	move	$fp, $a0
	sub.d	$a1, $s3, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end24:
	.size	_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end24-_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table24:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19  # >> Call Site 1 <<
	.uleb128 .Ltmp1038-.Lfunc_begin19       #   Call between .Lfunc_begin19 and .Ltmp1038
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1038-.Lfunc_begin19       # >> Call Site 2 <<
	.uleb128 .Ltmp1041-.Ltmp1038            #   Call between .Ltmp1038 and .Ltmp1041
	.uleb128 .Ltmp1042-.Lfunc_begin19       #     jumps to .Ltmp1042
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1041-.Lfunc_begin19       # >> Call Site 3 <<
	.uleb128 .Lfunc_end24-.Ltmp1041         #   Call between .Ltmp1041 and .Lfunc_end24
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ # -- Begin function _ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.p2align	5
	.type	_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_,@function
_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_: # @_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -2032
	.cfi_def_cfa_offset 2032
	st.d	$ra, $sp, 2024                  # 8-byte Folded Spill
	st.d	$fp, $sp, 2016                  # 8-byte Folded Spill
	st.d	$s0, $sp, 2008                  # 8-byte Folded Spill
	st.d	$s1, $sp, 2000                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1992                  # 8-byte Folded Spill
	st.d	$s3, $sp, 1984                  # 8-byte Folded Spill
	st.d	$s4, $sp, 1976                  # 8-byte Folded Spill
	st.d	$s5, $sp, 1968                  # 8-byte Folded Spill
	st.d	$s6, $sp, 1960                  # 8-byte Folded Spill
	st.d	$s7, $sp, 1952                  # 8-byte Folded Spill
	st.d	$s8, $sp, 1944                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 2272
	st.d	$a2, $sp, 112                   # 8-byte Folded Spill
	st.d	$a1, $sp, 120                   # 8-byte Folded Spill
	move	$s4, $zero
	st.d	$zero, $sp, 208                 # 8-byte Folded Spill
	st.d	$zero, $sp, 32                  # 8-byte Folded Spill
	ori	$a1, $zero, 2168
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2152
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	ori	$a1, $zero, 2160
	add.d	$a1, $sp, $a1
	st.d	$zero, $a1, 0
	ori	$a1, $zero, 2168
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	ori	$a1, $zero, 2136
	add.d	$a1, $sp, $a1
	move	$s7, $a1
	ori	$a2, $zero, 2120
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	ori	$a1, $zero, 2128
	add.d	$a1, $sp, $a1
	st.d	$zero, $a1, 0
	ori	$a1, $zero, 2136
	add.d	$a1, $sp, $a1
	st.b	$zero, $a1, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	addi.d	$a2, $a0, 592
	st.d	$a2, $sp, 128                   # 8-byte Folded Spill
	ld.d	$a2, $a1, 16
	st.d	$a2, $sp, 192                   # 8-byte Folded Spill
	ld.d	$a2, $a1, 24
	st.d	$a2, $sp, 200                   # 8-byte Folded Spill
	ld.d	$a2, $a1, 32
	st.d	$a2, $sp, 104                   # 8-byte Folded Spill
	ld.d	$a2, $a1, 40
	st.d	$a2, $sp, 96                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 8
	st.d	$a2, $sp, 88                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 48
	st.d	$a2, $sp, 80                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 0
	st.d	$a2, $sp, 152                   # 8-byte Folded Spill
	ld.d	$a2, $a1, 64
	st.d	$a2, $sp, 144                   # 8-byte Folded Spill
	ld.d	$a1, $a1, 72
	st.d	$a1, $sp, 136                   # 8-byte Folded Spill
	ori	$a1, $zero, 0
	lu32i.d	$a1, -1
	st.d	$a1, $sp, 224                   # 8-byte Folded Spill
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 160                  # 16-byte Folded Spill
	addi.d	$a1, $a0, 776
	st.d	$a1, $sp, 72                    # 8-byte Folded Spill
	addi.d	$a1, $a0, 680
	st.d	$a1, $sp, 64                    # 8-byte Folded Spill
	addi.d	$a1, $a0, 824
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	addi.d	$a1, $a0, 728
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	st.d	$a0, $sp, 216                   # 8-byte Folded Spill
	addi.d	$a0, $a0, 736
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	ori	$s5, $zero, 15
	b	.LBB25_2
	.p2align	4, , 16
.LBB25_1:                               # %_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri.exit.thread
                                        #   in Loop: Header=BB25_2 Depth=1
	blt	$s6, $s2, .LBB25_404
.LBB25_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB25_8 Depth 2
                                        #     Child Loop BB25_25 Depth 2
                                        #       Child Loop BB25_26 Depth 3
                                        #         Child Loop BB25_30 Depth 4
                                        #       Child Loop BB25_95 Depth 3
                                        #       Child Loop BB25_129 Depth 3
                                        #       Child Loop BB25_250 Depth 3
	ori	$a0, $zero, 2160
	add.d	$a0, $sp, $a0
	ld.d	$a2, $a0, 0
.Ltmp1043:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1044:
	ld.d	$s2, $sp, 112                   # 8-byte Folded Reload
# %bb.3:                                # %.noexc126
                                        #   in Loop: Header=BB25_2 Depth=1
	ld.w	$fp, $s2, 8
	bge	$s4, $fp, .LBB25_350
# %bb.4:                                # %.preheader.i
                                        #   in Loop: Header=BB25_2 Depth=1
	addi.w	$s0, $s4, 1
	b	.LBB25_8
	.p2align	4, , 16
.LBB25_5:                               # %.noexc127
                                        #   in Loop: Header=BB25_8 Depth=2
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
.LBB25_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit.i
                                        #   in Loop: Header=BB25_8 Depth=2
	stx.b	$s1, $a0, $s3
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $s3, 1
	ori	$a2, $zero, 2160
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
.LBB25_7:                               #   in Loop: Header=BB25_8 Depth=2
	addi.d	$s4, $s4, 1
	addi.w	$s0, $s0, 1
	beq	$fp, $s4, .LBB25_12
.LBB25_8:                               #   Parent Loop BB25_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, 0
	ldx.bu	$s1, $a0, $s4
	ori	$a0, $zero, 13
	beq	$s1, $a0, .LBB25_7
# %bb.9:                                #   in Loop: Header=BB25_8 Depth=2
	ori	$a0, $zero, 10
	beq	$s1, $a0, .LBB25_13
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i
                                        #   in Loop: Header=BB25_8 Depth=2
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2168
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 2160
	add.d	$a2, $sp, $a2
	ld.d	$s3, $a2, 0
	ori	$a2, $zero, 2168
	add.d	$a2, $sp, $a2
	xor	$a2, $a0, $a2
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s5, $a2
	or	$a1, $a2, $a1
	bltu	$s3, $a1, .LBB25_6
# %bb.11:                               #   in Loop: Header=BB25_8 Depth=2
.Ltmp1060:
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ori	$a4, $zero, 1
	move	$a1, $s3
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1061:
	b	.LBB25_5
	.p2align	4, , 16
.LBB25_12:                              #   in Loop: Header=BB25_2 Depth=1
	move	$s4, $fp
	b	.LBB25_14
	.p2align	4, , 16
.LBB25_13:                              #   in Loop: Header=BB25_2 Depth=1
	move	$s4, $s0
.LBB25_14:                              # %_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri.exit
                                        #   in Loop: Header=BB25_2 Depth=1
	ld.d	$fp, $sp, 216                   # 8-byte Folded Reload
	ld.w	$a0, $fp, 672
	ld.d	$a1, $fp, 656
	ld.d	$s6, $fp, 640
	addi.d	$a0, $a0, 1
	addi.d	$a1, $a1, -32
	st.w	$a0, $fp, 672
	ori	$a2, $zero, 16
	beq	$s6, $a1, .LBB25_21
# %bb.15:                               #   in Loop: Header=BB25_2 Depth=1
	addi.d	$a0, $s6, 16
	st.d	$a0, $s6, 0
	ori	$a1, $zero, 2160
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a3, $zero, 2152
	add.d	$a3, $sp, $a3
	ld.d	$s3, $a3, 0
	st.d	$a1, $sp, 1288
	bltu	$a1, $a2, .LBB25_18
# %bb.16:                               # %.noexc.i.i
                                        #   in Loop: Header=BB25_2 Depth=1
.Ltmp1063:
	addi.d	$a1, $sp, 1288
	move	$a0, $s6
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1064:
# %bb.17:                               # %.noexc129
                                        #   in Loop: Header=BB25_2 Depth=1
	st.d	$a0, $s6, 0
	ld.d	$a1, $sp, 1288
	st.d	$a1, $s6, 16
	ld.d	$fp, $sp, 216                   # 8-byte Folded Reload
.LBB25_18:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB25_2 Depth=1
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB25_23
# %bb.19:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB25_2 Depth=1
	bnez	$a1, .LBB25_22
# %bb.20:                               #   in Loop: Header=BB25_2 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_23
	.p2align	4, , 16
.LBB25_21:                              #   in Loop: Header=BB25_2 Depth=1
.Ltmp1065:
	ori	$a0, $zero, 2152
	add.d	$a1, $sp, $a0
	ld.d	$a0, $sp, 128                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1066:
	b	.LBB25_24
	.p2align	4, , 16
.LBB25_22:                              #   in Loop: Header=BB25_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB25_2 Depth=1
	ld.d	$a0, $sp, 1288
	st.d	$a0, $s6, 8
	ld.d	$a0, $fp, 640
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 640
.LBB25_24:                              # %.outer.preheader
                                        #   in Loop: Header=BB25_2 Depth=1
	move	$s0, $zero
	ld.d	$a0, $sp, 208                   # 8-byte Folded Reload
	addi.w	$a0, $a0, 1
	st.d	$a0, $sp, 208                   # 8-byte Folded Spill
.LBB25_25:                              # %.outer
                                        #   Parent Loop BB25_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB25_26 Depth 3
                                        #         Child Loop BB25_30 Depth 4
                                        #       Child Loop BB25_95 Depth 3
                                        #       Child Loop BB25_129 Depth 3
                                        #       Child Loop BB25_250 Depth 3
	ori	$a0, $zero, 2128
	add.d	$a0, $sp, $a0
	ld.d	$a2, $a0, 0
	.p2align	4, , 16
.LBB25_26:                              #   Parent Loop BB25_2 Depth=1
                                        #     Parent Loop BB25_25 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB25_30 Depth 4
.Ltmp1068:
	move	$s6, $s0
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1069:
# %bb.27:                               # %.noexc144
                                        #   in Loop: Header=BB25_26 Depth=3
	ori	$a0, $zero, 2160
	add.d	$a0, $sp, $a0
	ld.w	$s2, $a0, 0
	bge	$s6, $s2, .LBB25_1
# %bb.28:                               # %.preheader.i132
                                        #   in Loop: Header=BB25_26 Depth=3
	move	$s8, $s4
	move	$s1, $zero
	slli.d	$a0, $s2, 32
	ld.d	$a1, $sp, 224                   # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
	srai.d	$fp, $a0, 32
	addi.w	$s0, $s6, 1
	st.d	$s6, $sp, 232                   # 8-byte Folded Spill
	b	.LBB25_30
	.p2align	4, , 16
.LBB25_29:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit.i141
                                        #   in Loop: Header=BB25_30 Depth=4
	stx.b	$s4, $a0, $s3
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $s3, 1
	ori	$a2, $zero, 2128
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
	addi.d	$s6, $s6, 1
	addi.w	$s0, $s0, 1
	beq	$s2, $s6, .LBB25_42
.LBB25_30:                              #   Parent Loop BB25_2 Depth=1
                                        #     Parent Loop BB25_25 Depth=2
                                        #       Parent Loop BB25_26 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ldx.bu	$s4, $a0, $s6
	bge	$s6, $fp, .LBB25_33
# %bb.31:                               #   in Loop: Header=BB25_30 Depth=4
	ori	$a1, $zero, 47
	bne	$s4, $a1, .LBB25_33
# %bb.32:                               #   in Loop: Header=BB25_30 Depth=4
	add.d	$a0, $a0, $s6
	ld.b	$a0, $a0, 1
	andi	$a0, $a0, 255
	addi.d	$a0, $a0, -47
	sltui	$a0, $a0, 1
	or	$s1, $s1, $a0
	b	.LBB25_39
	.p2align	4, , 16
.LBB25_33:                              #   in Loop: Header=BB25_30 Depth=4
	andi	$a0, $s1, 1
	beqz	$a0, .LBB25_35
# %bb.34:                               #   in Loop: Header=BB25_30 Depth=4
	ori	$s1, $zero, 1
	b	.LBB25_39
	.p2align	4, , 16
.LBB25_35:                              # %switch.early.test.i
                                        #   in Loop: Header=BB25_30 Depth=4
	ori	$s1, $zero, 1
	ori	$a0, $zero, 33
	beq	$s4, $a0, .LBB25_39
# %bb.36:                               # %switch.early.test.i
                                        #   in Loop: Header=BB25_30 Depth=4
	ori	$a0, $zero, 35
	beq	$s4, $a0, .LBB25_39
# %bb.37:                               # %switch.early.test.i
                                        #   in Loop: Header=BB25_30 Depth=4
	ori	$a0, $zero, 59
	beq	$s4, $a0, .LBB25_43
# %bb.38:                               # %.thread.fold.split.i
                                        #   in Loop: Header=BB25_30 Depth=4
	move	$s1, $zero
	.p2align	4, , 16
.LBB25_39:                              # %.thread.i
                                        #   in Loop: Header=BB25_30 Depth=4
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2136
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 2128
	add.d	$a2, $sp, $a2
	ld.d	$s3, $a2, 0
	xor	$a2, $a0, $s7
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s5, $a2
	or	$a1, $a2, $a1
	bltu	$s3, $a1, .LBB25_29
# %bb.40:                               #   in Loop: Header=BB25_30 Depth=4
.Ltmp1071:
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ori	$a4, $zero, 1
	move	$a1, $s3
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1072:
# %bb.41:                               # %.noexc145
                                        #   in Loop: Header=BB25_30 Depth=4
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	b	.LBB25_29
	.p2align	4, , 16
.LBB25_42:                              #   in Loop: Header=BB25_26 Depth=3
	move	$s0, $s2
.LBB25_43:                              # %_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri.exit
                                        #   in Loop: Header=BB25_26 Depth=3
.Ltmp1074:
	ori	$a0, $zero, 2120
	add.d	$a1, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1075:
# %bb.44:                               #   in Loop: Header=BB25_26 Depth=3
	move	$s4, $s8
	ori	$a0, $zero, 2128
	add.d	$a0, $sp, $a0
	ld.d	$a2, $a0, 0
	slli.d	$a0, $a2, 32
	beqz	$a0, .LBB25_26
# %bb.45:                               #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 1856
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseC2Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt9basic_iosIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt9basic_iosIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 1856
	ori	$a0, $zero, 2072
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2080
	add.d	$a0, $sp, $a0
	st.h	$zero, $a0, 0
	ori	$a0, $zero, 2088
	add.d	$a0, $sp, $a0
	vld	$vr0, $sp, 160                  # 16-byte Folded Reload
	vst	$vr0, $a0, 0
	vst	$vr0, $a0, 16
	ld.d	$a0, $sp, 192                   # 8-byte Folded Reload
	st.d	$a0, $sp, 1728
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 200                   # 8-byte Folded Reload
	addi.d	$a2, $sp, 1728
	stx.d	$a1, $a0, $a2
	ld.d	$a0, $sp, 1728
	st.d	$zero, $sp, 1736
	ld.d	$a0, $a0, -24
	add.d	$a0, $a2, $a0
.Ltmp1077:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp1078:
# %bb.46:                               # %.noexc.i146
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 104                   # 8-byte Folded Reload
	st.d	$a0, $sp, 1744
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 1744
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	stx.d	$a2, $a1, $a0
	ld.d	$a0, $sp, 1744
	ld.d	$a0, $a0, -24
	add.d	$a0, $a1, $a0
.Ltmp1080:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp1081:
# %bb.47:                               #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$a0, $a0, -24
	pcalau12i	$a1, %got_pc_hi20(_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	addi.d	$fp, $sp, 1728
	stx.d	$a2, $a0, $fp
	addi.d	$a0, $a1, 24
	st.d	$a0, $sp, 1728
	addi.d	$a0, $a1, 104
	pcalau12i	$a2, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	st.d	$a0, $sp, 1856
	addi.d	$a0, $a1, 64
	st.d	$a0, $sp, 1744
	addi.d	$a0, $a2, 16
	st.d	$a0, $sp, 184                   # 8-byte Folded Spill
	st.d	$a0, $sp, 1752
	addi.d	$a0, $sp, 1760
	vld	$vr0, $sp, 160                  # 16-byte Folded Reload
	vst	$vr0, $a0, 0
	vst	$vr0, $a0, 16
	vst	$vr0, $a0, 32
	addi.d	$a0, $sp, 1808
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	addi.d	$s1, $a0, 16
	st.d	$s1, $sp, 1752
	ori	$a0, $zero, 24
	st.w	$a0, $sp, 1816
	ld.d	$a0, $sp, 1728
	addi.d	$a1, $sp, 1840
	st.d	$a1, $sp, 1824
	st.d	$zero, $sp, 1832
	st.b	$zero, $sp, 1840
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
.Ltmp1083:
	addi.d	$a1, $sp, 1752
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp1084:
	ld.d	$fp, $sp, 216                   # 8-byte Folded Reload
# %bb.48:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	ori	$a0, $zero, 2128
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ld.d	$s3, $a0, 0
	st.w	$zero, $sp, 1724
	addi.d	$a0, $sp, 1272
	st.d	$a0, $sp, 1256
	st.d	$a1, $sp, 736
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB25_51
# %bb.49:                               # %.noexc.i148
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1086:
	addi.d	$a0, $sp, 1256
	addi.d	$a1, $sp, 736
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1087:
# %bb.50:                               # %.noexc149
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 736
	st.d	$a0, $sp, 1256
	st.d	$a1, $sp, 1272
.LBB25_51:                              # %._crit_edge.i.i147
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.w	$a2, $zero, -1
	move	$s8, $a2
	beq	$a1, $a2, .LBB25_55
# %bb.52:                               # %._crit_edge.i.i147
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a1, .LBB25_54
# %bb.53:                               #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_55
.LBB25_54:                              #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_55:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 736
	ld.w	$s6, $fp, 672
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	st.d	$a0, $sp, 1264
	addi.d	$a0, $sp, 1240
	st.d	$a0, $sp, 1224
	st.d	$a1, $sp, 736
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB25_58
# %bb.56:                               # %.noexc.i151
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1089:
	addi.d	$a0, $sp, 1224
	addi.d	$a1, $sp, 736
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1090:
# %bb.57:                               # %.noexc152
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 736
	st.d	$a0, $sp, 1224
	st.d	$a1, $sp, 1240
.LBB25_58:                              # %._crit_edge.i.i150
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a1, $s8, .LBB25_62
# %bb.59:                               # %._crit_edge.i.i150
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a1, .LBB25_61
# %bb.60:                               #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_62
.LBB25_61:                              #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_62:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 736
	st.d	$a0, $sp, 1232
.Ltmp1092:
	addi.d	$a0, $sp, 1724
	st.d	$a0, $sp, 8
	addi.d	$a0, $sp, 1288
	addi.d	$a1, $sp, 1256
	addi.d	$a7, $sp, 1224
	addi.d	$a2, $sp, 1728
	st.d	$a2, $sp, 0
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 128                   # 8-byte Folded Reload
	move	$a5, $s6
	ld.d	$a6, $sp, 208                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3CmdC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp1093:
# %bb.63:                               #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 1224
	addi.d	$a1, $sp, 1240
	beq	$a0, $a1, .LBB25_65
# %bb.64:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1240
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_65:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 1256
	addi.d	$a1, $sp, 1272
	beq	$a0, $a1, .LBB25_67
# %bb.66:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i154
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1272
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_67:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit156
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1095:
	addi.d	$a1, $sp, 1728
	addi.d	$a2, $sp, 1724
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1096:
# %bb.68:                               #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1520
	ld.d	$a0, $sp, 1488
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $sp, 1496
	ld.d	$a4, $sp, 1504
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $sp, 1480
	ld.d	$a1, $sp, 1464
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	blez	$a2, .LBB25_102
# %bb.69:                               #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 1472
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB25_72
# %bb.70:                               #   in Loop: Header=BB25_25 Depth=2
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB25_74
# %bb.71:                               #   in Loop: Header=BB25_25 Depth=2
	srli.d	$a1, $a2, 2
	b	.LBB25_73
.LBB25_72:                              #   in Loop: Header=BB25_25 Depth=2
	srai.d	$a1, $a3, 9
.LBB25_73:                              #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB25_74:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 752
	st.d	$a0, $sp, 736
	ld.d	$a2, $a1, 8
	ld.d	$s3, $a1, 0
	st.d	$a2, $sp, 336
	ori	$a1, $zero, 16
	bltu	$a2, $a1, .LBB25_77
# %bb.75:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1097:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 336
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1098:
# %bb.76:                               # %.noexc159
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 336
	st.d	$a0, $sp, 736
	st.d	$a2, $sp, 752
.LBB25_77:                              # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a2, $s8, .LBB25_81
# %bb.78:                               # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a2, .LBB25_80
# %bb.79:                               #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_81
.LBB25_80:                              #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_81:                              # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 336
	ld.d	$s3, $sp, 736
	st.d	$a0, $sp, 744
	ori	$a1, $zero, 19
	bne	$a0, $a1, .LBB25_84
# %bb.82:                               #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.5)
	addi.d	$a1, $a0, %pc_lo12(.L.str.5)
	ori	$a2, $zero, 19
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$fp, $a0, 1
	addi.d	$a0, $sp, 752
	beq	$s3, $a0, .LBB25_85
.LBB25_83:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit162
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 752
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	bnez	$fp, .LBB25_86
	b	.LBB25_102
.LBB25_84:                              #   in Loop: Header=BB25_25 Depth=2
	move	$fp, $zero
	addi.d	$a0, $sp, 752
	bne	$s3, $a0, .LBB25_83
.LBB25_85:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i161
                                        #   in Loop: Header=BB25_25 Depth=2
	beqz	$fp, .LBB25_102
.LBB25_86:                              #   in Loop: Header=BB25_25 Depth=2
.Ltmp1100:
	addi.d	$a0, $sp, 1288
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14set_index_baseEi)
	jirl	$ra, $ra, 0
.Ltmp1101:
# %bb.87:                               #   in Loop: Header=BB25_25 Depth=2
.Ltmp1102:
	addi.d	$a0, $sp, 736
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1Ei)
	jirl	$ra, $ra, 0
.Ltmp1103:
# %bb.88:                               #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 840
	pcalau12i	$a1, %pc_hi20(_ZN2PPL10index_baseE)
	ori	$a2, $zero, 1
	st.b	$a2, $a1, %pc_lo12(_ZN2PPL10index_baseE)
	addi.d	$a1, $sp, 856
	beq	$a0, $a1, .LBB25_90
# %bb.89:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 856
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_90:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 808
	beqz	$a0, .LBB25_92
# %bb.91:                               #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 824
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_92:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 768
	ld.d	$fp, $sp, 776
	beq	$a0, $fp, .LBB25_98
# %bb.93:                               # %.lr.ph.i.i.i.preheader
                                        #   in Loop: Header=BB25_25 Depth=2
	move	$s3, $s1
	addi.d	$s1, $a0, 16
	b	.LBB25_95
	.p2align	4, , 16
.LBB25_94:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB25_95 Depth=3
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $fp, .LBB25_97
.LBB25_95:                              # %.lr.ph.i.i.i
                                        #   Parent Loop BB25_2 Depth=1
                                        #     Parent Loop BB25_25 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB25_94
# %bb.96:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB25_95 Depth=3
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_94
.LBB25_97:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 768
	move	$s1, $s3
.LBB25_98:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	beqz	$a0, .LBB25_100
# %bb.99:                               #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 784
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_100:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 736
	addi.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB25_102
# %bb.101:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 752
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB25_102:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1520
	ld.d	$a0, $sp, 1488
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $sp, 1496
	ld.d	$a4, $sp, 1504
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $sp, 1480
	ld.d	$a1, $sp, 1464
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	blez	$a2, .LBB25_136
# %bb.103:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 1472
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB25_106
# %bb.104:                              #   in Loop: Header=BB25_25 Depth=2
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB25_108
# %bb.105:                              #   in Loop: Header=BB25_25 Depth=2
	srli.d	$a1, $a2, 2
	b	.LBB25_107
.LBB25_106:                             #   in Loop: Header=BB25_25 Depth=2
	srai.d	$a1, $a3, 9
.LBB25_107:                             #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB25_108:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i176
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 752
	st.d	$a0, $sp, 736
	ld.d	$a2, $a1, 8
	ld.d	$s3, $a1, 0
	st.d	$a2, $sp, 336
	ori	$a1, $zero, 16
	bltu	$a2, $a1, .LBB25_111
# %bb.109:                              # %.noexc.i.i.i180
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1105:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 336
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1106:
# %bb.110:                              # %.noexc181
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 336
	st.d	$a0, $sp, 736
	st.d	$a2, $sp, 752
.LBB25_111:                             # %._crit_edge.i.i.i.i178
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a2, $s8, .LBB25_115
# %bb.112:                              # %._crit_edge.i.i.i.i178
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a2, .LBB25_114
# %bb.113:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_115
.LBB25_114:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_115:                             # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit182
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 336
	ld.d	$s3, $sp, 736
	st.d	$a0, $sp, 744
	ori	$a1, $zero, 18
	bne	$a0, $a1, .LBB25_118
# %bb.116:                              #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.6)
	addi.d	$a1, $a0, %pc_lo12(.L.str.6)
	ori	$a2, $zero, 18
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$fp, $a0, 1
	addi.d	$a0, $sp, 752
	beq	$s3, $a0, .LBB25_119
.LBB25_117:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit187
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 752
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	bnez	$fp, .LBB25_120
	b	.LBB25_136
.LBB25_118:                             #   in Loop: Header=BB25_25 Depth=2
	move	$fp, $zero
	addi.d	$a0, $sp, 752
	bne	$s3, $a0, .LBB25_117
.LBB25_119:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i186
                                        #   in Loop: Header=BB25_25 Depth=2
	beqz	$fp, .LBB25_136
.LBB25_120:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1108:
	addi.d	$a0, $sp, 1288
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14set_index_baseEi)
	jirl	$ra, $ra, 0
.Ltmp1109:
# %bb.121:                              #   in Loop: Header=BB25_25 Depth=2
.Ltmp1110:
	addi.d	$a0, $sp, 736
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1Ei)
	jirl	$ra, $ra, 0
.Ltmp1111:
# %bb.122:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 840
	pcalau12i	$a1, %pc_hi20(_ZN2PPL10index_baseE)
	st.b	$zero, $a1, %pc_lo12(_ZN2PPL10index_baseE)
	addi.d	$a1, $sp, 856
	beq	$a0, $a1, .LBB25_124
# %bb.123:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i188
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 856
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_124:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i189
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 808
	beqz	$a0, .LBB25_126
# %bb.125:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 824
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_126:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i191
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 768
	ld.d	$fp, $sp, 776
	beq	$a0, $fp, .LBB25_132
# %bb.127:                              # %.lr.ph.i.i.i193.preheader
                                        #   in Loop: Header=BB25_25 Depth=2
	move	$s3, $s1
	addi.d	$s1, $a0, 16
	b	.LBB25_129
	.p2align	4, , 16
.LBB25_128:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i196
                                        #   in Loop: Header=BB25_129 Depth=3
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $fp, .LBB25_131
.LBB25_129:                             # %.lr.ph.i.i.i193
                                        #   Parent Loop BB25_2 Depth=1
                                        #     Parent Loop BB25_25 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB25_128
# %bb.130:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i195
                                        #   in Loop: Header=BB25_129 Depth=3
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_128
.LBB25_131:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i198
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 768
	move	$s1, $s3
.LBB25_132:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i200
                                        #   in Loop: Header=BB25_25 Depth=2
	beqz	$a0, .LBB25_134
# %bb.133:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 784
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_134:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i202
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 736
	addi.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB25_136
# %bb.135:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i203
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 752
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB25_136:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1520
	ld.d	$a0, $sp, 1488
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $sp, 1496
	ld.d	$a4, $sp, 1504
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $sp, 1480
	ld.d	$a1, $sp, 1464
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	blez	$a2, .LBB25_156
# %bb.137:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 1472
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB25_140
# %bb.138:                              #   in Loop: Header=BB25_25 Depth=2
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB25_142
# %bb.139:                              #   in Loop: Header=BB25_25 Depth=2
	srli.d	$a1, $a2, 2
	b	.LBB25_141
.LBB25_140:                             #   in Loop: Header=BB25_25 Depth=2
	srai.d	$a1, $a3, 9
.LBB25_141:                             #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB25_142:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i214
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 752
	st.d	$a0, $sp, 736
	ld.d	$a2, $a1, 8
	ld.d	$s3, $a1, 0
	st.d	$a2, $sp, 336
	ori	$a1, $zero, 16
	bltu	$a2, $a1, .LBB25_145
# %bb.143:                              # %.noexc.i.i.i218
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1113:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 336
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1114:
# %bb.144:                              # %.noexc219
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 336
	st.d	$a0, $sp, 736
	st.d	$a2, $sp, 752
.LBB25_145:                             # %._crit_edge.i.i.i.i216
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a2, $s8, .LBB25_149
# %bb.146:                              # %._crit_edge.i.i.i.i216
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a2, .LBB25_148
# %bb.147:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_149
.LBB25_148:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_149:                             # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit220
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 336
	ld.d	$s3, $sp, 736
	st.d	$a0, $sp, 744
	ori	$a1, $zero, 18
	bne	$a0, $a1, .LBB25_152
# %bb.150:                              #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.7)
	addi.d	$a1, $a0, %pc_lo12(.L.str.7)
	ori	$a2, $zero, 18
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$fp, $a0, 1
	addi.d	$a0, $sp, 752
	beq	$s3, $a0, .LBB25_153
.LBB25_151:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit225
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 752
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	bnez	$fp, .LBB25_154
	b	.LBB25_156
.LBB25_152:                             #   in Loop: Header=BB25_25 Depth=2
	move	$fp, $zero
	addi.d	$a0, $sp, 752
	bne	$s3, $a0, .LBB25_151
.LBB25_153:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i224
                                        #   in Loop: Header=BB25_25 Depth=2
	beqz	$fp, .LBB25_156
.LBB25_154:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1116:
	addi.d	$a0, $sp, 1288
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd18set_case_sensitiveEb)
	jirl	$ra, $ra, 0
.Ltmp1117:
# %bb.155:                              #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ori	$a1, $zero, 1
	st.b	$a1, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
.LBB25_156:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1520
	ld.d	$a0, $sp, 1488
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $sp, 1496
	ld.d	$a4, $sp, 1504
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $sp, 1480
	ld.d	$a1, $sp, 1464
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	blez	$a2, .LBB25_176
# %bb.157:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 1472
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB25_160
# %bb.158:                              #   in Loop: Header=BB25_25 Depth=2
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB25_162
# %bb.159:                              #   in Loop: Header=BB25_25 Depth=2
	srli.d	$a1, $a2, 2
	b	.LBB25_161
.LBB25_160:                             #   in Loop: Header=BB25_25 Depth=2
	srai.d	$a1, $a3, 9
.LBB25_161:                             #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB25_162:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i232
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 752
	st.d	$a0, $sp, 736
	ld.d	$a2, $a1, 8
	ld.d	$s3, $a1, 0
	st.d	$a2, $sp, 336
	ori	$a1, $zero, 16
	bltu	$a2, $a1, .LBB25_165
# %bb.163:                              # %.noexc.i.i.i236
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1118:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 336
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1119:
# %bb.164:                              # %.noexc237
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 336
	st.d	$a0, $sp, 736
	st.d	$a2, $sp, 752
.LBB25_165:                             # %._crit_edge.i.i.i.i234
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a2, $s8, .LBB25_169
# %bb.166:                              # %._crit_edge.i.i.i.i234
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a2, .LBB25_168
# %bb.167:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_169
.LBB25_168:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_169:                             # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit238
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 336
	ld.d	$s3, $sp, 736
	st.d	$a0, $sp, 744
	ori	$a1, $zero, 20
	bne	$a0, $a1, .LBB25_172
# %bb.170:                              #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.8)
	addi.d	$a1, $a0, %pc_lo12(.L.str.8)
	ori	$a2, $zero, 20
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$fp, $a0, 1
	addi.d	$a0, $sp, 752
	beq	$s3, $a0, .LBB25_173
.LBB25_171:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit243
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 752
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	bnez	$fp, .LBB25_174
	b	.LBB25_176
.LBB25_172:                             #   in Loop: Header=BB25_25 Depth=2
	move	$fp, $zero
	addi.d	$a0, $sp, 752
	bne	$s3, $a0, .LBB25_171
.LBB25_173:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i242
                                        #   in Loop: Header=BB25_25 Depth=2
	beqz	$fp, .LBB25_176
.LBB25_174:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1121:
	addi.d	$a0, $sp, 1288
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd18set_case_sensitiveEb)
	jirl	$ra, $ra, 0
.Ltmp1122:
# %bb.175:                              #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	st.b	$zero, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
.LBB25_176:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1520
	ld.d	$a0, $sp, 1488
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $sp, 1496
	ld.d	$a4, $sp, 1504
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $sp, 1480
	ld.d	$a1, $sp, 1464
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	blez	$a2, .LBB25_202
# %bb.177:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 1472
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB25_180
# %bb.178:                              #   in Loop: Header=BB25_25 Depth=2
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB25_182
# %bb.179:                              #   in Loop: Header=BB25_25 Depth=2
	srli.d	$a1, $a2, 2
	b	.LBB25_181
.LBB25_180:                             #   in Loop: Header=BB25_25 Depth=2
	srai.d	$a1, $a3, 9
.LBB25_181:                             #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB25_182:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i250
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 752
	st.d	$a0, $sp, 736
	ld.d	$a2, $a1, 8
	ld.d	$s3, $a1, 0
	st.d	$a2, $sp, 336
	ori	$a1, $zero, 16
	bltu	$a2, $a1, .LBB25_185
# %bb.183:                              # %.noexc.i.i.i254
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1123:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 336
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1124:
# %bb.184:                              # %.noexc255
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 336
	st.d	$a0, $sp, 736
	st.d	$a2, $sp, 752
.LBB25_185:                             # %._crit_edge.i.i.i.i252
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a2, $s8, .LBB25_189
# %bb.186:                              # %._crit_edge.i.i.i.i252
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a2, .LBB25_188
# %bb.187:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_189
.LBB25_188:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_189:                             # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit256
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 336
	ld.d	$s3, $sp, 736
	st.d	$a0, $sp, 744
	ori	$a1, $zero, 17
	bne	$a0, $a1, .LBB25_200
# %bb.190:                              #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.9)
	addi.d	$a1, $a0, %pc_lo12(.L.str.9)
	ori	$a2, $zero, 17
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$fp, $a0, 1
	addi.d	$a0, $sp, 752
	beq	$s3, $a0, .LBB25_201
.LBB25_191:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit261
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 752
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	beqz	$fp, .LBB25_202
.LBB25_192:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$fp, $sp, 216                   # 8-byte Folded Reload
	ldptr.d	$a0, $fp, 2272
	beqz	$a0, .LBB25_236
# %bb.193:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 1208
	st.d	$a0, $sp, 1192
	ori	$a0, $zero, 24
	st.d	$a0, $sp, 736
.Ltmp1247:
	addi.d	$a0, $sp, 1192
	addi.d	$a1, $sp, 736
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1248:
# %bb.194:                              # %.noexc264
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 736
	pcalau12i	$a2, %pc_hi20(.L.str.10)
	addi.d	$a2, $a2, %pc_lo12(.L.str.10)
	vld	$vr0, $a2, 0
	ld.d	$a2, $a2, 16
	st.d	$a0, $sp, 1192
	st.d	$a1, $sp, 1208
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 1192
	st.d	$a1, $sp, 1200
	stx.b	$zero, $a0, $a1
	ldptr.d	$a1, $fp, 2272
	ldptr.d	$s3, $fp, 2264
	addi.d	$a0, $sp, 1176
	st.d	$a0, $sp, 1160
	st.d	$a1, $sp, 736
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB25_197
# %bb.195:                              # %.noexc.i267
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1250:
	addi.d	$a0, $sp, 1160
	addi.d	$a1, $sp, 736
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1251:
# %bb.196:                              # %.noexc268
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 736
	st.d	$a0, $sp, 1160
	st.d	$a1, $sp, 1176
.LBB25_197:                             # %._crit_edge.i.i266
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a1, $s8, .LBB25_231
# %bb.198:                              # %._crit_edge.i.i266
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a1, .LBB25_230
# %bb.199:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_231
.LBB25_200:                             #   in Loop: Header=BB25_25 Depth=2
	move	$fp, $zero
	addi.d	$a0, $sp, 752
	bne	$s3, $a0, .LBB25_191
.LBB25_201:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i260
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$fp, .LBB25_192
	.p2align	4, , 16
.LBB25_202:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 1464
	ld.d	$a1, $sp, 1472
	ld.d	$a0, $sp, 1488
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB25_205
# %bb.203:                              #   in Loop: Header=BB25_25 Depth=2
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB25_207
# %bb.204:                              #   in Loop: Header=BB25_25 Depth=2
	srli.d	$a2, $a1, 2
	b	.LBB25_206
.LBB25_205:                             #   in Loop: Header=BB25_25 Depth=2
	srai.d	$a2, $a3, 9
.LBB25_206:                             #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB25_207:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i285
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 752
	st.d	$a0, $sp, 736
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	st.d	$a1, $sp, 336
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB25_210
# %bb.208:                              # %.noexc.i.i.i293
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1126:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 336
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1127:
# %bb.209:                              # %.noexc294
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 336
	st.d	$a0, $sp, 736
	st.d	$a1, $sp, 752
.LBB25_210:                             # %._crit_edge.i.i.i.i287
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a1, $s8, .LBB25_214
# %bb.211:                              # %._crit_edge.i.i.i.i287
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a1, .LBB25_213
# %bb.212:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_214
.LBB25_213:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_214:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit.i288
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 336
	ld.d	$s3, $sp, 736
	st.d	$a0, $sp, 744
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB25_216
# %bb.215:                              #   in Loop: Header=BB25_25 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.237)
	addi.d	$a1, $a0, %pc_lo12(.L.str.237)
	ori	$a2, $zero, 7
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$fp, $a0, 1
	addi.d	$a0, $sp, 752
	bne	$s3, $a0, .LBB25_217
	b	.LBB25_218
.LBB25_216:                             #   in Loop: Header=BB25_25 Depth=2
	move	$fp, $zero
	addi.d	$a0, $sp, 752
	beq	$s3, $a0, .LBB25_218
.LBB25_217:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i289
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 752
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_218:                             #   in Loop: Header=BB25_25 Depth=2
	beqz	$fp, .LBB25_226
# %bb.219:                              # %._crit_edge.i.i295
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 1144
	st.d	$a0, $sp, 1128
	st.d	$zero, $sp, 1136
	st.b	$zero, $sp, 1144
.Ltmp1133:
	addi.d	$a0, $sp, 736
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp1134:
# %bb.220:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$fp, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB25_247
# %bb.221:                              #   in Loop: Header=BB25_25 Depth=2
.Ltmp1136:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 1288
	addi.d	$a2, $sp, 736
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1137:
# %bb.222:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 1128
	addi.d	$a1, $sp, 1144
	beq	$a0, $a1, .LBB25_237
# %bb.223:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 336
	addi.d	$a2, $sp, 352
	beq	$a1, $a2, .LBB25_240
# %bb.224:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 1144
	vld	$vr0, $sp, 344
	st.d	$a1, $sp, 1128
	vst	$vr0, $sp, 1136
	beqz	$a0, .LBB25_239
.LBB25_225:                             #   in Loop: Header=BB25_25 Depth=2
	st.d	$a0, $sp, 336
	st.d	$a2, $sp, 352
	b	.LBB25_245
.LBB25_226:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a1, $a0, 888
	ld.d	$a0, $a0, 872
	addi.d	$a1, $a1, -432
	beq	$a0, $a1, .LBB25_229
# %bb.227:                              #   in Loop: Header=BB25_25 Depth=2
.Ltmp1128:
	addi.d	$a1, $sp, 1288
	pcaddu18i	$ra, %call36(_ZN2PP3CmdC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1129:
# %bb.228:                              # %.noexc366
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a0, $a1, 872
	addi.d	$a0, $a0, 432
	st.d	$a0, $a1, 872
	ori	$fp, $zero, 1
	b	.LBB25_347
.LBB25_229:                             #   in Loop: Header=BB25_25 Depth=2
	ori	$fp, $zero, 1
.Ltmp1130:
	addi.d	$a1, $sp, 1288
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1131:
	b	.LBB25_347
.LBB25_230:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_231:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 736
	st.d	$a0, $sp, 1168
.Ltmp1253:
	addi.d	$a1, $sp, 1192
	addi.d	$a2, $sp, 1160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_)
	jirl	$ra, $ra, 0
.Ltmp1254:
# %bb.232:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 1160
	addi.d	$a1, $sp, 1176
	beq	$a0, $a1, .LBB25_234
# %bb.233:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i270
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1176
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_234:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit272
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 1192
	ori	$a1, $zero, 1
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	addi.d	$a1, $sp, 1208
	beq	$a0, $a1, .LBB25_236
# %bb.235:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i273
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1208
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_236:                             #   in Loop: Header=BB25_25 Depth=2
	ori	$fp, $zero, 1
	b	.LBB25_347
.LBB25_237:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 336
	addi.d	$a2, $sp, 352
	beq	$a1, $a2, .LBB25_240
# %bb.238:                              #   in Loop: Header=BB25_25 Depth=2
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 344
	st.d	$a1, $sp, 1128
	vst	$vr0, $sp, 1136
	bnez	$a0, .LBB25_225
.LBB25_239:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 352
	st.d	$a0, $sp, 336
	b	.LBB25_245
.LBB25_240:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a2, $sp, 344
	beqz	$a2, .LBB25_244
# %bb.241:                              #   in Loop: Header=BB25_25 Depth=2
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB25_243
# %bb.242:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB25_244
.LBB25_243:                             #   in Loop: Header=BB25_25 Depth=2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_244:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 1128
	st.d	$a0, $sp, 1136
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 336
.LBB25_245:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	st.d	$zero, $sp, 344
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 336
	addi.d	$a1, $sp, 352
	beq	$a0, $a1, .LBB25_247
# %bb.246:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i301
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 352
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_247:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1139:
	addi.d	$a1, $sp, 1128
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser16broadcast_bufferERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1140:
# %bb.248:                              #   in Loop: Header=BB25_25 Depth=2
	ld.w	$a2, $fp, 768
	ld.d	$a3, $fp, 744
	st.w	$a2, $sp, 732
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	beqz	$a3, .LBB25_253
# %bb.249:                              # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	ori	$a7, $zero, 24
	ori	$t0, $zero, 16
	.p2align	4, , 16
.LBB25_250:                             # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB25_2 Depth=1
                                        #     Parent Loop BB25_25 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.w	$a1, $a3, 32
	slt	$a1, $a1, $a2
	masknez	$a4, $a3, $a1
	masknez	$a5, $t0, $a1
	maskeqz	$a6, $a7, $a1
	or	$a5, $a6, $a5
	ldx.d	$a3, $a3, $a5
	maskeqz	$a0, $a0, $a1
	or	$a0, $a0, $a4
	bnez	$a3, .LBB25_250
# %bb.251:                              # %_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEE11lower_boundERS9_.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	move	$a1, $a3
	beq	$a0, $a3, .LBB25_253
# %bb.252:                              #   in Loop: Header=BB25_25 Depth=2
	ld.w	$a3, $a0, 32
	move	$a1, $a0
	bge	$a2, $a3, .LBB25_254
.LBB25_253:                             # %.critedge.i
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 732
	st.d	$a0, $sp, 336
.Ltmp1142:
	pcalau12i	$a0, %pc_hi20(_ZSt19piecewise_construct)
	addi.d	$a2, $a0, %pc_lo12(_ZSt19piecewise_construct)
	addi.d	$a3, $sp, 336
	addi.d	$a4, $sp, 304
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1143:
.LBB25_254:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $a0, 40
.Ltmp1144:
	addi.d	$a1, $sp, 1128
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1145:
# %bb.255:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a3, $sp, 1136
	beqz	$a3, .LBB25_262
# %bb.256:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit308.thread523
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$s3, $sp, 1128
	addi.d	$a0, $sp, 288
	st.d	$a0, $sp, 272
	st.d	$a3, $sp, 336
	move	$a1, $a3
	ori	$a2, $zero, 16
	move	$s6, $a3
	bltu	$a3, $a2, .LBB25_259
# %bb.257:                              # %.noexc.i347
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1241:
	addi.d	$a0, $sp, 272
	addi.d	$a1, $sp, 336
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1242:
# %bb.258:                              # %.noexc348
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 336
	st.d	$a0, $sp, 272
	st.d	$a1, $sp, 288
.LBB25_259:                             # %._crit_edge.i.i346
                                        #   in Loop: Header=BB25_25 Depth=2
	beq	$a1, $s8, .LBB25_267
# %bb.260:                              # %._crit_edge.i.i346
                                        #   in Loop: Header=BB25_25 Depth=2
	bnez	$a1, .LBB25_266
# %bb.261:                              #   in Loop: Header=BB25_25 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB25_267
.LBB25_262:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit308.thread
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1146:
	move	$s6, $a3
	addi.d	$a0, $sp, 336
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp1147:
# %bb.263:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 352
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 592
	ldx.d	$s3, $a1, $a0
	beqz	$s3, .LBB25_409
# %bb.264:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB25_270
# %bb.265:                              #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 67
	b	.LBB25_272
.LBB25_266:                             #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_267:                             #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 336
	st.d	$a0, $sp, 280
.Ltmp1244:
	addi.d	$a1, $sp, 272
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1245:
# %bb.268:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 272
	addi.d	$a1, $sp, 288
	addi.d	$fp, $sp, 736
	beq	$a0, $a1, .LBB25_342
# %bb.269:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i350
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 288
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_342
.LBB25_270:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1149:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1150:
# %bb.271:                              # %.noexc436
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1151:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1152:
.LBB25_272:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1153:
	ext.w.b	$a1, $a0
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1154:
# %bb.273:                              # %.noexc438
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1155:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1156:
# %bb.274:                              # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1157:
	pcalau12i	$a0, %pc_hi20(.L.str.11)
	addi.d	$a1, $a0, %pc_lo12(.L.str.11)
	ori	$a2, $zero, 24
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1158:
# %bb.275:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1159:
	addi.d	$a0, $sp, 352
	ld.d	$a1, $sp, 208                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1160:
# %bb.276:                              #   in Loop: Header=BB25_25 Depth=2
.Ltmp1161:
	move	$s8, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.12)
	addi.d	$a1, $a0, %pc_lo12(.L.str.12)
	ori	$a2, $zero, 1
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1162:
# %bb.277:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit312
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s8, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s8, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB25_409
# %bb.278:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i441
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB25_280
# %bb.279:                              #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 67
	b	.LBB25_282
.LBB25_280:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1163:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1164:
# %bb.281:                              # %.noexc446
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1165:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1166:
.LBB25_282:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i443
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1167:
	ext.w.b	$a1, $a0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1168:
# %bb.283:                              # %.noexc448
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1169:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1170:
# %bb.284:                              # %_ZNSolsEPFRSoS_E.exit314
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1171:
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a1, $a0, %pc_lo12(.L.str.13)
	ori	$a2, $zero, 4
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1172:
# %bb.285:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit316
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.w	$a0, $fp, 672
	ld.d	$a2, $fp, 608
	ld.d	$a1, $fp, 616
	addi.w	$a3, $a0, -1
	ld.d	$a0, $fp, 632
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB25_288
# %bb.286:                              #   in Loop: Header=BB25_25 Depth=2
	bltu	$s5, $a1, .LBB25_289
# %bb.287:                              #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a0, $a3, 5
	add.d	$a0, $a2, $a0
	b	.LBB25_291
.LBB25_288:                             #   in Loop: Header=BB25_25 Depth=2
	srai.d	$a2, $a1, 4
	b	.LBB25_290
.LBB25_289:                             #   in Loop: Header=BB25_25 Depth=2
	srli.d	$a2, $a1, 4
.LBB25_290:                             #   in Loop: Header=BB25_25 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB25_291:                             # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp1173:
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1174:
# %bb.292:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	move	$s8, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s8, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB25_409
# %bb.293:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i452
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB25_295
# %bb.294:                              #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 67
	b	.LBB25_297
.LBB25_295:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1175:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1176:
# %bb.296:                              # %.noexc457
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1177:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1178:
.LBB25_297:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i454
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1179:
	ext.w.b	$a1, $a0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1180:
# %bb.298:                              # %.noexc459
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1181:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1182:
# %bb.299:                              # %_ZNSolsEPFRSoS_E.exit319
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1183:
	pcalau12i	$a0, %pc_hi20(.L.str.14)
	addi.d	$a1, $a0, %pc_lo12(.L.str.14)
	ori	$a2, $zero, 9
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1184:
# %bb.300:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit321
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp1185:
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1186:
# %bb.301:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit323
                                        #   in Loop: Header=BB25_25 Depth=2
	move	$s8, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s8, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB25_409
# %bb.302:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i463
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB25_304
# %bb.303:                              #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 67
	b	.LBB25_306
.LBB25_304:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1187:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1188:
# %bb.305:                              # %.noexc468
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1189:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1190:
.LBB25_306:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i465
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1191:
	ext.w.b	$a1, $a0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1192:
# %bb.307:                              # %.noexc470
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1193:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1194:
# %bb.308:                              # %_ZNSolsEPFRSoS_E.exit325
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1195:
	pcalau12i	$a0, %pc_hi20(.L.str.15)
	addi.d	$a1, $a0, %pc_lo12(.L.str.15)
	ori	$a2, $zero, 28
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1196:
# %bb.309:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit327
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 352
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 592
	ldx.d	$s3, $a1, $a0
	beqz	$s3, .LBB25_409
# %bb.310:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i474
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB25_312
# %bb.311:                              #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 67
	b	.LBB25_314
.LBB25_312:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1197:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1198:
# %bb.313:                              # %.noexc479
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1199:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1200:
.LBB25_314:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i476
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1201:
	ext.w.b	$a1, $a0
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1202:
# %bb.315:                              # %.noexc481
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1203:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1204:
# %bb.316:                              # %_ZNSolsEPFRSoS_E.exit329
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1205:
	pcalau12i	$a0, %pc_hi20(.L.str.16)
	addi.d	$a1, $a0, %pc_lo12(.L.str.16)
	ori	$a2, $zero, 44
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1206:
# %bb.317:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit331
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 352
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 592
	ldx.d	$s3, $a1, $a0
	beqz	$s3, .LBB25_409
# %bb.318:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i485
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB25_320
# %bb.319:                              #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 67
	b	.LBB25_322
.LBB25_320:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1207:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1208:
# %bb.321:                              # %.noexc490
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1209:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1210:
.LBB25_322:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i487
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1211:
	ext.w.b	$a1, $a0
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1212:
# %bb.323:                              # %.noexc492
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1213:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1214:
# %bb.324:                              # %_ZNSolsEPFRSoS_E.exit333
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 800
	addi.d	$a1, $sp, 320
	st.d	$a1, $sp, 304
	st.d	$zero, $sp, 312
	st.b	$zero, $sp, 320
	beqz	$a0, .LBB25_327
# %bb.325:                              # %_ZNSolsEPFRSoS_E.exit333
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 784
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB25_327
# %bb.326:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a3, $sp, 792
	sub.d	$a4, $a0, $a3
.Ltmp1216:
	addi.d	$a0, $sp, 304
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1217:
	b	.LBB25_328
.LBB25_327:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1218:
	addi.d	$a0, $sp, 304
	addi.d	$a1, $sp, 832
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1219:
.LBB25_328:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 304
	ld.d	$a2, $sp, 312
.Ltmp1221:
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1222:
# %bb.329:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit337
                                        #   in Loop: Header=BB25_25 Depth=2
	move	$s8, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s8, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB25_411
# %bb.330:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i496
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB25_332
# %bb.331:                              #   in Loop: Header=BB25_25 Depth=2
	ld.bu	$a0, $s3, 67
	b	.LBB25_334
.LBB25_332:                             #   in Loop: Header=BB25_25 Depth=2
.Ltmp1223:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1224:
# %bb.333:                              # %.noexc501
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1225:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1226:
.LBB25_334:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i498
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1227:
	ext.w.b	$a1, $a0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1228:
# %bb.335:                              # %.noexc503
                                        #   in Loop: Header=BB25_25 Depth=2
.Ltmp1229:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1230:
# %bb.336:                              # %_ZNSolsEPFRSoS_E.exit339
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 304
	addi.d	$a1, $sp, 320
	beq	$a0, $a1, .LBB25_338
# %bb.337:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i340
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 320
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_338:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit342
                                        #   in Loop: Header=BB25_25 Depth=2
	ori	$a0, $zero, 2
	st.w	$a0, $sp, 304
.Ltmp1232:
	addi.d	$a1, $sp, 336
	addi.d	$a2, $sp, 304
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1233:
# %bb.339:                              #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 152                   # 8-byte Folded Reload
	st.d	$a0, $sp, 336
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	addi.d	$a2, $sp, 336
	stx.d	$a1, $a0, $a2
	ld.d	$a0, $sp, 432
	ld.d	$a1, $sp, 136                   # 8-byte Folded Reload
	st.d	$a1, $sp, 352
	st.d	$s1, $sp, 360
	addi.d	$a1, $sp, 448
	addi.d	$fp, $sp, 736
	beq	$a0, $a1, .LBB25_341
# %bb.340:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 448
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_341:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 184                   # 8-byte Folded Reload
	st.d	$a0, $sp, 360
	addi.d	$a0, $sp, 416
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 192                   # 8-byte Folded Reload
	st.d	$a0, $sp, 336
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 200                   # 8-byte Folded Reload
	addi.d	$a2, $sp, 336
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 344
	addi.d	$a0, $sp, 464
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
.LBB25_342:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit352
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 152                   # 8-byte Folded Reload
	st.d	$a0, $sp, 736
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	stx.d	$a1, $a0, $fp
	ld.d	$a0, $sp, 832
	ld.d	$a1, $sp, 136                   # 8-byte Folded Reload
	st.d	$a1, $sp, 752
	st.d	$s1, $sp, 760
	addi.d	$a1, $sp, 848
	beq	$a0, $a1, .LBB25_344
# %bb.343:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i353
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 848
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_344:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit355
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 184                   # 8-byte Folded Reload
	st.d	$a0, $sp, 760
	addi.d	$a0, $sp, 816
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 192                   # 8-byte Folded Reload
	st.d	$a0, $sp, 736
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 200                   # 8-byte Folded Reload
	stx.d	$a1, $a0, $fp
	st.d	$zero, $sp, 744
	addi.d	$a0, $sp, 864
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1128
	addi.d	$a1, $sp, 1144
	beq	$a0, $a1, .LBB25_346
# %bb.345:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i356
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_346:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit358
                                        #   in Loop: Header=BB25_25 Depth=2
	sltu	$fp, $zero, $s6
.LBB25_347:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit275
                                        #   in Loop: Header=BB25_25 Depth=2
	addi.d	$a0, $sp, 1288
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 152                   # 8-byte Folded Reload
	st.d	$a0, $sp, 1728
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	addi.d	$a2, $sp, 1728
	stx.d	$a1, $a0, $a2
	ld.d	$a0, $sp, 1824
	ld.d	$a1, $sp, 136                   # 8-byte Folded Reload
	st.d	$a1, $sp, 1744
	st.d	$s1, $sp, 1752
	addi.d	$a1, $sp, 1840
	beq	$a0, $a1, .LBB25_349
# %bb.348:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i368
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a1, $sp, 1840
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_349:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit370
                                        #   in Loop: Header=BB25_25 Depth=2
	ld.d	$a0, $sp, 184                   # 8-byte Folded Reload
	st.d	$a0, $sp, 1752
	addi.d	$a0, $sp, 1808
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 192                   # 8-byte Folded Reload
	st.d	$a0, $sp, 1728
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 200                   # 8-byte Folded Reload
	addi.d	$a2, $sp, 1728
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 1736
	addi.d	$a0, $sp, 1856
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	bnez	$fp, .LBB25_25
	b	.LBB25_1
.LBB25_350:                             # %_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri.exit.thread
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 12
	beq	$a0, $a1, .LBB25_353
# %bb.351:                              # %_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri.exit.thread
	ori	$a1, $zero, 24
	bne	$a0, $a1, .LBB25_354
# %bb.352:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit373
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.10)
	addi.d	$a1, $a1, %pc_lo12(.L.str.10)
	ori	$a2, $zero, 24
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB25_354
	b	.LBB25_404
.LBB25_353:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit376
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.17)
	addi.d	$a1, $a1, %pc_lo12(.L.str.17)
	ori	$a2, $zero, 12
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB25_404
.LBB25_354:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit376.thread
	ld.d	$a0, $sp, 216                   # 8-byte Folded Reload
	ldptr.d	$a0, $a0, 2272
	beqz	$a0, .LBB25_404
# %bb.355:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit379.thread
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	andi	$a1, $a0, 1
	lu12i.w	$a0, 427197
	move	$fp, $zero
	beqz	$a1, .LBB25_379
# %bb.356:                              # %.preheader
	addi.d	$s2, $sp, 1304
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s3, $a0, -1973
	ori	$s5, $zero, 16
	addi.w	$s6, $zero, -1
	ori	$s8, $zero, 12
	pcalau12i	$a0, %pc_hi20(.L.str.17)
	addi.d	$s0, $a0, %pc_lo12(.L.str.17)
	b	.LBB25_358
	.p2align	4, , 16
.LBB25_357:                             #   in Loop: Header=BB25_358 Depth=1
	addi.w	$fp, $fp, 1
.LBB25_358:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a5, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a1, $a5, 896
	ld.d	$a0, $a5, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $a5, 872
	ld.d	$a4, $a5, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $a5, 856
	ld.d	$a1, $a5, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s3
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s3
	add.w	$a2, $a2, $a3
	bge	$fp, $a2, .LBB25_404
# %bb.359:                              #   in Loop: Header=BB25_358 Depth=1
	ld.d	$a2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a2, $a2, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $a2, $fp
	beqz	$a2, .LBB25_361
# %bb.360:                              #   in Loop: Header=BB25_358 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB25_362
	.p2align	4, , 16
.LBB25_361:                             #   in Loop: Header=BB25_358 Depth=1
	ori	$a0, $zero, 432
	mul.d	$a0, $fp, $a0
	add.d	$a0, $a1, $a0
.LBB25_362:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB25_358 Depth=1
	ld.d	$a1, $a0, 16
	ld.d	$s1, $a0, 8
	st.d	$s2, $sp, 1288
	st.d	$a1, $sp, 1728
	move	$a0, $s2
	bltu	$a1, $s5, .LBB25_365
# %bb.363:                              # %.noexc.i.i383
                                        #   in Loop: Header=BB25_358 Depth=1
.Ltmp1054:
	addi.d	$a0, $sp, 1288
	addi.d	$a1, $sp, 1728
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1055:
# %bb.364:                              # %.noexc384
                                        #   in Loop: Header=BB25_358 Depth=1
	ld.d	$a1, $sp, 1728
	st.d	$a0, $sp, 1288
	st.d	$a1, $sp, 1304
.LBB25_365:                             # %._crit_edge.i.i.i381
                                        #   in Loop: Header=BB25_358 Depth=1
	beq	$a1, $s6, .LBB25_368
# %bb.366:                              # %._crit_edge.i.i.i381
                                        #   in Loop: Header=BB25_358 Depth=1
	bnez	$a1, .LBB25_370
# %bb.367:                              #   in Loop: Header=BB25_358 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
.LBB25_368:                             #   in Loop: Header=BB25_358 Depth=1
	ld.d	$a0, $sp, 1728
	ld.d	$s1, $sp, 1288
	st.d	$a0, $sp, 1296
	bne	$a0, $s8, .LBB25_371
.LBB25_369:                             #   in Loop: Header=BB25_358 Depth=1
	ori	$a2, $zero, 12
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s4, $a0, 1
	bne	$s1, $s2, .LBB25_372
	b	.LBB25_373
	.p2align	4, , 16
.LBB25_370:                             #   in Loop: Header=BB25_358 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1728
	ld.d	$s1, $sp, 1288
	st.d	$a0, $sp, 1296
	beq	$a0, $s8, .LBB25_369
.LBB25_371:                             #   in Loop: Header=BB25_358 Depth=1
	move	$s4, $zero
	beq	$s1, $s2, .LBB25_373
.LBB25_372:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i387
                                        #   in Loop: Header=BB25_358 Depth=1
	ld.d	$a0, $sp, 1304
	addi.d	$a1, $a0, 1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_373:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit389
                                        #   in Loop: Header=BB25_358 Depth=1
	beqz	$s4, .LBB25_357
# %bb.374:                              #   in Loop: Header=BB25_358 Depth=1
	ld.d	$a0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a2, $a0, 840
	ld.d	$a1, $a0, 848
	ld.d	$a0, $a0, 864
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s3
	add.d	$a3, $a1, $fp
	beqz	$a3, .LBB25_376
# %bb.375:                              #   in Loop: Header=BB25_358 Depth=1
	slli.d	$a1, $a3, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a3, $a0, 3
	move	$a2, $a1
	b	.LBB25_377
.LBB25_376:                             #   in Loop: Header=BB25_358 Depth=1
	ld.d	$a1, $a0, 0
	ori	$a3, $zero, 432
	mul.d	$a3, $fp, $a3
	add.d	$a2, $a2, $a3
.LBB25_377:                             # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit
                                        #   in Loop: Header=BB25_358 Depth=1
	st.d	$a2, $sp, 1288
	st.d	$a1, $sp, 1296
	addi.d	$a1, $a1, 432
	st.d	$a1, $sp, 1304
	st.d	$a0, $sp, 1312
.Ltmp1057:
	addi.d	$a0, $sp, 1728
	addi.d	$a2, $sp, 1288
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp1058:
# %bb.378:                              #   in Loop: Header=BB25_358 Depth=1
	addi.d	$fp, $fp, -1
	b	.LBB25_357
.LBB25_379:                             # %.preheader529
	move	$s3, $zero
	addi.d	$s4, $sp, 1304
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s5, $a0, -1973
	addi.w	$s8, $zero, -1
	pcalau12i	$a0, %pc_hi20(.L.str.17)
	addi.d	$s0, $a0, %pc_lo12(.L.str.17)
	pcalau12i	$a0, %pc_hi20(.L.str.10)
	addi.d	$s6, $a0, %pc_lo12(.L.str.10)
	b	.LBB25_381
	.p2align	4, , 16
.LBB25_380:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit415
                                        #   in Loop: Header=BB25_381 Depth=1
	addi.d	$s3, $s3, 1
	addi.d	$fp, $fp, 432
.LBB25_381:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a5, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a1, $a5, 896
	ld.d	$a0, $a5, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $a5, 872
	ld.d	$a4, $a5, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $a5, 856
	ld.d	$a1, $a5, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s5
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s5
	add.w	$a2, $a2, $a3
	bge	$s3, $a2, .LBB25_404
# %bb.382:                              #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a2, $a2, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s5
	add.d	$a2, $s3, $a2
	beqz	$a2, .LBB25_384
# %bb.383:                              #   in Loop: Header=BB25_381 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB25_385
	.p2align	4, , 16
.LBB25_384:                             #   in Loop: Header=BB25_381 Depth=1
	add.d	$a0, $a1, $fp
.LBB25_385:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit396
                                        #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a1, $a0, 16
	ld.d	$s1, $a0, 8
	st.d	$s4, $sp, 1288
	st.d	$a1, $sp, 1728
	move	$a0, $s4
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB25_388
# %bb.386:                              # %.noexc.i.i399
                                        #   in Loop: Header=BB25_381 Depth=1
.Ltmp1045:
	addi.d	$a0, $sp, 1288
	addi.d	$a1, $sp, 1728
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1046:
# %bb.387:                              # %.noexc400
                                        #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a1, $sp, 1728
	st.d	$a0, $sp, 1288
	st.d	$a1, $sp, 1304
.LBB25_388:                             # %._crit_edge.i.i.i397
                                        #   in Loop: Header=BB25_381 Depth=1
	beq	$a1, $s8, .LBB25_392
# %bb.389:                              # %._crit_edge.i.i.i397
                                        #   in Loop: Header=BB25_381 Depth=1
	bnez	$a1, .LBB25_391
# %bb.390:                              #   in Loop: Header=BB25_381 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB25_392
	.p2align	4, , 16
.LBB25_391:                             #   in Loop: Header=BB25_381 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_392:                             #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a0, $sp, 1728
	ld.d	$s1, $sp, 1288
	st.d	$a0, $sp, 1296
	ori	$a1, $zero, 12
	bne	$a0, $a1, .LBB25_394
# %bb.393:                              #   in Loop: Header=BB25_381 Depth=1
	ori	$a2, $zero, 12
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s2, $a0, 1
	bne	$s1, $s4, .LBB25_395
	b	.LBB25_396
	.p2align	4, , 16
.LBB25_394:                             #   in Loop: Header=BB25_381 Depth=1
	move	$s2, $zero
	beq	$s1, $s4, .LBB25_396
.LBB25_395:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i404
                                        #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a0, $sp, 1304
	addi.d	$a1, $a0, 1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_396:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit406
                                        #   in Loop: Header=BB25_381 Depth=1
	beqz	$s2, .LBB25_380
# %bb.397:                              #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$a0, $a2, 840
	ld.d	$a1, $a2, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s5
	add.d	$a1, $s3, $a1
	beqz	$a1, .LBB25_399
# %bb.398:                              #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a0, $a2, 864
	slli.d	$a1, $a1, 3
	ldx.d	$s1, $a0, $a1
	b	.LBB25_400
.LBB25_399:                             #   in Loop: Header=BB25_381 Depth=1
	add.d	$s1, $a0, $fp
.LBB25_400:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit408
                                        #   in Loop: Header=BB25_381 Depth=1
	addi.d	$a0, $sp, 256
	st.d	$a0, $sp, 240
	ori	$a0, $zero, 24
	st.d	$a0, $sp, 1288
.Ltmp1048:
	addi.d	$a0, $sp, 240
	addi.d	$a1, $sp, 1288
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1049:
# %bb.401:                              # %.noexc411
                                        #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a1, $sp, 1288
	vld	$vr0, $s6, 0
	ld.d	$a2, $s6, 16
	st.d	$a0, $sp, 240
	st.d	$a1, $sp, 256
	vst	$vr0, $a0, 0
	st.d	$a2, $a0, 16
	ld.d	$a0, $sp, 240
	st.d	$a1, $sp, 248
	stx.b	$zero, $a0, $a1
.Ltmp1051:
	addi.d	$a1, $sp, 240
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1052:
# %bb.402:                              #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	beq	$a0, $a1, .LBB25_380
# %bb.403:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i413
                                        #   in Loop: Header=BB25_381 Depth=1
	ld.d	$a1, $sp, 256
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_380
.LBB25_404:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit373.thread524
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s7, .LBB25_406
# %bb.405:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i422
	ori	$a1, $zero, 2136
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_406:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2168
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB25_408
# %bb.407:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i425
	ori	$a1, $zero, 2168
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_408:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit427
	addi.d	$sp, $sp, 240
	ld.d	$s8, $sp, 1944                  # 8-byte Folded Reload
	ld.d	$s7, $sp, 1952                  # 8-byte Folded Reload
	ld.d	$s6, $sp, 1960                  # 8-byte Folded Reload
	ld.d	$s5, $sp, 1968                  # 8-byte Folded Reload
	ld.d	$s4, $sp, 1976                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1984                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1992                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 2000                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 2008                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 2016                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 2024                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 2032
	ret
.LBB25_409:                             # %.invoke
.Ltmp1238:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1239:
# %bb.410:                              # %.cont
.LBB25_411:
.Ltmp1235:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1236:
# %bb.412:                              # %.noexc500
.LBB25_413:
.Ltmp1252:
	move	$fp, $a0
	b	.LBB25_428
.LBB25_414:
.Ltmp1050:
	b	.LBB25_474
.LBB25_415:
.Ltmp1047:
	b	.LBB25_474
.LBB25_416:
.Ltmp1056:
	b	.LBB25_474
.LBB25_417:
.Ltmp1053:
	ld.d	$a2, $sp, 240
	move	$fp, $a0
	addi.d	$a0, $sp, 256
	beq	$a2, $a0, .LBB25_475
# %bb.418:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i419
	ld.d	$a0, $sp, 256
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_475
.LBB25_419:
.Ltmp1059:
	b	.LBB25_474
.LBB25_420:
.Ltmp1148:
	move	$fp, $a0
	b	.LBB25_464
.LBB25_421:                             # %.loopexit.split-lp537
.Ltmp1237:
	b	.LBB25_443
.LBB25_422:
.Ltmp1234:
	b	.LBB25_462
.LBB25_423:
.Ltmp1220:
	ld.d	$a2, $sp, 304
	move	$fp, $a0
	addi.d	$a0, $sp, 320
	beq	$a2, $a0, .LBB25_463
# %bb.424:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 320
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_463
.LBB25_425:
.Ltmp1138:
	move	$fp, $a0
	b	.LBB25_464
.LBB25_426:
.Ltmp1255:
	ld.d	$a2, $sp, 1160
	move	$fp, $a0
	addi.d	$a0, $sp, 1176
	beq	$a2, $a0, .LBB25_428
# %bb.427:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i279
	ld.d	$a0, $sp, 1176
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_428:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit281
	ld.d	$a0, $sp, 1192
	addi.d	$a1, $sp, 1208
	beq	$a0, $a1, .LBB25_468
# %bb.429:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i282
	ld.d	$a1, $sp, 1208
	b	.LBB25_467
.LBB25_430:
.Ltmp1249:
	b	.LBB25_460
.LBB25_431:
.Ltmp1246:
	ld.d	$a2, $sp, 272
	move	$fp, $a0
	addi.d	$a0, $sp, 288
	beq	$a2, $a0, .LBB25_464
# %bb.432:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i359
	ld.d	$a0, $sp, 288
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_464
.LBB25_433:
.Ltmp1099:
	b	.LBB25_460
.LBB25_434:
.Ltmp1120:
	b	.LBB25_460
.LBB25_435:
.Ltmp1115:
	b	.LBB25_460
.LBB25_436:
.Ltmp1112:
	b	.LBB25_460
.LBB25_437:
.Ltmp1107:
	b	.LBB25_460
.LBB25_438:
.Ltmp1104:
	b	.LBB25_460
.LBB25_439:
.Ltmp1125:
	b	.LBB25_460
.LBB25_440:
.Ltmp1141:
	move	$fp, $a0
	b	.LBB25_464
.LBB25_441:
.Ltmp1135:
	move	$fp, $a0
	b	.LBB25_465
.LBB25_442:                             # %.loopexit536
.Ltmp1231:
.LBB25_443:
	move	$fp, $a0
	ld.d	$a0, $sp, 304
	addi.d	$a1, $sp, 320
	beq	$a0, $a1, .LBB25_463
# %bb.444:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i343
	ld.d	$a1, $sp, 320
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_463
.LBB25_445:
.Ltmp1088:
	move	$fp, $a0
	b	.LBB25_469
.LBB25_446:
.Ltmp1091:
	move	$fp, $a0
	b	.LBB25_451
.LBB25_447:
.Ltmp1243:
	move	$fp, $a0
	b	.LBB25_464
.LBB25_448:                             # %.loopexit.split-lp532
.Ltmp1240:
	b	.LBB25_462
.LBB25_449:
.Ltmp1094:
	ld.d	$a2, $sp, 1224
	move	$fp, $a0
	addi.d	$a0, $sp, 1240
	beq	$a2, $a0, .LBB25_451
# %bb.450:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i164
	ld.d	$a0, $sp, 1240
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_451:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit166
	ld.d	$a0, $sp, 1256
	addi.d	$a1, $sp, 1272
	beq	$a0, $a1, .LBB25_469
# %bb.452:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i167
	ld.d	$a1, $sp, 1272
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB25_469
.LBB25_453:
.Ltmp1079:
	move	$fp, $a0
	b	.LBB25_457
.LBB25_454:
.Ltmp1082:
	ld.d	$a1, $sp, 192                   # 8-byte Folded Reload
	st.d	$a1, $sp, 1728
	ld.d	$a1, $a1, -24
	move	$fp, $a0
	addi.d	$a0, $sp, 1728
	ld.d	$a2, $sp, 200                   # 8-byte Folded Reload
	stx.d	$a2, $a1, $a0
	b	.LBB25_456
.LBB25_455:
.Ltmp1085:
	move	$fp, $a0
	addi.d	$a0, $sp, 1752
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 192                   # 8-byte Folded Reload
	st.d	$a0, $sp, 1728
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 1728
	ld.d	$a2, $sp, 200                   # 8-byte Folded Reload
	stx.d	$a2, $a0, $a1
.LBB25_456:                             # %.body.i
	st.d	$zero, $sp, 1736
.LBB25_457:                             # %.body.i
	addi.d	$a0, $sp, 1856
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB25_475
.LBB25_458:                             # %.loopexit.split-lp543
.Ltmp1067:
	b	.LBB25_474
.LBB25_459:
.Ltmp1132:
.LBB25_460:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit284
	move	$fp, $a0
	b	.LBB25_468
.LBB25_461:                             # %.loopexit531
.Ltmp1215:
.LBB25_462:
	move	$fp, $a0
.LBB25_463:
	addi.d	$a0, $sp, 336
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB25_464:
	addi.d	$a0, $sp, 736
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB25_465:
	ld.d	$a0, $sp, 1128
	addi.d	$a1, $sp, 1144
	beq	$a0, $a1, .LBB25_468
# %bb.466:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i362
	ld.d	$a1, $sp, 1144
.LBB25_467:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit284
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_468:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit284
	addi.d	$a0, $sp, 1288
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
.LBB25_469:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit169
	addi.d	$a0, $sp, 1728
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	b	.LBB25_475
.LBB25_470:                             # %.loopexit542
.Ltmp1062:
	b	.LBB25_474
.LBB25_471:
.Ltmp1076:
	b	.LBB25_474
.LBB25_472:                             # %.loopexit.split-lp
.Ltmp1070:
	b	.LBB25_474
.LBB25_473:                             # %.loopexit
.Ltmp1073:
.LBB25_474:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit421
	move	$fp, $a0
.LBB25_475:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit421
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s7, .LBB25_477
# %bb.476:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i428
	ori	$a1, $zero, 2136
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_477:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit430
	ori	$a0, $zero, 2152
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2168
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB25_479
# %bb.478:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i431
	ori	$a1, $zero, 2168
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_479:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit433
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end25:
	.size	_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_, .Lfunc_end25-_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table25:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Ltmp1043-.Lfunc_begin20       # >> Call Site 1 <<
	.uleb128 .Ltmp1044-.Ltmp1043            #   Call between .Ltmp1043 and .Ltmp1044
	.uleb128 .Ltmp1067-.Lfunc_begin20       #     jumps to .Ltmp1067
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1060-.Lfunc_begin20       # >> Call Site 2 <<
	.uleb128 .Ltmp1061-.Ltmp1060            #   Call between .Ltmp1060 and .Ltmp1061
	.uleb128 .Ltmp1062-.Lfunc_begin20       #     jumps to .Ltmp1062
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1063-.Lfunc_begin20       # >> Call Site 3 <<
	.uleb128 .Ltmp1066-.Ltmp1063            #   Call between .Ltmp1063 and .Ltmp1066
	.uleb128 .Ltmp1067-.Lfunc_begin20       #     jumps to .Ltmp1067
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1066-.Lfunc_begin20       # >> Call Site 4 <<
	.uleb128 .Ltmp1068-.Ltmp1066            #   Call between .Ltmp1066 and .Ltmp1068
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1068-.Lfunc_begin20       # >> Call Site 5 <<
	.uleb128 .Ltmp1069-.Ltmp1068            #   Call between .Ltmp1068 and .Ltmp1069
	.uleb128 .Ltmp1070-.Lfunc_begin20       #     jumps to .Ltmp1070
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1071-.Lfunc_begin20       # >> Call Site 6 <<
	.uleb128 .Ltmp1072-.Ltmp1071            #   Call between .Ltmp1071 and .Ltmp1072
	.uleb128 .Ltmp1073-.Lfunc_begin20       #     jumps to .Ltmp1073
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1074-.Lfunc_begin20       # >> Call Site 7 <<
	.uleb128 .Ltmp1075-.Ltmp1074            #   Call between .Ltmp1074 and .Ltmp1075
	.uleb128 .Ltmp1076-.Lfunc_begin20       #     jumps to .Ltmp1076
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1075-.Lfunc_begin20       # >> Call Site 8 <<
	.uleb128 .Ltmp1077-.Ltmp1075            #   Call between .Ltmp1075 and .Ltmp1077
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1077-.Lfunc_begin20       # >> Call Site 9 <<
	.uleb128 .Ltmp1078-.Ltmp1077            #   Call between .Ltmp1077 and .Ltmp1078
	.uleb128 .Ltmp1079-.Lfunc_begin20       #     jumps to .Ltmp1079
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1080-.Lfunc_begin20       # >> Call Site 10 <<
	.uleb128 .Ltmp1081-.Ltmp1080            #   Call between .Ltmp1080 and .Ltmp1081
	.uleb128 .Ltmp1082-.Lfunc_begin20       #     jumps to .Ltmp1082
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1081-.Lfunc_begin20       # >> Call Site 11 <<
	.uleb128 .Ltmp1083-.Ltmp1081            #   Call between .Ltmp1081 and .Ltmp1083
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1083-.Lfunc_begin20       # >> Call Site 12 <<
	.uleb128 .Ltmp1084-.Ltmp1083            #   Call between .Ltmp1083 and .Ltmp1084
	.uleb128 .Ltmp1085-.Lfunc_begin20       #     jumps to .Ltmp1085
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1086-.Lfunc_begin20       # >> Call Site 13 <<
	.uleb128 .Ltmp1087-.Ltmp1086            #   Call between .Ltmp1086 and .Ltmp1087
	.uleb128 .Ltmp1088-.Lfunc_begin20       #     jumps to .Ltmp1088
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1087-.Lfunc_begin20       # >> Call Site 14 <<
	.uleb128 .Ltmp1089-.Ltmp1087            #   Call between .Ltmp1087 and .Ltmp1089
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1089-.Lfunc_begin20       # >> Call Site 15 <<
	.uleb128 .Ltmp1090-.Ltmp1089            #   Call between .Ltmp1089 and .Ltmp1090
	.uleb128 .Ltmp1091-.Lfunc_begin20       #     jumps to .Ltmp1091
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1090-.Lfunc_begin20       # >> Call Site 16 <<
	.uleb128 .Ltmp1092-.Ltmp1090            #   Call between .Ltmp1090 and .Ltmp1092
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1092-.Lfunc_begin20       # >> Call Site 17 <<
	.uleb128 .Ltmp1093-.Ltmp1092            #   Call between .Ltmp1092 and .Ltmp1093
	.uleb128 .Ltmp1094-.Lfunc_begin20       #     jumps to .Ltmp1094
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1093-.Lfunc_begin20       # >> Call Site 18 <<
	.uleb128 .Ltmp1095-.Ltmp1093            #   Call between .Ltmp1093 and .Ltmp1095
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1095-.Lfunc_begin20       # >> Call Site 19 <<
	.uleb128 .Ltmp1096-.Ltmp1095            #   Call between .Ltmp1095 and .Ltmp1096
	.uleb128 .Ltmp1132-.Lfunc_begin20       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1097-.Lfunc_begin20       # >> Call Site 20 <<
	.uleb128 .Ltmp1098-.Ltmp1097            #   Call between .Ltmp1097 and .Ltmp1098
	.uleb128 .Ltmp1099-.Lfunc_begin20       #     jumps to .Ltmp1099
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1098-.Lfunc_begin20       # >> Call Site 21 <<
	.uleb128 .Ltmp1100-.Ltmp1098            #   Call between .Ltmp1098 and .Ltmp1100
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1100-.Lfunc_begin20       # >> Call Site 22 <<
	.uleb128 .Ltmp1101-.Ltmp1100            #   Call between .Ltmp1100 and .Ltmp1101
	.uleb128 .Ltmp1132-.Lfunc_begin20       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1102-.Lfunc_begin20       # >> Call Site 23 <<
	.uleb128 .Ltmp1103-.Ltmp1102            #   Call between .Ltmp1102 and .Ltmp1103
	.uleb128 .Ltmp1104-.Lfunc_begin20       #     jumps to .Ltmp1104
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1103-.Lfunc_begin20       # >> Call Site 24 <<
	.uleb128 .Ltmp1105-.Ltmp1103            #   Call between .Ltmp1103 and .Ltmp1105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1105-.Lfunc_begin20       # >> Call Site 25 <<
	.uleb128 .Ltmp1106-.Ltmp1105            #   Call between .Ltmp1105 and .Ltmp1106
	.uleb128 .Ltmp1107-.Lfunc_begin20       #     jumps to .Ltmp1107
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1106-.Lfunc_begin20       # >> Call Site 26 <<
	.uleb128 .Ltmp1108-.Ltmp1106            #   Call between .Ltmp1106 and .Ltmp1108
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1108-.Lfunc_begin20       # >> Call Site 27 <<
	.uleb128 .Ltmp1109-.Ltmp1108            #   Call between .Ltmp1108 and .Ltmp1109
	.uleb128 .Ltmp1132-.Lfunc_begin20       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1110-.Lfunc_begin20       # >> Call Site 28 <<
	.uleb128 .Ltmp1111-.Ltmp1110            #   Call between .Ltmp1110 and .Ltmp1111
	.uleb128 .Ltmp1112-.Lfunc_begin20       #     jumps to .Ltmp1112
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1111-.Lfunc_begin20       # >> Call Site 29 <<
	.uleb128 .Ltmp1113-.Ltmp1111            #   Call between .Ltmp1111 and .Ltmp1113
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1113-.Lfunc_begin20       # >> Call Site 30 <<
	.uleb128 .Ltmp1114-.Ltmp1113            #   Call between .Ltmp1113 and .Ltmp1114
	.uleb128 .Ltmp1115-.Lfunc_begin20       #     jumps to .Ltmp1115
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1114-.Lfunc_begin20       # >> Call Site 31 <<
	.uleb128 .Ltmp1116-.Ltmp1114            #   Call between .Ltmp1114 and .Ltmp1116
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1116-.Lfunc_begin20       # >> Call Site 32 <<
	.uleb128 .Ltmp1117-.Ltmp1116            #   Call between .Ltmp1116 and .Ltmp1117
	.uleb128 .Ltmp1132-.Lfunc_begin20       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1118-.Lfunc_begin20       # >> Call Site 33 <<
	.uleb128 .Ltmp1119-.Ltmp1118            #   Call between .Ltmp1118 and .Ltmp1119
	.uleb128 .Ltmp1120-.Lfunc_begin20       #     jumps to .Ltmp1120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1119-.Lfunc_begin20       # >> Call Site 34 <<
	.uleb128 .Ltmp1121-.Ltmp1119            #   Call between .Ltmp1119 and .Ltmp1121
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1121-.Lfunc_begin20       # >> Call Site 35 <<
	.uleb128 .Ltmp1122-.Ltmp1121            #   Call between .Ltmp1121 and .Ltmp1122
	.uleb128 .Ltmp1132-.Lfunc_begin20       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1123-.Lfunc_begin20       # >> Call Site 36 <<
	.uleb128 .Ltmp1124-.Ltmp1123            #   Call between .Ltmp1123 and .Ltmp1124
	.uleb128 .Ltmp1125-.Lfunc_begin20       #     jumps to .Ltmp1125
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1124-.Lfunc_begin20       # >> Call Site 37 <<
	.uleb128 .Ltmp1247-.Ltmp1124            #   Call between .Ltmp1124 and .Ltmp1247
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1247-.Lfunc_begin20       # >> Call Site 38 <<
	.uleb128 .Ltmp1248-.Ltmp1247            #   Call between .Ltmp1247 and .Ltmp1248
	.uleb128 .Ltmp1249-.Lfunc_begin20       #     jumps to .Ltmp1249
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1250-.Lfunc_begin20       # >> Call Site 39 <<
	.uleb128 .Ltmp1251-.Ltmp1250            #   Call between .Ltmp1250 and .Ltmp1251
	.uleb128 .Ltmp1252-.Lfunc_begin20       #     jumps to .Ltmp1252
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1126-.Lfunc_begin20       # >> Call Site 40 <<
	.uleb128 .Ltmp1127-.Ltmp1126            #   Call between .Ltmp1126 and .Ltmp1127
	.uleb128 .Ltmp1132-.Lfunc_begin20       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1127-.Lfunc_begin20       # >> Call Site 41 <<
	.uleb128 .Ltmp1133-.Ltmp1127            #   Call between .Ltmp1127 and .Ltmp1133
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1133-.Lfunc_begin20       # >> Call Site 42 <<
	.uleb128 .Ltmp1134-.Ltmp1133            #   Call between .Ltmp1133 and .Ltmp1134
	.uleb128 .Ltmp1135-.Lfunc_begin20       #     jumps to .Ltmp1135
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1136-.Lfunc_begin20       # >> Call Site 43 <<
	.uleb128 .Ltmp1137-.Ltmp1136            #   Call between .Ltmp1136 and .Ltmp1137
	.uleb128 .Ltmp1138-.Lfunc_begin20       #     jumps to .Ltmp1138
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1128-.Lfunc_begin20       # >> Call Site 44 <<
	.uleb128 .Ltmp1131-.Ltmp1128            #   Call between .Ltmp1128 and .Ltmp1131
	.uleb128 .Ltmp1132-.Lfunc_begin20       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1131-.Lfunc_begin20       # >> Call Site 45 <<
	.uleb128 .Ltmp1253-.Ltmp1131            #   Call between .Ltmp1131 and .Ltmp1253
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1253-.Lfunc_begin20       # >> Call Site 46 <<
	.uleb128 .Ltmp1254-.Ltmp1253            #   Call between .Ltmp1253 and .Ltmp1254
	.uleb128 .Ltmp1255-.Lfunc_begin20       #     jumps to .Ltmp1255
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1254-.Lfunc_begin20       # >> Call Site 47 <<
	.uleb128 .Ltmp1139-.Ltmp1254            #   Call between .Ltmp1254 and .Ltmp1139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1139-.Lfunc_begin20       # >> Call Site 48 <<
	.uleb128 .Ltmp1140-.Ltmp1139            #   Call between .Ltmp1139 and .Ltmp1140
	.uleb128 .Ltmp1141-.Lfunc_begin20       #     jumps to .Ltmp1141
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1142-.Lfunc_begin20       # >> Call Site 49 <<
	.uleb128 .Ltmp1242-.Ltmp1142            #   Call between .Ltmp1142 and .Ltmp1242
	.uleb128 .Ltmp1243-.Lfunc_begin20       #     jumps to .Ltmp1243
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1146-.Lfunc_begin20       # >> Call Site 50 <<
	.uleb128 .Ltmp1147-.Ltmp1146            #   Call between .Ltmp1146 and .Ltmp1147
	.uleb128 .Ltmp1148-.Lfunc_begin20       #     jumps to .Ltmp1148
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1147-.Lfunc_begin20       # >> Call Site 51 <<
	.uleb128 .Ltmp1244-.Ltmp1147            #   Call between .Ltmp1147 and .Ltmp1244
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1244-.Lfunc_begin20       # >> Call Site 52 <<
	.uleb128 .Ltmp1245-.Ltmp1244            #   Call between .Ltmp1244 and .Ltmp1245
	.uleb128 .Ltmp1246-.Lfunc_begin20       #     jumps to .Ltmp1246
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1245-.Lfunc_begin20       # >> Call Site 53 <<
	.uleb128 .Ltmp1149-.Ltmp1245            #   Call between .Ltmp1245 and .Ltmp1149
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1149-.Lfunc_begin20       # >> Call Site 54 <<
	.uleb128 .Ltmp1214-.Ltmp1149            #   Call between .Ltmp1149 and .Ltmp1214
	.uleb128 .Ltmp1215-.Lfunc_begin20       #     jumps to .Ltmp1215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1216-.Lfunc_begin20       # >> Call Site 55 <<
	.uleb128 .Ltmp1219-.Ltmp1216            #   Call between .Ltmp1216 and .Ltmp1219
	.uleb128 .Ltmp1220-.Lfunc_begin20       #     jumps to .Ltmp1220
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1221-.Lfunc_begin20       # >> Call Site 56 <<
	.uleb128 .Ltmp1230-.Ltmp1221            #   Call between .Ltmp1221 and .Ltmp1230
	.uleb128 .Ltmp1231-.Lfunc_begin20       #     jumps to .Ltmp1231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1230-.Lfunc_begin20       # >> Call Site 57 <<
	.uleb128 .Ltmp1232-.Ltmp1230            #   Call between .Ltmp1230 and .Ltmp1232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1232-.Lfunc_begin20       # >> Call Site 58 <<
	.uleb128 .Ltmp1233-.Ltmp1232            #   Call between .Ltmp1232 and .Ltmp1233
	.uleb128 .Ltmp1234-.Lfunc_begin20       #     jumps to .Ltmp1234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1233-.Lfunc_begin20       # >> Call Site 59 <<
	.uleb128 .Ltmp1054-.Ltmp1233            #   Call between .Ltmp1233 and .Ltmp1054
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1054-.Lfunc_begin20       # >> Call Site 60 <<
	.uleb128 .Ltmp1055-.Ltmp1054            #   Call between .Ltmp1054 and .Ltmp1055
	.uleb128 .Ltmp1056-.Lfunc_begin20       #     jumps to .Ltmp1056
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1055-.Lfunc_begin20       # >> Call Site 61 <<
	.uleb128 .Ltmp1057-.Ltmp1055            #   Call between .Ltmp1055 and .Ltmp1057
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1057-.Lfunc_begin20       # >> Call Site 62 <<
	.uleb128 .Ltmp1058-.Ltmp1057            #   Call between .Ltmp1057 and .Ltmp1058
	.uleb128 .Ltmp1059-.Lfunc_begin20       #     jumps to .Ltmp1059
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1045-.Lfunc_begin20       # >> Call Site 63 <<
	.uleb128 .Ltmp1046-.Ltmp1045            #   Call between .Ltmp1045 and .Ltmp1046
	.uleb128 .Ltmp1047-.Lfunc_begin20       #     jumps to .Ltmp1047
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1046-.Lfunc_begin20       # >> Call Site 64 <<
	.uleb128 .Ltmp1048-.Ltmp1046            #   Call between .Ltmp1046 and .Ltmp1048
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1048-.Lfunc_begin20       # >> Call Site 65 <<
	.uleb128 .Ltmp1049-.Ltmp1048            #   Call between .Ltmp1048 and .Ltmp1049
	.uleb128 .Ltmp1050-.Lfunc_begin20       #     jumps to .Ltmp1050
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1051-.Lfunc_begin20       # >> Call Site 66 <<
	.uleb128 .Ltmp1052-.Ltmp1051            #   Call between .Ltmp1051 and .Ltmp1052
	.uleb128 .Ltmp1053-.Lfunc_begin20       #     jumps to .Ltmp1053
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1052-.Lfunc_begin20       # >> Call Site 67 <<
	.uleb128 .Ltmp1238-.Ltmp1052            #   Call between .Ltmp1052 and .Ltmp1238
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1238-.Lfunc_begin20       # >> Call Site 68 <<
	.uleb128 .Ltmp1239-.Ltmp1238            #   Call between .Ltmp1238 and .Ltmp1239
	.uleb128 .Ltmp1240-.Lfunc_begin20       #     jumps to .Ltmp1240
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1235-.Lfunc_begin20       # >> Call Site 69 <<
	.uleb128 .Ltmp1236-.Ltmp1235            #   Call between .Ltmp1235 and .Ltmp1236
	.uleb128 .Ltmp1237-.Lfunc_begin20       #     jumps to .Ltmp1237
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1236-.Lfunc_begin20       # >> Call Site 70 <<
	.uleb128 .Lfunc_end25-.Ltmp1236         #   Call between .Ltmp1236 and .Lfunc_end25
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser10parse_fileEPKc # -- Begin function _ZN2PP11PowerParser10parse_fileEPKc
	.p2align	5
	.type	_ZN2PP11PowerParser10parse_fileEPKc,@function
_ZN2PP11PowerParser10parse_fileEPKc:    # @_ZN2PP11PowerParser10parse_fileEPKc
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	addi.d	$s2, $sp, 48
	st.d	$s2, $sp, 32
	beqz	$a1, .LBB26_20
# %bb.1:
	move	$s0, $a1
	move	$fp, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 64
	move	$a0, $s2
	bltu	$s1, $a1, .LBB26_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 64
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB26_3:                               # %._crit_edge.i.i
	beqz	$s1, .LBB26_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s1, $a1, .LBB26_6
# %bb.5:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB26_7
.LBB26_6:
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_7:
	ld.d	$a0, $sp, 64
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 40
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $sp, 16
	ld.d	$a1, $sp, 40
	ld.d	$s0, $sp, 32
	st.d	$s1, $sp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 64
	move	$a0, $s1
	bltu	$a1, $a2, .LBB26_10
# %bb.8:                                # %.noexc.i9
.Ltmp1256:
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 64
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1257:
# %bb.9:                                # %.noexc10
	ld.d	$a1, $sp, 64
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB26_10:                              # %._crit_edge.i.i8
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB26_14
# %bb.11:                               # %._crit_edge.i.i8
	bnez	$a1, .LBB26_13
# %bb.12:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB26_14
.LBB26_13:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_14:
	ld.d	$a0, $sp, 64
	st.d	$a0, $sp, 8
.Ltmp1259:
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10parse_fileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1260:
# %bb.15:
	ld.d	$a0, $sp, 0
	beq	$a0, $s1, .LBB26_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_17:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 32
	beq	$a0, $s2, .LBB26_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i11
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit13
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB26_20:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB26_21:
.Ltmp1258:
	move	$fp, $a0
	ld.d	$a0, $sp, 32
	beq	$a0, $s2, .LBB26_24
	b	.LBB26_26
.LBB26_22:
.Ltmp1261:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	bne	$a2, $s1, .LBB26_25
# %bb.23:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit16
	ld.d	$a0, $sp, 32
	bne	$a0, $s2, .LBB26_26
.LBB26_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit19
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB26_25:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i14
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 32
	beq	$a0, $s2, .LBB26_24
.LBB26_26:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i17
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end26:
	.size	_ZN2PP11PowerParser10parse_fileEPKc, .Lfunc_end26-_ZN2PP11PowerParser10parse_fileEPKc
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table26:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21  # >> Call Site 1 <<
	.uleb128 .Ltmp1256-.Lfunc_begin21       #   Call between .Lfunc_begin21 and .Ltmp1256
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1256-.Lfunc_begin21       # >> Call Site 2 <<
	.uleb128 .Ltmp1257-.Ltmp1256            #   Call between .Ltmp1256 and .Ltmp1257
	.uleb128 .Ltmp1258-.Lfunc_begin21       #     jumps to .Ltmp1258
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1257-.Lfunc_begin21       # >> Call Site 3 <<
	.uleb128 .Ltmp1259-.Ltmp1257            #   Call between .Ltmp1257 and .Ltmp1259
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1259-.Lfunc_begin21       # >> Call Site 4 <<
	.uleb128 .Ltmp1260-.Ltmp1259            #   Call between .Ltmp1259 and .Ltmp1260
	.uleb128 .Ltmp1261-.Lfunc_begin21       #     jumps to .Ltmp1261
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1260-.Lfunc_begin21       # >> Call Site 5 <<
	.uleb128 .Lfunc_end26-.Ltmp1260         #   Call between .Ltmp1260 and .Lfunc_end26
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser15NumIncludeFilesEv # -- Begin function _ZN2PP11PowerParser15NumIncludeFilesEv
	.p2align	5
	.type	_ZN2PP11PowerParser15NumIncludeFilesEv,@function
_ZN2PP11PowerParser15NumIncludeFilesEv: # @_ZN2PP11PowerParser15NumIncludeFilesEv
# %bb.0:
	ld.w	$a0, $a0, 768
	ret
.Lfunc_end27:
	.size	_ZN2PP11PowerParser15NumIncludeFilesEv, .Lfunc_end27-_ZN2PP11PowerParser15NumIncludeFilesEv
                                        # -- End function
	.globl	_ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei # -- Begin function _ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei
	.p2align	5
	.type	_ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei,@function
_ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei: # @_ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	st.w	$a2, $sp, 8
	bltz	$a2, .LBB28_13
# %bb.1:
	ld.d	$a0, $a1, 768
	bgeu	$a2, $a0, .LBB28_13
# %bb.2:
	ld.d	$a3, $a1, 744
	addi.d	$a5, $a1, 736
	beqz	$a3, .LBB28_7
# %bb.3:                                # %.lr.ph.i.i.i.i.preheader
	ori	$a4, $zero, 16
	ori	$a6, $zero, 24
	move	$a0, $a5
	.p2align	4, , 16
.LBB28_4:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a7, $a3, 32
	slt	$a7, $a7, $a2
	masknez	$t0, $a3, $a7
	masknez	$t1, $a4, $a7
	maskeqz	$t2, $a6, $a7
	or	$t1, $t2, $t1
	ldx.d	$a3, $a3, $t1
	maskeqz	$a0, $a0, $a7
	or	$a0, $a0, $t0
	bnez	$a3, .LBB28_4
# %bb.5:                                # %_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEE11lower_boundERS9_.exit.i
	beq	$a0, $a5, .LBB28_7
# %bb.6:
	ld.w	$a3, $a0, 32
	move	$a5, $a0
	bge	$a2, $a3, .LBB28_8
.LBB28_7:                               # %.critedge.i
	addi.d	$a0, $a1, 728
	addi.d	$a1, $sp, 8
	st.d	$a1, $sp, 16
	pcalau12i	$a1, %pc_hi20(_ZSt19piecewise_construct)
	addi.d	$a2, $a1, %pc_lo12(_ZSt19piecewise_construct)
	addi.d	$a3, $sp, 16
	addi.d	$a4, $sp, 15
	move	$a1, $a5
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_)
	jirl	$ra, $ra, 0
.LBB28_8:                               # %_ZNSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEEixERS9_.exit
	addi.d	$a1, $fp, 16
	st.d	$a1, $fp, 0
	ld.d	$a2, $a0, 48
	ld.d	$s0, $a0, 40
	ori	$a0, $zero, 16
	st.d	$a2, $sp, 16
	bltu	$a2, $a0, .LBB28_10
# %bb.9:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 16
	move	$a1, $a0
	st.d	$a0, $fp, 0
	st.d	$a2, $fp, 16
.LBB28_10:                              # %._crit_edge.i.i
	addi.w	$a0, $zero, -1
	beq	$a2, $a0, .LBB28_15
# %bb.11:                               # %._crit_edge.i.i
	bnez	$a2, .LBB28_14
# %bb.12:
	ld.b	$a0, $s0, 0
	st.b	$a0, $a1, 0
	b	.LBB28_15
.LBB28_13:                              # %._crit_edge.i.i2
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	b	.LBB28_16
.LBB28_14:
	addi.d	$a2, $a2, 1
	move	$a0, $a1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB28_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 16
	st.d	$a0, $fp, 8
.LBB28_16:
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end28:
	.size	_ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei, .Lfunc_end28-_ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser16ListIncludeFilesEv # -- Begin function _ZN2PP11PowerParser16ListIncludeFilesEv
	.p2align	5
	.type	_ZN2PP11PowerParser16ListIncludeFilesEv,@function
_ZN2PP11PowerParser16ListIncludeFilesEv: # @_ZN2PP11PowerParser16ListIncludeFilesEv
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a0
	ld.w	$s0, $a0, 768
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cerr)
	ld.d	$s1, $a0, %got_pc_lo12(_ZSt4cerr)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1)
	ori	$a2, $zero, 26
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(.L.str.2)
	addi.d	$a1, $a1, %pc_lo12(.L.str.2)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	blez	$s0, .LBB29_7
# %bb.1:                                # %.lr.ph
	move	$s1, $zero
	addi.d	$s7, $sp, 16
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cerr)
	ld.d	$s2, $a0, %got_pc_lo12(_ZSt4cerr)
	pcalau12i	$a0, %pc_hi20(.L.str.3)
	addi.d	$s3, $a0, %pc_lo12(.L.str.3)
	pcalau12i	$a0, %pc_hi20(.L.str.4)
	addi.d	$s4, $a0, %pc_lo12(.L.str.4)
	pcalau12i	$a0, %pc_hi20(.L.str.2)
	addi.d	$s5, $a0, %pc_lo12(.L.str.2)
	b	.LBB29_3
	.p2align	4, , 16
.LBB29_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB29_3 Depth=1
	addi.w	$s1, $s1, 1
	beq	$s0, $s1, .LBB29_7
.LBB29_3:                               # =>This Inner Loop Header: Depth=1
	ori	$a2, $zero, 16
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	move	$s6, $a0
	ori	$a2, $zero, 3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 0
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser14GetIncludeFileB5cxx11Ei)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp1262:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1263:
# %bb.4:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB29_3 Depth=1
.Ltmp1264:
	ori	$a2, $zero, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1265:
# %bb.5:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB29_3 Depth=1
	ld.d	$a0, $sp, 0
	beq	$a0, $s7, .LBB29_2
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB29_3 Depth=1
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB29_2
.LBB29_7:                               # %._crit_edge
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB29_8:
.Ltmp1266:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s7, .LBB29_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i8
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end29:
	.size	_ZN2PP11PowerParser16ListIncludeFilesEv, .Lfunc_end29-_ZN2PP11PowerParser16ListIncludeFilesEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table29:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Lfunc_begin22-.Lfunc_begin22  # >> Call Site 1 <<
	.uleb128 .Ltmp1262-.Lfunc_begin22       #   Call between .Lfunc_begin22 and .Ltmp1262
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1262-.Lfunc_begin22       # >> Call Site 2 <<
	.uleb128 .Ltmp1265-.Ltmp1262            #   Call between .Ltmp1262 and .Ltmp1265
	.uleb128 .Ltmp1266-.Lfunc_begin22       #     jumps to .Ltmp1266
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1265-.Lfunc_begin22       # >> Call Site 3 <<
	.uleb128 .Lfunc_end29-.Ltmp1265         #   Call between .Ltmp1265 and .Lfunc_end29
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end22:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri # -- Begin function _ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri
	.p2align	5
	.type	_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri,@function
_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri: # @_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a2
	ld.d	$a2, $a2, 8
	move	$s2, $a3
	move	$s1, $a1
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.w	$s3, $s1, 8
	ld.w	$fp, $s2, 0
	bge	$fp, $s3, .LBB30_10
# %bb.1:                                # %.preheader
	st.d	$s2, $sp, 0                     # 8-byte Folded Spill
	addi.d	$s6, $s0, 16
	addi.d	$s5, $fp, 1
	ori	$s7, $zero, 13
	ori	$a3, $zero, 10
	ori	$a4, $zero, 15
	move	$s4, $fp
	b	.LBB30_4
	.p2align	4, , 16
.LBB30_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB30_4 Depth=1
	stx.b	$s8, $a0, $s2
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s2, 1
	st.d	$a1, $s0, 8
	stx.b	$zero, $a0, $a1
.LBB30_3:                               #   in Loop: Header=BB30_4 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s5, $s5, 1
	beq	$s3, $s4, .LBB30_8
.LBB30_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ldx.bu	$s8, $a0, $s4
	beq	$s8, $s7, .LBB30_3
# %bb.5:                                #   in Loop: Header=BB30_4 Depth=1
	beq	$s8, $a3, .LBB30_9
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB30_4 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s6, 0
	ld.d	$s2, $s0, 8
	xor	$a2, $a0, $s6
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a4, $a2
	or	$a1, $a2, $a1
	bltu	$s2, $a1, .LBB30_2
# %bb.7:                                #   in Loop: Header=BB30_4 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ori	$a4, $zero, 15
	ori	$a3, $zero, 10
	ld.d	$a0, $s0, 0
	b	.LBB30_2
.LBB30_8:
	move	$s5, $s3
.LBB30_9:                               # %.sink.split
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	st.w	$s5, $a0, 0
.LBB30_10:
	slt	$a0, $fp, $s3
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end30:
	.size	_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri, .Lfunc_end30-_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri # -- Begin function _ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri
	.p2align	5
	.type	_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri,@function
_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri: # @_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a2
	ld.d	$a2, $a2, 8
	move	$fp, $a3
	move	$s1, $a1
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.w	$s3, $s1, 8
	ld.w	$s8, $fp, 0
	bge	$s8, $s3, .LBB31_16
# %bb.1:                                # %.preheader
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	move	$s4, $zero
	addi.d	$s5, $s0, 16
	slli.d	$a0, $s3, 32
	ori	$a1, $zero, 0
	lu32i.d	$a1, -1
	add.d	$a0, $a0, $a1
	srai.d	$s7, $a0, 32
	addi.d	$s6, $s8, 1
	ori	$a3, $zero, 15
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	b	.LBB31_3
	.p2align	4, , 16
.LBB31_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB31_3 Depth=1
	stx.b	$fp, $a0, $s2
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s2, 1
	st.d	$a1, $s0, 8
	stx.b	$zero, $a0, $a1
	addi.d	$s8, $s8, 1
	addi.d	$s6, $s6, 1
	beq	$s3, $s8, .LBB31_14
.LBB31_3:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ldx.bu	$fp, $a0, $s8
	bge	$s8, $s7, .LBB31_6
# %bb.4:                                #   in Loop: Header=BB31_3 Depth=1
	ori	$a1, $zero, 47
	bne	$fp, $a1, .LBB31_6
# %bb.5:                                #   in Loop: Header=BB31_3 Depth=1
	add.d	$a0, $a0, $s8
	ld.b	$a0, $a0, 1
	andi	$a0, $a0, 255
	addi.d	$a0, $a0, -47
	sltui	$a0, $a0, 1
	or	$s4, $s4, $a0
	b	.LBB31_12
	.p2align	4, , 16
.LBB31_6:                               #   in Loop: Header=BB31_3 Depth=1
	andi	$a0, $s4, 1
	beqz	$a0, .LBB31_8
# %bb.7:                                #   in Loop: Header=BB31_3 Depth=1
	ori	$s4, $zero, 1
	b	.LBB31_12
	.p2align	4, , 16
.LBB31_8:                               # %switch.early.test
                                        #   in Loop: Header=BB31_3 Depth=1
	ori	$s4, $zero, 1
	ori	$a0, $zero, 33
	beq	$fp, $a0, .LBB31_12
# %bb.9:                                # %switch.early.test
                                        #   in Loop: Header=BB31_3 Depth=1
	ori	$a0, $zero, 35
	beq	$fp, $a0, .LBB31_12
# %bb.10:                               # %switch.early.test
                                        #   in Loop: Header=BB31_3 Depth=1
	ori	$a0, $zero, 59
	beq	$fp, $a0, .LBB31_15
# %bb.11:                               # %.thread.fold.split
                                        #   in Loop: Header=BB31_3 Depth=1
	move	$s4, $zero
	.p2align	4, , 16
.LBB31_12:                              # %.thread
                                        #   in Loop: Header=BB31_3 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s5, 0
	ld.d	$s2, $s0, 8
	xor	$a2, $a0, $s5
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a3, $a2
	or	$a1, $a2, $a1
	bltu	$s2, $a1, .LBB31_2
# %bb.13:                               #   in Loop: Header=BB31_3 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ori	$a3, $zero, 15
	ld.d	$a0, $s0, 0
	b	.LBB31_2
.LBB31_14:
	move	$s6, $s3
.LBB31_15:                              # %.sink.split
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.w	$s6, $a0, 0
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
.LBB31_16:
	slt	$a0, $s8, $s3
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.Lfunc_end31:
	.size	_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri, .Lfunc_end31-_ZN2PP11PowerParser23get_sc_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.w	$a0, $a1, 8
	beqz	$a0, .LBB32_14
# %bb.1:                                # %._crit_edge.i.i
	move	$s0, $a1
	addi.d	$fp, $sp, 24
	st.d	$fp, $sp, 8
	ori	$a0, $zero, 2336
	st.h	$a0, $sp, 24
	ori	$a0, $zero, 2
	st.d	$a0, $sp, 16
	st.b	$zero, $sp, 26
	ori	$a3, $zero, 2
	move	$a0, $a1
	move	$a1, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$s2, $zero, -1
	bstrpick.d	$a2, $a0, 31, 0
	move	$a3, $s2
	lu32i.d	$a3, 0
	ld.d	$a1, $s0, 8
	xor	$a2, $a2, $a3
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $a1, $a2
	or	$a0, $a2, $a0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB32_5
# %bb.2:                                # %._crit_edge.i.i
	bne	$a0, $s2, .LBB32_4
# %bb.3:
	ld.d	$a0, $s0, 0
	st.d	$zero, $s0, 8
	st.b	$zero, $a0, 0
	b	.LBB32_5
.LBB32_4:
	sltu	$a2, $a0, $a1
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a2, $a0, $a1
.Ltmp1267:
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm)
	jirl	$ra, $ra, 0
.Ltmp1268:
.LBB32_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm.exit
	ld.w	$a0, $s0, 8
	beqz	$a0, .LBB32_12
# %bb.6:
	ld.d	$a1, $sp, 8
	ld.d	$a3, $sp, 16
	addi.w	$s1, $a0, -1
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$a1, $a0, 0
	beq	$a1, $s2, .LBB32_12
# %bb.7:
	ld.d	$a3, $s0, 8
	addi.w	$a1, $a0, 1
	bltu	$a3, $a1, .LBB32_15
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
	sub.w	$a0, $s1, $a1
	beq	$a0, $s2, .LBB32_12
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
	addi.w	$a2, $zero, -2
	bne	$a0, $a2, .LBB32_11
# %bb.10:
	ld.d	$a0, $s0, 0
	st.d	$a1, $s0, 8
	stx.b	$zero, $a0, $a1
	b	.LBB32_12
.LBB32_11:
	addi.w	$a0, $a0, 1
	sub.d	$a2, $a3, $a1
	sltu	$a3, $a0, $a2
	masknez	$a2, $a2, $a3
	maskeqz	$a0, $a0, $a3
	or	$a2, $a0, $a2
.Ltmp1270:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm)
	jirl	$ra, $ra, 0
.Ltmp1271:
.LBB32_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm.exit32
	ld.d	$a0, $sp, 8
	beq	$a0, $fp, .LBB32_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB32_14:
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB32_15:
.Ltmp1272:
	pcalau12i	$a0, %pc_hi20(.L.str.243)
	addi.d	$a0, $a0, %pc_lo12(.L.str.243)
	pcalau12i	$a4, %pc_hi20(.L.str.242)
	move	$a2, $a1
	addi.d	$a1, $a4, %pc_lo12(.L.str.242)
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.Ltmp1273:
# %bb.16:                               # %.noexc30
.LBB32_17:
.Ltmp1269:
	b	.LBB32_19
.LBB32_18:
.Ltmp1274:
.LBB32_19:
	move	$s0, $a0
	ld.d	$a0, $sp, 8
	beq	$a0, $fp, .LBB32_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB32_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end32:
	.size	_ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end32-_ZN2PP11PowerParser21eliminate_white_spaceERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table32:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Lfunc_begin23-.Lfunc_begin23  # >> Call Site 1 <<
	.uleb128 .Ltmp1267-.Lfunc_begin23       #   Call between .Lfunc_begin23 and .Ltmp1267
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1267-.Lfunc_begin23       # >> Call Site 2 <<
	.uleb128 .Ltmp1268-.Ltmp1267            #   Call between .Ltmp1267 and .Ltmp1268
	.uleb128 .Ltmp1269-.Lfunc_begin23       #     jumps to .Ltmp1269
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1268-.Lfunc_begin23       # >> Call Site 3 <<
	.uleb128 .Ltmp1270-.Ltmp1268            #   Call between .Ltmp1268 and .Ltmp1270
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1270-.Lfunc_begin23       # >> Call Site 4 <<
	.uleb128 .Ltmp1271-.Ltmp1270            #   Call between .Ltmp1270 and .Ltmp1271
	.uleb128 .Ltmp1274-.Lfunc_begin23       #     jumps to .Ltmp1274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1271-.Lfunc_begin23       # >> Call Site 5 <<
	.uleb128 .Ltmp1272-.Ltmp1271            #   Call between .Ltmp1271 and .Ltmp1272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1272-.Lfunc_begin23       # >> Call Site 6 <<
	.uleb128 .Ltmp1273-.Ltmp1272            #   Call between .Ltmp1272 and .Ltmp1273
	.uleb128 .Ltmp1274-.Lfunc_begin23       #     jumps to .Ltmp1274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1273-.Lfunc_begin23       # >> Call Site 7 <<
	.uleb128 .Lfunc_end32-.Ltmp1273         #   Call between .Ltmp1273 and .Lfunc_end32
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,"axG",@progbits,_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,comdat
	.weak	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ # -- Begin function _ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.p2align	5
	.type	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,@function
_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_: # @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$fp, $a0, 8
	move	$s0, $a1
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	bne	$fp, $a0, .LBB33_3
# %bb.1:
	beqz	$fp, .LBB33_4
# %bb.2:
	ld.d	$a0, $s1, 0
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	b	.LBB33_5
.LBB33_3:
	move	$a0, $zero
	b	.LBB33_5
.LBB33_4:
	ori	$a0, $zero, 1
.LBB33_5:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end33:
	.size	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_, .Lfunc_end33-_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP3Cmd10get_stringB5cxx11Ei,"axG",@progbits,_ZN2PP3Cmd10get_stringB5cxx11Ei,comdat
	.weak	_ZN2PP3Cmd10get_stringB5cxx11Ei # -- Begin function _ZN2PP3Cmd10get_stringB5cxx11Ei
	.p2align	5
	.type	_ZN2PP3Cmd10get_stringB5cxx11Ei,@function
_ZN2PP3Cmd10get_stringB5cxx11Ei:        # @_ZN2PP3Cmd10get_stringB5cxx11Ei
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$a4, $a1, 232
	ld.d	$a3, $a1, 200
	sub.d	$a5, $a4, $a3
	srli.d	$a5, $a5, 3
	sltu	$a4, $zero, $a4
	ld.d	$a6, $a1, 208
	ld.d	$a7, $a1, 216
	sub.d	$a5, $a5, $a4
	ld.d	$t0, $a1, 192
	ld.d	$a4, $a1, 176
	sub.d	$a6, $a6, $a7
	srli.d	$a6, $a6, 7
	alsl.d	$a5, $a5, $a6, 2
	sub.d	$a6, $t0, $a4
	srli.d	$a6, $a6, 7
	add.w	$a5, $a5, $a6
	move	$fp, $a0
	bge	$a2, $a5, .LBB34_4
# %bb.1:
	ld.d	$a0, $a1, 184
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $a2
	bltz	$a0, .LBB34_5
# %bb.2:
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB34_6
# %bb.3:
	slli.d	$a0, $a2, 7
	add.d	$a2, $a4, $a0
	b	.LBB34_8
.LBB34_4:                               # %._crit_edge.i.i
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	b	.LBB34_15
.LBB34_5:
	srai.d	$a1, $a0, 2
	b	.LBB34_7
.LBB34_6:
	srli.d	$a1, $a0, 2
.LBB34_7:
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $a3, $a2
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a2, $a2, $a0
.LBB34_8:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$a0, $fp, 16
	ld.d	$a1, $a2, 8
	ld.d	$s0, $a2, 0
	st.d	$a0, $fp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a2, .LBB34_10
# %bb.9:                                # %.noexc.i.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB34_10:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB34_14
# %bb.11:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB34_13
# %bb.12:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB34_14
.LBB34_13:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB34_14:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
.LBB34_15:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end34:
	.size	_ZN2PP3Cmd10get_stringB5cxx11Ei, .Lfunc_end34-_ZN2PP3Cmd10get_stringB5cxx11Ei
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP8VariableD2Ev,"axG",@progbits,_ZN2PP8VariableD2Ev,comdat
	.weak	_ZN2PP8VariableD2Ev             # -- Begin function _ZN2PP8VariableD2Ev
	.p2align	5
	.type	_ZN2PP8VariableD2Ev,@function
_ZN2PP8VariableD2Ev:                    # @_ZN2PP8VariableD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 104
	addi.d	$a1, $fp, 120
	beq	$a0, $a1, .LBB35_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB35_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB35_4
# %bb.3:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB35_4:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $fp, 32
	ld.d	$s0, $fp, 40
	beq	$a0, $s0, .LBB35_10
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB35_7
	.p2align	4, , 16
.LBB35_6:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB35_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB35_9
.LBB35_7:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB35_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB35_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB35_6
.LBB35_9:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 32
.LBB35_10:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB35_12
# %bb.11:
	ld.d	$a1, $fp, 48
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB35_12:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB35_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB35_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit4
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end35:
	.size	_ZN2PP8VariableD2Ev, .Lfunc_end35-_ZN2PP8VariableD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_,"axG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_,comdat
	.weak	_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_ # -- Begin function _ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_
	.p2align	5
	.type	_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_,@function
_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_: # @_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a2, $a0, 64
	ld.d	$a0, $a0, 48
	addi.d	$a2, $a2, -432
	beq	$a0, $a2, .LBB36_2
# %bb.1:
	pcaddu18i	$ra, %call36(_ZN2PP3CmdC2ERKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 48
	addi.d	$a0, $a0, 432
	st.d	$a0, $fp, 48
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB36_2:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jr	$t8
.Lfunc_end36:
	.size	_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_, .Lfunc_end36-_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP3CmdD2Ev,"axG",@progbits,_ZN2PP3CmdD2Ev,comdat
	.weak	_ZN2PP3CmdD2Ev                  # -- Begin function _ZN2PP3CmdD2Ev
	.p2align	5
	.type	_ZN2PP3CmdD2Ev,@function
_ZN2PP3CmdD2Ev:                         # @_ZN2PP3CmdD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 392
	beqz	$a0, .LBB37_2
# %bb.1:
	ld.d	$a1, $fp, 424
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $fp, 392
	st.w	$zero, $fp, 400
	st.d	$zero, $fp, 408
	st.w	$zero, $fp, 416
	st.d	$zero, $fp, 424
.LBB37_2:                               # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit
	ld.d	$a0, $fp, 352
	beqz	$a0, .LBB37_4
# %bb.3:
	ld.d	$a1, $fp, 384
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $fp, 352
	st.w	$zero, $fp, 360
	st.d	$zero, $fp, 368
	st.w	$zero, $fp, 376
	st.d	$zero, $fp, 384
.LBB37_4:                               # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit5
	ld.d	$a0, $fp, 328
	ld.d	$s0, $fp, 336
	beq	$a0, $s0, .LBB37_10
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB37_7
	.p2align	4, , 16
.LBB37_6:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB37_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB37_9
.LBB37_7:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB37_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB37_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB37_6
.LBB37_9:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 328
.LBB37_10:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB37_12
# %bb.11:
	ld.d	$a1, $fp, 344
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_12:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 304
	ld.d	$s0, $fp, 312
	beq	$a0, $s0, .LBB37_18
# %bb.13:                               # %.lr.ph.i.i8.preheader
	addi.d	$s1, $a0, 16
	b	.LBB37_15
	.p2align	4, , 16
.LBB37_14:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i11
                                        #   in Loop: Header=BB37_15 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB37_17
.LBB37_15:                              # %.lr.ph.i.i8
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB37_14
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i10
                                        #   in Loop: Header=BB37_15 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB37_14
.LBB37_17:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i13
	ld.d	$a0, $fp, 304
.LBB37_18:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i15
	beqz	$a0, .LBB37_20
# %bb.19:
	ld.d	$a1, $fp, 320
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_20:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit18
	ld.d	$a0, $fp, 272
	addi.d	$a1, $fp, 288
	beq	$a0, $a1, .LBB37_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 240
	addi.d	$a1, $fp, 256
	beq	$a0, $a1, .LBB37_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i19
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21
	addi.d	$a0, $fp, 160
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 128
	addi.d	$a1, $fp, 144
	beq	$a0, $a1, .LBB37_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	ld.d	$a0, $fp, 96
	addi.d	$a1, $fp, 112
	beq	$a0, $a1, .LBB37_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i25
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
	ld.d	$a0, $fp, 48
	addi.d	$a1, $fp, 64
	beq	$a0, $a1, .LBB37_30
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit30
	ld.d	$a0, $fp, 8
	addi.d	$a1, $fp, 24
	beq	$a0, $a1, .LBB37_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB37_32:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end37:
	.size	_ZN2PP3CmdD2Ev, .Lfunc_end37-_ZN2PP3CmdD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.weak	_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a1
	move	$s0, $a0
	addi.d	$a0, $a0, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s2, $sp, 16
	ori	$s5, $zero, 3
	ori	$s6, $zero, 16
	addi.w	$s7, $zero, -1
	b	.LBB38_2
	.p2align	4, , 16
.LBB38_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB38_2 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 128
.LBB38_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s4, $a2, .LBB38_18
# %bb.3:                                #   in Loop: Header=BB38_2 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s4, $a2
	bltz	$a2, .LBB38_6
# %bb.4:                                #   in Loop: Header=BB38_2 Depth=1
	bltu	$s5, $a2, .LBB38_7
# %bb.5:                                #   in Loop: Header=BB38_2 Depth=1
	add.d	$s8, $a1, $s3
	b	.LBB38_9
	.p2align	4, , 16
.LBB38_6:                               #   in Loop: Header=BB38_2 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB38_8
	.p2align	4, , 16
.LBB38_7:                               #   in Loop: Header=BB38_2 Depth=1
	srli.d	$a1, $a2, 2
.LBB38_8:                               #   in Loop: Header=BB38_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$s8, $a0, $a1
.LBB38_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB38_2 Depth=1
	ld.d	$a1, $fp, 8
	ld.d	$s1, $fp, 0
	st.d	$s2, $sp, 0
	st.d	$a1, $sp, 32
	move	$a0, $s2
	bltu	$a1, $s6, .LBB38_11
# %bb.10:                               # %.noexc.i
                                        #   in Loop: Header=BB38_2 Depth=1
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB38_11:                              # %._crit_edge.i.i
                                        #   in Loop: Header=BB38_2 Depth=1
	beq	$a1, $s7, .LBB38_15
# %bb.12:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB38_2 Depth=1
	bnez	$a1, .LBB38_14
# %bb.13:                               #   in Loop: Header=BB38_2 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB38_15
	.p2align	4, , 16
.LBB38_14:                              #   in Loop: Header=BB38_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB38_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
                                        #   in Loop: Header=BB38_2 Depth=1
	ld.d	$a0, $sp, 32
	st.d	$a0, $sp, 8
	addi.d	$a0, $s8, 88
.Ltmp1275:
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1276:
# %bb.16:                               # %_ZN2PP4Word12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
                                        #   in Loop: Header=BB38_2 Depth=1
	ld.d	$a0, $sp, 0
	beq	$a0, $s2, .LBB38_1
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB38_2 Depth=1
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB38_1
.LBB38_18:
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB38_19:
.Ltmp1277:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s2, .LBB38_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i5
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB38_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit7
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end38:
	.size	_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end38-_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZN2PP3Cmd12set_filenameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table38:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24  # >> Call Site 1 <<
	.uleb128 .Ltmp1275-.Lfunc_begin24       #   Call between .Lfunc_begin24 and .Ltmp1275
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1275-.Lfunc_begin24       # >> Call Site 2 <<
	.uleb128 .Ltmp1276-.Ltmp1275            #   Call between .Ltmp1275 and .Ltmp1276
	.uleb128 .Ltmp1277-.Lfunc_begin24       #     jumps to .Ltmp1277
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1276-.Lfunc_begin24       # >> Call Site 3 <<
	.uleb128 .Lfunc_end38-.Ltmp1276         #   Call between .Ltmp1276 and .Lfunc_end38
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser15handle_exe_argsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParser15handle_exe_argsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser15handle_exe_argsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser15handle_exe_argsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser15handle_exe_argsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:
	addi.d	$sp, $sp, -1040
	.cfi_def_cfa_offset 1040
	st.d	$ra, $sp, 1032                  # 8-byte Folded Spill
	st.d	$fp, $sp, 1024                  # 8-byte Folded Spill
	st.d	$s0, $sp, 1016                  # 8-byte Folded Spill
	st.d	$s1, $sp, 1008                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1000                  # 8-byte Folded Spill
	st.d	$s3, $sp, 992                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	ld.w	$a1, $a1, 8
	beqz	$a1, .LBB39_33
# %bb.1:
	move	$fp, $a0
	addi.d	$a0, $sp, 592
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	st.w	$zero, $sp, 588
	addi.d	$s2, $sp, 136
	ld.d	$a1, $s0, 8
	ld.d	$s0, $s0, 0
	st.d	$s2, $sp, 120
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 984
	move	$a0, $s2
	bltu	$a1, $a2, .LBB39_4
# %bb.2:                                # %.noexc.i
.Ltmp1278:
	addi.d	$a0, $sp, 120
	addi.d	$a1, $sp, 984
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1279:
# %bb.3:                                # %.noexc
	ld.d	$a1, $sp, 984
	st.d	$a0, $sp, 120
	st.d	$a1, $sp, 136
.LBB39_4:                               # %._crit_edge.i.i
	addi.w	$s1, $zero, -1
	beq	$a1, $s1, .LBB39_8
# %bb.5:                                # %._crit_edge.i.i
	bnez	$a1, .LBB39_7
# %bb.6:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB39_8
.LBB39_7:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB39_8:                               # %._crit_edge.i.i14
	ld.d	$a0, $sp, 984
	st.d	$a0, $sp, 128
	addi.d	$s0, $sp, 104
	st.d	$s0, $sp, 88
	st.d	$zero, $sp, 96
	st.b	$zero, $sp, 104
	addi.d	$a4, $fp, 592
	addi.d	$a3, $fp, 776
	addi.d	$a2, $fp, 680
.Ltmp1281:
	addi.d	$a0, $sp, 588
	st.d	$a0, $sp, 8
	addi.d	$t0, $sp, 592
	addi.d	$a0, $sp, 152
	addi.d	$a1, $sp, 120
	ori	$a5, $zero, 1
	ori	$a6, $zero, 1
	addi.d	$a7, $sp, 88
	st.d	$t0, $sp, 0
	pcaddu18i	$ra, %call36(_ZN2PP3CmdC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp1282:
# %bb.9:
	ld.d	$a0, $sp, 88
	beq	$a0, $s0, .LBB39_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 120
	beq	$a0, $s2, .LBB39_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i17
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit19
.Ltmp1284:
	addi.d	$a1, $sp, 592
	addi.d	$a2, $sp, 588
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1285:
# %bb.14:
	ldptr.d	$a2, $fp, 2272
	addi.d	$a0, $fp, 2047
	addi.d	$s0, $a0, 217
.Ltmp1286:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1287:
# %bb.15:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
.Ltmp1288:
	addi.d	$a0, $sp, 152
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1289:
# %bb.16:
	ld.d	$a0, $sp, 384
	ld.d	$a1, $sp, 352
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $sp, 360
	ld.d	$a3, $sp, 368
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $sp, 344
	ld.d	$a4, $sp, 328
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 32
	beqz	$a0, .LBB39_23
# %bb.17:                               # %._crit_edge.i.i29
	pcalau12i	$a0, %pc_hi20(.L.str.17)
	addi.d	$a0, $a0, %pc_lo12(.L.str.17)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 8
	addi.d	$s2, $sp, 72
	st.d	$s2, $sp, 56
	st.d	$a1, $sp, 72
	st.w	$a0, $sp, 80
	ori	$a0, $zero, 12
	st.d	$a0, $sp, 64
	st.b	$zero, $sp, 84
	addi.d	$s3, $sp, 40
	ldptr.d	$a1, $fp, 2272
	ldptr.d	$s0, $fp, 2264
	st.d	$s3, $sp, 24
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 984
	move	$a0, $s3
	bltu	$a1, $a2, .LBB39_20
# %bb.18:                               # %.noexc.i34
.Ltmp1290:
	addi.d	$a0, $sp, 24
	addi.d	$a1, $sp, 984
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1291:
# %bb.19:                               # %.noexc35
	ld.d	$a1, $sp, 984
	st.d	$a0, $sp, 24
	st.d	$a1, $sp, 40
.LBB39_20:                              # %._crit_edge.i.i33
	beq	$a1, $s1, .LBB39_25
# %bb.21:                               # %._crit_edge.i.i33
	bnez	$a1, .LBB39_24
# %bb.22:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB39_25
.LBB39_23:
	ldptr.d	$a2, $fp, 2272
.Ltmp1296:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1297:
	b	.LBB39_30
.LBB39_24:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB39_25:
	ld.d	$a0, $sp, 984
	st.d	$a0, $sp, 32
.Ltmp1293:
	addi.d	$a1, $sp, 56
	addi.d	$a2, $sp, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12parse_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_)
	jirl	$ra, $ra, 0
.Ltmp1294:
# %bb.26:
	ld.d	$a0, $sp, 24
	beq	$a0, $s3, .LBB39_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i37
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit39
	ld.d	$a0, $sp, 56
	beq	$a0, $s2, .LBB39_30
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i40
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit22
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 592
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 592
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 688
	st.d	$a2, $sp, 608
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 704
	st.d	$a1, $sp, 616
	beq	$a0, $a2, .LBB39_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 704
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_32:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 616
	addi.d	$a0, $sp, 672
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 592
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 600
	addi.d	$a0, $sp, 720
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
.LBB39_33:
	ld.d	$s3, $sp, 992                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 1000                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 1008                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 1016                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 1024                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 1032                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 1040
	ret
.LBB39_34:
.Ltmp1292:
	move	$fp, $a0
	b	.LBB39_38
.LBB39_35:
.Ltmp1280:
	move	$fp, $a0
	addi.d	$a0, $sp, 592
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB39_36:
.Ltmp1295:
	ld.d	$a2, $sp, 24
	move	$fp, $a0
	beq	$a2, $s3, .LBB39_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i43
	ld.d	$a0, $sp, 40
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit45
	ld.d	$a0, $sp, 56
	beq	$a0, $s2, .LBB39_46
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i46
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB39_46
.LBB39_40:
.Ltmp1283:
	ld.d	$a2, $sp, 88
	move	$fp, $a0
	bne	$a2, $s0, .LBB39_43
# %bb.41:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit25
	ld.d	$a0, $sp, 120
	bne	$a0, $s2, .LBB39_44
.LBB39_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit28
	addi.d	$a0, $sp, 592
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB39_43:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 120
	beq	$a0, $s2, .LBB39_42
.LBB39_44:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 592
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB39_45:
.Ltmp1298:
	move	$fp, $a0
.LBB39_46:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 592
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end39:
	.size	_ZN2PP11PowerParser15handle_exe_argsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end39-_ZN2PP11PowerParser15handle_exe_argsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table39:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp1278-.Lfunc_begin25       #   Call between .Lfunc_begin25 and .Ltmp1278
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1278-.Lfunc_begin25       # >> Call Site 2 <<
	.uleb128 .Ltmp1279-.Ltmp1278            #   Call between .Ltmp1278 and .Ltmp1279
	.uleb128 .Ltmp1280-.Lfunc_begin25       #     jumps to .Ltmp1280
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1279-.Lfunc_begin25       # >> Call Site 3 <<
	.uleb128 .Ltmp1281-.Ltmp1279            #   Call between .Ltmp1279 and .Ltmp1281
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1281-.Lfunc_begin25       # >> Call Site 4 <<
	.uleb128 .Ltmp1282-.Ltmp1281            #   Call between .Ltmp1281 and .Ltmp1282
	.uleb128 .Ltmp1283-.Lfunc_begin25       #     jumps to .Ltmp1283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1282-.Lfunc_begin25       # >> Call Site 5 <<
	.uleb128 .Ltmp1284-.Ltmp1282            #   Call between .Ltmp1282 and .Ltmp1284
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1284-.Lfunc_begin25       # >> Call Site 6 <<
	.uleb128 .Ltmp1289-.Ltmp1284            #   Call between .Ltmp1284 and .Ltmp1289
	.uleb128 .Ltmp1298-.Lfunc_begin25       #     jumps to .Ltmp1298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1290-.Lfunc_begin25       # >> Call Site 7 <<
	.uleb128 .Ltmp1291-.Ltmp1290            #   Call between .Ltmp1290 and .Ltmp1291
	.uleb128 .Ltmp1292-.Lfunc_begin25       #     jumps to .Ltmp1292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1296-.Lfunc_begin25       # >> Call Site 8 <<
	.uleb128 .Ltmp1297-.Ltmp1296            #   Call between .Ltmp1296 and .Ltmp1297
	.uleb128 .Ltmp1298-.Lfunc_begin25       #     jumps to .Ltmp1298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1297-.Lfunc_begin25       # >> Call Site 9 <<
	.uleb128 .Ltmp1293-.Ltmp1297            #   Call between .Ltmp1297 and .Ltmp1293
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1293-.Lfunc_begin25       # >> Call Site 10 <<
	.uleb128 .Ltmp1294-.Ltmp1293            #   Call between .Ltmp1293 and .Ltmp1294
	.uleb128 .Ltmp1295-.Lfunc_begin25       #     jumps to .Ltmp1295
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1294-.Lfunc_begin25       # >> Call Site 11 <<
	.uleb128 .Lfunc_end39-.Ltmp1294         #   Call between .Ltmp1294 and .Lfunc_end39
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser14clear_and_initEv # -- Begin function _ZN2PP11PowerParser14clear_and_initEv
	.p2align	5
	.type	_ZN2PP11PowerParser14clear_and_initEv,@function
_ZN2PP11PowerParser14clear_and_initEv:  # @_ZN2PP11PowerParser14clear_and_initEv
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	addi.d	$a0, $a0, 592
	ld.d	$s2, $fp, 608
	ld.d	$s3, $fp, 616
	ld.d	$s0, $fp, 624
	ld.d	$s1, $fp, 632
	st.d	$s2, $sp, 32
	st.d	$s3, $sp, 40
	vld	$vr0, $fp, 640
	vld	$vr1, $fp, 656
	st.d	$s0, $sp, 48
	st.d	$s1, $sp, 56
	vst	$vr0, $sp, 0
	vst	$vr1, $sp, 16
.Ltmp1299:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_)
	jirl	$ra, $ra, 0
.Ltmp1300:
# %bb.1:                                # %.noexc.i
	ld.d	$s4, $fp, 664
	bgeu	$s1, $s4, .LBB40_4
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$a1, $s1
	.p2align	4, , 16
.LBB40_3:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s5, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s5
	bltu	$s5, $s4, .LBB40_3
.LBB40_4:                               # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	st.d	$s2, $fp, 640
	st.d	$s3, $fp, 648
	ld.d	$a1, $fp, 696
	st.d	$s0, $fp, 656
	st.d	$s1, $fp, 664
	addi.d	$a0, $fp, 680
.Ltmp1302:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp1303:
# %bb.5:                                # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE5clearEv.exit
	addi.d	$a0, $fp, 688
	st.d	$zero, $fp, 696
	st.d	$a0, $fp, 704
	ld.d	$a1, $fp, 792
	st.d	$a0, $fp, 712
	st.d	$zero, $fp, 720
	addi.d	$a0, $fp, 776
.Ltmp1305:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp1306:
# %bb.6:                                # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE5clearEv.exit
	addi.d	$a0, $fp, 784
	st.d	$zero, $fp, 792
	st.d	$a0, $fp, 800
	st.d	$a0, $fp, 808
	vld	$vr0, $fp, 840
	vld	$vr1, $fp, 856
	st.d	$zero, $fp, 816
	addi.d	$a0, $fp, 824
	vst	$vr0, $sp, 32
	vst	$vr1, $sp, 48
.Ltmp1308:
	addi.d	$a1, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp1309:
# %bb.7:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv.exit
	vld	$vr0, $fp, 920
	vld	$vr1, $fp, 936
	addi.d	$a0, $fp, 904
	vst	$vr0, $sp, 32
	vst	$vr1, $sp, 48
.Ltmp1311:
	addi.d	$a1, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp1312:
# %bb.8:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv.exit4
	addi.d	$s0, $fp, 2047
	addi.d	$a0, $s0, 249
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s0, 329
	ldptr.d	$s0, $fp, 2392
	ldptr.d	$s1, $fp, 2400
	ori	$a1, $zero, 2424
	vldx	$vr0, $fp, $a1
	ldptr.d	$s2, $fp, 2408
	ldptr.d	$s3, $fp, 2416
	st.d	$s0, $sp, 32
	vst	$vr0, $sp, 0
	ori	$a1, $zero, 2440
	vldx	$vr0, $fp, $a1
	st.d	$s1, $sp, 40
	st.d	$s2, $sp, 48
	st.d	$s3, $sp, 56
	vst	$vr0, $sp, 16
.Ltmp1314:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp1315:
# %bb.9:                                # %.noexc.i5
	ldptr.d	$s4, $fp, 2448
	bgeu	$s3, $s4, .LBB40_12
# %bb.10:                               # %.lr.ph.i.i.i6.preheader
	move	$a1, $s3
	.p2align	4, , 16
.LBB40_11:                              # %.lr.ph.i.i.i6
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s5, $a1, 8
	ori	$a1, $zero, 520
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s5
	bltu	$s5, $s4, .LBB40_11
.LBB40_12:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5clearEv.exit
	stptr.d	$s0, $fp, 2424
	stptr.d	$s1, $fp, 2432
	stptr.d	$s2, $fp, 2440
	stptr.d	$s3, $fp, 2448
	addi.d	$s0, $sp, 48
	st.d	$s0, $sp, 32
	ld.d	$a2, $fp, 1576
	st.d	$zero, $sp, 40
	st.b	$zero, $sp, 48
	addi.d	$a0, $fp, 1568
.Ltmp1317:
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1318:
# %bb.13:                               # %.noexc10
	ld.wu	$a2, $fp, 1560
	addi.d	$a0, $fp, 1496
	ld.d	$a3, $fp, 1576
	ld.d	$a1, $fp, 1568
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp1319:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp1320:
# %bb.14:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 32
	beq	$a0, $s0, .LBB40_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB40_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser4initEv)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB40_17:
.Ltmp1316:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB40_18:
.Ltmp1313:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB40_19:
.Ltmp1310:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB40_20:
.Ltmp1307:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB40_21:
.Ltmp1304:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB40_22:
.Ltmp1301:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB40_23:
.Ltmp1321:
	ld.d	$a2, $sp, 32
	move	$fp, $a0
	beq	$a2, $s0, .LBB40_25
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB40_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end40:
	.size	_ZN2PP11PowerParser14clear_and_initEv, .Lfunc_end40-_ZN2PP11PowerParser14clear_and_initEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table40:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Ltmp1299-.Lfunc_begin26       # >> Call Site 1 <<
	.uleb128 .Ltmp1300-.Ltmp1299            #   Call between .Ltmp1299 and .Ltmp1300
	.uleb128 .Ltmp1301-.Lfunc_begin26       #     jumps to .Ltmp1301
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1300-.Lfunc_begin26       # >> Call Site 2 <<
	.uleb128 .Ltmp1302-.Ltmp1300            #   Call between .Ltmp1300 and .Ltmp1302
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1302-.Lfunc_begin26       # >> Call Site 3 <<
	.uleb128 .Ltmp1303-.Ltmp1302            #   Call between .Ltmp1302 and .Ltmp1303
	.uleb128 .Ltmp1304-.Lfunc_begin26       #     jumps to .Ltmp1304
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1305-.Lfunc_begin26       # >> Call Site 4 <<
	.uleb128 .Ltmp1306-.Ltmp1305            #   Call between .Ltmp1305 and .Ltmp1306
	.uleb128 .Ltmp1307-.Lfunc_begin26       #     jumps to .Ltmp1307
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1308-.Lfunc_begin26       # >> Call Site 5 <<
	.uleb128 .Ltmp1309-.Ltmp1308            #   Call between .Ltmp1308 and .Ltmp1309
	.uleb128 .Ltmp1310-.Lfunc_begin26       #     jumps to .Ltmp1310
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1311-.Lfunc_begin26       # >> Call Site 6 <<
	.uleb128 .Ltmp1312-.Ltmp1311            #   Call between .Ltmp1311 and .Ltmp1312
	.uleb128 .Ltmp1313-.Lfunc_begin26       #     jumps to .Ltmp1313
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1312-.Lfunc_begin26       # >> Call Site 7 <<
	.uleb128 .Ltmp1314-.Ltmp1312            #   Call between .Ltmp1312 and .Ltmp1314
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1314-.Lfunc_begin26       # >> Call Site 8 <<
	.uleb128 .Ltmp1315-.Ltmp1314            #   Call between .Ltmp1314 and .Ltmp1315
	.uleb128 .Ltmp1316-.Lfunc_begin26       #     jumps to .Ltmp1316
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1315-.Lfunc_begin26       # >> Call Site 9 <<
	.uleb128 .Ltmp1317-.Ltmp1315            #   Call between .Ltmp1315 and .Ltmp1317
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1317-.Lfunc_begin26       # >> Call Site 10 <<
	.uleb128 .Ltmp1320-.Ltmp1317            #   Call between .Ltmp1317 and .Ltmp1320
	.uleb128 .Ltmp1321-.Lfunc_begin26       #     jumps to .Ltmp1321
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1320-.Lfunc_begin26       # >> Call Site 11 <<
	.uleb128 .Lfunc_end40-.Ltmp1320         #   Call between .Ltmp1320 and .Lfunc_end40
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser16echo_input_startEv # -- Begin function _ZN2PP11PowerParser16echo_input_startEv
	.p2align	5
	.type	_ZN2PP11PowerParser16echo_input_startEv,@function
_ZN2PP11PowerParser16echo_input_startEv: # @_ZN2PP11PowerParser16echo_input_startEv
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	ld.d	$a2, $a0, 1184
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	addi.d	$a0, $a0, 1176
.Ltmp1322:
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1323:
# %bb.1:                                # %.noexc4
	ld.wu	$a2, $fp, 1168
	addi.d	$a0, $fp, 1104
	ld.d	$a3, $fp, 1184
	ld.d	$a1, $fp, 1176
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp1324:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp1325:
# %bb.2:                                # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB41_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB41_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$a1, $fp, 1080
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	st.w	$zero, $fp, 1072
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB41_5:
.Ltmp1326:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s0, .LBB41_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB41_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end41:
	.size	_ZN2PP11PowerParser16echo_input_startEv, .Lfunc_end41-_ZN2PP11PowerParser16echo_input_startEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table41:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Ltmp1322-.Lfunc_begin27       # >> Call Site 1 <<
	.uleb128 .Ltmp1325-.Ltmp1322            #   Call between .Ltmp1322 and .Ltmp1325
	.uleb128 .Ltmp1326-.Lfunc_begin27       #     jumps to .Ltmp1326
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1325-.Lfunc_begin27       # >> Call Site 2 <<
	.uleb128 .Lfunc_end41-.Ltmp1325         #   Call between .Ltmp1325 and .Lfunc_end41
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a0, $a0, 520
	ld.w	$a2, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a2, $a0, .LBB42_14
# %bb.1:                                # %.preheader
	move	$s2, $zero
	move	$s3, $zero
	addi.d	$s0, $a1, 16
	ori	$s4, $zero, 15
	b	.LBB42_4
	.p2align	4, , 16
.LBB42_2:                               #   in Loop: Header=BB42_4 Depth=1
	move	$s5, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s5
.LBB42_3:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
                                        #   in Loop: Header=BB42_4 Depth=1
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 1
	addi.d	$s2, $s2, 32
.LBB42_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 664
	ld.d	$a0, $fp, 632
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 640
	ld.d	$a4, $fp, 648
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 624
	ld.d	$a1, $fp, 608
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 5
	alsl.d	$a2, $a2, $a3, 4
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 5
	add.w	$a2, $a2, $a3
	bge	$s3, $a2, .LBB42_14
# %bb.5:                                #   in Loop: Header=BB42_4 Depth=1
	ld.d	$a2, $fp, 616
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 5
	add.d	$a2, $s3, $a2
	bltz	$a2, .LBB42_8
# %bb.6:                                #   in Loop: Header=BB42_4 Depth=1
	bltu	$s4, $a2, .LBB42_9
# %bb.7:                                #   in Loop: Header=BB42_4 Depth=1
	add.d	$a0, $a1, $s2
	b	.LBB42_11
	.p2align	4, , 16
.LBB42_8:                               #   in Loop: Header=BB42_4 Depth=1
	srai.d	$a1, $a2, 4
	b	.LBB42_10
	.p2align	4, , 16
.LBB42_9:                               #   in Loop: Header=BB42_4 Depth=1
	srli.d	$a1, $a2, 4
.LBB42_10:                              #   in Loop: Header=BB42_4 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 4
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB42_11:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
                                        #   in Loop: Header=BB42_4 Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s1, $a1, 240
	beqz	$s1, .LBB42_15
# %bb.12:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB42_4 Depth=1
	ld.bu	$a1, $s1, 56
	beqz	$a1, .LBB42_2
# %bb.13:                               #   in Loop: Header=BB42_4 Depth=1
	ld.bu	$a1, $s1, 67
	b	.LBB42_3
.LBB42_14:                              # %.loopexit
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB42_15:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end42:
	.size	_ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end42-_ZN2PP11PowerParser13echo_input_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser14compile_bufferERi # -- Begin function _ZN2PP11PowerParser14compile_bufferERi
	.p2align	5
	.type	_ZN2PP11PowerParser14compile_bufferERi,@function
_ZN2PP11PowerParser14compile_bufferERi: # @_ZN2PP11PowerParser14compile_bufferERi
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:                                # %.noexc.i
	addi.d	$sp, $sp, -2032
	.cfi_def_cfa_offset 2032
	st.d	$ra, $sp, 2024                  # 8-byte Folded Spill
	st.d	$fp, $sp, 2016                  # 8-byte Folded Spill
	st.d	$s0, $sp, 2008                  # 8-byte Folded Spill
	st.d	$s1, $sp, 2000                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1992                  # 8-byte Folded Spill
	st.d	$s3, $sp, 1984                  # 8-byte Folded Spill
	st.d	$s4, $sp, 1976                  # 8-byte Folded Spill
	st.d	$s5, $sp, 1968                  # 8-byte Folded Spill
	st.d	$s6, $sp, 1960                  # 8-byte Folded Spill
	st.d	$s7, $sp, 1952                  # 8-byte Folded Spill
	st.d	$s8, $sp, 1944                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	addi.d	$sp, $sp, -720
	.cfi_def_cfa_offset 2752
	st.d	$a1, $sp, 120                   # 8-byte Folded Spill
	move	$fp, $a0
	ori	$a0, $zero, 2648
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2632
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 47
	st.d	$a0, $sp, 264
	ori	$a0, $zero, 2632
	add.d	$a0, $sp, $a0
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 264
	pcalau12i	$a2, %pc_hi20(.L.str.18)
	addi.d	$a2, $a2, %pc_lo12(.L.str.18)
	vld	$vr0, $a2, 0
	ori	$a3, $zero, 2632
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 2648
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 0
	vld	$vr0, $a2, 16
	ld.d	$a3, $a2, 32
	ld.d	$a2, $a2, 39
	vst	$vr0, $a0, 16
	st.d	$a3, $a0, 32
	st.d	$a2, $a0, 39
	ori	$a2, $zero, 2640
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
	ori	$a0, $zero, 2616
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2600
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 51
	st.d	$a0, $sp, 264
.Ltmp1327:
	ori	$a0, $zero, 2600
	add.d	$a0, $sp, $a0
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1328:
# %bb.1:                                # %.noexc444
	ld.d	$a1, $sp, 264
	pcalau12i	$a2, %pc_hi20(.L.str.19)
	addi.d	$a2, $a2, %pc_lo12(.L.str.19)
	vld	$vr0, $a2, 16
	ori	$a3, $zero, 2600
	add.d	$a3, $sp, $a3
	st.d	$a0, $a3, 0
	ori	$a3, $zero, 2616
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	vst	$vr0, $a0, 16
	vld	$vr0, $a2, 0
	vst	$vr0, $a0, 0
	vld	$vr0, $a2, 32
	ld.w	$a2, $a2, 47
	vst	$vr0, $a0, 32
	st.w	$a2, $a0, 47
	ori	$a2, $zero, 2608
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
	stx.b	$zero, $a0, $a1
	ori	$a0, $zero, 2584
	add.d	$s0, $sp, $a0
	ori	$a0, $zero, 2640
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2632
	add.d	$a0, $sp, $a0
	ld.d	$s1, $a0, 0
	ori	$a0, $zero, 2568
	add.d	$a0, $sp, $a0
	st.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 264
	move	$a0, $s0
	bltu	$a1, $a2, .LBB43_4
# %bb.2:                                # %.noexc.i447
.Ltmp1330:
	ori	$a0, $zero, 2568
	add.d	$a0, $sp, $a0
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1331:
# %bb.3:                                # %.noexc448
	ld.d	$a1, $sp, 264
	ori	$a2, $zero, 2568
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2584
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB43_4:                               # %._crit_edge.i.i446
	addi.w	$a2, $zero, -1
	st.d	$a2, $sp, 184                   # 8-byte Folded Spill
	beq	$a1, $a2, .LBB43_8
# %bb.5:                                # %._crit_edge.i.i446
	bnez	$a1, .LBB43_7
# %bb.6:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB43_8
.LBB43_7:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_8:
	ld.d	$a0, $sp, 264
	ori	$a1, $zero, 2576
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2552
	add.d	$s2, $sp, $a0
	ori	$a0, $zero, 2608
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2600
	add.d	$a0, $sp, $a0
	ld.d	$s1, $a0, 0
	ori	$a0, $zero, 2536
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 264
	move	$a0, $s2
	bltu	$a1, $a2, .LBB43_11
# %bb.9:                                # %.noexc.i450
.Ltmp1333:
	ori	$a0, $zero, 2536
	add.d	$a0, $sp, $a0
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1334:
# %bb.10:                               # %.noexc451
	ld.d	$a1, $sp, 264
	ori	$a2, $zero, 2536
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2552
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB43_11:                              # %._crit_edge.i.i449
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_15
# %bb.12:                               # %._crit_edge.i.i449
	bnez	$a1, .LBB43_14
# %bb.13:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB43_15
.LBB43_14:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_15:                              # %._crit_edge.i.i453
	ld.d	$a0, $sp, 264
	ori	$a1, $zero, 2544
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2520
	add.d	$s1, $sp, $a0
	ori	$a0, $zero, 2504
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 2512
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2520
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	addi.d	$a4, $fp, 1472
.Ltmp1336:
	ori	$a0, $zero, 2568
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2536
	add.d	$a2, $sp, $a0
	ori	$a0, $zero, 2504
	add.d	$a3, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp1337:
# %bb.16:
	ori	$a0, $zero, 2504
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s1, .LBB43_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ori	$a1, $zero, 2520
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ori	$a0, $zero, 2536
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB43_20
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i457
	ori	$a1, $zero, 2552
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit459
	ori	$a0, $zero, 2568
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s0, .LBB43_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i460
	ori	$a1, $zero, 2584
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit462
	move	$s0, $zero
	move	$s1, $zero
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	st.w	$zero, $a0, 0
	ori	$a0, $zero, 2500
	add.d	$a0, $sp, $a0
	st.w	$zero, $a0, 0
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s8, $a0, -1973
	.p2align	4, , 16
.LBB43_23:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 896
	ld.d	$a0, $fp, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 872
	ld.d	$a4, $fp, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 856
	ld.d	$a1, $fp, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB43_33
# %bb.24:                               #   in Loop: Header=BB43_23 Depth=1
	ld.d	$a2, $fp, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB43_26
# %bb.25:                               #   in Loop: Header=BB43_23 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_27
	.p2align	4, , 16
.LBB43_26:                              #   in Loop: Header=BB43_23 Depth=1
	add.d	$a0, $a1, $s0
.LBB43_27:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB43_23 Depth=1
.Ltmp1824:
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd20single_line_commentsEv)
	jirl	$ra, $ra, 0
.Ltmp1825:
# %bb.28:                               #   in Loop: Header=BB43_23 Depth=1
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s8
	add.d	$a1, $s1, $a1
	beqz	$a1, .LBB43_30
# %bb.29:                               #   in Loop: Header=BB43_23 Depth=1
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_31
	.p2align	4, , 16
.LBB43_30:                              #   in Loop: Header=BB43_23 Depth=1
	add.d	$a0, $a0, $s0
.LBB43_31:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit473
                                        #   in Loop: Header=BB43_23 Depth=1
.Ltmp1826:
	ori	$a1, $zero, 2500
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd19multi_line_commentsERi)
	jirl	$ra, $ra, 0
.Ltmp1827:
# %bb.32:                               #   in Loop: Header=BB43_23 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s0, $s0, 432
	b	.LBB43_23
.LBB43_33:
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	st.w	$zero, $a0, 0
.Ltmp1339:
	ori	$a0, $zero, 2104
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp1340:
# %bb.34:                               # %.preheader1282.preheader
	move	$s0, $zero
	move	$s1, $zero
	addi.d	$a0, $fp, 824
	st.d	$a0, $sp, 136                   # 8-byte Folded Spill
	.p2align	4, , 16
.LBB43_35:                              # %.preheader1282
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 896
	ld.d	$a0, $fp, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 872
	ld.d	$a4, $fp, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 856
	ld.d	$a1, $fp, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB43_41
# %bb.36:                               #   in Loop: Header=BB43_35 Depth=1
	ld.d	$a2, $fp, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB43_38
# %bb.37:                               #   in Loop: Header=BB43_35 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_39
	.p2align	4, , 16
.LBB43_38:                              #   in Loop: Header=BB43_35 Depth=1
	add.d	$a0, $a1, $s0
.LBB43_39:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit476
                                        #   in Loop: Header=BB43_35 Depth=1
.Ltmp1821:
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1822:
# %bb.40:                               #   in Loop: Header=BB43_35 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s0, $s0, 432
	b	.LBB43_35
.LBB43_41:
.Ltmp1342:
	ori	$a0, $zero, 2104
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a2, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	move	$s2, $a0
.Ltmp1343:
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
# %bb.42:
	st.w	$s2, $a0, 0
	blez	$s2, .LBB43_53
# %bb.43:
.Ltmp1344:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.20)
	addi.d	$a1, $a1, %pc_lo12(.L.str.20)
	ori	$a2, $zero, 25
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1345:
# %bb.44:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a1, $a0, 0
.Ltmp1346:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1347:
# %bb.45:
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB43_806
# %bb.46:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB43_48
# %bb.47:
	ld.bu	$a0, $s4, 67
	b	.LBB43_50
.LBB43_48:
.Ltmp1348:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1349:
# %bb.49:                               # %.noexc1103
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp1350:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp1351:
.LBB43_50:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1352:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1353:
# %bb.51:                               # %.noexc1105
.Ltmp1354:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1355:
# %bb.52:                               # %_ZNSolsEPFRSoS_E.exit
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB43_799
.LBB43_53:
	move	$s0, $zero
	ori	$s1, $zero, 432
	b	.LBB43_55
	.p2align	4, , 16
.LBB43_54:                              #   in Loop: Header=BB43_55 Depth=1
	addi.w	$s0, $s0, 1
.LBB43_55:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 896
	ld.d	$a0, $fp, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 872
	ld.d	$a4, $fp, 880
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 856
	ld.d	$a1, $fp, 840
	srai.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srai.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	addi.w	$a3, $a2, 0
	bge	$s0, $a3, .LBB43_65
# %bb.56:                               #   in Loop: Header=BB43_55 Depth=1
	ld.d	$a2, $fp, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $a2, $s0
	beqz	$a2, .LBB43_58
# %bb.57:                               #   in Loop: Header=BB43_55 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a3, $a0, $a3
	b	.LBB43_59
	.p2align	4, , 16
.LBB43_58:                              #   in Loop: Header=BB43_55 Depth=1
	mul.d	$a3, $s0, $s1
	add.d	$a3, $a1, $a3
.LBB43_59:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit482
                                        #   in Loop: Header=BB43_55 Depth=1
	ld.d	$a4, $a3, 232
	ld.d	$a5, $a3, 200
	sub.d	$a5, $a4, $a5
	srli.d	$a5, $a5, 3
	sltu	$a4, $zero, $a4
	ld.d	$a6, $a3, 208
	ld.d	$a7, $a3, 216
	sub.d	$a4, $a5, $a4
	ld.d	$a5, $a3, 192
	ld.d	$a3, $a3, 176
	sub.d	$a6, $a6, $a7
	srli.d	$a6, $a6, 7
	alsl.d	$a4, $a4, $a6, 2
	sub.d	$a3, $a5, $a3
	srli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	slli.d	$a3, $a3, 32
	bnez	$a3, .LBB43_54
# %bb.60:                               #   in Loop: Header=BB43_55 Depth=1
	beqz	$a2, .LBB43_62
# %bb.61:                               #   in Loop: Header=BB43_55 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a3, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	move	$a1, $a3
	b	.LBB43_63
.LBB43_62:                              #   in Loop: Header=BB43_55 Depth=1
	ld.d	$a3, $a0, 0
	mul.d	$a2, $s0, $s1
	add.d	$a1, $a1, $a2
.LBB43_63:                              # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit
                                        #   in Loop: Header=BB43_55 Depth=1
	st.d	$a1, $sp, 264
	st.d	$a3, $sp, 272
	addi.d	$a1, $a3, 432
	st.d	$a1, $sp, 280
	st.d	$a0, $sp, 288
.Ltmp1815:
	addi.d	$a0, $sp, 1088
	addi.d	$a2, $sp, 264
	ld.d	$a1, $sp, 136                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp1816:
# %bb.64:                               #   in Loop: Header=BB43_55 Depth=1
	addi.d	$s0, $s0, -1
	b	.LBB43_54
.LBB43_65:                              # %.preheader1281
	st.d	$s8, $sp, 176                   # 8-byte Folded Spill
	blez	$a3, .LBB43_173
# %bb.66:                               # %.lr.ph1464
	addi.d	$s5, $sp, 1104
	addi.d	$s3, $sp, 280
	ori	$a0, $zero, 2088
	add.d	$s4, $sp, $a0
	bstrpick.d	$a0, $a2, 30, 0
	st.d	$a0, $sp, 160                   # 8-byte Folded Spill
	ori	$s6, $zero, 432
	ori	$s7, $zero, 1
	b	.LBB43_70
	.p2align	4, , 16
.LBB43_67:                              #   in Loop: Header=BB43_70 Depth=1
	slli.d	$a0, $a2, 3
	ldx.d	$a0, $a3, $a0
	alsl.d	$a3, $a2, $a3, 3
	move	$a1, $a0
.LBB43_68:                              # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit523
                                        #   in Loop: Header=BB43_70 Depth=1
	st.d	$a1, $sp, 264
	st.d	$a0, $sp, 272
	addi.d	$a0, $a0, 432
	st.d	$a0, $sp, 280
	st.d	$a3, $sp, 288
.Ltmp1377:
	addi.d	$a0, $sp, 1088
	addi.d	$a2, $sp, 264
	ld.d	$a1, $sp, 136                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp1378:
.LBB43_69:                              #   in Loop: Header=BB43_70 Depth=1
	bge	$s7, $s1, .LBB43_173
.LBB43_70:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB43_109 Depth 2
	ld.d	$a1, $fp, 840
	ld.d	$a0, $fp, 848
	ld.d	$s1, $sp, 160                   # 8-byte Folded Reload
	addi.d	$a4, $s1, -1
	sub.d	$a0, $a1, $a0
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s8
	add.d	$a3, $a0, $a4
	slli.d	$a2, $a3, 3
	st.d	$a4, $sp, 160                   # 8-byte Folded Spill
	mul.d	$a4, $a4, $s6
	beqz	$a3, .LBB43_73
# %bb.71:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $fp, 864
	ldx.d	$a0, $a0, $a2
	beqz	$a3, .LBB43_74
.LBB43_72:                              #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $fp, 864
	ldx.d	$a1, $a1, $a2
	b	.LBB43_75
	.p2align	4, , 16
.LBB43_73:                              #   in Loop: Header=BB43_70 Depth=1
	add.d	$a0, $a1, $a4
	bnez	$a3, .LBB43_72
.LBB43_74:                              #   in Loop: Header=BB43_70 Depth=1
	add.d	$a1, $a1, $a4
.LBB43_75:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit488
                                        #   in Loop: Header=BB43_70 Depth=1
	st.d	$a4, $sp, 144                   # 8-byte Folded Spill
	ld.d	$a2, $a0, 232
	ld.d	$a3, $a0, 200
	sub.d	$a3, $a2, $a3
	srai.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	ld.d	$a4, $a0, 208
	ld.d	$a5, $a0, 216
	sub.d	$a2, $a3, $a2
	ld.d	$a3, $a0, 192
	ld.d	$a0, $a0, 176
	sub.d	$a4, $a4, $a5
	srai.d	$a4, $a4, 7
	alsl.d	$a2, $a2, $a4, 2
	sub.d	$a0, $a3, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
	addi.w	$s2, $a0, -1
.Ltmp1356:
	addi.d	$a0, $sp, 264
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1357:
# %bb.76:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $sp, 272
	bne	$a0, $s7, .LBB43_78
# %bb.77:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $sp, 264
	ld.bu	$a1, $a0, 0
	ori	$s0, $zero, 1
	ori	$a2, $zero, 38
	beq	$a1, $a2, .LBB43_87
.LBB43_78:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread1250
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s8
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	add.d	$a1, $a1, $a2
	beqz	$a1, .LBB43_80
# %bb.79:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB43_81
	.p2align	4, , 16
.LBB43_80:                              #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	add.d	$a1, $a0, $a1
.LBB43_81:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit490
                                        #   in Loop: Header=BB43_70 Depth=1
.Ltmp1359:
	addi.d	$a0, $sp, 1088
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1360:
# %bb.82:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 1096
	ld.d	$a0, $sp, 1088
	bne	$a1, $s7, .LBB43_84
# %bb.83:                               #   in Loop: Header=BB43_70 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -44
	sltui	$s0, $a1, 1
	bne	$a0, $s5, .LBB43_85
	b	.LBB43_86
	.p2align	4, , 16
.LBB43_84:                              #   in Loop: Header=BB43_70 Depth=1
	move	$s0, $zero
	beq	$a0, $s5, .LBB43_86
.LBB43_85:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i493
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 1104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_86:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit495
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $sp, 264
.LBB43_87:                              # %.critedge
                                        #   in Loop: Header=BB43_70 Depth=1
	beq	$a0, $s3, .LBB43_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i496
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_89:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit498
                                        #   in Loop: Header=BB43_70 Depth=1
	beqz	$s0, .LBB43_69
# %bb.90:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s8
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	add.d	$a1, $a1, $a2
	beqz	$a1, .LBB43_92
# %bb.91:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB43_93
.LBB43_92:                              #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	add.d	$a1, $a0, $a1
.LBB43_93:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit500
                                        #   in Loop: Header=BB43_70 Depth=1
.Ltmp1362:
	addi.d	$a0, $sp, 264
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1363:
# %bb.94:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 272
	ld.d	$a0, $sp, 264
	bne	$a1, $s7, .LBB43_96
# %bb.95:                               #   in Loop: Header=BB43_70 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -38
	sltui	$s0, $a1, 1
	bne	$a0, $s3, .LBB43_97
	b	.LBB43_98
	.p2align	4, , 16
.LBB43_96:                              #   in Loop: Header=BB43_70 Depth=1
	move	$s0, $zero
	beq	$a0, $s3, .LBB43_98
.LBB43_97:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i503
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_98:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit505
                                        #   in Loop: Header=BB43_70 Depth=1
	beqz	$s0, .LBB43_103
# %bb.99:                               #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s8
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	add.d	$a1, $a1, $a2
	beqz	$a1, .LBB43_101
# %bb.100:                              #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_102
.LBB43_101:                             #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
.LBB43_102:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit507
                                        #   in Loop: Header=BB43_70 Depth=1
.Ltmp1365:
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10erase_wordEi)
	jirl	$ra, $ra, 0
.Ltmp1366:
.LBB43_103:                             #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $fp, 840
	ld.d	$a0, $fp, 848
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a3, $a2, $s1
	mul.d	$s8, $s1, $s6
	beqz	$a3, .LBB43_105
# %bb.104:                              #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a4, $fp, 864
	slli.d	$a3, $a3, 3
	ldx.d	$a3, $a4, $a3
	b	.LBB43_106
.LBB43_105:                             #   in Loop: Header=BB43_70 Depth=1
	add.d	$a3, $a1, $s8
.LBB43_106:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit518
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a4, $a3, 232
	ld.d	$a5, $a3, 200
	sub.d	$a5, $a4, $a5
	srai.d	$a5, $a5, 3
	sltu	$a4, $zero, $a4
	ld.d	$a6, $a3, 208
	ld.d	$a7, $a3, 216
	sub.d	$a4, $a5, $a4
	ld.d	$a5, $a3, 192
	ld.d	$a3, $a3, 176
	sub.d	$a6, $a6, $a7
	srai.d	$a6, $a6, 7
	alsl.d	$a4, $a4, $a6, 2
	sub.d	$a3, $a5, $a3
	srai.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	addi.w	$a4, $a3, 0
	blez	$a4, .LBB43_167
# %bb.107:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB43_70 Depth=1
	move	$s0, $zero
	move	$s7, $zero
	bstrpick.d	$s6, $a3, 30, 0
	ori	$s5, $zero, 3
	b	.LBB43_109
	.p2align	4, , 16
.LBB43_108:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit552
                                        #   in Loop: Header=BB43_109 Depth=2
	addi.d	$s7, $s7, 1
	addi.d	$s0, $s0, 128
	beq	$s6, $s7, .LBB43_166
.LBB43_109:                             # %.lr.ph
                                        #   Parent Loop BB43_70 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	ld.d	$a2, $sp, 176                   # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	add.d	$a2, $a1, $a2
	beqz	$a2, .LBB43_112
# %bb.110:                              #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a3, $fp, 864
	slli.d	$a2, $a2, 3
	ldx.d	$s2, $a3, $a2
	add.d	$a2, $a1, $s1
	beqz	$a2, .LBB43_113
.LBB43_111:                             #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a3, $fp, 864
	slli.d	$a2, $a2, 3
	ldx.d	$a3, $a3, $a2
	b	.LBB43_114
	.p2align	4, , 16
.LBB43_112:                             #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a2, $sp, 144                   # 8-byte Folded Reload
	add.d	$s2, $a0, $a2
	add.d	$a2, $a1, $s1
	bnez	$a2, .LBB43_111
.LBB43_113:                             #   in Loop: Header=BB43_109 Depth=2
	add.d	$a3, $a0, $s8
.LBB43_114:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit529
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a4, $a3, 232
	ld.d	$a2, $a3, 200
	sub.d	$a5, $a4, $a2
	srli.d	$a5, $a5, 3
	sltu	$a4, $zero, $a4
	ld.d	$a6, $a3, 208
	ld.d	$a7, $a3, 216
	sub.d	$a5, $a5, $a4
	ld.d	$t0, $a3, 192
	ld.d	$a4, $a3, 176
	sub.d	$a6, $a6, $a7
	srli.d	$a6, $a6, 7
	alsl.d	$a5, $a5, $a6, 2
	sub.d	$a6, $t0, $a4
	srli.d	$a6, $a6, 7
	add.w	$a5, $a5, $a6
	bge	$s7, $a5, .LBB43_118
# %bb.115:                              #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a0, $a3, 184
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $s7, $a0
	bltz	$a0, .LBB43_120
# %bb.116:                              #   in Loop: Header=BB43_109 Depth=2
	bltu	$s5, $a0, .LBB43_121
# %bb.117:                              #   in Loop: Header=BB43_109 Depth=2
	add.d	$a0, $a4, $s0
	b	.LBB43_123
	.p2align	4, , 16
.LBB43_118:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB43_109 Depth=2
	ori	$a2, $zero, 2072
	add.d	$a2, $sp, $a2
	st.d	$s4, $a2, 0
	ori	$a2, $zero, 2080
	add.d	$a2, $sp, $a2
	st.d	$zero, $a2, 0
	ori	$a2, $zero, 2088
	add.d	$a2, $sp, $a2
	st.b	$zero, $a2, 0
	add.d	$a2, $a1, $s1
	slli.d	$a1, $a2, 3
	beqz	$a2, .LBB43_131
.LBB43_119:                             #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a3, $fp, 864
	ldx.d	$a3, $a3, $a1
	b	.LBB43_132
.LBB43_120:                             #   in Loop: Header=BB43_109 Depth=2
	srai.d	$a1, $a0, 2
	b	.LBB43_122
.LBB43_121:                             #   in Loop: Header=BB43_109 Depth=2
	srli.d	$a1, $a0, 2
.LBB43_122:                             #   in Loop: Header=BB43_109 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a2, $a2, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB43_123:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB43_109 Depth=2
	ori	$a1, $zero, 2072
	add.d	$a1, $sp, $a1
	st.d	$s4, $a1, 0
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$a1, $sp, 264
	move	$a0, $s4
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_126
# %bb.124:                              # %.noexc.i.i.i
                                        #   in Loop: Header=BB43_109 Depth=2
.Ltmp1368:
	ori	$a0, $zero, 2072
	add.d	$a0, $sp, $a0
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1369:
# %bb.125:                              # %.noexc531
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a1, $sp, 264
	ori	$a2, $zero, 2072
	add.d	$a2, $sp, $a2
	st.d	$a0, $a2, 0
	ori	$a2, $zero, 2088
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB43_126:                             # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_130
# %bb.127:                              # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB43_109 Depth=2
	bnez	$a1, .LBB43_129
# %bb.128:                              #   in Loop: Header=BB43_109 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB43_130
.LBB43_129:                             #   in Loop: Header=BB43_109 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_130:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit.i
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a1, $sp, 264
	ld.d	$a0, $fp, 840
	ld.d	$a2, $fp, 848
	ori	$a3, $zero, 2080
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	sub.d	$a1, $a0, $a2
	srai.d	$a1, $a1, 4
	ld.d	$a2, $sp, 176                   # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	add.d	$a2, $a1, $s1
	slli.d	$a1, $a2, 3
	bnez	$a2, .LBB43_119
.LBB43_131:                             #   in Loop: Header=BB43_109 Depth=2
	add.d	$a3, $a0, $s8
.LBB43_132:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit533
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a5, $a3, 176
	ld.d	$a4, $a3, 184
	ld.d	$a3, $a3, 200
	sub.d	$a4, $a5, $a4
	srai.d	$a4, $a4, 7
	add.d	$a4, $s7, $a4
	bltz	$a4, .LBB43_136
# %bb.133:                              #   in Loop: Header=BB43_109 Depth=2
	bltu	$s5, $a4, .LBB43_137
# %bb.134:                              #   in Loop: Header=BB43_109 Depth=2
	add.d	$a3, $a5, $s0
	ld.w	$s3, $a3, 80
	bnez	$a2, .LBB43_139
.LBB43_135:                             #   in Loop: Header=BB43_109 Depth=2
	add.d	$a3, $a0, $s8
	b	.LBB43_140
	.p2align	4, , 16
.LBB43_136:                             #   in Loop: Header=BB43_109 Depth=2
	srai.d	$a5, $a4, 2
	b	.LBB43_138
	.p2align	4, , 16
.LBB43_137:                             #   in Loop: Header=BB43_109 Depth=2
	srli.d	$a5, $a4, 2
.LBB43_138:                             #   in Loop: Header=BB43_109 Depth=2
	slli.d	$a6, $a5, 3
	ldx.d	$a3, $a3, $a6
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a3, $a3, $a4
	ld.w	$s3, $a3, 80
	beqz	$a2, .LBB43_135
.LBB43_139:                             #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a3, $fp, 864
	ldx.d	$a3, $a3, $a1
.LBB43_140:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit537
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a5, $a3, 176
	ld.d	$a4, $a3, 184
	ld.d	$a3, $a3, 200
	sub.d	$a4, $a5, $a4
	srai.d	$a4, $a4, 7
	add.d	$a4, $s7, $a4
	bltz	$a4, .LBB43_144
# %bb.141:                              #   in Loop: Header=BB43_109 Depth=2
	bltu	$s5, $a4, .LBB43_145
# %bb.142:                              #   in Loop: Header=BB43_109 Depth=2
	add.d	$a3, $a5, $s0
	ld.w	$s4, $a3, 84
	bnez	$a2, .LBB43_147
.LBB43_143:                             #   in Loop: Header=BB43_109 Depth=2
	add.d	$a0, $a0, $s8
	b	.LBB43_148
	.p2align	4, , 16
.LBB43_144:                             #   in Loop: Header=BB43_109 Depth=2
	srai.d	$a5, $a4, 2
	b	.LBB43_146
	.p2align	4, , 16
.LBB43_145:                             #   in Loop: Header=BB43_109 Depth=2
	srli.d	$a5, $a4, 2
.LBB43_146:                             #   in Loop: Header=BB43_109 Depth=2
	slli.d	$a6, $a5, 3
	ldx.d	$a3, $a3, $a6
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a3, $a3, $a4
	ld.w	$s4, $a3, 84
	beqz	$a2, .LBB43_143
.LBB43_147:                             #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a0, $fp, 864
	ldx.d	$a0, $a0, $a1
.LBB43_148:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit541
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a2, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s7, $a1
	bltz	$a1, .LBB43_151
# %bb.149:                              #   in Loop: Header=BB43_109 Depth=2
	bltu	$s5, $a1, .LBB43_152
# %bb.150:                              #   in Loop: Header=BB43_109 Depth=2
	add.d	$a0, $a2, $s0
	b	.LBB43_154
	.p2align	4, , 16
.LBB43_151:                             #   in Loop: Header=BB43_109 Depth=2
	srai.d	$a2, $a1, 2
	b	.LBB43_153
	.p2align	4, , 16
.LBB43_152:                             #   in Loop: Header=BB43_109 Depth=2
	srli.d	$a2, $a1, 2
.LBB43_153:                             #   in Loop: Header=BB43_109 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB43_154:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i542
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a1, $a0, 96
	ld.d	$s5, $a0, 88
	ori	$a0, $zero, 2056
	add.d	$a0, $sp, $a0
	st.d	$a0, $sp, 2040
	st.d	$a1, $sp, 264
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_157
# %bb.155:                              # %.noexc.i.i.i545
                                        #   in Loop: Header=BB43_109 Depth=2
.Ltmp1371:
	addi.d	$a0, $sp, 2040
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1372:
# %bb.156:                              # %.noexc546
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a1, $sp, 264
	st.d	$a0, $sp, 2040
	ori	$a2, $zero, 2056
	add.d	$a2, $sp, $a2
	st.d	$a1, $a2, 0
.LBB43_157:                             # %._crit_edge.i.i.i.i544
                                        #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_161
# %bb.158:                              # %._crit_edge.i.i.i.i544
                                        #   in Loop: Header=BB43_109 Depth=2
	bnez	$a1, .LBB43_160
# %bb.159:                              #   in Loop: Header=BB43_109 Depth=2
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB43_161
	.p2align	4, , 16
.LBB43_160:                             #   in Loop: Header=BB43_109 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_161:                             #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a0, $sp, 264
	ori	$a1, $zero, 2048
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
.Ltmp1374:
	ori	$a0, $zero, 2072
	add.d	$a1, $sp, $a0
	addi.d	$a4, $sp, 2040
	move	$a0, $s2
	move	$a2, $s3
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_)
	jirl	$ra, $ra, 0
.Ltmp1375:
# %bb.162:                              #   in Loop: Header=BB43_109 Depth=2
	ld.d	$a0, $sp, 2040
	ori	$a1, $zero, 2088
	add.d	$s4, $sp, $a1
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB43_164
# %bb.163:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i547
                                        #   in Loop: Header=BB43_109 Depth=2
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_164:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit549
                                        #   in Loop: Header=BB43_109 Depth=2
	ori	$a0, $zero, 2072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$s5, $zero, 3
	beq	$a0, $s4, .LBB43_108
# %bb.165:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i550
                                        #   in Loop: Header=BB43_109 Depth=2
	ori	$a1, $zero, 2088
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_108
	.p2align	4, , 16
.LBB43_166:                             # %._crit_edge.loopexit
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a1, $fp, 840
	ld.d	$a0, $fp, 848
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 4
	ld.d	$s8, $sp, 176                   # 8-byte Folded Reload
	mul.d	$a2, $a2, $s8
	addi.d	$s3, $sp, 280
	addi.d	$s5, $sp, 1104
	ori	$s6, $zero, 432
	ori	$s7, $zero, 1
	b	.LBB43_168
.LBB43_167:                             #   in Loop: Header=BB43_70 Depth=1
	ld.d	$s8, $sp, 176                   # 8-byte Folded Reload
.LBB43_168:                             # %._crit_edge
                                        #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a3, $fp, 864
	ld.d	$a4, $sp, 160                   # 8-byte Folded Reload
	add.d	$a2, $a2, $a4
	ld.d	$a4, $sp, 144                   # 8-byte Folded Reload
	beqz	$a2, .LBB43_170
# %bb.169:                              #   in Loop: Header=BB43_70 Depth=1
	slli.d	$a0, $a2, 3
	ldx.d	$a0, $a3, $a0
	alsl.d	$a3, $a2, $a3, 3
	move	$a1, $a0
	b	.LBB43_171
.LBB43_170:                             #   in Loop: Header=BB43_70 Depth=1
	add.d	$a1, $a1, $a4
.LBB43_171:                             # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit521
                                        #   in Loop: Header=BB43_70 Depth=1
	sub.d	$a0, $a1, $a0
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s8
	addi.d	$a2, $a0, 1
	bnez	$a2, .LBB43_67
# %bb.172:                              #   in Loop: Header=BB43_70 Depth=1
	ld.d	$a0, $a3, 0
	addi.d	$a1, $a1, 432
	b	.LBB43_68
.LBB43_173:                             # %.preheader.preheader
	move	$s0, $zero
	move	$s1, $zero
	.p2align	4, , 16
.LBB43_174:                             # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 896
	ld.d	$a0, $fp, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 872
	ld.d	$a4, $fp, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 856
	ld.d	$a1, $fp, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB43_180
# %bb.175:                              #   in Loop: Header=BB43_174 Depth=1
	ld.d	$a2, $fp, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB43_177
# %bb.176:                              #   in Loop: Header=BB43_174 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_178
	.p2align	4, , 16
.LBB43_177:                             #   in Loop: Header=BB43_174 Depth=1
	add.d	$a0, $a1, $s0
.LBB43_178:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit565
                                        #   in Loop: Header=BB43_174 Depth=1
.Ltmp1812:
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15reset_name_typeEv)
	jirl	$ra, $ra, 0
.Ltmp1813:
# %bb.179:                              #   in Loop: Header=BB43_174 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s0, $s0, 432
	b	.LBB43_174
.LBB43_180:                             # %._crit_edge.i.i560
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	st.w	$zero, $a0, 0
	addi.d	$a3, $sp, 280
	st.d	$a3, $sp, 264
	ori	$a0, $zero, 2208
	add.d	$a0, $sp, $a0
	ld.d	$a2, $a0, 0
	st.d	$zero, $sp, 272
	st.b	$zero, $sp, 280
	ori	$a0, $zero, 2200
	add.d	$s4, $sp, $a0
.Ltmp1380:
	move	$a0, $s4
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1381:
# %bb.181:                              # %.noexc566
	ori	$a0, $zero, 2192
	add.d	$a0, $sp, $a0
	ld.wu	$a0, $a0, 0
	ori	$a1, $zero, 2128
	add.d	$s3, $sp, $a1
	ori	$a1, $zero, 2208
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	ori	$a1, $zero, 2200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	andi	$a0, $a0, 3
	sltui	$a0, $a0, 1
	masknez	$a3, $a2, $a0
.Ltmp1382:
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp1383:
# %bb.182:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_184
# %bb.183:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i568
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_184:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit570
	move	$s0, $zero
	ori	$s1, $zero, 432
	b	.LBB43_186
	.p2align	4, , 16
.LBB43_185:                             #   in Loop: Header=BB43_186 Depth=1
	addi.w	$s0, $s0, 1
.LBB43_186:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 896
	ld.d	$a0, $fp, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 872
	ld.d	$a4, $fp, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 856
	ld.d	$a1, $fp, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.w	$a2, $a2, $a3
	bge	$s0, $a2, .LBB43_197
# %bb.187:                              #   in Loop: Header=BB43_186 Depth=1
	ld.d	$a2, $fp, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $a2, $s0
	beqz	$a2, .LBB43_189
# %bb.188:                              #   in Loop: Header=BB43_186 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_190
	.p2align	4, , 16
.LBB43_189:                             #   in Loop: Header=BB43_186 Depth=1
	mul.d	$a0, $s0, $s1
	add.d	$a0, $a1, $a0
.LBB43_190:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit576
                                        #   in Loop: Header=BB43_186 Depth=1
.Ltmp1806:
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1807:
# %bb.191:                              #   in Loop: Header=BB43_186 Depth=1
	beqz	$a0, .LBB43_185
# %bb.192:                              #   in Loop: Header=BB43_186 Depth=1
	ld.d	$a2, $fp, 840
	ld.d	$a1, $fp, 848
	ld.d	$a0, $fp, 864
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s8
	add.d	$a3, $a1, $s0
	beqz	$a3, .LBB43_194
# %bb.193:                              #   in Loop: Header=BB43_186 Depth=1
	slli.d	$a1, $a3, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a3, $a0, 3
	move	$a2, $a1
	b	.LBB43_195
.LBB43_194:                             #   in Loop: Header=BB43_186 Depth=1
	ld.d	$a1, $a0, 0
	mul.d	$a3, $s0, $s1
	add.d	$a2, $a2, $a3
.LBB43_195:                             # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit578
                                        #   in Loop: Header=BB43_186 Depth=1
	st.d	$a2, $sp, 264
	st.d	$a1, $sp, 272
	addi.d	$a1, $a1, 432
	st.d	$a1, $sp, 280
	st.d	$a0, $sp, 288
.Ltmp1809:
	addi.d	$a0, $sp, 1088
	addi.d	$a2, $sp, 264
	ld.d	$a1, $sp, 136                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp1810:
# %bb.196:                              #   in Loop: Header=BB43_186 Depth=1
	addi.d	$s0, $s0, -1
	b	.LBB43_185
.LBB43_197:
.Ltmp1385:
	ori	$a0, $zero, 2104
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a2, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1386:
# %bb.198:
	move	$s5, $a0
	blez	$a0, .LBB43_209
# %bb.199:
.Ltmp1387:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.23)
	addi.d	$a1, $a1, %pc_lo12(.L.str.23)
	ori	$a2, $zero, 46
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1388:
# %bb.200:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit582
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a1, $a0, 0
.Ltmp1389:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1390:
# %bb.201:
	move	$s6, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s6, $a0
	ld.d	$s7, $a0, 240
	beqz	$s7, .LBB43_806
# %bb.202:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1108
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB43_204
# %bb.203:
	ld.bu	$a0, $s7, 67
	b	.LBB43_206
.LBB43_204:
.Ltmp1391:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1392:
# %bb.205:                              # %.noexc1113
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp1393:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp1394:
.LBB43_206:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1110
.Ltmp1395:
	ext.w.b	$a1, $a0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1396:
# %bb.207:                              # %.noexc1115
.Ltmp1397:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1398:
# %bb.208:                              # %_ZNSolsEPFRSoS_E.exit584
	ori	$a0, $zero, 1
	bne	$s5, $a0, .LBB43_799
.LBB43_209:                             # %.preheader1748
	move	$s0, $zero
	move	$s1, $zero
	.p2align	4, , 16
.LBB43_210:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 896
	ld.d	$a0, $fp, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 872
	ld.d	$a4, $fp, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 856
	ld.d	$a1, $fp, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB43_216
# %bb.211:                              #   in Loop: Header=BB43_210 Depth=1
	ld.d	$a2, $fp, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB43_213
# %bb.212:                              #   in Loop: Header=BB43_210 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_214
	.p2align	4, , 16
.LBB43_213:                             #   in Loop: Header=BB43_210 Depth=1
	add.d	$a0, $a1, $s0
.LBB43_214:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit591
                                        #   in Loop: Header=BB43_210 Depth=1
.Ltmp1803:
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd16handle_two_wordsEv)
	jirl	$ra, $ra, 0
.Ltmp1804:
# %bb.215:                              #   in Loop: Header=BB43_210 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s0, $s0, 432
	b	.LBB43_210
.LBB43_216:                             # %._crit_edge.i.i586
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	st.w	$zero, $a0, 0
	ori	$a0, $zero, 2208
	add.d	$a0, $sp, $a0
	ld.d	$a2, $a0, 0
	addi.d	$a3, $sp, 280
	st.d	$a3, $sp, 264
	st.d	$zero, $sp, 272
	st.b	$zero, $sp, 280
.Ltmp1399:
	move	$a0, $s4
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1400:
# %bb.217:                              # %.noexc594
	ori	$a0, $zero, 2192
	add.d	$a0, $sp, $a0
	ld.wu	$a0, $a0, 0
	ori	$a1, $zero, 2208
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	ori	$a1, $zero, 2200
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	andi	$a0, $a0, 3
	sltui	$a0, $a0, 1
	masknez	$a3, $a2, $a0
.Ltmp1401:
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp1402:
# %bb.218:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit596
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_220
# %bb.219:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i597
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_220:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit599
	move	$s8, $zero
	move	$s2, $zero
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a0, $a0, %pc_lo12(.L.str.24)
	ld.w	$a1, $a0, 0
	ld.b	$a0, $a0, 4
	addi.d	$a2, $sp, 2024
	st.d	$a2, $sp, 2008
	st.w	$a1, $sp, 2024
	st.b	$a0, $sp, 2028
	ori	$a0, $zero, 5
	st.d	$a0, $sp, 2016
	st.b	$zero, $sp, 2029
	addi.d	$s5, $sp, 280
	addi.d	$s1, $sp, 1992
	ori	$a0, $zero, 432
	ori	$s7, $zero, 16
.LBB43_221:                             # %.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB43_223 Depth 2
	mul.d	$s6, $s2, $a0
	move	$s0, $s2
	b	.LBB43_223
	.p2align	4, , 16
.LBB43_222:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit653
                                        #   in Loop: Header=BB43_223 Depth=2
	addi.w	$s2, $s2, 1
	addi.d	$s6, $s6, 432
	addi.d	$s0, $s0, 1
.LBB43_223:                             #   Parent Loop BB43_221 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $fp, 896
	ld.d	$a0, $fp, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 872
	ld.d	$a4, $fp, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 856
	ld.d	$a1, $fp, 840
	srli.d	$a3, $a3, 4
	ld.d	$s3, $sp, 176                   # 8-byte Folded Reload
	mul.d	$a3, $a3, $s3
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s3
	add.w	$a2, $a2, $a3
	bge	$s2, $a2, .LBB43_291
# %bb.224:                              #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a2, $fp, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $s0, $a2
	beqz	$a2, .LBB43_226
# %bb.225:                              #   in Loop: Header=BB43_223 Depth=2
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_227
	.p2align	4, , 16
.LBB43_226:                             #   in Loop: Header=BB43_223 Depth=2
	add.d	$a0, $a1, $s6
.LBB43_227:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit609
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a1, $a0, 248
	ld.d	$s3, $a0, 240
	addi.d	$a0, $sp, 280
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 1088
	bltu	$a1, $s7, .LBB43_230
# %bb.228:                              # %.noexc.i.i
                                        #   in Loop: Header=BB43_223 Depth=2
.Ltmp1783:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1784:
# %bb.229:                              # %.noexc611
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a1, $sp, 1088
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB43_230:                             # %._crit_edge.i.i.i610
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_234
# %bb.231:                              # %._crit_edge.i.i.i610
                                        #   in Loop: Header=BB43_223 Depth=2
	bnez	$a1, .LBB43_233
# %bb.232:                              #   in Loop: Header=BB43_223 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB43_234
	.p2align	4, , 16
.LBB43_233:                             #   in Loop: Header=BB43_223 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_234:                             #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $sp, 1088
	ld.d	$s3, $sp, 264
	st.d	$a0, $sp, 272
	ori	$a1, $zero, 10
	bne	$a0, $a1, .LBB43_236
# %bb.235:                              #   in Loop: Header=BB43_223 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.25)
	addi.d	$a1, $a0, %pc_lo12(.L.str.25)
	ori	$a2, $zero, 10
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s4, $a0, 1
	addi.d	$a0, $sp, 280
	bne	$s3, $a0, .LBB43_237
	b	.LBB43_238
	.p2align	4, , 16
.LBB43_236:                             #   in Loop: Header=BB43_223 Depth=2
	move	$s4, $zero
	addi.d	$a0, $sp, 280
	beq	$s3, $a0, .LBB43_238
.LBB43_237:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i614
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_238:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit616
                                        #   in Loop: Header=BB43_223 Depth=2
	bnez	$s4, .LBB43_268
# %bb.239:                              #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	ld.d	$a2, $sp, 176                   # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	add.d	$a1, $s0, $a1
	beqz	$a1, .LBB43_241
# %bb.240:                              #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_242
	.p2align	4, , 16
.LBB43_241:                             #   in Loop: Header=BB43_223 Depth=2
	add.d	$a0, $a0, $s6
.LBB43_242:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit631
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a1, $a0, 248
	ld.d	$s3, $a0, 240
	st.d	$s5, $sp, 264
	st.d	$a1, $sp, 1088
	move	$a0, $s5
	bltu	$a1, $s7, .LBB43_245
# %bb.243:                              # %.noexc.i.i633
                                        #   in Loop: Header=BB43_223 Depth=2
.Ltmp1786:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1787:
# %bb.244:                              # %.noexc634
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a1, $sp, 1088
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB43_245:                             # %._crit_edge.i.i.i632
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_249
# %bb.246:                              # %._crit_edge.i.i.i632
                                        #   in Loop: Header=BB43_223 Depth=2
	bnez	$a1, .LBB43_248
# %bb.247:                              #   in Loop: Header=BB43_223 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB43_249
	.p2align	4, , 16
.LBB43_248:                             #   in Loop: Header=BB43_223 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_249:                             #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $sp, 1088
	ld.d	$s3, $sp, 264
	st.d	$a0, $sp, 272
	ori	$s4, $zero, 1
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB43_251
# %bb.250:                              #   in Loop: Header=BB43_223 Depth=2
	pcalau12i	$a0, %pc_hi20(.L.str.26)
	addi.d	$a1, $a0, %pc_lo12(.L.str.26)
	ori	$a2, $zero, 6
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$a0, $zero, $a0
	or	$s4, $a0, $s8
.LBB43_251:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit637
                                        #   in Loop: Header=BB43_223 Depth=2
	beq	$s3, $s5, .LBB43_253
# %bb.252:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i638
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_253:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit640
                                        #   in Loop: Header=BB43_223 Depth=2
	andi	$a0, $s4, 1
	bnez	$a0, .LBB43_255
# %bb.254:                              #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a2, $sp, 2016
.Ltmp1789:
	pcalau12i	$a0, %pc_hi20(.L.str.27)
	addi.d	$a3, $a0, %pc_lo12(.L.str.27)
	addi.d	$a0, $sp, 2008
	ori	$a4, $zero, 3
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1790:
.LBB43_255:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	ld.d	$a2, $sp, 176                   # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	add.d	$a1, $s0, $a1
	beqz	$a1, .LBB43_257
# %bb.256:                              #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$s3, $a0, $a1
	b	.LBB43_258
	.p2align	4, , 16
.LBB43_257:                             #   in Loop: Header=BB43_223 Depth=2
	add.d	$s3, $a0, $s6
.LBB43_258:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit646
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a1, $sp, 2016
	ld.d	$s4, $sp, 2008
	st.d	$s1, $sp, 1976
	st.d	$a1, $sp, 264
	move	$a0, $s1
	bltu	$a1, $s7, .LBB43_261
# %bb.259:                              # %.noexc.i648
                                        #   in Loop: Header=BB43_223 Depth=2
.Ltmp1791:
	addi.d	$a0, $sp, 1976
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1792:
# %bb.260:                              # %.noexc649
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a1, $sp, 264
	st.d	$a0, $sp, 1976
	st.d	$a1, $sp, 1992
.LBB43_261:                             # %._crit_edge.i.i647
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_265
# %bb.262:                              # %._crit_edge.i.i647
                                        #   in Loop: Header=BB43_223 Depth=2
	bnez	$a1, .LBB43_264
# %bb.263:                              #   in Loop: Header=BB43_223 Depth=2
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB43_265
	.p2align	4, , 16
.LBB43_264:                             #   in Loop: Header=BB43_223 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_265:                             #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $sp, 264
	st.d	$a0, $sp, 1984
.Ltmp1794:
	addi.d	$a1, $sp, 1976
	ori	$a0, $zero, 2104
	add.d	$a2, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a3, $sp, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp1795:
# %bb.266:                              #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a0, $sp, 1976
	beq	$a0, $s1, .LBB43_222
# %bb.267:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i651
                                        #   in Loop: Header=BB43_223 Depth=2
	ld.d	$a1, $sp, 1992
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_222
	.p2align	4, , 16
.LBB43_268:                             #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	ld.d	$s3, $sp, 176                   # 8-byte Folded Reload
	mul.d	$a1, $a1, $s3
	add.d	$a1, $a1, $s0
	beqz	$a1, .LBB43_270
# %bb.269:                              #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB43_271
.LBB43_270:                             #   in Loop: Header=BB43_221 Depth=1
	add.d	$a1, $a0, $s6
.LBB43_271:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit618
                                        #   in Loop: Header=BB43_221 Depth=1
	addi.d	$s4, $sp, 280
.Ltmp1797:
	addi.d	$a0, $sp, 264
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1798:
# %bb.272:                              #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 2024
	beq	$a0, $a1, .LBB43_276
# %bb.273:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
                                        #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a1, $sp, 264
	beq	$a1, $s4, .LBB43_279
# %bb.274:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
                                        #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a2, $sp, 2024
	vld	$vr0, $sp, 272
	st.d	$a1, $sp, 2008
	vst	$vr0, $sp, 2016
	beqz	$a0, .LBB43_278
.LBB43_275:                             #   in Loop: Header=BB43_221 Depth=1
	st.d	$a0, $sp, 264
	st.d	$a2, $sp, 280
	b	.LBB43_284
.LBB43_276:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
                                        #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a1, $sp, 264
	beq	$a1, $s4, .LBB43_279
# %bb.277:                              #   in Loop: Header=BB43_221 Depth=1
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 272
	st.d	$a1, $sp, 2008
	vst	$vr0, $sp, 2016
	bnez	$a0, .LBB43_275
.LBB43_278:                             #   in Loop: Header=BB43_221 Depth=1
	st.d	$s4, $sp, 264
	move	$a0, $s4
	b	.LBB43_284
.LBB43_279:                             #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a2, $sp, 272
	beqz	$a2, .LBB43_283
# %bb.280:                              #   in Loop: Header=BB43_221 Depth=1
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB43_282
# %bb.281:                              #   in Loop: Header=BB43_221 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB43_283
.LBB43_282:                             #   in Loop: Header=BB43_221 Depth=1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_283:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a0, $sp, 272
	ld.d	$a1, $sp, 2008
	st.d	$a0, $sp, 2016
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 264
.LBB43_284:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB43_221 Depth=1
	st.d	$zero, $sp, 272
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 264
	beq	$a0, $s4, .LBB43_286
# %bb.285:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i620
                                        #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_286:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit622
                                        #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a2, $fp, 840
	ld.d	$a1, $fp, 848
	ld.d	$a0, $fp, 864
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s3
	add.d	$a3, $a1, $s0
	beqz	$a3, .LBB43_288
# %bb.287:                              #   in Loop: Header=BB43_221 Depth=1
	slli.d	$a1, $a3, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a3, $a0, 3
	move	$a2, $a1
	b	.LBB43_289
.LBB43_288:                             #   in Loop: Header=BB43_221 Depth=1
	ld.d	$a1, $a0, 0
	add.d	$a2, $a2, $s6
.LBB43_289:                             # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit624
                                        #   in Loop: Header=BB43_221 Depth=1
	st.d	$a2, $sp, 264
	st.d	$a1, $sp, 272
	addi.d	$a1, $a1, 432
	st.d	$a1, $sp, 280
	st.d	$a0, $sp, 288
.Ltmp1800:
	addi.d	$a0, $sp, 1088
	addi.d	$a2, $sp, 264
	ld.d	$a1, $sp, 136                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp1801:
# %bb.290:                              #   in Loop: Header=BB43_221 Depth=1
	ori	$s8, $zero, 1
	ori	$a0, $zero, 432
	b	.LBB43_221
.LBB43_291:
.Ltmp1404:
	ori	$a0, $zero, 2104
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a2, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1405:
# %bb.292:
	move	$s1, $a0
	move	$s8, $s3
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	st.w	$s1, $a0, 0
	blez	$s1, .LBB43_303
# %bb.293:
.Ltmp1406:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.28)
	addi.d	$a1, $a1, %pc_lo12(.L.str.28)
	ori	$a2, $zero, 38
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1407:
# %bb.294:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit658
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a1, $a0, 0
.Ltmp1408:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1409:
# %bb.295:
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB43_808
# %bb.296:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1119
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB43_298
# %bb.297:
	ld.bu	$a0, $s3, 67
	b	.LBB43_300
.LBB43_298:
.Ltmp1410:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1411:
# %bb.299:                              # %.noexc1124
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1412:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1413:
.LBB43_300:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1121
.Ltmp1414:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1415:
# %bb.301:                              # %.noexc1126
.Ltmp1416:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1417:
# %bb.302:                              # %_ZNSolsEPFRSoS_E.exit660
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB43_797
.LBB43_303:
	addi.d	$a0, $sp, 1896
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp1418:
	addi.d	$a0, $sp, 1896
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1419:
# %bb.304:                              # %_ZNSt5dequeIbSaIbEEC2Ev.exit
	addi.d	$a0, $sp, 1816
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp1421:
	addi.d	$a0, $sp, 1816
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1422:
# %bb.305:                              # %_ZNSt5dequeIbSaIbEEC2Ev.exit663
	addi.d	$a0, $sp, 1736
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp1424:
	addi.d	$a0, $sp, 1736
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1425:
# %bb.306:                              # %_ZNSt5dequeIiSaIiEEC2Ev.exit
	addi.d	$a0, $sp, 1720
	st.d	$a0, $sp, 1704
	st.d	$zero, $sp, 1712
	st.b	$zero, $sp, 1720
	addi.d	$a0, $sp, 1624
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp1427:
	addi.d	$a0, $sp, 1624
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1428:
# %bb.307:                              # %_ZNSt5dequeIiSaIiEEC2Ev.exit670
	addi.d	$a0, $sp, 1544
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp1430:
	addi.d	$a0, $sp, 1544
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1431:
# %bb.308:                              # %_ZNSt5dequeIiSaIiEEC2Ev.exit672
	move	$a0, $zero
	st.d	$zero, $sp, 64                  # 8-byte Folded Spill
	st.d	$zero, $sp, 80                  # 8-byte Folded Spill
	st.d	$zero, $sp, 56                  # 8-byte Folded Spill
	st.w	$zero, $sp, 1540
	st.b	$zero, $sp, 1539
	st.w	$zero, $sp, 1532
	st.b	$zero, $sp, 1531
	st.b	$zero, $sp, 1530
	addi.d	$a1, $fp, 2047
	addi.d	$a2, $a1, 417
	st.d	$a2, $sp, 112                   # 8-byte Folded Spill
	addi.d	$a2, $a1, 497
	st.d	$a2, $sp, 104                   # 8-byte Folded Spill
	addi.d	$a2, $a1, 665
	st.d	$a2, $sp, 96                    # 8-byte Folded Spill
	addi.d	$a2, $a1, 585
	st.d	$a2, $sp, 88                    # 8-byte Folded Spill
	addi.d	$a2, $a1, 329
	st.d	$a2, $sp, 72                    # 8-byte Folded Spill
	addi.d	$s4, $sp, 1040
	addi.d	$a1, $a1, 249
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	addi.d	$a1, $fp, 904
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	addi.d	$s2, $sp, 1072
	lu12i.w	$a1, -258112
	ori	$a1, $a1, 4033
	lu32i.d	$a1, 64527
	lu52i.d	$s1, $a1, 252
	lu12i.w	$a1, -118150
	ori	$a1, $a1, 2423
	lu32i.d	$a1, -177225
	lu52i.d	$a1, $a1, 403
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	addi.d	$a1, $fp, 8
	st.d	$a1, $sp, 128                   # 8-byte Folded Spill
	ori	$s3, $zero, 2
	ori	$s5, $zero, 2
	.p2align	4, , 16
.LBB43_309:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB43_352 Depth 2
                                        #       Child Loop BB43_366 Depth 3
                                        #     Child Loop BB43_661 Depth 2
	ld.d	$a2, $fp, 896
	ld.d	$a1, $fp, 864
	sub.d	$a3, $a2, $a1
	ld.d	$a4, $fp, 872
	ld.d	$a5, $fp, 880
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $fp, 856
	ld.d	$a2, $fp, 840
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s8
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s8
	add.w	$a3, $a3, $a4
	st.w	$a0, $sp, 1524
	bge	$a0, $a3, .LBB43_691
# %bb.310:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a3, $fp, 848
	sub.d	$a3, $a2, $a3
	srai.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a3, $a3, $a0
	beqz	$a3, .LBB43_312
# %bb.311:                              #   in Loop: Header=BB43_309 Depth=1
	slli.d	$a0, $a3, 3
	ldx.d	$a1, $a1, $a0
	b	.LBB43_313
	.p2align	4, , 16
.LBB43_312:                             #   in Loop: Header=BB43_309 Depth=1
	ori	$a1, $zero, 432
	mul.d	$a0, $a0, $a1
	add.d	$a1, $a2, $a0
.LBB43_313:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit675
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1433:
	addi.d	$a0, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP3CmdC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1434:
# %bb.314:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1336
	ld.d	$s7, $sp, 1328
	addi.d	$a0, $sp, 280
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 1056
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_317
# %bb.315:                              # %.noexc.i.i677
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1436:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1056
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1437:
# %bb.316:                              # %.noexc678
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1056
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB43_317:                             # %._crit_edge.i.i.i676
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_321
# %bb.318:                              # %._crit_edge.i.i.i676
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_320
# %bb.319:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_321
	.p2align	4, , 16
.LBB43_320:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_321:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1056
	ld.d	$s7, $sp, 264
	st.d	$a0, $sp, 272
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB43_323
# %bb.322:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.29)
	addi.d	$a1, $a0, %pc_lo12(.L.str.29)
	ori	$a2, $zero, 23
	move	$a0, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	addi.d	$a0, $sp, 280
	bne	$s7, $a0, .LBB43_324
	b	.LBB43_325
	.p2align	4, , 16
.LBB43_323:                             #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
	addi.d	$a0, $sp, 280
	beq	$s7, $a0, .LBB43_325
.LBB43_324:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i682
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_325:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit684
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s0, .LBB43_332
# %bb.326:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1320
	ld.d	$a1, $sp, 1288
	sub.d	$a1, $a0, $a1
	ld.d	$a2, $sp, 1296
	ld.d	$a3, $sp, 1304
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a1, $a2, $a3
	srli.d	$a1, $a1, 7
	ld.d	$a2, $sp, 1280
	ld.d	$a3, $sp, 1264
	alsl.d	$a0, $a0, $a1, 2
	addi.d	$a1, $sp, 280
	st.d	$a1, $sp, 264
	st.d	$zero, $sp, 272
	sub.d	$a1, $a2, $a3
	srli.d	$a1, $a1, 7
	add.w	$a0, $a0, $a1
	st.b	$zero, $sp, 280
	blt	$a0, $s3, .LBB43_335
# %bb.327:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1768:
	addi.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1088
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1769:
# %bb.328:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_343
# %bb.329:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i686
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1056
	beq	$a1, $s2, .LBB43_346
# %bb.330:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i687
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 280
	vld	$vr0, $sp, 1064
	st.d	$a1, $sp, 264
	vst	$vr0, $sp, 272
	beqz	$a0, .LBB43_345
.LBB43_331:                             #   in Loop: Header=BB43_309 Depth=1
	st.d	$a0, $sp, 1056
	st.d	$a2, $sp, 1072
	b	.LBB43_434
	.p2align	4, , 16
.LBB43_332:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1439:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1440:
# %bb.333:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 272
	ld.d	$s7, $sp, 264
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB43_336
# %bb.334:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.31)
	addi.d	$a1, $a0, %pc_lo12(.L.str.31)
	ori	$a2, $zero, 13
	move	$a0, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	addi.d	$a0, $sp, 280
	bne	$s7, $a0, .LBB43_337
	b	.LBB43_338
	.p2align	4, , 16
.LBB43_335:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1766:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a3, $a0, %pc_lo12(.L.str.30)
	addi.d	$a0, $sp, 264
	ori	$a4, $zero, 10
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1767:
	b	.LBB43_436
	.p2align	4, , 16
.LBB43_336:                             #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
	addi.d	$a0, $sp, 280
	beq	$s7, $a0, .LBB43_338
.LBB43_337:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i715
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_338:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit717
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s0, .LBB43_411
# %bb.339:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1442:
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	st.d	$a0, $sp, 16
	ori	$a0, $zero, 2104
	add.d	$a0, $sp, $a0
	st.d	$a0, $sp, 8
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1532
	addi.d	$a2, $sp, 1088
	addi.d	$a3, $sp, 1530
	addi.d	$a4, $sp, 1531
	ld.d	$a5, $sp, 88                    # 8-byte Folded Reload
	st.d	$a5, $sp, 0
	ld.d	$a5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$a6, $sp, 104                   # 8-byte Folded Reload
	ld.d	$a7, $sp, 96                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockC1ERiRNS_3CmdERbS4_RSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISB_EERS5_IbSaIbEERS5_IiSaIiEESH_RNS6_18basic_stringstreamIcS9_SA_EES1_)
	jirl	$ra, $ra, 0
.Ltmp1443:
# %bb.340:                              #   in Loop: Header=BB43_309 Depth=1
	ldptr.d	$a1, $fp, 2440
	ldptr.d	$a0, $fp, 2424
	addi.d	$a1, $a1, -520
	beq	$a0, $a1, .LBB43_349
# %bb.341:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1445:
	addi.d	$a1, $sp, 264
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1446:
# %bb.342:                              # %.noexc719
                                        #   in Loop: Header=BB43_309 Depth=1
	ldptr.d	$a0, $fp, 2424
	addi.d	$a0, $a0, 520
	stptr.d	$a0, $fp, 2424
	b	.LBB43_350
.LBB43_343:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i694
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1056
	beq	$a1, $s2, .LBB43_346
# %bb.344:                              #   in Loop: Header=BB43_309 Depth=1
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 1064
	st.d	$a1, $sp, 264
	vst	$vr0, $sp, 272
	bnez	$a0, .LBB43_331
.LBB43_345:                             #   in Loop: Header=BB43_309 Depth=1
	st.d	$s2, $sp, 1056
	move	$a0, $s2
	b	.LBB43_434
.LBB43_346:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 1064
	beqz	$a2, .LBB43_433
# %bb.347:                              #   in Loop: Header=BB43_309 Depth=1
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB43_432
# %bb.348:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB43_433
.LBB43_349:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1447:
	addi.d	$a1, $sp, 264
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1448:
.LBB43_350:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EE9push_backERKS1_.exit.preheader
                                        #   in Loop: Header=BB43_309 Depth=1
	move	$s2, $zero
	ori	$s0, $zero, 1
	ori	$a0, $zero, 520
	st.d	$a0, $sp, 160                   # 8-byte Folded Spill
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	b	.LBB43_352
	.p2align	4, , 16
.LBB43_351:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit732
                                        #   in Loop: Header=BB43_352 Depth=2
	ld.d	$a0, $sp, 144                   # 8-byte Folded Reload
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	ld.d	$a0, $sp, 160                   # 8-byte Folded Reload
	addi.d	$a0, $a0, 520
	st.d	$a0, $sp, 160                   # 8-byte Folded Spill
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	addi.w	$s0, $s0, 1
	ld.d	$s8, $sp, 176                   # 8-byte Folded Reload
	ori	$s3, $zero, 2
.LBB43_352:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EE9push_backERKS1_.exit
                                        #   Parent Loop BB43_309 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB43_366 Depth 3
	ldptr.d	$a1, $fp, 2448
	ldptr.d	$a0, $fp, 2416
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $fp, 2424
	ldptr.d	$a4, $fp, 2432
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $fp, 2408
	ldptr.d	$a1, $fp, 2392
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s1
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s1
	add.w	$a2, $a2, $a3
	bge	$s2, $a2, .LBB43_404
# %bb.353:                              #   in Loop: Header=BB43_352 Depth=2
	ldptr.d	$a2, $fp, 2400
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $s1
	add.d	$a2, $a2, $s2
	beqz	$a2, .LBB43_355
# %bb.354:                              #   in Loop: Header=BB43_352 Depth=2
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_356
	.p2align	4, , 16
.LBB43_355:                             #   in Loop: Header=BB43_352 Depth=2
	slli.d	$a0, $s2, 9
	alsl.d	$a0, $s2, $a0, 3
	add.d	$a0, $a1, $a0
.LBB43_356:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB43_352 Depth=2
	ld.d	$a1, $a0, 496
	ld.d	$s7, $a0, 488
	addi.d	$a0, $sp, 1072
	st.d	$a0, $sp, 1056
	st.d	$a1, $sp, 1024
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_359
# %bb.357:                              # %.noexc.i.i727
                                        #   in Loop: Header=BB43_352 Depth=2
.Ltmp1732:
	addi.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1024
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1733:
# %bb.358:                              # %.noexc728
                                        #   in Loop: Header=BB43_352 Depth=2
	ld.d	$a1, $sp, 1024
	st.d	$a0, $sp, 1056
	st.d	$a1, $sp, 1072
.LBB43_359:                             # %._crit_edge.i.i.i726
                                        #   in Loop: Header=BB43_352 Depth=2
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_363
# %bb.360:                              # %._crit_edge.i.i.i726
                                        #   in Loop: Header=BB43_352 Depth=2
	bnez	$a1, .LBB43_362
# %bb.361:                              #   in Loop: Header=BB43_352 Depth=2
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_363
	.p2align	4, , 16
.LBB43_362:                             #   in Loop: Header=BB43_352 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_363:                             #   in Loop: Header=BB43_352 Depth=2
	ld.d	$a0, $sp, 1024
	st.d	$a0, $sp, 1064
	addi.d	$s2, $s2, 1
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s8, $sp, 144                   # 8-byte Folded Reload
	b	.LBB43_366
	.p2align	4, , 16
.LBB43_364:                             # %_ZNSolsEPFRSoS_E.exit751
                                        #   in Loop: Header=BB43_366 Depth=3
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	st.w	$s5, $a0, 0
.LBB43_365:                             #   in Loop: Header=BB43_366 Depth=3
	addi.d	$s8, $s8, 1
	addi.d	$s3, $s3, 520
	addi.w	$s0, $s0, 1
.LBB43_366:                             #   Parent Loop BB43_309 Depth=1
                                        #     Parent Loop BB43_352 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ldptr.d	$a1, $fp, 2448
	ldptr.d	$a0, $fp, 2416
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $fp, 2424
	ldptr.d	$a4, $fp, 2432
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $fp, 2408
	ldptr.d	$a1, $fp, 2392
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s1
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s1
	add.w	$a2, $a2, $a3
	bge	$s0, $a2, .LBB43_402
# %bb.367:                              #   in Loop: Header=BB43_366 Depth=3
	ldptr.d	$a2, $fp, 2400
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $s1
	add.d	$a2, $s8, $a2
	beqz	$a2, .LBB43_369
# %bb.368:                              #   in Loop: Header=BB43_366 Depth=3
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_370
	.p2align	4, , 16
.LBB43_369:                             #   in Loop: Header=BB43_366 Depth=3
	add.d	$a0, $a1, $s3
.LBB43_370:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit734
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a1, $a0, 496
	ld.d	$s7, $a0, 488
	st.d	$s4, $sp, 1024
	st.d	$a1, $sp, 992
	move	$a0, $s4
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_373
# %bb.371:                              # %.noexc.i.i736
                                        #   in Loop: Header=BB43_366 Depth=3
.Ltmp1735:
	addi.d	$a0, $sp, 1024
	addi.d	$a1, $sp, 992
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1736:
# %bb.372:                              # %.noexc737
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a1, $sp, 992
	st.d	$a0, $sp, 1024
	st.d	$a1, $sp, 1040
.LBB43_373:                             # %._crit_edge.i.i.i735
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_376
# %bb.374:                              # %._crit_edge.i.i.i735
                                        #   in Loop: Header=BB43_366 Depth=3
	bnez	$a1, .LBB43_379
# %bb.375:                              #   in Loop: Header=BB43_366 Depth=3
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
.LBB43_376:                             #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a2, $sp, 992
	ld.d	$a0, $sp, 1064
	st.d	$a2, $sp, 1032
	bne	$a0, $a2, .LBB43_380
.LBB43_377:                             #   in Loop: Header=BB43_366 Depth=3
	ld.d	$s7, $sp, 1024
	beqz	$a2, .LBB43_388
# %bb.378:                              #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a0, $sp, 1056
	move	$a1, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	bne	$s7, $s4, .LBB43_381
	b	.LBB43_382
	.p2align	4, , 16
.LBB43_379:                             #   in Loop: Header=BB43_366 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 992
	ld.d	$a0, $sp, 1064
	st.d	$a2, $sp, 1032
	beq	$a0, $a2, .LBB43_377
.LBB43_380:                             # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$s7, $sp, 1024
	move	$s6, $zero
	beq	$s7, $s4, .LBB43_382
.LBB43_381:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i740
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a0, $sp, 1040
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_382:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit742
                                        #   in Loop: Header=BB43_366 Depth=3
	beqz	$s6, .LBB43_365
# %bb.383:                              #   in Loop: Header=BB43_366 Depth=3
.Ltmp1738:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a2, $sp, $a1
	ori	$a1, $zero, 2496
	add.d	$a3, $sp, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1739:
# %bb.384:                              #   in Loop: Header=BB43_366 Depth=3
.Ltmp1740:
	pcalau12i	$a0, %pc_hi20(.L.str.32)
	addi.d	$a1, $a0, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 35
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1741:
# %bb.385:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit744
                                        #   in Loop: Header=BB43_366 Depth=3
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	ori	$a1, $zero, 2360
	add.d	$a1, $sp, $a1
	ldx.d	$s7, $a1, $a0
	beqz	$s7, .LBB43_688
# %bb.386:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1130
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB43_389
# %bb.387:                              #   in Loop: Header=BB43_366 Depth=3
	ld.bu	$a0, $s7, 67
	b	.LBB43_391
.LBB43_388:                             #   in Loop: Header=BB43_366 Depth=3
	ori	$s6, $zero, 1
	bne	$s7, $s4, .LBB43_381
	b	.LBB43_382
.LBB43_389:                             #   in Loop: Header=BB43_366 Depth=3
.Ltmp1742:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1743:
# %bb.390:                              # %.noexc1135
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp1744:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp1745:
.LBB43_391:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1132
                                        #   in Loop: Header=BB43_366 Depth=3
.Ltmp1746:
	ext.w.b	$a1, $a0
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1747:
# %bb.392:                              # %.noexc1137
                                        #   in Loop: Header=BB43_366 Depth=3
.Ltmp1748:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1749:
# %bb.393:                              # %_ZNSolsEPFRSoS_E.exit746
                                        #   in Loop: Header=BB43_366 Depth=3
.Ltmp1750:
	pcalau12i	$a0, %pc_hi20(.L.str.33)
	addi.d	$a1, $a0, %pc_lo12(.L.str.33)
	ori	$a2, $zero, 18
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1751:
# %bb.394:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit748
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a1, $sp, 1056
	ld.d	$a2, $sp, 1064
.Ltmp1752:
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1753:
# %bb.395:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB43_366 Depth=3
	move	$s7, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s7, $a0
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB43_688
# %bb.396:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1141
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB43_398
# %bb.397:                              #   in Loop: Header=BB43_366 Depth=3
	ld.bu	$a0, $s6, 67
	b	.LBB43_400
.LBB43_398:                             #   in Loop: Header=BB43_366 Depth=3
.Ltmp1754:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1755:
# %bb.399:                              # %.noexc1146
                                        #   in Loop: Header=BB43_366 Depth=3
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp1756:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp1757:
.LBB43_400:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1143
                                        #   in Loop: Header=BB43_366 Depth=3
.Ltmp1758:
	ext.w.b	$a1, $a0
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1759:
# %bb.401:                              # %.noexc1148
                                        #   in Loop: Header=BB43_366 Depth=3
.Ltmp1760:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1761:
	b	.LBB43_364
	.p2align	4, , 16
.LBB43_402:                             #   in Loop: Header=BB43_352 Depth=2
	ld.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1072
	beq	$a0, $a1, .LBB43_351
# %bb.403:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i730
                                        #   in Loop: Header=BB43_352 Depth=2
	ld.d	$a1, $sp, 1072
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_351
	.p2align	4, , 16
.LBB43_404:                             #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a1, $sp, 1531
	ld.bu	$a0, $sp, 1530
	beqz	$a1, .LBB43_408
# %bb.405:                              #   in Loop: Header=BB43_309 Depth=1
	beqz	$a0, .LBB43_408
# %bb.406:                              #   in Loop: Header=BB43_309 Depth=1
	st.b	$zero, $sp, 1530
	addi.d	$s2, $sp, 1072
.LBB43_407:                             # %.thread
                                        #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB43_447
.LBB43_408:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$s2, $sp, 1072
	beqz	$a1, .LBB43_407
# %bb.409:                              #   in Loop: Header=BB43_309 Depth=1
	bnez	$a0, .LBB43_407
# %bb.410:                              #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockD2Ev)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB43_411:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1450:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1451:
# %bb.412:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 272
	ld.d	$s7, $sp, 264
	ori	$a1, $zero, 17
	bne	$a0, $a1, .LBB43_414
# %bb.413:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.34)
	addi.d	$a1, $a0, %pc_lo12(.L.str.34)
	ori	$a2, $zero, 17
	move	$a0, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	addi.d	$a0, $sp, 280
	bne	$s7, $a0, .LBB43_415
	b	.LBB43_416
.LBB43_414:                             #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
	addi.d	$a0, $sp, 280
	beq	$s7, $a0, .LBB43_416
.LBB43_415:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i757
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_416:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit759
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s0, .LBB43_418
# %bb.417:                              #   in Loop: Header=BB43_309 Depth=1
	st.b	$zero, $sp, 1530
	b	.LBB43_447
.LBB43_418:                             #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $sp, 1530
	bnez	$a0, .LBB43_447
# %bb.419:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	andi	$a0, $a0, 1
	beqz	$a0, .LBB43_425
# %bb.420:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1729:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1730:
# %bb.421:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 272
	ld.d	$s7, $sp, 264
	ori	$a2, $zero, 1
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB43_423
# %bb.422:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.35)
	addi.d	$a1, $a0, %pc_lo12(.L.str.35)
	ori	$a2, $zero, 13
	move	$a0, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$a2, $zero, $a0
.LBB43_423:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit764
                                        #   in Loop: Header=BB43_309 Depth=1
	st.d	$a2, $sp, 80                    # 8-byte Folded Spill
	addi.d	$a0, $sp, 280
	beq	$s7, $a0, .LBB43_447
# %bb.424:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i765
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	b	.LBB43_446
.LBB43_425:                             #   in Loop: Header=BB43_309 Depth=1
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a0, $a0, 0
	ld.d	$a1, $sp, 120                   # 8-byte Folded Reload
	st.w	$a0, $a1, 0
	bge	$a0, $s3, .LBB43_687
# %bb.426:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1336
	ld.d	$s7, $sp, 1328
	addi.d	$a0, $sp, 280
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 1056
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_429
# %bb.427:                              # %.noexc.i.i772
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1453:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1056
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1454:
# %bb.428:                              # %.noexc773
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1056
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB43_429:                             # %._crit_edge.i.i.i771
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_450
# %bb.430:                              # %._crit_edge.i.i.i771
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_449
# %bb.431:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_450
.LBB43_432:                             #   in Loop: Header=BB43_309 Depth=1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_433:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i692
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1064
	ld.d	$a1, $sp, 264
	st.d	$a0, $sp, 272
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 1056
.LBB43_434:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit695
                                        #   in Loop: Header=BB43_309 Depth=1
	st.d	$zero, $sp, 1064
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 1056
	beq	$a0, $s2, .LBB43_436
# %bb.435:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i696
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1072
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_436:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit703
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_444
# %bb.437:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1771:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s7, $a0, %got_pc_lo12(_ZSt4cout)
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1772:
# %bb.438:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s7, $a0
	ld.d	$a0, $a0, 232
	ld.d	$a1, $sp, 264
	st.d	$a0, $fp, 512
.Ltmp1773:
	ori	$a2, $zero, 16
	ld.d	$a0, $sp, 128                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1774:
# %bb.439:                              # %.noexc705
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	beqz	$a1, .LBB43_441
# %bb.440:                              #   in Loop: Header=BB43_309 Depth=1
	move	$a1, $zero
	b	.LBB43_442
.LBB43_441:                             #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a1, $a0, 32
	ori	$a1, $a1, 4
.LBB43_442:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1775:
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
.Ltmp1776:
# %bb.443:                              # %_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode.exit
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s7, $a0
.Ltmp1777:
	ld.d	$a1, $sp, 128                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5rdbufEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp1778:
.LBB43_444:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_447
# %bb.445:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i707
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
.LBB43_446:                             # %.thread1254
                                        #   in Loop: Header=BB43_309 Depth=1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_447:                             # %.thread1254
                                        #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
.LBB43_448:                             #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a0, $sp, 1524
	addi.w	$a0, $a0, 1
	b	.LBB43_309
.LBB43_449:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_450:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1056
	ld.d	$s7, $sp, 264
	st.d	$a0, $sp, 272
	ori	$a1, $zero, 21
	bne	$a0, $a1, .LBB43_452
# %bb.451:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.36)
	addi.d	$a1, $a0, %pc_lo12(.L.str.36)
	ori	$a2, $zero, 21
	move	$a0, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	addi.d	$a0, $sp, 280
	bne	$s7, $a0, .LBB43_453
	b	.LBB43_454
.LBB43_452:                             #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
	addi.d	$a0, $sp, 280
	beq	$s7, $a0, .LBB43_454
.LBB43_453:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i777
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_454:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit779
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s0, .LBB43_463
# %bb.455:                              # %.noexc.i781
                                        #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 280
	st.d	$a0, $sp, 264
	ori	$a0, $zero, 77
	st.d	$a0, $sp, 1056
.Ltmp1689:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1056
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1690:
# %bb.456:                              # %.noexc782
                                        #   in Loop: Header=BB43_309 Depth=1
	move	$s6, $a0
	ld.d	$s0, $sp, 1056
	st.d	$a0, $sp, 264
	st.d	$s0, $sp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.37)
	addi.d	$a1, $a0, %pc_lo12(.L.str.37)
	ori	$a2, $zero, 77
	move	$a0, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	st.d	$s0, $sp, 272
	stx.b	$zero, $s6, $s0
	st.d	$s2, $sp, 1056
	ori	$a0, $zero, 56
	st.d	$a0, $sp, 1024
.Ltmp1692:
	addi.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1024
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1693:
# %bb.457:                              # %.noexc786
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1024
	pcalau12i	$a2, %pc_hi20(.L.str.38)
	addi.d	$a2, $a2, %pc_lo12(.L.str.38)
	vld	$vr0, $a2, 16
	st.d	$a0, $sp, 1056
	st.d	$a1, $sp, 1072
	vst	$vr0, $a0, 16
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 32
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 32
	vld	$vr0, $a2, 40
	vst	$vr0, $a0, 40
	st.d	$a1, $sp, 1064
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $sp, 1320
	ld.d	$a1, $sp, 1288
	addi.d	$a2, $sp, 1040
	st.d	$a2, $sp, 1024
	sub.d	$a1, $a0, $a1
	ld.d	$a2, $sp, 1296
	ld.d	$a3, $sp, 1304
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a1, $a2, $a3
	ld.d	$a2, $sp, 1280
	ld.d	$a3, $sp, 1264
	st.d	$zero, $sp, 1032
	srli.d	$a1, $a1, 7
	alsl.d	$a0, $a0, $a1, 2
	sub.d	$a1, $a2, $a3
	srli.d	$a1, $a1, 7
	add.w	$a0, $a0, $a1
	st.b	$zero, $sp, 1040
	blt	$a0, $s3, .LBB43_543
# %bb.458:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1695:
	addi.d	$a0, $sp, 992
	addi.d	$a1, $sp, 1088
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1696:
# %bb.459:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1024
	addi.d	$a1, $sp, 1040
	beq	$a0, $a1, .LBB43_491
# %bb.460:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i793
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 992
	addi.d	$a2, $sp, 1008
	beq	$a1, $a2, .LBB43_494
# %bb.461:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i794
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 1040
	vld	$vr0, $sp, 1000
	st.d	$a1, $sp, 1024
	vst	$vr0, $sp, 1032
	beqz	$a0, .LBB43_493
.LBB43_462:                             #   in Loop: Header=BB43_309 Depth=1
	st.d	$a0, $sp, 992
	st.d	$a2, $sp, 1008
	b	.LBB43_541
.LBB43_463:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1336
	ld.d	$s7, $sp, 1328
	addi.d	$a0, $sp, 280
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 1056
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_466
# %bb.464:                              # %.noexc.i.i862
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1456:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1056
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1457:
# %bb.465:                              # %.noexc863
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1056
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB43_466:                             # %._crit_edge.i.i.i861
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_470
# %bb.467:                              # %._crit_edge.i.i.i861
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_469
# %bb.468:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_470
.LBB43_469:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_470:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1056
	ld.d	$s7, $sp, 264
	st.d	$a0, $sp, 272
	ori	$a1, $zero, 21
	bne	$a0, $a1, .LBB43_472
# %bb.471:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.39)
	addi.d	$a1, $a0, %pc_lo12(.L.str.39)
	ori	$a2, $zero, 21
	move	$a0, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	addi.d	$a0, $sp, 280
	bne	$s7, $a0, .LBB43_473
	b	.LBB43_474
.LBB43_472:                             #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
	addi.d	$a0, $sp, 280
	beq	$s7, $a0, .LBB43_474
.LBB43_473:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i867
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_474:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit869
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s0, .LBB43_485
# %bb.475:                              # %.noexc.i871
                                        #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 280
	st.d	$a0, $sp, 264
	ori	$a0, $zero, 66
	st.d	$a0, $sp, 1056
.Ltmp1670:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1056
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1671:
# %bb.476:                              # %.noexc872
                                        #   in Loop: Header=BB43_309 Depth=1
	move	$s6, $a0
	ld.d	$s0, $sp, 1056
	st.d	$a0, $sp, 264
	st.d	$s0, $sp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.40)
	addi.d	$a1, $a0, %pc_lo12(.L.str.40)
	ori	$a2, $zero, 66
	move	$a0, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	st.d	$s0, $sp, 272
	stx.b	$zero, $s6, $s0
	st.d	$s2, $sp, 1056
	ori	$a0, $zero, 46
	st.d	$a0, $sp, 1024
.Ltmp1673:
	addi.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1024
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1674:
# %bb.477:                              # %.noexc876
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1024
	pcalau12i	$a2, %pc_hi20(.L.str.41)
	addi.d	$a2, $a2, %pc_lo12(.L.str.41)
	vld	$vr0, $a2, 16
	st.d	$a0, $sp, 1056
	st.d	$a1, $sp, 1072
	vst	$vr0, $a0, 16
	vld	$vr0, $a2, 0
	ld.d	$a3, $a2, 32
	ld.d	$a2, $a2, 38
	vst	$vr0, $a0, 0
	st.d	$a3, $a0, 32
	st.d	$a2, $a0, 38
	st.d	$a1, $sp, 1064
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_479
# %bb.478:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1676:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1677:
.LBB43_479:                             # %_ZNSolsEPFRSoS_E.exit879
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 272
	ld.d	$s7, $sp, 264
	addi.d	$a0, $sp, 880
	st.d	$a0, $sp, 864
	st.d	$a1, $sp, 1024
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_482
# %bb.480:                              # %.noexc.i884
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1678:
	addi.d	$a0, $sp, 864
	addi.d	$a1, $sp, 1024
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1679:
# %bb.481:                              # %.noexc885
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1024
	st.d	$a0, $sp, 864
	st.d	$a1, $sp, 880
.LBB43_482:                             # %._crit_edge.i.i883
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_522
# %bb.483:                              # %._crit_edge.i.i883
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_521
# %bb.484:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_522
.LBB43_485:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1336
	ld.d	$s7, $sp, 1328
	addi.d	$a0, $sp, 280
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 1056
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_488
# %bb.486:                              # %.noexc.i.i918
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1459:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1056
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1460:
# %bb.487:                              # %.noexc919
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1056
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB43_488:                             # %._crit_edge.i.i.i917
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_498
# %bb.489:                              # %._crit_edge.i.i.i917
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_497
# %bb.490:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_498
.LBB43_491:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i801
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 992
	addi.d	$a2, $sp, 1008
	beq	$a1, $a2, .LBB43_494
# %bb.492:                              #   in Loop: Header=BB43_309 Depth=1
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 1000
	st.d	$a1, $sp, 1024
	vst	$vr0, $sp, 1032
	bnez	$a0, .LBB43_462
.LBB43_493:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 1008
	st.d	$a0, $sp, 992
	b	.LBB43_541
.LBB43_494:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 1000
	beqz	$a2, .LBB43_540
# %bb.495:                              #   in Loop: Header=BB43_309 Depth=1
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB43_539
# %bb.496:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB43_540
.LBB43_497:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_498:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1056
	ld.d	$s7, $sp, 264
	st.d	$a0, $sp, 272
	ori	$a1, $zero, 20
	bne	$a0, $a1, .LBB43_500
# %bb.499:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.42)
	addi.d	$a1, $a0, %pc_lo12(.L.str.42)
	ori	$a2, $zero, 20
	move	$a0, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	b	.LBB43_501
.LBB43_500:                             #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
.LBB43_501:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit922
                                        #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 280
	beq	$s7, $a0, .LBB43_503
# %bb.502:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i923
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_503:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit925
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s0, .LBB43_505
# %bb.504:                              #   in Loop: Header=BB43_309 Depth=1
	st.d	$zero, $sp, 80                  # 8-byte Folded Spill
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	b	.LBB43_447
.LBB43_505:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1462:
	addi.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1463:
# %bb.506:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1465:
	pcalau12i	$a0, %pc_hi20(.L.str.43)
	addi.d	$a1, $a0, %pc_lo12(.L.str.43)
	addi.d	$a0, $sp, 1056
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1466:
# %bb.507:                              #   in Loop: Header=BB43_309 Depth=1
	bnez	$a0, .LBB43_510
# %bb.508:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1467:
	pcalau12i	$a0, %pc_hi20(.L.str.44)
	addi.d	$a1, $a0, %pc_lo12(.L.str.44)
	addi.d	$a0, $sp, 1056
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1468:
# %bb.509:                              #   in Loop: Header=BB43_309 Depth=1
	beqz	$a0, .LBB43_514
.LBB43_510:                             #   in Loop: Header=BB43_309 Depth=1
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 1024
.Ltmp1469:
	pcalau12i	$a0, %pc_hi20(.L.str.44)
	addi.d	$a1, $a0, %pc_lo12(.L.str.44)
	addi.d	$a0, $sp, 1056
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1470:
# %bb.511:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1472:
	move	$a5, $a0
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1540
	addi.d	$a2, $sp, 1088
	addi.d	$a3, $sp, 1024
	addi.d	$a4, $sp, 1539
	ori	$a6, $zero, 2104
	add.d	$a6, $sp, $a6
	ori	$a7, $zero, 2496
	add.d	$a7, $sp, $a7
	pcaddu18i	$ra, %call36(_ZN2PP8WhenthenC1ERiRNS_3CmdERbS4_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
.Ltmp1473:
# %bb.512:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1475:
	addi.d	$a1, $sp, 264
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_)
	jirl	$ra, $ra, 0
.Ltmp1476:
# %bb.513:                              #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$s0, $sp, 1024
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	addi.w	$a0, $a0, 1
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZN2PP8WhenthenD2Ev)
	jirl	$ra, $ra, 0
	bnez	$s0, .LBB43_617
.LBB43_514:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1478:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1479:
# %bb.515:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1481:
	pcalau12i	$a0, %pc_hi20(.L.str.45)
	addi.d	$a1, $a0, %pc_lo12(.L.str.45)
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1482:
# %bb.516:                              #   in Loop: Header=BB43_309 Depth=1
	move	$s6, $a0
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_518
# %bb.517:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i929
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_518:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit931
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s6, .LBB43_536
# %bb.519:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	blez	$a0, .LBB43_602
# %bb.520:                              # %thread-pre-split
                                        #   in Loop: Header=BB43_309 Depth=1
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a0, $a0, 0
	b	.LBB43_610
.LBB43_521:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_522:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1024
	ld.d	$a1, $sp, 1064
	ld.d	$s7, $sp, 1056
	st.d	$a0, $sp, 872
	addi.d	$a0, $sp, 848
	st.d	$a0, $sp, 832
	st.d	$a1, $sp, 1024
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_525
# %bb.523:                              # %.noexc.i888
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1680:
	addi.d	$a0, $sp, 832
	addi.d	$a1, $sp, 1024
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1681:
# %bb.524:                              # %.noexc889
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1024
	st.d	$a0, $sp, 832
	st.d	$a1, $sp, 848
.LBB43_525:                             # %._crit_edge.i.i887
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_529
# %bb.526:                              # %._crit_edge.i.i887
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_528
# %bb.527:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_529
.LBB43_528:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_529:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1024
	st.d	$a0, $sp, 840
.Ltmp1683:
	addi.d	$a1, $sp, 864
	addi.d	$a2, $sp, 832
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_)
	jirl	$ra, $ra, 0
.Ltmp1684:
# %bb.530:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 832
	addi.d	$a1, $sp, 848
	beq	$a0, $a1, .LBB43_532
# %bb.531:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i891
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 848
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_532:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit893
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 864
	addi.d	$a1, $sp, 880
	beq	$a0, $a1, .LBB43_534
# %bb.533:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i894
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 880
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_534:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit896
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_589
# %bb.535:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1686:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1687:
	b	.LBB43_589
.LBB43_536:                             #   in Loop: Header=BB43_309 Depth=1
	st.b	$zero, $sp, 263
.Ltmp1484:
	addi.d	$a0, $sp, 1088
	addi.d	$a1, $sp, 263
	addi.d	$a2, $sp, 1896
	addi.d	$a3, $sp, 1816
	ori	$a4, $zero, 2104
	add.d	$a4, $sp, $a4
	ori	$a5, $zero, 2496
	add.d	$a5, $sp, $a5
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1485:
# %bb.537:                              #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $sp, 263
	beqz	$a0, .LBB43_594
.LBB43_538:                             #   in Loop: Header=BB43_309 Depth=1
	move	$a3, $zero
	ori	$s0, $zero, 31
	b	.LBB43_621
.LBB43_539:                             #   in Loop: Header=BB43_309 Depth=1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_540:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i799
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1000
	ld.d	$a1, $sp, 1024
	st.d	$a0, $sp, 1032
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 992
.LBB43_541:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit802
                                        #   in Loop: Header=BB43_309 Depth=1
	st.d	$zero, $sp, 1000
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 992
	addi.d	$a1, $sp, 1008
	beq	$a0, $a1, .LBB43_543
# %bb.542:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i803
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1008
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_543:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_551
# %bb.544:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a0, $a0, $a1
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB43_810
# %bb.545:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1152
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB43_547
# %bb.546:                              #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB43_549
.LBB43_547:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1698:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1699:
# %bb.548:                              # %.noexc1157
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp1700:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp1701:
.LBB43_549:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1154
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1702:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1703:
# %bb.550:                              # %.noexc1159
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1704:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1705:
.LBB43_551:                             # %_ZNSolsEPFRSoS_E.exit810
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 272
	ld.d	$s7, $sp, 264
	addi.d	$a0, $sp, 976
	st.d	$a0, $sp, 960
	st.d	$a1, $sp, 992
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_554
# %bb.552:                              # %.noexc.i812
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1706:
	addi.d	$a0, $sp, 960
	addi.d	$a1, $sp, 992
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1707:
# %bb.553:                              # %.noexc813
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 992
	st.d	$a0, $sp, 960
	st.d	$a1, $sp, 976
.LBB43_554:                             # %._crit_edge.i.i811
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_558
# %bb.555:                              # %._crit_edge.i.i811
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_557
# %bb.556:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_558
.LBB43_557:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_558:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 992
	ld.d	$a1, $sp, 1064
	ld.d	$s7, $sp, 1056
	st.d	$a0, $sp, 968
	addi.d	$a0, $sp, 944
	st.d	$a0, $sp, 928
	st.d	$a1, $sp, 992
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_561
# %bb.559:                              # %.noexc.i816
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1708:
	addi.d	$a0, $sp, 928
	addi.d	$a1, $sp, 992
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1709:
# %bb.560:                              # %.noexc817
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 992
	st.d	$a0, $sp, 928
	st.d	$a1, $sp, 944
.LBB43_561:                             # %._crit_edge.i.i815
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_565
# %bb.562:                              # %._crit_edge.i.i815
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_564
# %bb.563:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_565
.LBB43_564:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_565:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 992
	ld.d	$a1, $sp, 1032
	ld.d	$s7, $sp, 1024
	st.d	$a0, $sp, 936
	addi.d	$a0, $sp, 912
	st.d	$a0, $sp, 896
	st.d	$a1, $sp, 992
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB43_568
# %bb.566:                              # %.noexc.i820
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1711:
	addi.d	$a0, $sp, 896
	addi.d	$a1, $sp, 992
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1712:
# %bb.567:                              # %.noexc821
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 992
	st.d	$a0, $sp, 896
	st.d	$a1, $sp, 912
.LBB43_568:                             # %._crit_edge.i.i819
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a2, $sp, 184                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB43_572
# %bb.569:                              # %._crit_edge.i.i819
                                        #   in Loop: Header=BB43_309 Depth=1
	bnez	$a1, .LBB43_571
# %bb.570:                              #   in Loop: Header=BB43_309 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB43_572
.LBB43_571:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB43_572:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 992
	st.d	$a0, $sp, 904
.Ltmp1714:
	addi.d	$a1, $sp, 960
	addi.d	$a2, $sp, 928
	addi.d	$a3, $sp, 896
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_)
	jirl	$ra, $ra, 0
.Ltmp1715:
# %bb.573:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 896
	addi.d	$a1, $sp, 912
	beq	$a0, $a1, .LBB43_575
# %bb.574:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i823
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 912
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_575:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit825
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 928
	addi.d	$a1, $sp, 944
	beq	$a0, $a1, .LBB43_577
# %bb.576:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i826
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 944
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_577:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit828
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 960
	addi.d	$a1, $sp, 976
	beq	$a0, $a1, .LBB43_579
# %bb.578:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i829
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 976
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_579:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit831
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_587
# %bb.580:                              #   in Loop: Header=BB43_309 Depth=1
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a0, $a0, $a1
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB43_810
# %bb.581:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1163
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB43_583
# %bb.582:                              #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB43_585
.LBB43_583:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1717:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1718:
# %bb.584:                              # %.noexc1168
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp1719:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp1720:
.LBB43_585:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1165
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1721:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1722:
# %bb.586:                              # %.noexc1170
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1723:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1724:
.LBB43_587:                             # %_ZNSolsEPFRSoS_E.exit833
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1024
	addi.d	$a1, $sp, 1040
	beq	$a0, $a1, .LBB43_589
# %bb.588:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i843
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1040
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_589:                             # %_ZNSolsEPFRSoS_E.exit898
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1056
	beq	$a0, $s2, .LBB43_591
# %bb.590:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i905
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1072
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_591:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit907
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_593
# %bb.592:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i908
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_593:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit910
                                        #   in Loop: Header=BB43_309 Depth=1
	st.d	$zero, $sp, 80                  # 8-byte Folded Spill
	b	.LBB43_447
.LBB43_594:                             #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a0, $sp, 1524
	st.w	$a0, $sp, 1024
	st.b	$zero, $sp, 262
	st.w	$zero, $sp, 992
.Ltmp1487:
	addi.d	$a0, $sp, 1088
	addi.d	$a1, $sp, 263
	addi.d	$a2, $sp, 1736
	addi.d	$a3, $sp, 1024
	addi.d	$a4, $sp, 262
	ori	$a5, $zero, 2104
	add.d	$a5, $sp, $a5
	addi.d	$a6, $sp, 992
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_)
	jirl	$ra, $ra, 0
.Ltmp1488:
# %bb.595:                              #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a0, $sp, 992
	bne	$a0, $s3, .LBB43_618
# %bb.596:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	ld.w	$a0, $a0, 0
	ori	$a1, $zero, 2496
	add.d	$a1, $sp, $a1
	st.w	$s3, $a1, 0
	ori	$a1, $zero, 1
	blt	$a1, $a0, .LBB43_598
# %bb.597:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	st.w	$s3, $a0, 0
.LBB43_598:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1549:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.49)
	addi.d	$a1, $a1, %pc_lo12(.L.str.49)
	ori	$a2, $zero, 15
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1550:
# %bb.599:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit952
                                        #   in Loop: Header=BB43_309 Depth=1
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a1, $a0, 0
.Ltmp1551:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1552:
# %bb.600:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1553:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1554:
# %bb.601:                              #   in Loop: Header=BB43_309 Depth=1
	move	$a3, $zero
	ori	$s0, $zero, 29
	b	.LBB43_621
.LBB43_602:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1556:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a2, $sp, $a1
	ori	$a1, $zero, 2496
	add.d	$a3, $sp, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1557:
# %bb.603:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1558:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 64
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1559:
# %bb.604:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit933
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1560:
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1561:
# %bb.605:                              # %_ZNSolsEPFRSoS_E.exit935
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1562:
	pcalau12i	$a0, %pc_hi20(.L.str.47)
	addi.d	$a1, $a0, %pc_lo12(.L.str.47)
	ori	$a2, $zero, 49
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1563:
# %bb.606:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit937
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1564:
	ori	$a0, $zero, 2120
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1565:
# %bb.607:                              # %_ZNSolsEPFRSoS_E.exit939
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1566:
	move	$s6, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.48)
	addi.d	$a1, $a0, %pc_lo12(.L.str.48)
	ori	$a2, $zero, 25
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1567:
# %bb.608:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit941
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1568:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1569:
# %bb.609:                              # %_ZNSolsEPFRSoS_E.exit943
                                        #   in Loop: Header=BB43_309 Depth=1
	ori	$a0, $zero, 2
	ori	$a1, $zero, 2496
	add.d	$a1, $sp, $a1
	st.w	$a0, $a1, 0
.LBB43_610:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 120                   # 8-byte Folded Reload
	ld.w	$a1, $a1, 0
	bge	$a1, $a0, .LBB43_612
# %bb.611:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 120                   # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB43_612:                             #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	addi.w	$a1, $a1, -1
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	blez	$a0, .LBB43_617
# %bb.613:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1570:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.49)
	addi.d	$a1, $a1, %pc_lo12(.L.str.49)
	ori	$a2, $zero, 15
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1571:
# %bb.614:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit948
                                        #   in Loop: Header=BB43_309 Depth=1
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a1, $a0, 0
.Ltmp1572:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1573:
# %bb.615:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1574:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1575:
# %bb.616:                              #   in Loop: Header=BB43_309 Depth=1
	st.d	$zero, $sp, 80                  # 8-byte Folded Spill
	ori	$s0, $zero, 1
	b	.LBB43_622
.LBB43_617:                             #   in Loop: Header=BB43_309 Depth=1
	st.d	$zero, $sp, 80                  # 8-byte Folded Spill
	ori	$s0, $zero, 31
	b	.LBB43_622
.LBB43_618:                             #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $sp, 262
	beqz	$a0, .LBB43_626
# %bb.619:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1547:
	addi.d	$a1, $sp, 1524
	addi.d	$a2, $sp, 1736
	ori	$a0, $zero, 2104
	add.d	$a3, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a4, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
.Ltmp1548:
# %bb.620:                              #   in Loop: Header=BB43_309 Depth=1
	move	$a3, $zero
	ori	$a1, $zero, 29
	masknez	$a1, $a1, $a0
	ori	$a2, $zero, 31
	maskeqz	$a0, $a2, $a0
	or	$s0, $a0, $a1
.LBB43_621:                             #   in Loop: Header=BB43_309 Depth=1
	st.d	$a3, $sp, 80                    # 8-byte Folded Spill
.LBB43_622:                             # %_ZNSolsEPFRSoS_E.exit950
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 1056
	beq	$a0, $s2, .LBB43_624
# %bb.623:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i981
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1072
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_624:                             #   in Loop: Header=BB43_309 Depth=1
	addi.d	$a0, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 31
	beq	$s0, $a0, .LBB43_448
# %bb.625:                              #   in Loop: Header=BB43_309 Depth=1
	beqz	$s0, .LBB43_448
	b	.LBB43_690
.LBB43_626:                             #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a0, $sp, 1024
	ld.bu	$a1, $sp, 263
	st.w	$a0, $sp, 1524
	bnez	$a1, .LBB43_538
# %bb.627:                              #   in Loop: Header=BB43_309 Depth=1
	st.b	$zero, $sp, 261
	st.b	$zero, $sp, 260
.Ltmp1489:
	addi.d	$a0, $sp, 1088
	addi.d	$a1, $sp, 263
	addi.d	$a2, $sp, 261
	addi.d	$a3, $sp, 1704
	addi.d	$a4, $sp, 260
	ori	$a5, $zero, 2104
	add.d	$a5, $sp, $a5
	ori	$a6, $zero, 2496
	add.d	$a6, $sp, $a6
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi)
	jirl	$ra, $ra, 0
.Ltmp1490:
# %bb.628:                              #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $sp, 260
	beqz	$a0, .LBB43_635
# %bb.629:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1536:
	addi.d	$a1, $sp, 1524
	addi.d	$a2, $sp, 1736
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
.Ltmp1537:
# %bb.630:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1538:
	addi.d	$a1, $sp, 1524
	addi.d	$a2, $sp, 1624
	addi.d	$a3, $sp, 1544
	ori	$a0, $zero, 2104
	add.d	$a4, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a5, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
.Ltmp1539:
# %bb.631:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 120                   # 8-byte Folded Reload
	ld.w	$a1, $a1, 0
	bge	$a1, $a0, .LBB43_633
# %bb.632:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 120                   # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB43_633:                             #   in Loop: Header=BB43_309 Depth=1
	beqz	$a0, .LBB43_538
# %bb.634:                              #   in Loop: Header=BB43_309 Depth=1
	ori	$a2, $zero, 19
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a1, $a0, %pc_lo12(.L.str.50)
	b	.LBB43_655
.LBB43_635:                             #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $sp, 261
	beqz	$a0, .LBB43_638
# %bb.636:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 1688
	ld.d	$a0, $sp, 1672
	addi.d	$a1, $a1, -4
	beq	$a0, $a1, .LBB43_646
# %bb.637:                              #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a1, $sp, 1524
	st.w	$a1, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $sp, 1672
	b	.LBB43_647
.LBB43_638:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1491:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp1492:
# %bb.639:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1494:
	pcalau12i	$a0, %pc_hi20(.L.str.52)
	addi.d	$a1, $a0, %pc_lo12(.L.str.52)
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1495:
# %bb.640:                              #   in Loop: Header=BB43_309 Depth=1
	move	$s6, $a0
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_642
# %bb.641:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i968
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_642:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit970
                                        #   in Loop: Header=BB43_309 Depth=1
	ori	$a3, $zero, 1
	ori	$s0, $zero, 31
	bnez	$s6, .LBB43_621
# %bb.643:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1497:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1498:
# %bb.644:                              #   in Loop: Header=BB43_309 Depth=1
	beqz	$a0, .LBB43_658
# %bb.645:                              #   in Loop: Header=BB43_309 Depth=1
	move	$a3, $zero
	b	.LBB43_621
.LBB43_646:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1530:
	addi.d	$a0, $sp, 1624
	addi.d	$a1, $sp, 1524
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1531:
.LBB43_647:                             # %_ZNSt5dequeIiSaIiEE9push_backERKi.exit
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1532:
	addi.d	$a1, $sp, 1524
	addi.d	$a2, $sp, 1704
	ori	$a0, $zero, 2104
	add.d	$a3, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a4, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_)
	jirl	$ra, $ra, 0
.Ltmp1533:
# %bb.648:                              #   in Loop: Header=BB43_309 Depth=1
	move	$s7, $a0
	ld.d	$a1, $sp, 1608
	ld.d	$a0, $sp, 1592
	addi.d	$a1, $a1, -4
	beq	$a0, $a1, .LBB43_650
# %bb.649:                              #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a1, $sp, 1524
	st.w	$a1, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $sp, 1592
	b	.LBB43_651
.LBB43_650:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1534:
	addi.d	$a0, $sp, 1544
	addi.d	$a1, $sp, 1524
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1535:
.LBB43_651:                             # %_ZNSt5dequeIiSaIiEE9push_backERKi.exit963
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	ld.w	$a0, $a0, 0
	bge	$a0, $s7, .LBB43_653
# %bb.652:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	st.w	$s7, $a0, 0
.LBB43_653:                             #   in Loop: Header=BB43_309 Depth=1
	blez	$s7, .LBB43_538
# %bb.654:                              #   in Loop: Header=BB43_309 Depth=1
	ori	$a2, $zero, 18
	pcalau12i	$a0, %pc_hi20(.L.str.51)
	addi.d	$a1, $a0, %pc_lo12(.L.str.51)
.LBB43_655:                             # %.invoke1641
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1540:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1541:
# %bb.656:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit965.invoke
                                        #   in Loop: Header=BB43_309 Depth=1
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a1, $a0, 0
.Ltmp1542:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1543:
# %bb.657:                              # %.invoke1638
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1544:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1545:
	b	.LBB43_538
.LBB43_658:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1499:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a2, $sp, $a1
	ori	$a1, $zero, 2496
	add.d	$a3, $sp, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1500:
# %bb.659:                              #   in Loop: Header=BB43_309 Depth=1
	beqz	$a0, .LBB43_663
# %bb.660:                              #   in Loop: Header=BB43_309 Depth=1
	vld	$vr0, $sp, 1752
	vst	$vr0, $sp, 160                  # 16-byte Folded Spill
	ld.d	$a1, $sp, 1776
	ld.d	$s0, $sp, 1808
	vld	$vr0, $sp, 1768
	vst	$vr0, $sp, 144                  # 16-byte Folded Spill
	bgeu	$a1, $s0, .LBB43_662
.LBB43_661:                             # %.lr.ph.i.i.i
                                        #   Parent Loop BB43_309 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s2, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s2
	bltu	$s2, $s0, .LBB43_661
.LBB43_662:                             # %_ZNSt5dequeIiSaIiEE5clearEv.exit
                                        #   in Loop: Header=BB43_309 Depth=1
	move	$a3, $zero
	vld	$vr0, $sp, 160                  # 16-byte Folded Reload
	vst	$vr0, $sp, 1784
	vld	$vr0, $sp, 144                  # 16-byte Folded Reload
	vst	$vr0, $sp, 1800
	ori	$s0, $zero, 29
	b	.LBB43_686
.LBB43_663:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1501:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1502:
# %bb.664:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1503:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1504:
# %bb.665:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1505:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1506:
# %bb.666:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1507:
	addi.d	$a0, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13remove_commasEv)
	jirl	$ra, $ra, 0
.Ltmp1508:
# %bb.667:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1509:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1510:
# %bb.668:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1511:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1512:
# %bb.669:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1513:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1514:
# %bb.670:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1515:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1516:
# %bb.671:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1517:
	addi.d	$a0, $sp, 1088
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 2496
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1518:
# %bb.672:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1519:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1520:
# %bb.673:                              #   in Loop: Header=BB43_309 Depth=1
.Ltmp1522:
	pcalau12i	$a0, %pc_hi20(.L.str.53)
	addi.d	$a1, $a0, %pc_lo12(.L.str.53)
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1523:
# %bb.674:                              #   in Loop: Header=BB43_309 Depth=1
	move	$s6, $a0
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_676
# %bb.675:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i974
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_676:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit976
                                        #   in Loop: Header=BB43_309 Depth=1
	beqz	$s6, .LBB43_685
# %bb.677:                              #   in Loop: Header=BB43_309 Depth=1
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	blez	$a0, .LBB43_680
# %bb.678:                              #   in Loop: Header=BB43_309 Depth=1
	ld.w	$a1, $sp, 1540
	ldptr.d	$a0, $fp, 2312
	ldptr.d	$a2, $fp, 2320
	addi.w	$a1, $a1, -1
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 3
	ld.d	$a3, $sp, 40                    # 8-byte Folded Reload
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB43_681
# %bb.679:                              #   in Loop: Header=BB43_309 Depth=1
	ldptr.d	$a0, $fp, 2336
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_682
.LBB43_680:                             #   in Loop: Header=BB43_309 Depth=1
.Ltmp1525:
	addi.d	$a1, $sp, 1088
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE9push_backERKS1_)
	jirl	$ra, $ra, 0
.Ltmp1526:
	b	.LBB43_685
.LBB43_681:                             #   in Loop: Header=BB43_309 Depth=1
	ori	$a2, $zero, 568
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB43_682:                             # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB43_309 Depth=1
.Ltmp1527:
	addi.d	$a1, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP8Whenthen8add_cmdfERNS_3CmdE)
	jirl	$ra, $ra, 0
.Ltmp1528:
# %bb.683:                              #   in Loop: Header=BB43_309 Depth=1
	ld.bu	$a0, $sp, 1539
	beqz	$a0, .LBB43_685
# %bb.684:                              #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
	move	$a3, $zero
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	addi.w	$a0, $a0, -1
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	st.b	$zero, $sp, 1539
	b	.LBB43_686
.LBB43_685:                             #   in Loop: Header=BB43_309 Depth=1
	move	$s0, $zero
	move	$a3, $zero
.LBB43_686:                             # %_ZNSolsEPFRSoS_E.exit958
                                        #   in Loop: Header=BB43_309 Depth=1
	ld.d	$s8, $sp, 176                   # 8-byte Folded Reload
	addi.d	$s2, $sp, 1072
	ori	$s3, $zero, 2
	b	.LBB43_621
.LBB43_687:                             # %.thread1272
	addi.d	$a0, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB43_765
.LBB43_688:                             # %.invoke1634
.Ltmp1763:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1764:
# %bb.689:                              # %.cont1635
.LBB43_690:
	ori	$a0, $zero, 29
	bne	$s0, $a0, .LBB43_765
.LBB43_691:
.Ltmp1577:
	ori	$a0, $zero, 2104
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a2, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1578:
# %bb.692:
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	ld.w	$a1, $a2, 0
	bge	$a1, $a0, .LBB43_694
# %bb.693:
	st.w	$a0, $a2, 0
.LBB43_694:
	blez	$a0, .LBB43_696
# %bb.695:
	ori	$a1, $zero, 1
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	st.w	$a0, $a2, 0
	bne	$a0, $a1, .LBB43_765
.LBB43_696:
.Ltmp1579:
	addi.d	$a1, $sp, 1736
	ori	$a0, $zero, 2104
	add.d	$a2, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a3, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1580:
# %bb.697:
.Ltmp1581:
	ori	$a0, $zero, 2104
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2496
	add.d	$a2, $sp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1582:
# %bb.698:
	move	$s1, $a0
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	ld.w	$a0, $a0, 0
	bge	$a0, $s1, .LBB43_700
# %bb.699:
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	st.w	$s1, $a0, 0
.LBB43_700:
	blez	$s1, .LBB43_712
# %bb.701:
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	st.w	$s1, $a0, 0
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_711
# %bb.702:
.Ltmp1583:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.54)
	addi.d	$a1, $a1, %pc_lo12(.L.str.54)
	ori	$a2, $zero, 31
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1584:
# %bb.703:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit988
	ori	$a0, $zero, 2496
	add.d	$a0, $sp, $a0
	ld.w	$a1, $a0, 0
.Ltmp1585:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1586:
# %bb.704:
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB43_812
# %bb.705:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1174
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB43_707
# %bb.706:
	ld.bu	$a0, $s3, 67
	b	.LBB43_709
.LBB43_707:
.Ltmp1587:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1588:
# %bb.708:                              # %.noexc1179
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1589:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1590:
.LBB43_709:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1176
.Ltmp1591:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1592:
# %bb.710:                              # %.noexc1181
.Ltmp1593:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1594:
.LBB43_711:                             # %_ZNSolsEPFRSoS_E.exit990
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB43_765
.LBB43_712:
	move	$s0, $zero
	move	$s1, $zero
	.p2align	4, , 16
.LBB43_713:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 976
	ld.d	$a0, $fp, 944
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 952
	ld.d	$a4, $fp, 960
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 936
	ld.d	$a1, $fp, 920
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s8
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB43_719
# %bb.714:                              #   in Loop: Header=BB43_713 Depth=1
	ld.d	$a2, $fp, 928
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB43_716
# %bb.715:                              #   in Loop: Header=BB43_713 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB43_717
	.p2align	4, , 16
.LBB43_716:                             #   in Loop: Header=BB43_713 Depth=1
	add.d	$a0, $a1, $s0
.LBB43_717:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit993
                                        #   in Loop: Header=BB43_713 Depth=1
.Ltmp1664:
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15clear_processedEv)
	jirl	$ra, $ra, 0
.Ltmp1665:
# %bb.718:                              #   in Loop: Header=BB43_713 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s0, $s0, 432
	b	.LBB43_713
.LBB43_719:
.Ltmp1595:
	ori	$a1, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser19cmd_set_reprocessedEb)
	jirl	$ra, $ra, 0
.Ltmp1596:
# %bb.720:
.Ltmp1597:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser15process_dav_cmdEv)
	jirl	$ra, $ra, 0
.Ltmp1598:
# %bb.721:
	move	$s1, $a0
	ld.d	$a1, $sp, 120                   # 8-byte Folded Reload
	ld.w	$a0, $a1, 0
	bge	$a0, $s1, .LBB43_723
# %bb.722:
	st.w	$s1, $a1, 0
.LBB43_723:
	blez	$s1, .LBB43_734
# %bb.724:
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_734
# %bb.725:
.Ltmp1599:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.55)
	addi.d	$a1, $a1, %pc_lo12(.L.str.55)
	ori	$a2, $zero, 43
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1600:
# %bb.726:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit995
.Ltmp1601:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1602:
# %bb.727:
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB43_812
# %bb.728:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1185
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB43_730
# %bb.729:
	ld.bu	$a0, $s1, 67
	b	.LBB43_732
.LBB43_730:
.Ltmp1603:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1604:
# %bb.731:                              # %.noexc1190
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp1605:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp1606:
.LBB43_732:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1187
.Ltmp1607:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1608:
# %bb.733:                              # %.noexc1192
.Ltmp1609:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1610:
.LBB43_734:                             # %_ZNSolsEPFRSoS_E.exit997
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	andi	$a0, $a0, 1
	beqz	$a0, .LBB43_765
# %bb.735:
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB43_765
# %bb.736:
.Ltmp1611:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.56)
	addi.d	$a1, $a1, %pc_lo12(.L.str.56)
	ori	$a2, $zero, 81
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1612:
# %bb.737:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit999
.Ltmp1613:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.57)
	addi.d	$a1, $a1, %pc_lo12(.L.str.57)
	ori	$a2, $zero, 81
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1614:
# %bb.738:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1001
.Ltmp1615:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.58)
	addi.d	$a1, $a1, %pc_lo12(.L.str.58)
	ori	$a2, $zero, 26
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1616:
# %bb.739:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1003
.Ltmp1617:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1618:
# %bb.740:                              # %_ZNSolsEPFRSoS_E.exit1005
.Ltmp1619:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a1, $a0, %pc_lo12(.L.str)
	addi.d	$a0, $sp, 224
	addi.d	$a2, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_)
	jirl	$ra, $ra, 0
.Ltmp1620:
# %bb.741:
.Ltmp1622:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a1, $a0, %pc_lo12(.L.str)
	addi.d	$a0, $sp, 192
	addi.d	$a2, $sp, 1088
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_)
	jirl	$ra, $ra, 0
.Ltmp1623:
# %bb.742:
.Ltmp1625:
	addi.d	$a1, $sp, 224
	addi.d	$a2, $sp, 192
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_)
	jirl	$ra, $ra, 0
.Ltmp1626:
# %bb.743:
	ld.d	$a0, $sp, 192
	addi.d	$a1, $sp, 208
	beq	$a0, $a1, .LBB43_745
# %bb.744:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1006
	ld.d	$a1, $sp, 208
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_745:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1008
	ld.d	$a0, $sp, 224
	addi.d	$a1, $sp, 240
	beq	$a0, $a1, .LBB43_747
# %bb.746:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1009
	ld.d	$a1, $sp, 240
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_747:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1011
.Ltmp1628:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.59)
	addi.d	$a1, $a1, %pc_lo12(.L.str.59)
	ori	$a2, $zero, 44
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1629:
# %bb.748:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1013
.Ltmp1630:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.60)
	addi.d	$a1, $a1, %pc_lo12(.L.str.60)
	ori	$a2, $zero, 82
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1631:
# %bb.749:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1015
.Ltmp1632:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1633:
# %bb.750:                              # %_ZNSolsEPFRSoS_E.exit1017
.Ltmp1634:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.56)
	addi.d	$a1, $a1, %pc_lo12(.L.str.56)
	ori	$a2, $zero, 81
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1635:
# %bb.751:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1019
.Ltmp1636:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.61)
	addi.d	$a1, $a1, %pc_lo12(.L.str.61)
	ori	$a2, $zero, 81
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1637:
# %bb.752:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1021
.Ltmp1638:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.62)
	addi.d	$a1, $a1, %pc_lo12(.L.str.62)
	ori	$a2, $zero, 76
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1639:
# %bb.753:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1023
.Ltmp1640:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1641:
# %bb.754:                              # %_ZNSolsEPFRSoS_E.exit1025
.Ltmp1642:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13list_wt_cmdsfEv)
	jirl	$ra, $ra, 0
.Ltmp1643:
# %bb.755:
.Ltmp1644:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.63)
	addi.d	$a1, $a1, %pc_lo12(.L.str.63)
	ori	$a2, $zero, 57
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1645:
# %bb.756:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1027
.Ltmp1646:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.60)
	addi.d	$a1, $a1, %pc_lo12(.L.str.60)
	ori	$a2, $zero, 82
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1647:
# %bb.757:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1029
.Ltmp1648:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1649:
# %bb.758:                              # %_ZNSolsEPFRSoS_E.exit1031
.Ltmp1650:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.56)
	addi.d	$a1, $a1, %pc_lo12(.L.str.56)
	ori	$a2, $zero, 81
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1651:
# %bb.759:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1033
.Ltmp1652:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.64)
	addi.d	$a1, $a1, %pc_lo12(.L.str.64)
	ori	$a2, $zero, 42
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1653:
# %bb.760:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1035
.Ltmp1654:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1655:
# %bb.761:                              # %_ZNSolsEPFRSoS_E.exit1037
.Ltmp1656:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser7list_rbEv)
	jirl	$ra, $ra, 0
.Ltmp1657:
# %bb.762:
.Ltmp1658:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.65)
	addi.d	$a1, $a1, %pc_lo12(.L.str.65)
	ori	$a2, $zero, 50
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1659:
# %bb.763:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1039
.Ltmp1660:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.60)
	addi.d	$a1, $a1, %pc_lo12(.L.str.60)
	ori	$a2, $zero, 82
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1661:
# %bb.764:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit1041
.Ltmp1662:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1663:
.LBB43_765:                             # %_ZNSolsEPFRSoS_E.exit1043
	ld.d	$a0, $sp, 1544
	beqz	$a0, .LBB43_771
# %bb.766:
	ld.d	$fp, $sp, 1616
	ld.d	$a1, $sp, 1584
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB43_770
# %bb.767:                              # %.lr.ph.i.i.i1050.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB43_768:                             # %.lr.ph.i.i.i1050
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB43_768
# %bb.769:                              # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.loopexit.i.i
	ld.d	$a0, $sp, 1544
.LBB43_770:                             # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i.i
	ld.d	$a1, $sp, 1552
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_771:                             # %_ZNSt5dequeIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 1624
	beqz	$a0, .LBB43_777
# %bb.772:
	ld.d	$fp, $sp, 1696
	ld.d	$a1, $sp, 1664
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB43_776
# %bb.773:                              # %.lr.ph.i.i.i1054.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB43_774:                             # %.lr.ph.i.i.i1054
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB43_774
# %bb.775:                              # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.loopexit.i.i1056
	ld.d	$a0, $sp, 1624
.LBB43_776:                             # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i.i1053
	ld.d	$a1, $sp, 1632
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_777:                             # %_ZNSt5dequeIiSaIiEED2Ev.exit1058
	ld.d	$a0, $sp, 1704
	addi.d	$a1, $sp, 1720
	beq	$a0, $a1, .LBB43_779
# %bb.778:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1059
	ld.d	$a1, $sp, 1720
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_779:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1061
	ld.d	$a0, $sp, 1736
	beqz	$a0, .LBB43_785
# %bb.780:
	ld.d	$fp, $sp, 1808
	ld.d	$a1, $sp, 1776
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB43_784
# %bb.781:                              # %.lr.ph.i.i.i1064.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB43_782:                             # %.lr.ph.i.i.i1064
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB43_782
# %bb.783:                              # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.loopexit.i.i1066
	ld.d	$a0, $sp, 1736
.LBB43_784:                             # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i.i1063
	ld.d	$a1, $sp, 1744
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_785:                             # %_ZNSt5dequeIiSaIiEED2Ev.exit1068
	ld.d	$a0, $sp, 1816
	beqz	$a0, .LBB43_791
# %bb.786:
	ld.d	$fp, $sp, 1888
	ld.d	$a1, $sp, 1856
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB43_790
# %bb.787:                              # %.lr.ph.i.i.i1070.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB43_788:                             # %.lr.ph.i.i.i1070
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB43_788
# %bb.789:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i
	ld.d	$a0, $sp, 1816
.LBB43_790:                             # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i
	ld.d	$a1, $sp, 1824
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_791:                             # %_ZNSt5dequeIbSaIbEED2Ev.exit
	ld.d	$a0, $sp, 1896
	beqz	$a0, .LBB43_797
# %bb.792:
	ld.d	$fp, $sp, 1968
	ld.d	$a1, $sp, 1936
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB43_796
# %bb.793:                              # %.lr.ph.i.i.i1075.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB43_794:                             # %.lr.ph.i.i.i1075
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB43_794
# %bb.795:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i1077
	ld.d	$a0, $sp, 1896
.LBB43_796:                             # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i1074
	ld.d	$a1, $sp, 1904
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_797:
	ld.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 2024
	beq	$a0, $a1, .LBB43_799
# %bb.798:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1083
	ld.d	$a1, $sp, 2024
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_799:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ori	$a2, $zero, 2104
	add.d	$s0, $sp, $a2
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ori	$a0, $zero, 2200
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2120
	add.d	$a1, $sp, $a1
	st.d	$a2, $a1, 0
	addi.d	$a1, $a3, 16
	ori	$a2, $zero, 2216
	add.d	$a2, $sp, $a2
	ori	$a3, $zero, 2128
	add.d	$a3, $sp, $a3
	st.d	$a1, $a3, 0
	beq	$a0, $a2, .LBB43_801
# %bb.800:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ori	$a1, $zero, 2216
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_801:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	ori	$a1, $zero, 2128
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2184
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	ori	$a0, $zero, 2112
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2232
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2600
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2616
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB43_803
# %bb.802:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1089
	ori	$a1, $zero, 2616
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_803:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1091
	ori	$a0, $zero, 2632
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2648
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB43_805
# %bb.804:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1092
	ori	$a1, $zero, 2648
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_805:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1094
	addi.d	$sp, $sp, 720
	ld.d	$s8, $sp, 1944                  # 8-byte Folded Reload
	ld.d	$s7, $sp, 1952                  # 8-byte Folded Reload
	ld.d	$s6, $sp, 1960                  # 8-byte Folded Reload
	ld.d	$s5, $sp, 1968                  # 8-byte Folded Reload
	ld.d	$s4, $sp, 1976                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1984                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1992                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 2000                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 2008                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 2016                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 2024                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 2032
	ret
.LBB43_806:                             # %.invoke
.Ltmp1818:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1819:
# %bb.807:                              # %.cont
.LBB43_808:
.Ltmp1780:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1781:
# %bb.809:                              # %.noexc1123
.LBB43_810:                             # %.invoke1636
.Ltmp1726:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1727:
# %bb.811:                              # %.cont1637
.LBB43_812:                             # %.invoke1639
.Ltmp1667:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1668:
# %bb.813:                              # %.cont1640
.LBB43_814:
.Ltmp1529:
	b	.LBB43_851
.LBB43_815:
.Ltmp1524:
	b	.LBB43_823
.LBB43_816:
.Ltmp1521:
	b	.LBB43_851
.LBB43_817:
.Ltmp1496:
	b	.LBB43_823
.LBB43_818:
.Ltmp1493:
	b	.LBB43_851
.LBB43_819:
.Ltmp1546:
	b	.LBB43_851
.LBB43_820:
.Ltmp1486:
	b	.LBB43_851
.LBB43_821:
.Ltmp1555:
	b	.LBB43_851
.LBB43_822:
.Ltmp1483:
.LBB43_823:
	ld.d	$a2, $sp, 264
	move	$fp, $a0
	addi.d	$a0, $sp, 280
	beq	$a2, $a0, .LBB43_852
# %bb.824:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i944
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_852
.LBB43_825:
.Ltmp1480:
	b	.LBB43_851
.LBB43_826:
.Ltmp1477:
	move	$fp, $a0
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZN2PP8WhenthenD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB43_852
.LBB43_827:
.Ltmp1474:
	b	.LBB43_851
.LBB43_828:
.Ltmp1471:
	b	.LBB43_851
.LBB43_829:
.Ltmp1627:
	ld.d	$a2, $sp, 192
	addi.d	$a1, $sp, 208
	move	$fp, $a0
	beq	$a2, $a1, .LBB43_832
# %bb.830:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1044
	ld.d	$a0, $sp, 208
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_832
.LBB43_831:
.Ltmp1624:
	move	$fp, $a0
.LBB43_832:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1046
	ld.d	$a0, $sp, 224
	addi.d	$a1, $sp, 240
	beq	$a0, $a1, .LBB43_943
# %bb.833:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1047
	ld.d	$a1, $sp, 240
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_943
.LBB43_834:
.Ltmp1621:
	b	.LBB43_908
.LBB43_835:
.Ltmp1682:
	move	$fp, $a0
	b	.LBB43_846
.LBB43_836:
.Ltmp1464:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_837:
.Ltmp1461:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_838:
.Ltmp1458:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_839:
.Ltmp1713:
	move	$fp, $a0
	ld.d	$a0, $sp, 928
	addi.d	$a1, $sp, 944
	beq	$a0, $a1, .LBB43_858
.LBB43_840:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i837
	ld.d	$a1, $sp, 944
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 960
	addi.d	$a1, $sp, 976
	beq	$a0, $a1, .LBB43_859
.LBB43_841:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i840
	ld.d	$a1, $sp, 976
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1024
	addi.d	$a1, $sp, 1040
	bne	$a0, $a1, .LBB43_876
	b	.LBB43_878
.LBB43_842:
.Ltmp1710:
	move	$fp, $a0
	ld.d	$a0, $sp, 960
	addi.d	$a1, $sp, 976
	beq	$a0, $a1, .LBB43_859
	b	.LBB43_841
.LBB43_843:
.Ltmp1697:
	b	.LBB43_875
.LBB43_844:
.Ltmp1685:
	ld.d	$a2, $sp, 832
	move	$fp, $a0
	addi.d	$a0, $sp, 848
	beq	$a2, $a0, .LBB43_846
# %bb.845:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i899
	ld.d	$a0, $sp, 848
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_846:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit901
	ld.d	$a0, $sp, 864
	addi.d	$a1, $sp, 880
	beq	$a0, $a1, .LBB43_878
# %bb.847:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i902
	ld.d	$a1, $sp, 880
	b	.LBB43_877
.LBB43_848:
.Ltmp1675:
	b	.LBB43_913
.LBB43_849:
.Ltmp1672:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_850:
.Ltmp1576:
.LBB43_851:
	move	$fp, $a0
.LBB43_852:
	ld.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1072
	beq	$a0, $a1, .LBB43_942
# %bb.853:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i984
	ld.d	$a1, $sp, 1072
	b	.LBB43_916
.LBB43_854:
.Ltmp1688:
	move	$fp, $a0
	b	.LBB43_878
.LBB43_855:                             # %.loopexit.split-lp1277
.Ltmp1728:
	b	.LBB43_875
.LBB43_856:
.Ltmp1716:
	ld.d	$a2, $sp, 896
	move	$fp, $a0
	addi.d	$a0, $sp, 912
	bne	$a2, $a0, .LBB43_860
# %bb.857:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit836
	ld.d	$a0, $sp, 928
	addi.d	$a1, $sp, 944
	bne	$a0, $a1, .LBB43_840
.LBB43_858:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit839
	ld.d	$a0, $sp, 960
	addi.d	$a1, $sp, 976
	bne	$a0, $a1, .LBB43_841
.LBB43_859:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit842
	ld.d	$a0, $sp, 1024
	addi.d	$a1, $sp, 1040
	bne	$a0, $a1, .LBB43_876
	b	.LBB43_878
.LBB43_860:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i834
	ld.d	$a0, $sp, 912
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 928
	addi.d	$a1, $sp, 944
	beq	$a0, $a1, .LBB43_858
	b	.LBB43_840
.LBB43_861:
.Ltmp1694:
	b	.LBB43_913
.LBB43_862:
.Ltmp1691:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_863:
.Ltmp1455:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_864:
.Ltmp1432:
	move	$fp, $a0
	b	.LBB43_944
.LBB43_865:
.Ltmp1429:
	move	$fp, $a0
	b	.LBB43_945
.LBB43_866:
.Ltmp1426:
	move	$fp, $a0
	b	.LBB43_948
.LBB43_867:
.Ltmp1423:
	move	$fp, $a0
	b	.LBB43_949
.LBB43_868:
.Ltmp1420:
	b	.LBB43_921
.LBB43_869:
.Ltmp1731:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_870:
.Ltmp1802:
	b	.LBB43_921
.LBB43_871:
.Ltmp1799:
	b	.LBB43_921
.LBB43_872:
.Ltmp1335:
	move	$fp, $a0
	ori	$a0, $zero, 2568
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s0, .LBB43_887
	b	.LBB43_955
.LBB43_873:
.Ltmp1332:
	move	$fp, $a0
	b	.LBB43_955
.LBB43_874:                             # %.loopexit1276
.Ltmp1725:
.LBB43_875:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit842
	move	$fp, $a0
	ld.d	$a0, $sp, 1024
	addi.d	$a1, $sp, 1040
	beq	$a0, $a1, .LBB43_878
.LBB43_876:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i852
	ld.d	$a1, $sp, 1040
.LBB43_877:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit854
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_878:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit854
	ld.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1072
	beq	$a0, $a1, .LBB43_914
# %bb.879:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i855
	ld.d	$a1, $sp, 1072
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_914
.LBB43_880:
.Ltmp1403:
	b	.LBB43_890
.LBB43_881:
.Ltmp1341:
	move	$fp, $a0
	b	.LBB43_955
.LBB43_882:
.Ltmp1338:
	ori	$a1, $zero, 2504
	add.d	$a1, $sp, $a1
	ld.d	$a2, $a1, 0
	move	$fp, $a0
	bne	$a2, $s1, .LBB43_885
# %bb.883:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit465
	ori	$a0, $zero, 2536
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s2, .LBB43_886
.LBB43_884:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit468
	ori	$a0, $zero, 2568
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	bne	$a0, $s0, .LBB43_887
	b	.LBB43_955
.LBB43_885:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i463
	ori	$a0, $zero, 2520
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2536
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s2, .LBB43_884
.LBB43_886:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i466
	ori	$a1, $zero, 2552
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2568
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s0, .LBB43_955
.LBB43_887:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i469
	ori	$a1, $zero, 2584
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_955
.LBB43_888:
.Ltmp1329:
	move	$fp, $a0
	b	.LBB43_957
.LBB43_889:
.Ltmp1384:
.LBB43_890:
	ld.d	$a2, $sp, 264
	move	$fp, $a0
	addi.d	$a0, $sp, 280
	bne	$a2, $a0, .LBB43_910
	b	.LBB43_954
.LBB43_891:
.Ltmp1782:
	b	.LBB43_921
.LBB43_892:
.Ltmp1449:
	b	.LBB43_929
.LBB43_893:
.Ltmp1444:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_894:
.Ltmp1770:
	b	.LBB43_913
.LBB43_895:
.Ltmp1669:
	b	.LBB43_908
.LBB43_896:
.Ltmp1452:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_897:
.Ltmp1367:
	b	.LBB43_927
.LBB43_898:
.Ltmp1666:
	b	.LBB43_908
.LBB43_899:
.Ltmp1438:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_900:
.Ltmp1441:
	move	$fp, $a0
	b	.LBB43_942
.LBB43_901:
.Ltmp1379:
	b	.LBB43_927
.LBB43_902:
.Ltmp1364:
	b	.LBB43_927
.LBB43_903:
.Ltmp1788:
	b	.LBB43_921
.LBB43_904:
.Ltmp1785:
	b	.LBB43_921
.LBB43_905:
.Ltmp1820:
	b	.LBB43_927
.LBB43_906:
.Ltmp1817:
	b	.LBB43_927
.LBB43_907:
.Ltmp1435:
.LBB43_908:
	move	$fp, $a0
	b	.LBB43_943
.LBB43_909:
.Ltmp1361:
	ld.d	$a2, $sp, 264
	move	$fp, $a0
	beq	$a2, $s3, .LBB43_954
.LBB43_910:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i511
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB43_953
.LBB43_911:
.Ltmp1811:
	b	.LBB43_927
.LBB43_912:
.Ltmp1779:
.LBB43_913:
	move	$fp, $a0
.LBB43_914:
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB43_942
# %bb.915:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i710
	ld.d	$a1, $sp, 280
.LBB43_916:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_942
.LBB43_917:
.Ltmp1358:
	b	.LBB43_927
.LBB43_918:
.Ltmp1796:
	ld.d	$a2, $sp, 1976
	move	$fp, $a0
	beq	$a2, $s1, .LBB43_950
# %bb.919:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i654
	ld.d	$a0, $sp, 1992
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_950
.LBB43_920:
.Ltmp1793:
.LBB43_921:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit656
	move	$fp, $a0
	b	.LBB43_950
.LBB43_922:
.Ltmp1805:
	b	.LBB43_927
.LBB43_923:
.Ltmp1808:
	b	.LBB43_927
.LBB43_924:
.Ltmp1814:
	b	.LBB43_927
.LBB43_925:
.Ltmp1823:
	b	.LBB43_927
.LBB43_926:
.Ltmp1370:
.LBB43_927:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit558
	move	$fp, $a0
	b	.LBB43_954
.LBB43_928:
.Ltmp1734:
.LBB43_929:
	move	$fp, $a0
	b	.LBB43_941
.LBB43_930:
.Ltmp1828:
	move	$fp, $a0
	b	.LBB43_955
.LBB43_931:
.Ltmp1373:
	move	$fp, $a0
	ori	$a0, $zero, 2088
	add.d	$s0, $sp, $a0
	b	.LBB43_934
.LBB43_932:
.Ltmp1376:
	ld.d	$a2, $sp, 2040
	move	$fp, $a0
	ori	$a0, $zero, 2088
	add.d	$s0, $sp, $a0
	ori	$a0, $zero, 2056
	add.d	$a0, $sp, $a0
	beq	$a2, $a0, .LBB43_934
# %bb.933:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i553
	ori	$a0, $zero, 2056
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_934:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit555
	ori	$a0, $zero, 2072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $s0, .LBB43_954
# %bb.935:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i556
	ori	$a1, $zero, 2088
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	b	.LBB43_952
.LBB43_936:
.Ltmp1737:
	b	.LBB43_939
.LBB43_937:                             # %.loopexit.split-lp
.Ltmp1765:
	b	.LBB43_939
.LBB43_938:                             # %.loopexit
.Ltmp1762:
.LBB43_939:
	move	$fp, $a0
	ld.d	$a0, $sp, 1056
	addi.d	$a1, $sp, 1072
	beq	$a0, $a1, .LBB43_941
# %bb.940:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i752
	ld.d	$a1, $sp, 1072
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_941:
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockD2Ev)
	jirl	$ra, $ra, 0
.LBB43_942:
	addi.d	$a0, $sp, 1088
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
.LBB43_943:
	addi.d	$a0, $sp, 1544
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEED2Ev)
	jirl	$ra, $ra, 0
.LBB43_944:
	addi.d	$a0, $sp, 1624
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEED2Ev)
	jirl	$ra, $ra, 0
.LBB43_945:
	ld.d	$a0, $sp, 1704
	addi.d	$a1, $sp, 1720
	beq	$a0, $a1, .LBB43_947
# %bb.946:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1080
	ld.d	$a1, $sp, 1720
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_947:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1082
	addi.d	$a0, $sp, 1736
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEED2Ev)
	jirl	$ra, $ra, 0
.LBB43_948:
	addi.d	$a0, $sp, 1816
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB43_949:
	addi.d	$a0, $sp, 1896
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
.LBB43_950:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit656
	ld.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 2024
	beq	$a0, $a1, .LBB43_954
# %bb.951:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1086
	ld.d	$a1, $sp, 2024
.LBB43_952:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit558
	addi.d	$a1, $a1, 1
.LBB43_953:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit558
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_954:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit558
	ori	$a0, $zero, 2104
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB43_955:
	ori	$a0, $zero, 2616
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2600
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $a1, .LBB43_957
# %bb.956:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1095
	ori	$a1, $zero, 2616
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_957:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1097
	ori	$a0, $zero, 2648
	add.d	$a1, $sp, $a0
	ori	$a0, $zero, 2632
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	beq	$a0, $a1, .LBB43_959
# %bb.958:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1098
	ori	$a1, $zero, 2648
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_959:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1100
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end43:
	.size	_ZN2PP11PowerParser14compile_bufferERi, .Lfunc_end43-_ZN2PP11PowerParser14compile_bufferERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table43:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28  # >> Call Site 1 <<
	.uleb128 .Ltmp1327-.Lfunc_begin28       #   Call between .Lfunc_begin28 and .Ltmp1327
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1327-.Lfunc_begin28       # >> Call Site 2 <<
	.uleb128 .Ltmp1328-.Ltmp1327            #   Call between .Ltmp1327 and .Ltmp1328
	.uleb128 .Ltmp1329-.Lfunc_begin28       #     jumps to .Ltmp1329
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1330-.Lfunc_begin28       # >> Call Site 3 <<
	.uleb128 .Ltmp1331-.Ltmp1330            #   Call between .Ltmp1330 and .Ltmp1331
	.uleb128 .Ltmp1332-.Lfunc_begin28       #     jumps to .Ltmp1332
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1331-.Lfunc_begin28       # >> Call Site 4 <<
	.uleb128 .Ltmp1333-.Ltmp1331            #   Call between .Ltmp1331 and .Ltmp1333
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1333-.Lfunc_begin28       # >> Call Site 5 <<
	.uleb128 .Ltmp1334-.Ltmp1333            #   Call between .Ltmp1333 and .Ltmp1334
	.uleb128 .Ltmp1335-.Lfunc_begin28       #     jumps to .Ltmp1335
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1334-.Lfunc_begin28       # >> Call Site 6 <<
	.uleb128 .Ltmp1336-.Ltmp1334            #   Call between .Ltmp1334 and .Ltmp1336
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1336-.Lfunc_begin28       # >> Call Site 7 <<
	.uleb128 .Ltmp1337-.Ltmp1336            #   Call between .Ltmp1336 and .Ltmp1337
	.uleb128 .Ltmp1338-.Lfunc_begin28       #     jumps to .Ltmp1338
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1337-.Lfunc_begin28       # >> Call Site 8 <<
	.uleb128 .Ltmp1824-.Ltmp1337            #   Call between .Ltmp1337 and .Ltmp1824
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1824-.Lfunc_begin28       # >> Call Site 9 <<
	.uleb128 .Ltmp1827-.Ltmp1824            #   Call between .Ltmp1824 and .Ltmp1827
	.uleb128 .Ltmp1828-.Lfunc_begin28       #     jumps to .Ltmp1828
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1339-.Lfunc_begin28       # >> Call Site 10 <<
	.uleb128 .Ltmp1340-.Ltmp1339            #   Call between .Ltmp1339 and .Ltmp1340
	.uleb128 .Ltmp1341-.Lfunc_begin28       #     jumps to .Ltmp1341
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1821-.Lfunc_begin28       # >> Call Site 11 <<
	.uleb128 .Ltmp1822-.Ltmp1821            #   Call between .Ltmp1821 and .Ltmp1822
	.uleb128 .Ltmp1823-.Lfunc_begin28       #     jumps to .Ltmp1823
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1342-.Lfunc_begin28       # >> Call Site 12 <<
	.uleb128 .Ltmp1355-.Ltmp1342            #   Call between .Ltmp1342 and .Ltmp1355
	.uleb128 .Ltmp1820-.Lfunc_begin28       #     jumps to .Ltmp1820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1815-.Lfunc_begin28       # >> Call Site 13 <<
	.uleb128 .Ltmp1816-.Ltmp1815            #   Call between .Ltmp1815 and .Ltmp1816
	.uleb128 .Ltmp1817-.Lfunc_begin28       #     jumps to .Ltmp1817
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1377-.Lfunc_begin28       # >> Call Site 14 <<
	.uleb128 .Ltmp1378-.Ltmp1377            #   Call between .Ltmp1377 and .Ltmp1378
	.uleb128 .Ltmp1379-.Lfunc_begin28       #     jumps to .Ltmp1379
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1356-.Lfunc_begin28       # >> Call Site 15 <<
	.uleb128 .Ltmp1357-.Ltmp1356            #   Call between .Ltmp1356 and .Ltmp1357
	.uleb128 .Ltmp1358-.Lfunc_begin28       #     jumps to .Ltmp1358
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1359-.Lfunc_begin28       # >> Call Site 16 <<
	.uleb128 .Ltmp1360-.Ltmp1359            #   Call between .Ltmp1359 and .Ltmp1360
	.uleb128 .Ltmp1361-.Lfunc_begin28       #     jumps to .Ltmp1361
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1360-.Lfunc_begin28       # >> Call Site 17 <<
	.uleb128 .Ltmp1362-.Ltmp1360            #   Call between .Ltmp1360 and .Ltmp1362
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1362-.Lfunc_begin28       # >> Call Site 18 <<
	.uleb128 .Ltmp1363-.Ltmp1362            #   Call between .Ltmp1362 and .Ltmp1363
	.uleb128 .Ltmp1364-.Lfunc_begin28       #     jumps to .Ltmp1364
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1363-.Lfunc_begin28       # >> Call Site 19 <<
	.uleb128 .Ltmp1365-.Ltmp1363            #   Call between .Ltmp1363 and .Ltmp1365
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1365-.Lfunc_begin28       # >> Call Site 20 <<
	.uleb128 .Ltmp1366-.Ltmp1365            #   Call between .Ltmp1365 and .Ltmp1366
	.uleb128 .Ltmp1367-.Lfunc_begin28       #     jumps to .Ltmp1367
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1368-.Lfunc_begin28       # >> Call Site 21 <<
	.uleb128 .Ltmp1369-.Ltmp1368            #   Call between .Ltmp1368 and .Ltmp1369
	.uleb128 .Ltmp1370-.Lfunc_begin28       #     jumps to .Ltmp1370
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1369-.Lfunc_begin28       # >> Call Site 22 <<
	.uleb128 .Ltmp1371-.Ltmp1369            #   Call between .Ltmp1369 and .Ltmp1371
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1371-.Lfunc_begin28       # >> Call Site 23 <<
	.uleb128 .Ltmp1372-.Ltmp1371            #   Call between .Ltmp1371 and .Ltmp1372
	.uleb128 .Ltmp1373-.Lfunc_begin28       #     jumps to .Ltmp1373
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1372-.Lfunc_begin28       # >> Call Site 24 <<
	.uleb128 .Ltmp1374-.Ltmp1372            #   Call between .Ltmp1372 and .Ltmp1374
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1374-.Lfunc_begin28       # >> Call Site 25 <<
	.uleb128 .Ltmp1375-.Ltmp1374            #   Call between .Ltmp1374 and .Ltmp1375
	.uleb128 .Ltmp1376-.Lfunc_begin28       #     jumps to .Ltmp1376
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1375-.Lfunc_begin28       # >> Call Site 26 <<
	.uleb128 .Ltmp1812-.Ltmp1375            #   Call between .Ltmp1375 and .Ltmp1812
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1812-.Lfunc_begin28       # >> Call Site 27 <<
	.uleb128 .Ltmp1813-.Ltmp1812            #   Call between .Ltmp1812 and .Ltmp1813
	.uleb128 .Ltmp1814-.Lfunc_begin28       #     jumps to .Ltmp1814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1380-.Lfunc_begin28       # >> Call Site 28 <<
	.uleb128 .Ltmp1383-.Ltmp1380            #   Call between .Ltmp1380 and .Ltmp1383
	.uleb128 .Ltmp1384-.Lfunc_begin28       #     jumps to .Ltmp1384
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1383-.Lfunc_begin28       # >> Call Site 29 <<
	.uleb128 .Ltmp1806-.Ltmp1383            #   Call between .Ltmp1383 and .Ltmp1806
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1806-.Lfunc_begin28       # >> Call Site 30 <<
	.uleb128 .Ltmp1807-.Ltmp1806            #   Call between .Ltmp1806 and .Ltmp1807
	.uleb128 .Ltmp1808-.Lfunc_begin28       #     jumps to .Ltmp1808
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1809-.Lfunc_begin28       # >> Call Site 31 <<
	.uleb128 .Ltmp1810-.Ltmp1809            #   Call between .Ltmp1809 and .Ltmp1810
	.uleb128 .Ltmp1811-.Lfunc_begin28       #     jumps to .Ltmp1811
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1385-.Lfunc_begin28       # >> Call Site 32 <<
	.uleb128 .Ltmp1398-.Ltmp1385            #   Call between .Ltmp1385 and .Ltmp1398
	.uleb128 .Ltmp1820-.Lfunc_begin28       #     jumps to .Ltmp1820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1803-.Lfunc_begin28       # >> Call Site 33 <<
	.uleb128 .Ltmp1804-.Ltmp1803            #   Call between .Ltmp1803 and .Ltmp1804
	.uleb128 .Ltmp1805-.Lfunc_begin28       #     jumps to .Ltmp1805
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1399-.Lfunc_begin28       # >> Call Site 34 <<
	.uleb128 .Ltmp1402-.Ltmp1399            #   Call between .Ltmp1399 and .Ltmp1402
	.uleb128 .Ltmp1403-.Lfunc_begin28       #     jumps to .Ltmp1403
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1402-.Lfunc_begin28       # >> Call Site 35 <<
	.uleb128 .Ltmp1783-.Ltmp1402            #   Call between .Ltmp1402 and .Ltmp1783
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1783-.Lfunc_begin28       # >> Call Site 36 <<
	.uleb128 .Ltmp1784-.Ltmp1783            #   Call between .Ltmp1783 and .Ltmp1784
	.uleb128 .Ltmp1785-.Lfunc_begin28       #     jumps to .Ltmp1785
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1784-.Lfunc_begin28       # >> Call Site 37 <<
	.uleb128 .Ltmp1786-.Ltmp1784            #   Call between .Ltmp1784 and .Ltmp1786
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1786-.Lfunc_begin28       # >> Call Site 38 <<
	.uleb128 .Ltmp1787-.Ltmp1786            #   Call between .Ltmp1786 and .Ltmp1787
	.uleb128 .Ltmp1788-.Lfunc_begin28       #     jumps to .Ltmp1788
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1787-.Lfunc_begin28       # >> Call Site 39 <<
	.uleb128 .Ltmp1789-.Ltmp1787            #   Call between .Ltmp1787 and .Ltmp1789
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1789-.Lfunc_begin28       # >> Call Site 40 <<
	.uleb128 .Ltmp1792-.Ltmp1789            #   Call between .Ltmp1789 and .Ltmp1792
	.uleb128 .Ltmp1793-.Lfunc_begin28       #     jumps to .Ltmp1793
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1792-.Lfunc_begin28       # >> Call Site 41 <<
	.uleb128 .Ltmp1794-.Ltmp1792            #   Call between .Ltmp1792 and .Ltmp1794
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1794-.Lfunc_begin28       # >> Call Site 42 <<
	.uleb128 .Ltmp1795-.Ltmp1794            #   Call between .Ltmp1794 and .Ltmp1795
	.uleb128 .Ltmp1796-.Lfunc_begin28       #     jumps to .Ltmp1796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1795-.Lfunc_begin28       # >> Call Site 43 <<
	.uleb128 .Ltmp1797-.Ltmp1795            #   Call between .Ltmp1795 and .Ltmp1797
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1797-.Lfunc_begin28       # >> Call Site 44 <<
	.uleb128 .Ltmp1798-.Ltmp1797            #   Call between .Ltmp1797 and .Ltmp1798
	.uleb128 .Ltmp1799-.Lfunc_begin28       #     jumps to .Ltmp1799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1798-.Lfunc_begin28       # >> Call Site 45 <<
	.uleb128 .Ltmp1800-.Ltmp1798            #   Call between .Ltmp1798 and .Ltmp1800
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1800-.Lfunc_begin28       # >> Call Site 46 <<
	.uleb128 .Ltmp1801-.Ltmp1800            #   Call between .Ltmp1800 and .Ltmp1801
	.uleb128 .Ltmp1802-.Lfunc_begin28       #     jumps to .Ltmp1802
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1404-.Lfunc_begin28       # >> Call Site 47 <<
	.uleb128 .Ltmp1417-.Ltmp1404            #   Call between .Ltmp1404 and .Ltmp1417
	.uleb128 .Ltmp1782-.Lfunc_begin28       #     jumps to .Ltmp1782
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1417-.Lfunc_begin28       # >> Call Site 48 <<
	.uleb128 .Ltmp1418-.Ltmp1417            #   Call between .Ltmp1417 and .Ltmp1418
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1418-.Lfunc_begin28       # >> Call Site 49 <<
	.uleb128 .Ltmp1419-.Ltmp1418            #   Call between .Ltmp1418 and .Ltmp1419
	.uleb128 .Ltmp1420-.Lfunc_begin28       #     jumps to .Ltmp1420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1419-.Lfunc_begin28       # >> Call Site 50 <<
	.uleb128 .Ltmp1421-.Ltmp1419            #   Call between .Ltmp1419 and .Ltmp1421
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1421-.Lfunc_begin28       # >> Call Site 51 <<
	.uleb128 .Ltmp1422-.Ltmp1421            #   Call between .Ltmp1421 and .Ltmp1422
	.uleb128 .Ltmp1423-.Lfunc_begin28       #     jumps to .Ltmp1423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1422-.Lfunc_begin28       # >> Call Site 52 <<
	.uleb128 .Ltmp1424-.Ltmp1422            #   Call between .Ltmp1422 and .Ltmp1424
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1424-.Lfunc_begin28       # >> Call Site 53 <<
	.uleb128 .Ltmp1425-.Ltmp1424            #   Call between .Ltmp1424 and .Ltmp1425
	.uleb128 .Ltmp1426-.Lfunc_begin28       #     jumps to .Ltmp1426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1425-.Lfunc_begin28       # >> Call Site 54 <<
	.uleb128 .Ltmp1427-.Ltmp1425            #   Call between .Ltmp1425 and .Ltmp1427
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1427-.Lfunc_begin28       # >> Call Site 55 <<
	.uleb128 .Ltmp1428-.Ltmp1427            #   Call between .Ltmp1427 and .Ltmp1428
	.uleb128 .Ltmp1429-.Lfunc_begin28       #     jumps to .Ltmp1429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1428-.Lfunc_begin28       # >> Call Site 56 <<
	.uleb128 .Ltmp1430-.Ltmp1428            #   Call between .Ltmp1428 and .Ltmp1430
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1430-.Lfunc_begin28       # >> Call Site 57 <<
	.uleb128 .Ltmp1431-.Ltmp1430            #   Call between .Ltmp1430 and .Ltmp1431
	.uleb128 .Ltmp1432-.Lfunc_begin28       #     jumps to .Ltmp1432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1433-.Lfunc_begin28       # >> Call Site 58 <<
	.uleb128 .Ltmp1434-.Ltmp1433            #   Call between .Ltmp1433 and .Ltmp1434
	.uleb128 .Ltmp1435-.Lfunc_begin28       #     jumps to .Ltmp1435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1436-.Lfunc_begin28       # >> Call Site 59 <<
	.uleb128 .Ltmp1437-.Ltmp1436            #   Call between .Ltmp1436 and .Ltmp1437
	.uleb128 .Ltmp1438-.Lfunc_begin28       #     jumps to .Ltmp1438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1437-.Lfunc_begin28       # >> Call Site 60 <<
	.uleb128 .Ltmp1768-.Ltmp1437            #   Call between .Ltmp1437 and .Ltmp1768
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1768-.Lfunc_begin28       # >> Call Site 61 <<
	.uleb128 .Ltmp1769-.Ltmp1768            #   Call between .Ltmp1768 and .Ltmp1769
	.uleb128 .Ltmp1770-.Lfunc_begin28       #     jumps to .Ltmp1770
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1439-.Lfunc_begin28       # >> Call Site 62 <<
	.uleb128 .Ltmp1440-.Ltmp1439            #   Call between .Ltmp1439 and .Ltmp1440
	.uleb128 .Ltmp1441-.Lfunc_begin28       #     jumps to .Ltmp1441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1440-.Lfunc_begin28       # >> Call Site 63 <<
	.uleb128 .Ltmp1766-.Ltmp1440            #   Call between .Ltmp1440 and .Ltmp1766
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1766-.Lfunc_begin28       # >> Call Site 64 <<
	.uleb128 .Ltmp1767-.Ltmp1766            #   Call between .Ltmp1766 and .Ltmp1767
	.uleb128 .Ltmp1779-.Lfunc_begin28       #     jumps to .Ltmp1779
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1767-.Lfunc_begin28       # >> Call Site 65 <<
	.uleb128 .Ltmp1442-.Ltmp1767            #   Call between .Ltmp1767 and .Ltmp1442
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1442-.Lfunc_begin28       # >> Call Site 66 <<
	.uleb128 .Ltmp1443-.Ltmp1442            #   Call between .Ltmp1442 and .Ltmp1443
	.uleb128 .Ltmp1444-.Lfunc_begin28       #     jumps to .Ltmp1444
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1445-.Lfunc_begin28       # >> Call Site 67 <<
	.uleb128 .Ltmp1448-.Ltmp1445            #   Call between .Ltmp1445 and .Ltmp1448
	.uleb128 .Ltmp1449-.Lfunc_begin28       #     jumps to .Ltmp1449
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1732-.Lfunc_begin28       # >> Call Site 68 <<
	.uleb128 .Ltmp1733-.Ltmp1732            #   Call between .Ltmp1732 and .Ltmp1733
	.uleb128 .Ltmp1734-.Lfunc_begin28       #     jumps to .Ltmp1734
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1733-.Lfunc_begin28       # >> Call Site 69 <<
	.uleb128 .Ltmp1735-.Ltmp1733            #   Call between .Ltmp1733 and .Ltmp1735
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1735-.Lfunc_begin28       # >> Call Site 70 <<
	.uleb128 .Ltmp1736-.Ltmp1735            #   Call between .Ltmp1735 and .Ltmp1736
	.uleb128 .Ltmp1737-.Lfunc_begin28       #     jumps to .Ltmp1737
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1736-.Lfunc_begin28       # >> Call Site 71 <<
	.uleb128 .Ltmp1738-.Ltmp1736            #   Call between .Ltmp1736 and .Ltmp1738
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1738-.Lfunc_begin28       # >> Call Site 72 <<
	.uleb128 .Ltmp1761-.Ltmp1738            #   Call between .Ltmp1738 and .Ltmp1761
	.uleb128 .Ltmp1762-.Lfunc_begin28       #     jumps to .Ltmp1762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1761-.Lfunc_begin28       # >> Call Site 73 <<
	.uleb128 .Ltmp1450-.Ltmp1761            #   Call between .Ltmp1761 and .Ltmp1450
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1450-.Lfunc_begin28       # >> Call Site 74 <<
	.uleb128 .Ltmp1451-.Ltmp1450            #   Call between .Ltmp1450 and .Ltmp1451
	.uleb128 .Ltmp1452-.Lfunc_begin28       #     jumps to .Ltmp1452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1451-.Lfunc_begin28       # >> Call Site 75 <<
	.uleb128 .Ltmp1729-.Ltmp1451            #   Call between .Ltmp1451 and .Ltmp1729
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1729-.Lfunc_begin28       # >> Call Site 76 <<
	.uleb128 .Ltmp1730-.Ltmp1729            #   Call between .Ltmp1729 and .Ltmp1730
	.uleb128 .Ltmp1731-.Lfunc_begin28       #     jumps to .Ltmp1731
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1730-.Lfunc_begin28       # >> Call Site 77 <<
	.uleb128 .Ltmp1453-.Ltmp1730            #   Call between .Ltmp1730 and .Ltmp1453
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1453-.Lfunc_begin28       # >> Call Site 78 <<
	.uleb128 .Ltmp1454-.Ltmp1453            #   Call between .Ltmp1453 and .Ltmp1454
	.uleb128 .Ltmp1455-.Lfunc_begin28       #     jumps to .Ltmp1455
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1454-.Lfunc_begin28       # >> Call Site 79 <<
	.uleb128 .Ltmp1771-.Ltmp1454            #   Call between .Ltmp1454 and .Ltmp1771
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1771-.Lfunc_begin28       # >> Call Site 80 <<
	.uleb128 .Ltmp1778-.Ltmp1771            #   Call between .Ltmp1771 and .Ltmp1778
	.uleb128 .Ltmp1779-.Lfunc_begin28       #     jumps to .Ltmp1779
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1778-.Lfunc_begin28       # >> Call Site 81 <<
	.uleb128 .Ltmp1689-.Ltmp1778            #   Call between .Ltmp1778 and .Ltmp1689
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1689-.Lfunc_begin28       # >> Call Site 82 <<
	.uleb128 .Ltmp1690-.Ltmp1689            #   Call between .Ltmp1689 and .Ltmp1690
	.uleb128 .Ltmp1691-.Lfunc_begin28       #     jumps to .Ltmp1691
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1690-.Lfunc_begin28       # >> Call Site 83 <<
	.uleb128 .Ltmp1692-.Ltmp1690            #   Call between .Ltmp1690 and .Ltmp1692
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1692-.Lfunc_begin28       # >> Call Site 84 <<
	.uleb128 .Ltmp1693-.Ltmp1692            #   Call between .Ltmp1692 and .Ltmp1693
	.uleb128 .Ltmp1694-.Lfunc_begin28       #     jumps to .Ltmp1694
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1695-.Lfunc_begin28       # >> Call Site 85 <<
	.uleb128 .Ltmp1696-.Ltmp1695            #   Call between .Ltmp1695 and .Ltmp1696
	.uleb128 .Ltmp1697-.Lfunc_begin28       #     jumps to .Ltmp1697
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1456-.Lfunc_begin28       # >> Call Site 86 <<
	.uleb128 .Ltmp1457-.Ltmp1456            #   Call between .Ltmp1456 and .Ltmp1457
	.uleb128 .Ltmp1458-.Lfunc_begin28       #     jumps to .Ltmp1458
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1457-.Lfunc_begin28       # >> Call Site 87 <<
	.uleb128 .Ltmp1670-.Ltmp1457            #   Call between .Ltmp1457 and .Ltmp1670
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1670-.Lfunc_begin28       # >> Call Site 88 <<
	.uleb128 .Ltmp1671-.Ltmp1670            #   Call between .Ltmp1670 and .Ltmp1671
	.uleb128 .Ltmp1672-.Lfunc_begin28       #     jumps to .Ltmp1672
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1671-.Lfunc_begin28       # >> Call Site 89 <<
	.uleb128 .Ltmp1673-.Ltmp1671            #   Call between .Ltmp1671 and .Ltmp1673
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1673-.Lfunc_begin28       # >> Call Site 90 <<
	.uleb128 .Ltmp1674-.Ltmp1673            #   Call between .Ltmp1673 and .Ltmp1674
	.uleb128 .Ltmp1675-.Lfunc_begin28       #     jumps to .Ltmp1675
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1676-.Lfunc_begin28       # >> Call Site 91 <<
	.uleb128 .Ltmp1679-.Ltmp1676            #   Call between .Ltmp1676 and .Ltmp1679
	.uleb128 .Ltmp1688-.Lfunc_begin28       #     jumps to .Ltmp1688
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1459-.Lfunc_begin28       # >> Call Site 92 <<
	.uleb128 .Ltmp1460-.Ltmp1459            #   Call between .Ltmp1459 and .Ltmp1460
	.uleb128 .Ltmp1461-.Lfunc_begin28       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1460-.Lfunc_begin28       # >> Call Site 93 <<
	.uleb128 .Ltmp1462-.Ltmp1460            #   Call between .Ltmp1460 and .Ltmp1462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1462-.Lfunc_begin28       # >> Call Site 94 <<
	.uleb128 .Ltmp1463-.Ltmp1462            #   Call between .Ltmp1462 and .Ltmp1463
	.uleb128 .Ltmp1464-.Lfunc_begin28       #     jumps to .Ltmp1464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1465-.Lfunc_begin28       # >> Call Site 95 <<
	.uleb128 .Ltmp1468-.Ltmp1465            #   Call between .Ltmp1465 and .Ltmp1468
	.uleb128 .Ltmp1576-.Lfunc_begin28       #     jumps to .Ltmp1576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1469-.Lfunc_begin28       # >> Call Site 96 <<
	.uleb128 .Ltmp1470-.Ltmp1469            #   Call between .Ltmp1469 and .Ltmp1470
	.uleb128 .Ltmp1471-.Lfunc_begin28       #     jumps to .Ltmp1471
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1472-.Lfunc_begin28       # >> Call Site 97 <<
	.uleb128 .Ltmp1473-.Ltmp1472            #   Call between .Ltmp1472 and .Ltmp1473
	.uleb128 .Ltmp1474-.Lfunc_begin28       #     jumps to .Ltmp1474
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1475-.Lfunc_begin28       # >> Call Site 98 <<
	.uleb128 .Ltmp1476-.Ltmp1475            #   Call between .Ltmp1475 and .Ltmp1476
	.uleb128 .Ltmp1477-.Lfunc_begin28       #     jumps to .Ltmp1477
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1476-.Lfunc_begin28       # >> Call Site 99 <<
	.uleb128 .Ltmp1478-.Ltmp1476            #   Call between .Ltmp1476 and .Ltmp1478
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1478-.Lfunc_begin28       # >> Call Site 100 <<
	.uleb128 .Ltmp1479-.Ltmp1478            #   Call between .Ltmp1478 and .Ltmp1479
	.uleb128 .Ltmp1480-.Lfunc_begin28       #     jumps to .Ltmp1480
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1481-.Lfunc_begin28       # >> Call Site 101 <<
	.uleb128 .Ltmp1482-.Ltmp1481            #   Call between .Ltmp1481 and .Ltmp1482
	.uleb128 .Ltmp1483-.Lfunc_begin28       #     jumps to .Ltmp1483
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1482-.Lfunc_begin28       # >> Call Site 102 <<
	.uleb128 .Ltmp1680-.Ltmp1482            #   Call between .Ltmp1482 and .Ltmp1680
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1680-.Lfunc_begin28       # >> Call Site 103 <<
	.uleb128 .Ltmp1681-.Ltmp1680            #   Call between .Ltmp1680 and .Ltmp1681
	.uleb128 .Ltmp1682-.Lfunc_begin28       #     jumps to .Ltmp1682
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1681-.Lfunc_begin28       # >> Call Site 104 <<
	.uleb128 .Ltmp1683-.Ltmp1681            #   Call between .Ltmp1681 and .Ltmp1683
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1683-.Lfunc_begin28       # >> Call Site 105 <<
	.uleb128 .Ltmp1684-.Ltmp1683            #   Call between .Ltmp1683 and .Ltmp1684
	.uleb128 .Ltmp1685-.Lfunc_begin28       #     jumps to .Ltmp1685
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1684-.Lfunc_begin28       # >> Call Site 106 <<
	.uleb128 .Ltmp1686-.Ltmp1684            #   Call between .Ltmp1684 and .Ltmp1686
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1686-.Lfunc_begin28       # >> Call Site 107 <<
	.uleb128 .Ltmp1687-.Ltmp1686            #   Call between .Ltmp1686 and .Ltmp1687
	.uleb128 .Ltmp1688-.Lfunc_begin28       #     jumps to .Ltmp1688
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1484-.Lfunc_begin28       # >> Call Site 108 <<
	.uleb128 .Ltmp1485-.Ltmp1484            #   Call between .Ltmp1484 and .Ltmp1485
	.uleb128 .Ltmp1486-.Lfunc_begin28       #     jumps to .Ltmp1486
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1485-.Lfunc_begin28       # >> Call Site 109 <<
	.uleb128 .Ltmp1698-.Ltmp1485            #   Call between .Ltmp1485 and .Ltmp1698
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1698-.Lfunc_begin28       # >> Call Site 110 <<
	.uleb128 .Ltmp1707-.Ltmp1698            #   Call between .Ltmp1698 and .Ltmp1707
	.uleb128 .Ltmp1725-.Lfunc_begin28       #     jumps to .Ltmp1725
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1707-.Lfunc_begin28       # >> Call Site 111 <<
	.uleb128 .Ltmp1708-.Ltmp1707            #   Call between .Ltmp1707 and .Ltmp1708
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1708-.Lfunc_begin28       # >> Call Site 112 <<
	.uleb128 .Ltmp1709-.Ltmp1708            #   Call between .Ltmp1708 and .Ltmp1709
	.uleb128 .Ltmp1710-.Lfunc_begin28       #     jumps to .Ltmp1710
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1709-.Lfunc_begin28       # >> Call Site 113 <<
	.uleb128 .Ltmp1711-.Ltmp1709            #   Call between .Ltmp1709 and .Ltmp1711
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1711-.Lfunc_begin28       # >> Call Site 114 <<
	.uleb128 .Ltmp1712-.Ltmp1711            #   Call between .Ltmp1711 and .Ltmp1712
	.uleb128 .Ltmp1713-.Lfunc_begin28       #     jumps to .Ltmp1713
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1712-.Lfunc_begin28       # >> Call Site 115 <<
	.uleb128 .Ltmp1714-.Ltmp1712            #   Call between .Ltmp1712 and .Ltmp1714
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1714-.Lfunc_begin28       # >> Call Site 116 <<
	.uleb128 .Ltmp1715-.Ltmp1714            #   Call between .Ltmp1714 and .Ltmp1715
	.uleb128 .Ltmp1716-.Lfunc_begin28       #     jumps to .Ltmp1716
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1715-.Lfunc_begin28       # >> Call Site 117 <<
	.uleb128 .Ltmp1717-.Ltmp1715            #   Call between .Ltmp1715 and .Ltmp1717
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1717-.Lfunc_begin28       # >> Call Site 118 <<
	.uleb128 .Ltmp1724-.Ltmp1717            #   Call between .Ltmp1717 and .Ltmp1724
	.uleb128 .Ltmp1725-.Lfunc_begin28       #     jumps to .Ltmp1725
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1724-.Lfunc_begin28       # >> Call Site 119 <<
	.uleb128 .Ltmp1487-.Ltmp1724            #   Call between .Ltmp1724 and .Ltmp1487
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1487-.Lfunc_begin28       # >> Call Site 120 <<
	.uleb128 .Ltmp1554-.Ltmp1487            #   Call between .Ltmp1487 and .Ltmp1554
	.uleb128 .Ltmp1555-.Lfunc_begin28       #     jumps to .Ltmp1555
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1556-.Lfunc_begin28       # >> Call Site 121 <<
	.uleb128 .Ltmp1575-.Ltmp1556            #   Call between .Ltmp1556 and .Ltmp1575
	.uleb128 .Ltmp1576-.Lfunc_begin28       #     jumps to .Ltmp1576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1547-.Lfunc_begin28       # >> Call Site 122 <<
	.uleb128 .Ltmp1548-.Ltmp1547            #   Call between .Ltmp1547 and .Ltmp1548
	.uleb128 .Ltmp1555-.Lfunc_begin28       #     jumps to .Ltmp1555
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1548-.Lfunc_begin28       # >> Call Site 123 <<
	.uleb128 .Ltmp1489-.Ltmp1548            #   Call between .Ltmp1548 and .Ltmp1489
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1489-.Lfunc_begin28       # >> Call Site 124 <<
	.uleb128 .Ltmp1539-.Ltmp1489            #   Call between .Ltmp1489 and .Ltmp1539
	.uleb128 .Ltmp1546-.Lfunc_begin28       #     jumps to .Ltmp1546
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1491-.Lfunc_begin28       # >> Call Site 125 <<
	.uleb128 .Ltmp1492-.Ltmp1491            #   Call between .Ltmp1491 and .Ltmp1492
	.uleb128 .Ltmp1493-.Lfunc_begin28       #     jumps to .Ltmp1493
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1494-.Lfunc_begin28       # >> Call Site 126 <<
	.uleb128 .Ltmp1495-.Ltmp1494            #   Call between .Ltmp1494 and .Ltmp1495
	.uleb128 .Ltmp1496-.Lfunc_begin28       #     jumps to .Ltmp1496
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1495-.Lfunc_begin28       # >> Call Site 127 <<
	.uleb128 .Ltmp1497-.Ltmp1495            #   Call between .Ltmp1495 and .Ltmp1497
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1497-.Lfunc_begin28       # >> Call Site 128 <<
	.uleb128 .Ltmp1545-.Ltmp1497            #   Call between .Ltmp1497 and .Ltmp1545
	.uleb128 .Ltmp1546-.Lfunc_begin28       #     jumps to .Ltmp1546
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1499-.Lfunc_begin28       # >> Call Site 129 <<
	.uleb128 .Ltmp1500-.Ltmp1499            #   Call between .Ltmp1499 and .Ltmp1500
	.uleb128 .Ltmp1529-.Lfunc_begin28       #     jumps to .Ltmp1529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1500-.Lfunc_begin28       # >> Call Site 130 <<
	.uleb128 .Ltmp1501-.Ltmp1500            #   Call between .Ltmp1500 and .Ltmp1501
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1501-.Lfunc_begin28       # >> Call Site 131 <<
	.uleb128 .Ltmp1518-.Ltmp1501            #   Call between .Ltmp1501 and .Ltmp1518
	.uleb128 .Ltmp1529-.Lfunc_begin28       #     jumps to .Ltmp1529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1519-.Lfunc_begin28       # >> Call Site 132 <<
	.uleb128 .Ltmp1520-.Ltmp1519            #   Call between .Ltmp1519 and .Ltmp1520
	.uleb128 .Ltmp1521-.Lfunc_begin28       #     jumps to .Ltmp1521
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1522-.Lfunc_begin28       # >> Call Site 133 <<
	.uleb128 .Ltmp1523-.Ltmp1522            #   Call between .Ltmp1522 and .Ltmp1523
	.uleb128 .Ltmp1524-.Lfunc_begin28       #     jumps to .Ltmp1524
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1523-.Lfunc_begin28       # >> Call Site 134 <<
	.uleb128 .Ltmp1525-.Ltmp1523            #   Call between .Ltmp1523 and .Ltmp1525
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1525-.Lfunc_begin28       # >> Call Site 135 <<
	.uleb128 .Ltmp1528-.Ltmp1525            #   Call between .Ltmp1525 and .Ltmp1528
	.uleb128 .Ltmp1529-.Lfunc_begin28       #     jumps to .Ltmp1529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1528-.Lfunc_begin28       # >> Call Site 136 <<
	.uleb128 .Ltmp1763-.Ltmp1528            #   Call between .Ltmp1528 and .Ltmp1763
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1763-.Lfunc_begin28       # >> Call Site 137 <<
	.uleb128 .Ltmp1764-.Ltmp1763            #   Call between .Ltmp1763 and .Ltmp1764
	.uleb128 .Ltmp1765-.Lfunc_begin28       #     jumps to .Ltmp1765
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1577-.Lfunc_begin28       # >> Call Site 138 <<
	.uleb128 .Ltmp1594-.Ltmp1577            #   Call between .Ltmp1577 and .Ltmp1594
	.uleb128 .Ltmp1669-.Lfunc_begin28       #     jumps to .Ltmp1669
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1664-.Lfunc_begin28       # >> Call Site 139 <<
	.uleb128 .Ltmp1665-.Ltmp1664            #   Call between .Ltmp1664 and .Ltmp1665
	.uleb128 .Ltmp1666-.Lfunc_begin28       #     jumps to .Ltmp1666
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1595-.Lfunc_begin28       # >> Call Site 140 <<
	.uleb128 .Ltmp1618-.Ltmp1595            #   Call between .Ltmp1595 and .Ltmp1618
	.uleb128 .Ltmp1669-.Lfunc_begin28       #     jumps to .Ltmp1669
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1619-.Lfunc_begin28       # >> Call Site 141 <<
	.uleb128 .Ltmp1620-.Ltmp1619            #   Call between .Ltmp1619 and .Ltmp1620
	.uleb128 .Ltmp1621-.Lfunc_begin28       #     jumps to .Ltmp1621
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1622-.Lfunc_begin28       # >> Call Site 142 <<
	.uleb128 .Ltmp1623-.Ltmp1622            #   Call between .Ltmp1622 and .Ltmp1623
	.uleb128 .Ltmp1624-.Lfunc_begin28       #     jumps to .Ltmp1624
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1625-.Lfunc_begin28       # >> Call Site 143 <<
	.uleb128 .Ltmp1626-.Ltmp1625            #   Call between .Ltmp1625 and .Ltmp1626
	.uleb128 .Ltmp1627-.Lfunc_begin28       #     jumps to .Ltmp1627
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1626-.Lfunc_begin28       # >> Call Site 144 <<
	.uleb128 .Ltmp1628-.Ltmp1626            #   Call between .Ltmp1626 and .Ltmp1628
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1628-.Lfunc_begin28       # >> Call Site 145 <<
	.uleb128 .Ltmp1663-.Ltmp1628            #   Call between .Ltmp1628 and .Ltmp1663
	.uleb128 .Ltmp1669-.Lfunc_begin28       #     jumps to .Ltmp1669
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1663-.Lfunc_begin28       # >> Call Site 146 <<
	.uleb128 .Ltmp1818-.Ltmp1663            #   Call between .Ltmp1663 and .Ltmp1818
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1818-.Lfunc_begin28       # >> Call Site 147 <<
	.uleb128 .Ltmp1819-.Ltmp1818            #   Call between .Ltmp1818 and .Ltmp1819
	.uleb128 .Ltmp1820-.Lfunc_begin28       #     jumps to .Ltmp1820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1780-.Lfunc_begin28       # >> Call Site 148 <<
	.uleb128 .Ltmp1781-.Ltmp1780            #   Call between .Ltmp1780 and .Ltmp1781
	.uleb128 .Ltmp1782-.Lfunc_begin28       #     jumps to .Ltmp1782
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1726-.Lfunc_begin28       # >> Call Site 149 <<
	.uleb128 .Ltmp1727-.Ltmp1726            #   Call between .Ltmp1726 and .Ltmp1727
	.uleb128 .Ltmp1728-.Lfunc_begin28       #     jumps to .Ltmp1728
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1667-.Lfunc_begin28       # >> Call Site 150 <<
	.uleb128 .Ltmp1668-.Ltmp1667            #   Call between .Ltmp1667 and .Ltmp1668
	.uleb128 .Ltmp1669-.Lfunc_begin28       #     jumps to .Ltmp1669
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1668-.Lfunc_begin28       # >> Call Site 151 <<
	.uleb128 .Lfunc_end43-.Ltmp1668         #   Call between .Ltmp1668 and .Lfunc_end43
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end28:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE # -- Begin function _ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE
	.p2align	5
	.type	_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE,@function
_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE: # @_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:
	addi.d	$sp, $sp, -992
	.cfi_def_cfa_offset 992
	st.d	$ra, $sp, 984                   # 8-byte Folded Spill
	st.d	$fp, $sp, 976                   # 8-byte Folded Spill
	st.d	$s0, $sp, 968                   # 8-byte Folded Spill
	st.d	$s1, $sp, 960                   # 8-byte Folded Spill
	st.d	$s2, $sp, 952                   # 8-byte Folded Spill
	st.d	$s3, $sp, 944                   # 8-byte Folded Spill
	st.d	$s4, $sp, 936                   # 8-byte Folded Spill
	st.d	$s5, $sp, 928                   # 8-byte Folded Spill
	st.d	$s6, $sp, 920                   # 8-byte Folded Spill
	st.d	$s7, $sp, 912                   # 8-byte Folded Spill
	st.d	$s8, $sp, 904                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 520
	ld.w	$a5, $a0, 8
	ld.w	$a0, $a0, 12
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	bne	$a5, $a0, .LBB44_270
# %bb.1:
	st.d	$a2, $sp, 24                    # 8-byte Folded Spill
	ld.d	$a3, $a1, 0
	ld.d	$a2, $a1, 8
	st.d	$a4, $sp, 32                    # 8-byte Folded Spill
	addi.d	$a0, $a4, 16
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB44_287
# %bb.2:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB44_4
# %bb.3:
	ld.bu	$a1, $s0, 67
	b	.LBB44_5
.LBB44_4:
	move	$s1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s1
.LBB44_5:
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 864
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 848
	st.d	$zero, $sp, 840
	vst	$vr0, $sp, 192                  # 16-byte Folded Spill
	vst	$vr0, $sp, 824
	pcalau12i	$a0, %pc_hi20(.L.str.222)
	addi.d	$a0, $a0, %pc_lo12(.L.str.222)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 5
	addi.d	$s7, $sp, 328
	st.d	$s7, $sp, 312
	st.d	$a1, $sp, 328
	st.d	$a0, $sp, 333
	ori	$a0, $zero, 13
	st.d	$a0, $sp, 320
	st.b	$zero, $sp, 341
.Ltmp1829:
	addi.d	$a0, $sp, 824
	addi.d	$a1, $sp, 312
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1830:
# %bb.6:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
	ld.d	$a0, $sp, 312
	beq	$a0, $s7, .LBB44_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %pc_hi20(.L.str.223)
	addi.d	$a0, $a0, %pc_lo12(.L.str.223)
	ld.w	$a1, $a0, 0
	st.d	$s7, $sp, 312
	ld.b	$a2, $a0, 4
	st.w	$a1, $sp, 328
	ld.d	$a0, $sp, 832
	ld.d	$a1, $sp, 840
	st.b	$a2, $sp, 332
	ori	$a2, $zero, 5
	st.d	$a2, $sp, 320
	st.b	$zero, $sp, 333
	beq	$a0, $a1, .LBB44_11
# %bb.9:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 312
	beq	$a2, $s7, .LBB44_14
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i75
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 328
	st.d	$a1, $a0, 16
	b	.LBB44_15
.LBB44_11:
.Ltmp1832:
	addi.d	$a0, $sp, 824
	addi.d	$a1, $sp, 312
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1833:
# %bb.12:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit79
	ld.d	$a0, $sp, 312
	beq	$a0, $s7, .LBB44_16
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i80
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_16
.LBB44_14:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i77
	ld.h	$a2, $s7, 4
	st.h	$a2, $a1, 4
	ld.w	$a2, $s7, 0
	st.w	$a2, $a1, 0
.LBB44_15:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit79.thread
	ori	$a1, $zero, 5
	st.d	$a1, $a0, 8
	st.d	$s7, $sp, 312
	st.d	$zero, $sp, 320
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 832
.LBB44_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit82
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	ld.d	$a1, $a0, 0
	st.d	$s7, $sp, 312
	ld.w	$a2, $a0, 7
	st.d	$a1, $sp, 328
	ld.d	$a0, $sp, 832
	ld.d	$a1, $sp, 840
	st.w	$a2, $sp, 335
	ori	$a2, $zero, 11
	st.d	$a2, $sp, 320
	st.b	$zero, $sp, 339
	beq	$a0, $a1, .LBB44_19
# %bb.17:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 312
	beq	$a2, $s7, .LBB44_25
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i88
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 328
	st.d	$a1, $a0, 16
	b	.LBB44_26
.LBB44_19:
.Ltmp1835:
	addi.d	$a0, $sp, 824
	addi.d	$a1, $sp, 312
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1836:
# %bb.20:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit92
	ld.d	$a0, $sp, 312
	beq	$a0, $s7, .LBB44_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i93
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95
	ld.d	$a0, $sp, 856
	ld.d	$a1, $sp, 864
	beq	$a0, $a1, .LBB44_27
.LBB44_23:
.Ltmp1838:
	addi.d	$a1, $sp, 824
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1839:
# %bb.24:                               # %.noexc96
	ld.d	$a0, $sp, 856
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	st.d	$a0, $sp, 856
	b	.LBB44_29
.LBB44_25:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i90
	ld.w	$a2, $s7, 8
	st.w	$a2, $a1, 8
	ld.d	$a2, $s7, 0
	st.d	$a2, $a1, 0
.LBB44_26:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit92.thread
	ori	$a1, $zero, 11
	st.d	$a1, $a0, 8
	st.d	$s7, $sp, 312
	st.d	$zero, $sp, 320
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 832
	ld.d	$a0, $sp, 856
	ld.d	$a1, $sp, 864
	bne	$a0, $a1, .LBB44_23
.LBB44_27:
.Ltmp1840:
	addi.d	$a0, $sp, 848
	addi.d	$a1, $sp, 824
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1841:
# %bb.28:                               # %._ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit_crit_edge
	ld.d	$a0, $sp, 856
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
.LBB44_29:                              # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit
	ld.d	$a0, $sp, 848
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	lu12i.w	$a0, -349526
	ld.d	$s2, $fp, 704
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	addi.d	$a1, $fp, 688
	lu52i.d	$a0, $a0, -1366
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	beq	$s2, $a1, .LBB44_230
# %bb.30:                               # %.lr.ph612
	ld.d	$a0, $sp, 832
	ld.d	$a1, $sp, 824
	sub.d	$a0, $a0, $a1
	srai.d	$a0, $a0, 5
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a0, 16
	st.d	$a1, $sp, 152                   # 8-byte Folded Spill
	ld.d	$a1, $a0, 24
	st.d	$a1, $sp, 160                   # 8-byte Folded Spill
	ld.d	$a1, $a0, 32
	st.d	$a1, $sp, 120                   # 8-byte Folded Spill
	ld.d	$a1, $a0, 40
	st.d	$a1, $sp, 112                   # 8-byte Folded Spill
	ld.d	$a1, $a0, 8
	st.d	$a1, $sp, 104                   # 8-byte Folded Spill
	ld.d	$a1, $a0, 48
	st.d	$a1, $sp, 96                    # 8-byte Folded Spill
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 88                    # 8-byte Folded Spill
	ld.d	$a1, $a0, 64
	st.d	$a1, $sp, 80                    # 8-byte Folded Spill
	ld.d	$a0, $a0, 72
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	ori	$s0, $zero, 16
	lu12i.w	$a0, 349525
	ori	$a0, $a0, 1365
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	b	.LBB44_32
	.p2align	4, , 16
.LBB44_31:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit181
                                        #   in Loop: Header=BB44_32 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	beq	$s2, $a0, .LBB44_230
.LBB44_32:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB44_57 Depth 2
                                        #       Child Loop BB44_75 Depth 3
                                        #       Child Loop BB44_112 Depth 3
                                        #         Child Loop BB44_155 Depth 4
                                        #         Child Loop BB44_141 Depth 4
                                        #         Child Loop BB44_169 Depth 4
                                        #       Child Loop BB44_209 Depth 3
                                        #       Child Loop BB44_196 Depth 3
                                        #       Child Loop BB44_205 Depth 3
	ld.d	$a1, $s2, 40
	ld.d	$fp, $s2, 32
	addi.d	$a0, $sp, 808
	st.d	$a0, $sp, 792
	st.d	$a1, $sp, 312
	bltu	$a1, $s0, .LBB44_35
# %bb.33:                               # %.noexc.i99
                                        #   in Loop: Header=BB44_32 Depth=1
.Ltmp1843:
	addi.d	$a0, $sp, 792
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1844:
# %bb.34:                               # %.noexc100
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 792
	st.d	$a1, $sp, 808
.LBB44_35:                              # %._crit_edge.i.i98
                                        #   in Loop: Header=BB44_32 Depth=1
	addi.w	$s6, $zero, -1
	beq	$a1, $s6, .LBB44_39
# %bb.36:                               # %._crit_edge.i.i98
                                        #   in Loop: Header=BB44_32 Depth=1
	bnez	$a1, .LBB44_38
# %bb.37:                               #   in Loop: Header=BB44_32 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB44_39
	.p2align	4, , 16
.LBB44_38:                              #   in Loop: Header=BB44_32 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB44_39:                              #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a2, $sp, 312
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 8
	st.d	$a2, $sp, 800
	beqz	$a0, .LBB44_42
# %bb.40:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$fp, $sp, 792
	bne	$a2, $a0, .LBB44_228
# %bb.41:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB44_228
.LBB44_42:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread378
                                        #   in Loop: Header=BB44_32 Depth=1
	move	$a0, $s2
	ld.d	$s2, $s2, 104
	ld.d	$s3, $a0, 96
	ld.d	$a1, $a0, 176
	st.d	$a0, $sp, 184                   # 8-byte Folded Spill
	ld.d	$fp, $a0, 168
	addi.d	$a0, $sp, 776
	st.d	$a0, $sp, 760
	st.d	$a1, $sp, 312
	bltu	$a1, $s0, .LBB44_45
# %bb.43:                               # %.noexc.i.i
                                        #   in Loop: Header=BB44_32 Depth=1
.Ltmp1846:
	addi.d	$a0, $sp, 760
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1847:
# %bb.44:                               # %.noexc111
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 760
	st.d	$a1, $sp, 776
.LBB44_45:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB44_32 Depth=1
	beq	$a1, $s6, .LBB44_49
# %bb.46:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB44_32 Depth=1
	bnez	$a1, .LBB44_48
# %bb.47:                               #   in Loop: Header=BB44_32 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB44_49
.LBB44_48:                              #   in Loop: Header=BB44_32 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB44_49:                              #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a0, $sp, 312
	ld.d	$a1, $sp, 184                   # 8-byte Folded Reload
	ld.w	$s4, $a1, 120
	st.d	$a0, $sp, 768
	bltz	$s4, .LBB44_285
# %bb.50:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
                                        #   in Loop: Header=BB44_32 Depth=1
	beqz	$s4, .LBB44_53
# %bb.51:                               # %.lr.ph.preheader.i.i.i.i.i
                                        #   in Loop: Header=BB44_32 Depth=1
	slli.d	$s1, $s4, 2
.Ltmp1849:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$a1, $s4
.Ltmp1850:
# %bb.52:                               # %.noexc113
                                        #   in Loop: Header=BB44_32 Depth=1
	move	$fp, $a0
	st.d	$a0, $sp, 736
	move	$s4, $a1
	alsl.d	$a0, $a1, $a0, 2
	st.d	$a0, $sp, 752
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a1, $fp, $s1
	b	.LBB44_54
.LBB44_53:                              # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
                                        #   in Loop: Header=BB44_32 Depth=1
	move	$fp, $zero
	move	$a1, $zero
	st.d	$zero, $sp, 752
	vld	$vr0, $sp, 192                  # 16-byte Folded Reload
	vst	$vr0, $sp, 736
.LBB44_54:                              # %.loopexit387
                                        #   in Loop: Header=BB44_32 Depth=1
	sub.d	$a0, $s2, $s3
	srai.d	$a0, $a0, 5
	addi.w	$a2, $a0, 0
	st.d	$a1, $sp, 744
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	st.d	$a2, $sp, 176                   # 8-byte Folded Spill
	blez	$a2, .LBB44_223
# %bb.55:                               # %.lr.ph608
                                        #   in Loop: Header=BB44_32 Depth=1
	st.d	$zero, $sp, 216                 # 8-byte Folded Spill
	addi.d	$a1, $s2, 64
	st.d	$a1, $sp, 136                   # 8-byte Folded Spill
	addi.w	$a1, $s4, -1
	st.d	$a1, $sp, 240                   # 8-byte Folded Spill
	ori	$fp, $zero, 1
	sltu	$a1, $fp, $s4
	masknez	$a2, $fp, $a1
	st.d	$s4, $sp, 128                   # 8-byte Folded Spill
	maskeqz	$a1, $s4, $a1
	or	$a1, $a1, $a2
	st.d	$a1, $sp, 232                   # 8-byte Folded Spill
	bstrpick.d	$a0, $a0, 30, 0
	st.d	$a0, $sp, 168                   # 8-byte Folded Spill
	st.d	$s6, $sp, 248                   # 8-byte Folded Spill
	b	.LBB44_57
	.p2align	4, , 16
.LBB44_56:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit170
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 216                   # 8-byte Folded Reload
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 216                   # 8-byte Folded Spill
	ld.d	$a1, $sp, 168                   # 8-byte Folded Reload
	beq	$a0, $a1, .LBB44_222
.LBB44_57:                              #   Parent Loop BB44_32 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB44_75 Depth 3
                                        #       Child Loop BB44_112 Depth 3
                                        #         Child Loop BB44_155 Depth 4
                                        #         Child Loop BB44_141 Depth 4
                                        #         Child Loop BB44_169 Depth 4
                                        #       Child Loop BB44_209 Depth 3
                                        #       Child Loop BB44_196 Depth 3
                                        #       Child Loop BB44_205 Depth 3
	ld.d	$a1, $sp, 800
	ld.d	$s1, $sp, 792
	addi.d	$a0, $sp, 720
	st.d	$a0, $sp, 704
	st.d	$a1, $sp, 312
	bltu	$a1, $s0, .LBB44_60
# %bb.58:                               # %.noexc.i118
                                        #   in Loop: Header=BB44_57 Depth=2
.Ltmp1852:
	addi.d	$a0, $sp, 704
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1853:
# %bb.59:                               # %.noexc119
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 704
	st.d	$a1, $sp, 720
.LBB44_60:                              # %._crit_edge.i.i117
                                        #   in Loop: Header=BB44_57 Depth=2
	beq	$a1, $s6, .LBB44_63
# %bb.61:                               # %._crit_edge.i.i117
                                        #   in Loop: Header=BB44_57 Depth=2
	bnez	$a1, .LBB44_64
# %bb.62:                               #   in Loop: Header=BB44_57 Depth=2
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
.LBB44_63:                              #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 312
	st.d	$a0, $sp, 712
	ld.d	$a0, $sp, 176                   # 8-byte Folded Reload
	bne	$a0, $fp, .LBB44_65
	b	.LBB44_100
	.p2align	4, , 16
.LBB44_64:                              #   in Loop: Header=BB44_57 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 312
	st.d	$a0, $sp, 712
	ld.d	$a0, $sp, 176                   # 8-byte Folded Reload
	beq	$a0, $fp, .LBB44_100
.LBB44_65:                              #   in Loop: Header=BB44_57 Depth=2
.Ltmp1855:
	addi.d	$a2, $sp, 736
	ld.d	$a0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$a1, $sp, 216                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP8Variable11get_indicesEiRSt6vectorIiSaIiEE)
	jirl	$ra, $ra, 0
.Ltmp1856:
# %bb.66:                               #   in Loop: Header=BB44_57 Depth=2
	addi.d	$a0, $sp, 440
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseC2Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt9basic_iosIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt9basic_iosIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 440
	st.d	$zero, $sp, 656
	st.h	$zero, $sp, 664
	vld	$vr0, $sp, 192                  # 16-byte Folded Reload
	addi.d	$a0, $sp, 672
	vst	$vr0, $a0, 0
	vst	$vr0, $a0, 16
	ld.d	$a0, $sp, 152                   # 8-byte Folded Reload
	st.d	$a0, $sp, 312
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 160                   # 8-byte Folded Reload
	addi.d	$a2, $sp, 312
	stx.d	$a1, $a0, $a2
	ld.d	$a0, $sp, 312
	st.d	$zero, $sp, 320
	ld.d	$a0, $a0, -24
	add.d	$a0, $a2, $a0
.Ltmp1858:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp1859:
# %bb.67:                               # %.noexc.i121
                                        #   in Loop: Header=BB44_57 Depth=2
	ori	$s4, $zero, 1
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	st.d	$a0, $sp, 328
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 112                   # 8-byte Folded Reload
	stx.d	$a1, $s7, $a0
	ld.d	$a0, $sp, 328
	ld.d	$a0, $a0, -24
	add.d	$a0, $s7, $a0
.Ltmp1861:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp1862:
# %bb.68:                               #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 104                   # 8-byte Folded Reload
	st.d	$a0, $sp, 312
	ld.d	$a0, $a0, -24
	pcalau12i	$a1, %got_pc_hi20(_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	addi.d	$s2, $sp, 312
	stx.d	$a2, $a0, $s2
	addi.d	$a0, $a1, 24
	st.d	$a0, $sp, 312
	addi.d	$a0, $a1, 104
	pcalau12i	$a2, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	st.d	$a0, $sp, 440
	addi.d	$a0, $a1, 64
	st.d	$a0, $sp, 328
	addi.d	$fp, $a2, 16
	st.d	$fp, $sp, 336
	vld	$vr0, $sp, 192                  # 16-byte Folded Reload
	addi.d	$a0, $sp, 344
	vst	$vr0, $a0, 0
	vst	$vr0, $a0, 16
	vst	$vr0, $a0, 32
	addi.d	$a0, $sp, 392
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	addi.d	$s1, $a0, 16
	st.d	$s1, $sp, 336
	ori	$a0, $zero, 24
	st.w	$a0, $sp, 400
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 424
	st.d	$a1, $sp, 408
	st.d	$zero, $sp, 416
	st.b	$zero, $sp, 424
	ld.d	$a0, $a0, -24
	addi.d	$s3, $sp, 312
	add.d	$a0, $s2, $a0
.Ltmp1864:
	addi.d	$a1, $sp, 336
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp1865:
# %bb.69:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev.exit
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 792
	ld.d	$a2, $sp, 800
.Ltmp1867:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1868:
# %bb.70:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB44_57 Depth=2
.Ltmp1869:
	pcalau12i	$a1, %pc_hi20(.L.str.116)
	addi.d	$a1, $a1, %pc_lo12(.L.str.116)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1870:
# %bb.71:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit.preheader
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 128                   # 8-byte Folded Reload
	beqz	$a0, .LBB44_78
# %bb.72:                               # %.lr.ph.preheader
                                        #   in Loop: Header=BB44_57 Depth=2
	move	$s2, $zero
	b	.LBB44_75
	.p2align	4, , 16
.LBB44_73:                              #   in Loop: Header=BB44_75 Depth=3
.Ltmp1871:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1872:
.LBB44_74:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit127
                                        #   in Loop: Header=BB44_75 Depth=3
	addi.d	$s2, $s2, 1
	ld.d	$a0, $sp, 232                   # 8-byte Folded Reload
	beq	$s2, $a0, .LBB44_78
.LBB44_75:                              # %.lr.ph
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a0, $sp, 736
	slli.d	$a1, $s2, 2
	ldx.w	$a1, $a0, $a1
	ld.d	$a0, $sp, 240                   # 8-byte Folded Reload
	bge	$s2, $a0, .LBB44_73
# %bb.76:                               #   in Loop: Header=BB44_75 Depth=3
.Ltmp1873:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1874:
# %bb.77:                               #   in Loop: Header=BB44_75 Depth=3
.Ltmp1875:
	pcalau12i	$a1, %pc_hi20(.L.str.22)
	addi.d	$a1, $a1, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1876:
	b	.LBB44_74
	.p2align	4, , 16
.LBB44_78:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit._crit_edge
                                        #   in Loop: Header=BB44_57 Depth=2
.Ltmp1878:
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a1, $a0, %pc_lo12(.L.str.225)
	ori	$a2, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1879:
# %bb.79:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit125
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 296
	st.d	$a1, $sp, 280
	st.d	$zero, $sp, 288
	st.b	$zero, $sp, 296
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	beqz	$a0, .LBB44_82
# %bb.80:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit125
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 360
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB44_82
# %bb.81:                               #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a3, $sp, 368
	sub.d	$a4, $a0, $a3
.Ltmp1881:
	addi.d	$a0, $sp, 280
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1882:
	b	.LBB44_83
	.p2align	4, , 16
.LBB44_82:                              #   in Loop: Header=BB44_57 Depth=2
.Ltmp1883:
	addi.d	$a0, $sp, 280
	addi.d	$a1, $sp, 408
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1884:
.LBB44_83:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	beq	$a0, $a1, .LBB44_87
# %bb.84:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 280
	addi.d	$a2, $sp, 296
	beq	$a1, $a2, .LBB44_90
# %bb.85:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a2, $sp, 720
	vld	$vr0, $sp, 288
	st.d	$a1, $sp, 704
	vst	$vr0, $sp, 712
	beqz	$a0, .LBB44_89
.LBB44_86:                              #   in Loop: Header=BB44_57 Depth=2
	st.d	$a0, $sp, 280
	st.d	$a2, $sp, 296
	b	.LBB44_95
.LBB44_87:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 280
	addi.d	$a2, $sp, 296
	beq	$a1, $a2, .LBB44_90
# %bb.88:                               #   in Loop: Header=BB44_57 Depth=2
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 288
	st.d	$a1, $sp, 704
	vst	$vr0, $sp, 712
	bnez	$a0, .LBB44_86
.LBB44_89:                              #   in Loop: Header=BB44_57 Depth=2
	addi.d	$a0, $sp, 296
	st.d	$a0, $sp, 280
	b	.LBB44_95
.LBB44_90:                              #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a2, $sp, 288
	beqz	$a2, .LBB44_94
# %bb.91:                               #   in Loop: Header=BB44_57 Depth=2
	bne	$a2, $s4, .LBB44_93
# %bb.92:                               #   in Loop: Header=BB44_57 Depth=2
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB44_94
.LBB44_93:                              #   in Loop: Header=BB44_57 Depth=2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB44_94:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 288
	ld.d	$a1, $sp, 704
	st.d	$a0, $sp, 712
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 280
.LBB44_95:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB44_57 Depth=2
	st.d	$zero, $sp, 288
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 280
	addi.d	$a1, $sp, 296
	beq	$a0, $a1, .LBB44_97
# %bb.96:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i132
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_97:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	st.d	$a0, $sp, 312
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	stx.d	$a1, $a0, $s3
	ld.d	$a0, $sp, 408
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	st.d	$a1, $sp, 328
	st.d	$s1, $sp, 336
	addi.d	$a1, $sp, 424
	beq	$a0, $a1, .LBB44_99
# %bb.98:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 424
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_99:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
                                        #   in Loop: Header=BB44_57 Depth=2
	st.d	$fp, $sp, 336
	addi.d	$a0, $sp, 392
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 152                   # 8-byte Folded Reload
	st.d	$a0, $sp, 312
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 160                   # 8-byte Folded Reload
	stx.d	$a1, $a0, $s3
	st.d	$zero, $sp, 320
	addi.d	$a0, $sp, 440
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ori	$fp, $zero, 1
.LBB44_100:                             #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $s2, 96
	ld.d	$a1, $sp, 216                   # 8-byte Folded Reload
	slli.d	$a2, $a1, 5
	add.d	$a1, $a0, $a2
	st.d	$s7, $sp, 312
	ld.d	$a1, $a1, 8
	ldx.d	$s1, $a0, $a2
	st.d	$a1, $sp, 280
	move	$a0, $s7
	bltu	$a1, $s0, .LBB44_103
# %bb.101:                              # %.noexc.i.i136
                                        #   in Loop: Header=BB44_57 Depth=2
.Ltmp1886:
	addi.d	$a0, $sp, 312
	addi.d	$a1, $sp, 280
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1887:
# %bb.102:                              # %.noexc137
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 280
	st.d	$a0, $sp, 312
	st.d	$a1, $sp, 328
.LBB44_103:                             # %._crit_edge.i.i.i135
                                        #   in Loop: Header=BB44_57 Depth=2
	beq	$a1, $s6, .LBB44_107
# %bb.104:                              # %._crit_edge.i.i.i135
                                        #   in Loop: Header=BB44_57 Depth=2
	bnez	$a1, .LBB44_106
# %bb.105:                              #   in Loop: Header=BB44_57 Depth=2
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB44_107
	.p2align	4, , 16
.LBB44_106:                             #   in Loop: Header=BB44_57 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB44_107:                             #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 280
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	addi.w	$s4, $a1, 0
	st.d	$a0, $sp, 320
	st.d	$zero, $sp, 296
	vld	$vr0, $sp, 192                  # 16-byte Folded Reload
	vst	$vr0, $sp, 280
	move	$s1, $zero
	blez	$s4, .LBB44_187
# %bb.108:                              # %.lr.ph604.preheader
                                        #   in Loop: Header=BB44_57 Depth=2
	move	$s2, $zero
	st.d	$s4, $sp, 224                   # 8-byte Folded Spill
	b	.LBB44_112
.LBB44_109:                             #   in Loop: Header=BB44_112 Depth=3
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB44_110:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit.thread
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 872
	st.d	$a0, $s1, 8
	ld.d	$a0, $sp, 288
	addi.d	$s1, $a0, 32
	st.d	$s1, $sp, 288
.LBB44_111:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit160
                                        #   in Loop: Header=BB44_112 Depth=3
	addi.w	$s2, $s2, 1
	beq	$s2, $s4, .LBB44_187
.LBB44_112:                             # %.lr.ph604
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB44_155 Depth 4
                                        #         Child Loop BB44_141 Depth 4
                                        #         Child Loop BB44_169 Depth 4
	beqz	$s2, .LBB44_122
# %bb.113:                              # %.lr.ph604
                                        #   in Loop: Header=BB44_112 Depth=3
	beq	$s2, $fp, .LBB44_119
# %bb.114:                              # %.lr.ph604
                                        #   in Loop: Header=BB44_112 Depth=3
	ori	$a0, $zero, 2
	bne	$s2, $a0, .LBB44_111
# %bb.115:                              # %.lr.ph604._crit_edge644
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$s8, $sp, 296
.LBB44_116:                             #   in Loop: Header=BB44_112 Depth=3
	beq	$s1, $s8, .LBB44_129
# %bb.117:                              #   in Loop: Header=BB44_112 Depth=3
	addi.d	$a0, $s1, 16
	st.d	$a0, $s1, 0
	ld.d	$a1, $sp, 768
	ld.d	$s3, $sp, 760
	st.d	$a1, $sp, 872
	bltu	$a1, $s0, .LBB44_126
# %bb.118:                              # %.noexc.i.i157
                                        #   in Loop: Header=BB44_112 Depth=3
.Ltmp1896:
	addi.d	$a1, $sp, 872
	move	$a0, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1897:
	b	.LBB44_125
	.p2align	4, , 16
.LBB44_119:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$s8, $sp, 296
	beq	$s1, $s8, .LBB44_143
# %bb.120:                              #   in Loop: Header=BB44_112 Depth=3
	addi.d	$a0, $s1, 16
	st.d	$a0, $s1, 0
	ld.d	$a1, $sp, 320
	ld.d	$s3, $sp, 312
	st.d	$a1, $sp, 872
	bltu	$a1, $s0, .LBB44_126
# %bb.121:                              # %.noexc.i.i150
                                        #   in Loop: Header=BB44_112 Depth=3
.Ltmp1889:
	addi.d	$a1, $sp, 872
	move	$a0, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1890:
	b	.LBB44_125
	.p2align	4, , 16
.LBB44_122:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 296
	beq	$s1, $a0, .LBB44_157
# %bb.123:                              #   in Loop: Header=BB44_112 Depth=3
	addi.d	$a0, $s1, 16
	st.d	$a0, $s1, 0
	ld.d	$a1, $sp, 712
	ld.d	$s3, $sp, 704
	st.d	$a1, $sp, 872
	bltu	$a1, $s0, .LBB44_126
# %bb.124:                              # %.noexc.i.i144
                                        #   in Loop: Header=BB44_112 Depth=3
.Ltmp1903:
	addi.d	$a1, $sp, 872
	move	$a0, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1904:
.LBB44_125:                             # %.noexc158
                                        #   in Loop: Header=BB44_112 Depth=3
	st.d	$a0, $s1, 0
	ld.d	$a1, $sp, 872
	st.d	$a1, $s1, 16
	ld.d	$s6, $sp, 248                   # 8-byte Folded Reload
.LBB44_126:                             # %._crit_edge.i.i.i155
                                        #   in Loop: Header=BB44_112 Depth=3
	beq	$a1, $s6, .LBB44_110
# %bb.127:                              # %._crit_edge.i.i.i155
                                        #   in Loop: Header=BB44_112 Depth=3
	beqz	$a1, .LBB44_109
# %bb.128:                              #   in Loop: Header=BB44_112 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB44_110
.LBB44_129:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$s1, $sp, 280
	sub.d	$s5, $s8, $s1
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB44_281
# %bb.130:                              # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit.i332
                                        #   in Loop: Header=BB44_112 Depth=3
	srai.d	$a0, $s5, 5
	sltu	$a1, $fp, $a0
	masknez	$a2, $fp, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	lu52i.d	$a1, $s6, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s3, $a0, 5
.Ltmp1898:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1899:
# %bb.131:                              # %.noexc353
                                        #   in Loop: Header=BB44_112 Depth=3
	move	$s6, $a0
	add.d	$s4, $a0, $s5
	ld.d	$a1, $sp, 768
	ld.d	$s7, $sp, 760
	addi.d	$a0, $s4, 16
	stx.d	$a0, $s6, $s5
	st.d	$a1, $sp, 872
	bltu	$a1, $s0, .LBB44_134
# %bb.132:                              # %.noexc.i.i349
                                        #   in Loop: Header=BB44_112 Depth=3
.Ltmp1900:
	addi.d	$a1, $sp, 872
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1901:
# %bb.133:                              # %.noexc.i351
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a1, $sp, 872
	st.d	$a0, $s4, 0
	st.d	$a1, $s4, 16
.LBB44_134:                             # %._crit_edge.i.i.i334
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a2, $sp, 248                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB44_137
# %bb.135:                              # %._crit_edge.i.i.i334
                                        #   in Loop: Header=BB44_112 Depth=3
	bnez	$a1, .LBB44_174
# %bb.136:                              #   in Loop: Header=BB44_112 Depth=3
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
.LBB44_137:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 872
	st.d	$a0, $s4, 8
	move	$s0, $s6
	beq	$s1, $s8, .LBB44_175
.LBB44_138:                             # %.lr.ph.i.i.i.i336.preheader
                                        #   in Loop: Header=BB44_112 Depth=3
	move	$s7, $zero
	b	.LBB44_141
	.p2align	4, , 16
.LBB44_139:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i339
                                        #   in Loop: Header=BB44_141 Depth=4
	st.d	$a1, $s5, 0
	ld.d	$a0, $s4, 0
	st.d	$a0, $s5, 16
	ld.d	$fp, $s0, 8
.LBB44_140:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i342
                                        #   in Loop: Header=BB44_141 Depth=4
	st.d	$fp, $s5, 8
	stx.d	$s4, $s1, $s7
	st.d	$zero, $s0, 8
	addi.d	$s7, $s7, 32
	add.d	$a0, $s1, $s7
	st.b	$zero, $s4, 0
	beq	$a0, $s8, .LBB44_171
.LBB44_141:                             # %.lr.ph.i.i.i.i336
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        #       Parent Loop BB44_112 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	add.d	$s5, $s6, $s7
	addi.d	$a0, $s5, 16
	stx.d	$a0, $s6, $s7
	ldx.d	$a1, $s1, $s7
	add.d	$s0, $s1, $s7
	addi.d	$s4, $s0, 16
	bne	$s4, $a1, .LBB44_139
# %bb.142:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i348
                                        #   in Loop: Header=BB44_141 Depth=4
	ld.d	$fp, $s0, 8
	addi.d	$a2, $fp, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB44_140
.LBB44_143:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$s1, $sp, 280
	sub.d	$s5, $s8, $s1
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB44_281
# %bb.144:                              # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit.i307
                                        #   in Loop: Header=BB44_112 Depth=3
	srai.d	$a0, $s5, 5
	sltu	$a1, $fp, $a0
	masknez	$a2, $fp, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	lu52i.d	$a1, $s6, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s3, $a0, 5
.Ltmp1891:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1892:
# %bb.145:                              # %.noexc328
                                        #   in Loop: Header=BB44_112 Depth=3
	move	$s6, $a0
	add.d	$s4, $a0, $s5
	ld.d	$a1, $sp, 320
	ld.d	$s7, $sp, 312
	addi.d	$a0, $s4, 16
	stx.d	$a0, $s6, $s5
	st.d	$a1, $sp, 872
	bltu	$a1, $s0, .LBB44_148
# %bb.146:                              # %.noexc.i.i324
                                        #   in Loop: Header=BB44_112 Depth=3
.Ltmp1893:
	addi.d	$a1, $sp, 872
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1894:
# %bb.147:                              # %.noexc.i326
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a1, $sp, 872
	st.d	$a0, $s4, 0
	st.d	$a1, $s4, 16
.LBB44_148:                             # %._crit_edge.i.i.i309
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a2, $sp, 248                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB44_151
# %bb.149:                              # %._crit_edge.i.i.i309
                                        #   in Loop: Header=BB44_112 Depth=3
	bnez	$a1, .LBB44_178
# %bb.150:                              #   in Loop: Header=BB44_112 Depth=3
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
.LBB44_151:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 872
	st.d	$a0, $s4, 8
	move	$s0, $s6
	beq	$s1, $s8, .LBB44_179
.LBB44_152:                             # %.lr.ph.i.i.i.i311.preheader
                                        #   in Loop: Header=BB44_112 Depth=3
	move	$s7, $zero
	b	.LBB44_155
	.p2align	4, , 16
.LBB44_153:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i314
                                        #   in Loop: Header=BB44_155 Depth=4
	st.d	$a1, $s5, 0
	ld.d	$a0, $s4, 0
	st.d	$a0, $s5, 16
	ld.d	$fp, $s0, 8
.LBB44_154:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i317
                                        #   in Loop: Header=BB44_155 Depth=4
	st.d	$fp, $s5, 8
	stx.d	$s4, $s1, $s7
	st.d	$zero, $s0, 8
	addi.d	$s7, $s7, 32
	add.d	$a0, $s1, $s7
	st.b	$zero, $s4, 0
	beq	$a0, $s8, .LBB44_172
.LBB44_155:                             # %.lr.ph.i.i.i.i311
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        #       Parent Loop BB44_112 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	add.d	$s5, $s6, $s7
	addi.d	$a0, $s5, 16
	stx.d	$a0, $s6, $s7
	ldx.d	$a1, $s1, $s7
	add.d	$s0, $s1, $s7
	addi.d	$s4, $s0, 16
	bne	$s4, $a1, .LBB44_153
# %bb.156:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i323
                                        #   in Loop: Header=BB44_155 Depth=4
	ld.d	$fp, $s0, 8
	addi.d	$a2, $fp, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB44_154
.LBB44_157:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$s3, $sp, 280
	sub.d	$s5, $s1, $s3
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB44_281
# %bb.158:                              # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB44_112 Depth=3
	srai.d	$a0, $s5, 5
	sltu	$a1, $fp, $a0
	masknez	$a2, $fp, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	lu52i.d	$a1, $s6, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s8, $a0, 5
.Ltmp1905:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1906:
# %bb.159:                              # %.noexc304
                                        #   in Loop: Header=BB44_112 Depth=3
	move	$s6, $a0
	add.d	$s4, $a0, $s5
	ld.d	$a1, $sp, 712
	ld.d	$s7, $sp, 704
	addi.d	$a0, $s4, 16
	stx.d	$a0, $s6, $s5
	st.d	$a1, $sp, 872
	bltu	$a1, $s0, .LBB44_162
# %bb.160:                              # %.noexc.i.i301
                                        #   in Loop: Header=BB44_112 Depth=3
.Ltmp1908:
	addi.d	$a1, $sp, 872
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1909:
# %bb.161:                              # %.noexc.i302
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a1, $sp, 872
	st.d	$a0, $s4, 0
	st.d	$a1, $s4, 16
.LBB44_162:                             # %._crit_edge.i.i.i292
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a2, $sp, 248                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB44_165
# %bb.163:                              # %._crit_edge.i.i.i292
                                        #   in Loop: Header=BB44_112 Depth=3
	bnez	$a1, .LBB44_182
# %bb.164:                              #   in Loop: Header=BB44_112 Depth=3
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
.LBB44_165:                             #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 872
	st.d	$a0, $s4, 8
	move	$s0, $s6
	beq	$s3, $s1, .LBB44_183
.LBB44_166:                             # %.lr.ph.i.i.i.i294.preheader
                                        #   in Loop: Header=BB44_112 Depth=3
	move	$s7, $zero
	b	.LBB44_169
	.p2align	4, , 16
.LBB44_167:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_169 Depth=4
	st.d	$a1, $s5, 0
	ld.d	$a0, $s4, 0
	st.d	$a0, $s5, 16
	ld.d	$fp, $s0, 8
.LBB44_168:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB44_169 Depth=4
	st.d	$fp, $s5, 8
	stx.d	$s4, $s3, $s7
	st.d	$zero, $s0, 8
	addi.d	$s7, $s7, 32
	add.d	$a0, $s3, $s7
	st.b	$zero, $s4, 0
	beq	$a0, $s1, .LBB44_173
.LBB44_169:                             # %.lr.ph.i.i.i.i294
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        #       Parent Loop BB44_112 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	add.d	$s5, $s6, $s7
	addi.d	$a0, $s5, 16
	stx.d	$a0, $s6, $s7
	ldx.d	$a1, $s3, $s7
	add.d	$s0, $s3, $s7
	addi.d	$s4, $s0, 16
	bne	$s4, $a1, .LBB44_167
# %bb.170:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_169 Depth=4
	ld.d	$fp, $s0, 8
	addi.d	$a2, $fp, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB44_168
.LBB44_171:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i344.loopexit
                                        #   in Loop: Header=BB44_112 Depth=3
	add.d	$s0, $s6, $s7
	ori	$fp, $zero, 1
	bnez	$s1, .LBB44_176
	b	.LBB44_177
.LBB44_172:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i319.loopexit
                                        #   in Loop: Header=BB44_112 Depth=3
	add.d	$s0, $s6, $s7
	ori	$fp, $zero, 1
	bnez	$s1, .LBB44_180
	b	.LBB44_181
.LBB44_173:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i.loopexit
                                        #   in Loop: Header=BB44_112 Depth=3
	add.d	$s0, $s6, $s7
	ori	$fp, $zero, 1
	bnez	$s3, .LBB44_184
	b	.LBB44_185
.LBB44_174:                             #   in Loop: Header=BB44_112 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 872
	st.d	$a0, $s4, 8
	move	$s0, $s6
	bne	$s1, $s8, .LBB44_138
.LBB44_175:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i344
                                        #   in Loop: Header=BB44_112 Depth=3
	beqz	$s1, .LBB44_177
.LBB44_176:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i.i347
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 296
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_177:                             # %.noexc159
                                        #   in Loop: Header=BB44_112 Depth=3
	addi.d	$s1, $s0, 32
	st.d	$s6, $sp, 280
	st.d	$s1, $sp, 288
	add.d	$a0, $s6, $s3
	b	.LBB44_186
.LBB44_178:                             #   in Loop: Header=BB44_112 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 872
	st.d	$a0, $s4, 8
	move	$s0, $s6
	bne	$s1, $s8, .LBB44_152
.LBB44_179:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i319
                                        #   in Loop: Header=BB44_112 Depth=3
	beqz	$s1, .LBB44_181
.LBB44_180:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i.i322
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 296
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_181:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit153
                                        #   in Loop: Header=BB44_112 Depth=3
	addi.d	$s1, $s0, 32
	st.d	$s6, $sp, 280
	st.d	$s1, $sp, 288
	add.d	$s8, $s6, $s3
	st.d	$s8, $sp, 296
	addi.d	$s7, $sp, 328
	ori	$s0, $zero, 16
	ori	$a0, $zero, 2
	ld.d	$s6, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 224                   # 8-byte Folded Reload
	bne	$s2, $a0, .LBB44_111
	b	.LBB44_116
.LBB44_182:                             #   in Loop: Header=BB44_112 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 872
	st.d	$a0, $s4, 8
	move	$s0, $s6
	bne	$s3, $s1, .LBB44_166
.LBB44_183:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i
                                        #   in Loop: Header=BB44_112 Depth=3
	beqz	$s3, .LBB44_185
.LBB44_184:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i.i
                                        #   in Loop: Header=BB44_112 Depth=3
	ld.d	$a0, $sp, 296
	sub.d	$a1, $a0, $s3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_185:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB44_112 Depth=3
	addi.d	$s1, $s0, 32
	st.d	$s6, $sp, 280
	st.d	$s1, $sp, 288
	add.d	$a0, $s6, $s8
.LBB44_186:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit160
                                        #   in Loop: Header=BB44_112 Depth=3
	st.d	$a0, $sp, 296
	addi.d	$s7, $sp, 328
	ori	$s0, $zero, 16
	ld.d	$s6, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 224                   # 8-byte Folded Reload
	b	.LBB44_111
	.p2align	4, , 16
.LBB44_187:                             # %._crit_edge
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$s2, $sp, 856
	ld.d	$a0, $sp, 864
	beq	$s2, $a0, .LBB44_191
# %bb.188:                              #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 280
	sub.d	$s3, $s1, $a0
	st.d	$zero, $s2, 16
	vld	$vr0, $sp, 192                  # 16-byte Folded Reload
	vst	$vr0, $s2, 0
	beq	$s1, $a0, .LBB44_200
# %bb.189:                              # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i.i.i.i
                                        #   in Loop: Header=BB44_57 Depth=2
.Ltmp1914:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1915:
# %bb.190:                              #   in Loop: Header=BB44_57 Depth=2
	move	$s1, $a0
	b	.LBB44_201
	.p2align	4, , 16
.LBB44_191:                             #   in Loop: Header=BB44_57 Depth=2
	ld.d	$s1, $sp, 848
	sub.d	$s5, $s2, $s1
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB44_283
# %bb.192:                              # %_ZNKSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB44_57 Depth=2
	srli.d	$a0, $s5, 3
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	mul.d	$a0, $a0, $a1
	sltu	$a1, $fp, $a0
	maskeqz	$a2, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	bstrins.d	$a1, $a1, 58, 32
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$fp, $a0, $a1
	slli.d	$a0, $fp, 4
	alsl.d	$s4, $fp, $a0, 3
.Ltmp1919:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1920:
# %bb.193:                              # %.noexc279
                                        #   in Loop: Header=BB44_57 Depth=2
	move	$s3, $a0
	add.d	$a0, $a0, $s5
.Ltmp1922:
	addi.d	$a1, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1923:
# %bb.194:                              # %_ZNSt16allocator_traitsISaISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEE9constructIS8_JRKS8_EEEvRS9_PT_DpOT0_.exit.i
                                        #   in Loop: Header=BB44_57 Depth=2
	move	$s4, $s3
	vld	$vr1, $sp, 192                  # 16-byte Folded Reload
	beq	$s1, $s2, .LBB44_197
# %bb.195:                              # %.lr.ph.i.i.i.i275.preheader
                                        #   in Loop: Header=BB44_57 Depth=2
	move	$s4, $s3
	move	$a0, $s1
	.p2align	4, , 16
.LBB44_196:                             # %.lr.ph.i.i.i.i275
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	vld	$vr0, $a0, 0
	vst	$vr0, $s4, 0
	ld.d	$a1, $a0, 16
	st.d	$a1, $s4, 16
	st.d	$zero, $a0, 16
	vst	$vr1, $a0, 0
	addi.d	$a0, $a0, 24
	addi.d	$s4, $s4, 24
	bne	$a0, $s2, .LBB44_196
.LBB44_197:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE11_S_relocateEPS7_SA_SA_RS8_.exit.i
                                        #   in Loop: Header=BB44_57 Depth=2
	beqz	$s1, .LBB44_199
# %bb.198:                              # %_ZNSt12_Vector_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EESaIS8_EE13_M_deallocateEPS8_m.exit.i.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 864
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_199:                             # %.noexc140
                                        #   in Loop: Header=BB44_57 Depth=2
	addi.d	$a0, $s4, 24
	st.d	$s3, $sp, 848
	st.d	$a0, $sp, 856
	ori	$a0, $zero, 24
	mul.d	$a0, $fp, $a0
	add.d	$a0, $s3, $a0
	st.d	$a0, $sp, 864
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	ld.d	$a0, $sp, 280
	ld.d	$fp, $sp, 288
	bne	$a0, $fp, .LBB44_203
	b	.LBB44_216
	.p2align	4, , 16
.LBB44_200:                             #   in Loop: Header=BB44_57 Depth=2
	move	$s1, $zero
.LBB44_201:                             # %.noexc288
                                        #   in Loop: Header=BB44_57 Depth=2
	st.d	$s1, $s2, 0
	st.d	$s1, $s2, 8
	add.d	$a0, $s1, $s3
	ld.d	$fp, $sp, 280
	ld.d	$s4, $sp, 288
	st.d	$a0, $s2, 16
	st.d	$s1, $sp, 888
	st.d	$s1, $sp, 872
	addi.d	$a0, $sp, 888
	st.d	$a0, $sp, 880
	bne	$fp, $s4, .LBB44_209
.LBB44_202:                             # %.noexc139
                                        #   in Loop: Header=BB44_57 Depth=2
	st.d	$s1, $s2, 8
	ld.d	$a0, $sp, 856
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 856
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	ld.d	$a0, $sp, 280
	ld.d	$fp, $sp, 288
	beq	$a0, $fp, .LBB44_216
.LBB44_203:                             # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB44_57 Depth=2
	addi.d	$s0, $a0, 16
	b	.LBB44_205
	.p2align	4, , 16
.LBB44_204:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB44_205 Depth=3
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB44_215
.LBB44_205:                             # %.lr.ph.i.i
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB44_204
# %bb.206:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i161
                                        #   in Loop: Header=BB44_205 Depth=3
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_204
	.p2align	4, , 16
.LBB44_207:                             #   in Loop: Header=BB44_209 Depth=3
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB44_208:                             #   in Loop: Header=BB44_209 Depth=3
	ld.d	$a0, $sp, 896
	ld.d	$a1, $sp, 888
	st.d	$a0, $s1, 8
	addi.d	$fp, $fp, 32
	addi.d	$s1, $a1, 32
	st.d	$s1, $sp, 888
	beq	$fp, $s4, .LBB44_202
.LBB44_209:                             # %.lr.ph.i.i.i.i284
                                        #   Parent Loop BB44_32 Depth=1
                                        #     Parent Loop BB44_57 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	addi.d	$a0, $s1, 16
	st.d	$a0, $s1, 0
	ld.d	$a1, $fp, 8
	ld.d	$s3, $fp, 0
	st.d	$a1, $sp, 896
	bltu	$a1, $s0, .LBB44_212
# %bb.210:                              # %.noexc.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_209 Depth=3
.Ltmp1916:
	addi.d	$a1, $sp, 896
	move	$a0, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1917:
# %bb.211:                              # %.noexc.i.i.i.i
                                        #   in Loop: Header=BB44_209 Depth=3
	st.d	$a0, $s1, 0
	ld.d	$a1, $sp, 896
	st.d	$a1, $s1, 16
.LBB44_212:                             # %._crit_edge.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_209 Depth=3
	beq	$a1, $s6, .LBB44_208
# %bb.213:                              # %._crit_edge.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_209 Depth=3
	beqz	$a1, .LBB44_207
# %bb.214:                              #   in Loop: Header=BB44_209 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB44_208
	.p2align	4, , 16
.LBB44_215:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 280
	ori	$s0, $zero, 16
.LBB44_216:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
                                        #   in Loop: Header=BB44_57 Depth=2
	ori	$fp, $zero, 1
	beqz	$a0, .LBB44_218
# %bb.217:                              #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 296
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_218:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 312
	beq	$a0, $s7, .LBB44_220
# %bb.219:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i165
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_220:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit167
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	beq	$a0, $a1, .LBB44_56
# %bb.221:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i168
                                        #   in Loop: Header=BB44_57 Depth=2
	ld.d	$a1, $sp, 720
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_56
	.p2align	4, , 16
.LBB44_222:                             # %._crit_edge609.loopexit
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$fp, $sp, 736
.LBB44_223:                             # %._crit_edge609
                                        #   in Loop: Header=BB44_32 Depth=1
	beqz	$fp, .LBB44_225
# %bb.224:                              #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a0, $sp, 752
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_225:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	beq	$a0, $a1, .LBB44_227
# %bb.226:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i114
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a1, $sp, 776
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_227:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit116
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$fp, $sp, 792
.LBB44_228:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread
                                        #   in Loop: Header=BB44_32 Depth=1
	addi.d	$a0, $sp, 808
	beq	$fp, $a0, .LBB44_31
# %bb.229:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i179
                                        #   in Loop: Header=BB44_32 Depth=1
	ld.d	$a0, $sp, 808
	addi.d	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_31
.LBB44_230:                             # %._crit_edge613
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.b	$a0, $a0, %pc_lo12(_ZN2PPL10index_baseE)
	ori	$a1, $zero, 1
	andn	$a1, $a1, $a0
.Ltmp1931:
	addi.d	$a0, $sp, 760
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp1932:
# %bb.231:
	ld.d	$s1, $sp, 856
	ld.d	$fp, $sp, 848
	sub.d	$s0, $s1, $fp
	st.d	$zero, $sp, 256
	vld	$vr0, $sp, 192                  # 16-byte Folded Reload
	vst	$vr0, $sp, 264
	beq	$s1, $fp, .LBB44_236
# %bb.232:                              # %_ZNSt15__new_allocatorISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEE8allocateEmPKv.exit.i.i.i.i
.Ltmp1933:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1934:
# %bb.233:                              # %.noexc191
	st.d	$a0, $sp, 256
	st.d	$a0, $sp, 264
	add.d	$a1, $a0, $s0
	st.d	$a1, $sp, 272
	st.d	$a0, $sp, 792
	st.d	$a0, $sp, 312
	addi.d	$a1, $sp, 792
	st.d	$a1, $sp, 320
	.p2align	4, , 16
.LBB44_234:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1935:
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1936:
# %bb.235:                              # %_ZSt10_ConstructISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEJRKS8_EEvPT_DpOT0_.exit.i.i.i.i
                                        #   in Loop: Header=BB44_234 Depth=1
	ld.d	$a0, $sp, 792
	addi.d	$fp, $fp, 24
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 792
	bne	$fp, $s1, .LBB44_234
	b	.LBB44_237
.LBB44_236:                             # %.noexc191.thread
	move	$a0, $zero
	vst	$vr0, $sp, 256
	st.d	$s0, $sp, 272
.LBB44_237:                             # %.loopexit
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	sub.d	$a1, $a1, $a2
	srli.d	$a1, $a1, 3
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	mul.w	$a2, $a1, $a2
	st.d	$a0, $sp, 264
.Ltmp1938:
	addi.d	$a0, $sp, 760
	addi.d	$a1, $sp, 256
	ori	$a3, $zero, 3
	ori	$a4, $zero, 3
	ori	$a5, $zero, 85
	ld.d	$a6, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils13print_stringsESt6vectorIS1_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESaIS9_EEiiiiRNS2_18basic_stringstreamIcS5_S6_EE)
	jirl	$ra, $ra, 0
.Ltmp1939:
# %bb.238:
	ld.d	$fp, $sp, 256
	ld.d	$s0, $sp, 264
	bne	$fp, $s0, .LBB44_246
# %bb.239:                              # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit.i
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	beqz	$fp, .LBB44_241
.LBB44_240:
	ld.d	$a0, $sp, 272
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_241:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev.exit
	ld.d	$a1, $s0, 0
	ld.d	$a2, $s0, 8
.Ltmp1941:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1942:
# %bb.242:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit204
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB44_288
# %bb.243:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i358
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB44_255
# %bb.244:
	ld.bu	$a0, $s0, 67
	b	.LBB44_257
	.p2align	4, , 16
.LBB44_245:                             # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i.i
                                        #   in Loop: Header=BB44_246 Depth=1
	addi.d	$fp, $fp, 24
	beq	$fp, $s0, .LBB44_254
.LBB44_246:                             # %.lr.ph.i.i195
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB44_249 Depth 2
	ld.d	$a0, $fp, 0
	ld.d	$s1, $fp, 8
	beq	$a0, $s1, .LBB44_252
# %bb.247:                              # %.lr.ph.i.i.i.i.i197.preheader
                                        #   in Loop: Header=BB44_246 Depth=1
	addi.d	$s2, $a0, 16
	b	.LBB44_249
	.p2align	4, , 16
.LBB44_248:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB44_249 Depth=2
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB44_251
.LBB44_249:                             # %.lr.ph.i.i.i.i.i197
                                        #   Parent Loop BB44_246 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB44_248
# %bb.250:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_249 Depth=2
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_248
	.p2align	4, , 16
.LBB44_251:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i
                                        #   in Loop: Header=BB44_246 Depth=1
	ld.d	$a0, $fp, 0
.LBB44_252:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i
                                        #   in Loop: Header=BB44_246 Depth=1
	beqz	$a0, .LBB44_245
# %bb.253:                              #   in Loop: Header=BB44_246 Depth=1
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_245
.LBB44_254:                             # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split.i
	ld.d	$fp, $sp, 256
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	bnez	$fp, .LBB44_240
	b	.LBB44_241
.LBB44_255:
.Ltmp1943:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1944:
# %bb.256:                              # %.noexc362
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp1945:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp1946:
.LBB44_257:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1947:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1948:
# %bb.258:                              # %.noexc364
.Ltmp1949:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1950:
# %bb.259:                              # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 824
	ld.d	$fp, $sp, 832
	beq	$a0, $fp, .LBB44_265
# %bb.260:                              # %.lr.ph.i.i207.preheader
	addi.d	$s0, $a0, 16
	b	.LBB44_262
	.p2align	4, , 16
.LBB44_261:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i210
                                        #   in Loop: Header=BB44_262 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB44_264
.LBB44_262:                             # %.lr.ph.i.i207
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB44_261
# %bb.263:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i209
                                        #   in Loop: Header=BB44_262 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_261
.LBB44_264:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i212
	ld.d	$a0, $sp, 824
.LBB44_265:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i214
	beqz	$a0, .LBB44_267
# %bb.266:
	ld.d	$a1, $sp, 840
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_267:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit217
	ld.d	$fp, $sp, 848
	ld.d	$s0, $sp, 856
	bne	$fp, $s0, .LBB44_272
# %bb.268:                              # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit.i235
	beqz	$fp, .LBB44_270
.LBB44_269:
	ld.d	$a0, $sp, 864
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_270:
	ld.d	$s8, $sp, 904                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 912                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 920                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 928                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 936                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 944                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 952                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 960                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 968                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 976                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 984                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 992
	ret
	.p2align	4, , 16
.LBB44_271:                             # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i.i231
                                        #   in Loop: Header=BB44_272 Depth=1
	addi.d	$fp, $fp, 24
	beq	$fp, $s0, .LBB44_280
.LBB44_272:                             # %.lr.ph.i.i219
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB44_275 Depth 2
	ld.d	$a0, $fp, 0
	ld.d	$s1, $fp, 8
	beq	$a0, $s1, .LBB44_278
# %bb.273:                              # %.lr.ph.i.i.i.i.i222.preheader
                                        #   in Loop: Header=BB44_272 Depth=1
	addi.d	$s2, $a0, 16
	b	.LBB44_275
	.p2align	4, , 16
.LBB44_274:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i225
                                        #   in Loop: Header=BB44_275 Depth=2
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB44_277
.LBB44_275:                             # %.lr.ph.i.i.i.i.i222
                                        #   Parent Loop BB44_272 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB44_274
# %bb.276:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i224
                                        #   in Loop: Header=BB44_275 Depth=2
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_274
	.p2align	4, , 16
.LBB44_277:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i227
                                        #   in Loop: Header=BB44_272 Depth=1
	ld.d	$a0, $fp, 0
.LBB44_278:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i229
                                        #   in Loop: Header=BB44_272 Depth=1
	beqz	$a0, .LBB44_271
# %bb.279:                              #   in Loop: Header=BB44_272 Depth=1
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_271
.LBB44_280:                             # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split.i233
	ld.d	$fp, $sp, 848
	bnez	$fp, .LBB44_269
	b	.LBB44_270
.LBB44_281:                             # %.invoke
.Ltmp1911:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1912:
# %bb.282:                              # %.cont
.LBB44_283:
.Ltmp1925:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1926:
# %bb.284:                              # %.noexc278
.LBB44_285:
.Ltmp1928:
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1929:
# %bb.286:                              # %.noexc112
.LBB44_287:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB44_288:
.Ltmp1951:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1952:
# %bb.289:                              # %.noexc361
.LBB44_290:
.Ltmp1837:
	b	.LBB44_295
.LBB44_291:
.Ltmp1834:
	b	.LBB44_295
.LBB44_292:
.Ltmp1940:
	move	$fp, $a0
	addi.d	$a0, $sp, 256
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB44_345
.LBB44_293:
.Ltmp1842:
	move	$fp, $a0
	b	.LBB44_345
.LBB44_294:
.Ltmp1831:
.LBB44_295:
	ld.d	$a2, $sp, 312
	move	$fp, $a0
	beq	$a2, $s7, .LBB44_345
# %bb.296:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i102
	ld.d	$a0, $sp, 328
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB44_344
.LBB44_297:
.Ltmp1848:
	move	$fp, $a0
	ld.d	$a0, $sp, 792
	addi.d	$a1, $sp, 808
	bne	$a0, $a1, .LBB44_343
	b	.LBB44_345
.LBB44_298:                             # %.loopexit388
.Ltmp1851:
	b	.LBB44_301
.LBB44_299:
.Ltmp1953:
	move	$fp, $a0
	b	.LBB44_345
.LBB44_300:                             # %.loopexit.split-lp389
.Ltmp1930:
.LBB44_301:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit178
	move	$fp, $a0
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	beq	$a0, $a1, .LBB44_331
	b	.LBB44_342
.LBB44_302:
.Ltmp1845:
	move	$fp, $a0
	b	.LBB44_345
.LBB44_303:                             # %.body.i189
.Ltmp1937:
	move	$fp, $a0
	addi.d	$a0, $sp, 312
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 256
	beqz	$a0, .LBB44_345
# %bb.304:
	ld.d	$a1, $sp, 272
	sub.d	$a1, $a1, $a0
	b	.LBB44_344
.LBB44_305:                             # %.loopexit.split-lp383
.Ltmp1927:
	move	$fp, $a0
	b	.LBB44_323
.LBB44_306:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE12_Guard_allocD2Ev.exit22.i
.Ltmp1924:
	move	$fp, $a0
	move	$a0, $s3
	move	$a1, $s4
	b	.LBB44_333
.LBB44_307:
.Ltmp1885:
	ld.d	$a2, $sp, 280
	move	$fp, $a0
	addi.d	$a0, $sp, 296
	beq	$a2, $a0, .LBB44_339
# %bb.308:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 296
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_339
.LBB44_309:
.Ltmp1863:
	ld.d	$a1, $sp, 152                   # 8-byte Folded Reload
	st.d	$a1, $sp, 312
	ld.d	$a1, $a1, -24
	move	$fp, $a0
	addi.d	$a0, $sp, 312
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	stx.d	$a2, $a1, $a0
	b	.LBB44_313
.LBB44_310:
.Ltmp1857:
	move	$fp, $a0
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	beq	$a0, $a1, .LBB44_329
	b	.LBB44_340
.LBB44_311:
.Ltmp1888:
	move	$fp, $a0
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	beq	$a0, $a1, .LBB44_329
	b	.LBB44_340
.LBB44_312:
.Ltmp1866:
	move	$fp, $a0
	addi.d	$a0, $sp, 336
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 152                   # 8-byte Folded Reload
	st.d	$a0, $sp, 312
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 312
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	stx.d	$a2, $a0, $a1
.LBB44_313:                             # %.body.i
	st.d	$zero, $sp, 320
	b	.LBB44_315
.LBB44_314:
.Ltmp1860:
	move	$fp, $a0
.LBB44_315:                             # %.body.i
	addi.d	$a0, $sp, 440
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	beq	$a0, $a1, .LBB44_329
	b	.LBB44_340
.LBB44_316:
.Ltmp1854:
	move	$fp, $a0
	ld.d	$a0, $sp, 736
	beqz	$a0, .LBB44_330
	b	.LBB44_341
.LBB44_317:                             # %.loopexit382
.Ltmp1921:
	b	.LBB44_335
.LBB44_318:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22.i
.Ltmp1910:
	move	$fp, $a0
	move	$a0, $s6
	move	$a1, $s8
	b	.LBB44_322
.LBB44_319:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22.i325
.Ltmp1895:
	b	.LBB44_321
.LBB44_320:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22.i350
.Ltmp1902:
.LBB44_321:                             # %.body305
	move	$fp, $a0
	move	$a0, $s6
	move	$a1, $s3
.LBB44_322:                             # %.body305
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_323:                             # %.body305
	addi.d	$s7, $sp, 328
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 312
	beq	$a0, $s7, .LBB44_328
	b	.LBB44_336
.LBB44_324:
.Ltmp1880:
	b	.LBB44_338
.LBB44_325:                             # %.loopexit.split-lp
.Ltmp1913:
	b	.LBB44_335
.LBB44_326:                             # %.body.i286
.Ltmp1918:
	move	$fp, $a0
	addi.d	$a0, $sp, 872
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	bnez	$a0, .LBB44_332
# %bb.327:                              # %.body305
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 312
	bne	$a0, $s7, .LBB44_336
.LBB44_328:
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	bne	$a0, $a1, .LBB44_340
.LBB44_329:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176
	ld.d	$a0, $sp, 736
	bnez	$a0, .LBB44_341
.LBB44_330:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit178
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	bne	$a0, $a1, .LBB44_342
.LBB44_331:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit184
	ld.d	$a0, $sp, 792
	addi.d	$a1, $sp, 808
	beq	$a0, $a1, .LBB44_345
	b	.LBB44_343
.LBB44_332:
	ld.d	$a1, $s2, 16
	sub.d	$a1, $a1, $a0
.LBB44_333:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 312
	beq	$a0, $s7, .LBB44_328
	b	.LBB44_336
.LBB44_334:                             # %.loopexit381
.Ltmp1907:
.LBB44_335:                             # %.loopexit381
	move	$fp, $a0
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 312
	beq	$a0, $s7, .LBB44_328
.LBB44_336:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i171
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	beq	$a0, $a1, .LBB44_329
	b	.LBB44_340
.LBB44_337:
.Ltmp1877:
.LBB44_338:
	move	$fp, $a0
.LBB44_339:
	addi.d	$a0, $sp, 312
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 704
	addi.d	$a1, $sp, 720
	beq	$a0, $a1, .LBB44_329
.LBB44_340:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i174
	ld.d	$a1, $sp, 720
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 736
	beqz	$a0, .LBB44_330
.LBB44_341:
	ld.d	$a1, $sp, 752
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	beq	$a0, $a1, .LBB44_331
.LBB44_342:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i182
	ld.d	$a1, $sp, 776
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 792
	addi.d	$a1, $sp, 808
	beq	$a0, $a1, .LBB44_345
.LBB44_343:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i185
	ld.d	$a1, $sp, 808
	addi.d	$a1, $a1, 1
.LBB44_344:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB44_345:
	ld.d	$a0, $sp, 824
	ld.d	$s0, $sp, 832
	bne	$a0, $s0, .LBB44_348
# %bb.346:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i248
	bnez	$a0, .LBB44_353
.LBB44_347:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit251
	ld.d	$s0, $sp, 848
	ld.d	$s1, $sp, 856
	bne	$s0, $s1, .LBB44_357
	b	.LBB44_354
.LBB44_348:                             # %.lr.ph.i.i241.preheader
	addi.d	$s1, $a0, 16
	b	.LBB44_350
	.p2align	4, , 16
.LBB44_349:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i244
                                        #   in Loop: Header=BB44_350 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB44_352
.LBB44_350:                             # %.lr.ph.i.i241
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB44_349
# %bb.351:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i243
                                        #   in Loop: Header=BB44_350 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_349
.LBB44_352:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i246
	ld.d	$a0, $sp, 824
	beqz	$a0, .LBB44_347
.LBB44_353:
	ld.d	$a1, $sp, 840
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$s0, $sp, 848
	ld.d	$s1, $sp, 856
	bne	$s0, $s1, .LBB44_357
.LBB44_354:                             # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit.i269
	bnez	$s0, .LBB44_366
.LBB44_355:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev.exit273
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB44_356:                             # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i.i265
                                        #   in Loop: Header=BB44_357 Depth=1
	addi.d	$s0, $s0, 24
	beq	$s0, $s1, .LBB44_365
.LBB44_357:                             # %.lr.ph.i.i253
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB44_360 Depth 2
	ld.d	$a0, $s0, 0
	ld.d	$s2, $s0, 8
	beq	$a0, $s2, .LBB44_363
# %bb.358:                              # %.lr.ph.i.i.i.i.i256.preheader
                                        #   in Loop: Header=BB44_357 Depth=1
	addi.d	$s3, $a0, 16
	b	.LBB44_360
	.p2align	4, , 16
.LBB44_359:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i259
                                        #   in Loop: Header=BB44_360 Depth=2
	addi.d	$a0, $s3, 16
	addi.d	$s3, $s3, 32
	beq	$a0, $s2, .LBB44_362
.LBB44_360:                             # %.lr.ph.i.i.i.i.i256
                                        #   Parent Loop BB44_357 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s3, -16
	beq	$s3, $a0, .LBB44_359
# %bb.361:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i258
                                        #   in Loop: Header=BB44_360 Depth=2
	ld.d	$a1, $s3, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_359
	.p2align	4, , 16
.LBB44_362:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i261
                                        #   in Loop: Header=BB44_357 Depth=1
	ld.d	$a0, $s0, 0
.LBB44_363:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i263
                                        #   in Loop: Header=BB44_357 Depth=1
	beqz	$a0, .LBB44_356
# %bb.364:                              #   in Loop: Header=BB44_357 Depth=1
	ld.d	$a1, $s0, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB44_356
.LBB44_365:                             # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split.i267
	ld.d	$s0, $sp, 848
	beqz	$s0, .LBB44_355
.LBB44_366:
	ld.d	$a0, $sp, 864
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end44:
	.size	_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE, .Lfunc_end44-_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table44:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Lfunc_begin29-.Lfunc_begin29  # >> Call Site 1 <<
	.uleb128 .Ltmp1829-.Lfunc_begin29       #   Call between .Lfunc_begin29 and .Ltmp1829
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1829-.Lfunc_begin29       # >> Call Site 2 <<
	.uleb128 .Ltmp1830-.Ltmp1829            #   Call between .Ltmp1829 and .Ltmp1830
	.uleb128 .Ltmp1831-.Lfunc_begin29       #     jumps to .Ltmp1831
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1830-.Lfunc_begin29       # >> Call Site 3 <<
	.uleb128 .Ltmp1832-.Ltmp1830            #   Call between .Ltmp1830 and .Ltmp1832
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1832-.Lfunc_begin29       # >> Call Site 4 <<
	.uleb128 .Ltmp1833-.Ltmp1832            #   Call between .Ltmp1832 and .Ltmp1833
	.uleb128 .Ltmp1834-.Lfunc_begin29       #     jumps to .Ltmp1834
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1833-.Lfunc_begin29       # >> Call Site 5 <<
	.uleb128 .Ltmp1835-.Ltmp1833            #   Call between .Ltmp1833 and .Ltmp1835
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1835-.Lfunc_begin29       # >> Call Site 6 <<
	.uleb128 .Ltmp1836-.Ltmp1835            #   Call between .Ltmp1835 and .Ltmp1836
	.uleb128 .Ltmp1837-.Lfunc_begin29       #     jumps to .Ltmp1837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1836-.Lfunc_begin29       # >> Call Site 7 <<
	.uleb128 .Ltmp1838-.Ltmp1836            #   Call between .Ltmp1836 and .Ltmp1838
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1838-.Lfunc_begin29       # >> Call Site 8 <<
	.uleb128 .Ltmp1841-.Ltmp1838            #   Call between .Ltmp1838 and .Ltmp1841
	.uleb128 .Ltmp1842-.Lfunc_begin29       #     jumps to .Ltmp1842
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1841-.Lfunc_begin29       # >> Call Site 9 <<
	.uleb128 .Ltmp1843-.Ltmp1841            #   Call between .Ltmp1841 and .Ltmp1843
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1843-.Lfunc_begin29       # >> Call Site 10 <<
	.uleb128 .Ltmp1844-.Ltmp1843            #   Call between .Ltmp1843 and .Ltmp1844
	.uleb128 .Ltmp1845-.Lfunc_begin29       #     jumps to .Ltmp1845
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1844-.Lfunc_begin29       # >> Call Site 11 <<
	.uleb128 .Ltmp1846-.Ltmp1844            #   Call between .Ltmp1844 and .Ltmp1846
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1846-.Lfunc_begin29       # >> Call Site 12 <<
	.uleb128 .Ltmp1847-.Ltmp1846            #   Call between .Ltmp1846 and .Ltmp1847
	.uleb128 .Ltmp1848-.Lfunc_begin29       #     jumps to .Ltmp1848
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1847-.Lfunc_begin29       # >> Call Site 13 <<
	.uleb128 .Ltmp1849-.Ltmp1847            #   Call between .Ltmp1847 and .Ltmp1849
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1849-.Lfunc_begin29       # >> Call Site 14 <<
	.uleb128 .Ltmp1850-.Ltmp1849            #   Call between .Ltmp1849 and .Ltmp1850
	.uleb128 .Ltmp1851-.Lfunc_begin29       #     jumps to .Ltmp1851
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1850-.Lfunc_begin29       # >> Call Site 15 <<
	.uleb128 .Ltmp1852-.Ltmp1850            #   Call between .Ltmp1850 and .Ltmp1852
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1852-.Lfunc_begin29       # >> Call Site 16 <<
	.uleb128 .Ltmp1853-.Ltmp1852            #   Call between .Ltmp1852 and .Ltmp1853
	.uleb128 .Ltmp1854-.Lfunc_begin29       #     jumps to .Ltmp1854
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1853-.Lfunc_begin29       # >> Call Site 17 <<
	.uleb128 .Ltmp1855-.Ltmp1853            #   Call between .Ltmp1853 and .Ltmp1855
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1855-.Lfunc_begin29       # >> Call Site 18 <<
	.uleb128 .Ltmp1856-.Ltmp1855            #   Call between .Ltmp1855 and .Ltmp1856
	.uleb128 .Ltmp1857-.Lfunc_begin29       #     jumps to .Ltmp1857
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1856-.Lfunc_begin29       # >> Call Site 19 <<
	.uleb128 .Ltmp1858-.Ltmp1856            #   Call between .Ltmp1856 and .Ltmp1858
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1858-.Lfunc_begin29       # >> Call Site 20 <<
	.uleb128 .Ltmp1859-.Ltmp1858            #   Call between .Ltmp1858 and .Ltmp1859
	.uleb128 .Ltmp1860-.Lfunc_begin29       #     jumps to .Ltmp1860
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1861-.Lfunc_begin29       # >> Call Site 21 <<
	.uleb128 .Ltmp1862-.Ltmp1861            #   Call between .Ltmp1861 and .Ltmp1862
	.uleb128 .Ltmp1863-.Lfunc_begin29       #     jumps to .Ltmp1863
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1862-.Lfunc_begin29       # >> Call Site 22 <<
	.uleb128 .Ltmp1864-.Ltmp1862            #   Call between .Ltmp1862 and .Ltmp1864
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1864-.Lfunc_begin29       # >> Call Site 23 <<
	.uleb128 .Ltmp1865-.Ltmp1864            #   Call between .Ltmp1864 and .Ltmp1865
	.uleb128 .Ltmp1866-.Lfunc_begin29       #     jumps to .Ltmp1866
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1867-.Lfunc_begin29       # >> Call Site 24 <<
	.uleb128 .Ltmp1870-.Ltmp1867            #   Call between .Ltmp1867 and .Ltmp1870
	.uleb128 .Ltmp1880-.Lfunc_begin29       #     jumps to .Ltmp1880
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1871-.Lfunc_begin29       # >> Call Site 25 <<
	.uleb128 .Ltmp1876-.Ltmp1871            #   Call between .Ltmp1871 and .Ltmp1876
	.uleb128 .Ltmp1877-.Lfunc_begin29       #     jumps to .Ltmp1877
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1878-.Lfunc_begin29       # >> Call Site 26 <<
	.uleb128 .Ltmp1879-.Ltmp1878            #   Call between .Ltmp1878 and .Ltmp1879
	.uleb128 .Ltmp1880-.Lfunc_begin29       #     jumps to .Ltmp1880
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1881-.Lfunc_begin29       # >> Call Site 27 <<
	.uleb128 .Ltmp1884-.Ltmp1881            #   Call between .Ltmp1881 and .Ltmp1884
	.uleb128 .Ltmp1885-.Lfunc_begin29       #     jumps to .Ltmp1885
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1884-.Lfunc_begin29       # >> Call Site 28 <<
	.uleb128 .Ltmp1886-.Ltmp1884            #   Call between .Ltmp1884 and .Ltmp1886
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1886-.Lfunc_begin29       # >> Call Site 29 <<
	.uleb128 .Ltmp1887-.Ltmp1886            #   Call between .Ltmp1886 and .Ltmp1887
	.uleb128 .Ltmp1888-.Lfunc_begin29       #     jumps to .Ltmp1888
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1887-.Lfunc_begin29       # >> Call Site 30 <<
	.uleb128 .Ltmp1896-.Ltmp1887            #   Call between .Ltmp1887 and .Ltmp1896
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1896-.Lfunc_begin29       # >> Call Site 31 <<
	.uleb128 .Ltmp1904-.Ltmp1896            #   Call between .Ltmp1896 and .Ltmp1904
	.uleb128 .Ltmp1907-.Lfunc_begin29       #     jumps to .Ltmp1907
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1904-.Lfunc_begin29       # >> Call Site 32 <<
	.uleb128 .Ltmp1898-.Ltmp1904            #   Call between .Ltmp1904 and .Ltmp1898
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1898-.Lfunc_begin29       # >> Call Site 33 <<
	.uleb128 .Ltmp1899-.Ltmp1898            #   Call between .Ltmp1898 and .Ltmp1899
	.uleb128 .Ltmp1907-.Lfunc_begin29       #     jumps to .Ltmp1907
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1900-.Lfunc_begin29       # >> Call Site 34 <<
	.uleb128 .Ltmp1901-.Ltmp1900            #   Call between .Ltmp1900 and .Ltmp1901
	.uleb128 .Ltmp1902-.Lfunc_begin29       #     jumps to .Ltmp1902
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1901-.Lfunc_begin29       # >> Call Site 35 <<
	.uleb128 .Ltmp1891-.Ltmp1901            #   Call between .Ltmp1901 and .Ltmp1891
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1891-.Lfunc_begin29       # >> Call Site 36 <<
	.uleb128 .Ltmp1892-.Ltmp1891            #   Call between .Ltmp1891 and .Ltmp1892
	.uleb128 .Ltmp1907-.Lfunc_begin29       #     jumps to .Ltmp1907
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1893-.Lfunc_begin29       # >> Call Site 37 <<
	.uleb128 .Ltmp1894-.Ltmp1893            #   Call between .Ltmp1893 and .Ltmp1894
	.uleb128 .Ltmp1895-.Lfunc_begin29       #     jumps to .Ltmp1895
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1894-.Lfunc_begin29       # >> Call Site 38 <<
	.uleb128 .Ltmp1905-.Ltmp1894            #   Call between .Ltmp1894 and .Ltmp1905
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1905-.Lfunc_begin29       # >> Call Site 39 <<
	.uleb128 .Ltmp1906-.Ltmp1905            #   Call between .Ltmp1905 and .Ltmp1906
	.uleb128 .Ltmp1907-.Lfunc_begin29       #     jumps to .Ltmp1907
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1908-.Lfunc_begin29       # >> Call Site 40 <<
	.uleb128 .Ltmp1909-.Ltmp1908            #   Call between .Ltmp1908 and .Ltmp1909
	.uleb128 .Ltmp1910-.Lfunc_begin29       #     jumps to .Ltmp1910
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1909-.Lfunc_begin29       # >> Call Site 41 <<
	.uleb128 .Ltmp1914-.Ltmp1909            #   Call between .Ltmp1909 and .Ltmp1914
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1914-.Lfunc_begin29       # >> Call Site 42 <<
	.uleb128 .Ltmp1920-.Ltmp1914            #   Call between .Ltmp1914 and .Ltmp1920
	.uleb128 .Ltmp1921-.Lfunc_begin29       #     jumps to .Ltmp1921
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1922-.Lfunc_begin29       # >> Call Site 43 <<
	.uleb128 .Ltmp1923-.Ltmp1922            #   Call between .Ltmp1922 and .Ltmp1923
	.uleb128 .Ltmp1924-.Lfunc_begin29       #     jumps to .Ltmp1924
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1923-.Lfunc_begin29       # >> Call Site 44 <<
	.uleb128 .Ltmp1916-.Ltmp1923            #   Call between .Ltmp1923 and .Ltmp1916
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1916-.Lfunc_begin29       # >> Call Site 45 <<
	.uleb128 .Ltmp1917-.Ltmp1916            #   Call between .Ltmp1916 and .Ltmp1917
	.uleb128 .Ltmp1918-.Lfunc_begin29       #     jumps to .Ltmp1918
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1917-.Lfunc_begin29       # >> Call Site 46 <<
	.uleb128 .Ltmp1931-.Ltmp1917            #   Call between .Ltmp1917 and .Ltmp1931
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1931-.Lfunc_begin29       # >> Call Site 47 <<
	.uleb128 .Ltmp1934-.Ltmp1931            #   Call between .Ltmp1931 and .Ltmp1934
	.uleb128 .Ltmp1953-.Lfunc_begin29       #     jumps to .Ltmp1953
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1935-.Lfunc_begin29       # >> Call Site 48 <<
	.uleb128 .Ltmp1936-.Ltmp1935            #   Call between .Ltmp1935 and .Ltmp1936
	.uleb128 .Ltmp1937-.Lfunc_begin29       #     jumps to .Ltmp1937
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1938-.Lfunc_begin29       # >> Call Site 49 <<
	.uleb128 .Ltmp1939-.Ltmp1938            #   Call between .Ltmp1938 and .Ltmp1939
	.uleb128 .Ltmp1940-.Lfunc_begin29       #     jumps to .Ltmp1940
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1939-.Lfunc_begin29       # >> Call Site 50 <<
	.uleb128 .Ltmp1941-.Ltmp1939            #   Call between .Ltmp1939 and .Ltmp1941
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1941-.Lfunc_begin29       # >> Call Site 51 <<
	.uleb128 .Ltmp1942-.Ltmp1941            #   Call between .Ltmp1941 and .Ltmp1942
	.uleb128 .Ltmp1953-.Lfunc_begin29       #     jumps to .Ltmp1953
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1942-.Lfunc_begin29       # >> Call Site 52 <<
	.uleb128 .Ltmp1943-.Ltmp1942            #   Call between .Ltmp1942 and .Ltmp1943
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1943-.Lfunc_begin29       # >> Call Site 53 <<
	.uleb128 .Ltmp1950-.Ltmp1943            #   Call between .Ltmp1943 and .Ltmp1950
	.uleb128 .Ltmp1953-.Lfunc_begin29       #     jumps to .Ltmp1953
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1950-.Lfunc_begin29       # >> Call Site 54 <<
	.uleb128 .Ltmp1911-.Ltmp1950            #   Call between .Ltmp1950 and .Ltmp1911
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1911-.Lfunc_begin29       # >> Call Site 55 <<
	.uleb128 .Ltmp1912-.Ltmp1911            #   Call between .Ltmp1911 and .Ltmp1912
	.uleb128 .Ltmp1913-.Lfunc_begin29       #     jumps to .Ltmp1913
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1925-.Lfunc_begin29       # >> Call Site 56 <<
	.uleb128 .Ltmp1926-.Ltmp1925            #   Call between .Ltmp1925 and .Ltmp1926
	.uleb128 .Ltmp1927-.Lfunc_begin29       #     jumps to .Ltmp1927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1928-.Lfunc_begin29       # >> Call Site 57 <<
	.uleb128 .Ltmp1929-.Ltmp1928            #   Call between .Ltmp1928 and .Ltmp1929
	.uleb128 .Ltmp1930-.Lfunc_begin29       #     jumps to .Ltmp1930
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1929-.Lfunc_begin29       # >> Call Site 58 <<
	.uleb128 .Ltmp1951-.Ltmp1929            #   Call between .Ltmp1929 and .Ltmp1951
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1951-.Lfunc_begin29       # >> Call Site 59 <<
	.uleb128 .Ltmp1952-.Ltmp1951            #   Call between .Ltmp1951 and .Ltmp1952
	.uleb128 .Ltmp1953-.Lfunc_begin29       #     jumps to .Ltmp1953
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1952-.Lfunc_begin29       # >> Call Site 60 <<
	.uleb128 .Lfunc_end44-.Ltmp1952         #   Call between .Ltmp1952 and .Lfunc_end44
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.w	$fp, $a2, 0
	beqz	$fp, .LBB45_42
# %bb.1:
	move	$s1, $a2
	move	$s0, $a1
	move	$s2, $a0
	ori	$a0, $zero, 3
	bne	$fp, $a0, .LBB45_14
# %bb.2:
	ld.d	$a0, $s0, 64
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB45_5
# %bb.3:
	ld.d	$a1, $s0, 48
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB45_5
# %bb.4:
	ld.d	$a3, $s0, 56
	sub.d	$a4, $a0, $a3
.Ltmp1954:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1955:
	b	.LBB45_6
.LBB45_5:
	addi.d	$a1, $s0, 96
.Ltmp1956:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1957:
.LBB45_6:                               # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
	addi.d	$a0, $s2, 1880
.Ltmp1959:
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1960:
# %bb.7:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB45_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB45_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.w	$a0, $s1, 0
	stptr.w	$a0, $s2, 2256
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s3, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.208)
	addi.d	$a1, $a0, %pc_lo12(.L.str.208)
	ori	$a2, $zero, 61
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s1, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s3, $a1, 240
	beqz	$s3, .LBB45_43
# %bb.10:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a1, $s3, 56
	beqz	$a1, .LBB45_12
# %bb.11:
	ld.bu	$a1, $s3, 67
	b	.LBB45_13
.LBB45_12:
	move	$s4, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s4
.LBB45_13:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
.LBB45_14:
	ld.d	$a0, $s2, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB45_42
# %bb.15:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a0, $a0, $a1
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB45_43
# %bb.16:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i37
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB45_18
# %bb.17:
	ld.bu	$a0, $s2, 67
	b	.LBB45_19
.LBB45_18:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB45_19:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit40
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$s2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.209)
	addi.d	$a1, $a0, %pc_lo12(.L.str.209)
	ori	$a2, $zero, 67
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s1, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s1, $a1, 240
	beqz	$s1, .LBB45_43
# %bb.20:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i42
	ld.bu	$a1, $s1, 56
	beqz	$a1, .LBB45_22
# %bb.21:
	ld.bu	$a1, $s1, 67
	b	.LBB45_23
.LBB45_22:
	move	$s3, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s3
.LBB45_23:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit45
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.207)
	addi.d	$a1, $a0, %pc_lo12(.L.str.207)
	ori	$a2, $zero, 70
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB45_43
# %bb.24:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i47
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB45_26
# %bb.25:
	ld.bu	$a0, $s1, 67
	b	.LBB45_27
.LBB45_26:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB45_27:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit50
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 64
	addi.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB45_30
# %bb.28:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit50
	ld.d	$a1, $s0, 48
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB45_30
# %bb.29:
	ld.d	$a3, $s0, 56
	sub.d	$a4, $a0, $a3
.Ltmp1962:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1963:
	b	.LBB45_31
.LBB45_30:
	addi.d	$a1, $s0, 96
.Ltmp1964:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1965:
.LBB45_31:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit28
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
.Ltmp1967:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1968:
# %bb.32:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit29
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB45_44
# %bb.33:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i52
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB45_35
# %bb.34:
	ld.bu	$a0, $s1, 67
	b	.LBB45_37
.LBB45_35:
.Ltmp1969:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1970:
# %bb.36:                               # %.noexc55
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp1971:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp1972:
.LBB45_37:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1973:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1974:
# %bb.38:                               # %.noexc57
.Ltmp1975:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1976:
# %bb.39:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB45_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB45_41:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
.LBB45_42:
	move	$a0, $fp
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB45_43:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB45_44:
.Ltmp1977:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1978:
# %bb.45:                               # %.noexc
.LBB45_46:
.Ltmp1966:
	b	.LBB45_51
.LBB45_47:
.Ltmp1961:
	b	.LBB45_49
.LBB45_48:
.Ltmp1958:
.LBB45_49:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	bne	$a2, $s3, .LBB45_52
	b	.LBB45_53
.LBB45_50:
.Ltmp1979:
.LBB45_51:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s2, .LBB45_53
.LBB45_52:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB45_53:                              # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end45:
	.size	_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end45-_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table45:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Ltmp1954-.Lfunc_begin30       # >> Call Site 1 <<
	.uleb128 .Ltmp1957-.Ltmp1954            #   Call between .Ltmp1954 and .Ltmp1957
	.uleb128 .Ltmp1958-.Lfunc_begin30       #     jumps to .Ltmp1958
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1959-.Lfunc_begin30       # >> Call Site 2 <<
	.uleb128 .Ltmp1960-.Ltmp1959            #   Call between .Ltmp1959 and .Ltmp1960
	.uleb128 .Ltmp1961-.Lfunc_begin30       #     jumps to .Ltmp1961
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1960-.Lfunc_begin30       # >> Call Site 3 <<
	.uleb128 .Ltmp1962-.Ltmp1960            #   Call between .Ltmp1960 and .Ltmp1962
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1962-.Lfunc_begin30       # >> Call Site 4 <<
	.uleb128 .Ltmp1965-.Ltmp1962            #   Call between .Ltmp1962 and .Ltmp1965
	.uleb128 .Ltmp1966-.Lfunc_begin30       #     jumps to .Ltmp1966
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1967-.Lfunc_begin30       # >> Call Site 5 <<
	.uleb128 .Ltmp1976-.Ltmp1967            #   Call between .Ltmp1967 and .Ltmp1976
	.uleb128 .Ltmp1979-.Lfunc_begin30       #     jumps to .Ltmp1979
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1976-.Lfunc_begin30       # >> Call Site 6 <<
	.uleb128 .Ltmp1977-.Ltmp1976            #   Call between .Ltmp1976 and .Ltmp1977
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1977-.Lfunc_begin30       # >> Call Site 7 <<
	.uleb128 .Ltmp1978-.Ltmp1977            #   Call between .Ltmp1977 and .Ltmp1978
	.uleb128 .Ltmp1979-.Lfunc_begin30       #     jumps to .Ltmp1979
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1978-.Lfunc_begin30       # >> Call Site 8 <<
	.uleb128 .Lfunc_end45-.Ltmp1978         #   Call between .Ltmp1978 and .Lfunc_end45
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP3CmdC2ERKS0_,"axG",@progbits,_ZN2PP3CmdC2ERKS0_,comdat
	.weak	_ZN2PP3CmdC2ERKS0_              # -- Begin function _ZN2PP3CmdC2ERKS0_
	.p2align	5
	.type	_ZN2PP3CmdC2ERKS0_,@function
_ZN2PP3CmdC2ERKS0_:                     # @_ZN2PP3CmdC2ERKS0_
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s2, $a1
	ld.d	$a1, $a1, 0
	move	$s3, $a0
	st.d	$a1, $a0, 0
	addi.d	$s1, $a0, 24
	st.d	$s1, $a0, 8
	ld.d	$a1, $s2, 16
	ld.d	$fp, $s2, 8
	addi.d	$s5, $a0, 8
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 64
	move	$a0, $s1
	bltu	$a1, $a2, .LBB46_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 64
	move	$a0, $s5
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	st.d	$a0, $s5, 0
	st.d	$a1, $s1, 0
.LBB46_2:                               # %._crit_edge.i.i
	addi.w	$s0, $zero, -1
	beq	$a1, $s0, .LBB46_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB46_5
# %bb.4:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB46_6
.LBB46_5:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB46_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 64
	st.d	$a0, $s3, 16
	ld.d	$a0, $s2, 40
	st.d	$a0, $s3, 40
	addi.d	$s6, $s3, 64
	st.d	$s6, $s3, 48
	ld.d	$a1, $s2, 56
	ld.d	$fp, $s2, 48
	addi.d	$s7, $s3, 48
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 64
	move	$a0, $s6
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s5, $sp, 24                    # 8-byte Folded Spill
	bltu	$a1, $a2, .LBB46_9
# %bb.7:                                # %.noexc.i35
.Ltmp1980:
	addi.d	$a1, $sp, 64
	move	$a0, $s7
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1981:
# %bb.8:                                # %.noexc
	ld.d	$a1, $sp, 64
	st.d	$a0, $s7, 0
	st.d	$a1, $s6, 0
.LBB46_9:                               # %._crit_edge.i.i34
	beq	$a1, $s0, .LBB46_13
# %bb.10:                               # %._crit_edge.i.i34
	bnez	$a1, .LBB46_12
# %bb.11:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB46_13
.LBB46_12:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB46_13:
	ld.d	$a0, $sp, 64
	st.d	$a0, $s3, 56
	vld	$vr0, $s2, 80
	vst	$vr0, $s3, 80
	addi.d	$s8, $s3, 112
	st.d	$s8, $s3, 96
	ld.d	$a1, $s2, 104
	ld.d	$fp, $s2, 96
	addi.d	$s4, $s3, 96
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 64
	move	$a0, $s8
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	bltu	$a1, $a2, .LBB46_16
# %bb.14:                               # %.noexc.i38
.Ltmp1983:
	addi.d	$a1, $sp, 64
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1984:
# %bb.15:                               # %.noexc39
	ld.d	$a1, $sp, 64
	st.d	$a0, $s4, 0
	st.d	$a1, $s8, 0
.LBB46_16:                              # %._crit_edge.i.i37
	beq	$a1, $s0, .LBB46_20
# %bb.17:                               # %._crit_edge.i.i37
	bnez	$a1, .LBB46_19
# %bb.18:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB46_20
.LBB46_19:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB46_20:
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a0, $sp, 64
	st.d	$a0, $s3, 104
	addi.d	$a0, $s3, 144
	st.d	$a0, $s3, 128
	ld.d	$a1, $s2, 136
	ld.d	$fp, $s2, 128
	addi.d	$s4, $s3, 128
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 64
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s8, $sp, 32                    # 8-byte Folded Spill
	bltu	$a1, $a2, .LBB46_23
# %bb.21:                               # %.noexc.i42
.Ltmp1986:
	addi.d	$a1, $sp, 64
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1987:
# %bb.22:                               # %.noexc43
	ld.d	$a1, $sp, 64
	st.d	$a0, $s4, 0
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	st.d	$a1, $a2, 0
.LBB46_23:                              # %._crit_edge.i.i41
	st.d	$s4, $sp, 0                     # 8-byte Folded Spill
	beq	$a1, $s0, .LBB46_27
# %bb.24:                               # %._crit_edge.i.i41
	bnez	$a1, .LBB46_26
# %bb.25:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB46_27
.LBB46_26:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB46_27:
	ld.d	$a0, $sp, 64
	st.d	$a0, $s3, 136
	addi.d	$s4, $s3, 160
	addi.d	$a1, $s2, 160
.Ltmp1989:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp1990:
# %bb.28:
	addi.d	$s5, $s3, 256
	st.d	$s5, $s3, 240
	ld.d	$a1, $s2, 248
	ld.d	$fp, $s2, 240
	addi.d	$s6, $s3, 240
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 64
	move	$a0, $s5
	bltu	$a1, $a2, .LBB46_31
# %bb.29:                               # %.noexc.i46
.Ltmp1992:
	addi.d	$a1, $sp, 64
	move	$a0, $s6
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1993:
# %bb.30:                               # %.noexc47
	ld.d	$a1, $sp, 64
	st.d	$a0, $s6, 0
	st.d	$a1, $s5, 0
.LBB46_31:                              # %._crit_edge.i.i45
	beq	$a1, $s0, .LBB46_35
# %bb.32:                               # %._crit_edge.i.i45
	bnez	$a1, .LBB46_34
# %bb.33:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB46_35
.LBB46_34:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB46_35:
	ld.d	$a0, $sp, 64
	st.d	$a0, $s3, 248
	addi.d	$s1, $s3, 288
	st.d	$s1, $s3, 272
	ld.d	$a1, $s2, 280
	ld.d	$fp, $s2, 272
	addi.d	$s7, $s3, 272
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 64
	move	$a0, $s1
	bltu	$a1, $a2, .LBB46_38
# %bb.36:                               # %.noexc.i50
.Ltmp1995:
	addi.d	$a1, $sp, 64
	move	$a0, $s7
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1996:
# %bb.37:                               # %.noexc51
	ld.d	$a1, $sp, 64
	st.d	$a0, $s7, 0
	st.d	$a1, $s1, 0
.LBB46_38:                              # %._crit_edge.i.i49
	beq	$a1, $s0, .LBB46_42
# %bb.39:                               # %._crit_edge.i.i49
	bnez	$a1, .LBB46_41
# %bb.40:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB46_42
.LBB46_41:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB46_42:
	ld.d	$a0, $sp, 64
	st.d	$a0, $s3, 280
	addi.d	$s8, $s3, 304
	addi.d	$a1, $s2, 304
.Ltmp1998:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1999:
# %bb.43:
	addi.d	$fp, $s3, 328
	addi.d	$a1, $s2, 328
.Ltmp2001:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2002:
# %bb.44:
	addi.d	$s0, $s3, 352
	addi.d	$a1, $s2, 352
.Ltmp2004:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEEC2ERKS1_)
	jirl	$ra, $ra, 0
.Ltmp2005:
# %bb.45:
	addi.d	$a0, $s3, 392
	addi.d	$a1, $s2, 392
.Ltmp2007:
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEEC2ERKS1_)
	jirl	$ra, $ra, 0
.Ltmp2008:
# %bb.46:
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB46_47:
.Ltmp1997:
	move	$s2, $a0
	b	.LBB46_60
.LBB46_48:
.Ltmp1994:
	move	$s2, $a0
	b	.LBB46_62
.LBB46_49:
.Ltmp1988:
	move	$s2, $a0
	b	.LBB46_64
.LBB46_50:
.Ltmp1985:
	move	$s2, $a0
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB46_66
	b	.LBB46_69
.LBB46_51:
.Ltmp1982:
	move	$s2, $a0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB46_67
	b	.LBB46_70
.LBB46_52:
.Ltmp2009:
	move	$s2, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt13_Bvector_baseISaIbEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB46_54
.LBB46_53:
.Ltmp2006:
	move	$s2, $a0
.LBB46_54:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB46_56
.LBB46_55:
.Ltmp2003:
	move	$s2, $a0
.LBB46_56:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB46_58
.LBB46_57:
.Ltmp2000:
	move	$s2, $a0
.LBB46_58:
	ld.d	$a0, $s7, 0
	beq	$a0, $s1, .LBB46_60
# %bb.59:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB46_60:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $s6, 0
	beq	$a0, $s5, .LBB46_62
# %bb.61:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i53
	ld.d	$a1, $s5, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB46_62:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit55
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB46_64
.LBB46_63:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i56
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB46_64:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit58
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB46_68
# %bb.65:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit61
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB46_69
.LBB46_66:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit64
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB46_70
.LBB46_67:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit67
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB46_68:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i59
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB46_66
.LBB46_69:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i62
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB46_67
.LBB46_70:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i65
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB46_71:
.Ltmp1991:
	move	$s2, $a0
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB46_63
	b	.LBB46_64
.Lfunc_end46:
	.size	_ZN2PP3CmdC2ERKS0_, .Lfunc_end46-_ZN2PP3CmdC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP3CmdC2ERKS0_,"aG",@progbits,_ZN2PP3CmdC2ERKS0_,comdat
	.p2align	2, 0x0
GCC_except_table46:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Lfunc_begin31-.Lfunc_begin31  # >> Call Site 1 <<
	.uleb128 .Ltmp1980-.Lfunc_begin31       #   Call between .Lfunc_begin31 and .Ltmp1980
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1980-.Lfunc_begin31       # >> Call Site 2 <<
	.uleb128 .Ltmp1981-.Ltmp1980            #   Call between .Ltmp1980 and .Ltmp1981
	.uleb128 .Ltmp1982-.Lfunc_begin31       #     jumps to .Ltmp1982
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1981-.Lfunc_begin31       # >> Call Site 3 <<
	.uleb128 .Ltmp1983-.Ltmp1981            #   Call between .Ltmp1981 and .Ltmp1983
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1983-.Lfunc_begin31       # >> Call Site 4 <<
	.uleb128 .Ltmp1984-.Ltmp1983            #   Call between .Ltmp1983 and .Ltmp1984
	.uleb128 .Ltmp1985-.Lfunc_begin31       #     jumps to .Ltmp1985
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1984-.Lfunc_begin31       # >> Call Site 5 <<
	.uleb128 .Ltmp1986-.Ltmp1984            #   Call between .Ltmp1984 and .Ltmp1986
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1986-.Lfunc_begin31       # >> Call Site 6 <<
	.uleb128 .Ltmp1987-.Ltmp1986            #   Call between .Ltmp1986 and .Ltmp1987
	.uleb128 .Ltmp1988-.Lfunc_begin31       #     jumps to .Ltmp1988
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1987-.Lfunc_begin31       # >> Call Site 7 <<
	.uleb128 .Ltmp1989-.Ltmp1987            #   Call between .Ltmp1987 and .Ltmp1989
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1989-.Lfunc_begin31       # >> Call Site 8 <<
	.uleb128 .Ltmp1990-.Ltmp1989            #   Call between .Ltmp1989 and .Ltmp1990
	.uleb128 .Ltmp1991-.Lfunc_begin31       #     jumps to .Ltmp1991
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1992-.Lfunc_begin31       # >> Call Site 9 <<
	.uleb128 .Ltmp1993-.Ltmp1992            #   Call between .Ltmp1992 and .Ltmp1993
	.uleb128 .Ltmp1994-.Lfunc_begin31       #     jumps to .Ltmp1994
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1993-.Lfunc_begin31       # >> Call Site 10 <<
	.uleb128 .Ltmp1995-.Ltmp1993            #   Call between .Ltmp1993 and .Ltmp1995
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1995-.Lfunc_begin31       # >> Call Site 11 <<
	.uleb128 .Ltmp1996-.Ltmp1995            #   Call between .Ltmp1995 and .Ltmp1996
	.uleb128 .Ltmp1997-.Lfunc_begin31       #     jumps to .Ltmp1997
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1996-.Lfunc_begin31       # >> Call Site 12 <<
	.uleb128 .Ltmp1998-.Ltmp1996            #   Call between .Ltmp1996 and .Ltmp1998
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1998-.Lfunc_begin31       # >> Call Site 13 <<
	.uleb128 .Ltmp1999-.Ltmp1998            #   Call between .Ltmp1998 and .Ltmp1999
	.uleb128 .Ltmp2000-.Lfunc_begin31       #     jumps to .Ltmp2000
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2001-.Lfunc_begin31       # >> Call Site 14 <<
	.uleb128 .Ltmp2002-.Ltmp2001            #   Call between .Ltmp2001 and .Ltmp2002
	.uleb128 .Ltmp2003-.Lfunc_begin31       #     jumps to .Ltmp2003
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2004-.Lfunc_begin31       # >> Call Site 15 <<
	.uleb128 .Ltmp2005-.Ltmp2004            #   Call between .Ltmp2004 and .Ltmp2005
	.uleb128 .Ltmp2006-.Lfunc_begin31       #     jumps to .Ltmp2006
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2007-.Lfunc_begin31       # >> Call Site 16 <<
	.uleb128 .Ltmp2008-.Ltmp2007            #   Call between .Ltmp2007 and .Ltmp2008
	.uleb128 .Ltmp2009-.Lfunc_begin31       #     jumps to .Ltmp2009
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2008-.Lfunc_begin31       # >> Call Site 17 <<
	.uleb128 .Lfunc_end46-.Ltmp2008         #   Call between .Ltmp2008 and .Lfunc_end46
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP12RestartblockD2Ev,"axG",@progbits,_ZN2PP12RestartblockD2Ev,comdat
	.weak	_ZN2PP12RestartblockD2Ev        # -- Begin function _ZN2PP12RestartblockD2Ev
	.p2align	5
	.type	_ZN2PP12RestartblockD2Ev,@function
_ZN2PP12RestartblockD2Ev:               # @_ZN2PP12RestartblockD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 488
	addi.d	$a1, $fp, 504
	beq	$a0, $a1, .LBB47_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 400
	beqz	$a0, .LBB47_8
# %bb.3:
	ld.d	$s0, $fp, 472
	ld.d	$a1, $fp, 440
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB47_7
# %bb.4:                                # %.lr.ph.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB47_5:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB47_5
# %bb.6:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i
	ld.d	$a0, $fp, 400
.LBB47_7:                               # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i
	ld.d	$a1, $fp, 408
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_8:                               # %_ZNSt5dequeIbSaIbEED2Ev.exit
	addi.d	$a0, $fp, 320
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 240
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 160
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jr	$t8
.Lfunc_end47:
	.size	_ZN2PP12RestartblockD2Ev, .Lfunc_end47-_ZN2PP12RestartblockD2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_ # -- Begin function _ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_
	.p2align	5
	.type	_ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_,@function
_ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_: # @_ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:
	addi.d	$sp, $sp, -576
	.cfi_def_cfa_offset 576
	st.d	$ra, $sp, 568                   # 8-byte Folded Spill
	st.d	$fp, $sp, 560                   # 8-byte Folded Spill
	st.d	$s0, $sp, 552                   # 8-byte Folded Spill
	st.d	$s1, $sp, 544                   # 8-byte Folded Spill
	st.d	$s2, $sp, 536                   # 8-byte Folded Spill
	st.d	$s3, $sp, 528                   # 8-byte Folded Spill
	st.d	$s4, $sp, 520                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s3, $sp, 112
	ld.d	$a1, $s2, 8
	ld.d	$s2, $s2, 0
	st.d	$s3, $sp, 96
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	move	$a0, $s3
	bltu	$a1, $a2, .LBB48_3
# %bb.1:                                # %.noexc.i
.Ltmp2010:
	addi.d	$a0, $sp, 96
	addi.d	$a1, $sp, 0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2011:
# %bb.2:                                # %.noexc
	ld.d	$a1, $sp, 0
	st.d	$a0, $sp, 96
	st.d	$a1, $sp, 112
.LBB48_3:                               # %._crit_edge.i.i
	addi.w	$s4, $zero, -1
	beq	$a1, $s4, .LBB48_7
# %bb.4:                                # %._crit_edge.i.i
	bnez	$a1, .LBB48_6
# %bb.5:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB48_7
.LBB48_6:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB48_7:
	ld.d	$a0, $sp, 0
	st.d	$a0, $sp, 104
	addi.d	$s2, $sp, 80
	ld.d	$a1, $s1, 8
	ld.d	$s1, $s1, 0
	st.d	$s2, $sp, 64
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	move	$a0, $s2
	bltu	$a1, $a2, .LBB48_10
# %bb.8:                                # %.noexc.i12
.Ltmp2013:
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2014:
# %bb.9:                                # %.noexc13
	ld.d	$a1, $sp, 0
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB48_10:                              # %._crit_edge.i.i11
	beq	$a1, $s4, .LBB48_14
# %bb.11:                               # %._crit_edge.i.i11
	bnez	$a1, .LBB48_13
# %bb.12:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB48_14
.LBB48_13:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB48_14:
	ld.d	$a0, $sp, 0
	st.d	$a0, $sp, 72
	addi.d	$s1, $sp, 48
	ld.d	$a1, $s0, 8
	ld.d	$s0, $s0, 0
	st.d	$s1, $sp, 32
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	move	$a0, $s1
	bltu	$a1, $a2, .LBB48_17
# %bb.15:                               # %.noexc.i16
.Ltmp2016:
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2017:
# %bb.16:                               # %.noexc17
	ld.d	$a1, $sp, 0
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB48_17:                              # %._crit_edge.i.i15
	beq	$a1, $s4, .LBB48_21
# %bb.18:                               # %._crit_edge.i.i15
	bnez	$a1, .LBB48_20
# %bb.19:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB48_21
.LBB48_20:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB48_21:
	ld.d	$a0, $sp, 0
	st.d	$a0, $sp, 40
.Ltmp2019:
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 64
	addi.d	$a3, $sp, 32
	addi.d	$a4, $sp, 128
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp2020:
# %bb.22:
	ld.d	$a0, $sp, 32
	beq	$a0, $s1, .LBB48_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 64
	beq	$a0, $s2, .LBB48_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i19
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21
	ld.d	$a0, $sp, 96
	beq	$a0, $s3, .LBB48_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB48_36
# %bb.29:
	ld.d	$a0, $sp, 192
	addi.d	$s0, $sp, 16
	st.d	$s0, $sp, 0
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
	beqz	$a0, .LBB48_32
# %bb.30:
	ld.d	$a1, $sp, 176
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB48_32
# %bb.31:
	ld.d	$a3, $sp, 184
	sub.d	$a4, $a0, $a3
.Ltmp2022:
	addi.d	$a0, $sp, 0
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2023:
	b	.LBB48_33
.LBB48_32:
	addi.d	$a1, $sp, 224
.Ltmp2024:
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2025:
.LBB48_33:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2027:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2028:
# %bb.34:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 0
	beq	$a0, $s0, .LBB48_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_36:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 128
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 128
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 224
	st.d	$a2, $sp, 144
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 240
	st.d	$a1, $sp, 152
	beq	$a0, $a2, .LBB48_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 240
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_38:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 152
	addi.d	$a0, $sp, 208
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 128
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 136
	addi.d	$a0, $sp, 256
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s4, $sp, 520                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 528                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 536                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 544                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 552                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 560                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 568                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 576
	ret
.LBB48_39:
.Ltmp2029:
	b	.LBB48_41
.LBB48_40:
.Ltmp2026:
.LBB48_41:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s0, .LBB48_50
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB48_43:
.Ltmp2018:
	move	$fp, $a0
	ld.d	$a0, $sp, 64
	beq	$a0, $s2, .LBB48_48
	b	.LBB48_52
.LBB48_44:
.Ltmp2015:
	move	$fp, $a0
	ld.d	$a0, $sp, 96
	bne	$a0, $s3, .LBB48_49
	b	.LBB48_50
.LBB48_45:
.Ltmp2012:
	move	$fp, $a0
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB48_46:
.Ltmp2021:
	ld.d	$a2, $sp, 32
	move	$fp, $a0
	bne	$a2, $s1, .LBB48_51
# %bb.47:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	ld.d	$a0, $sp, 64
	bne	$a0, $s2, .LBB48_52
.LBB48_48:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	ld.d	$a0, $sp, 96
	beq	$a0, $s3, .LBB48_50
.LBB48_49:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_50:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB48_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 64
	beq	$a0, $s2, .LBB48_48
.LBB48_52:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 96
	bne	$a0, $s3, .LBB48_49
	b	.LBB48_50
.Lfunc_end48:
	.size	_ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_, .Lfunc_end48-_ZN2PP11PowerParser9list_varsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table48:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Lfunc_begin32-.Lfunc_begin32  # >> Call Site 1 <<
	.uleb128 .Ltmp2010-.Lfunc_begin32       #   Call between .Lfunc_begin32 and .Ltmp2010
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2010-.Lfunc_begin32       # >> Call Site 2 <<
	.uleb128 .Ltmp2011-.Ltmp2010            #   Call between .Ltmp2010 and .Ltmp2011
	.uleb128 .Ltmp2012-.Lfunc_begin32       #     jumps to .Ltmp2012
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2011-.Lfunc_begin32       # >> Call Site 3 <<
	.uleb128 .Ltmp2013-.Ltmp2011            #   Call between .Ltmp2011 and .Ltmp2013
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2013-.Lfunc_begin32       # >> Call Site 4 <<
	.uleb128 .Ltmp2014-.Ltmp2013            #   Call between .Ltmp2013 and .Ltmp2014
	.uleb128 .Ltmp2015-.Lfunc_begin32       #     jumps to .Ltmp2015
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2014-.Lfunc_begin32       # >> Call Site 5 <<
	.uleb128 .Ltmp2016-.Ltmp2014            #   Call between .Ltmp2014 and .Ltmp2016
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2016-.Lfunc_begin32       # >> Call Site 6 <<
	.uleb128 .Ltmp2017-.Ltmp2016            #   Call between .Ltmp2016 and .Ltmp2017
	.uleb128 .Ltmp2018-.Lfunc_begin32       #     jumps to .Ltmp2018
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2017-.Lfunc_begin32       # >> Call Site 7 <<
	.uleb128 .Ltmp2019-.Ltmp2017            #   Call between .Ltmp2017 and .Ltmp2019
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2019-.Lfunc_begin32       # >> Call Site 8 <<
	.uleb128 .Ltmp2020-.Ltmp2019            #   Call between .Ltmp2019 and .Ltmp2020
	.uleb128 .Ltmp2021-.Lfunc_begin32       #     jumps to .Ltmp2021
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2020-.Lfunc_begin32       # >> Call Site 9 <<
	.uleb128 .Ltmp2022-.Ltmp2020            #   Call between .Ltmp2020 and .Ltmp2022
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2022-.Lfunc_begin32       # >> Call Site 10 <<
	.uleb128 .Ltmp2025-.Ltmp2022            #   Call between .Ltmp2022 and .Ltmp2025
	.uleb128 .Ltmp2026-.Lfunc_begin32       #     jumps to .Ltmp2026
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2027-.Lfunc_begin32       # >> Call Site 11 <<
	.uleb128 .Ltmp2028-.Ltmp2027            #   Call between .Ltmp2027 and .Ltmp2028
	.uleb128 .Ltmp2029-.Lfunc_begin32       #     jumps to .Ltmp2029
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2028-.Lfunc_begin32       # >> Call Site 12 <<
	.uleb128 .Lfunc_end48-.Ltmp2028         #   Call between .Ltmp2028 and .Lfunc_end48
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ # -- Begin function _ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.p2align	5
	.type	_ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_,@function
_ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_: # @_ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	addi.d	$sp, $sp, -544
	.cfi_def_cfa_offset 544
	st.d	$ra, $sp, 536                   # 8-byte Folded Spill
	st.d	$fp, $sp, 528                   # 8-byte Folded Spill
	st.d	$s0, $sp, 520                   # 8-byte Folded Spill
	st.d	$s1, $sp, 512                   # 8-byte Folded Spill
	st.d	$s2, $sp, 504                   # 8-byte Folded Spill
	st.d	$s3, $sp, 496                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $sp, 88
	ld.d	$a1, $s1, 8
	ld.d	$s1, $s1, 0
	st.d	$s2, $sp, 72
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s2
	bltu	$a1, $a2, .LBB49_3
# %bb.1:                                # %.noexc.i
.Ltmp2030:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2031:
# %bb.2:                                # %.noexc
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB49_3:                               # %._crit_edge.i.i
	addi.w	$s3, $zero, -1
	beq	$a1, $s3, .LBB49_7
# %bb.4:                                # %._crit_edge.i.i
	bnez	$a1, .LBB49_6
# %bb.5:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB49_7
.LBB49_6:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB49_7:
	ld.d	$a0, $sp, 8
	st.d	$a0, $sp, 80
	addi.d	$s1, $sp, 56
	ld.d	$a1, $s0, 8
	ld.d	$s0, $s0, 0
	st.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s1
	bltu	$a1, $a2, .LBB49_10
# %bb.8:                                # %.noexc.i10
.Ltmp2033:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2034:
# %bb.9:                                # %.noexc11
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB49_10:                              # %._crit_edge.i.i9
	beq	$a1, $s3, .LBB49_14
# %bb.11:                               # %._crit_edge.i.i9
	bnez	$a1, .LBB49_13
# %bb.12:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB49_14
.LBB49_13:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB49_14:
	ld.d	$a0, $sp, 8
	st.d	$a0, $sp, 48
.Ltmp2036:
	addi.d	$a1, $sp, 72
	addi.d	$a2, $sp, 40
	addi.d	$a3, $sp, 104
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp2037:
# %bb.15:
	ld.d	$a0, $sp, 40
	beq	$a0, $s1, .LBB49_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB49_17:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 72
	beq	$a0, $s2, .LBB49_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB49_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB49_27
# %bb.20:
	ld.d	$a0, $sp, 168
	addi.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB49_23
# %bb.21:
	ld.d	$a1, $sp, 152
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB49_23
# %bb.22:
	ld.d	$a3, $sp, 160
	sub.d	$a4, $a0, $a3
.Ltmp2039:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2040:
	b	.LBB49_24
.LBB49_23:
	addi.d	$a1, $sp, 200
.Ltmp2041:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2042:
.LBB49_24:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
.Ltmp2044:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2045:
# %bb.25:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB49_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i17
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB49_27:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 104
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 104
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 200
	st.d	$a2, $sp, 120
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 216
	st.d	$a1, $sp, 128
	beq	$a0, $a2, .LBB49_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB49_29:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 128
	addi.d	$a0, $sp, 184
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 104
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 112
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s3, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 520                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 528                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 536                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 544
	ret
.LBB49_30:
.Ltmp2046:
	b	.LBB49_32
.LBB49_31:
.Ltmp2043:
.LBB49_32:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s0, .LBB49_40
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB49_34:
.Ltmp2035:
	move	$fp, $a0
	b	.LBB49_38
.LBB49_35:
.Ltmp2032:
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB49_36:
.Ltmp2038:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s1, .LBB49_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB49_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	ld.d	$a0, $sp, 72
	beq	$a0, $s2, .LBB49_40
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB49_40:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit25
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end49:
	.size	_ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_, .Lfunc_end49-_ZN2PP11PowerParser10list_funcsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table49:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Lfunc_begin33-.Lfunc_begin33  # >> Call Site 1 <<
	.uleb128 .Ltmp2030-.Lfunc_begin33       #   Call between .Lfunc_begin33 and .Ltmp2030
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2030-.Lfunc_begin33       # >> Call Site 2 <<
	.uleb128 .Ltmp2031-.Ltmp2030            #   Call between .Ltmp2030 and .Ltmp2031
	.uleb128 .Ltmp2032-.Lfunc_begin33       #     jumps to .Ltmp2032
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2031-.Lfunc_begin33       # >> Call Site 3 <<
	.uleb128 .Ltmp2033-.Ltmp2031            #   Call between .Ltmp2031 and .Ltmp2033
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2033-.Lfunc_begin33       # >> Call Site 4 <<
	.uleb128 .Ltmp2034-.Ltmp2033            #   Call between .Ltmp2033 and .Ltmp2034
	.uleb128 .Ltmp2035-.Lfunc_begin33       #     jumps to .Ltmp2035
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2034-.Lfunc_begin33       # >> Call Site 5 <<
	.uleb128 .Ltmp2036-.Ltmp2034            #   Call between .Ltmp2034 and .Ltmp2036
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2036-.Lfunc_begin33       # >> Call Site 6 <<
	.uleb128 .Ltmp2037-.Ltmp2036            #   Call between .Ltmp2036 and .Ltmp2037
	.uleb128 .Ltmp2038-.Lfunc_begin33       #     jumps to .Ltmp2038
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2037-.Lfunc_begin33       # >> Call Site 7 <<
	.uleb128 .Ltmp2039-.Ltmp2037            #   Call between .Ltmp2037 and .Ltmp2039
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2039-.Lfunc_begin33       # >> Call Site 8 <<
	.uleb128 .Ltmp2042-.Ltmp2039            #   Call between .Ltmp2039 and .Ltmp2042
	.uleb128 .Ltmp2043-.Lfunc_begin33       #     jumps to .Ltmp2043
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2044-.Lfunc_begin33       # >> Call Site 9 <<
	.uleb128 .Ltmp2045-.Ltmp2044            #   Call between .Ltmp2044 and .Ltmp2045
	.uleb128 .Ltmp2046-.Lfunc_begin33       #     jumps to .Ltmp2046
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2045-.Lfunc_begin33       # >> Call Site 10 <<
	.uleb128 .Lfunc_end49-.Ltmp2045         #   Call between .Ltmp2045 and .Lfunc_end49
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_,"axG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_,comdat
	.weak	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_ # -- Begin function _ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_
	.p2align	5
	.type	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_,@function
_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_: # @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a2, $a0, 64
	ld.d	$a0, $a0, 48
	addi.d	$a2, $a2, -568
	beq	$a0, $a2, .LBB50_2
# %bb.1:
	pcaddu18i	$ra, %call36(_ZN2PP8WhenthenC2ERKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 48
	addi.d	$a0, $a0, 568
	st.d	$a0, $fp, 48
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB50_2:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jr	$t8
.Lfunc_end50:
	.size	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_, .Lfunc_end50-_ZNSt5dequeIN2PP8WhenthenESaIS1_EE9push_backERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP8WhenthenD2Ev,"axG",@progbits,_ZN2PP8WhenthenD2Ev,comdat
	.weak	_ZN2PP8WhenthenD2Ev             # -- Begin function _ZN2PP8WhenthenD2Ev
	.p2align	5
	.type	_ZN2PP8WhenthenD2Ev,@function
_ZN2PP8WhenthenD2Ev:                    # @_ZN2PP8WhenthenD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	addi.d	$a0, $a0, 480
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 400
	beqz	$a0, .LBB51_6
# %bb.1:
	ld.d	$s0, $fp, 472
	ld.d	$a1, $fp, 440
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB51_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB51_3:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB51_3
# %bb.4:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i
	ld.d	$a0, $fp, 400
.LBB51_5:                               # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i
	ld.d	$a1, $fp, 408
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB51_6:                               # %_ZNSt5dequeIbSaIbEED2Ev.exit
	addi.d	$a0, $fp, 320
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 240
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 160
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jr	$t8
.Lfunc_end51:
	.size	_ZN2PP8WhenthenD2Ev, .Lfunc_end51-_ZN2PP8WhenthenD2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s2, $a1
	ld.w	$a1, $a1, 0
	move	$fp, $a4
	move	$s0, $a3
	move	$s3, $a2
	move	$s1, $a0
	ori	$a0, $zero, 1
	st.w	$a0, $sp, 36
	addi.d	$s4, $a1, 1
	ori	$a0, $zero, 432
	mul.d	$a0, $a1, $a0
	addi.d	$s7, $a0, 432
	addi.d	$s5, $zero, -1
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s6, $a0, -1973
	move	$s8, $s4
	.p2align	4, , 16
.LBB52_1:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s1, 896
	ld.d	$a0, $s1, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $s1, 872
	ld.d	$a4, $s1, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s1, 856
	ld.d	$a1, $s1, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s6
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s6
	add.w	$a2, $a2, $a3
	bge	$s4, $a2, .LBB52_7
# %bb.2:                                #   in Loop: Header=BB52_1 Depth=1
	ld.d	$a2, $s1, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s6
	add.d	$a2, $s4, $a2
	st.b	$zero, $sp, 40
	beqz	$a2, .LBB52_4
# %bb.3:                                #   in Loop: Header=BB52_1 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB52_5
	.p2align	4, , 16
.LBB52_4:                               #   in Loop: Header=BB52_1 Depth=1
	add.d	$a0, $a1, $s7
.LBB52_5:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB52_1 Depth=1
	addi.d	$a1, $sp, 36
	addi.d	$a2, $sp, 40
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd19find_matching_enddoERiRb)
	jirl	$ra, $ra, 0
	masknez	$a1, $s5, $a0
	maskeqz	$a2, $s8, $a0
	or	$s5, $a2, $a1
	bnez	$a0, .LBB52_7
# %bb.6:                                # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB52_1 Depth=1
	ld.b	$a0, $sp, 40
	addi.d	$s8, $s8, 1
	addi.d	$s4, $s4, 1
	andi	$a0, $a0, 1
	addi.d	$s7, $s7, 432
	beqz	$a0, .LBB52_1
.LBB52_7:
	ld.d	$a1, $s3, 72
	ld.d	$a0, $s3, 40
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a1, $a2, $a1
	ld.d	$a2, $s3, 48
	ld.d	$a3, $s3, 56
	slli.d	$a4, $a1, 7
	ld.d	$a5, $s3, 32
	ld.d	$a1, $s3, 16
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 2
	add.d	$a2, $a4, $a2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 2
	addi.w	$s4, $s5, 0
	addi.w	$a4, $zero, -1
	add.d	$a3, $a2, $a3
	addi.w	$a2, $a3, 0
	beq	$s4, $a4, .LBB52_13
# %bb.8:
	blez	$a2, .LBB52_25
# %bb.9:
	ld.d	$a2, $s3, 24
	bstrpick.d	$a4, $a3, 30, 0
	sub.d	$a3, $a1, $a2
	srai.d	$a3, $a3, 2
	add.d	$a3, $a3, $a4
	bltz	$a3, .LBB52_17
# %bb.10:
	ori	$a5, $zero, 127
	bltu	$a5, $a3, .LBB52_18
# %bb.11:
	alsl.d	$a1, $a4, $a1, 2
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 2
	addi.d	$a2, $a3, -1
	bgtz	$a3, .LBB52_20
.LBB52_12:
	srai.d	$a1, $a2, 7
	b	.LBB52_23
.LBB52_13:
	blez	$a2, .LBB52_33
# %bb.14:
	ld.d	$a2, $s3, 24
	addi.d	$a3, $a3, -1
	bstrpick.d	$a3, $a3, 31, 0
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 2
	add.d	$a2, $a2, $a3
	bltz	$a2, .LBB52_26
# %bb.15:
	ori	$a4, $zero, 127
	bltu	$a4, $a2, .LBB52_27
# %bb.16:
	alsl.d	$a1, $a3, $a1, 2
	b	.LBB52_29
.LBB52_17:
	srai.d	$a1, $a3, 7
	b	.LBB52_19
.LBB52_18:
	srli.d	$a1, $a3, 7
.LBB52_19:
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $a0, $a2
	alsl.d	$a0, $a1, $a0, 3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a3, $a1
	alsl.d	$a1, $a1, $a2, 2
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 2
	addi.d	$a2, $a3, -1
	blez	$a3, .LBB52_12
.LBB52_20:
	ori	$a4, $zero, 128
	bltu	$a4, $a3, .LBB52_22
# %bb.21:
	ld.d	$a3, $a0, 0
	addi.d	$a1, $a1, -4
	b	.LBB52_24
.LBB52_22:
	srli.d	$a1, $a2, 7
.LBB52_23:
	slli.d	$a3, $a1, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a1, $a0, 3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a2, $a1
	alsl.d	$a1, $a1, $a3, 2
.LBB52_24:                              # %_ZStmiRKSt15_Deque_iteratorIiRiPiEl.exit
	st.d	$a1, $sp, 40
	st.d	$a3, $sp, 48
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 56
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 0
	addi.d	$a2, $sp, 40
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE)
	jirl	$ra, $ra, 0
.LBB52_25:
	st.w	$s5, $s2, 0
	b	.LBB52_43
.LBB52_26:
	srai.d	$a1, $a2, 7
	b	.LBB52_28
.LBB52_27:
	srli.d	$a1, $a2, 7
.LBB52_28:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a2, $a1
	alsl.d	$a1, $a1, $a0, 2
.LBB52_29:                              # %_ZNSt5dequeIiSaIiEEixEm.exit
	ld.d	$a0, $s1, 840
	ld.d	$a2, $s1, 848
	ld.w	$a1, $a1, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s6
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB52_31
# %bb.30:
	ld.d	$a0, $s1, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB52_32
.LBB52_31:
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB52_32:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit34
	move	$a1, $zero
	move	$a2, $s0
	move	$a3, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.LBB52_33:
	addi.d	$s2, $s0, 16
	pcalau12i	$a0, %pc_hi20(.L.str.102)
	addi.d	$a1, $a0, %pc_lo12(.L.str.102)
	ori	$a2, $zero, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB52_44
# %bb.34:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB52_36
# %bb.35:
	ld.bu	$a0, $s3, 67
	b	.LBB52_37
.LBB52_36:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB52_37:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	blez	$a0, .LBB52_43
# %bb.38:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$fp, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.103)
	addi.d	$a1, $a0, %pc_lo12(.L.str.103)
	ori	$a2, $zero, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$fp, $a0, 240
	beqz	$fp, .LBB52_44
# %bb.39:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i36
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB52_41
# %bb.40:
	ld.bu	$a0, $fp, 67
	b	.LBB52_42
.LBB52_41:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
.LBB52_42:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit39
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.LBB52_43:
	addi.d	$a0, $s4, 1
	sltu	$a0, $zero, $a0
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB52_44:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end52:
	.size	_ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end52-_ZN2PP11PowerParser11end_do_loopERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a2
	move	$s0, $a0
	ld.w	$s3, $a1, 0
	ori	$s1, $zero, 1
	ori	$s2, $zero, 432
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s4, $a0, -1973
	addi.w	$s5, $zero, -1
	ori	$s7, $zero, 128
.LBB53_1:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB53_2 Depth 2
	move	$s8, $s3
	st.w	$s1, $sp, 36
	st.b	$zero, $sp, 35
	addi.w	$s3, $s3, 1
	mul.d	$s6, $s8, $s2
	.p2align	4, , 16
.LBB53_2:                               #   Parent Loop BB53_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s0, 896
	ld.d	$a0, $s0, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $s0, 872
	ld.d	$a4, $s0, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s0, 856
	ld.d	$a1, $s0, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s4
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s4
	add.w	$a2, $a2, $a3
	bge	$s8, $a2, .LBB53_23
# %bb.3:                                #   in Loop: Header=BB53_2 Depth=2
	ld.d	$a2, $s0, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s4
	add.d	$a2, $s8, $a2
	beqz	$a2, .LBB53_5
# %bb.4:                                #   in Loop: Header=BB53_2 Depth=2
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	addi.d	$a1, $sp, 36
	addi.d	$a2, $sp, 35
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd19find_matching_enddoERiRb)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB53_6
	b	.LBB53_8
	.p2align	4, , 16
.LBB53_5:                               #   in Loop: Header=BB53_2 Depth=2
	add.d	$a0, $a1, $s6
	addi.d	$a1, $sp, 36
	addi.d	$a2, $sp, 35
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd19find_matching_enddoERiRb)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB53_8
.LBB53_6:                               #   in Loop: Header=BB53_2 Depth=2
	ld.bu	$a0, $sp, 35
	bnez	$a0, .LBB53_23
# %bb.7:                                #   in Loop: Header=BB53_2 Depth=2
	addi.d	$s8, $s8, 1
	addi.w	$s3, $s3, 1
	addi.d	$s6, $s6, 432
	b	.LBB53_2
	.p2align	4, , 16
.LBB53_8:                               #   in Loop: Header=BB53_1 Depth=1
	beq	$s8, $s5, .LBB53_23
# %bb.9:                                #   in Loop: Header=BB53_1 Depth=1
	ld.b	$a0, $sp, 35
	andi	$a0, $a0, 1
	bnez	$a0, .LBB53_23
# %bb.10:                               #   in Loop: Header=BB53_1 Depth=1
	ld.d	$a1, $fp, 72
	ld.d	$a0, $fp, 40
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a1, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 32
	ld.d	$a2, $fp, 16
	slli.d	$a1, $a1, 7
	srai.d	$a3, $a3, 2
	add.d	$a1, $a1, $a3
	sub.d	$a3, $a4, $a2
	srai.d	$a3, $a3, 2
	add.d	$a3, $a1, $a3
	addi.w	$a1, $a3, 0
	blez	$a1, .LBB53_1
# %bb.11:                               #   in Loop: Header=BB53_1 Depth=1
	ld.d	$a1, $fp, 24
	bstrpick.d	$a4, $a3, 30, 0
	sub.d	$a3, $a2, $a1
	srai.d	$a3, $a3, 2
	add.d	$a3, $a3, $a4
	bltz	$a3, .LBB53_15
# %bb.12:                               #   in Loop: Header=BB53_1 Depth=1
	ori	$a5, $zero, 127
	bltu	$a5, $a3, .LBB53_16
# %bb.13:                               #   in Loop: Header=BB53_1 Depth=1
	alsl.d	$a2, $a4, $a2, 2
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 2
	addi.d	$a1, $a3, -1
	bgtz	$a3, .LBB53_18
.LBB53_14:                              #   in Loop: Header=BB53_1 Depth=1
	srai.d	$a2, $a1, 7
	b	.LBB53_21
.LBB53_15:                              #   in Loop: Header=BB53_1 Depth=1
	srai.d	$a2, $a3, 7
	b	.LBB53_17
.LBB53_16:                              #   in Loop: Header=BB53_1 Depth=1
	srli.d	$a2, $a3, 7
.LBB53_17:                              #   in Loop: Header=BB53_1 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	slli.d	$a2, $a2, 7
	sub.d	$a2, $a3, $a2
	alsl.d	$a2, $a2, $a1, 2
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 2
	addi.d	$a1, $a3, -1
	blez	$a3, .LBB53_14
.LBB53_18:                              #   in Loop: Header=BB53_1 Depth=1
	bltu	$s7, $a3, .LBB53_20
# %bb.19:                               #   in Loop: Header=BB53_1 Depth=1
	ld.d	$a3, $a0, 0
	addi.d	$a1, $a2, -4
	b	.LBB53_22
.LBB53_20:                              #   in Loop: Header=BB53_1 Depth=1
	srli.d	$a2, $a1, 7
.LBB53_21:                              #   in Loop: Header=BB53_1 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a2, $a0, 3
	slli.d	$a2, $a2, 7
	sub.d	$a1, $a1, $a2
	alsl.d	$a1, $a1, $a3, 2
.LBB53_22:                              # %_ZStmiRKSt15_Deque_iteratorIiRiPiEl.exit
                                        #   in Loop: Header=BB53_1 Depth=1
	st.d	$a1, $sp, 40
	st.d	$a3, $sp, 48
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 56
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 0
	addi.d	$a2, $sp, 40
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE)
	jirl	$ra, $ra, 0
	b	.LBB53_1
.LBB53_23:                              # %.thread
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.Lfunc_end53:
	.size	_ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end53-_ZN2PP11PowerParser10end_do_retERiRSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:
	addi.d	$sp, $sp, -496
	.cfi_def_cfa_offset 496
	st.d	$ra, $sp, 488                   # 8-byte Folded Spill
	st.d	$fp, $sp, 480                   # 8-byte Folded Spill
	st.d	$s0, $sp, 472                   # 8-byte Folded Spill
	st.d	$s1, $sp, 464                   # 8-byte Folded Spill
	st.d	$s2, $sp, 456                   # 8-byte Folded Spill
	st.d	$s3, $sp, 448                   # 8-byte Folded Spill
	st.d	$s4, $sp, 440                   # 8-byte Folded Spill
	st.d	$s5, $sp, 432                   # 8-byte Folded Spill
	st.d	$s6, $sp, 424                   # 8-byte Folded Spill
	st.d	$s7, $sp, 416                   # 8-byte Folded Spill
	st.d	$s8, $sp, 408                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s4, $a2
	ld.d	$a6, $a2, 72
	ld.d	$a2, $a2, 40
	st.d	$a5, $sp, 72                    # 8-byte Folded Spill
	st.d	$a4, $sp, 80                    # 8-byte Folded Spill
	st.d	$a3, $sp, 8                     # 8-byte Folded Spill
	move	$s2, $a1
	move	$s3, $a0
	sub.d	$a0, $a6, $a2
	ld.d	$a1, $s4, 48
	ld.d	$a3, $s4, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $a6
	sub.d	$a0, $a0, $a4
	sub.d	$a3, $a1, $a3
	ld.d	$a4, $s4, 32
	ld.d	$a1, $s4, 16
	slli.d	$a0, $a0, 7
	srai.d	$a3, $a3, 2
	add.d	$a0, $a0, $a3
	sub.d	$a3, $a4, $a1
	srai.d	$a3, $a3, 2
	add.d	$a0, $a0, $a3
	slli.d	$s1, $a0, 32
	lu12i.w	$fp, 427197
	beqz	$s1, .LBB54_2
# %bb.1:
	move	$s0, $zero
	b	.LBB54_10
.LBB54_2:
	ld.d	$a0, $s3, 840
	ld.d	$a2, $s3, 848
	ld.w	$a1, $s2, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	ori	$a3, $fp, 2579
	lu32i.d	$a3, -155345
	lu52i.d	$a3, $a3, -1973
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB54_4
# %bb.3:
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB54_5
.LBB54_4:
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB54_5:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
	move	$a1, $zero
	ld.d	$s0, $sp, 80                    # 8-byte Folded Reload
	move	$a2, $s0
	ld.d	$a3, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s5, $s0, 16
	pcalau12i	$a0, %pc_hi20(.L.str.66)
	addi.d	$a1, $a0, %pc_lo12(.L.str.66)
	ori	$a2, $zero, 41
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s5, $a0
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB54_282
# %bb.6:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_8
# %bb.7:
	ld.bu	$a0, $s6, 67
	b	.LBB54_9
.LBB54_8:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB54_9:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	ld.d	$a2, $sp, 72                    # 8-byte Folded Reload
	st.w	$a0, $a2, 0
	move	$a0, $s3
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s4, 16
	ld.d	$a2, $s4, 40
	srai.d	$a3, $a0, 63
	andn	$s0, $a0, $a3
.LBB54_10:
	ori	$a3, $zero, 0
	ld.d	$a0, $s4, 24
	lu32i.d	$a3, -1
	add.d	$a3, $s1, $a3
	srai.d	$a5, $a3, 32
	sub.d	$a3, $a1, $a0
	srai.d	$a3, $a3, 2
	add.d	$a4, $a3, $a5
	bltz	$a4, .LBB54_13
# %bb.11:
	ori	$a6, $zero, 127
	bltu	$a6, $a4, .LBB54_14
# %bb.12:
	alsl.d	$a4, $a5, $a1, 2
	b	.LBB54_16
.LBB54_13:
	srai.d	$a5, $a4, 7
	b	.LBB54_15
.LBB54_14:
	srli.d	$a5, $a4, 7
.LBB54_15:
	slli.d	$a6, $a5, 3
	ldx.d	$a6, $a2, $a6
	slli.d	$a5, $a5, 7
	sub.d	$a4, $a4, $a5
	alsl.d	$a4, $a4, $a6, 2
.LBB54_16:                              # %_ZNSt5dequeIiSaIiEEixEm.exit
	ld.w	$a5, $a4, 0
	srai.d	$a4, $s1, 32
	add.d	$a3, $a3, $a4
	st.w	$a5, $s2, 0
	bltz	$a3, .LBB54_20
# %bb.17:
	ori	$a5, $zero, 127
	bltu	$a5, $a3, .LBB54_21
# %bb.18:
	alsl.d	$a1, $a4, $a1, 2
	sub.d	$a0, $a1, $a0
	srai.d	$a3, $a0, 2
	addi.d	$a0, $a3, -1
	bgtz	$a3, .LBB54_23
.LBB54_19:
	srai.d	$a1, $a0, 7
	b	.LBB54_26
.LBB54_20:
	srai.d	$a1, $a3, 7
	b	.LBB54_22
.LBB54_21:
	srli.d	$a1, $a3, 7
.LBB54_22:
	slli.d	$a0, $a1, 3
	ldx.d	$a0, $a2, $a0
	alsl.d	$a2, $a1, $a2, 3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a3, $a1
	alsl.d	$a1, $a1, $a0, 2
	sub.d	$a0, $a1, $a0
	srai.d	$a3, $a0, 2
	addi.d	$a0, $a3, -1
	blez	$a3, .LBB54_19
.LBB54_23:
	ori	$a4, $zero, 128
	bltu	$a4, $a3, .LBB54_25
# %bb.24:
	ld.d	$a3, $a2, 0
	addi.d	$a0, $a1, -4
	b	.LBB54_27
.LBB54_25:
	srli.d	$a1, $a0, 7
.LBB54_26:
	slli.d	$a3, $a1, 3
	ldx.d	$a3, $a2, $a3
	alsl.d	$a2, $a1, $a2, 3
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$a0, $a0, $a3, 2
.LBB54_27:                              # %_ZStmiRKSt15_Deque_iteratorIiRiPiEl.exit
	st.d	$a0, $sp, 304
	st.d	$a3, $sp, 312
	addi.d	$a0, $a3, 512
	st.d	$a0, $sp, 320
	st.d	$a2, $sp, 328
	addi.d	$a0, $sp, 240
	addi.d	$a2, $sp, 304
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 360
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 96                   # 16-byte Folded Spill
	vst	$vr0, $sp, 344
	st.d	$zero, $sp, 304
	st.w	$zero, $sp, 312
	ld.d	$a0, $s3, 840
	ld.d	$a2, $s3, 848
	st.d	$zero, $sp, 320
	st.w	$zero, $sp, 328
	ld.w	$a1, $s2, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	ori	$a3, $fp, 2579
	lu32i.d	$a3, -155345
	lu52i.d	$a3, $a3, -1973
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	st.d	$zero, $sp, 336
	beqz	$a2, .LBB54_29
# %bb.28:
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB54_30
.LBB54_29:
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB54_30:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit156
.Ltmp2047:
	addi.d	$a1, $sp, 344
	addi.d	$a2, $sp, 304
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE)
	jirl	$ra, $ra, 0
.Ltmp2048:
# %bb.31:
	ld.d	$a5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a1, $a5, 72
	ld.d	$a0, $a5, 40
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $a5, 48
	ld.d	$a4, $a5, 56
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $a5, 32
	ld.d	$a1, $a5, 16
	slli.d	$a2, $a2, 7
	srli.d	$a3, $a3, 2
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 2
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	ori	$a3, $zero, 0
	ld.d	$a4, $a5, 24
	lu32i.d	$a3, -1
	add.d	$a2, $a2, $a3
	srai.d	$a3, $a2, 32
	sub.d	$a2, $a1, $a4
	srai.d	$a2, $a2, 2
	add.d	$a2, $a3, $a2
	bltz	$a2, .LBB54_34
# %bb.32:
	ori	$a4, $zero, 127
	bltu	$a4, $a2, .LBB54_35
# %bb.33:
	alsl.d	$a0, $a3, $a1, 2
	b	.LBB54_37
.LBB54_34:
	srai.d	$a1, $a2, 7
	b	.LBB54_36
.LBB54_35:
	srli.d	$a1, $a2, 7
.LBB54_36:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a2, $a1
	alsl.d	$a0, $a1, $a0, 2
.LBB54_37:                              # %_ZNSt5dequeIiSaIiEEixEm.exit159
	ld.w	$a0, $a0, 0
	st.d	$zero, $sp, 296
	vld	$vr0, $sp, 96                   # 16-byte Folded Reload
	vst	$vr0, $sp, 280
	st.d	$zero, $sp, 240
	ld.d	$a1, $s3, 840
	ld.d	$a2, $s3, 848
	st.w	$zero, $sp, 248
	st.d	$zero, $sp, 256
	st.w	$zero, $sp, 264
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a0
	st.d	$zero, $sp, 272
	beqz	$a2, .LBB54_39
# %bb.38:
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB54_40
.LBB54_39:
	ori	$a2, $zero, 432
	mul.d	$a0, $a0, $a2
	add.d	$a0, $a1, $a0
.LBB54_40:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit161
.Ltmp2050:
	addi.d	$a1, $sp, 280
	addi.d	$a2, $sp, 240
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE)
	jirl	$ra, $ra, 0
.Ltmp2051:
# %bb.41:                               # %.preheader484
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	ld.d	$a1, $sp, 288
	ld.d	$a0, $sp, 280
	sub.d	$a1, $a1, $a0
	srli.d	$a1, $a1, 5
	addi.w	$a1, $a1, 0
	addi.d	$a2, $s3, 688
	st.d	$a2, $sp, 96                    # 8-byte Folded Spill
	blez	$a1, .LBB54_241
# %bb.42:                               # %.lr.ph
	st.d	$s2, $sp, 32                    # 8-byte Folded Spill
	move	$s0, $zero
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	addi.d	$s5, $a1, 16
	addi.d	$a1, $a1, 256
	st.d	$a1, $sp, 88                    # 8-byte Folded Spill
	ori	$s2, $zero, 16
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	ori	$a1, $zero, 0
	lu32i.d	$a1, -1
	st.d	$a1, $sp, 0                     # 8-byte Folded Spill
	lu12i.w	$fp, -524288
	lu12i.w	$a1, 524287
	ori	$s1, $a1, 4095
	ori	$s4, $zero, 24
	st.d	$s3, $sp, 24                    # 8-byte Folded Spill
	b	.LBB54_44
	.p2align	4, , 16
.LBB54_43:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit285
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 288
	ld.d	$a0, $sp, 280
	addi.d	$s0, $s0, 1
	sub.d	$a1, $a1, $a0
	slli.d	$a1, $a1, 27
	srai.d	$a1, $a1, 32
	bge	$s0, $a1, .LBB54_241
.LBB54_44:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB54_62 Depth 2
                                        #     Child Loop BB54_103 Depth 2
	st.d	$s0, $sp, 64                    # 8-byte Folded Spill
	slli.d	$s0, $s0, 5
	add.d	$a1, $a0, $s0
	addi.d	$a2, $sp, 392
	st.d	$a2, $sp, 376
	ld.d	$a1, $a1, 8
	ldx.d	$s7, $a0, $s0
	st.d	$a1, $sp, 208
	move	$a0, $a2
	bltu	$a1, $s2, .LBB54_47
# %bb.45:                               # %.noexc.i
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2053:
	addi.d	$a0, $sp, 376
	addi.d	$a1, $sp, 208
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2054:
# %bb.46:                               # %.noexc
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 208
	st.d	$a0, $sp, 376
	st.d	$a1, $sp, 392
.LBB54_47:                              # %._crit_edge.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB54_51
# %bb.48:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	bnez	$a1, .LBB54_50
# %bb.49:                               #   in Loop: Header=BB54_44 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB54_51
	.p2align	4, , 16
.LBB54_50:                              #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_51:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 208
	ld.d	$a2, $sp, 344
	st.d	$a0, $sp, 384
	add.d	$a0, $a2, $s0
	addi.d	$a3, $sp, 224
	st.d	$a3, $sp, 208
	ld.d	$a1, $a0, 8
	ldx.d	$s7, $a2, $s0
	st.d	$a1, $sp, 176
	move	$a0, $a3
	bltu	$a1, $s2, .LBB54_54
# %bb.52:                               # %.noexc.i163
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2056:
	addi.d	$a0, $sp, 208
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2057:
# %bb.53:                               # %.noexc164
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 208
	st.d	$a1, $sp, 224
.LBB54_54:                              # %._crit_edge.i.i162
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB54_57
# %bb.55:                               # %._crit_edge.i.i162
                                        #   in Loop: Header=BB54_44 Depth=1
	bnez	$a1, .LBB54_58
# %bb.56:                               #   in Loop: Header=BB54_44 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
.LBB54_57:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 176
	ld.d	$s0, $s3, 696
	st.d	$a0, $sp, 216
	bnez	$s0, .LBB54_59
	b	.LBB54_75
	.p2align	4, , 16
.LBB54_58:                              #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 176
	ld.d	$s0, $s3, 696
	st.d	$a0, $sp, 216
	beqz	$s0, .LBB54_75
.LBB54_59:                              # %.lr.ph.i.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$s8, $sp, 384
	ld.d	$s7, $sp, 376
	ld.d	$s6, $sp, 96                    # 8-byte Folded Reload
	b	.LBB54_62
	.p2align	4, , 16
.LBB54_60:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB54_62 Depth=2
	sub.d	$a0, $s3, $s8
	slt	$a1, $fp, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
.LBB54_61:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB54_62 Depth=2
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s0, $a0
	masknez	$a2, $s2, $a0
	maskeqz	$a3, $s4, $a0
	or	$a2, $a3, $a2
	ldx.d	$s0, $s0, $a2
	maskeqz	$a0, $s6, $a0
	or	$s6, $a0, $a1
	beqz	$s0, .LBB54_64
.LBB54_62:                              #   Parent Loop BB54_44 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s3, $s0, 40
	sltu	$a0, $s8, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s8, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB54_60
# %bb.63:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB54_62 Depth=2
	ld.d	$a0, $s0, 32
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB54_61
	b	.LBB54_60
	.p2align	4, , 16
.LBB54_64:                              # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	beq	$s6, $a0, .LBB54_75
# %bb.65:                               #   in Loop: Header=BB54_44 Depth=1
	ld.d	$s0, $s6, 40
	sltu	$a0, $s0, $s8
	masknez	$a1, $s8, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB54_67
# %bb.66:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $s6, 32
	move	$a0, $s7
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB54_68
.LBB54_67:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	sub.d	$a0, $s8, $s0
	slt	$a1, $fp, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
.LBB54_68:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
                                        #   in Loop: Header=BB54_44 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
	masknez	$a2, $s6, $a1
	ld.d	$a3, $sp, 96                    # 8-byte Folded Reload
	maskeqz	$a1, $a3, $a1
	or	$s8, $a1, $a2
	addi.d	$a1, $sp, 192
	st.d	$a1, $sp, 176
	st.d	$zero, $sp, 184
	st.b	$zero, $sp, 192
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	bltz	$a0, .LBB54_76
# %bb.69:                               #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s8, 96
	addi.d	$a2, $sp, 160
	st.d	$a2, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	st.d	$a1, $sp, 368
	move	$a0, $a2
	bltu	$a1, $s2, .LBB54_72
# %bb.70:                               # %.noexc.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2059:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 368
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2060:
# %bb.71:                               # %.noexc169
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 368
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_72:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB54_217
# %bb.73:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	bnez	$a1, .LBB54_216
# %bb.74:                               #   in Loop: Header=BB54_44 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB54_217
	.p2align	4, , 16
.LBB54_75:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
                                        #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a0, $sp, 192
	st.d	$a0, $sp, 176
	st.d	$zero, $sp, 184
	st.b	$zero, $sp, 192
	ld.d	$s8, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
.LBB54_76:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s3, 840
	ld.d	$a2, $s3, 848
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.w	$a1, $a1, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB54_78
# %bb.77:                               #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB54_79
	.p2align	4, , 16
.LBB54_78:                              #   in Loop: Header=BB54_44 Depth=1
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB54_79:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit171
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2062:
	move	$a1, $zero
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2063:
# %bb.80:                               #   in Loop: Header=BB54_44 Depth=1
.Ltmp2064:
	pcalau12i	$a0, %pc_hi20(.L.str.68)
	addi.d	$a1, $a0, %pc_lo12(.L.str.68)
	ori	$a2, $zero, 30
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2065:
# %bb.81:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_278
# %bb.82:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i332
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_84
# %bb.83:                               #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_86
	.p2align	4, , 16
.LBB54_84:                              #   in Loop: Header=BB54_44 Depth=1
.Ltmp2066:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2067:
# %bb.85:                               # %.noexc336
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2068:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2069:
.LBB54_86:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2070:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2071:
# %bb.87:                               # %.noexc338
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2072:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2073:
# %bb.88:                               # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2074:
	pcalau12i	$a0, %pc_hi20(.L.str.69)
	addi.d	$a1, $a0, %pc_lo12(.L.str.69)
	ori	$a2, $zero, 23
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2075:
# %bb.89:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit175
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_278
# %bb.90:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i342
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_92
# %bb.91:                               #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_94
	.p2align	4, , 16
.LBB54_92:                              #   in Loop: Header=BB54_44 Depth=1
.Ltmp2076:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2077:
# %bb.93:                               # %.noexc347
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2078:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2079:
.LBB54_94:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i344
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2080:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2081:
# %bb.95:                               # %.noexc349
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2082:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2083:
# %bb.96:                               # %_ZNSolsEPFRSoS_E.exit177
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 72                    # 8-byte Folded Reload
	ori	$a0, $zero, 2
	st.w	$a0, $a2, 0
.Ltmp2084:
	move	$a0, $s3
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2085:
# %bb.97:                               #   in Loop: Header=BB54_44 Depth=1
	srai.d	$a1, $a0, 63
	andn	$a0, $a0, $a1
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
.LBB54_98:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 304
	srli.d	$a1, $s0, 3
	addi.w	$a2, $zero, -8
	lu52i.d	$a2, $a2, 511
	and	$a1, $a1, $a2
	ldx.d	$a0, $a0, $a1
	srl.d	$a0, $a0, $s0
	andi	$a0, $a0, 1
	beqz	$a0, .LBB54_119
# %bb.99:                               #   in Loop: Header=BB54_44 Depth=1
	st.d	$s8, $sp, 16                    # 8-byte Folded Spill
	ld.d	$s8, $s3, 696
	beqz	$s8, .LBB54_125
# %bb.100:                              # %.lr.ph.i.i.i221
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$s0, $sp, 216
	ld.d	$s7, $sp, 208
	ld.d	$s6, $sp, 96                    # 8-byte Folded Reload
	b	.LBB54_103
	.p2align	4, , 16
.LBB54_101:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i246
                                        #   in Loop: Header=BB54_103 Depth=2
	sub.d	$a0, $s3, $s0
	slt	$a1, $fp, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
.LBB54_102:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i227
                                        #   in Loop: Header=BB54_103 Depth=2
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s8, $a0
	masknez	$a2, $s2, $a0
	maskeqz	$a3, $s4, $a0
	or	$a2, $a3, $a2
	ldx.d	$s8, $s8, $a2
	maskeqz	$a0, $s6, $a0
	or	$s6, $a0, $a1
	beqz	$s8, .LBB54_105
.LBB54_103:                             #   Parent Loop BB54_44 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s3, $s8, 40
	sltu	$a0, $s0, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB54_101
# %bb.104:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i225
                                        #   in Loop: Header=BB54_103 Depth=2
	ld.d	$a0, $s8, 32
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB54_102
	b	.LBB54_101
	.p2align	4, , 16
.LBB54_105:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i234
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	beq	$s6, $a0, .LBB54_125
# %bb.106:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$s3, $s6, 40
	sltu	$a0, $s3, $s0
	masknez	$a1, $s0, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB54_124
# %bb.107:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i236
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $s6, 32
	move	$a0, $s7
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB54_124
# %bb.108:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit251
                                        #   in Loop: Header=BB54_44 Depth=1
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB54_125
.LBB54_109:                             #   in Loop: Header=BB54_44 Depth=1
	slti	$a0, $a0, 0
	masknez	$a1, $s6, $a0
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	maskeqz	$a0, $a2, $a0
	or	$s0, $a0, $a1
	ld.d	$s6, $sp, 16                    # 8-byte Folded Reload
	addi.d	$a1, $s6, 64
	addi.d	$s7, $s0, 64
.Ltmp2086:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2087:
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
# %bb.110:                              # %.noexc252
                                        #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a0, $s0, 96
	addi.d	$a1, $s6, 96
.Ltmp2088:
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2089:
# %bb.111:                              # %.noexc253
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.w	$a0, $s6, 128
	st.w	$a0, $s0, 128
	ld.d	$a0, $s6, 120
	st.d	$a0, $s0, 120
	addi.d	$a0, $s0, 136
	addi.d	$a1, $s6, 136
.Ltmp2090:
	pcaddu18i	$ra, %call36(_ZNSt6vectorIiSaIiEEaSERKS1_)
	jirl	$ra, $ra, 0
.Ltmp2091:
# %bb.112:                              # %.noexc254
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.h	$a0, $s6, 160
	st.h	$a0, $s0, 160
	addi.d	$a0, $s0, 168
	addi.d	$a1, $s6, 168
.Ltmp2092:
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2093:
# %bb.113:                              # %_ZN2PP8VariableaSERKS0_.exit
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 216
	ld.d	$s8, $sp, 208
	st.b	$zero, $s0, 161
	addi.d	$a0, $sp, 128
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 144
	bltu	$a1, $s2, .LBB54_116
# %bb.114:                              # %.noexc.i257
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2094:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2095:
# %bb.115:                              # %.noexc258
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB54_116:                             # %._crit_edge.i.i256
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB54_228
# %bb.117:                              # %._crit_edge.i.i256
                                        #   in Loop: Header=BB54_44 Depth=1
	bnez	$a1, .LBB54_227
# %bb.118:                              #   in Loop: Header=BB54_44 Depth=1
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB54_228
	.p2align	4, , 16
.LBB54_119:                             #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 184
	ld.d	$a0, $sp, 216
	bne	$a2, $a0, .LBB54_122
# %bb.120:                              #   in Loop: Header=BB54_44 Depth=1
	beqz	$a2, .LBB54_231
# %bb.121:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 208
	ld.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB54_231
.LBB54_122:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s3, 840
	ld.d	$a2, $s3, 848
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.w	$a1, $a1, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB54_147
# %bb.123:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB54_148
.LBB54_124:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i242
                                        #   in Loop: Header=BB54_44 Depth=1
	sub.d	$a0, $s0, $s3
	slt	$a1, $fp, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB54_109
	.p2align	4, , 16
.LBB54_125:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit251.thread
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $s3, 840
	ld.d	$a2, $s3, 848
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.w	$a1, $a1, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB54_127
# %bb.126:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB54_128
.LBB54_127:                             #   in Loop: Header=BB54_44 Depth=1
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB54_128:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit268
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2099:
	move	$a1, $zero
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2100:
# %bb.129:                              #   in Loop: Header=BB54_44 Depth=1
.Ltmp2101:
	pcalau12i	$a0, %pc_hi20(.L.str.81)
	addi.d	$a1, $a0, %pc_lo12(.L.str.81)
	ori	$a2, $zero, 27
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2102:
# %bb.130:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit270
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_280
# %bb.131:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i419
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_133
# %bb.132:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_135
.LBB54_133:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2103:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2104:
# %bb.134:                              # %.noexc424
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2105:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2106:
.LBB54_135:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i421
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2107:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2108:
# %bb.136:                              # %.noexc426
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2109:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2110:
# %bb.137:                              # %_ZNSolsEPFRSoS_E.exit272
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2111:
	pcalau12i	$a0, %pc_hi20(.L.str.69)
	addi.d	$a1, $a0, %pc_lo12(.L.str.69)
	ori	$a2, $zero, 23
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2112:
# %bb.138:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit274
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_280
# %bb.139:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i430
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_141
# %bb.140:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_143
.LBB54_141:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2113:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2114:
# %bb.142:                              # %.noexc435
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2115:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2116:
.LBB54_143:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i432
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2117:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2118:
# %bb.144:                              # %.noexc437
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2119:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2120:
# %bb.145:                              # %_ZNSolsEPFRSoS_E.exit276
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 72                    # 8-byte Folded Reload
	ori	$a0, $zero, 2
	st.w	$a0, $a2, 0
.Ltmp2121:
	move	$a0, $s3
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2122:
# %bb.146:                              #   in Loop: Header=BB54_44 Depth=1
	srai.d	$a1, $a0, 63
	andn	$a0, $a0, $a1
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	b	.LBB54_231
.LBB54_147:                             #   in Loop: Header=BB54_44 Depth=1
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB54_148:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit179
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2127:
	move	$a1, $zero
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2128:
# %bb.149:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a1, $a5, 72
	ld.d	$a0, $a5, 40
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $a5, 48
	ld.d	$a4, $a5, 56
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $a5, 32
	ld.d	$a1, $a5, 16
	slli.d	$a2, $a2, 7
	srli.d	$a3, $a3, 2
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 2
	add.d	$a2, $a2, $a3
	ld.d	$a4, $a5, 24
	slli.d	$a2, $a2, 32
	ld.d	$a3, $sp, 0                     # 8-byte Folded Reload
	add.d	$a2, $a2, $a3
	srai.d	$a3, $a2, 32
	sub.d	$a2, $a1, $a4
	srai.d	$a2, $a2, 2
	add.d	$a2, $a3, $a2
	bltz	$a2, .LBB54_152
# %bb.150:                              #   in Loop: Header=BB54_44 Depth=1
	ori	$a4, $zero, 127
	bltu	$a4, $a2, .LBB54_153
# %bb.151:                              #   in Loop: Header=BB54_44 Depth=1
	alsl.d	$a1, $a3, $a1, 2
	b	.LBB54_155
.LBB54_152:                             #   in Loop: Header=BB54_44 Depth=1
	srai.d	$a1, $a2, 7
	b	.LBB54_154
.LBB54_153:                             #   in Loop: Header=BB54_44 Depth=1
	srli.d	$a1, $a2, 7
.LBB54_154:                             #   in Loop: Header=BB54_44 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a2, $a1
	alsl.d	$a1, $a1, $a0, 2
.LBB54_155:                             # %_ZNSt5dequeIiSaIiEEixEm.exit182
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s3, 840
	ld.d	$a2, $s3, 848
	ld.w	$a1, $a1, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB54_157
# %bb.156:                              #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB54_158
.LBB54_157:                             #   in Loop: Header=BB54_44 Depth=1
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB54_158:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit184
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2129:
	move	$a1, $zero
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2130:
# %bb.159:                              #   in Loop: Header=BB54_44 Depth=1
.Ltmp2131:
	pcalau12i	$a0, %pc_hi20(.L.str.71)
	addi.d	$a1, $a0, %pc_lo12(.L.str.71)
	ori	$a2, $zero, 38
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2132:
# %bb.160:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit186
                                        #   in Loop: Header=BB54_44 Depth=1
	addi.w	$a1, $s0, 1
.Ltmp2133:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2134:
# %bb.161:                              #   in Loop: Header=BB54_44 Depth=1
.Ltmp2135:
	move	$s6, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.72)
	addi.d	$a1, $a0, %pc_lo12(.L.str.72)
	ori	$a2, $zero, 27
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2136:
# %bb.162:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit188
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 208
	ld.d	$a2, $sp, 216
.Ltmp2137:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2138:
# %bb.163:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB54_44 Depth=1
	move	$s6, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s6, $a0
	ld.d	$s7, $a0, 240
	beqz	$s7, .LBB54_278
# %bb.164:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i353
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB54_166
# %bb.165:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s7, 67
	b	.LBB54_168
.LBB54_166:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2139:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2140:
# %bb.167:                              # %.noexc358
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp2141:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp2142:
.LBB54_168:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i355
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2143:
	ext.w.b	$a1, $a0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2144:
# %bb.169:                              # %.noexc360
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2145:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2146:
# %bb.170:                              # %_ZNSolsEPFRSoS_E.exit191
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2147:
	pcalau12i	$a0, %pc_hi20(.L.str.73)
	addi.d	$a1, $a0, %pc_lo12(.L.str.73)
	ori	$a2, $zero, 45
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2148:
# %bb.171:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit193
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 376
	ld.d	$a2, $sp, 384
.Ltmp2149:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2150:
# %bb.172:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit195
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2151:
	move	$s6, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.74)
	addi.d	$a1, $a0, %pc_lo12(.L.str.74)
	ori	$a2, $zero, 5
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2152:
# %bb.173:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit197
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2153:
	pcalau12i	$a0, %pc_hi20(.L.str.75)
	addi.d	$a1, $a0, %pc_lo12(.L.str.75)
	ori	$a2, $zero, 14
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2154:
# %bb.174:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit199
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 176
	ld.d	$a2, $sp, 184
.Ltmp2155:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2156:
# %bb.175:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit201
                                        #   in Loop: Header=BB54_44 Depth=1
	move	$s6, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s6, $a0
	ld.d	$s7, $a0, 240
	beqz	$s7, .LBB54_278
# %bb.176:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i364
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB54_178
# %bb.177:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s7, 67
	b	.LBB54_180
.LBB54_178:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2157:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2158:
# %bb.179:                              # %.noexc369
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp2159:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp2160:
.LBB54_180:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i366
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2161:
	ext.w.b	$a1, $a0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2162:
# %bb.181:                              # %.noexc371
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2163:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2164:
# %bb.182:                              # %_ZNSolsEPFRSoS_E.exit203
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2165:
	pcalau12i	$a0, %pc_hi20(.L.str.76)
	addi.d	$a1, $a0, %pc_lo12(.L.str.76)
	ori	$a2, $zero, 38
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2166:
# %bb.183:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit205
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_278
# %bb.184:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i375
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_186
# %bb.185:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_188
.LBB54_186:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2167:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2168:
# %bb.187:                              # %.noexc380
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2169:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2170:
.LBB54_188:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i377
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2171:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2172:
# %bb.189:                              # %.noexc382
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2173:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2174:
# %bb.190:                              # %_ZNSolsEPFRSoS_E.exit207
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2175:
	pcalau12i	$a0, %pc_hi20(.L.str.77)
	addi.d	$a1, $a0, %pc_lo12(.L.str.77)
	ori	$a2, $zero, 79
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2176:
# %bb.191:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit209
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_278
# %bb.192:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i386
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_194
# %bb.193:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_196
.LBB54_194:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2177:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2178:
# %bb.195:                              # %.noexc391
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2179:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2180:
.LBB54_196:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i388
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2181:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2182:
# %bb.197:                              # %.noexc393
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2183:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2184:
# %bb.198:                              # %_ZNSolsEPFRSoS_E.exit211
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2185:
	pcalau12i	$a0, %pc_hi20(.L.str.78)
	addi.d	$a1, $a0, %pc_lo12(.L.str.78)
	ori	$a2, $zero, 49
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2186:
# %bb.199:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit213
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_278
# %bb.200:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i397
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_202
# %bb.201:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_204
.LBB54_202:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2187:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2188:
# %bb.203:                              # %.noexc402
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2189:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2190:
.LBB54_204:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i399
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2191:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2192:
# %bb.205:                              # %.noexc404
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2193:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2194:
# %bb.206:                              # %_ZNSolsEPFRSoS_E.exit215
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2195:
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a2, $zero, 68
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2196:
# %bb.207:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit217
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB54_278
# %bb.208:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i408
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_210
# %bb.209:                              #   in Loop: Header=BB54_44 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_212
.LBB54_210:                             #   in Loop: Header=BB54_44 Depth=1
.Ltmp2197:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2198:
# %bb.211:                              # %.noexc413
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp2199:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp2200:
.LBB54_212:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i410
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2201:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2202:
# %bb.213:                              # %.noexc415
                                        #   in Loop: Header=BB54_44 Depth=1
.Ltmp2203:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2204:
# %bb.214:                              # %_ZNSolsEPFRSoS_E.exit219
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 72                    # 8-byte Folded Reload
	ori	$a0, $zero, 2
	st.w	$a0, $a2, 0
.Ltmp2205:
	move	$a0, $s3
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2206:
# %bb.215:                              #   in Loop: Header=BB54_44 Depth=1
	srai.d	$a1, $a0, 63
	andn	$a0, $a0, $a1
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	b	.LBB54_231
.LBB54_216:                             #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_217:                             #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a2, $sp, 368
	ld.d	$a0, $sp, 176
	st.d	$a2, $sp, 152
	addi.d	$a1, $sp, 192
	beq	$a0, $a1, .LBB54_221
# %bb.218:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 144
	addi.d	$a3, $sp, 160
	beq	$a1, $a3, .LBB54_224
# %bb.219:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a4, $sp, 160
	ld.d	$a3, $sp, 192
	st.d	$a1, $sp, 176
	st.d	$a2, $sp, 184
	st.d	$a4, $sp, 192
	beqz	$a0, .LBB54_223
# %bb.220:                              #   in Loop: Header=BB54_44 Depth=1
	st.d	$a0, $sp, 144
	st.d	$a3, $sp, 160
	b	.LBB54_239
.LBB54_221:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 144
	addi.d	$a3, $sp, 160
	beq	$a1, $a3, .LBB54_224
# %bb.222:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i.thread
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 160
	st.d	$a1, $sp, 176
	st.d	$a2, $sp, 184
	st.d	$a0, $sp, 192
.LBB54_223:                             #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a1, $sp, 160
	st.d	$a1, $sp, 144
	move	$a0, $a1
	st.d	$zero, $sp, 152
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 144
	bne	$a0, $a1, .LBB54_240
	b	.LBB54_98
.LBB54_224:                             #   in Loop: Header=BB54_44 Depth=1
	beqz	$a2, .LBB54_238
# %bb.225:                              #   in Loop: Header=BB54_44 Depth=1
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB54_237
# %bb.226:                              #   in Loop: Header=BB54_44 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB54_238
.LBB54_227:                             #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_228:                             #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 144
	st.d	$a0, $sp, 120
.Ltmp2096:
	addi.d	$a1, $sp, 112
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2097:
# %bb.229:                              # %_ZN2PP8Variable11set_varnameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 112
	addi.d	$a1, $sp, 128
	beq	$a0, $a1, .LBB54_231
# %bb.230:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i261
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB54_231:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit263
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 176
	addi.d	$a1, $sp, 192
	beq	$a0, $a1, .LBB54_233
# %bb.232:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i277
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_233:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit279
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 208
	addi.d	$a1, $sp, 224
	beq	$a0, $a1, .LBB54_235
# %bb.234:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i280
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 224
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_235:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit282
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB54_43
# %bb.236:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i283
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 392
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_43
.LBB54_237:                             #   in Loop: Header=BB54_44 Depth=1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_238:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a0, $sp, 152
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 184
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 144
.LBB54_239:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB54_44 Depth=1
	addi.d	$a1, $sp, 160
	st.d	$zero, $sp, 152
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 144
	beq	$a0, $a1, .LBB54_98
.LBB54_240:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB54_44 Depth=1
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_98
.LBB54_241:                             # %.preheader
	ld.d	$a0, $s3, 704
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB54_243
	b	.LBB54_245
	.p2align	4, , 16
.LBB54_242:                             #   in Loop: Header=BB54_243 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB54_245
.LBB54_243:                             # %.lr.ph632
                                        # =>This Inner Loop Header: Depth=1
	ld.bu	$a1, $a0, 161
	beqz	$a1, .LBB54_242
# %bb.244:                              #   in Loop: Header=BB54_243 Depth=1
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	addi.d	$a0, $a0, 32
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 200
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 720
	ld.d	$a0, $s3, 704
	addi.d	$a1, $a1, -1
	st.d	$a1, $s3, 720
	bne	$a0, $fp, .LBB54_243
.LBB54_245:                             # %.critedge
	ld.d	$a7, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a7, 40
	ld.d	$a3, $a7, 72
	ld.d	$a2, $a7, 16
	ld.d	$a1, $a7, 24
	sub.d	$a4, $a3, $a0
	srli.d	$a4, $a4, 3
	sltu	$a3, $zero, $a3
	ld.d	$a5, $a7, 48
	ld.d	$a6, $a7, 56
	sub.d	$a3, $a4, $a3
	ld.d	$a4, $a7, 32
	slli.d	$a3, $a3, 7
	sub.d	$a5, $a5, $a6
	srli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a2
	srli.d	$a4, $a4, 2
	add.d	$a4, $a5, $a4
	add.w	$a4, $a4, $a3
	sub.d	$a3, $a2, $a1
	srai.d	$a3, $a3, 2
	add.d	$a3, $a4, $a3
	bltz	$a3, .LBB54_249
# %bb.246:
	ori	$a5, $zero, 127
	bltu	$a5, $a3, .LBB54_250
# %bb.247:
	alsl.d	$a2, $a4, $a2, 2
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 2
	addi.d	$a1, $a3, -1
	bgtz	$a3, .LBB54_252
.LBB54_248:
	srai.d	$a2, $a1, 7
	b	.LBB54_255
.LBB54_249:
	srai.d	$a2, $a3, 7
	b	.LBB54_251
.LBB54_250:
	srli.d	$a2, $a3, 7
.LBB54_251:
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	slli.d	$a2, $a2, 7
	sub.d	$a2, $a3, $a2
	alsl.d	$a2, $a2, $a1, 2
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 2
	addi.d	$a1, $a3, -1
	blez	$a3, .LBB54_248
.LBB54_252:
	ori	$a4, $zero, 128
	bltu	$a4, $a3, .LBB54_254
# %bb.253:
	ld.d	$a3, $a0, 0
	addi.d	$a1, $a2, -4
	b	.LBB54_256
.LBB54_254:
	srli.d	$a2, $a1, 7
.LBB54_255:
	slli.d	$a3, $a2, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a2, $a0, 3
	slli.d	$a2, $a2, 7
	sub.d	$a1, $a1, $a2
	alsl.d	$a1, $a1, $a3, 2
.LBB54_256:                             # %_ZStmiRKSt15_Deque_iteratorIiRiPiEl.exit299
	st.d	$a1, $sp, 376
	st.d	$a3, $sp, 384
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 392
	st.d	$a0, $sp, 400
.Ltmp2208:
	addi.d	$a0, $sp, 208
	addi.d	$a2, $sp, 376
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE)
	jirl	$ra, $ra, 0
.Ltmp2209:
# %bb.257:
	ld.d	$a0, $sp, 240
	beqz	$a0, .LBB54_259
# %bb.258:
	ld.d	$a1, $sp, 272
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_259:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit
	ld.d	$a0, $sp, 280
	ld.d	$fp, $sp, 288
	beq	$a0, $fp, .LBB54_265
# %bb.260:                              # %.lr.ph.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB54_262
	.p2align	4, , 16
.LBB54_261:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB54_262 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB54_264
.LBB54_262:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB54_261
# %bb.263:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB54_262 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_261
.LBB54_264:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $sp, 280
.LBB54_265:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB54_267
# %bb.266:
	ld.d	$a1, $sp, 296
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_267:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $sp, 304
	beqz	$a0, .LBB54_269
# %bb.268:
	ld.d	$a1, $sp, 336
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 304
	st.w	$zero, $sp, 312
.LBB54_269:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit307
	ld.d	$a0, $sp, 344
	ld.d	$fp, $sp, 352
	beq	$a0, $fp, .LBB54_275
# %bb.270:                              # %.lr.ph.i.i309.preheader
	addi.d	$s0, $a0, 16
	b	.LBB54_272
	.p2align	4, , 16
.LBB54_271:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i312
                                        #   in Loop: Header=BB54_272 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB54_274
.LBB54_272:                             # %.lr.ph.i.i309
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB54_271
# %bb.273:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i311
                                        #   in Loop: Header=BB54_272 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_271
.LBB54_274:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i314
	ld.d	$a0, $sp, 344
.LBB54_275:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i316
	beqz	$a0, .LBB54_277
# %bb.276:
	ld.d	$a1, $sp, 360
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_277:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit319
	move	$a0, $s2
	ld.d	$s8, $sp, 408                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 416                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 424                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 440                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 448                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 472                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 480                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 488                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 496
	ret
.LBB54_278:                             # %.invoke
.Ltmp2211:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2212:
# %bb.279:                              # %.cont
.LBB54_280:                             # %.invoke654
.Ltmp2124:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2125:
# %bb.281:                              # %.cont655
.LBB54_282:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB54_283:
.Ltmp2210:
	b	.LBB54_300
.LBB54_284:
.Ltmp2052:
	b	.LBB54_300
.LBB54_285:
.Ltmp2049:
	move	$fp, $a0
	b	.LBB54_294
.LBB54_286:
.Ltmp2061:
	b	.LBB54_305
.LBB54_287:
.Ltmp2098:
	ld.d	$a2, $sp, 112
	move	$fp, $a0
	addi.d	$a0, $sp, 128
	bne	$a2, $a0, .LBB54_297
# %bb.288:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit266
	ld.d	$a0, $sp, 176
	addi.d	$a1, $sp, 192
	bne	$a0, $a1, .LBB54_306
.LBB54_289:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit288
	ld.d	$a0, $sp, 208
	addi.d	$a1, $sp, 224
	bne	$a0, $a1, .LBB54_307
.LBB54_290:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit291
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	bne	$a0, $a1, .LBB54_308
.LBB54_291:
	ld.d	$a0, $sp, 240
	beqz	$a0, .LBB54_293
.LBB54_292:
	ld.d	$a1, $sp, 272
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 240
	st.w	$zero, $sp, 248
.LBB54_293:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit324
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB54_294:
	ld.d	$a0, $sp, 304
	beqz	$a0, .LBB54_296
# %bb.295:
	ld.d	$a1, $sp, 336
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_296:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit329
	addi.d	$a0, $sp, 344
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB54_297:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i264
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 176
	addi.d	$a1, $sp, 192
	beq	$a0, $a1, .LBB54_289
	b	.LBB54_306
.LBB54_298:
.Ltmp2058:
	move	$fp, $a0
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB54_291
	b	.LBB54_308
.LBB54_299:
.Ltmp2055:
.LBB54_300:
	move	$fp, $a0
	ld.d	$a0, $sp, 240
	bnez	$a0, .LBB54_292
	b	.LBB54_293
.LBB54_301:                             # %.loopexit.split-lp486
.Ltmp2126:
	b	.LBB54_305
.LBB54_302:                             # %.loopexit.split-lp
.Ltmp2213:
	b	.LBB54_305
.LBB54_303:                             # %.loopexit485
.Ltmp2123:
	b	.LBB54_305
.LBB54_304:                             # %.loopexit
.Ltmp2207:
.LBB54_305:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit266
	move	$fp, $a0
	ld.d	$a0, $sp, 176
	addi.d	$a1, $sp, 192
	beq	$a0, $a1, .LBB54_289
.LBB54_306:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i286
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 208
	addi.d	$a1, $sp, 224
	beq	$a0, $a1, .LBB54_290
.LBB54_307:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i289
	ld.d	$a1, $sp, 224
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB54_291
.LBB54_308:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i292
	ld.d	$a1, $sp, 392
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 240
	bnez	$a0, .LBB54_292
	b	.LBB54_293
.Lfunc_end54:
	.size	_ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end54-_ZN2PP11PowerParser12jump_to_callERiRSt5dequeIiSaIiEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table54:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp2047-.Lfunc_begin34       #   Call between .Lfunc_begin34 and .Ltmp2047
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2047-.Lfunc_begin34       # >> Call Site 2 <<
	.uleb128 .Ltmp2048-.Ltmp2047            #   Call between .Ltmp2047 and .Ltmp2048
	.uleb128 .Ltmp2049-.Lfunc_begin34       #     jumps to .Ltmp2049
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2050-.Lfunc_begin34       # >> Call Site 3 <<
	.uleb128 .Ltmp2051-.Ltmp2050            #   Call between .Ltmp2050 and .Ltmp2051
	.uleb128 .Ltmp2052-.Lfunc_begin34       #     jumps to .Ltmp2052
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2053-.Lfunc_begin34       # >> Call Site 4 <<
	.uleb128 .Ltmp2054-.Ltmp2053            #   Call between .Ltmp2053 and .Ltmp2054
	.uleb128 .Ltmp2055-.Lfunc_begin34       #     jumps to .Ltmp2055
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2054-.Lfunc_begin34       # >> Call Site 5 <<
	.uleb128 .Ltmp2056-.Ltmp2054            #   Call between .Ltmp2054 and .Ltmp2056
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2056-.Lfunc_begin34       # >> Call Site 6 <<
	.uleb128 .Ltmp2057-.Ltmp2056            #   Call between .Ltmp2056 and .Ltmp2057
	.uleb128 .Ltmp2058-.Lfunc_begin34       #     jumps to .Ltmp2058
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2057-.Lfunc_begin34       # >> Call Site 7 <<
	.uleb128 .Ltmp2059-.Ltmp2057            #   Call between .Ltmp2057 and .Ltmp2059
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2059-.Lfunc_begin34       # >> Call Site 8 <<
	.uleb128 .Ltmp2060-.Ltmp2059            #   Call between .Ltmp2059 and .Ltmp2060
	.uleb128 .Ltmp2061-.Lfunc_begin34       #     jumps to .Ltmp2061
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2062-.Lfunc_begin34       # >> Call Site 9 <<
	.uleb128 .Ltmp2085-.Ltmp2062            #   Call between .Ltmp2062 and .Ltmp2085
	.uleb128 .Ltmp2207-.Lfunc_begin34       #     jumps to .Ltmp2207
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2085-.Lfunc_begin34       # >> Call Site 10 <<
	.uleb128 .Ltmp2086-.Ltmp2085            #   Call between .Ltmp2085 and .Ltmp2086
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2086-.Lfunc_begin34       # >> Call Site 11 <<
	.uleb128 .Ltmp2095-.Ltmp2086            #   Call between .Ltmp2086 and .Ltmp2095
	.uleb128 .Ltmp2123-.Lfunc_begin34       #     jumps to .Ltmp2123
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2095-.Lfunc_begin34       # >> Call Site 12 <<
	.uleb128 .Ltmp2099-.Ltmp2095            #   Call between .Ltmp2095 and .Ltmp2099
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2099-.Lfunc_begin34       # >> Call Site 13 <<
	.uleb128 .Ltmp2122-.Ltmp2099            #   Call between .Ltmp2099 and .Ltmp2122
	.uleb128 .Ltmp2123-.Lfunc_begin34       #     jumps to .Ltmp2123
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2127-.Lfunc_begin34       # >> Call Site 14 <<
	.uleb128 .Ltmp2206-.Ltmp2127            #   Call between .Ltmp2127 and .Ltmp2206
	.uleb128 .Ltmp2207-.Lfunc_begin34       #     jumps to .Ltmp2207
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2206-.Lfunc_begin34       # >> Call Site 15 <<
	.uleb128 .Ltmp2096-.Ltmp2206            #   Call between .Ltmp2206 and .Ltmp2096
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2096-.Lfunc_begin34       # >> Call Site 16 <<
	.uleb128 .Ltmp2097-.Ltmp2096            #   Call between .Ltmp2096 and .Ltmp2097
	.uleb128 .Ltmp2098-.Lfunc_begin34       #     jumps to .Ltmp2098
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2097-.Lfunc_begin34       # >> Call Site 17 <<
	.uleb128 .Ltmp2208-.Ltmp2097            #   Call between .Ltmp2097 and .Ltmp2208
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2208-.Lfunc_begin34       # >> Call Site 18 <<
	.uleb128 .Ltmp2209-.Ltmp2208            #   Call between .Ltmp2208 and .Ltmp2209
	.uleb128 .Ltmp2210-.Lfunc_begin34       #     jumps to .Ltmp2210
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2209-.Lfunc_begin34       # >> Call Site 19 <<
	.uleb128 .Ltmp2211-.Ltmp2209            #   Call between .Ltmp2209 and .Ltmp2211
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2211-.Lfunc_begin34       # >> Call Site 20 <<
	.uleb128 .Ltmp2212-.Ltmp2211            #   Call between .Ltmp2211 and .Ltmp2212
	.uleb128 .Ltmp2213-.Lfunc_begin34       #     jumps to .Ltmp2213
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2124-.Lfunc_begin34       # >> Call Site 21 <<
	.uleb128 .Ltmp2125-.Ltmp2124            #   Call between .Ltmp2124 and .Ltmp2125
	.uleb128 .Ltmp2126-.Lfunc_begin34       #     jumps to .Ltmp2126
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2125-.Lfunc_begin34       # >> Call Site 22 <<
	.uleb128 .Lfunc_end54-.Ltmp2125         #   Call between .Ltmp2125 and .Lfunc_end54
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_ # -- Begin function _ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_
	.p2align	5
	.type	_ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_,@function
_ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_: # @_ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:
	addi.d	$sp, $sp, -976
	.cfi_def_cfa_offset 976
	st.d	$ra, $sp, 968                   # 8-byte Folded Spill
	st.d	$fp, $sp, 960                   # 8-byte Folded Spill
	st.d	$s0, $sp, 952                   # 8-byte Folded Spill
	st.d	$s1, $sp, 944                   # 8-byte Folded Spill
	st.d	$s2, $sp, 936                   # 8-byte Folded Spill
	st.d	$s3, $sp, 928                   # 8-byte Folded Spill
	st.d	$s4, $sp, 920                   # 8-byte Folded Spill
	st.d	$s5, $sp, 912                   # 8-byte Folded Spill
	st.d	$s6, $sp, 904                   # 8-byte Folded Spill
	st.d	$s7, $sp, 896                   # 8-byte Folded Spill
	st.d	$s8, $sp, 888                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s4, $a4
	st.d	$a3, $sp, 160                   # 8-byte Folded Spill
	move	$fp, $a2
	move	$s2, $a1
	move	$s5, $a0
	move	$s0, $zero
	move	$s6, $zero
	move	$s1, $zero
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s3, $a0, -1973
	b	.LBB55_3
	.p2align	4, , 16
.LBB55_1:                               #   in Loop: Header=BB55_3 Depth=1
	add.d	$a0, $a1, $s0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB55_6
.LBB55_2:                               #   in Loop: Header=BB55_3 Depth=1
	addi.d	$s1, $s1, 1
	addi.w	$s6, $s6, 1
	addi.d	$s0, $s0, 432
.LBB55_3:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s5, 896
	ld.d	$a0, $s5, 864
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $s5, 872
	ld.d	$a4, $s5, 880
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s5, 856
	ld.d	$a1, $s5, 840
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s3
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s3
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB55_7
# %bb.4:                                #   in Loop: Header=BB55_3 Depth=1
	ld.d	$a2, $s5, 848
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB55_1
# %bb.5:                                #   in Loop: Header=BB55_3 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB55_2
.LBB55_6:
	st.d	$zero, $sp, 144                 # 8-byte Folded Spill
	b	.LBB55_15
.LBB55_7:
	ld.d	$a3, $s5, 848
	ld.w	$a2, $s2, 0
	sub.d	$a3, $a1, $a3
	srai.d	$a3, $a3, 4
	mul.d	$a3, $a3, $s3
	add.d	$a3, $a3, $a2
	beqz	$a3, .LBB55_9
# %bb.8:
	slli.d	$a1, $a3, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB55_10
.LBB55_9:
	ori	$a0, $zero, 432
	mul.d	$a0, $a2, $a0
	add.d	$a0, $a1, $a0
.LBB55_10:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit216
	move	$a1, $zero
	ld.d	$s0, $sp, 160                   # 8-byte Folded Reload
	move	$a2, $s0
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 16
	pcalau12i	$a0, %pc_hi20(.L.str.83)
	addi.d	$a1, $a0, %pc_lo12(.L.str.83)
	ori	$a2, $zero, 11
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a2, $fp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.84)
	addi.d	$a1, $a0, %pc_lo12(.L.str.84)
	ori	$a2, $zero, 11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB55_389
# %bb.11:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB55_13
# %bb.12:
	ld.bu	$a0, $s0, 67
	b	.LBB55_14
.LBB55_13:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB55_14:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $s4, 0
	move	$a0, $s5
	ld.d	$a1, $sp, 160                   # 8-byte Folded Reload
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	srai.d	$a1, $a0, 63
	andn	$a0, $a0, $a1
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	addi.w	$s6, $zero, -1
.LBB55_15:
	st.d	$zero, $sp, 872
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 48                   # 16-byte Folded Spill
	vst	$vr0, $sp, 856
	st.d	$zero, $sp, 816
	st.w	$zero, $sp, 824
	ld.d	$a0, $s5, 840
	ld.d	$a2, $s5, 848
	st.d	$zero, $sp, 832
	st.w	$zero, $sp, 840
	ld.w	$a1, $s2, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $a2, $a1
	st.d	$zero, $sp, 848
	beqz	$a2, .LBB55_17
# %bb.16:
	ld.d	$a0, $s5, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB55_18
.LBB55_17:
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB55_18:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit218
.Ltmp2214:
	addi.d	$a1, $sp, 856
	addi.d	$a2, $sp, 816
	ld.d	$a3, $sp, 160                   # 8-byte Folded Reload
	move	$a4, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi)
	jirl	$ra, $ra, 0
.Ltmp2215:
# %bb.19:
	st.d	$zero, $sp, 808
	vld	$vr0, $sp, 48                   # 16-byte Folded Reload
	vst	$vr0, $sp, 792
	st.d	$zero, $sp, 752
	ld.d	$a0, $s5, 840
	ld.d	$a1, $s5, 848
	st.w	$zero, $sp, 760
	st.d	$zero, $sp, 768
	st.w	$zero, $sp, 776
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s3
	add.d	$a1, $a1, $s6
	st.d	$zero, $sp, 784
	beqz	$a1, .LBB55_21
# %bb.20:
	ld.d	$a0, $s5, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB55_22
.LBB55_21:
	ori	$a1, $zero, 432
	mul.d	$a1, $s6, $a1
	add.d	$a0, $a0, $a1
.LBB55_22:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit220
.Ltmp2217:
	addi.d	$a1, $sp, 792
	addi.d	$a2, $sp, 752
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE)
	jirl	$ra, $ra, 0
.Ltmp2218:
# %bb.23:
	ld.d	$a0, $sp, 864
	ld.d	$a1, $sp, 856
	ld.d	$a2, $sp, 800
	ld.d	$a3, $sp, 792
	sub.d	$a0, $a0, $a1
	srai.d	$a0, $a0, 5
	addi.w	$s0, $a0, 0
	sub.d	$a0, $a2, $a3
	srai.d	$a0, $a0, 5
	addi.w	$s1, $a0, 0
	st.d	$s5, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 128                   # 8-byte Folded Spill
	beq	$s0, $s1, .LBB55_70
# %bb.24:
	ld.d	$a0, $s5, 840
	ld.d	$a2, $s5, 848
	ld.w	$a1, $s2, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB55_26
# %bb.25:
	ld.d	$a0, $s5, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB55_27
.LBB55_26:
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB55_27:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit222
.Ltmp2220:
	move	$a1, $zero
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2221:
# %bb.28:
	ld.d	$a0, $s5, 840
	ld.d	$a1, $s5, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s3
	add.d	$a1, $a1, $s6
	beqz	$a1, .LBB55_30
# %bb.29:
	ld.d	$a0, $s5, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB55_31
.LBB55_30:
	ori	$a1, $zero, 432
	mul.d	$a1, $s6, $a1
	add.d	$a0, $a0, $a1
.LBB55_31:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit224
.Ltmp2222:
	move	$a1, $zero
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2223:
# %bb.32:
	ld.d	$a0, $sp, 160                   # 8-byte Folded Reload
	addi.d	$fp, $a0, 16
.Ltmp2224:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a2, $zero, 30
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2225:
# %bb.33:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
.Ltmp2226:
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2227:
# %bb.34:
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB55_387
# %bb.35:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i470
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB55_37
# %bb.36:
	ld.bu	$a0, $s3, 67
	b	.LBB55_39
.LBB55_37:
.Ltmp2228:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2229:
# %bb.38:                               # %.noexc474
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp2230:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp2231:
.LBB55_39:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp2232:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2233:
# %bb.40:                               # %.noexc476
.Ltmp2234:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2235:
# %bb.41:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp2236:
	pcalau12i	$a0, %pc_hi20(.L.str.87)
	addi.d	$a1, $a0, %pc_lo12(.L.str.87)
	ori	$a2, $zero, 33
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2237:
# %bb.42:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit225
.Ltmp2238:
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2239:
# %bb.43:
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB55_387
# %bb.44:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i480
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB55_46
# %bb.45:
	ld.bu	$a0, $s1, 67
	b	.LBB55_48
.LBB55_46:
.Ltmp2240:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2241:
# %bb.47:                               # %.noexc485
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp2242:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp2243:
.LBB55_48:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i482
.Ltmp2244:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2245:
# %bb.49:                               # %.noexc487
.Ltmp2246:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2247:
# %bb.50:                               # %_ZNSolsEPFRSoS_E.exit226
.Ltmp2248:
	pcalau12i	$a0, %pc_hi20(.L.str.88)
	addi.d	$a1, $a0, %pc_lo12(.L.str.88)
	ori	$a2, $zero, 23
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2249:
# %bb.51:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit227
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB55_387
# %bb.52:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i491
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB55_54
# %bb.53:
	ld.bu	$a0, $s0, 67
	b	.LBB55_56
.LBB55_54:
.Ltmp2250:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2251:
# %bb.55:                               # %.noexc496
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2252:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2253:
.LBB55_56:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i493
.Ltmp2254:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2255:
# %bb.57:                               # %.noexc498
.Ltmp2256:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2257:
# %bb.58:                               # %_ZNSolsEPFRSoS_E.exit228
	ori	$a0, $zero, 2
	st.w	$a0, $s4, 0
.Ltmp2258:
	move	$a0, $s5
	ld.d	$a1, $sp, 160                   # 8-byte Folded Reload
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2259:
# %bb.59:
	move	$fp, $a0
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	slt	$a0, $a1, $a0
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $fp, $a0
	or	$a0, $a0, $a1
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	blez	$fp, .LBB55_70
# %bb.60:
.Ltmp2260:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.89)
	addi.d	$a1, $a1, %pc_lo12(.L.str.89)
	ori	$a2, $zero, 53
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2261:
# %bb.61:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit229
	ld.w	$a1, $s4, 0
.Ltmp2262:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2263:
# %bb.62:
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB55_387
# %bb.63:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i502
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB55_65
# %bb.64:
	ld.bu	$a0, $s1, 67
	b	.LBB55_67
.LBB55_65:
.Ltmp2264:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2265:
# %bb.66:                               # %.noexc507
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp2266:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp2267:
.LBB55_67:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i504
.Ltmp2268:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2269:
# %bb.68:                               # %.noexc509
.Ltmp2270:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2271:
# %bb.69:                               # %_ZNSolsEPFRSoS_E.exit230
	ori	$a0, $zero, 1
	bne	$fp, $a0, .LBB55_361
.LBB55_70:
	ld.d	$a0, $sp, 800
	ld.d	$a1, $sp, 792
	sub.d	$a0, $a0, $a1
	srli.d	$a0, $a0, 5
	addi.w	$a0, $a0, 0
	blez	$a0, .LBB55_358
# %bb.71:                               # %.lr.ph
	move	$fp, $zero
	move	$s1, $zero
	ld.d	$a0, $sp, 160                   # 8-byte Folded Reload
	addi.d	$s3, $a0, 16
	addi.d	$a0, $a0, 256
	st.d	$a0, $sp, 168                   # 8-byte Folded Spill
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 511
	st.d	$a0, $sp, 152                   # 8-byte Folded Spill
	ori	$a0, $zero, 432
	ld.d	$a1, $sp, 128                   # 8-byte Folded Reload
	mul.d	$a0, $a1, $a0
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.90)
	addi.d	$a0, $a0, %pc_lo12(.L.str.90)
	st.d	$a0, $sp, 112                   # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.91)
	addi.d	$a0, $a0, %pc_lo12(.L.str.91)
	st.d	$a0, $sp, 104                   # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.92)
	addi.d	$s6, $a0, %pc_lo12(.L.str.92)
	pcalau12i	$a0, %pc_hi20(.L.str.93)
	addi.d	$a0, $a0, %pc_lo12(.L.str.93)
	st.d	$a0, $sp, 88                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.94)
	addi.d	$a0, $a0, %pc_lo12(.L.str.94)
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.95)
	addi.d	$a0, $a0, %pc_lo12(.L.str.95)
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	st.d	$a0, $sp, 120                   # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.96)
	addi.d	$a0, $a0, %pc_lo12(.L.str.96)
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	ori	$s5, $zero, 1
	b	.LBB55_73
	.p2align	4, , 16
.LBB55_72:                              #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a1, $sp, 800
	ld.d	$a0, $sp, 792
	sub.d	$a1, $a1, $a0
	slli.d	$a2, $a1, 27
	srai.d	$a2, $a2, 32
	addi.d	$s1, $s1, 1
	addi.w	$s5, $s5, 1
	addi.d	$fp, $fp, 32
	bge	$s1, $a2, .LBB55_135
.LBB55_73:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $sp, 752
	srli.d	$a1, $s1, 3
	ld.d	$a2, $sp, 152                   # 8-byte Folded Reload
	and	$a1, $a1, $a2
	ldx.d	$a0, $a0, $a1
	srl.d	$a0, $a0, $s1
	andi	$a0, $a0, 1
	bnez	$a0, .LBB55_72
# %bb.74:                               #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$a0, $a2, 840
	ld.d	$a1, $a2, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	ld.d	$a3, $sp, 96                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a3
	ld.d	$a3, $sp, 128                   # 8-byte Folded Reload
	add.d	$a1, $a1, $a3
	beqz	$a1, .LBB55_76
# %bb.75:                               #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $a2, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB55_77
.LBB55_76:                              #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
.LBB55_77:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit232
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2275:
	move	$a1, $zero
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2276:
# %bb.78:                               #   in Loop: Header=BB55_73 Depth=1
.Ltmp2277:
	ori	$a2, $zero, 52
	move	$a0, $s3
	ld.d	$a1, $sp, 112                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2278:
# %bb.79:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit233
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 168                   # 8-byte Folded Reload
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB55_383
# %bb.80:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i513
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB55_82
# %bb.81:                               #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 67
	b	.LBB55_84
.LBB55_82:                              #   in Loop: Header=BB55_73 Depth=1
.Ltmp2279:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2280:
# %bb.83:                               # %.noexc518
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2281:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2282:
.LBB55_84:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i515
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2283:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2284:
# %bb.85:                               # %.noexc520
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2285:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2286:
# %bb.86:                               # %_ZNSolsEPFRSoS_E.exit234
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2287:
	ori	$a2, $zero, 9
	move	$a0, $s3
	ld.d	$a1, $sp, 104                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2288:
# %bb.87:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit235
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2289:
	move	$a0, $s3
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2290:
# %bb.88:                               #   in Loop: Header=BB55_73 Depth=1
.Ltmp2291:
	move	$s0, $a0
	ori	$a2, $zero, 2
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2292:
# %bb.89:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit236
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $sp, 792
	add.d	$a2, $a0, $fp
	ldx.d	$a1, $a0, $fp
	ld.d	$a2, $a2, 8
.Ltmp2293:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2294:
# %bb.90:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2295:
	move	$s0, $a0
	ori	$a2, $zero, 2
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2296:
# %bb.91:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit237
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2297:
	ori	$a2, $zero, 18
	move	$a0, $s0
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2298:
# %bb.92:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit238
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s7, $a0, 240
	beqz	$s7, .LBB55_383
# %bb.93:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i524
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB55_95
# %bb.94:                               #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s7, 67
	b	.LBB55_97
.LBB55_95:                              #   in Loop: Header=BB55_73 Depth=1
.Ltmp2299:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2300:
# %bb.96:                               # %.noexc529
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp2301:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp2302:
.LBB55_97:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i526
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2303:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2304:
# %bb.98:                               # %.noexc531
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2305:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2306:
# %bb.99:                               # %_ZNSolsEPFRSoS_E.exit239
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2307:
	ori	$a2, $zero, 58
	move	$a0, $s3
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2308:
# %bb.100:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit240
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 168                   # 8-byte Folded Reload
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB55_383
# %bb.101:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i535
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB55_103
# %bb.102:                              #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 67
	b	.LBB55_105
.LBB55_103:                             #   in Loop: Header=BB55_73 Depth=1
.Ltmp2309:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2310:
# %bb.104:                              # %.noexc540
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2311:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2312:
.LBB55_105:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i537
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2313:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2314:
# %bb.106:                              # %.noexc542
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2315:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2316:
# %bb.107:                              # %_ZNSolsEPFRSoS_E.exit241
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2317:
	ori	$a2, $zero, 56
	move	$a0, $s3
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2318:
# %bb.108:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit242
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 168                   # 8-byte Folded Reload
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB55_383
# %bb.109:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i546
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB55_111
# %bb.110:                              #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 67
	b	.LBB55_113
.LBB55_111:                             #   in Loop: Header=BB55_73 Depth=1
.Ltmp2319:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2320:
# %bb.112:                              # %.noexc551
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2321:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2322:
.LBB55_113:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i548
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2323:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2324:
# %bb.114:                              # %.noexc553
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2325:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2326:
# %bb.115:                              # %_ZNSolsEPFRSoS_E.exit243
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2327:
	ori	$a2, $zero, 25
	move	$a0, $s3
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2328:
# %bb.116:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit244
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 168                   # 8-byte Folded Reload
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB55_383
# %bb.117:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i557
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB55_119
# %bb.118:                              #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s0, 67
	b	.LBB55_121
.LBB55_119:                             #   in Loop: Header=BB55_73 Depth=1
.Ltmp2329:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2330:
# %bb.120:                              # %.noexc562
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2331:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2332:
.LBB55_121:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i559
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2333:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2334:
# %bb.122:                              # %.noexc564
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2335:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2336:
# %bb.123:                              # %_ZNSolsEPFRSoS_E.exit245
                                        #   in Loop: Header=BB55_73 Depth=1
	ori	$a0, $zero, 2
	st.w	$a0, $s4, 0
.Ltmp2337:
	ld.d	$a0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$a1, $sp, 160                   # 8-byte Folded Reload
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2338:
# %bb.124:                              #   in Loop: Header=BB55_73 Depth=1
	move	$s0, $a0
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	slt	$a0, $a1, $a0
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s0, $a0
	or	$a0, $a0, $a1
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	blez	$s0, .LBB55_72
# %bb.125:                              #   in Loop: Header=BB55_73 Depth=1
.Ltmp2339:
	pcalau12i	$a0, %pc_hi20(.L.str.97)
	addi.d	$a1, $a0, %pc_lo12(.L.str.97)
	ori	$a2, $zero, 34
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2340:
# %bb.126:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit246
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.w	$a1, $s4, 0
.Ltmp2341:
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2342:
# %bb.127:                              #   in Loop: Header=BB55_73 Depth=1
	move	$s7, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s7, $a0
	ld.d	$s8, $a0, 240
	beqz	$s8, .LBB55_383
# %bb.128:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i568
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s8, 56
	beqz	$a0, .LBB55_130
# %bb.129:                              #   in Loop: Header=BB55_73 Depth=1
	ld.bu	$a0, $s8, 67
	b	.LBB55_132
.LBB55_130:                             #   in Loop: Header=BB55_73 Depth=1
.Ltmp2343:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2344:
# %bb.131:                              # %.noexc573
                                        #   in Loop: Header=BB55_73 Depth=1
	ld.d	$a0, $s8, 0
	ld.d	$a2, $a0, 48
.Ltmp2345:
	ori	$a1, $zero, 10
	move	$a0, $s8
	jirl	$ra, $a2, 0
.Ltmp2346:
.LBB55_132:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i570
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2347:
	ext.w.b	$a1, $a0
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2348:
# %bb.133:                              # %.noexc575
                                        #   in Loop: Header=BB55_73 Depth=1
.Ltmp2349:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2350:
# %bb.134:                              # %_ZNSolsEPFRSoS_E.exit247
                                        #   in Loop: Header=BB55_73 Depth=1
	ori	$a0, $zero, 1
	beq	$s0, $a0, .LBB55_72
	b	.LBB55_361
.LBB55_135:                             # %.preheader
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	srai.d	$a1, $a1, 5
	addi.w	$a1, $a1, 0
	blez	$a1, .LBB55_359
# %bb.136:                              # %.lr.ph842
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 80                    # 8-byte Folded Spill
	move	$s4, $zero
	addi.d	$s6, $sp, 736
	addi.d	$s7, $sp, 704
	ld.d	$s3, $sp, 136                   # 8-byte Folded Reload
	addi.d	$a1, $s3, 680
	st.d	$a1, $sp, 64                    # 8-byte Folded Spill
	addi.d	$a1, $s3, 688
	st.d	$a1, $sp, 88                    # 8-byte Folded Spill
	addi.d	$a1, $s3, 592
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	ori	$a1, $zero, 432
	ld.d	$a2, $sp, 128                   # 8-byte Folded Reload
	mul.d	$a1, $a2, $a1
	st.d	$a1, $sp, 72                    # 8-byte Folded Spill
	lu12i.w	$a1, 524287
	ori	$s8, $a1, 4095
                                        # implicit-def: $r5
                                        # kill: killed $r5
	.p2align	4, , 16
.LBB55_137:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB55_155 Depth 2
                                        #     Child Loop BB55_169 Depth 2
                                        #     Child Loop BB55_345 Depth 2
                                        #     Child Loop BB55_257 Depth 2
                                        #     Child Loop BB55_269 Depth 2
	slli.d	$s0, $s4, 5
	add.d	$a1, $a0, $s0
	st.d	$s6, $sp, 720
	ld.d	$a1, $a1, 8
	ldx.d	$fp, $a0, $s0
	st.d	$a1, $sp, 352
	move	$a0, $s6
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_140
# %bb.138:                              # %.noexc.i
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2352:
	addi.d	$a0, $sp, 720
	addi.d	$a1, $sp, 352
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2353:
# %bb.139:                              # %.noexc
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 352
	st.d	$a0, $sp, 720
	st.d	$a1, $sp, 736
.LBB55_140:                             # %._crit_edge.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.w	$s1, $zero, -1
	beq	$a1, $s1, .LBB55_144
# %bb.141:                              # %._crit_edge.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_143
# %bb.142:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB55_144
	.p2align	4, , 16
.LBB55_143:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_144:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 352
	ld.d	$a2, $sp, 856
	st.d	$a0, $sp, 728
	add.d	$a0, $a2, $s0
	st.d	$s7, $sp, 688
	ld.d	$a1, $a0, 8
	ldx.d	$fp, $a2, $s0
	st.d	$a1, $sp, 352
	move	$a0, $s7
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_147
# %bb.145:                              # %.noexc.i249
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2355:
	addi.d	$a0, $sp, 688
	addi.d	$a1, $sp, 352
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2356:
# %bb.146:                              # %.noexc250
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 352
	st.d	$a0, $sp, 688
	st.d	$a1, $sp, 704
.LBB55_147:                             # %._crit_edge.i.i248
                                        #   in Loop: Header=BB55_137 Depth=1
	beq	$a1, $s1, .LBB55_151
# %bb.148:                              # %._crit_edge.i.i248
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_150
# %bb.149:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB55_151
	.p2align	4, , 16
.LBB55_150:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_151:                             #   in Loop: Header=BB55_137 Depth=1
	st.d	$s1, $sp, 120                   # 8-byte Folded Spill
	ld.d	$s1, $sp, 352
	ld.d	$s6, $s3, 696
	st.d	$s1, $sp, 696
	addi.d	$a0, $s4, 1
	st.d	$a0, $sp, 104                   # 8-byte Folded Spill
	beqz	$s6, .LBB55_164
# %bb.152:                              # %.lr.ph.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s7, $sp, 728
	ld.d	$fp, $sp, 720
	move	$s3, $s6
	ld.d	$s5, $sp, 88                    # 8-byte Folded Reload
	b	.LBB55_155
	.p2align	4, , 16
.LBB55_153:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB55_155 Depth=2
	sub.d	$a0, $s2, $s7
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
.LBB55_154:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB55_155 Depth=2
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s3, $a0
	ori	$a2, $zero, 16
	masknez	$a2, $a2, $a0
	ori	$a3, $zero, 24
	maskeqz	$a3, $a3, $a0
	or	$a2, $a3, $a2
	ldx.d	$s3, $s3, $a2
	maskeqz	$a0, $s5, $a0
	or	$s5, $a0, $a1
	beqz	$s3, .LBB55_157
.LBB55_155:                             #   Parent Loop BB55_137 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s2, $s3, 40
	sltu	$a0, $s7, $s2
	masknez	$a1, $s2, $a0
	maskeqz	$a0, $s7, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB55_153
# %bb.156:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB55_155 Depth=2
	ld.d	$a0, $s3, 32
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB55_154
	b	.LBB55_153
	.p2align	4, , 16
.LBB55_157:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	beq	$s5, $a0, .LBB55_164
# %bb.158:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s2, $s5, 40
	sltu	$a0, $s2, $s7
	masknez	$a1, $s7, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB55_163
# %bb.159:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $s5, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB55_163
# %bb.160:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB55_164
.LBB55_161:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s3, $sp, 136                   # 8-byte Folded Reload
	ld.d	$a0, $s3, 840
	ld.d	$a1, $s3, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	add.d	$a1, $a1, $s5
	beqz	$a1, .LBB55_276
# %bb.162:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $s3, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB55_277
	.p2align	4, , 16
.LBB55_163:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	sub.d	$a0, $s7, $s2
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB55_161
	.p2align	4, , 16
.LBB55_164:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 816
	srli.d	$a1, $s4, 3
	ld.d	$a2, $sp, 152                   # 8-byte Folded Reload
	and	$a1, $a1, $a2
	ldx.d	$a0, $a0, $a1
	srl.d	$a0, $a0, $s4
	andi	$a0, $a0, 1
	beqz	$a0, .LBB55_175
# %bb.165:                              #   in Loop: Header=BB55_137 Depth=1
	ori	$s0, $zero, 1
	addi.d	$s7, $sp, 704
	beqz	$s6, .LBB55_178
# %bb.166:                              # %.lr.ph.i.i.i281
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$fp, $sp, 688
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 136                   # 8-byte Folded Reload
	b	.LBB55_169
	.p2align	4, , 16
.LBB55_167:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i306
                                        #   in Loop: Header=BB55_169 Depth=2
	sub.d	$a0, $s2, $s1
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
.LBB55_168:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i287
                                        #   in Loop: Header=BB55_169 Depth=2
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s6, $a0
	ori	$a2, $zero, 16
	masknez	$a2, $a2, $a0
	ori	$a3, $zero, 24
	maskeqz	$a3, $a3, $a0
	or	$a2, $a3, $a2
	ldx.d	$s6, $s6, $a2
	maskeqz	$a0, $s4, $a0
	or	$s4, $a0, $a1
	beqz	$s6, .LBB55_171
.LBB55_169:                             #   Parent Loop BB55_137 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s2, $s6, 40
	sltu	$a0, $s1, $s2
	masknez	$a1, $s2, $a0
	maskeqz	$a0, $s1, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB55_167
# %bb.170:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i285
                                        #   in Loop: Header=BB55_169 Depth=2
	ld.d	$a0, $s6, 32
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB55_168
	b	.LBB55_167
	.p2align	4, , 16
.LBB55_171:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i294
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	addi.d	$s6, $sp, 736
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	beq	$s4, $a0, .LBB55_187
# %bb.172:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s2, $s4, 40
	sltu	$a0, $s2, $s1
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB55_179
# %bb.173:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i296
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $s4, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB55_179
# %bb.174:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit311
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.w	$a0, $a0, 0
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	bgez	$a0, .LBB55_180
	b	.LBB55_352
	.p2align	4, , 16
.LBB55_175:                             #   in Loop: Header=BB55_137 Depth=1
	st.d	$zero, $sp, 312
	vld	$vr0, $sp, 48                   # 16-byte Folded Reload
	vst	$vr0, $sp, 296
	st.d	$zero, $sp, 288
	vst	$vr0, $sp, 272
.Ltmp2436:
	addi.d	$a0, $sp, 272
	addi.d	$a1, $sp, 688
	addi.d	$s7, $sp, 704
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2437:
# %bb.176:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s3, $sp, 136                   # 8-byte Folded Reload
	ld.d	$a0, $s3, 840
	ld.d	$a1, $s3, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	add.d	$a2, $a1, $s5
	slli.d	$a1, $a2, 3
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	addi.d	$s6, $sp, 736
	beqz	$a2, .LBB55_188
# %bb.177:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a3, $s3, 864
	ldx.d	$a4, $a3, $a1
	b	.LBB55_189
.LBB55_178:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s3, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	addi.d	$s6, $sp, 736
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	b	.LBB55_352
.LBB55_179:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i302
                                        #   in Loop: Header=BB55_137 Depth=1
	sub.d	$a0, $s1, $s2
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	bltz	$a0, .LBB55_352
.LBB55_180:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a1, $s4, 64
.Ltmp2418:
	addi.d	$a0, $sp, 552
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2419:
# %bb.181:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 728
	ld.d	$fp, $sp, 720
	addi.d	$a0, $sp, 536
	st.d	$a0, $sp, 520
	st.d	$a1, $sp, 352
	addi.d	$s1, $sp, 336
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_184
# %bb.182:                              # %.noexc.i313
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2421:
	addi.d	$a0, $sp, 520
	addi.d	$a1, $sp, 352
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2422:
# %bb.183:                              # %.noexc314
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 352
	st.d	$a0, $sp, 520
	st.d	$a1, $sp, 536
.LBB55_184:                             # %._crit_edge.i.i312
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB55_321
# %bb.185:                              # %._crit_edge.i.i312
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_320
# %bb.186:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB55_321
.LBB55_187:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	b	.LBB55_352
.LBB55_188:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a3, $sp, 72                    # 8-byte Folded Reload
	add.d	$a4, $a0, $a3
.LBB55_189:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit338
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a3, $a4, 176
	ld.d	$a5, $a4, 184
	ld.d	$a4, $a4, 200
	sub.d	$a6, $a3, $a5
	srai.d	$a5, $a6, 7
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	bltz	$a6, .LBB55_192
# %bb.190:                              #   in Loop: Header=BB55_137 Depth=1
	ori	$a6, $zero, 4
	bltu	$a5, $a6, .LBB55_194
# %bb.191:                              #   in Loop: Header=BB55_137 Depth=1
	srli.d	$a3, $a5, 2
	b	.LBB55_193
.LBB55_192:                             #   in Loop: Header=BB55_137 Depth=1
	srai.d	$a3, $a6, 9
.LBB55_193:                             #   in Loop: Header=BB55_137 Depth=1
	slli.d	$a6, $a3, 3
	ldx.d	$a4, $a4, $a6
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a5, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
.LBB55_194:                             #   in Loop: Header=BB55_137 Depth=1
	beqz	$a2, .LBB55_196
# %bb.195:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a4, $s3, 864
	ldx.d	$a5, $a4, $a1
	b	.LBB55_197
.LBB55_196:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a4, $sp, 72                    # 8-byte Folded Reload
	add.d	$a5, $a0, $a4
.LBB55_197:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit340
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a4, $a5, 176
	ld.d	$a6, $a5, 184
	ld.d	$a5, $a5, 200
	sub.d	$a7, $a4, $a6
	srai.d	$a6, $a7, 7
	bltz	$a7, .LBB55_200
# %bb.198:                              #   in Loop: Header=BB55_137 Depth=1
	ori	$a7, $zero, 4
	bltu	$a6, $a7, .LBB55_202
# %bb.199:                              #   in Loop: Header=BB55_137 Depth=1
	srli.d	$a4, $a6, 2
	b	.LBB55_201
.LBB55_200:                             #   in Loop: Header=BB55_137 Depth=1
	srai.d	$a4, $a7, 9
.LBB55_201:                             #   in Loop: Header=BB55_137 Depth=1
	slli.d	$a7, $a4, 3
	ldx.d	$a5, $a5, $a7
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a6, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
.LBB55_202:                             #   in Loop: Header=BB55_137 Depth=1
	beqz	$a2, .LBB55_204
# %bb.203:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $s3, 864
	ldx.d	$a0, $a0, $a1
	b	.LBB55_205
.LBB55_204:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
.LBB55_205:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit343
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.w	$s4, $a3, 80
	ld.d	$a2, $a0, 176
	ld.d	$a1, $a0, 184
	ld.w	$fp, $a4, 84
	ld.d	$a0, $a0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB55_208
# %bb.206:                              #   in Loop: Header=BB55_137 Depth=1
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB55_210
# %bb.207:                              #   in Loop: Header=BB55_137 Depth=1
	srli.d	$a2, $a1, 2
	b	.LBB55_209
.LBB55_208:                             #   in Loop: Header=BB55_137 Depth=1
	srai.d	$a2, $a3, 9
.LBB55_209:                             #   in Loop: Header=BB55_137 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB55_210:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $a2, 96
	ld.d	$s0, $a2, 88
	addi.d	$a0, $sp, 336
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 352
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_213
# %bb.211:                              # %.noexc.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2439:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 352
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2440:
# %bb.212:                              # %.noexc345
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 352
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB55_213:                             # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB55_217
# %bb.214:                              # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_216
# %bb.215:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB55_217
.LBB55_216:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_217:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 352
	ld.d	$a1, $sp, 728
	ld.d	$s0, $sp, 720
	st.d	$a0, $sp, 328
	addi.d	$a0, $sp, 256
	st.d	$a0, $sp, 240
	st.d	$a1, $sp, 352
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_220
# %bb.218:                              # %.noexc.i347
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2442:
	addi.d	$a0, $sp, 240
	addi.d	$a1, $sp, 352
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2443:
# %bb.219:                              # %.noexc348
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 352
	st.d	$a0, $sp, 240
	st.d	$a1, $sp, 256
.LBB55_220:                             # %._crit_edge.i.i346
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB55_224
# %bb.221:                              # %._crit_edge.i.i346
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_223
# %bb.222:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB55_224
.LBB55_223:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_224:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 352
	ld.d	$a1, $sp, 328
	ld.d	$s0, $sp, 320
	st.d	$a0, $sp, 248
	addi.d	$a0, $sp, 224
	st.d	$a0, $sp, 208
	st.d	$a1, $sp, 352
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_227
# %bb.225:                              # %.noexc.i351
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2445:
	addi.d	$a0, $sp, 208
	addi.d	$a1, $sp, 352
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2446:
# %bb.226:                              # %.noexc352
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 352
	st.d	$a0, $sp, 208
	st.d	$a1, $sp, 224
.LBB55_227:                             # %._crit_edge.i.i350
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB55_231
# %bb.228:                              # %._crit_edge.i.i350
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_230
# %bb.229:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB55_231
.LBB55_230:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_231:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 352
	st.d	$a0, $sp, 216
.Ltmp2448:
	st.d	$s1, $sp, 8
	addi.d	$a0, $sp, 552
	addi.d	$a1, $sp, 240
	addi.d	$a2, $sp, 296
	addi.d	$a3, $sp, 272
	addi.d	$a6, $sp, 208
	ld.d	$a4, $sp, 160                   # 8-byte Folded Reload
	st.d	$a4, $sp, 0
	move	$a4, $s4
	move	$a5, $fp
	ld.d	$a7, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEERS7_IS6_SaIS6_EEiiS6_PSt5dequeIS6_SB_ERNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp2449:
# %bb.232:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 208
	addi.d	$s0, $sp, 192
	addi.d	$a1, $sp, 224
	beq	$a0, $a1, .LBB55_234
# %bb.233:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i354
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 224
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_234:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit356
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	beq	$a0, $a1, .LBB55_236
# %bb.235:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i357
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 256
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_236:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit359
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 560
	ld.d	$fp, $sp, 552
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 649
	st.d	$s0, $sp, 176
	st.d	$a1, $sp, 880
	move	$a0, $s0
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_239
# %bb.237:                              # %.noexc.i.i362
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2451:
	addi.d	$a0, $sp, 176
	addi.d	$a1, $sp, 880
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2452:
# %bb.238:                              # %.noexc363
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 880
	st.d	$a0, $sp, 176
	st.d	$a1, $sp, 192
.LBB55_239:                             # %._crit_edge.i.i.i360
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB55_243
# %bb.240:                              # %._crit_edge.i.i.i360
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_242
# %bb.241:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB55_243
.LBB55_242:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_243:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 176
	ld.d	$fp, $sp, 880
	addi.d	$a0, $sp, 368
	st.d	$a0, $sp, 352
	beq	$a2, $s0, .LBB55_245
# %bb.244:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i365
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 192
	st.d	$a2, $sp, 352
	st.d	$a1, $sp, 368
	b	.LBB55_246
.LBB55_245:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i370
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $fp, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_246:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i366
                                        #   in Loop: Header=BB55_137 Depth=1
	st.d	$fp, $sp, 360
	st.d	$s0, $sp, 176
	st.d	$zero, $sp, 184
	st.b	$zero, $sp, 192
.Ltmp2454:
	addi.d	$a1, $sp, 552
	addi.d	$a0, $sp, 384
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2455:
# %bb.247:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit373
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2457:
	addi.d	$a1, $sp, 352
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp2458:
# %bb.248:                              #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 176
	beq	$a0, $s0, .LBB55_250
# %bb.249:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i374
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_250:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit376
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 656
	addi.d	$a1, $sp, 672
	beq	$a0, $a1, .LBB55_252
# %bb.251:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i377
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 672
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_252:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i378
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 624
	beqz	$a0, .LBB55_254
# %bb.253:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 640
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_254:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i380
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 584
	ld.d	$fp, $sp, 592
	beq	$a0, $fp, .LBB55_260
# %bb.255:                              # %.lr.ph.i.i.i382.preheader
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.d	$s0, $a0, 16
	b	.LBB55_257
	.p2align	4, , 16
.LBB55_256:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i385
                                        #   in Loop: Header=BB55_257 Depth=2
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB55_259
.LBB55_257:                             # %.lr.ph.i.i.i382
                                        #   Parent Loop BB55_137 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB55_256
# %bb.258:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i384
                                        #   in Loop: Header=BB55_257 Depth=2
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB55_256
.LBB55_259:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i387
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 584
.LBB55_260:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i389
                                        #   in Loop: Header=BB55_137 Depth=1
	beqz	$a0, .LBB55_262
# %bb.261:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 600
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_262:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i391
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 552
	addi.d	$a1, $sp, 568
	beq	$a0, $a1, .LBB55_264
# %bb.263:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i392
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 568
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_264:                             # %_ZN2PP8VariableD2Ev.exit396
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 320
	addi.d	$a1, $sp, 336
	beq	$a0, $a1, .LBB55_266
# %bb.265:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i397
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_266:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit399
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 272
	ld.d	$fp, $sp, 280
	beq	$a0, $fp, .LBB55_272
# %bb.267:                              # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.d	$s0, $a0, 16
	b	.LBB55_269
	.p2align	4, , 16
.LBB55_268:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB55_269 Depth=2
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB55_271
.LBB55_269:                             # %.lr.ph.i.i
                                        #   Parent Loop BB55_137 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB55_268
# %bb.270:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB55_269 Depth=2
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB55_268
.LBB55_271:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 272
.LBB55_272:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
                                        #   in Loop: Header=BB55_137 Depth=1
	beqz	$a0, .LBB55_274
# %bb.273:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 288
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_274:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 296
	beqz	$a0, .LBB55_314
# %bb.275:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 312
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB55_314
.LBB55_276:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
.LBB55_277:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit253
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	addi.d	$s6, $sp, 736
	addi.d	$s7, $sp, 704
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
.Ltmp2358:
	move	$a1, $zero
	ld.d	$a2, $sp, 160                   # 8-byte Folded Reload
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2359:
# %bb.278:                              #   in Loop: Header=BB55_137 Depth=1
.Ltmp2360:
	pcalau12i	$a0, %pc_hi20(.L.str.91)
	addi.d	$a1, $a0, %pc_lo12(.L.str.91)
	ori	$a2, $zero, 9
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2361:
# %bb.279:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit255
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.w	$a1, $s2, 0
.Ltmp2362:
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2363:
# %bb.280:                              #   in Loop: Header=BB55_137 Depth=1
.Ltmp2364:
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.92)
	addi.d	$a1, $a0, %pc_lo12(.L.str.92)
	ori	$a2, $zero, 2
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2365:
# %bb.281:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit257
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 792
	add.d	$a2, $a0, $s0
	ldx.d	$a1, $a0, $s0
	ld.d	$a2, $a2, 8
.Ltmp2366:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2367:
# %bb.282:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit259
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2368:
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.92)
	addi.d	$a1, $a0, %pc_lo12(.L.str.92)
	ori	$a2, $zero, 2
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2369:
# %bb.283:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit261
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2370:
	pcalau12i	$a0, %pc_hi20(.L.str.98)
	addi.d	$a1, $a0, %pc_lo12(.L.str.98)
	ori	$a2, $zero, 58
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2371:
# %bb.284:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit263
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB55_385
# %bb.285:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i579
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB55_287
# %bb.286:                              #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $s0, 67
	b	.LBB55_289
.LBB55_287:                             #   in Loop: Header=BB55_137 Depth=1
.Ltmp2372:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2373:
# %bb.288:                              # %.noexc584
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2374:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2375:
.LBB55_289:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i581
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2376:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2377:
# %bb.290:                              # %.noexc586
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2378:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2379:
# %bb.291:                              # %_ZNSolsEPFRSoS_E.exit265
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2380:
	pcalau12i	$a0, %pc_hi20(.L.str.99)
	addi.d	$a1, $a0, %pc_lo12(.L.str.99)
	ori	$a2, $zero, 62
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2381:
# %bb.292:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit267
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 168                   # 8-byte Folded Reload
	ldx.d	$fp, $a1, $a0
	beqz	$fp, .LBB55_385
# %bb.293:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i590
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB55_295
# %bb.294:                              #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $fp, 67
	b	.LBB55_297
.LBB55_295:                             #   in Loop: Header=BB55_137 Depth=1
.Ltmp2382:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2383:
# %bb.296:                              # %.noexc595
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
.Ltmp2384:
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
.Ltmp2385:
.LBB55_297:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i592
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2386:
	ext.w.b	$a1, $a0
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2387:
# %bb.298:                              # %.noexc597
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2388:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2389:
# %bb.299:                              # %_ZNSolsEPFRSoS_E.exit269
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2390:
	pcalau12i	$a0, %pc_hi20(.L.str.100)
	addi.d	$a1, $a0, %pc_lo12(.L.str.100)
	ori	$a2, $zero, 17
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2391:
# %bb.300:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit271
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 168                   # 8-byte Folded Reload
	ldx.d	$fp, $a1, $a0
	beqz	$fp, .LBB55_385
# %bb.301:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i601
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB55_303
# %bb.302:                              #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $fp, 67
	b	.LBB55_305
.LBB55_303:                             #   in Loop: Header=BB55_137 Depth=1
.Ltmp2392:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2393:
# %bb.304:                              # %.noexc606
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
.Ltmp2394:
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
.Ltmp2395:
.LBB55_305:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i603
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2396:
	ext.w.b	$a1, $a0
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2397:
# %bb.306:                              # %.noexc608
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2398:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2399:
# %bb.307:                              # %_ZNSolsEPFRSoS_E.exit273
                                        #   in Loop: Header=BB55_137 Depth=1
	ori	$a0, $zero, 2
	st.w	$a0, $s1, 0
.Ltmp2400:
	move	$a0, $s3
	ld.d	$a1, $sp, 160                   # 8-byte Folded Reload
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2401:
# %bb.308:                              #   in Loop: Header=BB55_137 Depth=1
	move	$fp, $a0
	ld.d	$a1, $sp, 144                   # 8-byte Folded Reload
	slt	$a0, $a1, $a0
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $fp, $a0
	or	$a0, $a0, $a1
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	blez	$fp, .LBB55_314
# %bb.309:                              #   in Loop: Header=BB55_137 Depth=1
.Ltmp2402:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.101)
	addi.d	$a1, $a1, %pc_lo12(.L.str.101)
	ori	$a2, $zero, 41
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2403:
# %bb.310:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit275
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.w	$a1, $s1, 0
.Ltmp2404:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2405:
# %bb.311:                              #   in Loop: Header=BB55_137 Depth=1
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB55_385
# %bb.312:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i612
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB55_315
# %bb.313:                              #   in Loop: Header=BB55_137 Depth=1
	ld.bu	$a0, $s1, 67
	b	.LBB55_317
	.p2align	4, , 16
.LBB55_314:                             #   in Loop: Header=BB55_137 Depth=1
	ori	$s0, $zero, 1
	b	.LBB55_352
.LBB55_315:                             #   in Loop: Header=BB55_137 Depth=1
.Ltmp2406:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2407:
# %bb.316:                              # %.noexc617
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp2408:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp2409:
.LBB55_317:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i614
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2410:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2411:
# %bb.318:                              # %.noexc619
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2412:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2413:
# %bb.319:                              # %_ZNSolsEPFRSoS_E.exit277
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a0, $fp, -1
	sltui	$s0, $a0, 1
	ld.d	$a0, $sp, 144                   # 8-byte Folded Reload
	masknez	$a0, $a0, $s0
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	maskeqz	$a1, $a1, $s0
	or	$a0, $a1, $a0
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	b	.LBB55_352
.LBB55_320:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_321:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 352
	st.d	$a0, $sp, 528
.Ltmp2424:
	addi.d	$a0, $sp, 552
	addi.d	$a1, $sp, 520
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2425:
# %bb.322:                              # %_ZN2PP8Variable11set_varnameENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 520
	addi.d	$a1, $sp, 536
	beq	$a0, $a1, .LBB55_324
# %bb.323:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 536
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_324:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 560
	ld.d	$fp, $sp, 552
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 649
	st.d	$s1, $sp, 320
	st.d	$a1, $sp, 176
	move	$a0, $s1
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB55_327
# %bb.325:                              # %.noexc.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2427:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2428:
# %bb.326:                              # %.noexc317
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB55_327:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 120                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB55_331
# %bb.328:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	bnez	$a1, .LBB55_330
# %bb.329:                              #   in Loop: Header=BB55_137 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB55_331
.LBB55_330:                             #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_331:                             #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a2, $sp, 320
	ld.d	$fp, $sp, 176
	addi.d	$a0, $sp, 368
	st.d	$a0, $sp, 352
	beq	$a2, $s1, .LBB55_333
# %bb.332:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i318
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 336
	st.d	$a2, $sp, 352
	st.d	$a1, $sp, 368
	b	.LBB55_334
.LBB55_333:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a2, $fp, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_334:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
                                        #   in Loop: Header=BB55_137 Depth=1
	st.d	$fp, $sp, 360
	st.d	$s1, $sp, 320
	st.d	$zero, $sp, 328
	st.b	$zero, $sp, 336
.Ltmp2430:
	addi.d	$a1, $sp, 552
	addi.d	$a0, $sp, 384
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2431:
# %bb.335:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
                                        #   in Loop: Header=BB55_137 Depth=1
.Ltmp2433:
	addi.d	$a1, $sp, 352
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp2434:
# %bb.336:                              #   in Loop: Header=BB55_137 Depth=1
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 320
	beq	$a0, $s1, .LBB55_338
# %bb.337:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i319
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_338:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit321
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 656
	addi.d	$a1, $sp, 672
	beq	$a0, $a1, .LBB55_340
# %bb.339:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i322
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 672
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_340:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i323
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 624
	beqz	$a0, .LBB55_342
# %bb.341:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 640
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_342:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 584
	ld.d	$fp, $sp, 592
	beq	$a0, $fp, .LBB55_348
# %bb.343:                              # %.lr.ph.i.i.i324.preheader
                                        #   in Loop: Header=BB55_137 Depth=1
	addi.d	$s1, $a0, 16
	b	.LBB55_345
	.p2align	4, , 16
.LBB55_344:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB55_345 Depth=2
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $fp, .LBB55_347
.LBB55_345:                             # %.lr.ph.i.i.i324
                                        #   Parent Loop BB55_137 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB55_344
# %bb.346:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB55_345 Depth=2
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB55_344
.LBB55_347:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 584
.LBB55_348:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
                                        #   in Loop: Header=BB55_137 Depth=1
	beqz	$a0, .LBB55_350
# %bb.349:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 600
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_350:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 552
	addi.d	$a1, $sp, 568
	beq	$a0, $a1, .LBB55_352
# %bb.351:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 568
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB55_352:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit311.thread
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 688
	beq	$a0, $s7, .LBB55_354
# %bb.353:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i416
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 704
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_354:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit418
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a0, $sp, 720
	beq	$a0, $s6, .LBB55_356
# %bb.355:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i419
                                        #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 736
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_356:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit421
                                        #   in Loop: Header=BB55_137 Depth=1
	beqz	$s0, .LBB55_382
# %bb.357:                              #   in Loop: Header=BB55_137 Depth=1
	ld.d	$a1, $sp, 800
	ld.d	$a0, $sp, 792
	sub.d	$a1, $a1, $a0
	slli.d	$a1, $a1, 27
	srai.d	$a1, $a1, 32
	move	$s4, $s2
	blt	$s2, $a1, .LBB55_137
	b	.LBB55_360
.LBB55_358:
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
.LBB55_359:                             # %.thread636
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
.LBB55_360:                             # %.thread636
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	st.w	$s5, $a0, 0
.LBB55_361:                             # %.thread633
	ld.d	$a0, $sp, 752
	beqz	$a0, .LBB55_363
.LBB55_362:
	ld.d	$a1, $sp, 784
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 752
	st.w	$zero, $sp, 760
.LBB55_363:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit
	ld.d	$a0, $sp, 792
	ld.d	$fp, $sp, 800
	beq	$a0, $fp, .LBB55_369
# %bb.364:                              # %.lr.ph.i.i430.preheader
	addi.d	$s0, $a0, 16
	b	.LBB55_366
	.p2align	4, , 16
.LBB55_365:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i433
                                        #   in Loop: Header=BB55_366 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB55_368
.LBB55_366:                             # %.lr.ph.i.i430
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB55_365
# %bb.367:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i432
                                        #   in Loop: Header=BB55_366 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB55_365
.LBB55_368:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i435
	ld.d	$a0, $sp, 792
.LBB55_369:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i437
	beqz	$a0, .LBB55_371
# %bb.370:
	ld.d	$a1, $sp, 808
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_371:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit440
	ld.d	$a0, $sp, 816
	beqz	$a0, .LBB55_373
# %bb.372:
	ld.d	$a1, $sp, 848
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 816
	st.w	$zero, $sp, 824
.LBB55_373:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit445
	ld.d	$a0, $sp, 856
	ld.d	$fp, $sp, 864
	beq	$a0, $fp, .LBB55_379
# %bb.374:                              # %.lr.ph.i.i447.preheader
	addi.d	$s0, $a0, 16
	b	.LBB55_376
	.p2align	4, , 16
.LBB55_375:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i450
                                        #   in Loop: Header=BB55_376 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB55_378
.LBB55_376:                             # %.lr.ph.i.i447
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB55_375
# %bb.377:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i449
                                        #   in Loop: Header=BB55_376 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB55_375
.LBB55_378:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i452
	ld.d	$a0, $sp, 856
.LBB55_379:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i454
	beqz	$a0, .LBB55_381
# %bb.380:
	ld.d	$a1, $sp, 872
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_381:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit457
	ld.d	$a0, $sp, 144                   # 8-byte Folded Reload
	addi.w	$a0, $a0, 0
	ld.d	$s8, $sp, 888                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 896                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 904                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 912                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 920                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 928                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 936                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 944                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 952                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 960                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 968                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 976
	ret
.LBB55_382:
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	ld.d	$a0, $sp, 752
	bnez	$a0, .LBB55_362
	b	.LBB55_363
.LBB55_383:                             # %.invoke881
.Ltmp2460:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2461:
# %bb.384:                              # %.cont882
.LBB55_385:                             # %.invoke883
.Ltmp2415:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2416:
# %bb.386:                              # %.cont884
.LBB55_387:                             # %.invoke
.Ltmp2272:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2273:
# %bb.388:                              # %.cont
.LBB55_389:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB55_390:
.Ltmp2429:
	move	$fp, $a0
	b	.LBB55_400
.LBB55_391:
.Ltmp2423:
	move	$fp, $a0
	b	.LBB55_400
.LBB55_392:
.Ltmp2435:
	move	$fp, $a0
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB55_395
.LBB55_393:
.Ltmp2432:
	ld.d	$a2, $sp, 352
	move	$fp, $a0
	addi.d	$a0, $sp, 368
	beq	$a2, $a0, .LBB55_395
# %bb.394:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $sp, 368
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_395:                             # %.body
	ld.d	$a0, $sp, 320
	addi.d	$a1, $sp, 336
	beq	$a0, $a1, .LBB55_400
# %bb.396:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i330
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	b	.LBB55_399
.LBB55_397:
.Ltmp2426:
	ld.d	$a2, $sp, 520
	move	$fp, $a0
	addi.d	$a0, $sp, 536
	beq	$a2, $a0, .LBB55_400
# %bb.398:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i327
	ld.d	$a0, $sp, 536
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB55_399:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit329
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_400:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit329
	addi.d	$a0, $sp, 552
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 688
	addi.d	$a1, $sp, 704
	beq	$a0, $a1, .LBB55_422
	b	.LBB55_438
.LBB55_401:
.Ltmp2420:
	b	.LBB55_437
.LBB55_402:
.Ltmp2453:
	move	$fp, $a0
	b	.LBB55_414
.LBB55_403:
.Ltmp2447:
	move	$fp, $a0
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	beq	$a0, $a1, .LBB55_419
.LBB55_404:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i405
	ld.d	$a1, $sp, 256
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 320
	addi.d	$a1, $sp, 336
	beq	$a0, $a1, .LBB55_420
	b	.LBB55_415
.LBB55_405:
.Ltmp2444:
	move	$fp, $a0
	ld.d	$a0, $sp, 320
	addi.d	$a1, $sp, 336
	beq	$a0, $a1, .LBB55_420
	b	.LBB55_415
.LBB55_406:
.Ltmp2441:
	b	.LBB55_431
.LBB55_407:
.Ltmp2219:
	b	.LBB55_442
.LBB55_408:
.Ltmp2216:
	move	$fp, $a0
	b	.LBB55_426
.LBB55_409:
.Ltmp2459:
	move	$fp, $a0
	addi.d	$a0, $sp, 352
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB55_412
.LBB55_410:
.Ltmp2456:
	ld.d	$a2, $sp, 352
	move	$fp, $a0
	addi.d	$a0, $sp, 368
	beq	$a2, $a0, .LBB55_412
# %bb.411:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i367
	ld.d	$a0, $sp, 368
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_412:                             # %.body371
	ld.d	$a0, $sp, 176
	addi.d	$a1, $sp, 192
	beq	$a0, $a1, .LBB55_414
# %bb.413:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i408
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_414:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit410
	addi.d	$a0, $sp, 552
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 320
	addi.d	$a1, $sp, 336
	beq	$a0, $a1, .LBB55_420
.LBB55_415:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i411
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 272
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 296
	beqz	$a0, .LBB55_421
.LBB55_416:
	ld.d	$a1, $sp, 312
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 688
	addi.d	$a1, $sp, 704
	beq	$a0, $a1, .LBB55_422
	b	.LBB55_438
.LBB55_417:
.Ltmp2450:
	ld.d	$a2, $sp, 208
	move	$fp, $a0
	addi.d	$a0, $sp, 224
	bne	$a2, $a0, .LBB55_429
# %bb.418:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit404
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	bne	$a0, $a1, .LBB55_404
.LBB55_419:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit407
	ld.d	$a0, $sp, 320
	addi.d	$a1, $sp, 336
	bne	$a0, $a1, .LBB55_415
.LBB55_420:
	addi.d	$a0, $sp, 272
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 296
	bnez	$a0, .LBB55_416
.LBB55_421:
	ld.d	$a0, $sp, 688
	addi.d	$a1, $sp, 704
	bne	$a0, $a1, .LBB55_438
.LBB55_422:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
	ld.d	$a0, $sp, 720
	addi.d	$a1, $sp, 736
	bne	$a0, $a1, .LBB55_439
.LBB55_423:
	ld.d	$a0, $sp, 752
	beqz	$a0, .LBB55_425
.LBB55_424:
	ld.d	$a1, $sp, 784
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 752
	st.w	$zero, $sp, 760
	st.d	$zero, $sp, 768
.LBB55_425:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit462
	addi.d	$a0, $sp, 792
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB55_426:
	ld.d	$a0, $sp, 816
	beqz	$a0, .LBB55_428
# %bb.427:
	ld.d	$a1, $sp, 848
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_428:                             # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit467
	addi.d	$a0, $sp, 856
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB55_429:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i402
	ld.d	$a0, $sp, 224
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	beq	$a0, $a1, .LBB55_419
	b	.LBB55_404
.LBB55_430:
.Ltmp2438:
.LBB55_431:
	move	$fp, $a0
	addi.d	$a0, $sp, 272
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 296
	beqz	$a0, .LBB55_421
	b	.LBB55_416
.LBB55_432:
.Ltmp2357:
	move	$fp, $a0
	ld.d	$a0, $sp, 720
	addi.d	$a1, $sp, 736
	beq	$a0, $a1, .LBB55_423
	b	.LBB55_439
.LBB55_433:
.Ltmp2354:
	b	.LBB55_442
.LBB55_434:                             # %.loopexit.split-lp
.Ltmp2417:
	b	.LBB55_437
.LBB55_435:
.Ltmp2274:
	b	.LBB55_442
.LBB55_436:                             # %.loopexit
.Ltmp2414:
.LBB55_437:
	move	$fp, $a0
	ld.d	$a0, $sp, 688
	addi.d	$a1, $sp, 704
	beq	$a0, $a1, .LBB55_422
.LBB55_438:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i422
	ld.d	$a1, $sp, 704
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 720
	addi.d	$a1, $sp, 736
	beq	$a0, $a1, .LBB55_423
.LBB55_439:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i425
	ld.d	$a1, $sp, 736
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 752
	bnez	$a0, .LBB55_424
	b	.LBB55_425
.LBB55_440:                             # %.loopexit.split-lp645
.Ltmp2462:
	b	.LBB55_442
.LBB55_441:                             # %.loopexit644
.Ltmp2351:
.LBB55_442:
	move	$fp, $a0
	ld.d	$a0, $sp, 752
	bnez	$a0, .LBB55_424
	b	.LBB55_425
.Lfunc_end55:
	.size	_ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_, .Lfunc_end55-_ZN2PP11PowerParser11jump_to_subERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table55:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Lfunc_begin35-.Lfunc_begin35  # >> Call Site 1 <<
	.uleb128 .Ltmp2214-.Lfunc_begin35       #   Call between .Lfunc_begin35 and .Ltmp2214
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2214-.Lfunc_begin35       # >> Call Site 2 <<
	.uleb128 .Ltmp2215-.Ltmp2214            #   Call between .Ltmp2214 and .Ltmp2215
	.uleb128 .Ltmp2216-.Lfunc_begin35       #     jumps to .Ltmp2216
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2217-.Lfunc_begin35       # >> Call Site 3 <<
	.uleb128 .Ltmp2218-.Ltmp2217            #   Call between .Ltmp2217 and .Ltmp2218
	.uleb128 .Ltmp2219-.Lfunc_begin35       #     jumps to .Ltmp2219
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2220-.Lfunc_begin35       # >> Call Site 4 <<
	.uleb128 .Ltmp2271-.Ltmp2220            #   Call between .Ltmp2220 and .Ltmp2271
	.uleb128 .Ltmp2274-.Lfunc_begin35       #     jumps to .Ltmp2274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2275-.Lfunc_begin35       # >> Call Site 5 <<
	.uleb128 .Ltmp2350-.Ltmp2275            #   Call between .Ltmp2275 and .Ltmp2350
	.uleb128 .Ltmp2351-.Lfunc_begin35       #     jumps to .Ltmp2351
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2352-.Lfunc_begin35       # >> Call Site 6 <<
	.uleb128 .Ltmp2353-.Ltmp2352            #   Call between .Ltmp2352 and .Ltmp2353
	.uleb128 .Ltmp2354-.Lfunc_begin35       #     jumps to .Ltmp2354
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2353-.Lfunc_begin35       # >> Call Site 7 <<
	.uleb128 .Ltmp2355-.Ltmp2353            #   Call between .Ltmp2353 and .Ltmp2355
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2355-.Lfunc_begin35       # >> Call Site 8 <<
	.uleb128 .Ltmp2356-.Ltmp2355            #   Call between .Ltmp2355 and .Ltmp2356
	.uleb128 .Ltmp2357-.Lfunc_begin35       #     jumps to .Ltmp2357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2356-.Lfunc_begin35       # >> Call Site 9 <<
	.uleb128 .Ltmp2436-.Ltmp2356            #   Call between .Ltmp2356 and .Ltmp2436
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2436-.Lfunc_begin35       # >> Call Site 10 <<
	.uleb128 .Ltmp2437-.Ltmp2436            #   Call between .Ltmp2436 and .Ltmp2437
	.uleb128 .Ltmp2438-.Lfunc_begin35       #     jumps to .Ltmp2438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2418-.Lfunc_begin35       # >> Call Site 11 <<
	.uleb128 .Ltmp2419-.Ltmp2418            #   Call between .Ltmp2418 and .Ltmp2419
	.uleb128 .Ltmp2420-.Lfunc_begin35       #     jumps to .Ltmp2420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2421-.Lfunc_begin35       # >> Call Site 12 <<
	.uleb128 .Ltmp2422-.Ltmp2421            #   Call between .Ltmp2421 and .Ltmp2422
	.uleb128 .Ltmp2423-.Lfunc_begin35       #     jumps to .Ltmp2423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2439-.Lfunc_begin35       # >> Call Site 13 <<
	.uleb128 .Ltmp2440-.Ltmp2439            #   Call between .Ltmp2439 and .Ltmp2440
	.uleb128 .Ltmp2441-.Lfunc_begin35       #     jumps to .Ltmp2441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2440-.Lfunc_begin35       # >> Call Site 14 <<
	.uleb128 .Ltmp2442-.Ltmp2440            #   Call between .Ltmp2440 and .Ltmp2442
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2442-.Lfunc_begin35       # >> Call Site 15 <<
	.uleb128 .Ltmp2443-.Ltmp2442            #   Call between .Ltmp2442 and .Ltmp2443
	.uleb128 .Ltmp2444-.Lfunc_begin35       #     jumps to .Ltmp2444
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2443-.Lfunc_begin35       # >> Call Site 16 <<
	.uleb128 .Ltmp2445-.Ltmp2443            #   Call between .Ltmp2443 and .Ltmp2445
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2445-.Lfunc_begin35       # >> Call Site 17 <<
	.uleb128 .Ltmp2446-.Ltmp2445            #   Call between .Ltmp2445 and .Ltmp2446
	.uleb128 .Ltmp2447-.Lfunc_begin35       #     jumps to .Ltmp2447
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2446-.Lfunc_begin35       # >> Call Site 18 <<
	.uleb128 .Ltmp2448-.Ltmp2446            #   Call between .Ltmp2446 and .Ltmp2448
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2448-.Lfunc_begin35       # >> Call Site 19 <<
	.uleb128 .Ltmp2449-.Ltmp2448            #   Call between .Ltmp2448 and .Ltmp2449
	.uleb128 .Ltmp2450-.Lfunc_begin35       #     jumps to .Ltmp2450
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2449-.Lfunc_begin35       # >> Call Site 20 <<
	.uleb128 .Ltmp2451-.Ltmp2449            #   Call between .Ltmp2449 and .Ltmp2451
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2451-.Lfunc_begin35       # >> Call Site 21 <<
	.uleb128 .Ltmp2452-.Ltmp2451            #   Call between .Ltmp2451 and .Ltmp2452
	.uleb128 .Ltmp2453-.Lfunc_begin35       #     jumps to .Ltmp2453
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2452-.Lfunc_begin35       # >> Call Site 22 <<
	.uleb128 .Ltmp2454-.Ltmp2452            #   Call between .Ltmp2452 and .Ltmp2454
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2454-.Lfunc_begin35       # >> Call Site 23 <<
	.uleb128 .Ltmp2455-.Ltmp2454            #   Call between .Ltmp2454 and .Ltmp2455
	.uleb128 .Ltmp2456-.Lfunc_begin35       #     jumps to .Ltmp2456
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2457-.Lfunc_begin35       # >> Call Site 24 <<
	.uleb128 .Ltmp2458-.Ltmp2457            #   Call between .Ltmp2457 and .Ltmp2458
	.uleb128 .Ltmp2459-.Lfunc_begin35       #     jumps to .Ltmp2459
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2458-.Lfunc_begin35       # >> Call Site 25 <<
	.uleb128 .Ltmp2358-.Ltmp2458            #   Call between .Ltmp2458 and .Ltmp2358
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2358-.Lfunc_begin35       # >> Call Site 26 <<
	.uleb128 .Ltmp2413-.Ltmp2358            #   Call between .Ltmp2358 and .Ltmp2413
	.uleb128 .Ltmp2414-.Lfunc_begin35       #     jumps to .Ltmp2414
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2413-.Lfunc_begin35       # >> Call Site 27 <<
	.uleb128 .Ltmp2424-.Ltmp2413            #   Call between .Ltmp2413 and .Ltmp2424
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2424-.Lfunc_begin35       # >> Call Site 28 <<
	.uleb128 .Ltmp2425-.Ltmp2424            #   Call between .Ltmp2424 and .Ltmp2425
	.uleb128 .Ltmp2426-.Lfunc_begin35       #     jumps to .Ltmp2426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2425-.Lfunc_begin35       # >> Call Site 29 <<
	.uleb128 .Ltmp2427-.Ltmp2425            #   Call between .Ltmp2425 and .Ltmp2427
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2427-.Lfunc_begin35       # >> Call Site 30 <<
	.uleb128 .Ltmp2428-.Ltmp2427            #   Call between .Ltmp2427 and .Ltmp2428
	.uleb128 .Ltmp2429-.Lfunc_begin35       #     jumps to .Ltmp2429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2428-.Lfunc_begin35       # >> Call Site 31 <<
	.uleb128 .Ltmp2430-.Ltmp2428            #   Call between .Ltmp2428 and .Ltmp2430
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2430-.Lfunc_begin35       # >> Call Site 32 <<
	.uleb128 .Ltmp2431-.Ltmp2430            #   Call between .Ltmp2430 and .Ltmp2431
	.uleb128 .Ltmp2432-.Lfunc_begin35       #     jumps to .Ltmp2432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2433-.Lfunc_begin35       # >> Call Site 33 <<
	.uleb128 .Ltmp2434-.Ltmp2433            #   Call between .Ltmp2433 and .Ltmp2434
	.uleb128 .Ltmp2435-.Lfunc_begin35       #     jumps to .Ltmp2435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2434-.Lfunc_begin35       # >> Call Site 34 <<
	.uleb128 .Ltmp2460-.Ltmp2434            #   Call between .Ltmp2434 and .Ltmp2460
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2460-.Lfunc_begin35       # >> Call Site 35 <<
	.uleb128 .Ltmp2461-.Ltmp2460            #   Call between .Ltmp2460 and .Ltmp2461
	.uleb128 .Ltmp2462-.Lfunc_begin35       #     jumps to .Ltmp2462
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2415-.Lfunc_begin35       # >> Call Site 36 <<
	.uleb128 .Ltmp2416-.Ltmp2415            #   Call between .Ltmp2415 and .Ltmp2416
	.uleb128 .Ltmp2417-.Lfunc_begin35       #     jumps to .Ltmp2417
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2272-.Lfunc_begin35       # >> Call Site 37 <<
	.uleb128 .Ltmp2273-.Ltmp2272            #   Call between .Ltmp2272 and .Ltmp2273
	.uleb128 .Ltmp2274-.Lfunc_begin35       #     jumps to .Ltmp2274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2273-.Lfunc_begin35       # >> Call Site 38 <<
	.uleb128 .Lfunc_end55-.Ltmp2273         #   Call between .Ltmp2273 and .Lfunc_end55
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP3Cmd12get_cmd_typeB5cxx11Ev,"axG",@progbits,_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev,comdat
	.weak	_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev # -- Begin function _ZN2PP3Cmd12get_cmd_typeB5cxx11Ev
	.p2align	5
	.type	_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev,@function
_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev:      # @_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$a0, $a0, 16
	ld.d	$a2, $a1, 280
	ld.d	$s0, $a1, 272
	st.d	$a0, $fp, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 0
	bltu	$a2, $a1, .LBB56_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a2, $fp, 16
.LBB56_2:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB56_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a2, .LBB56_5
# %bb.4:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB56_6
.LBB56_5:
	addi.d	$a2, $a2, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end56:
	.size	_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev, .Lfunc_end56-_ZN2PP3Cmd12get_cmd_typeB5cxx11Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	move	$s6, $zero
	move	$s7, $zero
	addi.d	$s3, $a2, 16
	addi.d	$a0, $a2, 256
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s8, $a0, -1973
	pcalau12i	$a0, %pc_hi20(.L.str.102)
	addi.d	$s4, $a0, %pc_lo12(.L.str.102)
	b	.LBB57_3
	.p2align	4, , 16
.LBB57_1:                               #   in Loop: Header=BB57_3 Depth=1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.LBB57_2:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
                                        #   in Loop: Header=BB57_3 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
	addi.d	$s7, $s7, 1
	addi.d	$s6, $s6, 4
.LBB57_3:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s1, 72
	ld.d	$a0, $s1, 40
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $s1, 48
	ld.d	$a4, $s1, 56
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s1, 32
	ld.d	$a1, $s1, 16
	slli.d	$a2, $a2, 7
	srli.d	$a3, $a3, 2
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 2
	add.w	$a2, $a2, $a3
	bge	$s7, $a2, .LBB57_16
# %bb.4:                                #   in Loop: Header=BB57_3 Depth=1
	ld.d	$a2, $s1, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 2
	add.d	$a2, $s7, $a2
	bltz	$a2, .LBB57_7
# %bb.5:                                #   in Loop: Header=BB57_3 Depth=1
	ori	$a3, $zero, 127
	bltu	$a3, $a2, .LBB57_8
# %bb.6:                                #   in Loop: Header=BB57_3 Depth=1
	add.d	$a1, $a1, $s6
	b	.LBB57_10
	.p2align	4, , 16
.LBB57_7:                               #   in Loop: Header=BB57_3 Depth=1
	srai.d	$a1, $a2, 7
	b	.LBB57_9
	.p2align	4, , 16
.LBB57_8:                               #   in Loop: Header=BB57_3 Depth=1
	srli.d	$a1, $a2, 7
.LBB57_9:                               #   in Loop: Header=BB57_3 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a2, $a1
	alsl.d	$a1, $a1, $a0, 2
.LBB57_10:                              # %_ZNSt5dequeIiSaIiEEixEm.exit
                                        #   in Loop: Header=BB57_3 Depth=1
	ld.d	$a0, $s2, 840
	ld.d	$a2, $s2, 848
	ld.w	$a1, $a1, 0
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s8
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB57_12
# %bb.11:                               #   in Loop: Header=BB57_3 Depth=1
	ld.d	$a0, $s2, 864
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB57_13
	.p2align	4, , 16
.LBB57_12:                              #   in Loop: Header=BB57_3 Depth=1
	ori	$a2, $zero, 432
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB57_13:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB57_3 Depth=1
	move	$a1, $zero
	move	$a2, $s0
	move	$a3, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 32
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	ldx.d	$s5, $a1, $a0
	beqz	$s5, .LBB57_17
# %bb.14:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB57_3 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB57_1
# %bb.15:                               #   in Loop: Header=BB57_3 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB57_2
.LBB57_16:
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB57_17:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end57:
	.size	_ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end57-_ZN2PP11PowerParser11check_enddoERSt5dequeIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser19cmd_set_reprocessedEb # -- Begin function _ZN2PP11PowerParser19cmd_set_reprocessedEb
	.p2align	5
	.type	_ZN2PP11PowerParser19cmd_set_reprocessedEb,@function
_ZN2PP11PowerParser19cmd_set_reprocessedEb: # @_ZN2PP11PowerParser19cmd_set_reprocessedEb
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a1
	move	$s0, $a0
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s2, $sp, 24
	ori	$s5, $zero, 15
	ori	$s6, $zero, 16
	addi.w	$s7, $zero, -1
	b	.LBB58_2
	.p2align	4, , 16
.LBB58_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB58_2 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 32
.LBB58_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 1064
	ld.d	$a0, $s0, 1032
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 1040
	ld.d	$a4, $s0, 1048
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 1024
	ld.d	$a1, $s0, 1008
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 5
	alsl.d	$a2, $a2, $a3, 4
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 5
	add.w	$a2, $a2, $a3
	bge	$s4, $a2, .LBB58_18
# %bb.3:                                #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a2, $s0, 1016
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 5
	add.d	$a2, $s4, $a2
	bltz	$a2, .LBB58_6
# %bb.4:                                #   in Loop: Header=BB58_2 Depth=1
	bltu	$s5, $a2, .LBB58_7
# %bb.5:                                #   in Loop: Header=BB58_2 Depth=1
	add.d	$a0, $a1, $s3
	b	.LBB58_9
	.p2align	4, , 16
.LBB58_6:                               #   in Loop: Header=BB58_2 Depth=1
	srai.d	$a1, $a2, 4
	b	.LBB58_8
	.p2align	4, , 16
.LBB58_7:                               #   in Loop: Header=BB58_2 Depth=1
	srli.d	$a1, $a2, 4
.LBB58_8:                               #   in Loop: Header=BB58_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 4
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB58_9:                               # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
                                        #   in Loop: Header=BB58_2 Depth=1
	st.d	$s2, $sp, 8
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	st.d	$a1, $sp, 40
	move	$a0, $s2
	bltu	$a1, $s6, .LBB58_11
# %bb.10:                               # %.noexc.i
                                        #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB58_11:                              # %._crit_edge.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	beq	$a1, $s7, .LBB58_15
# %bb.12:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	bnez	$a1, .LBB58_14
# %bb.13:                               #   in Loop: Header=BB58_2 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB58_15
	.p2align	4, , 16
.LBB58_14:                              #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB58_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a0, $sp, 40
	st.d	$a0, $sp, 16
.Ltmp2463:
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
.Ltmp2464:
# %bb.16:                               #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB58_1
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB58_1
.LBB58_18:
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB58_19:
.Ltmp2465:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s2, .LBB58_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB58_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end58:
	.size	_ZN2PP11PowerParser19cmd_set_reprocessedEb, .Lfunc_end58-_ZN2PP11PowerParser19cmd_set_reprocessedEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table58:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Lfunc_begin36-.Lfunc_begin36  # >> Call Site 1 <<
	.uleb128 .Ltmp2463-.Lfunc_begin36       #   Call between .Lfunc_begin36 and .Ltmp2463
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2463-.Lfunc_begin36       # >> Call Site 2 <<
	.uleb128 .Ltmp2464-.Ltmp2463            #   Call between .Ltmp2463 and .Ltmp2464
	.uleb128 .Ltmp2465-.Lfunc_begin36       #     jumps to .Ltmp2465
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2464-.Lfunc_begin36       # >> Call Site 3 <<
	.uleb128 .Lfunc_end58-.Ltmp2464         #   Call between .Ltmp2464 and .Lfunc_end58
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser15process_dav_cmdEv # -- Begin function _ZN2PP11PowerParser15process_dav_cmdEv
	.p2align	5
	.type	_ZN2PP11PowerParser15process_dav_cmdEv,@function
_ZN2PP11PowerParser15process_dav_cmdEv: # @_ZN2PP11PowerParser15process_dav_cmdEv
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	addi.d	$sp, $sp, -592
	.cfi_def_cfa_offset 592
	st.d	$ra, $sp, 584                   # 8-byte Folded Spill
	st.d	$fp, $sp, 576                   # 8-byte Folded Spill
	st.d	$s0, $sp, 568                   # 8-byte Folded Spill
	st.d	$s1, $sp, 560                   # 8-byte Folded Spill
	st.d	$s2, $sp, 552                   # 8-byte Folded Spill
	st.d	$s3, $sp, 544                   # 8-byte Folded Spill
	st.d	$s4, $sp, 536                   # 8-byte Folded Spill
	st.d	$s5, $sp, 528                   # 8-byte Folded Spill
	st.d	$s6, $sp, 520                   # 8-byte Folded Spill
	st.d	$s7, $sp, 512                   # 8-byte Folded Spill
	st.d	$s8, $sp, 504                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$a1, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	move	$fp, $a0
	move	$s8, $zero
	move	$s1, $zero
	move	$s7, $zero
	ld.d	$a0, $a1, 0
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $a1, 64
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	ld.d	$a0, $a1, 72
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	ld.d	$a0, $a1, 16
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a0, $a1, 24
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	addi.d	$s6, $sp, 488
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s0, $a0, -1973
	ori	$s2, $zero, 22
                                        # implicit-def: $r27
	.p2align	4, , 16
.LBB59_1:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s0
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s0
	add.w	$a3, $a3, $a4
	bge	$s1, $a3, .LBB59_82
# %bb.2:                                #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s0
	add.d	$a1, $s1, $a1
	beqz	$a1, .LBB59_4
# %bb.3:                                #   in Loop: Header=BB59_1 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB59_5
	.p2align	4, , 16
.LBB59_4:                               #   in Loop: Header=BB59_1 Depth=1
	add.d	$a1, $a2, $s8
.LBB59_5:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB59_1 Depth=1
	addi.d	$a0, $sp, 472
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 480
	ld.d	$s3, $sp, 472
	ori	$s5, $zero, 4
	bne	$a0, $s2, .LBB59_7
# %bb.6:                                # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB59_1 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.104)
	addi.d	$a1, $a0, %pc_lo12(.L.str.104)
	ori	$a2, $zero, 22
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_11
.LBB59_7:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB59_1 Depth=1
	beq	$s3, $s6, .LBB59_9
.LBB59_8:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i57
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $sp, 488
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit59
                                        #   in Loop: Header=BB59_1 Depth=1
	andi	$a0, $s5, 3
	bnez	$a0, .LBB59_83
# %bb.10:                               #   in Loop: Header=BB59_1 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s8, $s8, 432
	b	.LBB59_1
.LBB59_11:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread114
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s0
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB59_13
# %bb.12:                               #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB59_14
.LBB59_13:                              #   in Loop: Header=BB59_1 Depth=1
	add.d	$a0, $a1, $s8
.LBB59_14:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit40
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2466:
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13set_processedEb)
	jirl	$ra, $ra, 0
.Ltmp2467:
# %bb.15:                               #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s0
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB59_17
# %bb.16:                               #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB59_18
.LBB59_17:                              #   in Loop: Header=BB59_1 Depth=1
	add.d	$a1, $a1, $s8
.LBB59_18:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit42
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2469:
	addi.d	$a0, $sp, 440
	ori	$a2, $zero, 2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp2470:
# %bb.19:                               #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a2, $sp, 448
	ori	$a0, $zero, 4
	beq	$a2, $a0, .LBB59_26
# %bb.20:                               #   in Loop: Header=BB59_1 Depth=1
	ori	$a0, $zero, 5
	beq	$a2, $a0, .LBB59_24
# %bb.21:                               #   in Loop: Header=BB59_1 Depth=1
	ori	$a0, $zero, 7
	bne	$a2, $a0, .LBB59_27
# %bb.22:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$s3, $sp, 440
	pcalau12i	$a0, %pc_hi20(.L.str.105)
	addi.d	$a1, $a0, %pc_lo12(.L.str.105)
	ori	$a2, $zero, 7
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB59_27
# %bb.23:                               #   in Loop: Header=BB59_1 Depth=1
	ori	$a0, $zero, 1
	ori	$s5, $zero, 1
	ori	$s4, $zero, 1
	b	.LBB59_81
.LBB59_24:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit44
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$s3, $sp, 440
	pcalau12i	$a0, %pc_hi20(.L.str.106)
	addi.d	$a1, $a0, %pc_lo12(.L.str.106)
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB59_27
# %bb.25:                               #   in Loop: Header=BB59_1 Depth=1
	ori	$s5, $zero, 1
	ori	$a0, $zero, 2
	ori	$s4, $zero, 2
	b	.LBB59_81
.LBB59_26:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit46
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$s3, $sp, 440
	pcalau12i	$a0, %pc_hi20(.L.str.107)
	addi.d	$a1, $a0, %pc_lo12(.L.str.107)
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_80
.LBB59_27:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit46.thread117
                                        #   in Loop: Header=BB59_1 Depth=1
	st.w	$zero, $sp, 436
.Ltmp2472:
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2473:
# %bb.28:                               #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s0
	add.d	$a2, $s1, $a2
	beqz	$a2, .LBB59_30
# %bb.29:                               #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB59_31
.LBB59_30:                              #   in Loop: Header=BB59_1 Depth=1
	add.d	$a0, $a1, $s8
.LBB59_31:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit48
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2475:
	addi.d	$a2, $sp, 40
	addi.d	$a3, $sp, 436
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2476:
# %bb.32:                               #   in Loop: Header=BB59_1 Depth=1
.Ltmp2477:
	pcalau12i	$a0, %pc_hi20(.L.str.108)
	addi.d	$a1, $a0, %pc_lo12(.L.str.108)
	ori	$a2, $zero, 53
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2478:
# %bb.33:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $sp, 56
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 296
	ldx.d	$s3, $a1, $a0
	beqz	$s3, .LBB59_84
# %bb.34:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB59_36
# %bb.35:                               #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s3, 67
	b	.LBB59_38
.LBB59_36:                              #   in Loop: Header=BB59_1 Depth=1
.Ltmp2479:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2480:
# %bb.37:                               # %.noexc66
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp2481:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp2482:
.LBB59_38:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2483:
	ext.w.b	$a1, $a0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2484:
# %bb.39:                               # %.noexc68
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2485:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2486:
# %bb.40:                               # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2487:
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.109)
	addi.d	$a1, $a0, %pc_lo12(.L.str.109)
	ori	$a2, $zero, 33
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2488:
# %bb.41:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit49
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB59_84
# %bb.42:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i71
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB59_44
# %bb.43:                               #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s4, 67
	b	.LBB59_46
.LBB59_44:                              #   in Loop: Header=BB59_1 Depth=1
.Ltmp2489:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2490:
# %bb.45:                               # %.noexc76
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp2491:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp2492:
.LBB59_46:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i73
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2493:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2494:
# %bb.47:                               # %.noexc78
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2495:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2496:
# %bb.48:                               # %_ZNSolsEPFRSoS_E.exit50
                                        #   in Loop: Header=BB59_1 Depth=1
	ori	$a0, $zero, 2
	st.w	$a0, $sp, 436
.Ltmp2497:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s3, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.108)
	addi.d	$a1, $a0, %pc_lo12(.L.str.108)
	ori	$a2, $zero, 53
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2498:
# %bb.49:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit51
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB59_84
# %bb.50:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i82
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB59_52
# %bb.51:                               #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s3, 67
	b	.LBB59_54
.LBB59_52:                              #   in Loop: Header=BB59_1 Depth=1
.Ltmp2499:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2500:
# %bb.53:                               # %.noexc87
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp2501:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp2502:
.LBB59_54:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i84
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2503:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2504:
# %bb.55:                               # %.noexc89
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2505:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2506:
# %bb.56:                               # %_ZNSolsEPFRSoS_E.exit52
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2507:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s3, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.109)
	addi.d	$a1, $a0, %pc_lo12(.L.str.109)
	ori	$a2, $zero, 33
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2508:
# %bb.57:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit53
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB59_84
# %bb.58:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i93
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB59_60
# %bb.59:                               #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s3, 67
	b	.LBB59_62
.LBB59_60:                              #   in Loop: Header=BB59_1 Depth=1
.Ltmp2509:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2510:
# %bb.61:                               # %.noexc98
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp2511:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp2512:
.LBB59_62:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i95
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2513:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2514:
# %bb.63:                               # %.noexc100
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2515:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2516:
# %bb.64:                               # %_ZNSolsEPFRSoS_E.exit54
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2517:
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 436
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2518:
# %bb.65:                               #   in Loop: Header=BB59_1 Depth=1
	move	$s3, $a0
	blez	$a0, .LBB59_75
# %bb.66:                               #   in Loop: Header=BB59_1 Depth=1
.Ltmp2519:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.110)
	addi.d	$a1, $a1, %pc_lo12(.L.str.110)
	ori	$a2, $zero, 38
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2520:
# %bb.67:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit55
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.w	$a1, $sp, 436
.Ltmp2521:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2522:
# %bb.68:                               #   in Loop: Header=BB59_1 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB59_84
# %bb.69:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i104
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB59_71
# %bb.70:                               #   in Loop: Header=BB59_1 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB59_73
.LBB59_71:                              #   in Loop: Header=BB59_1 Depth=1
.Ltmp2523:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2524:
# %bb.72:                               # %.noexc109
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp2525:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp2526:
.LBB59_73:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i106
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2527:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2528:
# %bb.74:                               # %.noexc111
                                        #   in Loop: Header=BB59_1 Depth=1
.Ltmp2529:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2530:
.LBB59_75:                              # %_ZNSolsEPFRSoS_E.exit56
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	st.d	$a0, $sp, 40
	ld.d	$a1, $a0, -24
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $sp, 136
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	addi.d	$a4, $sp, 40
	stx.d	$a3, $a1, $a4
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	st.d	$a1, $sp, 56
	addi.d	$a1, $a2, 16
	st.d	$a1, $sp, 64
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB59_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_77:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
                                        #   in Loop: Header=BB59_1 Depth=1
	slt	$a0, $s7, $s3
	pcalau12i	$a1, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	masknez	$a2, $s7, $a0
	maskeqz	$a0, $s3, $a0
	or	$s4, $a0, $a2
	addi.d	$a0, $a1, 16
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	st.d	$a0, $sp, 40
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	addi.d	$a2, $sp, 40
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 48
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s3, $sp, 440
	ori	$s5, $zero, 1
	move	$s7, $s4
	addi.d	$a0, $sp, 456
	beq	$s3, $a0, .LBB59_79
.LBB59_78:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$a0, $sp, 456
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_79:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB59_1 Depth=1
	ld.d	$s3, $sp, 472
	bne	$s3, $s6, .LBB59_8
	b	.LBB59_9
.LBB59_80:                              #   in Loop: Header=BB59_1 Depth=1
	move	$a0, $zero
	move	$s5, $zero
.LBB59_81:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB59_1 Depth=1
	stptr.w	$a0, $fp, 2792
	addi.d	$a0, $sp, 456
	bne	$s3, $a0, .LBB59_78
	b	.LBB59_79
.LBB59_82:
	move	$s4, $zero
.LBB59_83:
	addi.w	$a0, $s4, 0
	ld.d	$s8, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 520                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 528                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 536                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 544                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 552                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 560                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 568                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 576                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 584                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 592
	ret
.LBB59_84:                              # %.invoke
.Ltmp2532:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2533:
# %bb.85:                               # %.cont
.LBB59_86:
.Ltmp2474:
	move	$fp, $a0
	b	.LBB59_92
.LBB59_87:
.Ltmp2471:
	move	$fp, $a0
	ld.d	$a0, $sp, 472
	beq	$a0, $s6, .LBB59_94
	b	.LBB59_96
.LBB59_88:
.Ltmp2468:
	move	$fp, $a0
	ld.d	$a0, $sp, 472
	beq	$a0, $s6, .LBB59_94
	b	.LBB59_96
.LBB59_89:                              # %.loopexit.split-lp
.Ltmp2534:
	b	.LBB59_91
.LBB59_90:                              # %.loopexit
.Ltmp2531:
.LBB59_91:
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB59_92:
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	bne	$a0, $a1, .LBB59_95
# %bb.93:
	ld.d	$a0, $sp, 472
	bne	$a0, $s6, .LBB59_96
.LBB59_94:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB59_95:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i60
	ld.d	$a1, $sp, 456
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 472
	beq	$a0, $s6, .LBB59_94
.LBB59_96:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i63
	ld.d	$a1, $sp, 488
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end59:
	.size	_ZN2PP11PowerParser15process_dav_cmdEv, .Lfunc_end59-_ZN2PP11PowerParser15process_dav_cmdEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table59:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Lfunc_begin37-.Lfunc_begin37  # >> Call Site 1 <<
	.uleb128 .Ltmp2466-.Lfunc_begin37       #   Call between .Lfunc_begin37 and .Ltmp2466
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2466-.Lfunc_begin37       # >> Call Site 2 <<
	.uleb128 .Ltmp2467-.Ltmp2466            #   Call between .Ltmp2466 and .Ltmp2467
	.uleb128 .Ltmp2468-.Lfunc_begin37       #     jumps to .Ltmp2468
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2469-.Lfunc_begin37       # >> Call Site 3 <<
	.uleb128 .Ltmp2470-.Ltmp2469            #   Call between .Ltmp2469 and .Ltmp2470
	.uleb128 .Ltmp2471-.Lfunc_begin37       #     jumps to .Ltmp2471
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2470-.Lfunc_begin37       # >> Call Site 4 <<
	.uleb128 .Ltmp2472-.Ltmp2470            #   Call between .Ltmp2470 and .Ltmp2472
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2472-.Lfunc_begin37       # >> Call Site 5 <<
	.uleb128 .Ltmp2473-.Ltmp2472            #   Call between .Ltmp2472 and .Ltmp2473
	.uleb128 .Ltmp2474-.Lfunc_begin37       #     jumps to .Ltmp2474
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2475-.Lfunc_begin37       # >> Call Site 6 <<
	.uleb128 .Ltmp2530-.Ltmp2475            #   Call between .Ltmp2475 and .Ltmp2530
	.uleb128 .Ltmp2531-.Lfunc_begin37       #     jumps to .Ltmp2531
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2530-.Lfunc_begin37       # >> Call Site 7 <<
	.uleb128 .Ltmp2532-.Ltmp2530            #   Call between .Ltmp2530 and .Ltmp2532
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2532-.Lfunc_begin37       # >> Call Site 8 <<
	.uleb128 .Ltmp2533-.Ltmp2532            #   Call between .Ltmp2532 and .Ltmp2533
	.uleb128 .Ltmp2534-.Lfunc_begin37       #     jumps to .Ltmp2534
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2533-.Lfunc_begin37       # >> Call Site 9 <<
	.uleb128 .Lfunc_end59-.Ltmp2533         #   Call between .Ltmp2533 and .Lfunc_end59
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end37:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ # -- Begin function _ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.p2align	5
	.type	_ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_,@function
_ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_: # @_ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	addi.d	$sp, $sp, -544
	.cfi_def_cfa_offset 544
	st.d	$ra, $sp, 536                   # 8-byte Folded Spill
	st.d	$fp, $sp, 528                   # 8-byte Folded Spill
	st.d	$s0, $sp, 520                   # 8-byte Folded Spill
	st.d	$s1, $sp, 512                   # 8-byte Folded Spill
	st.d	$s2, $sp, 504                   # 8-byte Folded Spill
	st.d	$s3, $sp, 496                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $sp, 88
	ld.d	$a1, $s1, 8
	ld.d	$s1, $s1, 0
	st.d	$s2, $sp, 72
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s2
	bltu	$a1, $a2, .LBB60_3
# %bb.1:                                # %.noexc.i
.Ltmp2535:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2536:
# %bb.2:                                # %.noexc
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB60_3:                               # %._crit_edge.i.i
	addi.w	$s3, $zero, -1
	beq	$a1, $s3, .LBB60_7
# %bb.4:                                # %._crit_edge.i.i
	bnez	$a1, .LBB60_6
# %bb.5:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB60_7
.LBB60_6:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB60_7:
	ld.d	$a0, $sp, 8
	st.d	$a0, $sp, 80
	addi.d	$s1, $sp, 56
	ld.d	$a1, $s0, 8
	ld.d	$s0, $s0, 0
	st.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s1
	bltu	$a1, $a2, .LBB60_10
# %bb.8:                                # %.noexc.i10
.Ltmp2538:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2539:
# %bb.9:                                # %.noexc11
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB60_10:                              # %._crit_edge.i.i9
	beq	$a1, $s3, .LBB60_14
# %bb.11:                               # %._crit_edge.i.i9
	bnez	$a1, .LBB60_13
# %bb.12:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB60_14
.LBB60_13:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB60_14:
	ld.d	$a0, $sp, 8
	st.d	$a0, $sp, 48
.Ltmp2541:
	addi.d	$a1, $sp, 72
	addi.d	$a2, $sp, 40
	addi.d	$a3, $sp, 104
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp2542:
# %bb.15:
	ld.d	$a0, $sp, 40
	beq	$a0, $s1, .LBB60_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_17:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 72
	beq	$a0, $s2, .LBB60_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB60_27
# %bb.20:
	ld.d	$a0, $sp, 168
	addi.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB60_23
# %bb.21:
	ld.d	$a1, $sp, 152
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB60_23
# %bb.22:
	ld.d	$a3, $sp, 160
	sub.d	$a4, $a0, $a3
.Ltmp2544:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2545:
	b	.LBB60_24
.LBB60_23:
	addi.d	$a1, $sp, 200
.Ltmp2546:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2547:
.LBB60_24:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
.Ltmp2549:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2550:
# %bb.25:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB60_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i17
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_27:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 104
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 104
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 200
	st.d	$a2, $sp, 120
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 216
	st.d	$a1, $sp, 128
	beq	$a0, $a2, .LBB60_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_29:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 128
	addi.d	$a0, $sp, 184
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 104
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 112
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s3, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 520                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 528                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 536                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 544
	ret
.LBB60_30:
.Ltmp2551:
	b	.LBB60_32
.LBB60_31:
.Ltmp2548:
.LBB60_32:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s0, .LBB60_40
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB60_34:
.Ltmp2540:
	move	$fp, $a0
	b	.LBB60_38
.LBB60_35:
.Ltmp2537:
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB60_36:
.Ltmp2543:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s1, .LBB60_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	ld.d	$a0, $sp, 72
	beq	$a0, $s2, .LBB60_40
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_40:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit25
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end60:
	.size	_ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_, .Lfunc_end60-_ZN2PP11PowerParser10list_cmdsfENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table60:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Lfunc_begin38-.Lfunc_begin38  # >> Call Site 1 <<
	.uleb128 .Ltmp2535-.Lfunc_begin38       #   Call between .Lfunc_begin38 and .Ltmp2535
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2535-.Lfunc_begin38       # >> Call Site 2 <<
	.uleb128 .Ltmp2536-.Ltmp2535            #   Call between .Ltmp2535 and .Ltmp2536
	.uleb128 .Ltmp2537-.Lfunc_begin38       #     jumps to .Ltmp2537
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2536-.Lfunc_begin38       # >> Call Site 3 <<
	.uleb128 .Ltmp2538-.Ltmp2536            #   Call between .Ltmp2536 and .Ltmp2538
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2538-.Lfunc_begin38       # >> Call Site 4 <<
	.uleb128 .Ltmp2539-.Ltmp2538            #   Call between .Ltmp2538 and .Ltmp2539
	.uleb128 .Ltmp2540-.Lfunc_begin38       #     jumps to .Ltmp2540
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2539-.Lfunc_begin38       # >> Call Site 5 <<
	.uleb128 .Ltmp2541-.Ltmp2539            #   Call between .Ltmp2539 and .Ltmp2541
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2541-.Lfunc_begin38       # >> Call Site 6 <<
	.uleb128 .Ltmp2542-.Ltmp2541            #   Call between .Ltmp2541 and .Ltmp2542
	.uleb128 .Ltmp2543-.Lfunc_begin38       #     jumps to .Ltmp2543
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2542-.Lfunc_begin38       # >> Call Site 7 <<
	.uleb128 .Ltmp2544-.Ltmp2542            #   Call between .Ltmp2542 and .Ltmp2544
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2544-.Lfunc_begin38       # >> Call Site 8 <<
	.uleb128 .Ltmp2547-.Ltmp2544            #   Call between .Ltmp2544 and .Ltmp2547
	.uleb128 .Ltmp2548-.Lfunc_begin38       #     jumps to .Ltmp2548
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2549-.Lfunc_begin38       # >> Call Site 9 <<
	.uleb128 .Ltmp2550-.Ltmp2549            #   Call between .Ltmp2549 and .Ltmp2550
	.uleb128 .Ltmp2551-.Lfunc_begin38       #     jumps to .Ltmp2551
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2550-.Lfunc_begin38       # >> Call Site 10 <<
	.uleb128 .Lfunc_end60-.Ltmp2550         #   Call between .Ltmp2550 and .Lfunc_end60
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13list_wt_cmdsfEv # -- Begin function _ZN2PP11PowerParser13list_wt_cmdsfEv
	.p2align	5
	.type	_ZN2PP11PowerParser13list_wt_cmdsfEv,@function
_ZN2PP11PowerParser13list_wt_cmdsfEv:   # @_ZN2PP11PowerParser13list_wt_cmdsfEv
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	addi.d	$sp, $sp, -448
	.cfi_def_cfa_offset 448
	st.d	$ra, $sp, 440                   # 8-byte Folded Spill
	st.d	$fp, $sp, 432                   # 8-byte Folded Spill
	st.d	$s0, $sp, 424                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2552:
	addi.d	$a1, $sp, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp2553:
# %bb.1:
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB61_9
# %bb.2:
	ld.d	$a0, $sp, 96
	addi.d	$s0, $sp, 16
	st.d	$s0, $sp, 0
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
	beqz	$a0, .LBB61_5
# %bb.3:
	ld.d	$a1, $sp, 80
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB61_5
# %bb.4:
	ld.d	$a3, $sp, 88
	sub.d	$a4, $a0, $a3
.Ltmp2555:
	addi.d	$a0, $sp, 0
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2556:
	b	.LBB61_6
.LBB61_5:
	addi.d	$a1, $sp, 128
.Ltmp2557:
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2558:
.LBB61_6:                               # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2560:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2561:
# %bb.7:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 0
	beq	$a0, $s0, .LBB61_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB61_9:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 32
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 128
	st.d	$a2, $sp, 48
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 144
	st.d	$a1, $sp, 56
	beq	$a0, $a2, .LBB61_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB61_11:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 56
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 40
	addi.d	$a0, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s0, $sp, 424                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 432                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 440                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 448
	ret
.LBB61_12:
.Ltmp2562:
	b	.LBB61_14
.LBB61_13:
.Ltmp2559:
.LBB61_14:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s0, .LBB61_17
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB61_16:
.Ltmp2554:
	move	$fp, $a0
.LBB61_17:
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end61:
	.size	_ZN2PP11PowerParser13list_wt_cmdsfEv, .Lfunc_end61-_ZN2PP11PowerParser13list_wt_cmdsfEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table61:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Lfunc_begin39-.Lfunc_begin39  # >> Call Site 1 <<
	.uleb128 .Ltmp2552-.Lfunc_begin39       #   Call between .Lfunc_begin39 and .Ltmp2552
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2552-.Lfunc_begin39       # >> Call Site 2 <<
	.uleb128 .Ltmp2553-.Ltmp2552            #   Call between .Ltmp2552 and .Ltmp2553
	.uleb128 .Ltmp2554-.Lfunc_begin39       #     jumps to .Ltmp2554
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2555-.Lfunc_begin39       # >> Call Site 3 <<
	.uleb128 .Ltmp2558-.Ltmp2555            #   Call between .Ltmp2555 and .Ltmp2558
	.uleb128 .Ltmp2559-.Lfunc_begin39       #     jumps to .Ltmp2559
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2560-.Lfunc_begin39       # >> Call Site 4 <<
	.uleb128 .Ltmp2561-.Ltmp2560            #   Call between .Ltmp2560 and .Ltmp2561
	.uleb128 .Ltmp2562-.Lfunc_begin39       #     jumps to .Ltmp2562
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2561-.Lfunc_begin39       # >> Call Site 5 <<
	.uleb128 .Lfunc_end61-.Ltmp2561         #   Call between .Ltmp2561 and .Lfunc_end61
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser7list_rbEv   # -- Begin function _ZN2PP11PowerParser7list_rbEv
	.p2align	5
	.type	_ZN2PP11PowerParser7list_rbEv,@function
_ZN2PP11PowerParser7list_rbEv:          # @_ZN2PP11PowerParser7list_rbEv
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:
	addi.d	$sp, $sp, -448
	.cfi_def_cfa_offset 448
	st.d	$ra, $sp, 440                   # 8-byte Folded Spill
	st.d	$fp, $sp, 432                   # 8-byte Folded Spill
	st.d	$s0, $sp, 424                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2563:
	addi.d	$a1, $sp, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp2564:
# %bb.1:
	ld.d	$a0, $fp, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB62_9
# %bb.2:
	ld.d	$a0, $sp, 96
	addi.d	$s0, $sp, 16
	st.d	$s0, $sp, 0
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
	beqz	$a0, .LBB62_5
# %bb.3:
	ld.d	$a1, $sp, 80
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB62_5
# %bb.4:
	ld.d	$a3, $sp, 88
	sub.d	$a4, $a0, $a3
.Ltmp2566:
	addi.d	$a0, $sp, 0
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2567:
	b	.LBB62_6
.LBB62_5:
	addi.d	$a1, $sp, 128
.Ltmp2568:
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2569:
.LBB62_6:                               # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2571:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2572:
# %bb.7:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 0
	beq	$a0, $s0, .LBB62_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_9:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 32
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 128
	st.d	$a2, $sp, 48
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 144
	st.d	$a1, $sp, 56
	beq	$a0, $a2, .LBB62_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_11:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 56
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 40
	addi.d	$a0, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s0, $sp, 424                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 432                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 440                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 448
	ret
.LBB62_12:
.Ltmp2573:
	b	.LBB62_14
.LBB62_13:
.Ltmp2570:
.LBB62_14:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s0, .LBB62_17
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB62_16:
.Ltmp2565:
	move	$fp, $a0
.LBB62_17:
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end62:
	.size	_ZN2PP11PowerParser7list_rbEv, .Lfunc_end62-_ZN2PP11PowerParser7list_rbEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table62:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40  # >> Call Site 1 <<
	.uleb128 .Ltmp2563-.Lfunc_begin40       #   Call between .Lfunc_begin40 and .Ltmp2563
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2563-.Lfunc_begin40       # >> Call Site 2 <<
	.uleb128 .Ltmp2564-.Ltmp2563            #   Call between .Ltmp2563 and .Ltmp2564
	.uleb128 .Ltmp2565-.Lfunc_begin40       #     jumps to .Ltmp2565
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2566-.Lfunc_begin40       # >> Call Site 3 <<
	.uleb128 .Ltmp2569-.Ltmp2566            #   Call between .Ltmp2566 and .Ltmp2569
	.uleb128 .Ltmp2570-.Lfunc_begin40       #     jumps to .Ltmp2570
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2571-.Lfunc_begin40       # >> Call Site 4 <<
	.uleb128 .Ltmp2572-.Ltmp2571            #   Call between .Ltmp2571 and .Ltmp2572
	.uleb128 .Ltmp2573-.Lfunc_begin40       #     jumps to .Ltmp2573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2572-.Lfunc_begin40       # >> Call Site 5 <<
	.uleb128 .Lfunc_end62-.Ltmp2572         #   Call between .Ltmp2572 and .Lfunc_end62
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEED2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEED2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEED2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEED2Ev
	.p2align	5
	.type	_ZNSt13_Bvector_baseISaIbEED2Ev,@function
_ZNSt13_Bvector_baseISaIbEED2Ev:        # @_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB63_2
# %bb.1:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$a1, $a0, 32
	sub.d	$a1, $a1, $a2
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $fp, 0
	st.w	$zero, $fp, 8
	st.d	$zero, $fp, 16
	st.w	$zero, $fp, 24
	st.d	$zero, $fp, 32
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB63_2:                               # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	ret
.Lfunc_end63:
	.size	_ZNSt13_Bvector_baseISaIbEED2Ev, .Lfunc_end63-_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s0, $fp, 8
	beq	$a0, $s0, .LBB64_6
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB64_3
	.p2align	4, , 16
.LBB64_2:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB64_3 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB64_5
.LBB64_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB64_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB64_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB64_2
.LBB64_5:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split
	ld.d	$a0, $fp, 0
.LBB64_6:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit
	beqz	$a0, .LBB64_8
# %bb.7:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB64_8:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end64:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end64-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP8VariableC2ERKS0_,"axG",@progbits,_ZN2PP8VariableC2ERKS0_,comdat
	.weak	_ZN2PP8VariableC2ERKS0_         # -- Begin function _ZN2PP8VariableC2ERKS0_
	.p2align	5
	.type	_ZN2PP8VariableC2ERKS0_,@function
_ZN2PP8VariableC2ERKS0_:                # @_ZN2PP8VariableC2ERKS0_
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	ld.d	$a1, $a1, 8
	ld.d	$s1, $s0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	move	$a0, $s4
	bltu	$a1, $a2, .LBB65_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB65_2:                               # %._crit_edge.i.i
	addi.w	$s5, $zero, -1
	beq	$a1, $s5, .LBB65_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB65_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB65_6
.LBB65_5:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB65_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	addi.d	$s1, $fp, 32
	addi.d	$a1, $s0, 32
.Ltmp2574:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2575:
# %bb.7:
	ld.w	$a0, $s0, 64
	st.w	$a0, $fp, 64
	ld.d	$a0, $s0, 56
	st.d	$a0, $fp, 56
	ld.d	$a0, $s0, 80
	ld.d	$a1, $s0, 72
	sub.d	$s3, $a0, $a1
	st.d	$zero, $fp, 88
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 72
	beq	$a0, $a1, .LBB65_10
# %bb.8:                                # %_ZNSt15__new_allocatorIiE8allocateEmPKv.exit.i.i.i.i
.Ltmp2577:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2578:
# %bb.9:
	move	$s2, $a0
	b	.LBB65_11
.LBB65_10:
	move	$s2, $zero
.LBB65_11:                              # %.noexc
	st.d	$s2, $fp, 72
	st.d	$s2, $fp, 80
	add.d	$a0, $s2, $s3
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s3, $a0, $a1
	blez	$s3, .LBB65_13
# %bb.12:
	move	$a0, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s2, $s2, $s3
.LBB65_13:
	st.d	$s2, $fp, 80
	ld.h	$a0, $s0, 96
	st.h	$a0, $fp, 96
	addi.d	$s2, $fp, 120
	st.d	$s2, $fp, 104
	ld.d	$a1, $s0, 112
	ld.d	$s0, $s0, 104
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a0, .LBB65_16
# %bb.14:                               # %.noexc.i13
.Ltmp2580:
	addi.d	$s6, $fp, 72
	addi.d	$s3, $fp, 104
	addi.d	$a1, $sp, 0
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2581:
# %bb.15:                               # %.noexc14
	ld.d	$a1, $sp, 0
	st.d	$a0, $s3, 0
	st.d	$a1, $s2, 0
	move	$s2, $a0
.LBB65_16:                              # %._crit_edge.i.i12
	beq	$a1, $s5, .LBB65_20
# %bb.17:                               # %._crit_edge.i.i12
	bnez	$a1, .LBB65_19
# %bb.18:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s2, 0
	b	.LBB65_20
.LBB65_19:
	addi.d	$a2, $a1, 1
	move	$a0, $s2
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB65_20:
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 112
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB65_21:
.Ltmp2582:
	ld.d	$a2, $s6, 0
	move	$s0, $a0
	beqz	$a2, .LBB65_24
# %bb.22:
	ld.d	$a0, $fp, 88
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB65_24
.LBB65_23:
.Ltmp2579:
	move	$s0, $a0
.LBB65_24:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB65_26
.LBB65_25:
.Ltmp2576:
	move	$s0, $a0
.LBB65_26:
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB65_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end65:
	.size	_ZN2PP8VariableC2ERKS0_, .Lfunc_end65-_ZN2PP8VariableC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP8VariableC2ERKS0_,"aG",@progbits,_ZN2PP8VariableC2ERKS0_,comdat
	.p2align	2, 0x0
GCC_except_table65:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Lfunc_begin41-.Lfunc_begin41  # >> Call Site 1 <<
	.uleb128 .Ltmp2574-.Lfunc_begin41       #   Call between .Lfunc_begin41 and .Ltmp2574
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2574-.Lfunc_begin41       # >> Call Site 2 <<
	.uleb128 .Ltmp2575-.Ltmp2574            #   Call between .Ltmp2574 and .Ltmp2575
	.uleb128 .Ltmp2576-.Lfunc_begin41       #     jumps to .Ltmp2576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2577-.Lfunc_begin41       # >> Call Site 3 <<
	.uleb128 .Ltmp2578-.Ltmp2577            #   Call between .Ltmp2577 and .Ltmp2578
	.uleb128 .Ltmp2579-.Lfunc_begin41       #     jumps to .Ltmp2579
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2578-.Lfunc_begin41       # >> Call Site 4 <<
	.uleb128 .Ltmp2580-.Ltmp2578            #   Call between .Ltmp2578 and .Ltmp2580
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2580-.Lfunc_begin41       # >> Call Site 5 <<
	.uleb128 .Ltmp2581-.Ltmp2580            #   Call between .Ltmp2580 and .Ltmp2581
	.uleb128 .Ltmp2582-.Lfunc_begin41       #     jumps to .Ltmp2582
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2581-.Lfunc_begin41       # >> Call Site 6 <<
	.uleb128 .Lfunc_end65-.Ltmp2581         #   Call between .Ltmp2581 and .Lfunc_end65
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_ # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$s7, $a0, 16
	move	$a2, $a1
	addi.d	$s6, $a0, 8
	beqz	$s7, .LBB66_11
# %bb.1:                                # %.lr.ph.i.i.i
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s5, $a2, 8
	st.d	$a2, $sp, 16                    # 8-byte Folded Spill
	ld.d	$s2, $a2, 0
	lu12i.w	$s4, -524288
	lu12i.w	$a0, 524287
	ori	$s3, $a0, 4095
	ori	$s8, $zero, 16
	ori	$s0, $zero, 24
	move	$s1, $s6
	b	.LBB66_4
	.p2align	4, , 16
.LBB66_2:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB66_4 Depth=1
	sub.d	$a0, $fp, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
.LBB66_3:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s7, $a0
	masknez	$a2, $s8, $a0
	maskeqz	$a3, $s0, $a0
	or	$a2, $a3, $a2
	ldx.d	$s7, $s7, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s7, .LBB66_6
.LBB66_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$fp, $s7, 40
	sltu	$a0, $s5, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB66_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $s7, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB66_3
	b	.LBB66_2
.LBB66_6:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE11lower_boundERSB_.exit
	beq	$s1, $s6, .LBB66_14
# %bb.7:
	ld.d	$fp, $s1, 40
	sltu	$a0, $fp, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB66_12
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a1, $s1, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB66_12
# %bb.9:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	bltz	$a0, .LBB66_13
.LBB66_10:
	move	$a1, $zero
	b	.LBB66_16
.LBB66_11:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE11lower_boundERSB_.exit.thread
	move	$s1, $s6
	b	.LBB66_15
.LBB66_12:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $s5, $fp
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	bgez	$a0, .LBB66_10
.LBB66_13:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	b	.LBB66_15
.LBB66_14:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
.LBB66_15:                              # %.critedge
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a1, $zero, 1
.LBB66_16:
	move	$a0, $s1
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.Lfunc_end66:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_, .Lfunc_end66-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,comdat
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.p2align	5
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 136
	addi.d	$a1, $fp, 152
	beq	$a0, $a1, .LBB67_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $fp, 104
	beqz	$a0, .LBB67_4
# %bb.3:
	ld.d	$a1, $fp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_4:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	ld.d	$a0, $fp, 64
	ld.d	$s0, $fp, 72
	beq	$a0, $s0, .LBB67_10
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB67_7
	.p2align	4, , 16
.LBB67_6:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB67_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB67_9
.LBB67_7:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB67_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB67_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB67_6
.LBB67_9:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 64
.LBB67_10:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB67_12
# %bb.11:
	ld.d	$a1, $fp, 80
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_12:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB67_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_14:                              # %_ZN2PP8VariableD2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB67_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB67_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end67:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev, .Lfunc_end67-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser15check_processedERb # -- Begin function _ZN2PP11PowerParser15check_processedERb
	.p2align	5
	.type	_ZN2PP11PowerParser15check_processedERb,@function
_ZN2PP11PowerParser15check_processedERb: # @_ZN2PP11PowerParser15check_processedERb
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:
	addi.d	$sp, $sp, -448
	.cfi_def_cfa_offset 448
	st.d	$ra, $sp, 440                   # 8-byte Folded Spill
	st.d	$fp, $sp, 432                   # 8-byte Folded Spill
	st.d	$s0, $sp, 424                   # 8-byte Folded Spill
	st.d	$s1, $sp, 416                   # 8-byte Folded Spill
	st.d	$s2, $sp, 408                   # 8-byte Folded Spill
	st.d	$s3, $sp, 400                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	st.w	$zero, $sp, 396
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	move	$s1, $zero
	move	$s2, $zero
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s3, $a0, -1973
	.p2align	4, , 16
.LBB68_1:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s3
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s3
	add.w	$a3, $a3, $a4
	bge	$s2, $a3, .LBB68_7
# %bb.2:                                #   in Loop: Header=BB68_1 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s3
	add.d	$a1, $s2, $a1
	beqz	$a1, .LBB68_4
# %bb.3:                                #   in Loop: Header=BB68_1 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB68_5
	.p2align	4, , 16
.LBB68_4:                               #   in Loop: Header=BB68_1 Depth=1
	add.d	$a0, $a2, $s1
.LBB68_5:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB68_1 Depth=1
.Ltmp2586:
	addi.d	$a2, $sp, 0
	addi.d	$a3, $sp, 396
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2587:
# %bb.6:                                #   in Loop: Header=BB68_1 Depth=1
	addi.d	$s2, $s2, 1
	addi.d	$s1, $s1, 432
	b	.LBB68_1
.LBB68_7:
.Ltmp2583:
	addi.d	$a1, $sp, 0
	addi.d	$a2, $sp, 396
	addi.d	$s0, $sp, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2584:
# %bb.8:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 0
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 96
	st.d	$a2, $sp, 16
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 112
	st.d	$a1, $sp, 24
	beq	$a0, $a2, .LBB68_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB68_10:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 24
	addi.d	$a0, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 0
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 0
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 8
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s3, $sp, 400                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 408                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 416                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 424                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 432                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 440                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 448
	ret
.LBB68_11:
.Ltmp2585:
	b	.LBB68_13
.LBB68_12:
.Ltmp2588:
.LBB68_13:
	move	$fp, $a0
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end68:
	.size	_ZN2PP11PowerParser15check_processedERb, .Lfunc_end68-_ZN2PP11PowerParser15check_processedERb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table68:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Lfunc_begin42-.Lfunc_begin42  # >> Call Site 1 <<
	.uleb128 .Ltmp2586-.Lfunc_begin42       #   Call between .Lfunc_begin42 and .Ltmp2586
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2586-.Lfunc_begin42       # >> Call Site 2 <<
	.uleb128 .Ltmp2587-.Ltmp2586            #   Call between .Ltmp2586 and .Ltmp2587
	.uleb128 .Ltmp2588-.Lfunc_begin42       #     jumps to .Ltmp2588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2583-.Lfunc_begin42       # >> Call Site 3 <<
	.uleb128 .Ltmp2584-.Ltmp2583            #   Call between .Ltmp2583 and .Ltmp2584
	.uleb128 .Ltmp2585-.Lfunc_begin42       #     jumps to .Ltmp2585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2584-.Lfunc_begin42       # >> Call Site 4 <<
	.uleb128 .Lfunc_end68-.Ltmp2584         #   Call between .Ltmp2584 and .Lfunc_end68
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser16check_duplicatesEv # -- Begin function _ZN2PP11PowerParser16check_duplicatesEv
	.p2align	5
	.type	_ZN2PP11PowerParser16check_duplicatesEv,@function
_ZN2PP11PowerParser16check_duplicatesEv: # @_ZN2PP11PowerParser16check_duplicatesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.w	$a1, $zero, -1
	addi.d	$a2, $sp, 7
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser16check_dup_scalarEiRb)
	jirl	$ra, $ra, 0
	move	$s0, $zero
	lu12i.w	$a0, -118150
	ori	$a0, $a0, 2423
	lu32i.d	$a0, -177225
	lu52i.d	$s1, $a0, 403
	.p2align	4, , 16
.LBB69_1:                               # =>This Inner Loop Header: Depth=1
	ldptr.d	$a0, $fp, 2368
	ldptr.d	$a1, $fp, 2336
	sub.d	$a1, $a0, $a1
	ldptr.d	$a2, $fp, 2344
	ldptr.d	$a3, $fp, 2352
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a1, $a2, $a3
	ldptr.d	$a2, $fp, 2328
	ldptr.d	$a3, $fp, 2312
	srli.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s1
	add.d	$a0, $a0, $a1
	sub.d	$a1, $a2, $a3
	srli.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s1
	add.w	$a0, $a0, $a1
	bge	$s0, $a0, .LBB69_3
# %bb.2:                                #   in Loop: Header=BB69_1 Depth=1
	addi.d	$a2, $sp, 7
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser16check_dup_scalarEiRb)
	jirl	$ra, $ra, 0
	addi.w	$s0, $s0, 1
	b	.LBB69_1
.LBB69_3:
	addi.d	$s2, $fp, 904
	st.d	$s2, $fp, 984
	addi.w	$a1, $zero, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser17remove_dup_scalarEi)
	jirl	$ra, $ra, 0
	move	$s0, $zero
	.p2align	4, , 16
.LBB69_4:                               # =>This Inner Loop Header: Depth=1
	ldptr.d	$a0, $fp, 2368
	ldptr.d	$a1, $fp, 2336
	sub.d	$a1, $a0, $a1
	ldptr.d	$a2, $fp, 2344
	ldptr.d	$a3, $fp, 2352
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a1, $a2, $a3
	ldptr.d	$a2, $fp, 2328
	ldptr.d	$a3, $fp, 2312
	srli.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s1
	add.d	$a0, $a0, $a1
	sub.d	$a1, $a2, $a3
	srli.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s1
	add.w	$a0, $a0, $a1
	bge	$s0, $a0, .LBB69_6
# %bb.5:                                #   in Loop: Header=BB69_4 Depth=1
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser17remove_dup_scalarEi)
	jirl	$ra, $ra, 0
	addi.w	$s0, $s0, 1
	b	.LBB69_4
.LBB69_6:
	st.d	$s2, $fp, 984
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end69:
	.size	_ZN2PP11PowerParser16check_duplicatesEv, .Lfunc_end69-_ZN2PP11PowerParser16check_duplicatesEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZN2PP11PowerParser16check_dup_scalarEiRb
.LCPI70_0:
	.dword	8                               # 0x8
	.dword	7308604897068083526             # 0x656d616e656c6946
	.text
	.globl	_ZN2PP11PowerParser16check_dup_scalarEiRb
	.p2align	5
	.type	_ZN2PP11PowerParser16check_dup_scalarEiRb,@function
_ZN2PP11PowerParser16check_dup_scalarEiRb: # @_ZN2PP11PowerParser16check_dup_scalarEiRb
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	addi.d	$sp, $sp, -880
	.cfi_def_cfa_offset 880
	st.d	$ra, $sp, 872                   # 8-byte Folded Spill
	st.d	$fp, $sp, 864                   # 8-byte Folded Spill
	st.d	$s0, $sp, 856                   # 8-byte Folded Spill
	st.d	$s1, $sp, 848                   # 8-byte Folded Spill
	st.d	$s2, $sp, 840                   # 8-byte Folded Spill
	st.d	$s3, $sp, 832                   # 8-byte Folded Spill
	st.d	$s4, $sp, 824                   # 8-byte Folded Spill
	st.d	$s5, $sp, 816                   # 8-byte Folded Spill
	st.d	$s6, $sp, 808                   # 8-byte Folded Spill
	st.d	$s7, $sp, 800                   # 8-byte Folded Spill
	st.d	$s8, $sp, 792                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 96                    # 8-byte Folded Spill
	move	$fp, $a1
	move	$s0, $a0
	st.d	$zero, $sp, 752
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 736
	st.d	$zero, $sp, 728
	vst	$vr0, $sp, 112                  # 16-byte Folded Spill
	vst	$vr0, $sp, 712
	addi.d	$s5, $sp, 192
	st.d	$s5, $sp, 176
	ori	$a0, $zero, 32
	st.h	$a0, $sp, 192
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 184
.Ltmp2589:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2590:
# %bb.1:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	st.d	$s5, $sp, 176
	lu12i.w	$a0, 415462
	ori	$a1, $a0, 2380
	ld.d	$a0, $sp, 720
	ld.d	$a2, $sp, 728
	st.w	$a1, $sp, 192
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 184
	st.b	$zero, $sp, 196
	beq	$a0, $a2, .LBB70_6
# %bb.4:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 176
	beq	$a2, $s5, .LBB70_9
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i102
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 192
	st.d	$a1, $a0, 16
	b	.LBB70_10
.LBB70_6:
.Ltmp2592:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2593:
# %bb.7:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit106
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_11
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i107
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_11
.LBB70_9:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i104
	ld.b	$a2, $s5, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $s5, 0
	st.w	$a2, $a1, 0
.LBB70_10:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit106.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$s5, $sp, 176
	st.d	$zero, $sp, 184
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 720
.LBB70_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109
	st.d	$s5, $sp, 176
	ld.d	$a0, $sp, 720
	ld.d	$a1, $sp, 728
	ori	$a2, $zero, 32
	st.h	$a2, $sp, 192
	ori	$a2, $zero, 1
	st.d	$a2, $sp, 184
	beq	$a0, $a1, .LBB70_14
# %bb.12:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 176
	beq	$a2, $s5, .LBB70_20
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i115
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 192
	st.d	$a1, $a0, 16
	b	.LBB70_21
.LBB70_14:
.Ltmp2595:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2596:
# %bb.15:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit119
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i120
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_17:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit122
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB70_22
.LBB70_18:
.Ltmp2598:
	addi.d	$a1, $sp, 712
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2599:
# %bb.19:                               # %.noexc123
	ld.d	$a0, $sp, 744
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 744
	b	.LBB70_23
.LBB70_20:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i117
	ld.h	$a2, $sp, 192
	st.h	$a2, $a1, 0
.LBB70_21:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit119.thread
	ori	$a1, $zero, 1
	st.d	$a1, $a0, 8
	st.d	$s5, $sp, 176
	st.d	$zero, $sp, 184
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 720
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	bne	$a0, $a1, .LBB70_18
.LBB70_22:
.Ltmp2600:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 712
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2601:
.LBB70_23:
	pcalau12i	$a0, %pc_hi20(.LCPI70_0)
	vld	$vr0, $a0, %pc_lo12(.LCPI70_0)
	st.d	$zero, $sp, 704
	vld	$vr1, $sp, 112                  # 16-byte Folded Reload
	vst	$vr1, $sp, 688
	st.d	$s5, $sp, 176
	vst	$vr0, $sp, 184
	st.b	$zero, $sp, 200
.Ltmp2603:
	addi.d	$a0, $sp, 688
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2604:
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit134
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i135
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit137
	pcalau12i	$a0, %pc_hi20(.L.str.114)
	addi.d	$a0, $a0, %pc_lo12(.L.str.114)
	ld.w	$a1, $a0, 0
	st.d	$s5, $sp, 176
	ld.h	$a2, $a0, 4
	st.w	$a1, $sp, 192
	ld.d	$a0, $sp, 696
	ld.d	$a1, $sp, 704
	st.h	$a2, $sp, 196
	ori	$a2, $zero, 6
	st.d	$a2, $sp, 184
	st.b	$zero, $sp, 198
	beq	$a0, $a1, .LBB70_29
# %bb.27:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 176
	beq	$a2, $s5, .LBB70_32
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i143
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 192
	st.d	$a1, $a0, 16
	b	.LBB70_33
.LBB70_29:
.Ltmp2606:
	addi.d	$a0, $sp, 688
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2607:
# %bb.30:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit147
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_34
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i148
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_34
.LBB70_32:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i145
	ld.w	$a2, $s5, 3
	st.w	$a2, $a1, 3
	ld.w	$a2, $s5, 0
	st.w	$a2, $a1, 0
.LBB70_33:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit147.thread
	ori	$a1, $zero, 6
	st.d	$a1, $a0, 8
	st.d	$s5, $sp, 176
	st.d	$zero, $sp, 184
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 696
.LBB70_34:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit150
	pcalau12i	$a0, %pc_hi20(.L.str.115)
	addi.d	$a0, $a0, %pc_lo12(.L.str.115)
	ld.w	$a1, $a0, 0
	st.d	$s5, $sp, 176
	ld.w	$a2, $a0, 3
	st.w	$a1, $sp, 192
	ld.d	$a0, $sp, 696
	ld.d	$a3, $sp, 704
	st.w	$a2, $sp, 195
	ori	$a1, $zero, 7
	st.d	$a1, $sp, 184
	st.b	$zero, $sp, 199
	beq	$a0, $a3, .LBB70_36
# %bb.35:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit160.thread
	addi.d	$a2, $a0, 16
	st.d	$a2, $a0, 0
	ld.d	$a3, $sp, 176
	xor	$a4, $a3, $s5
	sltui	$a4, $a4, 1
	masknez	$a3, $a3, $a4
	maskeqz	$a2, $a2, $a4
	or	$a2, $a2, $a3
	st.d	$a2, $a0, 0
	ld.d	$a2, $sp, 192
	st.d	$a2, $a0, 16
	st.d	$a1, $a0, 8
	st.d	$s5, $sp, 176
	st.d	$zero, $sp, 184
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 696
	b	.LBB70_39
.LBB70_36:
.Ltmp2609:
	addi.d	$a0, $sp, 688
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2610:
# %bb.37:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit160
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_39
# %bb.38:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i161
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_39:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit163
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB70_42
# %bb.40:
.Ltmp2612:
	addi.d	$a1, $sp, 688
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2613:
# %bb.41:                               # %.noexc165
	ld.d	$a0, $sp, 744
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 744
	b	.LBB70_44
.LBB70_42:
.Ltmp2614:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 688
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2615:
# %bb.43:                               # %._ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit167_crit_edge
	ld.d	$a0, $sp, 744
.LBB70_44:                              # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit167
	ld.d	$a1, $sp, 736
	sub.d	$a0, $a0, $a1
	srli.d	$a1, $a0, 3
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a2, $a0, -1366
	st.d	$fp, $sp, 8                     # 8-byte Folded Spill
	bltz	$fp, .LBB70_47
# %bb.45:
	ldptr.d	$a0, $s0, 2312
	ldptr.d	$a3, $s0, 2320
	sub.d	$a3, $a0, $a3
	srai.d	$a3, $a3, 3
	lu12i.w	$a4, -118150
	ori	$a4, $a4, 2423
	lu32i.d	$a4, -177225
	lu52i.d	$a4, $a4, 403
	mul.d	$a3, $a3, $a4
	add.d	$a3, $a3, $fp
	beqz	$a3, .LBB70_48
# %bb.46:
	ldptr.d	$a0, $s0, 2336
	slli.d	$a3, $a3, 3
	ldx.d	$a0, $a0, $a3
	b	.LBB70_49
.LBB70_47:
	addi.d	$a0, $s0, 904
	b	.LBB70_50
.LBB70_48:
	ori	$a3, $zero, 568
	mul.d	$a3, $fp, $a3
	add.d	$a0, $a0, $a3
.LBB70_49:                              # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
	addi.d	$a0, $a0, 480
.LBB70_50:
	move	$s3, $zero
	mul.w	$a1, $a1, $a2
	st.d	$a1, $sp, 0                     # 8-byte Folded Spill
	st.d	$a0, $s0, 984
	st.d	$zero, $sp, 680
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	vst	$vr0, $sp, 664
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	st.b	$zero, $a1, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s4, $a1, 16
	ld.d	$s1, $a1, 24
	ld.d	$a2, $a1, 32
	st.d	$a2, $sp, 64                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 40
	st.d	$a2, $sp, 56                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 8
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 48
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 0
	st.d	$a2, $sp, 72                    # 8-byte Folded Spill
	ld.d	$a2, $a1, 64
	st.d	$a2, $sp, 80                    # 8-byte Folded Spill
	ld.d	$a1, $a1, 72
	st.d	$a1, $sp, 88                    # 8-byte Folded Spill
	lu12i.w	$a1, 427197
	ori	$a1, $a1, 2579
	lu32i.d	$a1, -155345
	lu52i.d	$s2, $a1, -1973
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s4, $sp, 32                    # 8-byte Folded Spill
	b	.LBB70_52
	.p2align	4, , 16
.LBB70_51:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit304
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $s0, 984
	addi.d	$s3, $s3, 1
.LBB70_52:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB70_67 Depth 2
                                        #     Child Loop BB70_70 Depth 2
                                        #     Child Loop BB70_73 Depth 2
                                        #       Child Loop BB70_109 Depth 3
                                        #       Child Loop BB70_133 Depth 3
                                        #       Child Loop BB70_129 Depth 3
                                        #     Child Loop BB70_184 Depth 2
	ld.d	$a2, $a0, 72
	ld.d	$a1, $a0, 40
	sub.d	$a3, $a2, $a1
	ld.d	$a4, $a0, 48
	ld.d	$a5, $a0, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a0, 32
	ld.d	$a2, $a0, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s2
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s2
	add.w	$a3, $a3, $a4
	bge	$s3, $a3, .LBB70_193
# %bb.53:                               #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $a0, 24
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s2
	add.d	$a0, $a0, $s3
	ori	$a3, $zero, 432
	mul.d	$s8, $s3, $a3
	beqz	$a0, .LBB70_55
# %bb.54:                               #   in Loop: Header=BB70_52 Depth=1
	slli.d	$a0, $a0, 3
	ldx.d	$a1, $a1, $a0
	b	.LBB70_56
	.p2align	4, , 16
.LBB70_55:                              #   in Loop: Header=BB70_52 Depth=1
	add.d	$a1, $a2, $s8
.LBB70_56:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB70_52 Depth=1
.Ltmp2722:
	addi.d	$a0, $sp, 632
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp2723:
# %bb.57:                               #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $s0, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s2
	add.d	$a2, $a2, $s3
	beqz	$a2, .LBB70_59
# %bb.58:                               #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB70_60
	.p2align	4, , 16
.LBB70_59:                              #   in Loop: Header=BB70_52 Depth=1
	add.d	$a1, $a1, $s8
.LBB70_60:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit188
                                        #   in Loop: Header=BB70_52 Depth=1
.Ltmp2725:
	addi.d	$a0, $sp, 600
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp2726:
# %bb.61:                               #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 608
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB70_63
# %bb.62:                               #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 600
	ld.bu	$a0, $a0, 0
	ori	$a1, $zero, 40
	beq	$a0, $a1, .LBB70_189
.LBB70_63:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.preheader
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a1, $sp, 672
	ld.d	$a0, $sp, 664
	sub.d	$a1, $a1, $a0
	srai.d	$a1, $a1, 5
	addi.w	$a2, $a1, 0
	blez	$a2, .LBB70_72
# %bb.64:                               # %.lr.ph
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$s6, $sp, 640
	beqz	$s6, .LBB70_69
# %bb.65:                               # %.lr.ph.split.preheader
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$s7, $sp, 632
	bstrpick.d	$fp, $a1, 30, 0
	addi.d	$s0, $a0, 8
	b	.LBB70_67
	.p2align	4, , 16
.LBB70_66:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread533
                                        #   in Loop: Header=BB70_67 Depth=2
	addi.d	$fp, $fp, -1
	addi.d	$s0, $s0, 32
	beqz	$fp, .LBB70_72
.LBB70_67:                              # %.lr.ph.split
                                        #   Parent Loop BB70_52 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s0, 0
	bne	$s6, $a0, .LBB70_66
# %bb.68:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
                                        #   in Loop: Header=BB70_67 Depth=2
	ld.d	$a1, $s0, -8
	move	$a0, $s7
	move	$a2, $s6
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB70_66
	b	.LBB70_189
.LBB70_69:                              # %.lr.ph.split.us
                                        #   in Loop: Header=BB70_52 Depth=1
	addi.d	$a0, $a0, 8
	bstrpick.d	$a1, $a1, 30, 0
	.p2align	4, , 16
.LBB70_70:                              #   Parent Loop BB70_52 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB70_189
# %bb.71:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread533.us
                                        #   in Loop: Header=BB70_70 Depth=2
	addi.d	$a1, $a1, -1
	addi.d	$a0, $a0, 32
	bnez	$a1, .LBB70_70
	.p2align	4, , 16
.LBB70_72:                              # %.critedge.preheader
                                        #   in Loop: Header=BB70_52 Depth=1
	move	$s7, $zero
	st.d	$s3, $sp, 24                    # 8-byte Folded Spill
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	.p2align	4, , 16
.LBB70_73:                              # %.critedge
                                        #   Parent Loop BB70_52 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB70_109 Depth 3
                                        #       Child Loop BB70_133 Depth 3
                                        #       Child Loop BB70_129 Depth 3
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a2, $a4, $a5
	srli.d	$a4, $a2, 4
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	mul.d	$a4, $a4, $s2
	add.d	$a3, $a3, $a4
	addi.d	$s3, $s3, 1
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s2
	add.w	$a3, $a3, $a4
	addi.w	$a4, $s3, 0
	bge	$a4, $a3, .LBB70_147
# %bb.74:                               #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s2
	add.d	$a1, $a1, $s3
	beqz	$a1, .LBB70_76
# %bb.75:                               #   in Loop: Header=BB70_73 Depth=2
	slli.d	$a1, $a1, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB70_77
	.p2align	4, , 16
.LBB70_76:                              #   in Loop: Header=BB70_73 Depth=2
	ori	$a0, $zero, 432
	mul.d	$a0, $s3, $a0
	add.d	$a1, $a2, $a0
.LBB70_77:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit192
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a2, $a1, 232
	ld.d	$a0, $a1, 200
	sub.d	$a3, $a2, $a0
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	ld.d	$a4, $a1, 208
	ld.d	$a5, $a1, 216
	sub.d	$a3, $a3, $a2
	ld.d	$a6, $a1, 192
	ld.d	$a2, $a1, 176
	sub.d	$a4, $a4, $a5
	srli.d	$a4, $a4, 7
	alsl.d	$a3, $a3, $a4, 2
	sub.d	$a4, $a6, $a2
	srli.d	$a4, $a4, 7
	add.w	$a3, $a3, $a4
	blez	$a3, .LBB70_81
# %bb.78:                               #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $a1, 184
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB70_82
# %bb.79:                               #   in Loop: Header=BB70_73 Depth=2
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB70_84
# %bb.80:                               #   in Loop: Header=BB70_73 Depth=2
	srli.d	$a2, $a1, 2
	b	.LBB70_83
	.p2align	4, , 16
.LBB70_81:                              # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit.thread
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 640
	addi.d	$a1, $sp, 584
	st.d	$a1, $sp, 568
	st.d	$zero, $sp, 576
	st.b	$zero, $sp, 584
	bnez	$a0, .LBB70_145
	b	.LBB70_94
	.p2align	4, , 16
.LBB70_82:                              #   in Loop: Header=BB70_73 Depth=2
	srai.d	$a2, $a3, 9
.LBB70_83:                              #   in Loop: Header=BB70_73 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB70_84:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB70_73 Depth=2
	addi.d	$a0, $sp, 584
	st.d	$a0, $sp, 568
	ld.d	$a1, $a2, 8
	ld.d	$s6, $a2, 0
	st.d	$a1, $sp, 176
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB70_87
# %bb.85:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB70_73 Depth=2
.Ltmp2747:
	addi.d	$a0, $sp, 568
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2748:
# %bb.86:                               # %.noexc194
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 568
	st.d	$a1, $sp, 584
.LBB70_87:                              # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB70_73 Depth=2
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB70_90
# %bb.88:                               # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB70_73 Depth=2
	bnez	$a1, .LBB70_91
# %bb.89:                               #   in Loop: Header=BB70_73 Depth=2
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
.LBB70_90:                              # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a2, $sp, 176
	ld.d	$a0, $sp, 640
	st.d	$a2, $sp, 576
	beq	$a0, $a2, .LBB70_92
	b	.LBB70_145
	.p2align	4, , 16
.LBB70_91:                              #   in Loop: Header=BB70_73 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 176
	ld.d	$a0, $sp, 640
	st.d	$a2, $sp, 576
	bne	$a0, $a2, .LBB70_145
.LBB70_92:                              #   in Loop: Header=BB70_73 Depth=2
	beqz	$a2, .LBB70_94
# %bb.93:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit196
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $sp, 568
	ld.d	$a0, $sp, 632
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB70_145
.LBB70_94:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit196.thread
                                        #   in Loop: Header=BB70_73 Depth=2
	addi.d	$a0, $sp, 304
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseC2Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt9basic_iosIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt9basic_iosIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 304
	st.d	$zero, $sp, 520
	st.h	$zero, $sp, 528
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	addi.d	$a0, $sp, 536
	vst	$vr0, $a0, 0
	vst	$vr0, $a0, 16
	st.d	$s4, $sp, 176
	ld.d	$a0, $s4, -24
	addi.d	$a1, $sp, 176
	stx.d	$s1, $a0, $a1
	ld.d	$a0, $sp, 176
	st.d	$zero, $sp, 184
	ld.d	$a0, $a0, -24
	add.d	$a0, $a1, $a0
.Ltmp2750:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp2751:
# %bb.95:                               # %.noexc.i197
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	st.d	$a0, $sp, 192
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	stx.d	$a1, $s5, $a0
	ld.d	$a0, $sp, 192
	ld.d	$a0, $a0, -24
	add.d	$a0, $s5, $a0
.Ltmp2753:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp2754:
# %bb.96:                               #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	st.d	$a0, $sp, 176
	ld.d	$a0, $a0, -24
	pcalau12i	$a1, %got_pc_hi20(_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	addi.d	$fp, $sp, 176
	stx.d	$a2, $a0, $fp
	addi.d	$a0, $a1, 24
	st.d	$a0, $sp, 176
	addi.d	$a0, $a1, 104
	pcalau12i	$a2, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	st.d	$a0, $sp, 304
	addi.d	$a0, $a1, 64
	st.d	$a0, $sp, 192
	addi.d	$s5, $a2, 16
	st.d	$s5, $sp, 200
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	addi.d	$a0, $sp, 208
	vst	$vr0, $a0, 0
	vst	$vr0, $a0, 16
	vst	$vr0, $a0, 32
	addi.d	$a0, $sp, 256
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	addi.d	$s4, $a0, 16
	st.d	$s4, $sp, 200
	ori	$a0, $zero, 24
	st.w	$a0, $sp, 264
	ld.d	$a0, $sp, 176
	addi.d	$a1, $sp, 288
	st.d	$a1, $sp, 272
	st.d	$zero, $sp, 280
	st.b	$zero, $sp, 288
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
.Ltmp2756:
	addi.d	$a1, $sp, 200
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
	jirl	$ra, $ra, 0
.Ltmp2757:
# %bb.97:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev.exit
                                        #   in Loop: Header=BB70_73 Depth=2
	andi	$a0, $s7, 1
	bnez	$a0, .LBB70_114
# %bb.98:                               #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $s0, 984
	st.d	$zero, $sp, 168
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s2
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	add.d	$a2, $a2, $a3
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	vst	$vr0, $sp, 152
	beqz	$a2, .LBB70_100
# %bb.99:                               #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a2, $a0, $a1
	b	.LBB70_101
.LBB70_100:                             #   in Loop: Header=BB70_73 Depth=2
	add.d	$a2, $a1, $s8
.LBB70_101:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit199
                                        #   in Loop: Header=BB70_73 Depth=2
.Ltmp2759:
	addi.d	$a1, $sp, 152
	move	$a0, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi)
	jirl	$ra, $ra, 0
.Ltmp2760:
# %bb.102:                              #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB70_105
# %bb.103:                              #   in Loop: Header=BB70_73 Depth=2
.Ltmp2761:
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2762:
# %bb.104:                              # %.noexc201
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 744
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 744
	b	.LBB70_106
.LBB70_105:                             #   in Loop: Header=BB70_73 Depth=2
.Ltmp2763:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2764:
.LBB70_106:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit203
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 152
	ld.d	$fp, $sp, 160
	beq	$a0, $fp, .LBB70_112
# %bb.107:                              # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB70_73 Depth=2
	addi.d	$s0, $a0, 16
	b	.LBB70_109
	.p2align	4, , 16
.LBB70_108:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB70_109 Depth=3
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB70_111
.LBB70_109:                             # %.lr.ph.i.i
                                        #   Parent Loop BB70_52 Depth=1
                                        #     Parent Loop BB70_73 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB70_108
# %bb.110:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB70_109 Depth=3
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_108
.LBB70_111:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 152
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
.LBB70_112:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
                                        #   in Loop: Header=BB70_73 Depth=2
	beqz	$a0, .LBB70_114
# %bb.113:                              #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_114:                             #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $s0, 984
	st.d	$zero, $sp, 168
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s2
	add.d	$a2, $a2, $s3
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	vst	$vr0, $sp, 152
	beqz	$a2, .LBB70_116
# %bb.115:                              #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a2, $a0, $a1
	b	.LBB70_117
.LBB70_116:                             #   in Loop: Header=BB70_73 Depth=2
	ori	$a0, $zero, 432
	mul.d	$a0, $s3, $a0
	add.d	$a2, $a1, $a0
.LBB70_117:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit206
                                        #   in Loop: Header=BB70_73 Depth=2
.Ltmp2766:
	addi.d	$a1, $sp, 152
	move	$a0, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi)
	jirl	$ra, $ra, 0
.Ltmp2767:
# %bb.118:                              #   in Loop: Header=BB70_73 Depth=2
	ld.d	$fp, $sp, 744
	ld.d	$a0, $sp, 752
	beq	$fp, $a0, .LBB70_122
# %bb.119:                              #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 160
	ld.d	$a1, $sp, 152
	sub.d	$s7, $a0, $a1
	st.d	$zero, $fp, 16
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	vst	$vr0, $fp, 0
	beq	$a0, $a1, .LBB70_123
# %bb.120:                              # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i.i.i.i
                                        #   in Loop: Header=BB70_73 Depth=2
.Ltmp2768:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2769:
# %bb.121:                              #   in Loop: Header=BB70_73 Depth=2
	move	$s6, $a0
	b	.LBB70_124
.LBB70_122:                             #   in Loop: Header=BB70_73 Depth=2
.Ltmp2773:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2774:
	b	.LBB70_126
.LBB70_123:                             #   in Loop: Header=BB70_73 Depth=2
	move	$s6, $zero
.LBB70_124:                             # %.noexc428
                                        #   in Loop: Header=BB70_73 Depth=2
	st.d	$s6, $fp, 0
	st.d	$s6, $fp, 8
	add.d	$a0, $s6, $s7
	ld.d	$s0, $sp, 152
	ld.d	$s1, $sp, 160
	st.d	$a0, $fp, 16
	st.d	$s6, $sp, 776
	st.d	$s6, $sp, 760
	addi.d	$a0, $sp, 776
	st.d	$a0, $sp, 768
	bne	$s0, $s1, .LBB70_133
.LBB70_125:                             # %.noexc208
                                        #   in Loop: Header=BB70_73 Depth=2
	st.d	$s6, $fp, 8
	ld.d	$a0, $sp, 744
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 744
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
.LBB70_126:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit210
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 152
	ld.d	$fp, $sp, 160
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	ori	$a2, $zero, 1
	st.b	$a2, $a1, 0
	beq	$a0, $fp, .LBB70_140
# %bb.127:                              # %.lr.ph.i.i212.preheader
                                        #   in Loop: Header=BB70_73 Depth=2
	addi.d	$s0, $a0, 16
	b	.LBB70_129
	.p2align	4, , 16
.LBB70_128:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i215
                                        #   in Loop: Header=BB70_129 Depth=3
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB70_139
.LBB70_129:                             # %.lr.ph.i.i212
                                        #   Parent Loop BB70_52 Depth=1
                                        #     Parent Loop BB70_73 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB70_128
# %bb.130:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i214
                                        #   in Loop: Header=BB70_129 Depth=3
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_128
	.p2align	4, , 16
.LBB70_131:                             #   in Loop: Header=BB70_133 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB70_132:                             #   in Loop: Header=BB70_133 Depth=3
	ld.d	$a0, $sp, 784
	ld.d	$a1, $sp, 776
	st.d	$a0, $s6, 8
	addi.d	$s0, $s0, 32
	addi.d	$s6, $a1, 32
	st.d	$s6, $sp, 776
	beq	$s0, $s1, .LBB70_125
.LBB70_133:                             # %.lr.ph.i.i.i.i424
                                        #   Parent Loop BB70_52 Depth=1
                                        #     Parent Loop BB70_73 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	addi.d	$a0, $s6, 16
	st.d	$a0, $s6, 0
	ld.d	$a1, $s0, 8
	ld.d	$s7, $s0, 0
	st.d	$a1, $sp, 784
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB70_136
# %bb.134:                              # %.noexc.i.i.i.i.i.i
                                        #   in Loop: Header=BB70_133 Depth=3
.Ltmp2770:
	addi.d	$a1, $sp, 784
	move	$a0, $s6
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2771:
# %bb.135:                              # %.noexc.i.i.i.i
                                        #   in Loop: Header=BB70_133 Depth=3
	st.d	$a0, $s6, 0
	ld.d	$a1, $sp, 784
	st.d	$a1, $s6, 16
.LBB70_136:                             # %._crit_edge.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB70_133 Depth=3
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB70_132
# %bb.137:                              # %._crit_edge.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB70_133 Depth=3
	bnez	$a1, .LBB70_131
# %bb.138:                              #   in Loop: Header=BB70_133 Depth=3
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB70_132
	.p2align	4, , 16
.LBB70_139:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i217
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 152
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
.LBB70_140:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i219
                                        #   in Loop: Header=BB70_73 Depth=2
	beqz	$a0, .LBB70_142
# %bb.141:                              #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_142:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit222
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	st.d	$a0, $sp, 176
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	addi.d	$a2, $sp, 176
	stx.d	$a1, $a0, $a2
	ld.d	$a0, $sp, 272
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	st.d	$a1, $sp, 192
	st.d	$s4, $sp, 200
	addi.d	$a1, $sp, 288
	beq	$a0, $a1, .LBB70_144
# %bb.143:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i223
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $sp, 288
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_144:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
                                        #   in Loop: Header=BB70_73 Depth=2
	st.d	$s5, $sp, 200
	addi.d	$a0, $sp, 256
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	st.d	$s4, $sp, 176
	ld.d	$a0, $s4, -24
	addi.d	$a1, $sp, 176
	stx.d	$s1, $a0, $a1
	st.d	$zero, $sp, 184
	addi.d	$a0, $sp, 304
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ori	$s7, $zero, 1
	addi.d	$s5, $sp, 192
.LBB70_145:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit196.thread534
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a0, $sp, 568
	addi.d	$a1, $sp, 584
	beq	$a0, $a1, .LBB70_73
# %bb.146:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i228
                                        #   in Loop: Header=BB70_73 Depth=2
	ld.d	$a1, $sp, 584
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_73
	.p2align	4, , 16
.LBB70_147:                             #   in Loop: Header=BB70_52 Depth=1
	andi	$a0, $s7, 1
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	beqz	$a0, .LBB70_189
# %bb.148:                              #   in Loop: Header=BB70_52 Depth=1
	ld.d	$s6, $sp, 672
	ld.d	$a0, $sp, 680
	beq	$s6, $a0, .LBB70_155
# %bb.149:                              #   in Loop: Header=BB70_52 Depth=1
	addi.d	$a0, $s6, 16
	st.d	$a0, $s6, 0
	ld.d	$a1, $sp, 640
	ld.d	$s7, $sp, 632
	st.d	$a1, $sp, 176
	ori	$a2, $zero, 16
	ori	$fp, $zero, 32
	bltu	$a1, $a2, .LBB70_152
# %bb.150:                              # %.noexc.i.i
                                        #   in Loop: Header=BB70_52 Depth=1
.Ltmp2728:
	addi.d	$a1, $sp, 176
	move	$a0, $s6
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2729:
# %bb.151:                              # %.noexc233
                                        #   in Loop: Header=BB70_52 Depth=1
	st.d	$a0, $s6, 0
	ld.d	$a1, $sp, 176
	st.d	$a1, $s6, 16
.LBB70_152:                             # %._crit_edge.i.i.i232
                                        #   in Loop: Header=BB70_52 Depth=1
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB70_157
# %bb.153:                              # %._crit_edge.i.i.i232
                                        #   in Loop: Header=BB70_52 Depth=1
	bnez	$a1, .LBB70_156
# %bb.154:                              #   in Loop: Header=BB70_52 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB70_157
.LBB70_155:                             #   in Loop: Header=BB70_52 Depth=1
.Ltmp2730:
	addi.d	$a0, $sp, 664
	addi.d	$a1, $sp, 632
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2731:
	ori	$fp, $zero, 32
	b	.LBB70_158
.LBB70_156:                             #   in Loop: Header=BB70_52 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB70_157:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 176
	st.d	$a0, $s6, 8
	ld.d	$a0, $sp, 672
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 672
.LBB70_158:                             #   in Loop: Header=BB70_52 Depth=1
	st.d	$zero, $sp, 584
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	vst	$vr0, $sp, 568
	st.d	$s5, $sp, 176
	st.h	$fp, $sp, 192
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 184
.Ltmp2733:
	addi.d	$a0, $sp, 568
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2734:
# %bb.159:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit244
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_161
# %bb.160:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i245
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_161:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit247
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 576
	ld.d	$a1, $sp, 584
	st.d	$s5, $sp, 176
	st.h	$fp, $sp, 192
	ori	$a2, $zero, 1
	st.d	$a2, $sp, 184
	beq	$a0, $a1, .LBB70_164
# %bb.162:                              #   in Loop: Header=BB70_52 Depth=1
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 176
	beq	$a2, $s5, .LBB70_167
# %bb.163:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i253
                                        #   in Loop: Header=BB70_52 Depth=1
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 192
	st.d	$a1, $a0, 16
	b	.LBB70_168
.LBB70_164:                             #   in Loop: Header=BB70_52 Depth=1
.Ltmp2736:
	addi.d	$a0, $sp, 568
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2737:
# %bb.165:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit257
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_169
# %bb.166:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i258
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_169
.LBB70_167:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i255
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.h	$a2, $sp, 192
	st.h	$a2, $a1, 0
.LBB70_168:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit257.thread
                                        #   in Loop: Header=BB70_52 Depth=1
	ori	$a1, $zero, 1
	st.d	$a1, $a0, 8
	st.d	$s5, $sp, 176
	st.d	$zero, $sp, 184
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 576
.LBB70_169:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit260
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 576
	ld.d	$a1, $sp, 584
	st.d	$s5, $sp, 176
	st.h	$fp, $sp, 192
	ori	$a2, $zero, 1
	st.d	$a2, $sp, 184
	beq	$a0, $a1, .LBB70_172
# %bb.170:                              #   in Loop: Header=BB70_52 Depth=1
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 176
	beq	$a2, $s5, .LBB70_178
# %bb.171:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i266
                                        #   in Loop: Header=BB70_52 Depth=1
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 192
	st.d	$a1, $a0, 16
	b	.LBB70_179
.LBB70_172:                             #   in Loop: Header=BB70_52 Depth=1
.Ltmp2739:
	addi.d	$a0, $sp, 568
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2740:
# %bb.173:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit270
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 176
	beq	$a0, $s5, .LBB70_175
# %bb.174:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i271
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_175:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit273
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB70_180
.LBB70_176:                             #   in Loop: Header=BB70_52 Depth=1
.Ltmp2742:
	addi.d	$a1, $sp, 568
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2743:
# %bb.177:                              # %.noexc275
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 744
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 744
	b	.LBB70_181
.LBB70_178:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i268
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.h	$a2, $sp, 192
	st.h	$a2, $a1, 0
.LBB70_179:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit270.thread
                                        #   in Loop: Header=BB70_52 Depth=1
	ori	$a1, $zero, 1
	st.d	$a1, $a0, 8
	st.d	$s5, $sp, 176
	st.d	$zero, $sp, 184
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 576
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	bne	$a0, $a1, .LBB70_176
.LBB70_180:                             #   in Loop: Header=BB70_52 Depth=1
.Ltmp2744:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 568
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2745:
.LBB70_181:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit277
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 568
	ld.d	$fp, $sp, 576
	beq	$a0, $fp, .LBB70_187
# %bb.182:                              # %.lr.ph.i.i279.preheader
                                        #   in Loop: Header=BB70_52 Depth=1
	addi.d	$s0, $a0, 16
	b	.LBB70_184
	.p2align	4, , 16
.LBB70_183:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i282
                                        #   in Loop: Header=BB70_184 Depth=2
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB70_186
.LBB70_184:                             # %.lr.ph.i.i279
                                        #   Parent Loop BB70_52 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB70_183
# %bb.185:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i281
                                        #   in Loop: Header=BB70_184 Depth=2
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_183
.LBB70_186:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i284
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 568
.LBB70_187:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i286
                                        #   in Loop: Header=BB70_52 Depth=1
	beqz	$a0, .LBB70_189
# %bb.188:                              #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a1, $sp, 584
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB70_189:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB70_191
# %bb.190:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i299
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_191:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit301
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	beq	$a0, $a1, .LBB70_51
# %bb.192:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i302
                                        #   in Loop: Header=BB70_52 Depth=1
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_51
.LBB70_193:
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB70_293
# %bb.194:
	ld.d	$a0, $s0, 520
	ld.w	$a1, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a1, $a0, .LBB70_293
# %bb.195:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a0, $a0, $a1
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB70_331
# %bb.196:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB70_198
# %bb.197:
	ld.bu	$a0, $s1, 67
	b	.LBB70_200
.LBB70_198:
.Ltmp2617:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2618:
# %bb.199:                              # %.noexc433
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp2619:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp2620:
.LBB70_200:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp2621:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2622:
# %bb.201:                              # %.noexc435
.Ltmp2623:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2624:
# %bb.202:                              # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	bltz	$a0, .LBB70_207
# %bb.203:
.Ltmp2625:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.119)
	addi.d	$a1, $a0, %pc_lo12(.L.str.119)
	ori	$a2, $zero, 66
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2626:
# %bb.204:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit320
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB70_331
# %bb.205:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i460
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB70_211
# %bb.206:
	ld.bu	$a0, $s0, 67
	b	.LBB70_213
.LBB70_207:
.Ltmp2639:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.117)
	addi.d	$a1, $a0, %pc_lo12(.L.str.117)
	ori	$a2, $zero, 70
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2640:
# %bb.208:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB70_331
# %bb.209:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i438
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB70_219
# %bb.210:
	ld.bu	$a0, $s0, 67
	b	.LBB70_221
.LBB70_211:
.Ltmp2627:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2628:
# %bb.212:                              # %.noexc465
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2629:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2630:
.LBB70_213:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i462
.Ltmp2631:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2632:
# %bb.214:                              # %.noexc467
.Ltmp2633:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2634:
# %bb.215:                              # %_ZNSolsEPFRSoS_E.exit322
.Ltmp2635:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.120)
	addi.d	$a1, $a0, %pc_lo12(.L.str.120)
	ori	$a2, $zero, 66
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2636:
# %bb.216:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit324
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB70_331
# %bb.217:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i471
	ld.bu	$a0, $s0, 56
	bnez	$a0, .LBB70_226
# %bb.218:
.Ltmp2637:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2638:
	b	.LBB70_228
.LBB70_219:
.Ltmp2641:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2642:
# %bb.220:                              # %.noexc443
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2643:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2644:
.LBB70_221:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i440
.Ltmp2645:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2646:
# %bb.222:                              # %.noexc445
.Ltmp2647:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2648:
# %bb.223:                              # %_ZNSolsEPFRSoS_E.exit314
.Ltmp2649:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.118)
	addi.d	$a1, $a0, %pc_lo12(.L.str.118)
	ori	$a2, $zero, 70
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2650:
# %bb.224:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit316
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB70_331
# %bb.225:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i449
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB70_227
.LBB70_226:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i473.invoke.sink.split
	ld.bu	$a0, $s0, 67
	b	.LBB70_229
.LBB70_227:
.Ltmp2651:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2652:
.LBB70_228:                             # %.noexc476.invoke
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2653:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2654:
.LBB70_229:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i473.invoke
.Ltmp2655:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2656:
# %bb.230:                              # %.noexc478.invoke
.Ltmp2657:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2658:
# %bb.231:                              # %_ZNSolsEPFRSoS_E.exit318
.Ltmp2659:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.121)
	addi.d	$a1, $a0, %pc_lo12(.L.str.121)
	ori	$a2, $zero, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2660:
# %bb.232:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit328
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB70_331
# %bb.233:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i482
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB70_235
# %bb.234:
	ld.bu	$a0, $s0, 67
	b	.LBB70_237
.LBB70_235:
.Ltmp2661:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2662:
# %bb.236:                              # %.noexc487
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2663:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2664:
.LBB70_237:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i484
.Ltmp2665:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2666:
# %bb.238:                              # %.noexc489
.Ltmp2667:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2668:
# %bb.239:                              # %_ZNSolsEPFRSoS_E.exit330
.Ltmp2669:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.122)
	addi.d	$a1, $a0, %pc_lo12(.L.str.122)
	ori	$a2, $zero, 25
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2670:
# %bb.240:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit332
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB70_331
# %bb.241:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i493
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB70_243
# %bb.242:
	ld.bu	$a0, $s0, 67
	b	.LBB70_245
.LBB70_243:
.Ltmp2671:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2672:
# %bb.244:                              # %.noexc498
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2673:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2674:
.LBB70_245:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i495
.Ltmp2675:
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2676:
# %bb.246:                              # %.noexc500
.Ltmp2677:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2678:
# %bb.247:                              # %_ZNSolsEPFRSoS_E.exit334
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB70_331
# %bb.248:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i504
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB70_250
# %bb.249:
	ld.bu	$a0, $s1, 67
	b	.LBB70_252
.LBB70_250:
.Ltmp2679:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2680:
# %bb.251:                              # %.noexc509
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp2681:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp2682:
.LBB70_252:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i506
.Ltmp2683:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2684:
# %bb.253:                              # %.noexc511
.Ltmp2685:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2686:
# %bb.254:                              # %_ZNSolsEPFRSoS_E.exit336
.Ltmp2687:
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2688:
# %bb.255:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.b	$a0, $a0, %pc_lo12(_ZN2PPL10index_baseE)
	ori	$a1, $zero, 1
	andn	$a1, $a1, $a0
.Ltmp2690:
	addi.d	$a0, $sp, 568
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp2691:
# %bb.256:
	ld.d	$fp, $sp, 744
	ld.d	$s0, $sp, 736
	sub.d	$s1, $fp, $s0
	st.d	$zero, $sp, 128
	vld	$vr0, $sp, 112                  # 16-byte Folded Reload
	vst	$vr0, $sp, 136
	beq	$fp, $s0, .LBB70_261
# %bb.257:                              # %_ZNSt15__new_allocatorISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEE8allocateEmPKv.exit.i.i.i.i
.Ltmp2692:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2693:
# %bb.258:                              # %.noexc339
	st.d	$a0, $sp, 128
	st.d	$a0, $sp, 136
	add.d	$a1, $a0, $s1
	st.d	$a1, $sp, 144
	st.d	$a0, $sp, 600
	st.d	$a0, $sp, 632
	addi.d	$a1, $sp, 600
	st.d	$a1, $sp, 640
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	.p2align	4, , 16
.LBB70_259:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp2695:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2696:
# %bb.260:                              # %_ZSt10_ConstructISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEJRKS8_EEvPT_DpOT0_.exit.i.i.i.i
                                        #   in Loop: Header=BB70_259 Depth=1
	ld.d	$a0, $sp, 600
	addi.d	$s0, $s0, 24
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 600
	bne	$s0, $fp, .LBB70_259
	b	.LBB70_262
.LBB70_261:                             # %.noexc339.thread
	move	$a0, $zero
	vst	$vr0, $sp, 128
	st.d	$s1, $sp, 144
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
.LBB70_262:                             # %.loopexit
	st.d	$a0, $sp, 136
.Ltmp2698:
	addi.d	$a0, $sp, 568
	addi.d	$a1, $sp, 128
	ori	$a3, $zero, 4
	ori	$a4, $zero, 3
	ori	$a5, $zero, 80
	addi.d	$a6, $sp, 176
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils13print_stringsESt6vectorIS1_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESaIS9_EEiiiiRNS2_18basic_stringstreamIcS5_S6_EE)
	jirl	$ra, $ra, 0
.Ltmp2699:
# %bb.263:
	ld.d	$fp, $sp, 128
	ld.d	$s0, $sp, 136
	bne	$fp, $s0, .LBB70_270
# %bb.264:                              # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit.i
	beqz	$fp, .LBB70_266
.LBB70_265:
	ld.d	$a0, $sp, 144
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_266:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev.exit
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 648
	st.d	$a1, $sp, 632
	st.d	$zero, $sp, 640
	st.b	$zero, $sp, 648
	beqz	$a0, .LBB70_279
# %bb.267:                              # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev.exit
	ld.d	$a1, $sp, 224
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB70_279
# %bb.268:
	ld.d	$a3, $sp, 232
	sub.d	$a4, $a0, $a3
.Ltmp2701:
	addi.d	$a0, $sp, 632
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2702:
	b	.LBB70_280
	.p2align	4, , 16
.LBB70_269:                             # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i.i
                                        #   in Loop: Header=BB70_270 Depth=1
	addi.d	$fp, $fp, 24
	beq	$fp, $s0, .LBB70_278
.LBB70_270:                             # %.lr.ph.i.i343
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB70_273 Depth 2
	ld.d	$a0, $fp, 0
	ld.d	$s1, $fp, 8
	beq	$a0, $s1, .LBB70_276
# %bb.271:                              # %.lr.ph.i.i.i.i.i.preheader
                                        #   in Loop: Header=BB70_270 Depth=1
	addi.d	$s2, $a0, 16
	b	.LBB70_273
	.p2align	4, , 16
.LBB70_272:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB70_273 Depth=2
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB70_275
.LBB70_273:                             # %.lr.ph.i.i.i.i.i
                                        #   Parent Loop BB70_270 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB70_272
# %bb.274:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB70_273 Depth=2
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_272
	.p2align	4, , 16
.LBB70_275:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i
                                        #   in Loop: Header=BB70_270 Depth=1
	ld.d	$a0, $fp, 0
.LBB70_276:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i
                                        #   in Loop: Header=BB70_270 Depth=1
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	beqz	$a0, .LBB70_269
# %bb.277:                              #   in Loop: Header=BB70_270 Depth=1
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_269
.LBB70_278:                             # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split.i
	ld.d	$fp, $sp, 128
	bnez	$fp, .LBB70_265
	b	.LBB70_266
.LBB70_279:
	addi.d	$a1, $sp, 272
.Ltmp2703:
	addi.d	$a0, $sp, 632
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2704:
.LBB70_280:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 632
	ld.d	$a2, $sp, 640
.Ltmp2706:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2707:
# %bb.281:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB70_333
# %bb.282:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i515
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB70_284
# %bb.283:
	ld.bu	$a0, $s0, 67
	b	.LBB70_286
.LBB70_284:
.Ltmp2708:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2709:
# %bb.285:                              # %.noexc520
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2710:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2711:
.LBB70_286:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i517
.Ltmp2712:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2713:
# %bb.287:                              # %.noexc522
.Ltmp2714:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2715:
# %bb.288:                              # %_ZNSolsEPFRSoS_E.exit354
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB70_290
# %bb.289:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i355
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_290:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit357
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	st.d	$a0, $sp, 176
	ld.d	$a0, $a0, -24
	addi.d	$fp, $sp, 176
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	stx.d	$a1, $a0, $fp
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $sp, 272
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	st.d	$a2, $sp, 192
	addi.d	$a1, $a1, 16
	st.d	$a1, $sp, 200
	addi.d	$a1, $sp, 288
	beq	$a0, $a1, .LBB70_292
# %bb.291:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i358
	ld.d	$a1, $sp, 288
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_292:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit360
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 200
	addi.d	$a0, $sp, 256
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	st.d	$s4, $sp, 176
	ld.d	$a0, $s4, -24
	stx.d	$s1, $a0, $fp
	st.d	$zero, $sp, 184
	addi.d	$a0, $sp, 304
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
.LBB70_293:
	ld.d	$a0, $sp, 664
	ld.d	$fp, $sp, 672
	beq	$a0, $fp, .LBB70_299
# %bb.294:                              # %.lr.ph.i.i365.preheader
	addi.d	$s0, $a0, 16
	b	.LBB70_296
	.p2align	4, , 16
.LBB70_295:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i368
                                        #   in Loop: Header=BB70_296 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB70_298
.LBB70_296:                             # %.lr.ph.i.i365
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB70_295
# %bb.297:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i367
                                        #   in Loop: Header=BB70_296 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_295
.LBB70_298:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i370
	ld.d	$a0, $sp, 664
.LBB70_299:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i372
	beqz	$a0, .LBB70_301
# %bb.300:
	ld.d	$a1, $sp, 680
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_301:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit375
	ld.d	$a0, $sp, 688
	ld.d	$fp, $sp, 696
	beq	$a0, $fp, .LBB70_307
# %bb.302:                              # %.lr.ph.i.i377.preheader
	addi.d	$s0, $a0, 16
	b	.LBB70_304
	.p2align	4, , 16
.LBB70_303:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i380
                                        #   in Loop: Header=BB70_304 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB70_306
.LBB70_304:                             # %.lr.ph.i.i377
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB70_303
# %bb.305:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i379
                                        #   in Loop: Header=BB70_304 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_303
.LBB70_306:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i382
	ld.d	$a0, $sp, 688
.LBB70_307:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i384
	beqz	$a0, .LBB70_309
# %bb.308:
	ld.d	$a1, $sp, 704
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_309:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit387
	ld.d	$a0, $sp, 712
	ld.d	$fp, $sp, 720
	beq	$a0, $fp, .LBB70_315
# %bb.310:                              # %.lr.ph.i.i389.preheader
	addi.d	$s0, $a0, 16
	b	.LBB70_312
	.p2align	4, , 16
.LBB70_311:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i392
                                        #   in Loop: Header=BB70_312 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB70_314
.LBB70_312:                             # %.lr.ph.i.i389
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB70_311
# %bb.313:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i391
                                        #   in Loop: Header=BB70_312 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_311
.LBB70_314:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i394
	ld.d	$a0, $sp, 712
.LBB70_315:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i396
	beqz	$a0, .LBB70_317
# %bb.316:
	ld.d	$a1, $sp, 728
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_317:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit399
	ld.d	$fp, $sp, 736
	ld.d	$s0, $sp, 744
	bne	$fp, $s0, .LBB70_322
# %bb.318:                              # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit.i417
	beqz	$fp, .LBB70_320
.LBB70_319:
	ld.d	$a0, $sp, 752
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_320:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev.exit421
	ld.d	$s8, $sp, 792                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 800                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 808                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 816                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 824                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 832                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 840                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 848                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 856                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 864                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 872                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 880
	ret
	.p2align	4, , 16
.LBB70_321:                             # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i.i413
                                        #   in Loop: Header=BB70_322 Depth=1
	addi.d	$fp, $fp, 24
	beq	$fp, $s0, .LBB70_330
.LBB70_322:                             # %.lr.ph.i.i401
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB70_325 Depth 2
	ld.d	$a0, $fp, 0
	ld.d	$s1, $fp, 8
	beq	$a0, $s1, .LBB70_328
# %bb.323:                              # %.lr.ph.i.i.i.i.i404.preheader
                                        #   in Loop: Header=BB70_322 Depth=1
	addi.d	$s2, $a0, 16
	b	.LBB70_325
	.p2align	4, , 16
.LBB70_324:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i407
                                        #   in Loop: Header=BB70_325 Depth=2
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB70_327
.LBB70_325:                             # %.lr.ph.i.i.i.i.i404
                                        #   Parent Loop BB70_322 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB70_324
# %bb.326:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i406
                                        #   in Loop: Header=BB70_325 Depth=2
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_324
	.p2align	4, , 16
.LBB70_327:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i409
                                        #   in Loop: Header=BB70_322 Depth=1
	ld.d	$a0, $fp, 0
.LBB70_328:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i411
                                        #   in Loop: Header=BB70_322 Depth=1
	beqz	$a0, .LBB70_321
# %bb.329:                              #   in Loop: Header=BB70_322 Depth=1
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_321
.LBB70_330:                             # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split.i415
	ld.d	$fp, $sp, 736
	bnez	$fp, .LBB70_319
	b	.LBB70_320
.LBB70_331:                             # %.invoke
.Ltmp2719:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2720:
# %bb.332:                              # %.cont
.LBB70_333:
.Ltmp2716:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2717:
# %bb.334:                              # %.noexc519
.LBB70_335:
.Ltmp2705:
	b	.LBB70_352
.LBB70_336:
.Ltmp2700:
	move	$s1, $a0
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB70_359
.LBB70_337:
.Ltmp2689:
	b	.LBB70_368
.LBB70_338:
.Ltmp2611:
	b	.LBB70_345
.LBB70_339:
.Ltmp2608:
	b	.LBB70_345
.LBB70_340:
.Ltmp2597:
	b	.LBB70_349
.LBB70_341:
.Ltmp2594:
	b	.LBB70_349
.LBB70_342:
.Ltmp2694:
	move	$s1, $a0
	b	.LBB70_359
.LBB70_343:
.Ltmp2616:
	move	$s1, $a0
	b	.LBB70_388
.LBB70_344:
.Ltmp2605:
.LBB70_345:
	ld.d	$a2, $sp, 176
	move	$s1, $a0
	beq	$a2, $s5, .LBB70_388
# %bb.346:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i177
	ld.d	$a0, $sp, 192
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_388
.LBB70_347:
.Ltmp2602:
	move	$s1, $a0
	b	.LBB70_389
.LBB70_348:
.Ltmp2591:
.LBB70_349:
	ld.d	$a2, $sp, 176
	move	$s1, $a0
	beq	$a2, $s5, .LBB70_389
# %bb.350:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i168
	ld.d	$a0, $sp, 192
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB70_389
.LBB70_351:
.Ltmp2718:
.LBB70_352:
	ld.d	$a2, $sp, 632
	move	$s1, $a0
	addi.d	$a0, $sp, 648
	beq	$a2, $a0, .LBB70_359
# %bb.353:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i361
	ld.d	$a0, $sp, 648
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB70_358
.LBB70_354:
.Ltmp2741:
	b	.LBB70_364
.LBB70_355:
.Ltmp2738:
	b	.LBB70_364
.LBB70_356:                             # %.body.i337
.Ltmp2697:
	move	$s1, $a0
	addi.d	$a0, $sp, 632
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 128
	beqz	$a0, .LBB70_359
# %bb.357:
	ld.d	$a1, $sp, 144
	sub.d	$a1, $a1, $a0
.LBB70_358:                             # %.body340
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_359:                             # %.body340
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	b	.LBB70_387
.LBB70_360:
.Ltmp2732:
	b	.LBB70_371
.LBB70_361:
.Ltmp2721:
	b	.LBB70_368
.LBB70_362:
.Ltmp2746:
	move	$s1, $a0
	b	.LBB70_366
.LBB70_363:
.Ltmp2735:
.LBB70_364:
	ld.d	$a2, $sp, 176
	move	$s1, $a0
	beq	$a2, $s5, .LBB70_366
# %bb.365:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i290
	ld.d	$a0, $sp, 192
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_366:
	addi.d	$a0, $sp, 568
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB70_385
	b	.LBB70_391
.LBB70_367:
.Ltmp2724:
.LBB70_368:
	move	$s1, $a0
	b	.LBB70_387
.LBB70_369:
.Ltmp2727:
	move	$s1, $a0
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	bne	$a0, $a1, .LBB70_386
	b	.LBB70_387
.LBB70_370:
.Ltmp2749:
.LBB70_371:
	move	$s1, $a0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB70_385
	b	.LBB70_391
.LBB70_372:
.Ltmp2765:
	b	.LBB70_379
.LBB70_373:
.Ltmp2752:
	move	$s1, $a0
	b	.LBB70_377
.LBB70_374:
.Ltmp2758:
	move	$fp, $s1
	move	$s1, $a0
	addi.d	$a0, $sp, 200
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 32                    # 8-byte Folded Reload
	st.d	$s8, $sp, 176
	ld.d	$a0, $s8, -24
	addi.d	$a1, $sp, 176
	stx.d	$fp, $a0, $a1
	b	.LBB70_376
.LBB70_375:
.Ltmp2755:
	st.d	$s4, $sp, 176
	ld.d	$a1, $s4, -24
	move	$a2, $s1
	move	$s1, $a0
	addi.d	$a0, $sp, 176
	stx.d	$a2, $a1, $a0
.LBB70_376:                             # %.body.i
	st.d	$zero, $sp, 184
.LBB70_377:                             # %.body.i
	addi.d	$a0, $sp, 304
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB70_383
.LBB70_378:
.Ltmp2775:
.LBB70_379:                             # %.body429
	move	$s1, $a0
	b	.LBB70_382
.LBB70_380:                             # %.body.i426
.Ltmp2772:
	move	$s1, $a0
	addi.d	$a0, $sp, 760
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB70_382
# %bb.381:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_382:                             # %.body429
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB70_383:                             # %.body
	ld.d	$a0, $sp, 568
	addi.d	$a1, $sp, 584
	bne	$a0, $a1, .LBB70_390
# %bb.384:
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	bne	$a0, $a1, .LBB70_391
.LBB70_385:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit307
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB70_387
.LBB70_386:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i308
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_387:
	addi.d	$a0, $sp, 664
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB70_388:
	addi.d	$a0, $sp, 688
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB70_389:
	addi.d	$a0, $sp, 712
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 736
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB70_390:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i225
	ld.d	$a1, $sp, 584
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB70_385
.LBB70_391:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i305
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	bne	$a0, $a1, .LBB70_386
	b	.LBB70_387
.Lfunc_end70:
	.size	_ZN2PP11PowerParser16check_dup_scalarEiRb, .Lfunc_end70-_ZN2PP11PowerParser16check_dup_scalarEiRb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table70:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Ltmp2589-.Lfunc_begin43       # >> Call Site 1 <<
	.uleb128 .Ltmp2590-.Ltmp2589            #   Call between .Ltmp2589 and .Ltmp2590
	.uleb128 .Ltmp2591-.Lfunc_begin43       #     jumps to .Ltmp2591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2590-.Lfunc_begin43       # >> Call Site 2 <<
	.uleb128 .Ltmp2592-.Ltmp2590            #   Call between .Ltmp2590 and .Ltmp2592
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2592-.Lfunc_begin43       # >> Call Site 3 <<
	.uleb128 .Ltmp2593-.Ltmp2592            #   Call between .Ltmp2592 and .Ltmp2593
	.uleb128 .Ltmp2594-.Lfunc_begin43       #     jumps to .Ltmp2594
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2593-.Lfunc_begin43       # >> Call Site 4 <<
	.uleb128 .Ltmp2595-.Ltmp2593            #   Call between .Ltmp2593 and .Ltmp2595
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2595-.Lfunc_begin43       # >> Call Site 5 <<
	.uleb128 .Ltmp2596-.Ltmp2595            #   Call between .Ltmp2595 and .Ltmp2596
	.uleb128 .Ltmp2597-.Lfunc_begin43       #     jumps to .Ltmp2597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2596-.Lfunc_begin43       # >> Call Site 6 <<
	.uleb128 .Ltmp2598-.Ltmp2596            #   Call between .Ltmp2596 and .Ltmp2598
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2598-.Lfunc_begin43       # >> Call Site 7 <<
	.uleb128 .Ltmp2601-.Ltmp2598            #   Call between .Ltmp2598 and .Ltmp2601
	.uleb128 .Ltmp2602-.Lfunc_begin43       #     jumps to .Ltmp2602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2603-.Lfunc_begin43       # >> Call Site 8 <<
	.uleb128 .Ltmp2604-.Ltmp2603            #   Call between .Ltmp2603 and .Ltmp2604
	.uleb128 .Ltmp2605-.Lfunc_begin43       #     jumps to .Ltmp2605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2604-.Lfunc_begin43       # >> Call Site 9 <<
	.uleb128 .Ltmp2606-.Ltmp2604            #   Call between .Ltmp2604 and .Ltmp2606
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2606-.Lfunc_begin43       # >> Call Site 10 <<
	.uleb128 .Ltmp2607-.Ltmp2606            #   Call between .Ltmp2606 and .Ltmp2607
	.uleb128 .Ltmp2608-.Lfunc_begin43       #     jumps to .Ltmp2608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2607-.Lfunc_begin43       # >> Call Site 11 <<
	.uleb128 .Ltmp2609-.Ltmp2607            #   Call between .Ltmp2607 and .Ltmp2609
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2609-.Lfunc_begin43       # >> Call Site 12 <<
	.uleb128 .Ltmp2610-.Ltmp2609            #   Call between .Ltmp2609 and .Ltmp2610
	.uleb128 .Ltmp2611-.Lfunc_begin43       #     jumps to .Ltmp2611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2610-.Lfunc_begin43       # >> Call Site 13 <<
	.uleb128 .Ltmp2612-.Ltmp2610            #   Call between .Ltmp2610 and .Ltmp2612
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2612-.Lfunc_begin43       # >> Call Site 14 <<
	.uleb128 .Ltmp2615-.Ltmp2612            #   Call between .Ltmp2612 and .Ltmp2615
	.uleb128 .Ltmp2616-.Lfunc_begin43       #     jumps to .Ltmp2616
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2722-.Lfunc_begin43       # >> Call Site 15 <<
	.uleb128 .Ltmp2723-.Ltmp2722            #   Call between .Ltmp2722 and .Ltmp2723
	.uleb128 .Ltmp2724-.Lfunc_begin43       #     jumps to .Ltmp2724
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2725-.Lfunc_begin43       # >> Call Site 16 <<
	.uleb128 .Ltmp2726-.Ltmp2725            #   Call between .Ltmp2725 and .Ltmp2726
	.uleb128 .Ltmp2727-.Lfunc_begin43       #     jumps to .Ltmp2727
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2726-.Lfunc_begin43       # >> Call Site 17 <<
	.uleb128 .Ltmp2747-.Ltmp2726            #   Call between .Ltmp2726 and .Ltmp2747
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2747-.Lfunc_begin43       # >> Call Site 18 <<
	.uleb128 .Ltmp2748-.Ltmp2747            #   Call between .Ltmp2747 and .Ltmp2748
	.uleb128 .Ltmp2749-.Lfunc_begin43       #     jumps to .Ltmp2749
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2748-.Lfunc_begin43       # >> Call Site 19 <<
	.uleb128 .Ltmp2750-.Ltmp2748            #   Call between .Ltmp2748 and .Ltmp2750
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2750-.Lfunc_begin43       # >> Call Site 20 <<
	.uleb128 .Ltmp2751-.Ltmp2750            #   Call between .Ltmp2750 and .Ltmp2751
	.uleb128 .Ltmp2752-.Lfunc_begin43       #     jumps to .Ltmp2752
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2753-.Lfunc_begin43       # >> Call Site 21 <<
	.uleb128 .Ltmp2754-.Ltmp2753            #   Call between .Ltmp2753 and .Ltmp2754
	.uleb128 .Ltmp2755-.Lfunc_begin43       #     jumps to .Ltmp2755
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2754-.Lfunc_begin43       # >> Call Site 22 <<
	.uleb128 .Ltmp2756-.Ltmp2754            #   Call between .Ltmp2754 and .Ltmp2756
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2756-.Lfunc_begin43       # >> Call Site 23 <<
	.uleb128 .Ltmp2757-.Ltmp2756            #   Call between .Ltmp2756 and .Ltmp2757
	.uleb128 .Ltmp2758-.Lfunc_begin43       #     jumps to .Ltmp2758
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2759-.Lfunc_begin43       # >> Call Site 24 <<
	.uleb128 .Ltmp2764-.Ltmp2759            #   Call between .Ltmp2759 and .Ltmp2764
	.uleb128 .Ltmp2765-.Lfunc_begin43       #     jumps to .Ltmp2765
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2764-.Lfunc_begin43       # >> Call Site 25 <<
	.uleb128 .Ltmp2766-.Ltmp2764            #   Call between .Ltmp2764 and .Ltmp2766
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2766-.Lfunc_begin43       # >> Call Site 26 <<
	.uleb128 .Ltmp2774-.Ltmp2766            #   Call between .Ltmp2766 and .Ltmp2774
	.uleb128 .Ltmp2775-.Lfunc_begin43       #     jumps to .Ltmp2775
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2774-.Lfunc_begin43       # >> Call Site 27 <<
	.uleb128 .Ltmp2770-.Ltmp2774            #   Call between .Ltmp2774 and .Ltmp2770
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2770-.Lfunc_begin43       # >> Call Site 28 <<
	.uleb128 .Ltmp2771-.Ltmp2770            #   Call between .Ltmp2770 and .Ltmp2771
	.uleb128 .Ltmp2772-.Lfunc_begin43       #     jumps to .Ltmp2772
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2771-.Lfunc_begin43       # >> Call Site 29 <<
	.uleb128 .Ltmp2728-.Ltmp2771            #   Call between .Ltmp2771 and .Ltmp2728
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2728-.Lfunc_begin43       # >> Call Site 30 <<
	.uleb128 .Ltmp2731-.Ltmp2728            #   Call between .Ltmp2728 and .Ltmp2731
	.uleb128 .Ltmp2732-.Lfunc_begin43       #     jumps to .Ltmp2732
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2731-.Lfunc_begin43       # >> Call Site 31 <<
	.uleb128 .Ltmp2733-.Ltmp2731            #   Call between .Ltmp2731 and .Ltmp2733
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2733-.Lfunc_begin43       # >> Call Site 32 <<
	.uleb128 .Ltmp2734-.Ltmp2733            #   Call between .Ltmp2733 and .Ltmp2734
	.uleb128 .Ltmp2735-.Lfunc_begin43       #     jumps to .Ltmp2735
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2734-.Lfunc_begin43       # >> Call Site 33 <<
	.uleb128 .Ltmp2736-.Ltmp2734            #   Call between .Ltmp2734 and .Ltmp2736
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2736-.Lfunc_begin43       # >> Call Site 34 <<
	.uleb128 .Ltmp2737-.Ltmp2736            #   Call between .Ltmp2736 and .Ltmp2737
	.uleb128 .Ltmp2738-.Lfunc_begin43       #     jumps to .Ltmp2738
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2737-.Lfunc_begin43       # >> Call Site 35 <<
	.uleb128 .Ltmp2739-.Ltmp2737            #   Call between .Ltmp2737 and .Ltmp2739
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2739-.Lfunc_begin43       # >> Call Site 36 <<
	.uleb128 .Ltmp2740-.Ltmp2739            #   Call between .Ltmp2739 and .Ltmp2740
	.uleb128 .Ltmp2741-.Lfunc_begin43       #     jumps to .Ltmp2741
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2740-.Lfunc_begin43       # >> Call Site 37 <<
	.uleb128 .Ltmp2742-.Ltmp2740            #   Call between .Ltmp2740 and .Ltmp2742
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2742-.Lfunc_begin43       # >> Call Site 38 <<
	.uleb128 .Ltmp2745-.Ltmp2742            #   Call between .Ltmp2742 and .Ltmp2745
	.uleb128 .Ltmp2746-.Lfunc_begin43       #     jumps to .Ltmp2746
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2745-.Lfunc_begin43       # >> Call Site 39 <<
	.uleb128 .Ltmp2617-.Ltmp2745            #   Call between .Ltmp2745 and .Ltmp2617
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2617-.Lfunc_begin43       # >> Call Site 40 <<
	.uleb128 .Ltmp2686-.Ltmp2617            #   Call between .Ltmp2617 and .Ltmp2686
	.uleb128 .Ltmp2721-.Lfunc_begin43       #     jumps to .Ltmp2721
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2687-.Lfunc_begin43       # >> Call Site 41 <<
	.uleb128 .Ltmp2688-.Ltmp2687            #   Call between .Ltmp2687 and .Ltmp2688
	.uleb128 .Ltmp2689-.Lfunc_begin43       #     jumps to .Ltmp2689
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2690-.Lfunc_begin43       # >> Call Site 42 <<
	.uleb128 .Ltmp2693-.Ltmp2690            #   Call between .Ltmp2690 and .Ltmp2693
	.uleb128 .Ltmp2694-.Lfunc_begin43       #     jumps to .Ltmp2694
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2695-.Lfunc_begin43       # >> Call Site 43 <<
	.uleb128 .Ltmp2696-.Ltmp2695            #   Call between .Ltmp2695 and .Ltmp2696
	.uleb128 .Ltmp2697-.Lfunc_begin43       #     jumps to .Ltmp2697
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2698-.Lfunc_begin43       # >> Call Site 44 <<
	.uleb128 .Ltmp2699-.Ltmp2698            #   Call between .Ltmp2698 and .Ltmp2699
	.uleb128 .Ltmp2700-.Lfunc_begin43       #     jumps to .Ltmp2700
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2699-.Lfunc_begin43       # >> Call Site 45 <<
	.uleb128 .Ltmp2701-.Ltmp2699            #   Call between .Ltmp2699 and .Ltmp2701
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2701-.Lfunc_begin43       # >> Call Site 46 <<
	.uleb128 .Ltmp2702-.Ltmp2701            #   Call between .Ltmp2701 and .Ltmp2702
	.uleb128 .Ltmp2705-.Lfunc_begin43       #     jumps to .Ltmp2705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2702-.Lfunc_begin43       # >> Call Site 47 <<
	.uleb128 .Ltmp2703-.Ltmp2702            #   Call between .Ltmp2702 and .Ltmp2703
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2703-.Lfunc_begin43       # >> Call Site 48 <<
	.uleb128 .Ltmp2704-.Ltmp2703            #   Call between .Ltmp2703 and .Ltmp2704
	.uleb128 .Ltmp2705-.Lfunc_begin43       #     jumps to .Ltmp2705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2706-.Lfunc_begin43       # >> Call Site 49 <<
	.uleb128 .Ltmp2715-.Ltmp2706            #   Call between .Ltmp2706 and .Ltmp2715
	.uleb128 .Ltmp2718-.Lfunc_begin43       #     jumps to .Ltmp2718
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2715-.Lfunc_begin43       # >> Call Site 50 <<
	.uleb128 .Ltmp2719-.Ltmp2715            #   Call between .Ltmp2715 and .Ltmp2719
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2719-.Lfunc_begin43       # >> Call Site 51 <<
	.uleb128 .Ltmp2720-.Ltmp2719            #   Call between .Ltmp2719 and .Ltmp2720
	.uleb128 .Ltmp2721-.Lfunc_begin43       #     jumps to .Ltmp2721
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2716-.Lfunc_begin43       # >> Call Site 52 <<
	.uleb128 .Ltmp2717-.Ltmp2716            #   Call between .Ltmp2716 and .Ltmp2717
	.uleb128 .Ltmp2718-.Lfunc_begin43       #     jumps to .Ltmp2718
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2717-.Lfunc_begin43       # >> Call Site 53 <<
	.uleb128 .Lfunc_end70-.Ltmp2717         #   Call between .Ltmp2717 and .Lfunc_end70
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8wt_resetEv  # -- Begin function _ZN2PP11PowerParser8wt_resetEv
	.p2align	5
	.type	_ZN2PP11PowerParser8wt_resetEv,@function
_ZN2PP11PowerParser8wt_resetEv:         # @_ZN2PP11PowerParser8wt_resetEv
# %bb.0:
	addi.d	$a1, $a0, 904
	st.d	$a1, $a0, 984
	ret
.Lfunc_end71:
	.size	_ZN2PP11PowerParser8wt_resetEv, .Lfunc_end71-_ZN2PP11PowerParser8wt_resetEv
                                        # -- End function
	.globl	_ZN2PP11PowerParser17remove_dup_scalarEi # -- Begin function _ZN2PP11PowerParser17remove_dup_scalarEi
	.p2align	5
	.type	_ZN2PP11PowerParser17remove_dup_scalarEi,@function
_ZN2PP11PowerParser17remove_dup_scalarEi: # @_ZN2PP11PowerParser17remove_dup_scalarEi
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	st.d	$s5, $sp, 192                   # 8-byte Folded Spill
	st.d	$s6, $sp, 184                   # 8-byte Folded Spill
	st.d	$s7, $sp, 176                   # 8-byte Folded Spill
	st.d	$s8, $sp, 168                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	bltz	$a1, .LBB72_3
# %bb.1:
	ldptr.d	$a0, $fp, 2312
	ldptr.d	$a2, $fp, 2320
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 3
	lu12i.w	$a3, -118150
	ori	$a3, $a3, 2423
	lu32i.d	$a3, -177225
	lu52i.d	$a3, $a3, 403
	mul.d	$a2, $a2, $a3
	add.d	$a2, $a2, $a1
	beqz	$a2, .LBB72_4
# %bb.2:
	ldptr.d	$a0, $fp, 2336
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB72_5
.LBB72_3:
	addi.d	$a0, $fp, 904
	b	.LBB72_6
.LBB72_4:
	ori	$a2, $zero, 568
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB72_5:                               # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
	addi.d	$a0, $a0, 480
.LBB72_6:
	st.d	$a0, $fp, 984
	ld.d	$a1, $a0, 72
	ld.d	$a2, $a0, 40
	sub.d	$a2, $a1, $a2
	ld.d	$a3, $a0, 48
	ld.d	$a4, $a0, 56
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a1, $a2, $a1
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 4
	lu12i.w	$a3, 427197
	ori	$a3, $a3, 2579
	lu32i.d	$a3, -155345
	ld.d	$a4, $a0, 32
	ld.d	$a0, $a0, 16
	lu52i.d	$s3, $a3, -1973
	mul.d	$a2, $a2, $s3
	add.d	$a1, $a1, $a2
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s3
	add.d	$s2, $a1, $a0
	addi.w	$a0, $s2, 0
	blez	$a0, .LBB72_55
# %bb.7:                                # %.lr.ph61
	addi.d	$s4, $sp, 56
	ori	$s8, $zero, 4
	ori	$s1, $zero, 16
	b	.LBB72_9
	.p2align	4, , 16
.LBB72_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
                                        #   in Loop: Header=BB72_9 Depth=1
	blez	$s2, .LBB72_55
.LBB72_9:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB72_23 Depth 2
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	addi.w	$s5, $s2, -1
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $a2, $s5
	beqz	$a2, .LBB72_11
# %bb.10:                               #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB72_12
	.p2align	4, , 16
.LBB72_11:                              #   in Loop: Header=BB72_9 Depth=1
	ori	$a0, $zero, 432
	mul.d	$a0, $s5, $a0
	add.d	$a1, $a1, $a0
.LBB72_12:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB72_9 Depth=1
	addi.d	$a0, $sp, 104
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $a2, $s5
	beqz	$a2, .LBB72_14
# %bb.13:                               #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB72_15
	.p2align	4, , 16
.LBB72_14:                              #   in Loop: Header=BB72_9 Depth=1
	ori	$a0, $zero, 432
	mul.d	$a0, $s5, $a0
	add.d	$a1, $a1, $a0
.LBB72_15:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit27
                                        #   in Loop: Header=BB72_9 Depth=1
.Ltmp2776:
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10get_stringB5cxx11Ei)
	jirl	$ra, $ra, 0
.Ltmp2777:
# %bb.16:                               #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a0, $sp, 80
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB72_20
# %bb.17:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a0, $sp, 72
	ld.bu	$a0, $a0, 0
	ori	$a1, $zero, 40
	beq	$a0, $a1, .LBB72_19
# %bb.18:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB72_9 Depth=1
	addi.w	$a0, $s2, 0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB72_21
.LBB72_19:                              #   in Loop: Header=BB72_9 Depth=1
	move	$s2, $s5
	ld.d	$a0, $sp, 72
	addi.d	$a1, $sp, 88
	bne	$a0, $a1, .LBB72_52
	b	.LBB72_53
	.p2align	4, , 16
.LBB72_20:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread50
                                        #   in Loop: Header=BB72_9 Depth=1
	addi.w	$a0, $s2, 0
	ori	$a1, $zero, 2
	bltu	$a0, $a1, .LBB72_50
.LBB72_21:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB72_9 Depth=1
	addi.d	$a0, $s2, -2
	bstrpick.d	$s6, $a0, 31, 0
	ori	$a0, $zero, 432
	mul.d	$s7, $s6, $a0
	move	$s2, $s5
	b	.LBB72_23
	.p2align	4, , 16
.LBB72_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
                                        #   in Loop: Header=BB72_23 Depth=2
	addi.d	$s6, $s6, -1
	addi.w	$s5, $s5, -1
	addi.d	$s7, $s7, -432
	blez	$s5, .LBB72_51
.LBB72_23:                              # %.lr.ph
                                        #   Parent Loop BB72_9 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $s6, $a2
	beqz	$a2, .LBB72_25
# %bb.24:                               #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	b	.LBB72_26
	.p2align	4, , 16
.LBB72_25:                              #   in Loop: Header=BB72_23 Depth=2
	add.d	$a1, $a1, $s7
.LBB72_26:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit29
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a2, $a1, 232
	ld.d	$a0, $a1, 200
	sub.d	$a3, $a2, $a0
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	ld.d	$a4, $a1, 208
	ld.d	$a5, $a1, 216
	sub.d	$a3, $a3, $a2
	ld.d	$a6, $a1, 192
	ld.d	$a2, $a1, 176
	sub.d	$a4, $a4, $a5
	srli.d	$a4, $a4, 7
	alsl.d	$a3, $a3, $a4, 2
	sub.d	$a4, $a6, $a2
	srli.d	$a4, $a4, 7
	add.w	$a3, $a3, $a4
	blez	$a3, .LBB72_30
# %bb.27:                               #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a1, $a1, 184
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB72_31
# %bb.28:                               #   in Loop: Header=BB72_23 Depth=2
	bltu	$a1, $s8, .LBB72_33
# %bb.29:                               #   in Loop: Header=BB72_23 Depth=2
	srli.d	$a2, $a1, 2
	b	.LBB72_32
	.p2align	4, , 16
.LBB72_30:                              # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit.thread
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a0, $sp, 112
	st.d	$s4, $sp, 40
	st.d	$zero, $sp, 48
	st.b	$zero, $sp, 56
	bnez	$a0, .LBB72_48
	b	.LBB72_43
	.p2align	4, , 16
.LBB72_31:                              #   in Loop: Header=BB72_23 Depth=2
	srai.d	$a2, $a3, 9
.LBB72_32:                              #   in Loop: Header=BB72_23 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB72_33:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB72_23 Depth=2
	st.d	$s4, $sp, 40
	ld.d	$a1, $a2, 8
	ld.d	$s0, $a2, 0
	st.d	$a1, $sp, 136
	move	$a0, $s4
	bltu	$a1, $s1, .LBB72_36
# %bb.34:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB72_23 Depth=2
.Ltmp2779:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 136
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2780:
# %bb.35:                               # %.noexc
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a1, $sp, 136
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB72_36:                              # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB72_23 Depth=2
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB72_39
# %bb.37:                               # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB72_23 Depth=2
	bnez	$a1, .LBB72_40
# %bb.38:                               #   in Loop: Header=BB72_23 Depth=2
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
.LBB72_39:                              # %_ZN2PP3Cmd10get_stringB5cxx11Ei.exit
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 112
	st.d	$a2, $sp, 48
	beq	$a0, $a2, .LBB72_41
	b	.LBB72_48
	.p2align	4, , 16
.LBB72_40:                              #   in Loop: Header=BB72_23 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 112
	st.d	$a2, $sp, 48
	bne	$a0, $a2, .LBB72_48
.LBB72_41:                              #   in Loop: Header=BB72_23 Depth=2
	beqz	$a2, .LBB72_43
# %bb.42:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a1, $sp, 40
	ld.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB72_48
.LBB72_43:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a1, $fp, 984
	ld.d	$a3, $a1, 16
	ld.d	$a2, $a1, 24
	ld.d	$a0, $a1, 40
	sub.d	$a2, $a3, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a4, $s6, $a2
	beqz	$a4, .LBB72_45
# %bb.44:                               #   in Loop: Header=BB72_23 Depth=2
	slli.d	$a2, $a4, 3
	ldx.d	$a2, $a0, $a2
	alsl.d	$a0, $a4, $a0, 3
	move	$a3, $a2
	b	.LBB72_46
.LBB72_45:                              #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a2, $a0, 0
	add.d	$a3, $a3, $s7
.LBB72_46:                              # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit
                                        #   in Loop: Header=BB72_23 Depth=2
	st.d	$a3, $sp, 136
	st.d	$a2, $sp, 144
	addi.d	$a2, $a2, 432
	st.d	$a2, $sp, 152
	st.d	$a0, $sp, 160
.Ltmp2782:
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp2783:
# %bb.47:                               #   in Loop: Header=BB72_23 Depth=2
	addi.w	$s2, $s2, -1
.LBB72_48:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread51
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB72_22
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
                                        #   in Loop: Header=BB72_23 Depth=2
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_22
	.p2align	4, , 16
.LBB72_50:                              #   in Loop: Header=BB72_9 Depth=1
	move	$s2, $s5
.LBB72_51:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a0, $sp, 72
	addi.d	$a1, $sp, 88
	beq	$a0, $a1, .LBB72_53
.LBB72_52:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
                                        #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_53:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
                                        #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	beq	$a0, $a1, .LBB72_8
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
                                        #   in Loop: Header=BB72_9 Depth=1
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_8
.LBB72_55:                              # %._crit_edge
	ld.d	$s8, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB72_56:
.Ltmp2778:
	move	$fp, $a0
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	beq	$a0, $a1, .LBB72_63
	b	.LBB72_59
.LBB72_57:
.Ltmp2781:
	move	$fp, $a0
	ld.d	$a0, $sp, 72
	addi.d	$a1, $sp, 88
	beq	$a0, $a1, .LBB72_62
.LBB72_58:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	beq	$a0, $a1, .LBB72_63
.LBB72_59:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i44
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB72_60:
.Ltmp2784:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	bne	$a2, $s4, .LBB72_64
# %bb.61:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 72
	addi.d	$a1, $sp, 88
	bne	$a0, $a1, .LBB72_58
.LBB72_62:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	bne	$a0, $a1, .LBB72_59
.LBB72_63:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB72_64:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 72
	addi.d	$a1, $sp, 88
	beq	$a0, $a1, .LBB72_62
	b	.LBB72_58
.Lfunc_end72:
	.size	_ZN2PP11PowerParser17remove_dup_scalarEi, .Lfunc_end72-_ZN2PP11PowerParser17remove_dup_scalarEi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table72:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Lfunc_begin44-.Lfunc_begin44  # >> Call Site 1 <<
	.uleb128 .Ltmp2776-.Lfunc_begin44       #   Call between .Lfunc_begin44 and .Ltmp2776
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2776-.Lfunc_begin44       # >> Call Site 2 <<
	.uleb128 .Ltmp2777-.Ltmp2776            #   Call between .Ltmp2776 and .Ltmp2777
	.uleb128 .Ltmp2778-.Lfunc_begin44       #     jumps to .Ltmp2778
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2779-.Lfunc_begin44       # >> Call Site 3 <<
	.uleb128 .Ltmp2780-.Ltmp2779            #   Call between .Ltmp2779 and .Ltmp2780
	.uleb128 .Ltmp2781-.Lfunc_begin44       #     jumps to .Ltmp2781
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2780-.Lfunc_begin44       # >> Call Site 4 <<
	.uleb128 .Ltmp2782-.Ltmp2780            #   Call between .Ltmp2780 and .Ltmp2782
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2782-.Lfunc_begin44       # >> Call Site 5 <<
	.uleb128 .Ltmp2783-.Ltmp2782            #   Call between .Ltmp2782 and .Ltmp2783
	.uleb128 .Ltmp2784-.Lfunc_begin44       #     jumps to .Ltmp2784
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2783-.Lfunc_begin44       # >> Call Site 6 <<
	.uleb128 .Lfunc_end72-.Ltmp2783         #   Call between .Ltmp2783 and .Lfunc_end72
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi # -- Begin function _ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi
	.p2align	5
	.type	_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi,@function
_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi: # @_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	addi.d	$sp, $sp, -528
	.cfi_def_cfa_offset 528
	st.d	$ra, $sp, 520                   # 8-byte Folded Spill
	st.d	$fp, $sp, 512                   # 8-byte Folded Spill
	st.d	$s0, $sp, 504                   # 8-byte Folded Spill
	st.d	$s1, $sp, 496                   # 8-byte Folded Spill
	st.d	$s2, $sp, 488                   # 8-byte Folded Spill
	st.d	$s3, $sp, 480                   # 8-byte Folded Spill
	st.d	$s4, $sp, 472                   # 8-byte Folded Spill
	st.d	$s5, $sp, 464                   # 8-byte Folded Spill
	st.d	$s6, $sp, 456                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	ld.d	$a5, $a2, 176
	ld.d	$a6, $a2, 184
	ld.d	$a4, $a2, 200
	sub.d	$a2, $a5, $a6
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $a3
	move	$fp, $a1
	move	$s0, $a0
	bltz	$a2, .LBB73_3
# %bb.1:
	ori	$a0, $zero, 3
	bltu	$a0, $a2, .LBB73_4
# %bb.2:
	slli.d	$a0, $a3, 7
	add.d	$a0, $a5, $a0
	ld.w	$s6, $a0, 80
	ld.w	$s1, $a0, 84
	b	.LBB73_6
.LBB73_3:
	srai.d	$a0, $a2, 2
	b	.LBB73_5
.LBB73_4:
	srli.d	$a0, $a2, 2
.LBB73_5:
	slli.d	$a1, $a0, 3
	ldx.d	$a1, $a4, $a1
	andi	$a3, $a2, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
	ld.w	$s6, $a3, 80
	ld.w	$s1, $a3, 84
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB73_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
	addi.d	$s4, $sp, 440
	ld.d	$a1, $a0, 96
	ld.d	$s2, $a0, 88
	st.d	$s4, $sp, 424
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 32
	move	$a0, $s4
	bltu	$a1, $a2, .LBB73_8
# %bb.7:                                # %.noexc.i.i.i
	addi.d	$a0, $sp, 424
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 424
	st.d	$a1, $sp, 440
.LBB73_8:                               # %._crit_edge.i.i.i.i
	addi.w	$s5, $zero, -1
	beq	$a1, $s5, .LBB73_12
# %bb.9:                                # %._crit_edge.i.i.i.i
	bnez	$a1, .LBB73_11
# %bb.10:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB73_12
.LBB73_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB73_12:                              # %_ZN2PP3Cmd12get_filenameB5cxx11Ei.exit
	ld.d	$a1, $sp, 32
	ld.d	$s2, $fp, 8
	ld.d	$a0, $fp, 16
	st.d	$a1, $sp, 432
	beq	$s2, $a0, .LBB73_19
# %bb.13:
	addi.d	$a0, $s2, 16
	st.d	$a0, $s2, 0
	ld.d	$s3, $sp, 424
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 32
	bltu	$a1, $a2, .LBB73_16
# %bb.14:                               # %.noexc.i.i
.Ltmp2785:
	addi.d	$a1, $sp, 32
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2786:
# %bb.15:                               # %.noexc
	st.d	$a0, $s2, 0
	ld.d	$a1, $sp, 32
	st.d	$a1, $s2, 16
.LBB73_16:                              # %._crit_edge.i.i.i
	beq	$a1, $s5, .LBB73_21
# %bb.17:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB73_20
# %bb.18:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB73_21
.LBB73_19:
.Ltmp2787:
	addi.d	$a1, $sp, 424
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2788:
	b	.LBB73_22
.LBB73_20:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB73_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 32
	st.d	$a0, $s2, 8
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB73_22:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
.Ltmp2790:
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2791:
# %bb.23:
	addi.d	$a0, $sp, 48
.Ltmp2793:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2794:
# %bb.24:
	ld.d	$a0, $sp, 96
	addi.d	$s1, $sp, 16
	st.d	$s1, $sp, 0
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
	beqz	$a0, .LBB73_27
# %bb.25:
	ld.d	$a1, $sp, 80
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB73_27
# %bb.26:
	ld.d	$a3, $sp, 88
	sub.d	$a4, $a0, $a3
.Ltmp2795:
	addi.d	$a0, $sp, 0
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2796:
	b	.LBB73_28
.LBB73_27:
	addi.d	$a1, $sp, 128
.Ltmp2797:
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2798:
.LBB73_28:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$s2, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$s2, $a0, .LBB73_31
# %bb.29:
	addi.d	$a0, $s2, 16
	st.d	$a0, $s2, 0
	ld.d	$a1, $sp, 0
	beq	$a1, $s1, .LBB73_34
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	st.d	$a1, $s2, 0
	ld.d	$a0, $sp, 16
	ld.d	$s3, $sp, 8
	st.d	$a0, $s2, 16
	b	.LBB73_35
.LBB73_31:
.Ltmp2800:
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2801:
# %bb.32:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
	ld.d	$a0, $sp, 0
	beq	$a0, $s1, .LBB73_36
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB73_36
.LBB73_34:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
	ld.d	$s3, $sp, 8
	addi.d	$a2, $s3, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB73_35:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit.thread
	st.d	$s3, $s2, 8
	ld.d	$a0, $fp, 8
	st.d	$s1, $sp, 0
	st.d	$zero, $sp, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB73_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a2, $s0, 608
	ld.d	$a1, $s0, 616
	addi.w	$a3, $s6, -1
	ld.d	$a0, $s0, 632
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB73_40
# %bb.37:
	ori	$a4, $zero, 15
	bltu	$a4, $a1, .LBB73_41
# %bb.38:
	slli.d	$a0, $a3, 5
	add.d	$a1, $a2, $a0
	ld.d	$s0, $fp, 8
	ld.d	$a0, $fp, 16
	bne	$s0, $a0, .LBB73_43
.LBB73_39:
.Ltmp2805:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2806:
	b	.LBB73_51
.LBB73_40:
	srai.d	$a2, $a1, 4
	b	.LBB73_42
.LBB73_41:
	srli.d	$a2, $a1, 4
.LBB73_42:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a1, $a0, $a1
	ld.d	$s0, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$s0, $a0, .LBB73_39
.LBB73_43:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a2, $a1, 8
	ld.d	$s1, $a1, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 0
	bltu	$a2, $a1, .LBB73_46
# %bb.44:                               # %.noexc.i.i30
.Ltmp2803:
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2804:
# %bb.45:                               # %.noexc31
	st.d	$a0, $s0, 0
	ld.d	$a2, $sp, 0
	st.d	$a2, $s0, 16
.LBB73_46:                              # %._crit_edge.i.i.i28
	beq	$a2, $s5, .LBB73_50
# %bb.47:                               # %._crit_edge.i.i.i28
	bnez	$a2, .LBB73_49
# %bb.48:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB73_50
.LBB73_49:
	addi.d	$a2, $a2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB73_50:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i29
	ld.d	$a0, $sp, 0
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB73_51:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit33
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 32
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 128
	st.d	$a2, $sp, 48
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 144
	st.d	$a1, $sp, 56
	beq	$a0, $a2, .LBB73_53
# %bb.52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB73_53:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 56
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 40
	addi.d	$a0, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 424
	beq	$a0, $s4, .LBB73_55
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $sp, 440
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB73_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	ld.d	$s6, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 488                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 504                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 512                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 520                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 528
	ret
.LBB73_56:
.Ltmp2802:
	b	.LBB73_59
.LBB73_57:
.Ltmp2789:
	move	$fp, $a0
	b	.LBB73_64
.LBB73_58:
.Ltmp2799:
.LBB73_59:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s1, .LBB73_63
# %bb.60:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i37
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB73_63
.LBB73_61:
.Ltmp2792:
	move	$fp, $a0
	b	.LBB73_64
.LBB73_62:
.Ltmp2807:
	move	$fp, $a0
.LBB73_63:
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB73_64:
	ld.d	$a0, $sp, 424
	beq	$a0, $s4, .LBB73_66
# %bb.65:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i40
	ld.d	$a1, $sp, 440
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB73_66:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end73:
	.size	_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi, .Lfunc_end73-_ZN2PP11PowerParser11set_dup_rowERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS_3CmdEi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table73:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Lfunc_begin45-.Lfunc_begin45  # >> Call Site 1 <<
	.uleb128 .Ltmp2785-.Lfunc_begin45       #   Call between .Lfunc_begin45 and .Ltmp2785
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2785-.Lfunc_begin45       # >> Call Site 2 <<
	.uleb128 .Ltmp2788-.Ltmp2785            #   Call between .Ltmp2785 and .Ltmp2788
	.uleb128 .Ltmp2789-.Lfunc_begin45       #     jumps to .Ltmp2789
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2788-.Lfunc_begin45       # >> Call Site 3 <<
	.uleb128 .Ltmp2790-.Ltmp2788            #   Call between .Ltmp2788 and .Ltmp2790
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2790-.Lfunc_begin45       # >> Call Site 4 <<
	.uleb128 .Ltmp2791-.Ltmp2790            #   Call between .Ltmp2790 and .Ltmp2791
	.uleb128 .Ltmp2792-.Lfunc_begin45       #     jumps to .Ltmp2792
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2793-.Lfunc_begin45       # >> Call Site 5 <<
	.uleb128 .Ltmp2794-.Ltmp2793            #   Call between .Ltmp2793 and .Ltmp2794
	.uleb128 .Ltmp2807-.Lfunc_begin45       #     jumps to .Ltmp2807
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2795-.Lfunc_begin45       # >> Call Site 6 <<
	.uleb128 .Ltmp2798-.Ltmp2795            #   Call between .Ltmp2795 and .Ltmp2798
	.uleb128 .Ltmp2799-.Lfunc_begin45       #     jumps to .Ltmp2799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2800-.Lfunc_begin45       # >> Call Site 7 <<
	.uleb128 .Ltmp2801-.Ltmp2800            #   Call between .Ltmp2800 and .Ltmp2801
	.uleb128 .Ltmp2802-.Lfunc_begin45       #     jumps to .Ltmp2802
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2801-.Lfunc_begin45       # >> Call Site 8 <<
	.uleb128 .Ltmp2805-.Ltmp2801            #   Call between .Ltmp2801 and .Ltmp2805
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2805-.Lfunc_begin45       # >> Call Site 9 <<
	.uleb128 .Ltmp2804-.Ltmp2805            #   Call between .Ltmp2805 and .Ltmp2804
	.uleb128 .Ltmp2807-.Lfunc_begin45       #     jumps to .Ltmp2807
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2804-.Lfunc_begin45       # >> Call Site 10 <<
	.uleb128 .Lfunc_end73-.Ltmp2804         #   Call between .Ltmp2804 and .Lfunc_end73
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev,"axG",@progbits,_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev,comdat
	.weak	_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev # -- Begin function _ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev,@function
_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev: # @_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	bne	$s0, $s1, .LBB74_4
# %bb.1:                                # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit
	beqz	$s0, .LBB74_13
.LBB74_2:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB74_3:                               # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i
                                        #   in Loop: Header=BB74_4 Depth=1
	addi.d	$s0, $s0, 24
	beq	$s0, $s1, .LBB74_12
.LBB74_4:                               # %.lr.ph.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB74_7 Depth 2
	ld.d	$a0, $s0, 0
	ld.d	$s2, $s0, 8
	beq	$a0, $s2, .LBB74_10
# %bb.5:                                # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB74_4 Depth=1
	addi.d	$s3, $a0, 16
	b	.LBB74_7
	.p2align	4, , 16
.LBB74_6:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB74_7 Depth=2
	addi.d	$a0, $s3, 16
	addi.d	$s3, $s3, 32
	beq	$a0, $s2, .LBB74_9
.LBB74_7:                               # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB74_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s3, -16
	beq	$s3, $a0, .LBB74_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB74_7 Depth=2
	ld.d	$a1, $s3, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB74_6
	.p2align	4, , 16
.LBB74_9:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i
                                        #   in Loop: Header=BB74_4 Depth=1
	ld.d	$a0, $s0, 0
.LBB74_10:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i
                                        #   in Loop: Header=BB74_4 Depth=1
	beqz	$a0, .LBB74_3
# %bb.11:                               #   in Loop: Header=BB74_4 Depth=1
	ld.d	$a1, $s0, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB74_3
.LBB74_12:                              # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split
	ld.d	$s0, $fp, 0
	bnez	$s0, .LBB74_2
.LBB74_13:                              # %_ZNSt12_Vector_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EESaIS8_EED2Ev.exit
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end74:
	.size	_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev, .Lfunc_end74-_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP9to_stringB5cxx11Ed       # -- Begin function _ZN2PP9to_stringB5cxx11Ed
	.p2align	5
	.type	_ZN2PP9to_stringB5cxx11Ed,@function
_ZN2PP9to_stringB5cxx11Ed:              # @_ZN2PP9to_stringB5cxx11Ed
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:
	addi.d	$sp, $sp, -416
	.cfi_def_cfa_offset 416
	st.d	$ra, $sp, 408                   # 8-byte Folded Spill
	st.d	$fp, $sp, 400                   # 8-byte Folded Spill
	st.d	$s0, $sp, 392                   # 8-byte Folded Spill
	fst.d	$fs0, $sp, 384                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 56, -32
	fmov.d	$fs0, $fa0
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	addi.d	$s0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ori	$a1, $zero, 16
	st.d	$a1, $a0, 8
.Ltmp2808:
	addi.d	$a0, $sp, 8
	fmov.d	$fa0, $fs0
	pcaddu18i	$ra, %call36(_ZNSo9_M_insertIdEERSoT_)
	jirl	$ra, $ra, 0
.Ltmp2809:
# %bb.1:                                # %_ZNSolsEd.exit
	ld.d	$a0, $sp, 56
	addi.d	$s0, $fp, 16
	st.d	$s0, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	beqz	$a0, .LBB75_4
# %bb.2:                                # %_ZNSolsEd.exit
	ld.d	$a1, $sp, 40
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB75_4
# %bb.3:
	ld.d	$a3, $sp, 48
	sub.d	$a4, $a0, $a3
.Ltmp2811:
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2812:
	b	.LBB75_5
.LBB75_4:
	addi.d	$a1, $sp, 88
.Ltmp2813:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2814:
.LBB75_5:                               # %_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 8
	ld.d	$a2, $a0, 24
	ld.d	$a1, $a1, -24
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	addi.d	$a4, $sp, 8
	ld.d	$a0, $sp, 88
	stx.d	$a2, $a1, $a4
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 104
	st.d	$a1, $sp, 16
	beq	$a0, $a2, .LBB75_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB75_7:                               # %_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 16
	addi.d	$a0, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	fld.d	$fs0, $sp, 384                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 392                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 400                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 408                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 416
	ret
.LBB75_8:
.Ltmp2815:
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s0, .LBB75_11
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $s0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB75_10:
.Ltmp2810:
	move	$fp, $a0
.LBB75_11:                              # %.body
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end75:
	.size	_ZN2PP9to_stringB5cxx11Ed, .Lfunc_end75-_ZN2PP9to_stringB5cxx11Ed
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table75:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Lfunc_begin46-.Lfunc_begin46  # >> Call Site 1 <<
	.uleb128 .Ltmp2808-.Lfunc_begin46       #   Call between .Lfunc_begin46 and .Ltmp2808
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2808-.Lfunc_begin46       # >> Call Site 2 <<
	.uleb128 .Ltmp2809-.Ltmp2808            #   Call between .Ltmp2808 and .Ltmp2809
	.uleb128 .Ltmp2810-.Lfunc_begin46       #     jumps to .Ltmp2810
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2811-.Lfunc_begin46       # >> Call Site 3 <<
	.uleb128 .Ltmp2814-.Ltmp2811            #   Call between .Ltmp2811 and .Ltmp2814
	.uleb128 .Ltmp2815-.Lfunc_begin46       #     jumps to .Ltmp2815
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2814-.Lfunc_begin46       # >> Call Site 4 <<
	.uleb128 .Lfunc_end75-.Ltmp2814         #   Call between .Ltmp2814 and .Lfunc_end75
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_ # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$s7, $a0, 16
	move	$a2, $a1
	addi.d	$s6, $a0, 8
	beqz	$s7, .LBB76_11
# %bb.1:                                # %.lr.ph.i.i.i
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s5, $a2, 8
	st.d	$a2, $sp, 16                    # 8-byte Folded Spill
	ld.d	$s2, $a2, 0
	lu12i.w	$s4, -524288
	lu12i.w	$a0, 524287
	ori	$s3, $a0, 4095
	ori	$s8, $zero, 16
	ori	$s0, $zero, 24
	move	$s1, $s6
	b	.LBB76_4
	.p2align	4, , 16
.LBB76_2:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_4 Depth=1
	sub.d	$a0, $fp, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
.LBB76_3:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB76_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s7, $a0
	masknez	$a2, $s8, $a0
	maskeqz	$a3, $s0, $a0
	or	$a2, $a3, $a2
	ldx.d	$s7, $s7, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s7, .LBB76_6
.LBB76_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$fp, $s7, 40
	sltu	$a0, $s5, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB76_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_4 Depth=1
	ld.d	$a0, $s7, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB76_3
	b	.LBB76_2
.LBB76_6:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE11lower_boundERSB_.exit
	beq	$s1, $s6, .LBB76_14
# %bb.7:
	ld.d	$fp, $s1, 40
	sltu	$a0, $fp, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB76_12
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a1, $s1, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB76_12
# %bb.9:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	bltz	$a0, .LBB76_13
.LBB76_10:
	move	$a1, $zero
	b	.LBB76_16
.LBB76_11:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE11lower_boundERSB_.exit.thread
	move	$s1, $s6
	b	.LBB76_15
.LBB76_12:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $s5, $fp
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	bgez	$a0, .LBB76_10
.LBB76_13:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	b	.LBB76_15
.LBB76_14:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
.LBB76_15:                              # %.critedge
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a1, $zero, 1
.LBB76_16:
	move	$a0, $s1
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.Lfunc_end76:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_, .Lfunc_end76-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev,comdat
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev
	.p2align	5
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 104
	addi.d	$a1, $fp, 120
	beq	$a0, $a1, .LBB77_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB77_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $fp, 72
	addi.d	$a1, $fp, 88
	beq	$a0, $a1, .LBB77_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB77_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB77_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB77_6:                               # %_ZN2PP8FunctionD2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB77_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB77_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end77:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev, .Lfunc_end77-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP8FunctionD2Ev,"axG",@progbits,_ZN2PP8FunctionD2Ev,comdat
	.weak	_ZN2PP8FunctionD2Ev             # -- Begin function _ZN2PP8FunctionD2Ev
	.p2align	5
	.type	_ZN2PP8FunctionD2Ev,@function
_ZN2PP8FunctionD2Ev:                    # @_ZN2PP8FunctionD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	addi.d	$a1, $fp, 88
	beq	$a0, $a1, .LBB78_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB78_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 40
	addi.d	$a1, $fp, 56
	beq	$a0, $a1, .LBB78_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB78_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB78_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB78_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end78:
	.size	_ZN2PP8FunctionD2Ev, .Lfunc_end78-_ZN2PP8FunctionD2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser14dictionary_addEPcdbS1_ # -- Begin function _ZN2PP11PowerParser14dictionary_addEPcdbS1_
	.p2align	5
	.type	_ZN2PP11PowerParser14dictionary_addEPcdbS1_,@function
_ZN2PP11PowerParser14dictionary_addEPcdbS1_: # @_ZN2PP11PowerParser14dictionary_addEPcdbS1_
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:
	addi.d	$sp, $sp, -384
	.cfi_def_cfa_offset 384
	st.d	$ra, $sp, 376                   # 8-byte Folded Spill
	st.d	$fp, $sp, 368                   # 8-byte Folded Spill
	st.d	$s0, $sp, 360                   # 8-byte Folded Spill
	st.d	$s1, $sp, 352                   # 8-byte Folded Spill
	st.d	$s2, $sp, 344                   # 8-byte Folded Spill
	st.d	$s3, $sp, 336                   # 8-byte Folded Spill
	st.d	$s4, $sp, 328                   # 8-byte Folded Spill
	st.d	$s5, $sp, 320                   # 8-byte Folded Spill
	fst.d	$fs0, $sp, 312                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 56, -72
	move	$s2, $a3
	move	$s1, $a2
	fmov.d	$fs0, $fa0
	move	$s3, $a1
	move	$s0, $a0
	ori	$a0, $zero, 136
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	addi.d	$s5, $sp, 288
	st.d	$s5, $sp, 272
	beqz	$s3, .LBB79_38
# %bb.1:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 40
	move	$a0, $s5
	bltu	$s4, $a1, .LBB79_4
# %bb.2:                                # %.noexc.i
.Ltmp2816:
	addi.d	$a0, $sp, 272
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2817:
# %bb.3:                                # %.noexc20
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 272
	st.d	$a1, $sp, 288
.LBB79_4:                               # %._crit_edge.i.i
	beqz	$s4, .LBB79_8
# %bb.5:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB79_7
# %bb.6:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB79_8
.LBB79_7:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_8:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 272
	st.d	$a0, $sp, 280
	stx.b	$zero, $a1, $a0
.Ltmp2818:
	addi.d	$a0, $sp, 240
	fmov.d	$fa0, $fs0
	pcaddu18i	$ra, %call36(_ZN2PP9to_stringB5cxx11Ed)
	jirl	$ra, $ra, 0
.Ltmp2819:
# %bb.9:
	addi.d	$s4, $sp, 224
	st.d	$s4, $sp, 208
	beqz	$s2, .LBB79_40
# %bb.10:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 40
	move	$a0, $s4
	bltu	$s3, $a1, .LBB79_13
# %bb.11:                               # %.noexc.i22
.Ltmp2821:
	addi.d	$a0, $sp, 208
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2822:
# %bb.12:                               # %.noexc24
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 208
	st.d	$a1, $sp, 224
.LBB79_13:                              # %._crit_edge.i.i21
	beqz	$s3, .LBB79_17
# %bb.14:                               # %._crit_edge.i.i21
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB79_16
# %bb.15:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB79_17
.LBB79_16:
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_17:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 208
	st.d	$a0, $sp, 216
	stx.b	$zero, $a1, $a0
.Ltmp2823:
	addi.d	$a1, $sp, 272
	addi.d	$a2, $sp, 240
	addi.d	$a4, $sp, 208
	move	$a0, $fp
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp2824:
# %bb.18:
	ld.d	$a0, $sp, 208
	beq	$a0, $s4, .LBB79_20
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 224
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB79_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	beq	$a0, $a1, .LBB79_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 256
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB79_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit28
	ld.d	$a0, $sp, 272
	beq	$a0, $s5, .LBB79_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	ld.d	$a1, $sp, 288
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB79_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	addi.d	$s1, $sp, 24
	ld.d	$a1, $fp, 8
	ld.d	$s2, $fp, 0
	st.d	$s1, $sp, 8
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 304
	move	$a0, $s1
	bltu	$a1, $a2, .LBB79_26
# %bb.25:                               # %.noexc.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 304
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 304
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB79_26:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB79_30
# %bb.27:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB79_29
# %bb.28:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB79_30
.LBB79_29:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_30:                              # %_ZN2PP8Variable11get_varnameB5cxx11Ev.exit
	ld.d	$a0, $sp, 8
	ld.d	$s3, $sp, 304
	addi.d	$s2, $sp, 56
	st.d	$s2, $sp, 40
	beq	$a0, $s1, .LBB79_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	ld.d	$a1, $sp, 24
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
	b	.LBB79_33
.LBB79_32:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	addi.d	$a2, $s3, 1
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_33:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	st.d	$s3, $sp, 48
	st.d	$s1, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	addi.d	$a0, $sp, 72
.Ltmp2826:
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2827:
# %bb.34:                               # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
	addi.d	$a0, $s0, 680
.Ltmp2829:
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp2830:
# %bb.35:
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s1, .LBB79_37
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB79_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	fld.d	$fs0, $sp, 312                  # 8-byte Folded Reload
	ld.d	$s5, $sp, 320                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 328                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 336                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 344                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 352                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 360                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 368                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 376                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 384
	ret
.LBB79_38:
.Ltmp2835:
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp2836:
# %bb.39:                               # %.noexc
.LBB79_40:
.Ltmp2832:
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp2833:
# %bb.41:                               # %.noexc23
.LBB79_42:
.Ltmp2831:
	move	$s0, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s1, .LBB79_45
	b	.LBB79_47
.LBB79_43:
.Ltmp2828:
	ld.d	$a2, $sp, 40
	move	$s0, $a0
	bne	$a2, $s2, .LBB79_46
# %bb.44:                               # %.body
	ld.d	$a0, $sp, 8
	bne	$a0, $s1, .LBB79_47
.LBB79_45:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB79_46:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s1, .LBB79_45
.LBB79_47:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB79_48:
.Ltmp2825:
	ld.d	$a2, $sp, 208
	move	$s0, $a0
	bne	$a2, $s4, .LBB79_51
# %bb.49:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	bne	$a0, $a1, .LBB79_54
.LBB79_50:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	ld.d	$a0, $sp, 272
	bne	$a0, $s5, .LBB79_55
	b	.LBB79_57
.LBB79_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	ld.d	$a0, $sp, 224
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	beq	$a0, $a1, .LBB79_50
	b	.LBB79_54
.LBB79_52:
.Ltmp2820:
	move	$s0, $a0
	ld.d	$a0, $sp, 272
	bne	$a0, $s5, .LBB79_55
	b	.LBB79_57
.LBB79_53:
.Ltmp2834:
	move	$s0, $a0
	ld.d	$a0, $sp, 240
	addi.d	$a1, $sp, 256
	beq	$a0, $a1, .LBB79_50
.LBB79_54:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	ld.d	$a1, $sp, 256
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 272
	beq	$a0, $s5, .LBB79_57
.LBB79_55:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	ld.d	$a1, $sp, 288
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB79_57
.LBB79_56:
.Ltmp2837:
	move	$s0, $a0
.LBB79_57:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	ori	$a1, $zero, 136
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end79:
	.size	_ZN2PP11PowerParser14dictionary_addEPcdbS1_, .Lfunc_end79-_ZN2PP11PowerParser14dictionary_addEPcdbS1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table79:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Lfunc_begin47-.Lfunc_begin47  # >> Call Site 1 <<
	.uleb128 .Ltmp2816-.Lfunc_begin47       #   Call between .Lfunc_begin47 and .Ltmp2816
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2816-.Lfunc_begin47       # >> Call Site 2 <<
	.uleb128 .Ltmp2817-.Ltmp2816            #   Call between .Ltmp2816 and .Ltmp2817
	.uleb128 .Ltmp2837-.Lfunc_begin47       #     jumps to .Ltmp2837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2817-.Lfunc_begin47       # >> Call Site 3 <<
	.uleb128 .Ltmp2818-.Ltmp2817            #   Call between .Ltmp2817 and .Ltmp2818
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2818-.Lfunc_begin47       # >> Call Site 4 <<
	.uleb128 .Ltmp2819-.Ltmp2818            #   Call between .Ltmp2818 and .Ltmp2819
	.uleb128 .Ltmp2820-.Lfunc_begin47       #     jumps to .Ltmp2820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2819-.Lfunc_begin47       # >> Call Site 5 <<
	.uleb128 .Ltmp2821-.Ltmp2819            #   Call between .Ltmp2819 and .Ltmp2821
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2821-.Lfunc_begin47       # >> Call Site 6 <<
	.uleb128 .Ltmp2822-.Ltmp2821            #   Call between .Ltmp2821 and .Ltmp2822
	.uleb128 .Ltmp2834-.Lfunc_begin47       #     jumps to .Ltmp2834
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2822-.Lfunc_begin47       # >> Call Site 7 <<
	.uleb128 .Ltmp2823-.Ltmp2822            #   Call between .Ltmp2822 and .Ltmp2823
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2823-.Lfunc_begin47       # >> Call Site 8 <<
	.uleb128 .Ltmp2824-.Ltmp2823            #   Call between .Ltmp2823 and .Ltmp2824
	.uleb128 .Ltmp2825-.Lfunc_begin47       #     jumps to .Ltmp2825
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2824-.Lfunc_begin47       # >> Call Site 9 <<
	.uleb128 .Ltmp2826-.Ltmp2824            #   Call between .Ltmp2824 and .Ltmp2826
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2826-.Lfunc_begin47       # >> Call Site 10 <<
	.uleb128 .Ltmp2827-.Ltmp2826            #   Call between .Ltmp2826 and .Ltmp2827
	.uleb128 .Ltmp2828-.Lfunc_begin47       #     jumps to .Ltmp2828
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2829-.Lfunc_begin47       # >> Call Site 11 <<
	.uleb128 .Ltmp2830-.Ltmp2829            #   Call between .Ltmp2829 and .Ltmp2830
	.uleb128 .Ltmp2831-.Lfunc_begin47       #     jumps to .Ltmp2831
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2830-.Lfunc_begin47       # >> Call Site 12 <<
	.uleb128 .Ltmp2835-.Ltmp2830            #   Call between .Ltmp2830 and .Ltmp2835
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2835-.Lfunc_begin47       # >> Call Site 13 <<
	.uleb128 .Ltmp2836-.Ltmp2835            #   Call between .Ltmp2835 and .Ltmp2836
	.uleb128 .Ltmp2837-.Lfunc_begin47       #     jumps to .Ltmp2837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2832-.Lfunc_begin47       # >> Call Site 14 <<
	.uleb128 .Ltmp2833-.Ltmp2832            #   Call between .Ltmp2832 and .Ltmp2833
	.uleb128 .Ltmp2834-.Lfunc_begin47       #     jumps to .Ltmp2834
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2833-.Lfunc_begin47       # >> Call Site 15 <<
	.uleb128 .Lfunc_end79-.Ltmp2833         #   Call between .Ltmp2833 and .Lfunc_end79
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser18dictionary_env_addEPcb # -- Begin function _ZN2PP11PowerParser18dictionary_env_addEPcb
	.p2align	5
	.type	_ZN2PP11PowerParser18dictionary_env_addEPcb,@function
_ZN2PP11PowerParser18dictionary_env_addEPcb: # @_ZN2PP11PowerParser18dictionary_env_addEPcb
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	addi.d	$sp, $sp, -384
	.cfi_def_cfa_offset 384
	st.d	$ra, $sp, 376                   # 8-byte Folded Spill
	st.d	$fp, $sp, 368                   # 8-byte Folded Spill
	st.d	$s0, $sp, 360                   # 8-byte Folded Spill
	st.d	$s1, $sp, 352                   # 8-byte Folded Spill
	st.d	$s2, $sp, 344                   # 8-byte Folded Spill
	st.d	$s3, $sp, 336                   # 8-byte Folded Spill
	st.d	$s4, $sp, 328                   # 8-byte Folded Spill
	st.d	$s5, $sp, 320                   # 8-byte Folded Spill
	st.d	$s6, $sp, 312                   # 8-byte Folded Spill
	st.d	$s7, $sp, 304                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s2, $a2
	move	$s3, $a1
	move	$s1, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(getenv)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	slli.d	$fp, $a0, 32
	ori	$s5, $zero, 0
	ori	$a0, $zero, 0
	lu32i.d	$a0, 2
	add.d	$a0, $fp, $a0
	srai.d	$a0, $a0, 32
	pcaddu18i	$ra, %call36(malloc)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	ori	$a0, $zero, 36
	st.b	$a0, $s0, 0
	addi.d	$a0, $s0, 1
	lu32i.d	$s5, 1
	add.d	$a1, $fp, $s5
	srai.d	$a2, $a1, 32
	move	$a1, $s3
	pcaddu18i	$ra, %call36(strncpy)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 136
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	addi.d	$s6, $sp, 280
	st.d	$s6, $sp, 264
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 32
	move	$a0, $s6
	bltu	$s5, $a1, .LBB80_3
# %bb.1:                                # %.noexc.i
.Ltmp2838:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2839:
# %bb.2:                                # %.noexc33
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB80_3:                               # %._crit_edge.i.i
	sltui	$a1, $s4, 1
	masknez	$a2, $s4, $a1
	pcalau12i	$a3, %pc_hi20(.L.str)
	addi.d	$a3, $a3, %pc_lo12(.L.str)
	maskeqz	$a1, $a3, $a1
	or	$s4, $a1, $a2
	beqz	$s5, .LBB80_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s5, $a1, .LBB80_6
# %bb.5:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB80_7
.LBB80_6:
	move	$a1, $s0
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB80_7:
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 264
	st.d	$a0, $sp, 272
	stx.b	$zero, $a1, $a0
	addi.d	$s7, $sp, 248
	st.d	$s7, $sp, 232
	move	$a0, $s4
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 32
	move	$a0, $s7
	bltu	$s5, $a1, .LBB80_10
# %bb.8:                                # %.noexc.i35
.Ltmp2841:
	addi.d	$a0, $sp, 232
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2842:
# %bb.9:                                # %.noexc36
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 232
	st.d	$a1, $sp, 248
.LBB80_10:                              # %._crit_edge.i.i34
	beqz	$s5, .LBB80_14
# %bb.11:                               # %._crit_edge.i.i34
	ori	$a1, $zero, 1
	bne	$s5, $a1, .LBB80_13
# %bb.12:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB80_14
.LBB80_13:
	move	$a1, $s4
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB80_14:
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 232
	st.d	$a0, $sp, 240
	stx.b	$zero, $a1, $a0
	addi.d	$s5, $sp, 216
	st.d	$s5, $sp, 200
	move	$a0, $s3
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 32
	move	$a0, $s5
	bltu	$s4, $a1, .LBB80_17
# %bb.15:                               # %.noexc.i39
.Ltmp2844:
	addi.d	$a0, $sp, 200
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2845:
# %bb.16:                               # %.noexc41
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 200
	st.d	$a1, $sp, 216
.LBB80_17:                              # %._crit_edge.i.i38
	beqz	$s4, .LBB80_21
# %bb.18:                               # %._crit_edge.i.i38
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB80_20
# %bb.19:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB80_21
.LBB80_20:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB80_21:
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 200
	st.d	$a0, $sp, 208
	stx.b	$zero, $a1, $a0
.Ltmp2847:
	addi.d	$a1, $sp, 264
	addi.d	$a2, $sp, 232
	addi.d	$a4, $sp, 200
	move	$a0, $fp
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_)
	jirl	$ra, $ra, 0
.Ltmp2848:
# %bb.22:
	ld.d	$a0, $sp, 200
	beq	$a0, $s5, .LBB80_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB80_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 232
	beq	$a0, $s7, .LBB80_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i43
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB80_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit45
	ld.d	$a0, $sp, 264
	beq	$a0, $s6, .LBB80_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i46
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB80_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	addi.d	$s2, $sp, 16
	ld.d	$a1, $fp, 8
	ld.d	$s3, $fp, 0
	st.d	$s2, $sp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 296
	move	$a0, $s2
	bltu	$a1, $a2, .LBB80_30
# %bb.29:                               # %.noexc.i.i
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 296
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 296
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB80_30:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB80_34
# %bb.31:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB80_33
# %bb.32:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB80_34
.LBB80_33:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB80_34:                              # %_ZN2PP8Variable11get_varnameB5cxx11Ev.exit
	ld.d	$a0, $sp, 0
	ld.d	$s4, $sp, 296
	addi.d	$s3, $sp, 48
	st.d	$s3, $sp, 32
	beq	$a0, $s2, .LBB80_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i49
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
	b	.LBB80_37
.LBB80_36:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	addi.d	$a2, $s4, 1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB80_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	st.d	$s4, $sp, 40
	st.d	$s2, $sp, 0
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
	addi.d	$a0, $sp, 64
.Ltmp2850:
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2851:
# %bb.38:                               # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
	addi.d	$a0, $s1, 680
.Ltmp2853:
	addi.d	$a1, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp2854:
# %bb.39:
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0
	beq	$a0, $s2, .LBB80_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i50
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB80_41:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit52
	move	$a0, $s0
	pcaddu18i	$ra, %call36(free)
	jirl	$ra, $ra, 0
	ld.d	$s7, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 312                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 320                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 328                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 336                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 344                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 352                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 360                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 368                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 376                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 384
	ret
.LBB80_42:
.Ltmp2846:
	move	$s0, $a0
	ld.d	$a0, $sp, 232
	beq	$a0, $s7, .LBB80_53
	b	.LBB80_57
.LBB80_43:
.Ltmp2843:
	move	$s0, $a0
	ld.d	$a0, $sp, 264
	bne	$a0, $s6, .LBB80_54
	b	.LBB80_55
.LBB80_44:
.Ltmp2840:
	move	$s0, $a0
	b	.LBB80_55
.LBB80_45:
.Ltmp2855:
	move	$s0, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0
	beq	$a0, $s2, .LBB80_48
	b	.LBB80_50
.LBB80_46:
.Ltmp2852:
	ld.d	$a2, $sp, 32
	move	$s0, $a0
	bne	$a2, $s3, .LBB80_49
# %bb.47:                               # %.body
	ld.d	$a0, $sp, 0
	bne	$a0, $s2, .LBB80_50
.LBB80_48:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB80_49:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0
	beq	$a0, $s2, .LBB80_48
.LBB80_50:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i62
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB80_51:
.Ltmp2849:
	ld.d	$a2, $sp, 200
	move	$s0, $a0
	bne	$a2, $s5, .LBB80_56
# %bb.52:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit55
	ld.d	$a0, $sp, 232
	bne	$a0, $s7, .LBB80_57
.LBB80_53:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit58
	ld.d	$a0, $sp, 264
	beq	$a0, $s6, .LBB80_55
.LBB80_54:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i59
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB80_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit61
	ori	$a1, $zero, 136
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB80_56:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i53
	ld.d	$a0, $sp, 216
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 232
	beq	$a0, $s7, .LBB80_53
.LBB80_57:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i56
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 264
	bne	$a0, $s6, .LBB80_54
	b	.LBB80_55
.Lfunc_end80:
	.size	_ZN2PP11PowerParser18dictionary_env_addEPcb, .Lfunc_end80-_ZN2PP11PowerParser18dictionary_env_addEPcb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table80:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Lfunc_begin48-.Lfunc_begin48  # >> Call Site 1 <<
	.uleb128 .Ltmp2838-.Lfunc_begin48       #   Call between .Lfunc_begin48 and .Ltmp2838
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2838-.Lfunc_begin48       # >> Call Site 2 <<
	.uleb128 .Ltmp2839-.Ltmp2838            #   Call between .Ltmp2838 and .Ltmp2839
	.uleb128 .Ltmp2840-.Lfunc_begin48       #     jumps to .Ltmp2840
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2839-.Lfunc_begin48       # >> Call Site 3 <<
	.uleb128 .Ltmp2841-.Ltmp2839            #   Call between .Ltmp2839 and .Ltmp2841
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2841-.Lfunc_begin48       # >> Call Site 4 <<
	.uleb128 .Ltmp2842-.Ltmp2841            #   Call between .Ltmp2841 and .Ltmp2842
	.uleb128 .Ltmp2843-.Lfunc_begin48       #     jumps to .Ltmp2843
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2842-.Lfunc_begin48       # >> Call Site 5 <<
	.uleb128 .Ltmp2844-.Ltmp2842            #   Call between .Ltmp2842 and .Ltmp2844
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2844-.Lfunc_begin48       # >> Call Site 6 <<
	.uleb128 .Ltmp2845-.Ltmp2844            #   Call between .Ltmp2844 and .Ltmp2845
	.uleb128 .Ltmp2846-.Lfunc_begin48       #     jumps to .Ltmp2846
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2845-.Lfunc_begin48       # >> Call Site 7 <<
	.uleb128 .Ltmp2847-.Ltmp2845            #   Call between .Ltmp2845 and .Ltmp2847
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2847-.Lfunc_begin48       # >> Call Site 8 <<
	.uleb128 .Ltmp2848-.Ltmp2847            #   Call between .Ltmp2847 and .Ltmp2848
	.uleb128 .Ltmp2849-.Lfunc_begin48       #     jumps to .Ltmp2849
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2848-.Lfunc_begin48       # >> Call Site 9 <<
	.uleb128 .Ltmp2850-.Ltmp2848            #   Call between .Ltmp2848 and .Ltmp2850
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2850-.Lfunc_begin48       # >> Call Site 10 <<
	.uleb128 .Ltmp2851-.Ltmp2850            #   Call between .Ltmp2850 and .Ltmp2851
	.uleb128 .Ltmp2852-.Lfunc_begin48       #     jumps to .Ltmp2852
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2853-.Lfunc_begin48       # >> Call Site 11 <<
	.uleb128 .Ltmp2854-.Ltmp2853            #   Call between .Ltmp2853 and .Ltmp2854
	.uleb128 .Ltmp2855-.Lfunc_begin48       #     jumps to .Ltmp2855
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2854-.Lfunc_begin48       # >> Call Site 12 <<
	.uleb128 .Lfunc_end80-.Ltmp2854         #   Call between .Ltmp2854 and .Lfunc_end80
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end48:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	addi.d	$sp, $sp, -656
	.cfi_def_cfa_offset 656
	st.d	$ra, $sp, 648                   # 8-byte Folded Spill
	st.d	$fp, $sp, 640                   # 8-byte Folded Spill
	st.d	$s0, $sp, 632                   # 8-byte Folded Spill
	st.d	$s1, $sp, 624                   # 8-byte Folded Spill
	st.d	$s2, $sp, 616                   # 8-byte Folded Spill
	st.d	$s3, $sp, 608                   # 8-byte Folded Spill
	st.d	$s4, $sp, 600                   # 8-byte Folded Spill
	st.d	$s5, $sp, 592                   # 8-byte Folded Spill
	st.d	$s6, $sp, 584                   # 8-byte Folded Spill
	st.d	$s7, $sp, 576                   # 8-byte Folded Spill
	st.d	$s8, $sp, 568                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a3, 8
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a3, $a3, 0
	sub.d	$a5, $a5, $a3
	srai.d	$a5, $a5, 2
	addi.w	$a6, $a5, 0
	st.d	$a4, $sp, 40                    # 8-byte Folded Spill
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	move	$s3, $a1
	move	$s0, $a0
	blez	$a6, .LBB81_3
# %bb.1:                                # %.lr.ph.preheader
	bstrpick.d	$a0, $a5, 30, 0
	ori	$a1, $zero, 8
	bgeu	$a0, $a1, .LBB81_4
# %bb.2:
	move	$a1, $zero
	ori	$fp, $zero, 1
	b	.LBB81_7
.LBB81_3:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i.thread
	ori	$fp, $zero, 1
	b	.LBB81_11
.LBB81_4:                               # %vector.ph
	bstrpick.d	$a1, $a5, 30, 3
	slli.d	$a1, $a1, 3
	vrepli.w	$vr0, 1
	addi.d	$a2, $a3, 16
	move	$a4, $a1
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB81_5:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a2, -16
	vld	$vr3, $a2, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a4, $a4, -8
	addi.d	$a2, $a2, 32
	bnez	$a4, .LBB81_5
# %bb.6:                                # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$fp, $vr0, 0
	beq	$a0, $a1, .LBB81_9
.LBB81_7:                               # %.lr.ph.preheader99
	alsl.d	$a2, $a1, $a3, 2
	sub.d	$a0, $a0, $a1
	.p2align	4, , 16
.LBB81_8:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a2, 0
	mul.w	$fp, $a1, $fp
	addi.d	$a0, $a0, -1
	addi.d	$a2, $a2, 4
	bnez	$a0, .LBB81_8
.LBB81_9:                               # %._crit_edge
	bltz	$fp, .LBB81_66
# %bb.10:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	beqz	$fp, .LBB81_16
.LBB81_11:                              # %.lr.ph.preheader.i.i.i.i.i
	slli.d	$s4, $fp, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 536
	alsl.d	$s1, $fp, $a0, 2
	st.d	$s1, $sp, 552
	move	$a1, $zero
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 544
	slli.d	$s5, $fp, 3
.Ltmp2856:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2857:
# %bb.12:                               # %.noexc47
	st.d	$a0, $sp, 512
	alsl.d	$a1, $fp, $a0, 3
	st.d	$a1, $sp, 528
	st.d	$zero, $a0, 0
	ori	$a2, $zero, 1
	addi.d	$a1, $a0, 8
	beq	$fp, $a2, .LBB81_14
# %bb.13:                               # %.lr.ph.i.preheader.i.i.i.i.i
	add.d	$s1, $a0, $s5
	addi.d	$a2, $s5, -8
	move	$a0, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a1, $s1
.LBB81_14:                              # %.lr.ph.preheader.i.i.i.i.i50
	st.d	$a1, $sp, 520
.Ltmp2859:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2860:
# %bb.15:                               # %.noexc59
	move	$s5, $a0
	st.d	$a0, $sp, 488
	alsl.d	$a0, $fp, $a0, 2
	st.d	$a0, $sp, 504
	ori	$a1, $zero, 255
	move	$a0, $s5
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s5, $s4
	b	.LBB81_17
.LBB81_16:                              # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i57
	move	$a0, $zero
	st.d	$zero, $sp, 552
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 536
	st.d	$zero, $sp, 528
	vst	$vr0, $sp, 512
	st.d	$zero, $sp, 504
	vst	$vr0, $sp, 488
.LBB81_17:                              # %.loopexit
	st.d	$a0, $sp, 496
	st.w	$zero, $sp, 484
.Ltmp2862:
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2863:
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB81_22
# %bb.19:
	ld.d	$fp, $s3, 8
	beqz	$fp, .LBB81_22
# %bb.20:                               # %.lr.ph.i.preheader
	ld.d	$s1, $s3, 0
	.p2align	4, , 16
.LBB81_21:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s1, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s1, 0
	addi.d	$fp, $fp, -1
	addi.d	$s1, $s1, 1
	bnez	$fp, .LBB81_21
.LBB81_22:                              # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s7, $zero
	move	$s8, $zero
	addi.d	$s4, $sp, 72
	addi.d	$a0, $s0, 992
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s1, $a0, -1973
	ori	$s2, $zero, 16
	addi.w	$fp, $zero, -1
	b	.LBB81_26
.LBB81_23:                              #   in Loop: Header=BB81_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB81_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a0, $sp, 56
	st.d	$a0, $s5, 8
	ld.d	$a0, $s0, 1040
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 1040
.LBB81_25:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB81_26 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$s7, $s7, 432
.LBB81_26:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.w	$a3, $a3, $a4
	bge	$s8, $a3, .LBB81_56
# %bb.27:                               #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s1
	add.d	$a1, $s8, $a1
	beqz	$a1, .LBB81_29
# %bb.28:                               #   in Loop: Header=BB81_26 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB81_30
	.p2align	4, , 16
.LBB81_29:                              #   in Loop: Header=BB81_26 Depth=1
	add.d	$a0, $a2, $s7
.LBB81_30:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s5, $a0, 240
	st.d	$s4, $sp, 56
	st.d	$a1, $sp, 560
	move	$a0, $s4
	bltu	$a1, $s2, .LBB81_33
# %bb.31:                               # %.noexc.i.i
                                        #   in Loop: Header=BB81_26 Depth=1
.Ltmp2868:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 560
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2869:
# %bb.32:                               # %.noexc61
                                        #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a1, $sp, 560
	st.d	$a0, $sp, 56
	st.d	$a1, $sp, 72
.LBB81_33:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB81_26 Depth=1
	beq	$a1, $fp, .LBB81_36
# %bb.34:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB81_26 Depth=1
	bnez	$a1, .LBB81_39
# %bb.35:                               #   in Loop: Header=BB81_26 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
.LBB81_36:                              #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	bne	$a2, $a0, .LBB81_40
.LBB81_37:                              #   in Loop: Header=BB81_26 Depth=1
	ld.d	$s5, $sp, 56
	beqz	$a2, .LBB81_45
# %bb.38:                               #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a1, $s3, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	bne	$s5, $s4, .LBB81_41
	b	.LBB81_42
	.p2align	4, , 16
.LBB81_39:                              #   in Loop: Header=BB81_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	beq	$a2, $a0, .LBB81_37
.LBB81_40:                              # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB81_26 Depth=1
	ld.d	$s5, $sp, 56
	move	$s6, $zero
	beq	$s5, $s4, .LBB81_42
.LBB81_41:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB81_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB81_26 Depth=1
	beqz	$s6, .LBB81_25
# %bb.43:                               #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a0, $s0, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s1
	add.d	$a2, $s8, $a2
	beqz	$a2, .LBB81_46
# %bb.44:                               #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB81_47
.LBB81_45:                              #   in Loop: Header=BB81_26 Depth=1
	ori	$s6, $zero, 1
	bne	$s5, $s4, .LBB81_41
	b	.LBB81_42
.LBB81_46:                              #   in Loop: Header=BB81_26 Depth=1
	add.d	$a0, $a1, $s7
.LBB81_47:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit63
                                        #   in Loop: Header=BB81_26 Depth=1
	ldptr.w	$a6, $s0, 2792
.Ltmp2871:
	addi.d	$a1, $sp, 484
	st.d	$a1, $sp, 16
	addi.d	$a1, $sp, 88
	st.d	$a1, $sp, 8
	addi.d	$a4, $sp, 512
	addi.d	$a5, $sp, 488
	addi.d	$a7, $sp, 536
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.d	$a1, $sp, 0
	move	$a1, $s3
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp2872:
# %bb.48:                               #   in Loop: Header=BB81_26 Depth=1
	ld.d	$a0, $s0, 1056
	ld.d	$s5, $s0, 1040
	addi.d	$a0, $a0, -32
	beq	$s5, $a0, .LBB81_55
# %bb.49:                               #   in Loop: Header=BB81_26 Depth=1
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $s3, 8
	ld.d	$s6, $s3, 0
	st.d	$a1, $sp, 56
	bltu	$a1, $s2, .LBB81_52
# %bb.50:                               # %.noexc.i.i66
                                        #   in Loop: Header=BB81_26 Depth=1
.Ltmp2873:
	addi.d	$a1, $sp, 56
	move	$a0, $s5
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2874:
# %bb.51:                               # %.noexc67
                                        #   in Loop: Header=BB81_26 Depth=1
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 56
	st.d	$a1, $s5, 16
.LBB81_52:                              # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB81_26 Depth=1
	beq	$a1, $fp, .LBB81_24
# %bb.53:                               # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB81_26 Depth=1
	bnez	$a1, .LBB81_23
# %bb.54:                               #   in Loop: Header=BB81_26 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB81_24
.LBB81_55:                              #   in Loop: Header=BB81_26 Depth=1
.Ltmp2875:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2876:
	b	.LBB81_25
.LBB81_56:
.Ltmp2865:
	addi.d	$a1, $sp, 88
	addi.d	$a2, $sp, 484
	addi.d	$s1, $sp, 88
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2866:
# %bb.57:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s1
	ld.d	$a0, $sp, 184
	st.d	$a2, $sp, 104
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 200
	st.d	$a1, $sp, 112
	beq	$a0, $a2, .LBB81_59
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB81_59:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 88
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 96
	addi.d	$a0, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 488
	beqz	$a0, .LBB81_61
# %bb.60:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB81_61:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB81_63
# %bb.62:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB81_63:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB81_65
# %bb.64:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB81_65:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit71
	ld.d	$s8, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 600                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 608                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 616                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 624                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 632                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 640                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 648                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 656
	ret
.LBB81_66:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB81_67:
.Ltmp2861:
	move	$fp, $a0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB81_76
	b	.LBB81_79
.LBB81_68:
.Ltmp2858:
	move	$fp, $a0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB81_77
	b	.LBB81_80
.LBB81_69:
.Ltmp2867:
	b	.LBB81_73
.LBB81_70:
.Ltmp2864:
	move	$fp, $a0
	b	.LBB81_74
.LBB81_71:
.Ltmp2870:
	b	.LBB81_73
.LBB81_72:
.Ltmp2877:
.LBB81_73:
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB81_74:
	ld.d	$a0, $sp, 488
	bnez	$a0, .LBB81_78
# %bb.75:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit73
	ld.d	$a0, $sp, 512
	bnez	$a0, .LBB81_79
.LBB81_76:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit75
	ld.d	$a0, $sp, 536
	bnez	$a0, .LBB81_80
.LBB81_77:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit77
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB81_78:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB81_76
.LBB81_79:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB81_77
.LBB81_80:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end81:
	.size	_ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb, .Lfunc_end81-_ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table81:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Lfunc_begin49-.Lfunc_begin49  # >> Call Site 1 <<
	.uleb128 .Ltmp2856-.Lfunc_begin49       #   Call between .Lfunc_begin49 and .Ltmp2856
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2856-.Lfunc_begin49       # >> Call Site 2 <<
	.uleb128 .Ltmp2857-.Ltmp2856            #   Call between .Ltmp2856 and .Ltmp2857
	.uleb128 .Ltmp2858-.Lfunc_begin49       #     jumps to .Ltmp2858
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2857-.Lfunc_begin49       # >> Call Site 3 <<
	.uleb128 .Ltmp2859-.Ltmp2857            #   Call between .Ltmp2857 and .Ltmp2859
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2859-.Lfunc_begin49       # >> Call Site 4 <<
	.uleb128 .Ltmp2860-.Ltmp2859            #   Call between .Ltmp2859 and .Ltmp2860
	.uleb128 .Ltmp2861-.Lfunc_begin49       #     jumps to .Ltmp2861
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2860-.Lfunc_begin49       # >> Call Site 5 <<
	.uleb128 .Ltmp2862-.Ltmp2860            #   Call between .Ltmp2860 and .Ltmp2862
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2862-.Lfunc_begin49       # >> Call Site 6 <<
	.uleb128 .Ltmp2863-.Ltmp2862            #   Call between .Ltmp2862 and .Ltmp2863
	.uleb128 .Ltmp2864-.Lfunc_begin49       #     jumps to .Ltmp2864
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2863-.Lfunc_begin49       # >> Call Site 7 <<
	.uleb128 .Ltmp2868-.Ltmp2863            #   Call between .Ltmp2863 and .Ltmp2868
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2868-.Lfunc_begin49       # >> Call Site 8 <<
	.uleb128 .Ltmp2869-.Ltmp2868            #   Call between .Ltmp2868 and .Ltmp2869
	.uleb128 .Ltmp2870-.Lfunc_begin49       #     jumps to .Ltmp2870
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2869-.Lfunc_begin49       # >> Call Site 9 <<
	.uleb128 .Ltmp2871-.Ltmp2869            #   Call between .Ltmp2869 and .Ltmp2871
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2871-.Lfunc_begin49       # >> Call Site 10 <<
	.uleb128 .Ltmp2876-.Ltmp2871            #   Call between .Ltmp2871 and .Ltmp2876
	.uleb128 .Ltmp2877-.Lfunc_begin49       #     jumps to .Ltmp2877
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2865-.Lfunc_begin49       # >> Call Site 11 <<
	.uleb128 .Ltmp2866-.Ltmp2865            #   Call between .Ltmp2865 and .Ltmp2866
	.uleb128 .Ltmp2867-.Lfunc_begin49       #     jumps to .Ltmp2867
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2866-.Lfunc_begin49       # >> Call Site 12 <<
	.uleb128 .Lfunc_end81-.Ltmp2866         #   Call between .Ltmp2866 and .Lfunc_end81
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end49:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser12get_bool_intEPKcPiRKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser12get_bool_intEPKcPiRKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser12get_bool_intEPKcPiRKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser12get_bool_intEPKcPiRKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser12get_bool_intEPKcPiRKSt6vectorIiSaIiEEb
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	addi.d	$s5, $sp, 24
	st.d	$s5, $sp, 8
	beqz	$a1, .LBB82_11
# %bb.1:
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s3, $a1
	move	$s2, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 40
	move	$a0, $s5
	bltu	$s4, $a1, .LBB82_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB82_3:                               # %._crit_edge.i.i
	beqz	$s4, .LBB82_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB82_6
# %bb.5:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB82_7
.LBB82_6:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB82_7:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
.Ltmp2878:
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEEb)
	jirl	$ra, $ra, 0
.Ltmp2879:
# %bb.8:
	ld.d	$a0, $sp, 8
	beq	$a0, $s5, .LBB82_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB82_11:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB82_12:
.Ltmp2880:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s5, .LBB82_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end82:
	.size	_ZN2PP11PowerParser12get_bool_intEPKcPiRKSt6vectorIiSaIiEEb, .Lfunc_end82-_ZN2PP11PowerParser12get_bool_intEPKcPiRKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table82:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Lfunc_begin50-.Lfunc_begin50  # >> Call Site 1 <<
	.uleb128 .Ltmp2878-.Lfunc_begin50       #   Call between .Lfunc_begin50 and .Ltmp2878
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2878-.Lfunc_begin50       # >> Call Site 2 <<
	.uleb128 .Ltmp2879-.Ltmp2878            #   Call between .Ltmp2878 and .Ltmp2879
	.uleb128 .Ltmp2880-.Lfunc_begin50       #     jumps to .Ltmp2880
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2879-.Lfunc_begin50       # >> Call Site 3 <<
	.uleb128 .Lfunc_end82-.Ltmp2879         #   Call between .Ltmp2879 and .Lfunc_end82
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	addi.d	$sp, $sp, -656
	.cfi_def_cfa_offset 656
	st.d	$ra, $sp, 648                   # 8-byte Folded Spill
	st.d	$fp, $sp, 640                   # 8-byte Folded Spill
	st.d	$s0, $sp, 632                   # 8-byte Folded Spill
	st.d	$s1, $sp, 624                   # 8-byte Folded Spill
	st.d	$s2, $sp, 616                   # 8-byte Folded Spill
	st.d	$s3, $sp, 608                   # 8-byte Folded Spill
	st.d	$s4, $sp, 600                   # 8-byte Folded Spill
	st.d	$s5, $sp, 592                   # 8-byte Folded Spill
	st.d	$s6, $sp, 584                   # 8-byte Folded Spill
	st.d	$s7, $sp, 576                   # 8-byte Folded Spill
	st.d	$s8, $sp, 568                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a3, 8
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a3, $a3, 0
	sub.d	$a5, $a5, $a3
	srai.d	$a5, $a5, 2
	addi.w	$a6, $a5, 0
	st.d	$a4, $sp, 40                    # 8-byte Folded Spill
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	move	$s3, $a1
	move	$s0, $a0
	blez	$a6, .LBB83_3
# %bb.1:                                # %.lr.ph.preheader
	bstrpick.d	$a0, $a5, 30, 0
	ori	$a1, $zero, 8
	bgeu	$a0, $a1, .LBB83_4
# %bb.2:
	move	$a1, $zero
	ori	$fp, $zero, 1
	b	.LBB83_7
.LBB83_3:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i.thread
	ori	$fp, $zero, 1
	b	.LBB83_11
.LBB83_4:                               # %vector.ph
	bstrpick.d	$a1, $a5, 30, 3
	slli.d	$a1, $a1, 3
	vrepli.w	$vr0, 1
	addi.d	$a2, $a3, 16
	move	$a4, $a1
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB83_5:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a2, -16
	vld	$vr3, $a2, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a4, $a4, -8
	addi.d	$a2, $a2, 32
	bnez	$a4, .LBB83_5
# %bb.6:                                # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$fp, $vr0, 0
	beq	$a0, $a1, .LBB83_9
.LBB83_7:                               # %.lr.ph.preheader91
	alsl.d	$a2, $a1, $a3, 2
	sub.d	$a0, $a0, $a1
	.p2align	4, , 16
.LBB83_8:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a2, 0
	mul.w	$fp, $a1, $fp
	addi.d	$a0, $a0, -1
	addi.d	$a2, $a2, 4
	bnez	$a0, .LBB83_8
.LBB83_9:                               # %._crit_edge
	bltz	$fp, .LBB83_62
# %bb.10:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	beqz	$fp, .LBB83_16
.LBB83_11:                              # %.lr.ph.preheader.i.i.i.i.i
	slli.d	$s4, $fp, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 536
	alsl.d	$s1, $fp, $a0, 2
	st.d	$s1, $sp, 552
	move	$a1, $zero
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 544
	slli.d	$s5, $fp, 3
.Ltmp2881:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2882:
# %bb.12:                               # %.noexc40
	st.d	$a0, $sp, 512
	alsl.d	$a1, $fp, $a0, 3
	st.d	$a1, $sp, 528
	st.d	$zero, $a0, 0
	ori	$a2, $zero, 1
	addi.d	$a1, $a0, 8
	beq	$fp, $a2, .LBB83_14
# %bb.13:                               # %.lr.ph.i.preheader.i.i.i.i.i
	add.d	$s1, $a0, $s5
	addi.d	$a2, $s5, -8
	move	$a0, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a1, $s1
.LBB83_14:                              # %.lr.ph.preheader.i.i.i.i.i43
	st.d	$a1, $sp, 520
.Ltmp2884:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2885:
# %bb.15:                               # %.noexc52
	move	$s5, $a0
	st.d	$a0, $sp, 488
	alsl.d	$a0, $fp, $a0, 2
	st.d	$a0, $sp, 504
	ori	$a1, $zero, 255
	move	$a0, $s5
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s5, $s4
	b	.LBB83_17
.LBB83_16:                              # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i50
	move	$a0, $zero
	st.d	$zero, $sp, 552
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 536
	st.d	$zero, $sp, 528
	vst	$vr0, $sp, 512
	st.d	$zero, $sp, 504
	vst	$vr0, $sp, 488
.LBB83_17:                              # %.loopexit
	st.d	$a0, $sp, 496
	st.w	$zero, $sp, 484
.Ltmp2887:
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2888:
# %bb.18:                               # %.preheader
	move	$s8, $zero
	move	$s4, $zero
	addi.d	$s7, $sp, 72
	addi.d	$a0, $s0, 992
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s1, $a0, -1973
	ori	$s2, $zero, 16
	addi.w	$fp, $zero, -1
	b	.LBB83_22
.LBB83_19:                              #   in Loop: Header=BB83_22 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB83_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a0, $sp, 56
	st.d	$a0, $s5, 8
	ld.d	$a0, $s0, 1040
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 1040
.LBB83_21:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB83_22 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s8, $s8, 432
.LBB83_22:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.w	$a3, $a3, $a4
	bge	$s4, $a3, .LBB83_52
# %bb.23:                               #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s1
	add.d	$a1, $s4, $a1
	beqz	$a1, .LBB83_25
# %bb.24:                               #   in Loop: Header=BB83_22 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB83_26
	.p2align	4, , 16
.LBB83_25:                              #   in Loop: Header=BB83_22 Depth=1
	add.d	$a0, $a2, $s8
.LBB83_26:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s5, $a0, 240
	st.d	$s7, $sp, 56
	st.d	$a1, $sp, 560
	move	$a0, $s7
	bltu	$a1, $s2, .LBB83_29
# %bb.27:                               # %.noexc.i.i
                                        #   in Loop: Header=BB83_22 Depth=1
.Ltmp2893:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 560
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2894:
# %bb.28:                               # %.noexc54
                                        #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a1, $sp, 560
	st.d	$a0, $sp, 56
	st.d	$a1, $sp, 72
.LBB83_29:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB83_22 Depth=1
	beq	$a1, $fp, .LBB83_32
# %bb.30:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB83_22 Depth=1
	bnez	$a1, .LBB83_35
# %bb.31:                               #   in Loop: Header=BB83_22 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
.LBB83_32:                              #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	bne	$a2, $a0, .LBB83_36
.LBB83_33:                              #   in Loop: Header=BB83_22 Depth=1
	ld.d	$s5, $sp, 56
	beqz	$a2, .LBB83_41
# %bb.34:                               #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a1, $s3, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	bne	$s5, $s7, .LBB83_37
	b	.LBB83_38
	.p2align	4, , 16
.LBB83_35:                              #   in Loop: Header=BB83_22 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	beq	$a2, $a0, .LBB83_33
.LBB83_36:                              # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB83_22 Depth=1
	ld.d	$s5, $sp, 56
	move	$s6, $zero
	beq	$s5, $s7, .LBB83_38
.LBB83_37:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB83_22 Depth=1
	beqz	$s6, .LBB83_21
# %bb.39:                               #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a0, $s0, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s1
	add.d	$a2, $s4, $a2
	beqz	$a2, .LBB83_42
# %bb.40:                               #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB83_43
.LBB83_41:                              #   in Loop: Header=BB83_22 Depth=1
	ori	$s6, $zero, 1
	bne	$s5, $s7, .LBB83_37
	b	.LBB83_38
.LBB83_42:                              #   in Loop: Header=BB83_22 Depth=1
	add.d	$a0, $a1, $s8
.LBB83_43:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit56
                                        #   in Loop: Header=BB83_22 Depth=1
	ldptr.w	$a6, $s0, 2792
.Ltmp2896:
	addi.d	$a1, $sp, 484
	st.d	$a1, $sp, 16
	addi.d	$a1, $sp, 88
	st.d	$a1, $sp, 8
	addi.d	$a4, $sp, 512
	addi.d	$a5, $sp, 488
	addi.d	$a7, $sp, 536
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.d	$a1, $sp, 0
	move	$a1, $s3
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp2897:
# %bb.44:                               #   in Loop: Header=BB83_22 Depth=1
	ld.d	$a0, $s0, 1056
	ld.d	$s5, $s0, 1040
	addi.d	$a0, $a0, -32
	beq	$s5, $a0, .LBB83_51
# %bb.45:                               #   in Loop: Header=BB83_22 Depth=1
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $s3, 8
	ld.d	$s6, $s3, 0
	st.d	$a1, $sp, 56
	bltu	$a1, $s2, .LBB83_48
# %bb.46:                               # %.noexc.i.i58
                                        #   in Loop: Header=BB83_22 Depth=1
.Ltmp2898:
	addi.d	$a1, $sp, 56
	move	$a0, $s5
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2899:
# %bb.47:                               # %.noexc59
                                        #   in Loop: Header=BB83_22 Depth=1
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 56
	st.d	$a1, $s5, 16
.LBB83_48:                              # %._crit_edge.i.i.i57
                                        #   in Loop: Header=BB83_22 Depth=1
	beq	$a1, $fp, .LBB83_20
# %bb.49:                               # %._crit_edge.i.i.i57
                                        #   in Loop: Header=BB83_22 Depth=1
	bnez	$a1, .LBB83_19
# %bb.50:                               #   in Loop: Header=BB83_22 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB83_20
.LBB83_51:                              #   in Loop: Header=BB83_22 Depth=1
.Ltmp2900:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2901:
	b	.LBB83_21
.LBB83_52:
.Ltmp2890:
	addi.d	$a1, $sp, 88
	addi.d	$a2, $sp, 484
	addi.d	$s1, $sp, 88
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2891:
# %bb.53:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s1
	ld.d	$a0, $sp, 184
	st.d	$a2, $sp, 104
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 200
	st.d	$a1, $sp, 112
	beq	$a0, $a2, .LBB83_55
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_55:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 88
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 96
	addi.d	$a0, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 488
	beqz	$a0, .LBB83_57
# %bb.56:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_57:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB83_59
# %bb.58:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_59:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB83_61
# %bb.60:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_61:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit63
	ld.d	$s8, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 600                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 608                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 616                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 624                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 632                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 640                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 648                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 656
	ret
.LBB83_62:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB83_63:
.Ltmp2886:
	move	$fp, $a0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB83_72
	b	.LBB83_75
.LBB83_64:
.Ltmp2883:
	move	$fp, $a0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB83_73
	b	.LBB83_76
.LBB83_65:
.Ltmp2892:
	b	.LBB83_69
.LBB83_66:
.Ltmp2889:
	move	$fp, $a0
	b	.LBB83_70
.LBB83_67:
.Ltmp2895:
	b	.LBB83_69
.LBB83_68:
.Ltmp2902:
.LBB83_69:
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB83_70:
	ld.d	$a0, $sp, 488
	bnez	$a0, .LBB83_74
# %bb.71:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit65
	ld.d	$a0, $sp, 512
	bnez	$a0, .LBB83_75
.LBB83_72:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit67
	ld.d	$a0, $sp, 536
	bnez	$a0, .LBB83_76
.LBB83_73:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit69
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB83_74:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB83_72
.LBB83_75:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB83_73
.LBB83_76:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end83:
	.size	_ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb, .Lfunc_end83-_ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table83:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Lfunc_begin51-.Lfunc_begin51  # >> Call Site 1 <<
	.uleb128 .Ltmp2881-.Lfunc_begin51       #   Call between .Lfunc_begin51 and .Ltmp2881
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2881-.Lfunc_begin51       # >> Call Site 2 <<
	.uleb128 .Ltmp2882-.Ltmp2881            #   Call between .Ltmp2881 and .Ltmp2882
	.uleb128 .Ltmp2883-.Lfunc_begin51       #     jumps to .Ltmp2883
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2882-.Lfunc_begin51       # >> Call Site 3 <<
	.uleb128 .Ltmp2884-.Ltmp2882            #   Call between .Ltmp2882 and .Ltmp2884
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2884-.Lfunc_begin51       # >> Call Site 4 <<
	.uleb128 .Ltmp2885-.Ltmp2884            #   Call between .Ltmp2884 and .Ltmp2885
	.uleb128 .Ltmp2886-.Lfunc_begin51       #     jumps to .Ltmp2886
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2885-.Lfunc_begin51       # >> Call Site 5 <<
	.uleb128 .Ltmp2887-.Ltmp2885            #   Call between .Ltmp2885 and .Ltmp2887
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2887-.Lfunc_begin51       # >> Call Site 6 <<
	.uleb128 .Ltmp2888-.Ltmp2887            #   Call between .Ltmp2887 and .Ltmp2888
	.uleb128 .Ltmp2889-.Lfunc_begin51       #     jumps to .Ltmp2889
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2888-.Lfunc_begin51       # >> Call Site 7 <<
	.uleb128 .Ltmp2893-.Ltmp2888            #   Call between .Ltmp2888 and .Ltmp2893
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2893-.Lfunc_begin51       # >> Call Site 8 <<
	.uleb128 .Ltmp2894-.Ltmp2893            #   Call between .Ltmp2893 and .Ltmp2894
	.uleb128 .Ltmp2895-.Lfunc_begin51       #     jumps to .Ltmp2895
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2894-.Lfunc_begin51       # >> Call Site 9 <<
	.uleb128 .Ltmp2896-.Ltmp2894            #   Call between .Ltmp2894 and .Ltmp2896
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2896-.Lfunc_begin51       # >> Call Site 10 <<
	.uleb128 .Ltmp2901-.Ltmp2896            #   Call between .Ltmp2896 and .Ltmp2901
	.uleb128 .Ltmp2902-.Lfunc_begin51       #     jumps to .Ltmp2902
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2890-.Lfunc_begin51       # >> Call Site 11 <<
	.uleb128 .Ltmp2891-.Ltmp2890            #   Call between .Ltmp2890 and .Ltmp2891
	.uleb128 .Ltmp2892-.Lfunc_begin51       #     jumps to .Ltmp2892
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2891-.Lfunc_begin51       # >> Call Site 12 <<
	.uleb128 .Lfunc_end83-.Ltmp2891         #   Call between .Ltmp2891 and .Lfunc_end83
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8get_boolEPKcPbRKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser8get_boolEPKcPbRKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser8get_boolEPKcPbRKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser8get_boolEPKcPbRKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser8get_boolEPKcPbRKSt6vectorIiSaIiEEb
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	addi.d	$s5, $sp, 24
	st.d	$s5, $sp, 8
	beqz	$a1, .LBB84_11
# %bb.1:
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s3, $a1
	move	$s2, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 40
	move	$a0, $s5
	bltu	$s4, $a1, .LBB84_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB84_3:                               # %._crit_edge.i.i
	beqz	$s4, .LBB84_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB84_6
# %bb.5:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB84_7
.LBB84_6:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB84_7:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
.Ltmp2903:
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEEb)
	jirl	$ra, $ra, 0
.Ltmp2904:
# %bb.8:
	ld.d	$a0, $sp, 8
	beq	$a0, $s5, .LBB84_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB84_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB84_11:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB84_12:
.Ltmp2905:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s5, .LBB84_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB84_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end84:
	.size	_ZN2PP11PowerParser8get_boolEPKcPbRKSt6vectorIiSaIiEEb, .Lfunc_end84-_ZN2PP11PowerParser8get_boolEPKcPbRKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table84:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp2903-.Lfunc_begin52       #   Call between .Lfunc_begin52 and .Ltmp2903
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2903-.Lfunc_begin52       # >> Call Site 2 <<
	.uleb128 .Ltmp2904-.Ltmp2903            #   Call between .Ltmp2903 and .Ltmp2904
	.uleb128 .Ltmp2905-.Lfunc_begin52       #     jumps to .Ltmp2905
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2904-.Lfunc_begin52       # >> Call Site 3 <<
	.uleb128 .Lfunc_end84-.Ltmp2904         #   Call between .Ltmp2904 and .Lfunc_end84
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	addi.d	$sp, $sp, -656
	.cfi_def_cfa_offset 656
	st.d	$ra, $sp, 648                   # 8-byte Folded Spill
	st.d	$fp, $sp, 640                   # 8-byte Folded Spill
	st.d	$s0, $sp, 632                   # 8-byte Folded Spill
	st.d	$s1, $sp, 624                   # 8-byte Folded Spill
	st.d	$s2, $sp, 616                   # 8-byte Folded Spill
	st.d	$s3, $sp, 608                   # 8-byte Folded Spill
	st.d	$s4, $sp, 600                   # 8-byte Folded Spill
	st.d	$s5, $sp, 592                   # 8-byte Folded Spill
	st.d	$s6, $sp, 584                   # 8-byte Folded Spill
	st.d	$s7, $sp, 576                   # 8-byte Folded Spill
	st.d	$s8, $sp, 568                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a3, 8
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a3, $a3, 0
	sub.d	$a5, $a5, $a3
	srai.d	$a5, $a5, 2
	addi.w	$a6, $a5, 0
	st.d	$a4, $sp, 40                    # 8-byte Folded Spill
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	move	$s3, $a1
	move	$s0, $a0
	blez	$a6, .LBB85_3
# %bb.1:                                # %.lr.ph.preheader
	bstrpick.d	$a0, $a5, 30, 0
	ori	$a1, $zero, 8
	bgeu	$a0, $a1, .LBB85_4
# %bb.2:
	move	$a1, $zero
	ori	$fp, $zero, 1
	b	.LBB85_7
.LBB85_3:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i.thread
	ori	$fp, $zero, 1
	b	.LBB85_11
.LBB85_4:                               # %vector.ph
	bstrpick.d	$a1, $a5, 30, 3
	slli.d	$a1, $a1, 3
	vrepli.w	$vr0, 1
	addi.d	$a2, $a3, 16
	move	$a4, $a1
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB85_5:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a2, -16
	vld	$vr3, $a2, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a4, $a4, -8
	addi.d	$a2, $a2, 32
	bnez	$a4, .LBB85_5
# %bb.6:                                # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$fp, $vr0, 0
	beq	$a0, $a1, .LBB85_9
.LBB85_7:                               # %.lr.ph.preheader99
	alsl.d	$a2, $a1, $a3, 2
	sub.d	$a0, $a0, $a1
	.p2align	4, , 16
.LBB85_8:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a2, 0
	mul.w	$fp, $a1, $fp
	addi.d	$a0, $a0, -1
	addi.d	$a2, $a2, 4
	bnez	$a0, .LBB85_8
.LBB85_9:                               # %._crit_edge
	bltz	$fp, .LBB85_66
# %bb.10:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	beqz	$fp, .LBB85_16
.LBB85_11:                              # %.lr.ph.preheader.i.i.i.i.i
	slli.d	$s4, $fp, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 536
	alsl.d	$s1, $fp, $a0, 2
	st.d	$s1, $sp, 552
	move	$a1, $zero
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 544
	slli.d	$s5, $fp, 3
.Ltmp2906:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2907:
# %bb.12:                               # %.noexc47
	st.d	$a0, $sp, 512
	alsl.d	$a1, $fp, $a0, 3
	st.d	$a1, $sp, 528
	st.d	$zero, $a0, 0
	ori	$a2, $zero, 1
	addi.d	$a1, $a0, 8
	beq	$fp, $a2, .LBB85_14
# %bb.13:                               # %.lr.ph.i.preheader.i.i.i.i.i
	add.d	$s1, $a0, $s5
	addi.d	$a2, $s5, -8
	move	$a0, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a1, $s1
.LBB85_14:                              # %.lr.ph.preheader.i.i.i.i.i50
	st.d	$a1, $sp, 520
.Ltmp2909:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2910:
# %bb.15:                               # %.noexc59
	move	$s5, $a0
	st.d	$a0, $sp, 488
	alsl.d	$a0, $fp, $a0, 2
	st.d	$a0, $sp, 504
	ori	$a1, $zero, 255
	move	$a0, $s5
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s5, $s4
	b	.LBB85_17
.LBB85_16:                              # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i57
	move	$a0, $zero
	st.d	$zero, $sp, 552
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 536
	st.d	$zero, $sp, 528
	vst	$vr0, $sp, 512
	st.d	$zero, $sp, 504
	vst	$vr0, $sp, 488
.LBB85_17:                              # %.loopexit
	st.d	$a0, $sp, 496
	st.w	$zero, $sp, 484
.Ltmp2912:
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2913:
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB85_22
# %bb.19:
	ld.d	$fp, $s3, 8
	beqz	$fp, .LBB85_22
# %bb.20:                               # %.lr.ph.i.preheader
	ld.d	$s1, $s3, 0
	.p2align	4, , 16
.LBB85_21:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s1, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s1, 0
	addi.d	$fp, $fp, -1
	addi.d	$s1, $s1, 1
	bnez	$fp, .LBB85_21
.LBB85_22:                              # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s7, $zero
	move	$s8, $zero
	addi.d	$s4, $sp, 72
	addi.d	$a0, $s0, 992
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s1, $a0, -1973
	ori	$s2, $zero, 16
	addi.w	$fp, $zero, -1
	b	.LBB85_26
.LBB85_23:                              #   in Loop: Header=BB85_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a0, $sp, 56
	st.d	$a0, $s5, 8
	ld.d	$a0, $s0, 1040
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 1040
.LBB85_25:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB85_26 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$s7, $s7, 432
.LBB85_26:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s1
	add.w	$a3, $a3, $a4
	bge	$s8, $a3, .LBB85_56
# %bb.27:                               #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s1
	add.d	$a1, $s8, $a1
	beqz	$a1, .LBB85_29
# %bb.28:                               #   in Loop: Header=BB85_26 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB85_30
	.p2align	4, , 16
.LBB85_29:                              #   in Loop: Header=BB85_26 Depth=1
	add.d	$a0, $a2, $s7
.LBB85_30:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s5, $a0, 240
	st.d	$s4, $sp, 56
	st.d	$a1, $sp, 560
	move	$a0, $s4
	bltu	$a1, $s2, .LBB85_33
# %bb.31:                               # %.noexc.i.i
                                        #   in Loop: Header=BB85_26 Depth=1
.Ltmp2918:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 560
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2919:
# %bb.32:                               # %.noexc61
                                        #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a1, $sp, 560
	st.d	$a0, $sp, 56
	st.d	$a1, $sp, 72
.LBB85_33:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB85_26 Depth=1
	beq	$a1, $fp, .LBB85_36
# %bb.34:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB85_26 Depth=1
	bnez	$a1, .LBB85_39
# %bb.35:                               #   in Loop: Header=BB85_26 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
.LBB85_36:                              #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	bne	$a2, $a0, .LBB85_40
.LBB85_37:                              #   in Loop: Header=BB85_26 Depth=1
	ld.d	$s5, $sp, 56
	beqz	$a2, .LBB85_45
# %bb.38:                               #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a1, $s3, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	bne	$s5, $s4, .LBB85_41
	b	.LBB85_42
	.p2align	4, , 16
.LBB85_39:                              #   in Loop: Header=BB85_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 560
	ld.d	$a0, $s3, 8
	st.d	$a2, $sp, 64
	beq	$a2, $a0, .LBB85_37
.LBB85_40:                              # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB85_26 Depth=1
	ld.d	$s5, $sp, 56
	move	$s6, $zero
	beq	$s5, $s4, .LBB85_42
.LBB85_41:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB85_26 Depth=1
	beqz	$s6, .LBB85_25
# %bb.43:                               #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a0, $s0, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s1
	add.d	$a2, $s8, $a2
	beqz	$a2, .LBB85_46
# %bb.44:                               #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB85_47
.LBB85_45:                              #   in Loop: Header=BB85_26 Depth=1
	ori	$s6, $zero, 1
	bne	$s5, $s4, .LBB85_41
	b	.LBB85_42
.LBB85_46:                              #   in Loop: Header=BB85_26 Depth=1
	add.d	$a0, $a1, $s7
.LBB85_47:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit63
                                        #   in Loop: Header=BB85_26 Depth=1
	ldptr.w	$a6, $s0, 2792
.Ltmp2921:
	addi.d	$a1, $sp, 484
	st.d	$a1, $sp, 16
	addi.d	$a1, $sp, 88
	st.d	$a1, $sp, 8
	addi.d	$a4, $sp, 512
	addi.d	$a5, $sp, 488
	addi.d	$a7, $sp, 536
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.d	$a1, $sp, 0
	move	$a1, $s3
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp2922:
# %bb.48:                               #   in Loop: Header=BB85_26 Depth=1
	ld.d	$a0, $s0, 1056
	ld.d	$s5, $s0, 1040
	addi.d	$a0, $a0, -32
	beq	$s5, $a0, .LBB85_55
# %bb.49:                               #   in Loop: Header=BB85_26 Depth=1
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $s3, 8
	ld.d	$s6, $s3, 0
	st.d	$a1, $sp, 56
	bltu	$a1, $s2, .LBB85_52
# %bb.50:                               # %.noexc.i.i66
                                        #   in Loop: Header=BB85_26 Depth=1
.Ltmp2923:
	addi.d	$a1, $sp, 56
	move	$a0, $s5
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2924:
# %bb.51:                               # %.noexc67
                                        #   in Loop: Header=BB85_26 Depth=1
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 56
	st.d	$a1, $s5, 16
.LBB85_52:                              # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB85_26 Depth=1
	beq	$a1, $fp, .LBB85_24
# %bb.53:                               # %._crit_edge.i.i.i65
                                        #   in Loop: Header=BB85_26 Depth=1
	bnez	$a1, .LBB85_23
# %bb.54:                               #   in Loop: Header=BB85_26 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB85_24
.LBB85_55:                              #   in Loop: Header=BB85_26 Depth=1
.Ltmp2925:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2926:
	b	.LBB85_25
.LBB85_56:
.Ltmp2915:
	addi.d	$a1, $sp, 88
	addi.d	$a2, $sp, 484
	addi.d	$s1, $sp, 88
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2916:
# %bb.57:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s1
	ld.d	$a0, $sp, 184
	st.d	$a2, $sp, 104
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 200
	st.d	$a1, $sp, 112
	beq	$a0, $a2, .LBB85_59
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_59:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 88
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 88
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 96
	addi.d	$a0, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 488
	beqz	$a0, .LBB85_61
# %bb.60:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_61:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB85_63
# %bb.62:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_63:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB85_65
# %bb.64:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_65:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit71
	ld.d	$s8, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 600                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 608                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 616                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 624                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 632                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 640                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 648                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 656
	ret
.LBB85_66:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB85_67:
.Ltmp2911:
	move	$fp, $a0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB85_76
	b	.LBB85_79
.LBB85_68:
.Ltmp2908:
	move	$fp, $a0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB85_77
	b	.LBB85_80
.LBB85_69:
.Ltmp2917:
	b	.LBB85_73
.LBB85_70:
.Ltmp2914:
	move	$fp, $a0
	b	.LBB85_74
.LBB85_71:
.Ltmp2920:
	b	.LBB85_73
.LBB85_72:
.Ltmp2927:
.LBB85_73:
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB85_74:
	ld.d	$a0, $sp, 488
	bnez	$a0, .LBB85_78
# %bb.75:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit73
	ld.d	$a0, $sp, 512
	bnez	$a0, .LBB85_79
.LBB85_76:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit75
	ld.d	$a0, $sp, 536
	bnez	$a0, .LBB85_80
.LBB85_77:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit77
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB85_78:
	ld.d	$a1, $sp, 504
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 512
	beqz	$a0, .LBB85_76
.LBB85_79:
	ld.d	$a1, $sp, 528
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 536
	beqz	$a0, .LBB85_77
.LBB85_80:
	ld.d	$a1, $sp, 552
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end85:
	.size	_ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb, .Lfunc_end85-_ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table85:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Lfunc_begin53-.Lfunc_begin53  # >> Call Site 1 <<
	.uleb128 .Ltmp2906-.Lfunc_begin53       #   Call between .Lfunc_begin53 and .Ltmp2906
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2906-.Lfunc_begin53       # >> Call Site 2 <<
	.uleb128 .Ltmp2907-.Ltmp2906            #   Call between .Ltmp2906 and .Ltmp2907
	.uleb128 .Ltmp2908-.Lfunc_begin53       #     jumps to .Ltmp2908
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2907-.Lfunc_begin53       # >> Call Site 3 <<
	.uleb128 .Ltmp2909-.Ltmp2907            #   Call between .Ltmp2907 and .Ltmp2909
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2909-.Lfunc_begin53       # >> Call Site 4 <<
	.uleb128 .Ltmp2910-.Ltmp2909            #   Call between .Ltmp2909 and .Ltmp2910
	.uleb128 .Ltmp2911-.Lfunc_begin53       #     jumps to .Ltmp2911
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2910-.Lfunc_begin53       # >> Call Site 5 <<
	.uleb128 .Ltmp2912-.Ltmp2910            #   Call between .Ltmp2910 and .Ltmp2912
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2912-.Lfunc_begin53       # >> Call Site 6 <<
	.uleb128 .Ltmp2913-.Ltmp2912            #   Call between .Ltmp2912 and .Ltmp2913
	.uleb128 .Ltmp2914-.Lfunc_begin53       #     jumps to .Ltmp2914
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2913-.Lfunc_begin53       # >> Call Site 7 <<
	.uleb128 .Ltmp2918-.Ltmp2913            #   Call between .Ltmp2913 and .Ltmp2918
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2918-.Lfunc_begin53       # >> Call Site 8 <<
	.uleb128 .Ltmp2919-.Ltmp2918            #   Call between .Ltmp2918 and .Ltmp2919
	.uleb128 .Ltmp2920-.Lfunc_begin53       #     jumps to .Ltmp2920
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2919-.Lfunc_begin53       # >> Call Site 9 <<
	.uleb128 .Ltmp2921-.Ltmp2919            #   Call between .Ltmp2919 and .Ltmp2921
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2921-.Lfunc_begin53       # >> Call Site 10 <<
	.uleb128 .Ltmp2926-.Ltmp2921            #   Call between .Ltmp2921 and .Ltmp2926
	.uleb128 .Ltmp2927-.Lfunc_begin53       #     jumps to .Ltmp2927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2915-.Lfunc_begin53       # >> Call Site 11 <<
	.uleb128 .Ltmp2916-.Ltmp2915            #   Call between .Ltmp2915 and .Ltmp2916
	.uleb128 .Ltmp2917-.Lfunc_begin53       #     jumps to .Ltmp2917
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2916-.Lfunc_begin53       # >> Call Site 12 <<
	.uleb128 .Lfunc_end85-.Ltmp2916         #   Call between .Ltmp2916 and .Lfunc_end85
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8get_realEPKcPdRKSt6vectorIiSaIiEEb # -- Begin function _ZN2PP11PowerParser8get_realEPKcPdRKSt6vectorIiSaIiEEb
	.p2align	5
	.type	_ZN2PP11PowerParser8get_realEPKcPdRKSt6vectorIiSaIiEEb,@function
_ZN2PP11PowerParser8get_realEPKcPdRKSt6vectorIiSaIiEEb: # @_ZN2PP11PowerParser8get_realEPKcPdRKSt6vectorIiSaIiEEb
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	addi.d	$s5, $sp, 24
	st.d	$s5, $sp, 8
	beqz	$a1, .LBB86_11
# %bb.1:
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s3, $a1
	move	$s2, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 40
	move	$a0, $s5
	bltu	$s4, $a1, .LBB86_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB86_3:                               # %._crit_edge.i.i
	beqz	$s4, .LBB86_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB86_6
# %bb.5:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB86_7
.LBB86_6:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB86_7:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
.Ltmp2928:
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEEb)
	jirl	$ra, $ra, 0
.Ltmp2929:
# %bb.8:
	ld.d	$a0, $sp, 8
	beq	$a0, $s5, .LBB86_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB86_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB86_11:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB86_12:
.Ltmp2930:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s5, .LBB86_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB86_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end86:
	.size	_ZN2PP11PowerParser8get_realEPKcPdRKSt6vectorIiSaIiEEb, .Lfunc_end86-_ZN2PP11PowerParser8get_realEPKcPdRKSt6vectorIiSaIiEEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table86:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54  # >> Call Site 1 <<
	.uleb128 .Ltmp2928-.Lfunc_begin54       #   Call between .Lfunc_begin54 and .Ltmp2928
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2928-.Lfunc_begin54       # >> Call Site 2 <<
	.uleb128 .Ltmp2929-.Ltmp2928            #   Call between .Ltmp2928 and .Ltmp2929
	.uleb128 .Ltmp2930-.Lfunc_begin54       #     jumps to .Ltmp2930
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2929-.Lfunc_begin54       # >> Call Site 3 <<
	.uleb128 .Lfunc_end86-.Ltmp2929         #   Call between .Ltmp2929 and .Lfunc_end86
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb # -- Begin function _ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb
	.p2align	5
	.type	_ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb,@function
_ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb: # @_ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	addi.d	$sp, $sp, -672
	.cfi_def_cfa_offset 672
	st.d	$ra, $sp, 664                   # 8-byte Folded Spill
	st.d	$fp, $sp, 656                   # 8-byte Folded Spill
	st.d	$s0, $sp, 648                   # 8-byte Folded Spill
	st.d	$s1, $sp, 640                   # 8-byte Folded Spill
	st.d	$s2, $sp, 632                   # 8-byte Folded Spill
	st.d	$s3, $sp, 624                   # 8-byte Folded Spill
	st.d	$s4, $sp, 616                   # 8-byte Folded Spill
	st.d	$s5, $sp, 608                   # 8-byte Folded Spill
	st.d	$s6, $sp, 600                   # 8-byte Folded Spill
	st.d	$s7, $sp, 592                   # 8-byte Folded Spill
	st.d	$s8, $sp, 584                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a6, $a3, 8
	st.d	$a3, $sp, 64                    # 8-byte Folded Spill
	ld.d	$a3, $a3, 0
	sub.d	$a6, $a6, $a3
	srai.d	$a6, $a6, 2
	addi.w	$a7, $a6, 0
	st.d	$a5, $sp, 56                    # 8-byte Folded Spill
	st.d	$a4, $sp, 48                    # 8-byte Folded Spill
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	move	$s4, $a1
	move	$s0, $a0
	blez	$a7, .LBB87_3
# %bb.1:                                # %.lr.ph.preheader
	bstrpick.d	$a0, $a6, 30, 0
	ori	$a1, $zero, 8
	bgeu	$a0, $a1, .LBB87_4
# %bb.2:
	move	$a1, $zero
	ori	$fp, $zero, 1
	b	.LBB87_7
.LBB87_3:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i.thread
	ori	$fp, $zero, 1
	b	.LBB87_11
.LBB87_4:                               # %vector.ph
	bstrpick.d	$a1, $a6, 30, 3
	slli.d	$a1, $a1, 3
	vrepli.w	$vr0, 1
	addi.d	$a2, $a3, 16
	move	$a4, $a1
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB87_5:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a2, -16
	vld	$vr3, $a2, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a4, $a4, -8
	addi.d	$a2, $a2, 32
	bnez	$a4, .LBB87_5
# %bb.6:                                # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$fp, $vr0, 0
	beq	$a0, $a1, .LBB87_9
.LBB87_7:                               # %.lr.ph.preheader100
	alsl.d	$a2, $a1, $a3, 2
	sub.d	$a0, $a0, $a1
	.p2align	4, , 16
.LBB87_8:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a2, 0
	mul.w	$fp, $a1, $fp
	addi.d	$a0, $a0, -1
	addi.d	$a2, $a2, 4
	bnez	$a0, .LBB87_8
.LBB87_9:                               # %._crit_edge
	bltz	$fp, .LBB87_66
# %bb.10:                               # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	beqz	$fp, .LBB87_16
.LBB87_11:                              # %.lr.ph.preheader.i.i.i.i.i
	slli.d	$s5, $fp, 2
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 552
	alsl.d	$s1, $fp, $a0, 2
	st.d	$s1, $sp, 568
	move	$a1, $zero
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 560
	slli.d	$s6, $fp, 3
.Ltmp2931:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2932:
# %bb.12:                               # %.noexc48
	st.d	$a0, $sp, 528
	alsl.d	$a1, $fp, $a0, 3
	st.d	$a1, $sp, 544
	st.d	$zero, $a0, 0
	ori	$a2, $zero, 1
	addi.d	$a1, $a0, 8
	beq	$fp, $a2, .LBB87_14
# %bb.13:                               # %.lr.ph.i.preheader.i.i.i.i.i
	add.d	$s1, $a0, $s6
	addi.d	$a2, $s6, -8
	move	$a0, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a1, $s1
.LBB87_14:                              # %.lr.ph.preheader.i.i.i.i.i51
	st.d	$a1, $sp, 536
.Ltmp2934:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2935:
# %bb.15:                               # %.noexc60
	move	$s6, $a0
	st.d	$a0, $sp, 504
	alsl.d	$a0, $fp, $a0, 2
	st.d	$a0, $sp, 520
	ori	$a1, $zero, 255
	move	$a0, $s6
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s6, $s5
	b	.LBB87_17
.LBB87_16:                              # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i58
	move	$a0, $zero
	st.d	$zero, $sp, 568
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 552
	st.d	$zero, $sp, 544
	vst	$vr0, $sp, 528
	st.d	$zero, $sp, 520
	vst	$vr0, $sp, 504
.LBB87_17:                              # %.loopexit
	st.d	$a0, $sp, 512
	st.w	$zero, $sp, 500
.Ltmp2937:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2938:
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB87_22
# %bb.19:
	ld.d	$fp, $s4, 8
	beqz	$fp, .LBB87_22
# %bb.20:                               # %.lr.ph.i.preheader
	ld.d	$s1, $s4, 0
	.p2align	4, , 16
.LBB87_21:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s1, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s1, 0
	addi.d	$fp, $fp, -1
	addi.d	$s1, $s1, 1
	bnez	$fp, .LBB87_21
.LBB87_22:                              # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s8, $zero
	move	$s5, $zero
	addi.d	$s1, $sp, 88
	addi.d	$a0, $s0, 992
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s2, $a0, -1973
	ori	$s3, $zero, 16
	addi.w	$fp, $zero, -1
	b	.LBB87_26
.LBB87_23:                              #   in Loop: Header=BB87_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB87_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a0, $sp, 72
	st.d	$a0, $s6, 8
	ld.d	$a0, $s0, 1040
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 1040
.LBB87_25:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB87_26 Depth=1
	addi.d	$s5, $s5, 1
	addi.d	$s8, $s8, 432
.LBB87_26:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s2
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s2
	add.w	$a3, $a3, $a4
	bge	$s5, $a3, .LBB87_56
# %bb.27:                               #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s2
	add.d	$a1, $s5, $a1
	beqz	$a1, .LBB87_29
# %bb.28:                               #   in Loop: Header=BB87_26 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB87_30
	.p2align	4, , 16
.LBB87_29:                              #   in Loop: Header=BB87_26 Depth=1
	add.d	$a0, $a2, $s8
.LBB87_30:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s6, $a0, 240
	st.d	$s1, $sp, 72
	st.d	$a1, $sp, 576
	move	$a0, $s1
	bltu	$a1, $s3, .LBB87_33
# %bb.31:                               # %.noexc.i.i
                                        #   in Loop: Header=BB87_26 Depth=1
.Ltmp2943:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 576
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2944:
# %bb.32:                               # %.noexc62
                                        #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a1, $sp, 576
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB87_33:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB87_26 Depth=1
	beq	$a1, $fp, .LBB87_36
# %bb.34:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB87_26 Depth=1
	bnez	$a1, .LBB87_39
# %bb.35:                               #   in Loop: Header=BB87_26 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
.LBB87_36:                              #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a2, $sp, 576
	ld.d	$a0, $s4, 8
	st.d	$a2, $sp, 80
	bne	$a2, $a0, .LBB87_40
.LBB87_37:                              #   in Loop: Header=BB87_26 Depth=1
	ld.d	$s6, $sp, 72
	beqz	$a2, .LBB87_45
# %bb.38:                               #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a1, $s4, 0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s7, $a0, 1
	bne	$s6, $s1, .LBB87_41
	b	.LBB87_42
	.p2align	4, , 16
.LBB87_39:                              #   in Loop: Header=BB87_26 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 576
	ld.d	$a0, $s4, 8
	st.d	$a2, $sp, 80
	beq	$a2, $a0, .LBB87_37
.LBB87_40:                              # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB87_26 Depth=1
	ld.d	$s6, $sp, 72
	move	$s7, $zero
	beq	$s6, $s1, .LBB87_42
.LBB87_41:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a0, $sp, 88
	addi.d	$a1, $a0, 1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB87_26 Depth=1
	beqz	$s7, .LBB87_25
# %bb.43:                               #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a0, $s0, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s2
	add.d	$a2, $s5, $a2
	beqz	$a2, .LBB87_46
# %bb.44:                               #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB87_47
.LBB87_45:                              #   in Loop: Header=BB87_26 Depth=1
	ori	$s7, $zero, 1
	bne	$s6, $s1, .LBB87_41
	b	.LBB87_42
.LBB87_46:                              #   in Loop: Header=BB87_26 Depth=1
	add.d	$a0, $a1, $s8
.LBB87_47:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit64
                                        #   in Loop: Header=BB87_26 Depth=1
	ldptr.w	$a7, $s0, 2792
.Ltmp2946:
	addi.d	$a1, $sp, 500
	st.d	$a1, $sp, 24
	addi.d	$a1, $sp, 104
	st.d	$a1, $sp, 16
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	st.d	$a1, $sp, 8
	addi.d	$a5, $sp, 528
	addi.d	$a6, $sp, 504
	addi.d	$a1, $sp, 552
	st.d	$a1, $sp, 0
	move	$a1, $s4
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp2947:
# %bb.48:                               #   in Loop: Header=BB87_26 Depth=1
	ld.d	$a0, $s0, 1056
	ld.d	$s6, $s0, 1040
	addi.d	$a0, $a0, -32
	beq	$s6, $a0, .LBB87_55
# %bb.49:                               #   in Loop: Header=BB87_26 Depth=1
	addi.d	$a0, $s6, 16
	st.d	$a0, $s6, 0
	ld.d	$a1, $s4, 8
	ld.d	$s7, $s4, 0
	st.d	$a1, $sp, 72
	bltu	$a1, $s3, .LBB87_52
# %bb.50:                               # %.noexc.i.i67
                                        #   in Loop: Header=BB87_26 Depth=1
.Ltmp2948:
	addi.d	$a1, $sp, 72
	move	$a0, $s6
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2949:
# %bb.51:                               # %.noexc68
                                        #   in Loop: Header=BB87_26 Depth=1
	st.d	$a0, $s6, 0
	ld.d	$a1, $sp, 72
	st.d	$a1, $s6, 16
.LBB87_52:                              # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB87_26 Depth=1
	beq	$a1, $fp, .LBB87_24
# %bb.53:                               # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB87_26 Depth=1
	bnez	$a1, .LBB87_23
# %bb.54:                               #   in Loop: Header=BB87_26 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB87_24
.LBB87_55:                              #   in Loop: Header=BB87_26 Depth=1
.Ltmp2950:
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2951:
	b	.LBB87_25
.LBB87_56:
.Ltmp2940:
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 500
	addi.d	$s1, $sp, 104
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2941:
# %bb.57:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 104
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s1
	ld.d	$a0, $sp, 200
	st.d	$a2, $sp, 120
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 216
	st.d	$a1, $sp, 128
	beq	$a0, $a2, .LBB87_59
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_59:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 128
	addi.d	$a0, $sp, 184
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 104
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 104
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 112
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 504
	beqz	$a0, .LBB87_61
# %bb.60:
	ld.d	$a1, $sp, 520
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_61:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 528
	beqz	$a0, .LBB87_63
# %bb.62:
	ld.d	$a1, $sp, 544
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_63:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit
	ld.d	$a0, $sp, 552
	beqz	$a0, .LBB87_65
# %bb.64:
	ld.d	$a1, $sp, 568
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_65:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit72
	ld.d	$s8, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 600                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 608                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 616                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 624                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 632                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 640                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 648                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 656                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 664                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 672
	ret
.LBB87_66:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a0, $a0, %pc_lo12(.L.str.240)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB87_67:
.Ltmp2936:
	move	$fp, $a0
	ld.d	$a0, $sp, 528
	beqz	$a0, .LBB87_76
	b	.LBB87_79
.LBB87_68:
.Ltmp2933:
	move	$fp, $a0
	ld.d	$a0, $sp, 552
	beqz	$a0, .LBB87_77
	b	.LBB87_80
.LBB87_69:
.Ltmp2942:
	b	.LBB87_73
.LBB87_70:
.Ltmp2939:
	move	$fp, $a0
	b	.LBB87_74
.LBB87_71:
.Ltmp2945:
	b	.LBB87_73
.LBB87_72:
.Ltmp2952:
.LBB87_73:
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB87_74:
	ld.d	$a0, $sp, 504
	bnez	$a0, .LBB87_78
# %bb.75:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit74
	ld.d	$a0, $sp, 528
	bnez	$a0, .LBB87_79
.LBB87_76:                              # %_ZNSt6vectorIPN2PP3CmdESaIS2_EED2Ev.exit76
	ld.d	$a0, $sp, 552
	bnez	$a0, .LBB87_80
.LBB87_77:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit78
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB87_78:
	ld.d	$a1, $sp, 520
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 528
	beqz	$a0, .LBB87_76
.LBB87_79:
	ld.d	$a1, $sp, 544
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 552
	beqz	$a0, .LBB87_77
.LBB87_80:
	ld.d	$a1, $sp, 568
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end87:
	.size	_ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb, .Lfunc_end87-_ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table87:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55  # >> Call Site 1 <<
	.uleb128 .Ltmp2931-.Lfunc_begin55       #   Call between .Lfunc_begin55 and .Ltmp2931
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2931-.Lfunc_begin55       # >> Call Site 2 <<
	.uleb128 .Ltmp2932-.Ltmp2931            #   Call between .Ltmp2931 and .Ltmp2932
	.uleb128 .Ltmp2933-.Lfunc_begin55       #     jumps to .Ltmp2933
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2932-.Lfunc_begin55       # >> Call Site 3 <<
	.uleb128 .Ltmp2934-.Ltmp2932            #   Call between .Ltmp2932 and .Ltmp2934
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2934-.Lfunc_begin55       # >> Call Site 4 <<
	.uleb128 .Ltmp2935-.Ltmp2934            #   Call between .Ltmp2934 and .Ltmp2935
	.uleb128 .Ltmp2936-.Lfunc_begin55       #     jumps to .Ltmp2936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2935-.Lfunc_begin55       # >> Call Site 5 <<
	.uleb128 .Ltmp2937-.Ltmp2935            #   Call between .Ltmp2935 and .Ltmp2937
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2937-.Lfunc_begin55       # >> Call Site 6 <<
	.uleb128 .Ltmp2938-.Ltmp2937            #   Call between .Ltmp2937 and .Ltmp2938
	.uleb128 .Ltmp2939-.Lfunc_begin55       #     jumps to .Ltmp2939
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2938-.Lfunc_begin55       # >> Call Site 7 <<
	.uleb128 .Ltmp2943-.Ltmp2938            #   Call between .Ltmp2938 and .Ltmp2943
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2943-.Lfunc_begin55       # >> Call Site 8 <<
	.uleb128 .Ltmp2944-.Ltmp2943            #   Call between .Ltmp2943 and .Ltmp2944
	.uleb128 .Ltmp2945-.Lfunc_begin55       #     jumps to .Ltmp2945
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2944-.Lfunc_begin55       # >> Call Site 9 <<
	.uleb128 .Ltmp2946-.Ltmp2944            #   Call between .Ltmp2944 and .Ltmp2946
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2946-.Lfunc_begin55       # >> Call Site 10 <<
	.uleb128 .Ltmp2951-.Ltmp2946            #   Call between .Ltmp2946 and .Ltmp2951
	.uleb128 .Ltmp2952-.Lfunc_begin55       #     jumps to .Ltmp2952
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2940-.Lfunc_begin55       # >> Call Site 11 <<
	.uleb128 .Ltmp2941-.Ltmp2940            #   Call between .Ltmp2940 and .Ltmp2941
	.uleb128 .Ltmp2942-.Lfunc_begin55       #     jumps to .Ltmp2942
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2941-.Lfunc_begin55       # >> Call Site 12 <<
	.uleb128 .Lfunc_end87-.Ltmp2941         #   Call between .Ltmp2941 and .Lfunc_end87
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8get_charEPKcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IiSaIiEEbb # -- Begin function _ZN2PP11PowerParser8get_charEPKcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IiSaIiEEbb
	.p2align	5
	.type	_ZN2PP11PowerParser8get_charEPKcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IiSaIiEEbb,@function
_ZN2PP11PowerParser8get_charEPKcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IiSaIiEEbb: # @_ZN2PP11PowerParser8get_charEPKcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IiSaIiEEbb
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	addi.d	$s6, $sp, 16
	st.d	$s6, $sp, 0
	beqz	$a1, .LBB88_11
# %bb.1:
	move	$fp, $a5
	move	$s0, $a4
	move	$s1, $a3
	move	$s2, $a2
	move	$s4, $a1
	move	$s3, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 32
	move	$a0, $s6
	bltu	$s5, $a1, .LBB88_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB88_3:                               # %._crit_edge.i.i
	beqz	$s5, .LBB88_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s5, $a1, .LBB88_6
# %bb.5:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB88_7
.LBB88_6:
	move	$a1, $s4
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB88_7:
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 0
	st.d	$a0, $sp, 8
	stx.b	$zero, $a1, $a0
.Ltmp2953:
	addi.d	$a1, $sp, 0
	move	$a0, $s3
	move	$a2, $s2
	move	$a3, $s1
	move	$a4, $s0
	move	$a5, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbb)
	jirl	$ra, $ra, 0
.Ltmp2954:
# %bb.8:
	ld.d	$a0, $sp, 0
	beq	$a0, $s6, .LBB88_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB88_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB88_11:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a0, $a0, %pc_lo12(.L.str.238)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB88_12:
.Ltmp2955:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s6, .LBB88_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB88_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end88:
	.size	_ZN2PP11PowerParser8get_charEPKcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IiSaIiEEbb, .Lfunc_end88-_ZN2PP11PowerParser8get_charEPKcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IiSaIiEEbb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table88:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Lfunc_begin56-.Lfunc_begin56  # >> Call Site 1 <<
	.uleb128 .Ltmp2953-.Lfunc_begin56       #   Call between .Lfunc_begin56 and .Ltmp2953
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2953-.Lfunc_begin56       # >> Call Site 2 <<
	.uleb128 .Ltmp2954-.Ltmp2953            #   Call between .Ltmp2953 and .Ltmp2954
	.uleb128 .Ltmp2955-.Lfunc_begin56       #     jumps to .Ltmp2955
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2954-.Lfunc_begin56       # >> Call Site 3 <<
	.uleb128 .Lfunc_end88-.Ltmp2954         #   Call between .Ltmp2954 and .Lfunc_end88
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end56:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser8get_sizeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE # -- Begin function _ZN2PP11PowerParser8get_sizeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE
	.p2align	5
	.type	_ZN2PP11PowerParser8get_sizeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE,@function
_ZN2PP11PowerParser8get_sizeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE: # @_ZN2PP11PowerParser8get_sizeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	addi.d	$sp, $sp, -544
	.cfi_def_cfa_offset 544
	st.d	$ra, $sp, 536                   # 8-byte Folded Spill
	st.d	$fp, $sp, 528                   # 8-byte Folded Spill
	st.d	$s0, $sp, 520                   # 8-byte Folded Spill
	st.d	$s1, $sp, 512                   # 8-byte Folded Spill
	st.d	$s2, $sp, 504                   # 8-byte Folded Spill
	st.d	$s3, $sp, 496                   # 8-byte Folded Spill
	st.d	$s4, $sp, 488                   # 8-byte Folded Spill
	st.d	$s5, $sp, 480                   # 8-byte Folded Spill
	st.d	$s6, $sp, 472                   # 8-byte Folded Spill
	st.d	$s7, $sp, 464                   # 8-byte Folded Spill
	st.d	$s8, $sp, 456                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	move	$s1, $a1
	move	$fp, $a0
	st.w	$zero, $sp, 444
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB89_4
# %bb.1:
	ld.d	$s2, $s1, 8
	beqz	$s2, .LBB89_4
# %bb.2:                                # %.lr.ph.i.preheader
	ld.d	$s0, $s1, 0
	.p2align	4, , 16
.LBB89_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s0, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s0, 0
	addi.d	$s2, $s2, -1
	addi.d	$s0, $s0, 1
	bnez	$s2, .LBB89_3
.LBB89_4:                               # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s5, $sp, 32
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s6, $a0, -1973
	ori	$s7, $zero, 16
	addi.w	$s8, $zero, -1
	b	.LBB89_8
	.p2align	4, , 16
.LBB89_5:                               #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
.LBB89_6:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit21
                                        #   in Loop: Header=BB89_8 Depth=1
.Ltmp2962:
	addi.d	$a2, $sp, 48
	addi.d	$a3, $sp, 444
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2963:
.LBB89_7:                               #   in Loop: Header=BB89_8 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 432
.LBB89_8:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s6
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s6
	add.w	$a3, $a3, $a4
	bge	$s4, $a3, .LBB89_28
# %bb.9:                                #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s6
	add.d	$a1, $s4, $a1
	beqz	$a1, .LBB89_11
# %bb.10:                               #   in Loop: Header=BB89_8 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB89_12
	.p2align	4, , 16
.LBB89_11:                              #   in Loop: Header=BB89_8 Depth=1
	add.d	$a0, $a2, $s3
.LBB89_12:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s2, $a0, 240
	st.d	$s5, $sp, 16
	st.d	$a1, $sp, 448
	move	$a0, $s5
	bltu	$a1, $s7, .LBB89_15
# %bb.13:                               # %.noexc.i.i
                                        #   in Loop: Header=BB89_8 Depth=1
.Ltmp2959:
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 448
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2960:
# %bb.14:                               # %.noexc
                                        #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a1, $sp, 448
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB89_15:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB89_8 Depth=1
	beq	$a1, $s8, .LBB89_18
# %bb.16:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB89_8 Depth=1
	bnez	$a1, .LBB89_21
# %bb.17:                               #   in Loop: Header=BB89_8 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB89_18:                              #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a2, $sp, 448
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 24
	bne	$a2, $a0, .LBB89_22
.LBB89_19:                              #   in Loop: Header=BB89_8 Depth=1
	ld.d	$s2, $sp, 16
	beqz	$a2, .LBB89_27
# %bb.20:                               #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a1, $s1, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	bne	$s2, $s5, .LBB89_23
	b	.LBB89_24
	.p2align	4, , 16
.LBB89_21:                              #   in Loop: Header=BB89_8 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 448
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 24
	beq	$a2, $a0, .LBB89_19
.LBB89_22:                              # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB89_8 Depth=1
	ld.d	$s2, $sp, 16
	move	$s0, $zero
	beq	$s2, $s5, .LBB89_24
.LBB89_23:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB89_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB89_8 Depth=1
	beqz	$s0, .LBB89_7
# %bb.25:                               #   in Loop: Header=BB89_8 Depth=1
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s6
	add.d	$a2, $s4, $a2
	bnez	$a2, .LBB89_5
# %bb.26:                               #   in Loop: Header=BB89_8 Depth=1
	add.d	$a0, $a1, $s3
	b	.LBB89_6
.LBB89_27:                              #   in Loop: Header=BB89_8 Depth=1
	ori	$s0, $zero, 1
	bne	$s2, $s5, .LBB89_23
	b	.LBB89_24
.LBB89_28:
.Ltmp2956:
	addi.d	$a1, $sp, 48
	addi.d	$a2, $sp, 444
	addi.d	$s0, $sp, 48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2957:
# %bb.29:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 48
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 144
	st.d	$a2, $sp, 64
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 160
	st.d	$a1, $sp, 72
	beq	$a0, $a2, .LBB89_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB89_31:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 72
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 48
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 48
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 56
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 488                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 520                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 528                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 536                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 544
	ret
.LBB89_32:
.Ltmp2958:
	b	.LBB89_35
.LBB89_33:
.Ltmp2961:
	b	.LBB89_35
.LBB89_34:
.Ltmp2964:
.LBB89_35:
	move	$fp, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end89:
	.size	_ZN2PP11PowerParser8get_sizeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE, .Lfunc_end89-_ZN2PP11PowerParser8get_sizeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table89:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Lfunc_begin57-.Lfunc_begin57  # >> Call Site 1 <<
	.uleb128 .Ltmp2962-.Lfunc_begin57       #   Call between .Lfunc_begin57 and .Ltmp2962
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2962-.Lfunc_begin57       # >> Call Site 2 <<
	.uleb128 .Ltmp2963-.Ltmp2962            #   Call between .Ltmp2962 and .Ltmp2963
	.uleb128 .Ltmp2964-.Lfunc_begin57       #     jumps to .Ltmp2964
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2959-.Lfunc_begin57       # >> Call Site 3 <<
	.uleb128 .Ltmp2960-.Ltmp2959            #   Call between .Ltmp2959 and .Ltmp2960
	.uleb128 .Ltmp2961-.Lfunc_begin57       #     jumps to .Ltmp2961
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2960-.Lfunc_begin57       # >> Call Site 4 <<
	.uleb128 .Ltmp2956-.Ltmp2960            #   Call between .Ltmp2960 and .Ltmp2956
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2956-.Lfunc_begin57       # >> Call Site 5 <<
	.uleb128 .Ltmp2957-.Ltmp2956            #   Call between .Ltmp2956 and .Ltmp2957
	.uleb128 .Ltmp2958-.Lfunc_begin57       #     jumps to .Ltmp2958
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2957-.Lfunc_begin57       # >> Call Site 6 <<
	.uleb128 .Lfunc_end89-.Ltmp2957         #   Call between .Ltmp2957 and .Lfunc_end89
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end57:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser9get_sizebERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE # -- Begin function _ZN2PP11PowerParser9get_sizebERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE
	.p2align	5
	.type	_ZN2PP11PowerParser9get_sizebERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE,@function
_ZN2PP11PowerParser9get_sizebERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE: # @_ZN2PP11PowerParser9get_sizebERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	addi.d	$sp, $sp, -544
	.cfi_def_cfa_offset 544
	st.d	$ra, $sp, 536                   # 8-byte Folded Spill
	st.d	$fp, $sp, 528                   # 8-byte Folded Spill
	st.d	$s0, $sp, 520                   # 8-byte Folded Spill
	st.d	$s1, $sp, 512                   # 8-byte Folded Spill
	st.d	$s2, $sp, 504                   # 8-byte Folded Spill
	st.d	$s3, $sp, 496                   # 8-byte Folded Spill
	st.d	$s4, $sp, 488                   # 8-byte Folded Spill
	st.d	$s5, $sp, 480                   # 8-byte Folded Spill
	st.d	$s6, $sp, 472                   # 8-byte Folded Spill
	st.d	$s7, $sp, 464                   # 8-byte Folded Spill
	st.d	$s8, $sp, 456                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	move	$s1, $a1
	move	$fp, $a0
	st.w	$zero, $sp, 444
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB90_4
# %bb.1:
	ld.d	$s2, $s1, 8
	beqz	$s2, .LBB90_4
# %bb.2:                                # %.lr.ph.i.preheader
	ld.d	$s0, $s1, 0
	.p2align	4, , 16
.LBB90_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s0, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s0, 0
	addi.d	$s2, $s2, -1
	addi.d	$s0, $s0, 1
	bnez	$s2, .LBB90_3
.LBB90_4:                               # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s5, $sp, 32
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s6, $a0, -1973
	ori	$s7, $zero, 16
	addi.w	$s8, $zero, -1
	b	.LBB90_8
	.p2align	4, , 16
.LBB90_5:                               #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
.LBB90_6:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit21
                                        #   in Loop: Header=BB90_8 Depth=1
.Ltmp2971:
	addi.d	$a2, $sp, 48
	addi.d	$a3, $sp, 444
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2972:
.LBB90_7:                               #   in Loop: Header=BB90_8 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 432
.LBB90_8:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s6
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s6
	add.w	$a3, $a3, $a4
	bge	$s4, $a3, .LBB90_28
# %bb.9:                                #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s6
	add.d	$a1, $s4, $a1
	beqz	$a1, .LBB90_11
# %bb.10:                               #   in Loop: Header=BB90_8 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB90_12
	.p2align	4, , 16
.LBB90_11:                              #   in Loop: Header=BB90_8 Depth=1
	add.d	$a0, $a2, $s3
.LBB90_12:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s2, $a0, 240
	st.d	$s5, $sp, 16
	st.d	$a1, $sp, 448
	move	$a0, $s5
	bltu	$a1, $s7, .LBB90_15
# %bb.13:                               # %.noexc.i.i
                                        #   in Loop: Header=BB90_8 Depth=1
.Ltmp2968:
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 448
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2969:
# %bb.14:                               # %.noexc
                                        #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a1, $sp, 448
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB90_15:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB90_8 Depth=1
	beq	$a1, $s8, .LBB90_18
# %bb.16:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB90_8 Depth=1
	bnez	$a1, .LBB90_21
# %bb.17:                               #   in Loop: Header=BB90_8 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB90_18:                              #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a2, $sp, 448
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 24
	bne	$a2, $a0, .LBB90_22
.LBB90_19:                              #   in Loop: Header=BB90_8 Depth=1
	ld.d	$s2, $sp, 16
	beqz	$a2, .LBB90_27
# %bb.20:                               #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a1, $s1, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	bne	$s2, $s5, .LBB90_23
	b	.LBB90_24
	.p2align	4, , 16
.LBB90_21:                              #   in Loop: Header=BB90_8 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 448
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 24
	beq	$a2, $a0, .LBB90_19
.LBB90_22:                              # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB90_8 Depth=1
	ld.d	$s2, $sp, 16
	move	$s0, $zero
	beq	$s2, $s5, .LBB90_24
.LBB90_23:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB90_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB90_8 Depth=1
	beqz	$s0, .LBB90_7
# %bb.25:                               #   in Loop: Header=BB90_8 Depth=1
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s6
	add.d	$a2, $s4, $a2
	bnez	$a2, .LBB90_5
# %bb.26:                               #   in Loop: Header=BB90_8 Depth=1
	add.d	$a0, $a1, $s3
	b	.LBB90_6
.LBB90_27:                              #   in Loop: Header=BB90_8 Depth=1
	ori	$s0, $zero, 1
	bne	$s2, $s5, .LBB90_23
	b	.LBB90_24
.LBB90_28:
.Ltmp2965:
	addi.d	$a1, $sp, 48
	addi.d	$a2, $sp, 444
	addi.d	$s0, $sp, 48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2966:
# %bb.29:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 48
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 144
	st.d	$a2, $sp, 64
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 160
	st.d	$a1, $sp, 72
	beq	$a0, $a2, .LBB90_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB90_31:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 72
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 48
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 48
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 56
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 488                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 520                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 528                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 536                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 544
	ret
.LBB90_32:
.Ltmp2967:
	b	.LBB90_35
.LBB90_33:
.Ltmp2970:
	b	.LBB90_35
.LBB90_34:
.Ltmp2973:
.LBB90_35:
	move	$fp, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end90:
	.size	_ZN2PP11PowerParser9get_sizebERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE, .Lfunc_end90-_ZN2PP11PowerParser9get_sizebERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table90:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Lfunc_begin58-.Lfunc_begin58  # >> Call Site 1 <<
	.uleb128 .Ltmp2971-.Lfunc_begin58       #   Call between .Lfunc_begin58 and .Ltmp2971
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2971-.Lfunc_begin58       # >> Call Site 2 <<
	.uleb128 .Ltmp2972-.Ltmp2971            #   Call between .Ltmp2971 and .Ltmp2972
	.uleb128 .Ltmp2973-.Lfunc_begin58       #     jumps to .Ltmp2973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2968-.Lfunc_begin58       # >> Call Site 3 <<
	.uleb128 .Ltmp2969-.Ltmp2968            #   Call between .Ltmp2968 and .Ltmp2969
	.uleb128 .Ltmp2970-.Lfunc_begin58       #     jumps to .Ltmp2970
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2969-.Lfunc_begin58       # >> Call Site 4 <<
	.uleb128 .Ltmp2965-.Ltmp2969            #   Call between .Ltmp2969 and .Ltmp2965
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2965-.Lfunc_begin58       # >> Call Site 5 <<
	.uleb128 .Ltmp2966-.Ltmp2965            #   Call between .Ltmp2965 and .Ltmp2966
	.uleb128 .Ltmp2967-.Lfunc_begin58       #     jumps to .Ltmp2967
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2966-.Lfunc_begin58       # >> Call Site 6 <<
	.uleb128 .Lfunc_end90-.Ltmp2966         #   Call between .Ltmp2966 and .Lfunc_end90
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end58:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser12cmd_in_inputERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERbS8_ # -- Begin function _ZN2PP11PowerParser12cmd_in_inputERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERbS8_
	.p2align	5
	.type	_ZN2PP11PowerParser12cmd_in_inputERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERbS8_,@function
_ZN2PP11PowerParser12cmd_in_inputERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERbS8_: # @_ZN2PP11PowerParser12cmd_in_inputERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERbS8_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 16                    # 8-byte Folded Spill
	st.b	$zero, $a2, 0
	st.d	$a3, $sp, 24                    # 8-byte Folded Spill
	st.b	$zero, $a3, 0
	pcalau12i	$a2, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a2, $a2, %pc_lo12(_ZN2PPL14case_sensitiveE)
	move	$s1, $a1
	move	$s0, $a0
	bnez	$a2, .LBB91_4
# %bb.1:
	ld.d	$fp, $s1, 8
	beqz	$fp, .LBB91_4
# %bb.2:                                # %.lr.ph.i.preheader
	ld.d	$s2, $s1, 0
	.p2align	4, , 16
.LBB91_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s2, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s2, 0
	addi.d	$fp, $fp, -1
	addi.d	$s2, $s2, 1
	bnez	$fp, .LBB91_3
.LBB91_4:                               # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s6, $zero
	move	$s7, $zero
	addi.d	$s8, $sp, 48
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s4, $a0, -1973
	ori	$fp, $zero, 16
	addi.w	$s5, $zero, -1
	b	.LBB91_6
	.p2align	4, , 16
.LBB91_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB91_6 Depth=1
	addi.d	$s7, $s7, 1
	addi.d	$s6, $s6, 432
	bnez	$s2, .LBB91_22
.LBB91_6:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s4
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s4
	add.w	$a3, $a3, $a4
	bge	$s7, $a3, .LBB91_23
# %bb.7:                                #   in Loop: Header=BB91_6 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s4
	add.d	$a1, $s7, $a1
	beqz	$a1, .LBB91_9
# %bb.8:                                #   in Loop: Header=BB91_6 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB91_10
	.p2align	4, , 16
.LBB91_9:                               #   in Loop: Header=BB91_6 Depth=1
	add.d	$a0, $a2, $s6
.LBB91_10:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB91_6 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s3, $a0, 240
	st.d	$s8, $sp, 32
	st.d	$a1, $sp, 64
	move	$a0, $s8
	bltu	$a1, $fp, .LBB91_12
# %bb.11:                               # %.noexc.i.i
                                        #   in Loop: Header=BB91_6 Depth=1
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 64
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB91_12:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB91_6 Depth=1
	beq	$a1, $s5, .LBB91_15
# %bb.13:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB91_6 Depth=1
	bnez	$a1, .LBB91_18
# %bb.14:                               #   in Loop: Header=BB91_6 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB91_15:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit
                                        #   in Loop: Header=BB91_6 Depth=1
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	bne	$a2, $a0, .LBB91_19
.LBB91_16:                              #   in Loop: Header=BB91_6 Depth=1
	ld.d	$s3, $sp, 32
	beqz	$a2, .LBB91_20
# %bb.17:                               #   in Loop: Header=BB91_6 Depth=1
	ld.d	$a1, $s1, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s2, $a0, 1
	bne	$s3, $s8, .LBB91_21
	b	.LBB91_5
	.p2align	4, , 16
.LBB91_18:                              #   in Loop: Header=BB91_6 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	beq	$a2, $a0, .LBB91_16
.LBB91_19:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB91_6 Depth=1
	ld.d	$s3, $sp, 32
	move	$s2, $zero
	bne	$s3, $s8, .LBB91_21
	b	.LBB91_5
.LBB91_20:                              #   in Loop: Header=BB91_6 Depth=1
	ori	$s2, $zero, 1
	beq	$s3, $s8, .LBB91_5
	.p2align	4, , 16
.LBB91_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB91_6 Depth=1
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB91_5
.LBB91_22:
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	st.b	$a0, $a1, 0
.LBB91_23:                              # %.loopexit38
	move	$a5, $zero
	addi.d	$s6, $sp, 48
	lu12i.w	$a0, -118150
	ori	$a0, $a0, 2423
	lu32i.d	$a0, -177225
	lu52i.d	$a6, $a0, 403
	ori	$s8, $zero, 16
	st.d	$a6, $sp, 8                     # 8-byte Folded Spill
.LBB91_24:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB91_30 Depth 2
	ldptr.d	$a1, $s0, 2368
	ldptr.d	$a0, $s0, 2336
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $s0, 2344
	ldptr.d	$a4, $s0, 2352
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $s0, 2328
	ldptr.d	$a1, $s0, 2312
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $a6
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $a6
	add.w	$a2, $a2, $a3
	bge	$a5, $a2, .LBB91_48
# %bb.25:                               #   in Loop: Header=BB91_24 Depth=1
	ldptr.d	$a2, $s0, 2320
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $a6
	add.d	$a2, $a2, $a5
	st.d	$a5, $sp, 16                    # 8-byte Folded Spill
	beqz	$a2, .LBB91_27
# %bb.26:                               #   in Loop: Header=BB91_24 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB91_28
	.p2align	4, , 16
.LBB91_27:                              #   in Loop: Header=BB91_24 Depth=1
	ori	$a0, $zero, 568
	mul.d	$a0, $a5, $a0
	add.d	$a0, $a1, $a0
.LBB91_28:                              # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB91_24 Depth=1
	move	$fp, $zero
	move	$s7, $zero
	addi.d	$a0, $a0, 480
	st.d	$a0, $s0, 984
	b	.LBB91_30
	.p2align	4, , 16
.LBB91_29:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
                                        #   in Loop: Header=BB91_30 Depth=2
	addi.d	$s7, $s7, 1
	addi.d	$fp, $fp, 432
	bnez	$s3, .LBB91_47
.LBB91_30:                              #   Parent Loop BB91_24 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s0, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s4
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s4
	add.w	$a3, $a3, $a4
	bge	$s7, $a3, .LBB91_46
# %bb.31:                               #   in Loop: Header=BB91_30 Depth=2
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s4
	add.d	$a1, $s7, $a1
	beqz	$a1, .LBB91_33
# %bb.32:                               #   in Loop: Header=BB91_30 Depth=2
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB91_34
	.p2align	4, , 16
.LBB91_33:                              #   in Loop: Header=BB91_30 Depth=2
	add.d	$a0, $a2, $fp
.LBB91_34:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit29
                                        #   in Loop: Header=BB91_30 Depth=2
	ld.d	$a1, $a0, 248
	ld.d	$s2, $a0, 240
	st.d	$s6, $sp, 32
	st.d	$a1, $sp, 64
	move	$a0, $s6
	bltu	$a1, $s8, .LBB91_36
# %bb.35:                               # %.noexc.i.i31
                                        #   in Loop: Header=BB91_30 Depth=2
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 64
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB91_36:                              # %._crit_edge.i.i.i30
                                        #   in Loop: Header=BB91_30 Depth=2
	beq	$a1, $s5, .LBB91_39
# %bb.37:                               # %._crit_edge.i.i.i30
                                        #   in Loop: Header=BB91_30 Depth=2
	bnez	$a1, .LBB91_42
# %bb.38:                               #   in Loop: Header=BB91_30 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB91_39:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit32
                                        #   in Loop: Header=BB91_30 Depth=2
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	bne	$a2, $a0, .LBB91_43
.LBB91_40:                              #   in Loop: Header=BB91_30 Depth=2
	ld.d	$s2, $sp, 32
	beqz	$a2, .LBB91_44
# %bb.41:                               #   in Loop: Header=BB91_30 Depth=2
	ld.d	$a1, $s1, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s3, $a0, 1
	bne	$s2, $s6, .LBB91_45
	b	.LBB91_29
	.p2align	4, , 16
.LBB91_42:                              #   in Loop: Header=BB91_30 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	beq	$a2, $a0, .LBB91_40
.LBB91_43:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit32._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit34_crit_edge
                                        #   in Loop: Header=BB91_30 Depth=2
	ld.d	$s2, $sp, 32
	move	$s3, $zero
	bne	$s2, $s6, .LBB91_45
	b	.LBB91_29
.LBB91_44:                              #   in Loop: Header=BB91_30 Depth=2
	ori	$s3, $zero, 1
	beq	$s2, $s6, .LBB91_29
	.p2align	4, , 16
.LBB91_45:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
                                        #   in Loop: Header=BB91_30 Depth=2
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB91_29
	.p2align	4, , 16
.LBB91_46:                              # %.loopexit
                                        #   in Loop: Header=BB91_24 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.bu	$a0, $a0, 0
	ld.d	$a5, $sp, 16                    # 8-byte Folded Reload
	addi.d	$a5, $a5, 1
	ld.d	$a6, $sp, 8                     # 8-byte Folded Reload
	beqz	$a0, .LBB91_24
	b	.LBB91_48
.LBB91_47:                              # %.loopexit.thread
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	st.b	$a0, $a1, 0
.LBB91_48:                              # %.loopexit52
	addi.d	$a0, $s0, 904
	st.d	$a0, $s0, 984
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.Lfunc_end91:
	.size	_ZN2PP11PowerParser12cmd_in_inputERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERbS8_, .Lfunc_end91-_ZN2PP11PowerParser12cmd_in_inputERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERbS8_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	5
	.type	_ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$a3, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a3, $a3, %pc_lo12(_ZN2PPL14case_sensitiveE)
	st.d	$a2, $sp, 24                    # 8-byte Folded Spill
	move	$s1, $a1
	move	$fp, $a0
	bnez	$a3, .LBB92_4
# %bb.1:
	ld.d	$s2, $s1, 8
	beqz	$s2, .LBB92_4
# %bb.2:                                # %.lr.ph.i.preheader
	ld.d	$s0, $s1, 0
	.p2align	4, , 16
.LBB92_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s0, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s0, 0
	addi.d	$s2, $s2, -1
	addi.d	$s0, $s0, 1
	bnez	$s2, .LBB92_3
.LBB92_4:                               # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	move	$s5, $zero
	move	$s6, $zero
	addi.d	$s7, $sp, 48
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s3, $a0, -1973
	ori	$s8, $zero, 16
	addi.w	$s4, $zero, -1
	b	.LBB92_8
	.p2align	4, , 16
.LBB92_5:                               #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
.LBB92_6:                               # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit25
                                        #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13set_processedEb)
	jirl	$ra, $ra, 0
.LBB92_7:                               #   in Loop: Header=BB92_8 Depth=1
	addi.d	$s6, $s6, 1
	addi.d	$s5, $s5, 432
.LBB92_8:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s3
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s3
	add.w	$a3, $a3, $a4
	bge	$s6, $a3, .LBB92_27
# %bb.9:                                #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s3
	add.d	$a1, $s6, $a1
	beqz	$a1, .LBB92_11
# %bb.10:                               #   in Loop: Header=BB92_8 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB92_12
	.p2align	4, , 16
.LBB92_11:                              #   in Loop: Header=BB92_8 Depth=1
	add.d	$a0, $a2, $s5
.LBB92_12:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a1, $a0, 248
	ld.d	$s2, $a0, 240
	st.d	$s7, $sp, 32
	st.d	$a1, $sp, 64
	move	$a0, $s7
	bltu	$a1, $s8, .LBB92_14
# %bb.13:                               # %.noexc.i.i
                                        #   in Loop: Header=BB92_8 Depth=1
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 64
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB92_14:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB92_8 Depth=1
	beq	$a1, $s4, .LBB92_17
# %bb.15:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB92_8 Depth=1
	bnez	$a1, .LBB92_20
# %bb.16:                               #   in Loop: Header=BB92_8 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB92_17:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit
                                        #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	bne	$a2, $a0, .LBB92_21
.LBB92_18:                              #   in Loop: Header=BB92_8 Depth=1
	ld.d	$s2, $sp, 32
	beqz	$a2, .LBB92_26
# %bb.19:                               #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a1, $s1, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	bne	$s2, $s7, .LBB92_22
	b	.LBB92_23
	.p2align	4, , 16
.LBB92_20:                              #   in Loop: Header=BB92_8 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	beq	$a2, $a0, .LBB92_18
.LBB92_21:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB92_8 Depth=1
	ld.d	$s2, $sp, 32
	move	$s0, $zero
	beq	$s2, $s7, .LBB92_23
.LBB92_22:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB92_8 Depth=1
	beqz	$s0, .LBB92_7
# %bb.24:                               #   in Loop: Header=BB92_8 Depth=1
	ld.d	$a0, $fp, 984
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $s6, $a2
	bnez	$a2, .LBB92_5
# %bb.25:                               #   in Loop: Header=BB92_8 Depth=1
	add.d	$a0, $a1, $s5
	b	.LBB92_6
.LBB92_26:                              #   in Loop: Header=BB92_8 Depth=1
	ori	$s0, $zero, 1
	bne	$s2, $s7, .LBB92_22
	b	.LBB92_23
.LBB92_27:                              # %.preheader
	move	$a5, $zero
	addi.d	$s6, $sp, 48
	lu12i.w	$a0, -118150
	ori	$a0, $a0, 2423
	lu32i.d	$a0, -177225
	lu52i.d	$a6, $a0, 403
	ori	$s8, $zero, 16
	st.d	$a6, $sp, 8                     # 8-byte Folded Spill
	b	.LBB92_29
	.p2align	4, , 16
.LBB92_28:                              #   in Loop: Header=BB92_29 Depth=1
	ld.d	$a5, $sp, 16                    # 8-byte Folded Reload
	addi.d	$a5, $a5, 1
	ld.d	$a6, $sp, 8                     # 8-byte Folded Reload
.LBB92_29:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB92_37 Depth 2
	ldptr.d	$a1, $fp, 2368
	ldptr.d	$a0, $fp, 2336
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $fp, 2344
	ldptr.d	$a4, $fp, 2352
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $fp, 2328
	ldptr.d	$a1, $fp, 2312
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $a6
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $a6
	add.w	$a2, $a2, $a3
	bge	$a5, $a2, .LBB92_56
# %bb.30:                               #   in Loop: Header=BB92_29 Depth=1
	ldptr.d	$a2, $fp, 2320
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $a6
	add.d	$a2, $a2, $a5
	st.d	$a5, $sp, 16                    # 8-byte Folded Spill
	beqz	$a2, .LBB92_32
# %bb.31:                               #   in Loop: Header=BB92_29 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB92_33
	.p2align	4, , 16
.LBB92_32:                              #   in Loop: Header=BB92_29 Depth=1
	ori	$a0, $zero, 568
	mul.d	$a0, $a5, $a0
	add.d	$a0, $a1, $a0
.LBB92_33:                              # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB92_29 Depth=1
	move	$s7, $zero
	move	$s5, $zero
	addi.d	$a0, $a0, 480
	st.d	$a0, $fp, 984
	b	.LBB92_37
	.p2align	4, , 16
.LBB92_34:                              #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a0, $a0, 40
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
.LBB92_35:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit40
                                        #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13set_processedEb)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 984
.LBB92_36:                              #   in Loop: Header=BB92_37 Depth=2
	addi.d	$s5, $s5, 1
	addi.d	$s7, $s7, 432
.LBB92_37:                              #   Parent Loop BB92_29 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $a0, 72
	ld.d	$a1, $a0, 40
	sub.d	$a3, $a2, $a1
	ld.d	$a4, $a0, 48
	ld.d	$a5, $a0, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a0, 32
	ld.d	$a2, $a0, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s3
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s3
	add.w	$a3, $a3, $a4
	bge	$s5, $a3, .LBB92_28
# %bb.38:                               #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a0, $a0, 24
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s3
	add.d	$a0, $s5, $a0
	beqz	$a0, .LBB92_40
# %bb.39:                               #   in Loop: Header=BB92_37 Depth=2
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	b	.LBB92_41
	.p2align	4, , 16
.LBB92_40:                              #   in Loop: Header=BB92_37 Depth=2
	add.d	$a0, $a2, $s7
.LBB92_41:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit30
                                        #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a1, $a0, 248
	ld.d	$s2, $a0, 240
	st.d	$s6, $sp, 32
	st.d	$a1, $sp, 64
	move	$a0, $s6
	bltu	$a1, $s8, .LBB92_43
# %bb.42:                               # %.noexc.i.i32
                                        #   in Loop: Header=BB92_37 Depth=2
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 64
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB92_43:                              # %._crit_edge.i.i.i31
                                        #   in Loop: Header=BB92_37 Depth=2
	beq	$a1, $s4, .LBB92_46
# %bb.44:                               # %._crit_edge.i.i.i31
                                        #   in Loop: Header=BB92_37 Depth=2
	bnez	$a1, .LBB92_49
# %bb.45:                               #   in Loop: Header=BB92_37 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB92_46:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit33
                                        #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	bne	$a2, $a0, .LBB92_50
.LBB92_47:                              #   in Loop: Header=BB92_37 Depth=2
	ld.d	$s2, $sp, 32
	beqz	$a2, .LBB92_55
# %bb.48:                               #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a1, $s1, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	bne	$s2, $s6, .LBB92_51
	b	.LBB92_52
	.p2align	4, , 16
.LBB92_49:                              #   in Loop: Header=BB92_37 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 64
	ld.d	$a0, $s1, 8
	st.d	$a2, $sp, 40
	beq	$a2, $a0, .LBB92_47
.LBB92_50:                              # %_ZN2PP3Cmd12get_cmd_nameB5cxx11Ev.exit33._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit35_crit_edge
                                        #   in Loop: Header=BB92_37 Depth=2
	ld.d	$s2, $sp, 32
	move	$s0, $zero
	beq	$s2, $s6, .LBB92_52
.LBB92_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
                                        #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_52:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
                                        #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a0, $fp, 984
	beqz	$s0, .LBB92_36
# %bb.53:                               #   in Loop: Header=BB92_37 Depth=2
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a0, 24
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s3
	add.d	$a2, $s5, $a2
	bnez	$a2, .LBB92_34
# %bb.54:                               #   in Loop: Header=BB92_37 Depth=2
	add.d	$a0, $a1, $s7
	b	.LBB92_35
.LBB92_55:                              #   in Loop: Header=BB92_37 Depth=2
	ori	$s0, $zero, 1
	bne	$s2, $s6, .LBB92_51
	b	.LBB92_52
.LBB92_56:
	addi.d	$a0, $fp, 904
	st.d	$a0, $fp, 984
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.Lfunc_end92:
	.size	_ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end92-_ZN2PP11PowerParser17cmd_set_processedERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser20process_error_globalERi # -- Begin function _ZN2PP11PowerParser20process_error_globalERi
	.p2align	5
	.type	_ZN2PP11PowerParser20process_error_globalERi,@function
_ZN2PP11PowerParser20process_error_globalERi: # @_ZN2PP11PowerParser20process_error_globalERi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ldptr.w	$a2, $a0, 2256
	move	$fp, $a1
	st.w	$a2, $sp, 12
	beqz	$a2, .LBB93_2
# %bb.1:
	addi.d	$a1, $a0, 1864
	addi.d	$a2, $sp, 12
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser24process_error_return_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	b	.LBB93_3
.LBB93_2:
	move	$a0, $zero
.LBB93_3:
	st.w	$a0, $fp, 0
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end93:
	.size	_ZN2PP11PowerParser20process_error_globalERi, .Lfunc_end93-_ZN2PP11PowerParser20process_error_globalERi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser8wt_checkEiRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPi # -- Begin function _ZN2PP11PowerParser8wt_checkEiRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPi
	.p2align	5
	.type	_ZN2PP11PowerParser8wt_checkEiRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPi,@function
_ZN2PP11PowerParser8wt_checkEiRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPi: # @_ZN2PP11PowerParser8wt_checkEiRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPi
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	addi.d	$sp, $sp, -464
	.cfi_def_cfa_offset 464
	st.d	$ra, $sp, 456                   # 8-byte Folded Spill
	st.d	$fp, $sp, 448                   # 8-byte Folded Spill
	st.d	$s0, $sp, 440                   # 8-byte Folded Spill
	st.d	$s1, $sp, 432                   # 8-byte Folded Spill
	st.d	$s2, $sp, 424                   # 8-byte Folded Spill
	st.d	$s3, $sp, 416                   # 8-byte Folded Spill
	st.d	$s4, $sp, 408                   # 8-byte Folded Spill
	st.d	$s5, $sp, 400                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a5
	move	$s1, $a4
	move	$s2, $a3
	move	$s3, $a2
	move	$s4, $a1
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	ldptr.d	$a0, $fp, 2312
	ldptr.d	$a1, $fp, 2320
	addi.w	$s4, $s4, -1
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	lu12i.w	$a2, -118150
	ori	$a2, $a2, 2423
	lu32i.d	$a2, -177225
	lu52i.d	$s5, $a2, 403
	mul.d	$a1, $a1, $s5
	add.d	$a1, $a1, $s4
	st.w	$zero, $sp, 4
	beqz	$a1, .LBB94_2
# %bb.1:
	ldptr.d	$a0, $fp, 2336
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB94_3
.LBB94_2:
	ori	$a1, $zero, 568
	mul.d	$a1, $s4, $a1
	add.d	$a0, $a0, $a1
.LBB94_3:                               # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
.Ltmp2974:
	addi.d	$a5, $sp, 8
	addi.d	$a6, $sp, 4
	move	$a1, $s3
	move	$a2, $s2
	move	$a3, $s1
	move	$a4, $s0
	pcaddu18i	$ra, %call36(_ZN2PP8Whenthen8check_wtERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiRNS2_18basic_stringstreamIcS5_S6_EERi)
	jirl	$ra, $ra, 0
.Ltmp2975:
# %bb.4:
.Ltmp2976:
	addi.d	$a1, $sp, 8
	addi.d	$a2, $sp, 4
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2977:
# %bb.5:
	ld.w	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB94_10
# %bb.6:
	ldptr.d	$a0, $fp, 2312
	ldptr.d	$a1, $fp, 2320
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s5
	add.d	$a1, $a1, $s4
	beqz	$a1, .LBB94_8
# %bb.7:
	ldptr.d	$a0, $fp, 2336
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB94_9
.LBB94_8:
	ori	$a1, $zero, 568
	mul.d	$a1, $s4, $a1
	add.d	$a0, $a0, $a1
.LBB94_9:                               # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit10
	addi.d	$a0, $a0, 480
	st.d	$a0, $fp, 984
.LBB94_10:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 8
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 8
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 104
	st.d	$a2, $sp, 24
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 120
	st.d	$a1, $sp, 32
	beq	$a0, $a2, .LBB94_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB94_12:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 32
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 8
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 16
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 400                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 408                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 416                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 424                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 440                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 448                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 456                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 464
	ret
.LBB94_13:
.Ltmp2978:
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end94:
	.size	_ZN2PP11PowerParser8wt_checkEiRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPi, .Lfunc_end94-_ZN2PP11PowerParser8wt_checkEiRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table94:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Lfunc_begin59-.Lfunc_begin59  # >> Call Site 1 <<
	.uleb128 .Ltmp2974-.Lfunc_begin59       #   Call between .Lfunc_begin59 and .Ltmp2974
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2974-.Lfunc_begin59       # >> Call Site 2 <<
	.uleb128 .Ltmp2977-.Ltmp2974            #   Call between .Ltmp2974 and .Ltmp2977
	.uleb128 .Ltmp2978-.Lfunc_begin59       #     jumps to .Ltmp2978
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2977-.Lfunc_begin59       # >> Call Site 3 <<
	.uleb128 .Lfunc_end94-.Ltmp2977         #   Call between .Ltmp2977 and .Lfunc_end94
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end59:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13wt_set_cmdsfpEi # -- Begin function _ZN2PP11PowerParser13wt_set_cmdsfpEi
	.p2align	5
	.type	_ZN2PP11PowerParser13wt_set_cmdsfpEi,@function
_ZN2PP11PowerParser13wt_set_cmdsfpEi:   # @_ZN2PP11PowerParser13wt_set_cmdsfpEi
# %bb.0:
	ldptr.d	$a2, $a0, 2312
	ldptr.d	$a3, $a0, 2320
	addi.w	$a1, $a1, -1
	sub.d	$a3, $a2, $a3
	srai.d	$a3, $a3, 3
	lu12i.w	$a4, -118150
	ori	$a4, $a4, 2423
	lu32i.d	$a4, -177225
	lu52i.d	$a4, $a4, 403
	mul.d	$a3, $a3, $a4
	add.d	$a3, $a3, $a1
	beqz	$a3, .LBB95_2
# %bb.1:
	ldptr.d	$a1, $a0, 2336
	slli.d	$a2, $a3, 3
	ldx.d	$a1, $a1, $a2
	addi.d	$a1, $a1, 480
	st.d	$a1, $a0, 984
	ret
.LBB95_2:
	ori	$a3, $zero, 568
	mul.d	$a1, $a1, $a3
	add.d	$a1, $a2, $a1
	addi.d	$a1, $a1, 480
	st.d	$a1, $a0, 984
	ret
.Lfunc_end95:
	.size	_ZN2PP11PowerParser13wt_set_cmdsfpEi, .Lfunc_end95-_ZN2PP11PowerParser13wt_set_cmdsfpEi
                                        # -- End function
	.globl	_ZN2PP11PowerParser9wt_casizeEiPi # -- Begin function _ZN2PP11PowerParser9wt_casizeEiPi
	.p2align	5
	.type	_ZN2PP11PowerParser9wt_casizeEiPi,@function
_ZN2PP11PowerParser9wt_casizeEiPi:      # @_ZN2PP11PowerParser9wt_casizeEiPi
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB96_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen19get_char_array_sizeEPi)
	jr	$t8
.LBB96_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen19get_char_array_sizeEPi)
	jr	$t8
.Lfunc_end96:
	.size	_ZN2PP11PowerParser9wt_casizeEiPi, .Lfunc_end96-_ZN2PP11PowerParser9wt_casizeEiPi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser9wt_carrayEiPci # -- Begin function _ZN2PP11PowerParser9wt_carrayEiPci
	.p2align	5
	.type	_ZN2PP11PowerParser9wt_carrayEiPci,@function
_ZN2PP11PowerParser9wt_carrayEiPci:     # @_ZN2PP11PowerParser9wt_carrayEiPci
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a2
	addi.d	$s0, $sp, 24
	ldptr.d	$a2, $a0, 2312
	ldptr.d	$a3, $a0, 2320
	st.d	$s0, $sp, 8
	st.d	$zero, $sp, 16
	addi.w	$a1, $a1, -1
	sub.d	$a3, $a2, $a3
	srai.d	$a3, $a3, 3
	lu12i.w	$a4, -118150
	ori	$a4, $a4, 2423
	lu32i.d	$a4, -177225
	lu52i.d	$a4, $a4, 403
	mul.d	$a3, $a3, $a4
	add.d	$a3, $a3, $a1
	st.b	$zero, $sp, 24
	beqz	$a3, .LBB97_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a1, $a3, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB97_3
.LBB97_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a1, $a0
	add.d	$a0, $a2, $a0
.LBB97_3:                               # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
.Ltmp2979:
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZN2PP8Whenthen14get_char_arrayERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp2980:
# %bb.4:                                # %.preheader
	ld.d	$a3, $sp, 16
	ld.d	$a0, $sp, 8
	addi.w	$a1, $a3, 0
	blez	$a1, .LBB97_18
# %bb.5:                                # %iter.check
	bstrpick.d	$a1, $a3, 30, 0
	ori	$a4, $zero, 16
	move	$a2, $zero
	bltu	$a1, $a4, .LBB97_16
# %bb.6:                                # %iter.check
	sub.d	$a4, $fp, $a0
	ori	$a5, $zero, 31
	bgeu	$a5, $a4, .LBB97_16
# %bb.7:                                # %vector.main.loop.iter.check
	ori	$a2, $zero, 32
	bgeu	$a1, $a2, .LBB97_12
# %bb.8:
	move	$a2, $zero
.LBB97_9:                               # %vec.epilog.ph
	move	$a5, $a2
	bstrpick.d	$a2, $a3, 30, 4
	slli.d	$a2, $a2, 4
	sub.d	$a3, $a5, $a2
	add.d	$a4, $fp, $a5
	add.d	$a5, $a0, $a5
	.p2align	4, , 16
.LBB97_10:                              # %vec.epilog.vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a5, 0
	vst	$vr0, $a4, 0
	addi.d	$a3, $a3, 16
	addi.d	$a4, $a4, 16
	addi.d	$a5, $a5, 16
	bnez	$a3, .LBB97_10
# %bb.11:                               # %vec.epilog.middle.block
	bne	$a1, $a2, .LBB97_16
	b	.LBB97_18
.LBB97_12:                              # %vector.ph
	bstrpick.d	$a2, $a3, 30, 5
	slli.d	$a2, $a2, 5
	addi.d	$a4, $fp, 16
	addi.d	$a5, $a0, 16
	move	$a6, $a2
	.p2align	4, , 16
.LBB97_13:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a5, -16
	vld	$vr1, $a5, 0
	vst	$vr0, $a4, -16
	vst	$vr1, $a4, 0
	addi.d	$a6, $a6, -32
	addi.d	$a4, $a4, 32
	addi.d	$a5, $a5, 32
	bnez	$a6, .LBB97_13
# %bb.14:                               # %middle.block
	beq	$a1, $a2, .LBB97_18
# %bb.15:                               # %vec.epilog.iter.check
	andi	$a4, $a3, 16
	bnez	$a4, .LBB97_9
.LBB97_16:                              # %vec.epilog.scalar.ph.preheader
	add.d	$a3, $fp, $a2
	add.d	$a4, $a0, $a2
	sub.d	$a1, $a1, $a2
	.p2align	4, , 16
.LBB97_17:                              # %vec.epilog.scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a2, $a4, 0
	st.b	$a2, $a3, 0
	addi.d	$a3, $a3, 1
	addi.d	$a1, $a1, -1
	addi.d	$a4, $a4, 1
	bnez	$a1, .LBB97_17
.LBB97_18:                              # %._crit_edge
	beq	$a0, $s0, .LBB97_20
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB97_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB97_21:
.Ltmp2981:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s0, .LBB97_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i8
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB97_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end97:
	.size	_ZN2PP11PowerParser9wt_carrayEiPci, .Lfunc_end97-_ZN2PP11PowerParser9wt_carrayEiPci
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table97:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Ltmp2979-.Lfunc_begin60       # >> Call Site 1 <<
	.uleb128 .Ltmp2980-.Ltmp2979            #   Call between .Ltmp2979 and .Ltmp2980
	.uleb128 .Ltmp2981-.Lfunc_begin60       #     jumps to .Ltmp2981
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2980-.Lfunc_begin60       # >> Call Site 2 <<
	.uleb128 .Lfunc_end97-.Ltmp2980         #   Call between .Ltmp2980 and .Lfunc_end97
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end60:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser10wt_satsizeEiPi # -- Begin function _ZN2PP11PowerParser10wt_satsizeEiPi
	.p2align	5
	.type	_ZN2PP11PowerParser10wt_satsizeEiPi,@function
_ZN2PP11PowerParser10wt_satsizeEiPi:    # @_ZN2PP11PowerParser10wt_satsizeEiPi
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB98_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen11get_satsizeEPi)
	jr	$t8
.LBB98_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen11get_satsizeEPi)
	jr	$t8
.Lfunc_end98:
	.size	_ZN2PP11PowerParser10wt_satsizeEiPi, .Lfunc_end98-_ZN2PP11PowerParser10wt_satsizeEiPi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser9wt_getsatEiPii # -- Begin function _ZN2PP11PowerParser9wt_getsatEiPii
	.p2align	5
	.type	_ZN2PP11PowerParser9wt_getsatEiPii,@function
_ZN2PP11PowerParser9wt_getsatEiPii:     # @_ZN2PP11PowerParser9wt_getsatEiPii
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB99_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6getsatEPi)
	jr	$t8
.LBB99_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6getsatEPi)
	jr	$t8
.Lfunc_end99:
	.size	_ZN2PP11PowerParser9wt_getsatEiPii, .Lfunc_end99-_ZN2PP11PowerParser9wt_getsatEiPii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser9wt_setsatEiPii # -- Begin function _ZN2PP11PowerParser9wt_setsatEiPii
	.p2align	5
	.type	_ZN2PP11PowerParser9wt_setsatEiPii,@function
_ZN2PP11PowerParser9wt_setsatEiPii:     # @_ZN2PP11PowerParser9wt_setsatEiPii
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB100_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6setsatEPi)
	jr	$t8
.LBB100_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6setsatEPi)
	jr	$t8
.Lfunc_end100:
	.size	_ZN2PP11PowerParser9wt_setsatEiPii, .Lfunc_end100-_ZN2PP11PowerParser9wt_setsatEiPii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser15wt_getprocessedEiPi # -- Begin function _ZN2PP11PowerParser15wt_getprocessedEiPi
	.p2align	5
	.type	_ZN2PP11PowerParser15wt_getprocessedEiPi,@function
_ZN2PP11PowerParser15wt_getprocessedEiPi: # @_ZN2PP11PowerParser15wt_getprocessedEiPi
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB101_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen12getprocessedEPi)
	jr	$t8
.LBB101_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen12getprocessedEPi)
	jr	$t8
.Lfunc_end101:
	.size	_ZN2PP11PowerParser15wt_getprocessedEiPi, .Lfunc_end101-_ZN2PP11PowerParser15wt_getprocessedEiPi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser15wt_setprocessedEii # -- Begin function _ZN2PP11PowerParser15wt_setprocessedEii
	.p2align	5
	.type	_ZN2PP11PowerParser15wt_setprocessedEii,@function
_ZN2PP11PowerParser15wt_setprocessedEii: # @_ZN2PP11PowerParser15wt_setprocessedEii
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB102_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen12setprocessedEi)
	jr	$t8
.LBB102_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen12setprocessedEi)
	jr	$t8
.Lfunc_end102:
	.size	_ZN2PP11PowerParser15wt_setprocessedEii, .Lfunc_end102-_ZN2PP11PowerParser15wt_setprocessedEii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser9wt_getseqEiPi # -- Begin function _ZN2PP11PowerParser9wt_getseqEiPi
	.p2align	5
	.type	_ZN2PP11PowerParser9wt_getseqEiPi,@function
_ZN2PP11PowerParser9wt_getseqEiPi:      # @_ZN2PP11PowerParser9wt_getseqEiPi
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB103_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6getseqEPi)
	jr	$t8
.LBB103_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6getseqEPi)
	jr	$t8
.Lfunc_end103:
	.size	_ZN2PP11PowerParser9wt_getseqEiPi, .Lfunc_end103-_ZN2PP11PowerParser9wt_getseqEiPi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser9wt_setseqEii # -- Begin function _ZN2PP11PowerParser9wt_setseqEii
	.p2align	5
	.type	_ZN2PP11PowerParser9wt_setseqEii,@function
_ZN2PP11PowerParser9wt_setseqEii:       # @_ZN2PP11PowerParser9wt_setseqEii
	.cfi_startproc
# %bb.0:
	ldptr.d	$a3, $a0, 2312
	ldptr.d	$a5, $a0, 2320
	addi.w	$a4, $a1, -1
	sub.d	$a1, $a3, $a5
	srai.d	$a1, $a1, 3
	lu12i.w	$a5, -118150
	ori	$a5, $a5, 2423
	lu32i.d	$a5, -177225
	lu52i.d	$a5, $a5, 403
	mul.d	$a1, $a1, $a5
	add.d	$a5, $a1, $a4
	move	$a1, $a2
	beqz	$a5, .LBB104_2
# %bb.1:
	ldptr.d	$a0, $a0, 2336
	slli.d	$a2, $a5, 3
	ldx.d	$a0, $a0, $a2
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6setseqEi)
	jr	$t8
.LBB104_2:
	ori	$a0, $zero, 568
	mul.d	$a0, $a4, $a0
	add.d	$a0, $a3, $a0
	pcaddu18i	$t8, %call36(_ZN2PP8Whenthen6setseqEi)
	jr	$t8
.Lfunc_end104:
	.size	_ZN2PP11PowerParser9wt_setseqEii, .Lfunc_end104-_ZN2PP11PowerParser9wt_setseqEii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser8rb_checkERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiSE_SE_ # -- Begin function _ZN2PP11PowerParser8rb_checkERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiSE_SE_
	.p2align	5
	.type	_ZN2PP11PowerParser8rb_checkERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiSE_SE_,@function
_ZN2PP11PowerParser8rb_checkERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiSE_SE_: # @_ZN2PP11PowerParser8rb_checkERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiSE_SE_
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	addi.d	$sp, $sp, -512
	.cfi_def_cfa_offset 512
	st.d	$ra, $sp, 504                   # 8-byte Folded Spill
	st.d	$fp, $sp, 496                   # 8-byte Folded Spill
	st.d	$s0, $sp, 488                   # 8-byte Folded Spill
	st.d	$s1, $sp, 480                   # 8-byte Folded Spill
	st.d	$s2, $sp, 472                   # 8-byte Folded Spill
	st.d	$s3, $sp, 464                   # 8-byte Folded Spill
	st.d	$s4, $sp, 456                   # 8-byte Folded Spill
	st.d	$s5, $sp, 448                   # 8-byte Folded Spill
	st.d	$s6, $sp, 440                   # 8-byte Folded Spill
	st.d	$s7, $sp, 432                   # 8-byte Folded Spill
	st.d	$s8, $sp, 424                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a6, $sp, 16                    # 8-byte Folded Spill
	move	$s1, $a5
	move	$s0, $a4
	move	$s3, $a3
	move	$s4, $a2
	move	$s5, $a1
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	move	$s6, $zero
	move	$s7, $zero
	move	$s8, $zero
	st.w	$zero, $sp, 28
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.w	$zero, $s0, 0
	st.w	$zero, $s1, 0
	lu12i.w	$a0, -258112
	ori	$a0, $a0, 4033
	lu32i.d	$a0, 64527
	lu52i.d	$s0, $a0, 252
	ori	$s2, $zero, 1
	b	.LBB105_2
	.p2align	4, , 16
.LBB105_1:                              #   in Loop: Header=BB105_2 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$s7, $s7, 520
	addi.d	$s6, $s6, 1
.LBB105_2:                              # =>This Inner Loop Header: Depth=1
	ldptr.d	$a1, $fp, 2448
	ldptr.d	$a0, $fp, 2416
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $fp, 2424
	ldptr.d	$a4, $fp, 2432
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $fp, 2408
	ldptr.d	$a1, $fp, 2392
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s0
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s0
	add.w	$a2, $a2, $a3
	bge	$s8, $a2, .LBB105_9
# %bb.3:                                #   in Loop: Header=BB105_2 Depth=1
	ldptr.d	$a2, $fp, 2400
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $s0
	add.d	$a2, $s8, $a2
	st.w	$zero, $sp, 24
	beqz	$a2, .LBB105_5
# %bb.4:                                #   in Loop: Header=BB105_2 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB105_6
	.p2align	4, , 16
.LBB105_5:                              #   in Loop: Header=BB105_2 Depth=1
	add.d	$a0, $a1, $s7
.LBB105_6:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB105_2 Depth=1
.Ltmp2985:
	addi.d	$a4, $sp, 24
	addi.d	$a5, $sp, 32
	addi.d	$a6, $sp, 28
	move	$a1, $s5
	move	$a2, $s4
	move	$a3, $s3
	pcaddu18i	$ra, %call36(_ZN2PP12Restartblock8check_rbERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiRNS2_18basic_stringstreamIcS5_S6_EERi)
	jirl	$ra, $ra, 0
.Ltmp2986:
# %bb.7:                                #   in Loop: Header=BB105_2 Depth=1
	ld.w	$a0, $sp, 24
	bne	$a0, $s2, .LBB105_1
# %bb.8:                                #   in Loop: Header=BB105_2 Depth=1
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	st.w	$s2, $a0, 0
	ld.w	$a0, $s1, 0
	slli.d	$a0, $a0, 2
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	stx.w	$s6, $a1, $a0
	ld.w	$a0, $s1, 0
	addi.d	$a0, $a0, 1
	st.w	$a0, $s1, 0
	b	.LBB105_1
.LBB105_9:
.Ltmp2982:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 28
	addi.d	$s0, $sp, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13process_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2983:
# %bb.10:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 128
	st.d	$a2, $sp, 48
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 144
	st.d	$a1, $sp, 56
	beq	$a0, $a2, .LBB105_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB105_12:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 56
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 32
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 40
	addi.d	$a0, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 424                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 440                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 448                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 488                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 496                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 504                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 512
	ret
.LBB105_13:
.Ltmp2984:
	b	.LBB105_15
.LBB105_14:
.Ltmp2987:
.LBB105_15:
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end105:
	.size	_ZN2PP11PowerParser8rb_checkERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiSE_SE_, .Lfunc_end105-_ZN2PP11PowerParser8rb_checkERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESA_RS1_IiSaIiEEPiSE_SE_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table105:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Lfunc_begin61-.Lfunc_begin61  # >> Call Site 1 <<
	.uleb128 .Ltmp2985-.Lfunc_begin61       #   Call between .Lfunc_begin61 and .Ltmp2985
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2985-.Lfunc_begin61       # >> Call Site 2 <<
	.uleb128 .Ltmp2986-.Ltmp2985            #   Call between .Ltmp2985 and .Ltmp2986
	.uleb128 .Ltmp2987-.Lfunc_begin61       #     jumps to .Ltmp2987
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2982-.Lfunc_begin61       # >> Call Site 3 <<
	.uleb128 .Ltmp2983-.Ltmp2982            #   Call between .Ltmp2982 and .Ltmp2983
	.uleb128 .Ltmp2984-.Lfunc_begin61       #     jumps to .Ltmp2984
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2983-.Lfunc_begin61       # >> Call Site 4 <<
	.uleb128 .Lfunc_end105-.Ltmp2983        #   Call between .Ltmp2983 and .Lfunc_end105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end61:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser12get_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE # -- Begin function _ZN2PP11PowerParser12get_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.p2align	5
	.type	_ZN2PP11PowerParser12get_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,@function
_ZN2PP11PowerParser12get_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE: # @_ZN2PP11PowerParser12get_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a1
	ld.d	$s1, $a1, 0
	ld.d	$s2, $a1, 8
	move	$s0, $a0
	beq	$s2, $s1, .LBB106_6
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s3, $s1, 16
	b	.LBB106_3
	.p2align	4, , 16
.LBB106_2:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB106_3 Depth=1
	addi.d	$a0, $s3, 16
	addi.d	$s3, $s3, 32
	beq	$a0, $s2, .LBB106_5
.LBB106_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s3, -16
	beq	$s3, $a0, .LBB106_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB106_3 Depth=1
	ld.d	$a1, $s3, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB106_2
.LBB106_5:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	st.d	$s1, $fp, 8
.LBB106_6:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s1, $sp, 16
	lu12i.w	$a0, -258112
	ori	$a0, $a0, 4033
	lu32i.d	$a0, 64527
	lu52i.d	$s5, $a0, 252
	ori	$s6, $zero, 16
	addi.w	$s7, $zero, -1
	b	.LBB106_10
	.p2align	4, , 16
.LBB106_7:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB106_10 Depth=1
	st.d	$a1, $s8, 0
	ld.d	$a0, $sp, 16
	st.d	$a0, $s8, 16
.LBB106_8:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit.thread
                                        #   in Loop: Header=BB106_10 Depth=1
	ld.d	$a0, $fp, 8
	st.d	$s2, $s8, 8
	st.d	$s1, $sp, 0
	st.d	$zero, $sp, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB106_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB106_10 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 520
.LBB106_10:                             # =>This Inner Loop Header: Depth=1
	ldptr.d	$a1, $s0, 2448
	ldptr.d	$a0, $s0, 2416
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $s0, 2424
	ldptr.d	$a4, $s0, 2432
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $s0, 2408
	ldptr.d	$a1, $s0, 2392
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s5
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s5
	add.w	$a2, $a2, $a3
	bge	$s4, $a2, .LBB106_26
# %bb.11:                               #   in Loop: Header=BB106_10 Depth=1
	ldptr.d	$a2, $s0, 2400
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $s5
	add.d	$a2, $s4, $a2
	beqz	$a2, .LBB106_13
# %bb.12:                               #   in Loop: Header=BB106_10 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB106_14
	.p2align	4, , 16
.LBB106_13:                             #   in Loop: Header=BB106_10 Depth=1
	add.d	$a0, $a1, $s3
.LBB106_14:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB106_10 Depth=1
	ld.d	$a1, $a0, 496
	ld.d	$s2, $a0, 488
	st.d	$s1, $sp, 0
	st.d	$a1, $sp, 32
	move	$a0, $s1
	bltu	$a1, $s6, .LBB106_16
# %bb.15:                               # %.noexc.i.i
                                        #   in Loop: Header=BB106_10 Depth=1
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB106_16:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB106_10 Depth=1
	beq	$a1, $s7, .LBB106_20
# %bb.17:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB106_10 Depth=1
	bnez	$a1, .LBB106_19
# %bb.18:                               #   in Loop: Header=BB106_10 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB106_20
	.p2align	4, , 16
.LBB106_19:                             #   in Loop: Header=BB106_10 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB106_20:                             # %_ZN2PP12Restartblock8get_nameB5cxx11Ev.exit
                                        #   in Loop: Header=BB106_10 Depth=1
	ld.d	$s2, $sp, 32
	ld.d	$s8, $fp, 8
	ld.d	$a0, $fp, 16
	st.d	$s2, $sp, 8
	beq	$s8, $a0, .LBB106_23
# %bb.21:                               #   in Loop: Header=BB106_10 Depth=1
	addi.d	$a0, $s8, 16
	st.d	$a0, $s8, 0
	ld.d	$a1, $sp, 0
	bne	$a1, $s1, .LBB106_7
# %bb.22:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
                                        #   in Loop: Header=BB106_10 Depth=1
	addi.d	$a2, $s2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB106_8
	.p2align	4, , 16
.LBB106_23:                             #   in Loop: Header=BB106_10 Depth=1
.Ltmp2988:
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2989:
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
                                        #   in Loop: Header=BB106_10 Depth=1
	ld.d	$a0, $sp, 0
	beq	$a0, $s1, .LBB106_9
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB106_10 Depth=1
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB106_9
.LBB106_26:
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB106_27:
.Ltmp2990:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s1, .LBB106_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i8
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB106_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end106:
	.size	_ZN2PP11PowerParser12get_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE, .Lfunc_end106-_ZN2PP11PowerParser12get_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table106:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Lfunc_begin62-.Lfunc_begin62  # >> Call Site 1 <<
	.uleb128 .Ltmp2988-.Lfunc_begin62       #   Call between .Lfunc_begin62 and .Ltmp2988
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2988-.Lfunc_begin62       # >> Call Site 2 <<
	.uleb128 .Ltmp2989-.Ltmp2988            #   Call between .Ltmp2988 and .Ltmp2989
	.uleb128 .Ltmp2990-.Lfunc_begin62       #     jumps to .Ltmp2990
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2989-.Lfunc_begin62       # >> Call Site 3 <<
	.uleb128 .Lfunc_end106-.Ltmp2989        #   Call between .Ltmp2989 and .Lfunc_end106
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end62:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser12set_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE # -- Begin function _ZN2PP11PowerParser12set_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.p2align	5
	.type	_ZN2PP11PowerParser12set_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,@function
_ZN2PP11PowerParser12set_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE: # @_ZN2PP11PowerParser12set_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a1
	move	$s0, $a0
	addi.d	$a0, $a0, 2047
	addi.d	$s1, $a0, 417
	ldptr.d	$s2, $s0, 2480
	ldptr.d	$s3, $s0, 2488
	ori	$a0, $zero, 2512
	vldx	$vr0, $s0, $a0
	ldptr.d	$s4, $s0, 2496
	ldptr.d	$s5, $s0, 2504
	st.d	$s2, $sp, 32
	vst	$vr0, $sp, 0
	ori	$a0, $zero, 2528
	vldx	$vr0, $s0, $a0
	st.d	$s3, $sp, 40
	st.d	$s4, $sp, 48
	st.d	$s5, $sp, 56
	vst	$vr0, $sp, 16
.Ltmp2991:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_)
	jirl	$ra, $ra, 0
.Ltmp2992:
# %bb.1:                                # %.noexc.i
	ldptr.d	$s6, $s0, 2536
	bgeu	$s5, $s6, .LBB107_4
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$a1, $s5
	.p2align	4, , 16
.LBB107_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s7, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s7
	bltu	$s7, $s6, .LBB107_3
.LBB107_4:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	stptr.d	$s2, $s0, 2512
	stptr.d	$s3, $s0, 2520
	stptr.d	$s4, $s0, 2528
	stptr.d	$s5, $s0, 2536
	ld.d	$a0, $fp, 8
	ld.d	$a2, $fp, 0
	sub.d	$a0, $a0, $a2
	srli.d	$a0, $a0, 5
	addi.w	$a0, $a0, 0
	blez	$a0, .LBB107_16
# %bb.5:                                # %.lr.ph.preheader
	move	$s4, $zero
	move	$s5, $zero
	ori	$s6, $zero, 16
	addi.w	$s7, $zero, -1
	b	.LBB107_9
	.p2align	4, , 16
.LBB107_6:                              #   in Loop: Header=BB107_9 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB107_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB107_9 Depth=1
	ld.d	$a0, $sp, 32
	st.d	$a0, $s2, 8
	ldptr.d	$a0, $s0, 2512
	addi.d	$a0, $a0, 32
	stptr.d	$a0, $s0, 2512
.LBB107_8:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB107_9 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a2, $fp, 0
	addi.d	$s5, $s5, 1
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 27
	srai.d	$a0, $a0, 32
	addi.d	$s4, $s4, 32
	bge	$s5, $a0, .LBB107_16
.LBB107_9:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ldptr.d	$a0, $s0, 2528
	ldptr.d	$s2, $s0, 2512
	addi.d	$a0, $a0, -32
	add.d	$a1, $a2, $s4
	beq	$s2, $a0, .LBB107_15
# %bb.10:                               #   in Loop: Header=BB107_9 Depth=1
	addi.d	$a0, $s2, 16
	st.d	$a0, $s2, 0
	ld.d	$a1, $a1, 8
	ldx.d	$s3, $a2, $s4
	st.d	$a1, $sp, 32
	bltu	$a1, $s6, .LBB107_12
# %bb.11:                               # %.noexc.i.i
                                        #   in Loop: Header=BB107_9 Depth=1
	addi.d	$a1, $sp, 32
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 0
	ld.d	$a1, $sp, 32
	st.d	$a1, $s2, 16
.LBB107_12:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB107_9 Depth=1
	beq	$a1, $s7, .LBB107_7
# %bb.13:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB107_9 Depth=1
	bnez	$a1, .LBB107_6
# %bb.14:                               #   in Loop: Header=BB107_9 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB107_7
	.p2align	4, , 16
.LBB107_15:                             #   in Loop: Header=BB107_9 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB107_8
.LBB107_16:                             # %._crit_edge
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB107_17:
.Ltmp2993:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end107:
	.size	_ZN2PP11PowerParser12set_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE, .Lfunc_end107-_ZN2PP11PowerParser12set_rb_namesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table107:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Ltmp2991-.Lfunc_begin63       # >> Call Site 1 <<
	.uleb128 .Ltmp2992-.Ltmp2991            #   Call between .Ltmp2991 and .Ltmp2992
	.uleb128 .Ltmp2993-.Lfunc_begin63       #     jumps to .Ltmp2993
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2992-.Lfunc_begin63       # >> Call Site 2 <<
	.uleb128 .Lfunc_end107-.Ltmp2992        #   Call between .Ltmp2992 and .Lfunc_end107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end63:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13get_rb_aflagsEPi # -- Begin function _ZN2PP11PowerParser13get_rb_aflagsEPi
	.p2align	5
	.type	_ZN2PP11PowerParser13get_rb_aflagsEPi,@function
_ZN2PP11PowerParser13get_rb_aflagsEPi:  # @_ZN2PP11PowerParser13get_rb_aflagsEPi
# %bb.0:
	ldptr.d	$a2, $a0, 2448
	ldptr.d	$a3, $a0, 2416
	sub.d	$a4, $a2, $a3
	ldptr.d	$a5, $a0, 2424
	ldptr.d	$a6, $a0, 2432
	srai.d	$a4, $a4, 3
	sltu	$a2, $zero, $a2
	sub.d	$a7, $a4, $a2
	sub.d	$a2, $a5, $a6
	srai.d	$a5, $a2, 3
	lu12i.w	$a2, -258112
	ori	$a4, $a2, 4033
	lu32i.d	$a4, 64527
	ldptr.d	$a6, $a0, 2408
	ldptr.d	$a2, $a0, 2392
	lu52i.d	$a4, $a4, 252
	mul.d	$a5, $a5, $a4
	add.d	$a5, $a7, $a5
	sub.d	$a6, $a6, $a2
	srai.d	$a6, $a6, 3
	mul.d	$a6, $a6, $a4
	add.d	$a5, $a5, $a6
	addi.w	$a6, $a5, 0
	blez	$a6, .LBB108_5
# %bb.1:                                # %.lr.ph
	ldptr.d	$a0, $a0, 2400
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 3
	mul.d	$a0, $a0, $a4
	bstrpick.d	$a4, $a5, 30, 0
	alsl.d	$a3, $a0, $a3, 3
	b	.LBB108_3
	.p2align	4, , 16
.LBB108_2:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB108_3 Depth=1
	ld.w	$a5, $a5, 480
	st.w	$a5, $a1, 0
	addi.d	$a1, $a1, 4
	addi.d	$a3, $a3, 8
	addi.d	$a0, $a0, 1
	addi.d	$a4, $a4, -1
	addi.d	$a2, $a2, 520
	beqz	$a4, .LBB108_5
.LBB108_3:                              # =>This Inner Loop Header: Depth=1
	move	$a5, $a2
	beqz	$a0, .LBB108_2
# %bb.4:                                #   in Loop: Header=BB108_3 Depth=1
	ld.d	$a5, $a3, 0
	b	.LBB108_2
.LBB108_5:                              # %._crit_edge
	ret
.Lfunc_end108:
	.size	_ZN2PP11PowerParser13get_rb_aflagsEPi, .Lfunc_end108-_ZN2PP11PowerParser13get_rb_aflagsEPi
                                        # -- End function
	.globl	_ZN2PP11PowerParser13set_rb_aflagsEPii # -- Begin function _ZN2PP11PowerParser13set_rb_aflagsEPii
	.p2align	5
	.type	_ZN2PP11PowerParser13set_rb_aflagsEPii,@function
_ZN2PP11PowerParser13set_rb_aflagsEPii: # @_ZN2PP11PowerParser13set_rb_aflagsEPii
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ori	$a0, $zero, 2560
	vldx	$vr0, $s1, $a0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	ldptr.d	$a3, $s1, 2584
	ori	$a0, $zero, 2576
	ldptr.d	$s2, $s1, 2616
	vldx	$vr0, $s1, $a0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	move	$fp, $a2
	move	$s0, $a1
	bgeu	$a3, $s2, .LBB109_2
	.p2align	4, , 16
.LBB109_1:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a3, 8
	addi.d	$s3, $a3, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a3, $s3
	bltu	$s3, $s2, .LBB109_1
.LBB109_2:                              # %_ZNSt5dequeIbSaIbEE5clearEv.exit
	ori	$a0, $zero, 2592
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vstx	$vr0, $s1, $a0
	ori	$a0, $zero, 2608
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vstx	$vr0, $s1, $a0
	blez	$fp, .LBB109_5
# %bb.3:                                # %.lr.ph.preheader
	addi.d	$a0, $s1, 2047
	addi.d	$s1, $a0, 497
	.p2align	4, , 16
.LBB109_4:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a0, $s0, 0
	sltu	$a0, $zero, $a0
	st.b	$a0, $sp, 47
	addi.d	$a1, $sp, 47
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, -1
	addi.d	$s0, $s0, 4
	bnez	$fp, .LBB109_4
.LBB109_5:                              # %._crit_edge
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end109:
	.size	_ZN2PP11PowerParser13set_rb_aflagsEPii, .Lfunc_end109-_ZN2PP11PowerParser13set_rb_aflagsEPii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser14get_rb_satsizeEPi # -- Begin function _ZN2PP11PowerParser14get_rb_satsizeEPi
	.p2align	5
	.type	_ZN2PP11PowerParser14get_rb_satsizeEPi,@function
_ZN2PP11PowerParser14get_rb_satsizeEPi: # @_ZN2PP11PowerParser14get_rb_satsizeEPi
# %bb.0:
	ldptr.d	$a2, $a0, 2448
	ldptr.d	$a5, $a0, 2416
	sub.d	$a3, $a2, $a5
	ldptr.d	$a4, $a0, 2424
	ldptr.d	$a6, $a0, 2432
	srai.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a7, $a3, $a2
	sub.d	$a2, $a4, $a6
	srai.d	$a4, $a2, 3
	lu12i.w	$a2, -258112
	ori	$a3, $a2, 4033
	lu32i.d	$a3, 64527
	ldptr.d	$a6, $a0, 2408
	ldptr.d	$a2, $a0, 2392
	lu52i.d	$a3, $a3, 252
	mul.d	$a4, $a4, $a3
	add.d	$a4, $a7, $a4
	sub.d	$a6, $a6, $a2
	srai.d	$a6, $a6, 3
	mul.d	$a6, $a6, $a3
	add.d	$a4, $a4, $a6
	addi.w	$a6, $a4, 0
	blez	$a6, .LBB110_5
# %bb.1:                                # %.lr.ph
	ldptr.d	$a6, $a0, 2400
	move	$a0, $zero
	sub.d	$a6, $a2, $a6
	srai.d	$a6, $a6, 3
	mul.d	$a3, $a6, $a3
	bstrpick.d	$a4, $a4, 30, 0
	alsl.d	$a5, $a3, $a5, 3
	b	.LBB110_3
	.p2align	4, , 16
.LBB110_2:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB110_3 Depth=1
	ld.d	$a7, $a6, 392
	ld.d	$t0, $a6, 360
	sub.d	$t0, $a7, $t0
	srli.d	$t0, $t0, 3
	sltu	$a7, $zero, $a7
	ld.d	$t1, $a6, 368
	ld.d	$t2, $a6, 376
	sub.d	$a7, $t0, $a7
	ld.d	$t0, $a6, 352
	ld.d	$a6, $a6, 336
	sub.d	$t1, $t1, $t2
	srli.d	$t1, $t1, 5
	alsl.d	$a7, $a7, $t1, 4
	sub.d	$a6, $t0, $a6
	srli.d	$a6, $a6, 5
	add.d	$a6, $a7, $a6
	add.d	$a0, $a0, $a6
	addi.d	$a5, $a5, 8
	addi.d	$a3, $a3, 1
	addi.d	$a4, $a4, -1
	addi.d	$a2, $a2, 520
	beqz	$a4, .LBB110_6
.LBB110_3:                              # =>This Inner Loop Header: Depth=1
	move	$a6, $a2
	beqz	$a3, .LBB110_2
# %bb.4:                                #   in Loop: Header=BB110_3 Depth=1
	ld.d	$a6, $a5, 0
	b	.LBB110_2
.LBB110_5:
	move	$a0, $zero
.LBB110_6:                              # %._crit_edge
	st.w	$a0, $a1, 0
	ret
.Lfunc_end110:
	.size	_ZN2PP11PowerParser14get_rb_satsizeEPi, .Lfunc_end110-_ZN2PP11PowerParser14get_rb_satsizeEPi
                                        # -- End function
	.globl	_ZN2PP11PowerParser14set_rb_satsizeEi # -- Begin function _ZN2PP11PowerParser14set_rb_satsizeEi
	.p2align	5
	.type	_ZN2PP11PowerParser14set_rb_satsizeEi,@function
_ZN2PP11PowerParser14set_rb_satsizeEi:  # @_ZN2PP11PowerParser14set_rb_satsizeEi
# %bb.0:
	stptr.w	$a1, $a0, 2624
	ret
.Lfunc_end111:
	.size	_ZN2PP11PowerParser14set_rb_satsizeEi, .Lfunc_end111-_ZN2PP11PowerParser14set_rb_satsizeEi
                                        # -- End function
	.globl	_ZN2PP11PowerParser13get_rb_satprbEPi # -- Begin function _ZN2PP11PowerParser13get_rb_satprbEPi
	.p2align	5
	.type	_ZN2PP11PowerParser13get_rb_satprbEPi,@function
_ZN2PP11PowerParser13get_rb_satprbEPi:  # @_ZN2PP11PowerParser13get_rb_satprbEPi
# %bb.0:
	ldptr.d	$a2, $a0, 2448
	ldptr.d	$a4, $a0, 2416
	sub.d	$a3, $a2, $a4
	ldptr.d	$a5, $a0, 2424
	ldptr.d	$a6, $a0, 2432
	srai.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a7, $a3, $a2
	sub.d	$a2, $a5, $a6
	srai.d	$a5, $a2, 3
	lu12i.w	$a2, -258112
	ori	$a3, $a2, 4033
	lu32i.d	$a3, 64527
	ldptr.d	$a6, $a0, 2408
	ldptr.d	$a2, $a0, 2392
	lu52i.d	$a3, $a3, 252
	mul.d	$a5, $a5, $a3
	add.d	$a5, $a7, $a5
	sub.d	$a6, $a6, $a2
	srai.d	$a6, $a6, 3
	mul.d	$a6, $a6, $a3
	add.d	$a5, $a5, $a6
	addi.w	$a6, $a5, 0
	blez	$a6, .LBB112_5
# %bb.1:                                # %.lr.ph
	ldptr.d	$a0, $a0, 2400
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 3
	mul.d	$a0, $a0, $a3
	bstrpick.d	$a3, $a5, 30, 0
	alsl.d	$a4, $a0, $a4, 3
	b	.LBB112_3
	.p2align	4, , 16
.LBB112_2:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB112_3 Depth=1
	ld.d	$a6, $a5, 392
	ld.d	$a7, $a5, 360
	sub.d	$a7, $a6, $a7
	srli.d	$a7, $a7, 3
	sltu	$a6, $zero, $a6
	ld.d	$t0, $a5, 368
	ld.d	$t1, $a5, 376
	sub.d	$a6, $a7, $a6
	ld.d	$a7, $a5, 352
	ld.d	$a5, $a5, 336
	sub.d	$t0, $t0, $t1
	srli.d	$t0, $t0, 5
	alsl.d	$a6, $a6, $t0, 4
	sub.d	$a5, $a7, $a5
	srli.d	$a5, $a5, 5
	add.d	$a5, $a6, $a5
	st.w	$a5, $a1, 0
	addi.d	$a1, $a1, 4
	addi.d	$a4, $a4, 8
	addi.d	$a0, $a0, 1
	addi.d	$a3, $a3, -1
	addi.d	$a2, $a2, 520
	beqz	$a3, .LBB112_5
.LBB112_3:                              # =>This Inner Loop Header: Depth=1
	move	$a5, $a2
	beqz	$a0, .LBB112_2
# %bb.4:                                #   in Loop: Header=BB112_3 Depth=1
	ld.d	$a5, $a4, 0
	b	.LBB112_2
.LBB112_5:                              # %._crit_edge
	ret
.Lfunc_end112:
	.size	_ZN2PP11PowerParser13get_rb_satprbEPi, .Lfunc_end112-_ZN2PP11PowerParser13get_rb_satprbEPi
                                        # -- End function
	.globl	_ZN2PP11PowerParser13set_rb_satprbEPii # -- Begin function _ZN2PP11PowerParser13set_rb_satprbEPii
	.p2align	5
	.type	_ZN2PP11PowerParser13set_rb_satprbEPii,@function
_ZN2PP11PowerParser13set_rb_satprbEPii: # @_ZN2PP11PowerParser13set_rb_satprbEPii
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 2728
	vldx	$vr0, $fp, $a0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	ldptr.d	$a3, $fp, 2752
	ori	$a0, $zero, 2744
	ldptr.d	$s2, $fp, 2784
	vldx	$vr0, $fp, $a0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	move	$s0, $a2
	move	$s1, $a1
	bgeu	$a3, $s2, .LBB113_2
	.p2align	4, , 16
.LBB113_1:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a3, 8
	addi.d	$s3, $a3, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a3, $s3
	bltu	$s3, $s2, .LBB113_1
.LBB113_2:                              # %_ZNSt5dequeIiSaIiEE5clearEv.exit
	ori	$a0, $zero, 2760
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vstx	$vr0, $fp, $a0
	ori	$a0, $zero, 2776
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vstx	$vr0, $fp, $a0
	blez	$s0, .LBB113_7
# %bb.3:                                # %.lr.ph.preheader
	addi.d	$a0, $fp, 2047
	addi.d	$s2, $a0, 665
	b	.LBB113_5
	.p2align	4, , 16
.LBB113_4:                              #   in Loop: Header=BB113_5 Depth=1
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, -1
	addi.d	$s1, $s1, 4
	beqz	$s0, .LBB113_7
.LBB113_5:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ldptr.d	$a1, $fp, 2776
	ldptr.d	$a0, $fp, 2760
	addi.d	$a1, $a1, -4
	beq	$a0, $a1, .LBB113_4
# %bb.6:                                #   in Loop: Header=BB113_5 Depth=1
	ld.w	$a1, $s1, 0
	st.w	$a1, $a0, 0
	addi.d	$a0, $a0, 4
	stptr.d	$a0, $fp, 2760
	addi.d	$s0, $s0, -1
	addi.d	$s1, $s1, 4
	bnez	$s0, .LBB113_5
.LBB113_7:                              # %._crit_edge
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end113:
	.size	_ZN2PP11PowerParser13set_rb_satprbEPii, .Lfunc_end113-_ZN2PP11PowerParser13set_rb_satprbEPii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser10get_rb_satEPi # -- Begin function _ZN2PP11PowerParser10get_rb_satEPi
	.p2align	5
	.type	_ZN2PP11PowerParser10get_rb_satEPi,@function
_ZN2PP11PowerParser10get_rb_satEPi:     # @_ZN2PP11PowerParser10get_rb_satEPi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ldptr.d	$a2, $a0, 2448
	ldptr.d	$a3, $a0, 2416
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	sub.d	$a3, $a2, $a3
	ldptr.d	$a4, $a0, 2424
	ldptr.d	$a5, $a0, 2432
	srai.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a2, $a4, $a5
	srai.d	$a4, $a2, 3
	lu12i.w	$a2, -258112
	ori	$a2, $a2, 4033
	lu32i.d	$a2, 64527
	ldptr.d	$a5, $a0, 2408
	ldptr.d	$a6, $a0, 2392
	lu52i.d	$a2, $a2, 252
	mul.d	$a4, $a4, $a2
	add.d	$a3, $a3, $a4
	st.d	$a6, $sp, 40                    # 8-byte Folded Spill
	sub.d	$a4, $a5, $a6
	srai.d	$a4, $a4, 3
	mul.d	$a4, $a4, $a2
	add.d	$a3, $a3, $a4
	addi.w	$a4, $a3, 0
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	blez	$a4, .LBB114_18
# %bb.1:                                # %.preheader.lr.ph
	ldptr.d	$a0, $a0, 2400
	move	$s3, $zero
	move	$a4, $zero
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	sub.d	$a0, $a1, $a0
	srai.d	$a0, $a0, 3
	mul.d	$a0, $a0, $a2
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	bstrpick.d	$a0, $a3, 30, 0
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ori	$s7, $zero, 15
	ori	$s8, $zero, 4
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$s0, $a0, %pc_lo12(.L.str.215)
	b	.LBB114_3
	.p2align	4, , 16
.LBB114_2:                              #   in Loop: Header=BB114_3 Depth=1
	addi.d	$s3, $s3, 1
	ld.d	$a4, $sp, 48                    # 8-byte Folded Reload
	add.w	$a4, $a4, $s1
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	beq	$s3, $a0, .LBB114_18
.LBB114_3:                              # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB114_6 Depth 2
	move	$fp, $zero
	move	$s1, $zero
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	add.d	$s2, $a0, $s3
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	alsl.d	$s5, $s2, $a0, 3
	slli.d	$a0, $s3, 9
	alsl.d	$a0, $s3, $a0, 3
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	add.d	$s6, $a1, $a0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	st.d	$a4, $sp, 48                    # 8-byte Folded Spill
	alsl.d	$s4, $a4, $a0, 2
	b	.LBB114_6
	.p2align	4, , 16
.LBB114_4:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.i
                                        #   in Loop: Header=BB114_6 Depth=2
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 4
	move	$a1, $s0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
.LBB114_5:                              # %_ZN2PP12Restartblock7get_satEi.exit
                                        #   in Loop: Header=BB114_6 Depth=2
	st.w	$a0, $s4, 0
	addi.d	$s1, $s1, 1
	addi.d	$fp, $fp, 32
	addi.d	$s4, $s4, 4
.LBB114_6:                              #   Parent Loop BB114_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s6
	beqz	$s2, .LBB114_8
# %bb.7:                                #   in Loop: Header=BB114_6 Depth=2
	ld.d	$a0, $s5, 0
.LBB114_8:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB114_6 Depth=2
	ld.d	$a1, $a0, 392
	ld.d	$a2, $a0, 360
	sub.d	$a2, $a1, $a2
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $a0, 368
	ld.d	$a4, $a0, 376
	sub.d	$a1, $a2, $a1
	ld.d	$a2, $a0, 352
	ld.d	$a0, $a0, 336
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 5
	alsl.d	$a1, $a1, $a3, 4
	sub.d	$a0, $a2, $a0
	srli.d	$a0, $a0, 5
	add.w	$a0, $a1, $a0
	bge	$s1, $a0, .LBB114_2
# %bb.9:                                #   in Loop: Header=BB114_6 Depth=2
	move	$a0, $s6
	beqz	$s2, .LBB114_11
# %bb.10:                               #   in Loop: Header=BB114_6 Depth=2
	ld.d	$a0, $s5, 0
.LBB114_11:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit13
                                        #   in Loop: Header=BB114_6 Depth=2
	ld.d	$a2, $a0, 336
	ld.d	$a1, $a0, 344
	ld.d	$a0, $a0, 360
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $s1, $a1
	bltz	$a1, .LBB114_14
# %bb.12:                               #   in Loop: Header=BB114_6 Depth=2
	bltu	$s7, $a1, .LBB114_15
# %bb.13:                               #   in Loop: Header=BB114_6 Depth=2
	add.d	$a0, $a2, $fp
	ld.d	$a1, $a0, 8
	beq	$a1, $s8, .LBB114_4
	b	.LBB114_17
	.p2align	4, , 16
.LBB114_14:                             #   in Loop: Header=BB114_6 Depth=2
	srai.d	$a2, $a1, 4
	b	.LBB114_16
	.p2align	4, , 16
.LBB114_15:                             #   in Loop: Header=BB114_6 Depth=2
	srli.d	$a2, $a1, 4
.LBB114_16:                             #   in Loop: Header=BB114_6 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
	ld.d	$a1, $a0, 8
	beq	$a1, $s8, .LBB114_4
.LBB114_17:                             #   in Loop: Header=BB114_6 Depth=2
	move	$a0, $zero
	b	.LBB114_5
.LBB114_18:                             # %._crit_edge
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.Lfunc_end114:
	.size	_ZN2PP11PowerParser10get_rb_satEPi, .Lfunc_end114-_ZN2PP11PowerParser10get_rb_satEPi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser10set_rb_satEPii # -- Begin function _ZN2PP11PowerParser10set_rb_satEPii
	.p2align	5
	.type	_ZN2PP11PowerParser10set_rb_satEPii,@function
_ZN2PP11PowerParser10set_rb_satEPii:    # @_ZN2PP11PowerParser10set_rb_satEPii
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ori	$a0, $zero, 2648
	vldx	$vr0, $s1, $a0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	ldptr.d	$a3, $s1, 2672
	ori	$a0, $zero, 2664
	ldptr.d	$s2, $s1, 2704
	vldx	$vr0, $s1, $a0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	move	$fp, $a2
	move	$s0, $a1
	bgeu	$a3, $s2, .LBB115_2
	.p2align	4, , 16
.LBB115_1:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a3, 8
	addi.d	$s3, $a3, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a3, $s3
	bltu	$s3, $s2, .LBB115_1
.LBB115_2:                              # %_ZNSt5dequeIbSaIbEE5clearEv.exit
	ori	$a0, $zero, 2680
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vstx	$vr0, $s1, $a0
	ori	$a0, $zero, 2696
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vstx	$vr0, $s1, $a0
	blez	$fp, .LBB115_5
# %bb.3:                                # %.lr.ph.preheader
	addi.d	$a0, $s1, 2047
	addi.d	$s1, $a0, 585
	.p2align	4, , 16
.LBB115_4:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a0, $s0, 0
	addi.d	$a0, $a0, -1
	sltui	$a0, $a0, 1
	st.b	$a0, $sp, 47
	addi.d	$a1, $sp, 47
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE9push_backERKb)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, -1
	addi.d	$s0, $s0, 4
	bnez	$fp, .LBB115_4
.LBB115_5:                              # %._crit_edge
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end115:
	.size	_ZN2PP11PowerParser10set_rb_satEPii, .Lfunc_end115-_ZN2PP11PowerParser10set_rb_satEPii
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE9push_backERKb,"axG",@progbits,_ZNSt5dequeIbSaIbEE9push_backERKb,comdat
	.weak	_ZNSt5dequeIbSaIbEE9push_backERKb # -- Begin function _ZNSt5dequeIbSaIbEE9push_backERKb
	.p2align	5
	.type	_ZNSt5dequeIbSaIbEE9push_backERKb,@function
_ZNSt5dequeIbSaIbEE9push_backERKb:      # @_ZNSt5dequeIbSaIbEE9push_backERKb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a2, $a0, 64
	ld.d	$a0, $a0, 48
	addi.d	$a2, $a2, -1
	beq	$a0, $a2, .LBB116_2
# %bb.1:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	addi.d	$a0, $a0, 1
	b	.LBB116_6
.LBB116_2:
	ld.d	$s0, $fp, 72
	ld.d	$a2, $fp, 40
	sub.d	$a2, $s0, $a2
	srli.d	$a2, $a2, 3
	sltu	$a3, $zero, $s0
	ld.d	$a4, $fp, 56
	ld.d	$a5, $fp, 32
	ld.d	$a6, $fp, 16
	sub.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 9
	add.d	$a0, $a0, $a5
	add.d	$a3, $a4, $a6
	sub.d	$a0, $a0, $a3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 2047
	beq	$a0, $a2, .LBB116_7
# %bb.3:
	move	$s1, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s0, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB116_5
# %bb.4:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s0, $fp, 72
.LBB116_5:                              # %_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJRKbEEEvDpOT_.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	ld.d	$a1, $fp, 48
	ld.b	$a2, $s1, 0
	addi.d	$a3, $s0, 8
	st.b	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
.LBB116_6:
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB116_7:
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a0, $a0, %pc_lo12(.L.str.239)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end116:
	.size	_ZNSt5dequeIbSaIbEE9push_backERKb, .Lfunc_end116-_ZNSt5dequeIbSaIbEE9push_backERKb
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser19get_rb_num_varnamesEv # -- Begin function _ZN2PP11PowerParser19get_rb_num_varnamesEv
	.p2align	5
	.type	_ZN2PP11PowerParser19get_rb_num_varnamesEv,@function
_ZN2PP11PowerParser19get_rb_num_varnamesEv: # @_ZN2PP11PowerParser19get_rb_num_varnamesEv
	.cfi_startproc
# %bb.0:
	move	$a1, $a0
	ldptr.d	$a0, $a0, 2448
	ldptr.d	$a5, $a1, 2416
	sub.d	$a2, $a0, $a5
	ldptr.d	$a3, $a1, 2424
	ldptr.d	$a4, $a1, 2432
	srai.d	$a2, $a2, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a2, $a0
	sub.d	$a2, $a3, $a4
	srai.d	$a4, $a2, 3
	lu12i.w	$a2, -258112
	ori	$a3, $a2, 4033
	lu32i.d	$a3, 64527
	ldptr.d	$a6, $a1, 2408
	ldptr.d	$a2, $a1, 2392
	lu52i.d	$a3, $a3, 252
	mul.d	$a4, $a4, $a3
	add.d	$a0, $a0, $a4
	sub.d	$a4, $a6, $a2
	srai.d	$a4, $a4, 3
	mul.d	$a4, $a4, $a3
	add.d	$a4, $a0, $a4
	addi.w	$a0, $a4, 0
	blez	$a0, .LBB117_5
# %bb.1:                                # %.lr.ph
	ldptr.d	$a6, $a1, 2400
	move	$a0, $zero
	sub.d	$a6, $a2, $a6
	srai.d	$a6, $a6, 3
	mul.d	$a3, $a6, $a3
	bstrpick.d	$a4, $a4, 30, 0
	alsl.d	$a5, $a3, $a5, 3
	b	.LBB117_3
	.p2align	4, , 16
.LBB117_2:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB117_3 Depth=1
	ld.d	$a7, $a6, 72
	ld.d	$t0, $a6, 40
	sub.d	$t0, $a7, $t0
	srli.d	$t0, $t0, 3
	sltu	$a7, $zero, $a7
	ld.d	$t1, $a6, 48
	ld.d	$t2, $a6, 56
	sub.d	$a7, $t0, $a7
	ld.d	$t0, $a6, 32
	ld.d	$a6, $a6, 16
	sub.d	$t1, $t1, $t2
	srli.d	$t1, $t1, 7
	alsl.d	$a7, $a7, $t1, 2
	sub.d	$a6, $t0, $a6
	srli.d	$a6, $a6, 7
	add.d	$a6, $a7, $a6
	add.w	$a0, $a0, $a6
	addi.d	$a5, $a5, 8
	addi.d	$a3, $a3, 1
	addi.d	$a4, $a4, -1
	addi.d	$a2, $a2, 520
	beqz	$a4, .LBB117_6
.LBB117_3:                              # =>This Inner Loop Header: Depth=1
	move	$a6, $a2
	beqz	$a3, .LBB117_2
# %bb.4:                                #   in Loop: Header=BB117_3 Depth=1
	ld.d	$a6, $a5, 0
	b	.LBB117_2
.LBB117_5:
	move	$a0, $zero
.LBB117_6:                              # %.preheader
	ldptr.d	$a2, $a1, 2368
	ldptr.d	$a4, $a1, 2336
	sub.d	$a3, $a2, $a4
	ldptr.d	$a5, $a1, 2344
	ldptr.d	$a6, $a1, 2352
	srai.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a7, $a3, $a2
	sub.d	$a2, $a5, $a6
	srai.d	$a5, $a2, 3
	lu12i.w	$a2, -118150
	ori	$a3, $a2, 2423
	lu32i.d	$a3, -177225
	ldptr.d	$a6, $a1, 2328
	ldptr.d	$a2, $a1, 2312
	lu52i.d	$a3, $a3, 403
	mul.d	$a5, $a5, $a3
	add.d	$a5, $a7, $a5
	sub.d	$a6, $a6, $a2
	srai.d	$a6, $a6, 3
	mul.d	$a6, $a6, $a3
	add.d	$a5, $a5, $a6
	addi.w	$a6, $a5, 0
	blez	$a6, .LBB117_11
# %bb.7:                                # %.lr.ph18
	ldptr.d	$a1, $a1, 2320
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $a3
	bstrpick.d	$a3, $a5, 30, 0
	alsl.d	$a4, $a1, $a4, 3
	b	.LBB117_9
	.p2align	4, , 16
.LBB117_8:                              # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB117_9 Depth=1
	ld.d	$a6, $a5, 72
	ld.d	$a7, $a5, 40
	sub.d	$a7, $a6, $a7
	srli.d	$a7, $a7, 3
	sltu	$a6, $zero, $a6
	ld.d	$t0, $a5, 48
	ld.d	$t1, $a5, 56
	sub.d	$a6, $a7, $a6
	ld.d	$a7, $a5, 32
	ld.d	$a5, $a5, 16
	sub.d	$t0, $t0, $t1
	srli.d	$t0, $t0, 7
	alsl.d	$a6, $a6, $t0, 2
	sub.d	$a5, $a7, $a5
	srli.d	$a5, $a5, 7
	add.d	$a5, $a6, $a5
	add.w	$a0, $a0, $a5
	addi.d	$a4, $a4, 8
	addi.d	$a1, $a1, 1
	addi.d	$a3, $a3, -1
	addi.d	$a2, $a2, 568
	beqz	$a3, .LBB117_11
.LBB117_9:                              # =>This Inner Loop Header: Depth=1
	move	$a5, $a2
	beqz	$a1, .LBB117_8
# %bb.10:                               #   in Loop: Header=BB117_9 Depth=1
	ld.d	$a5, $a4, 0
	b	.LBB117_8
.LBB117_11:                             # %._crit_edge
	ret
.Lfunc_end117:
	.size	_ZN2PP11PowerParser19get_rb_num_varnamesEv, .Lfunc_end117-_ZN2PP11PowerParser19get_rb_num_varnamesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser15get_rb_varnamesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE # -- Begin function _ZN2PP11PowerParser15get_rb_varnamesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.p2align	5
	.type	_ZN2PP11PowerParser15get_rb_varnamesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,@function
_ZN2PP11PowerParser15get_rb_varnamesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE: # @_ZN2PP11PowerParser15get_rb_varnamesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	addi.d	$sp, $sp, -192
	.cfi_def_cfa_offset 192
	st.d	$ra, $sp, 184                   # 8-byte Folded Spill
	st.d	$fp, $sp, 176                   # 8-byte Folded Spill
	st.d	$s0, $sp, 168                   # 8-byte Folded Spill
	st.d	$s1, $sp, 160                   # 8-byte Folded Spill
	st.d	$s2, $sp, 152                   # 8-byte Folded Spill
	st.d	$s3, $sp, 144                   # 8-byte Folded Spill
	st.d	$s4, $sp, 136                   # 8-byte Folded Spill
	st.d	$s5, $sp, 128                   # 8-byte Folded Spill
	st.d	$s6, $sp, 120                   # 8-byte Folded Spill
	st.d	$s7, $sp, 112                   # 8-byte Folded Spill
	st.d	$s8, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a1
	ld.d	$s1, $a1, 0
	ld.d	$s2, $a1, 8
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	beq	$s2, $s1, .LBB118_6
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $s1, 16
	b	.LBB118_3
	.p2align	4, , 16
.LBB118_2:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB118_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $s2, .LBB118_5
.LBB118_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB118_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB118_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB118_2
.LBB118_5:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	st.d	$s1, $fp, 8
.LBB118_6:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	move	$s3, $zero
	addi.d	$s6, $sp, 80
	lu12i.w	$a0, -258112
	ori	$a0, $a0, 4033
	lu32i.d	$a0, 64527
	lu52i.d	$s4, $a0, 252
	addi.w	$s0, $zero, -1
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s1, $sp, 40                    # 8-byte Folded Reload
	st.d	$s0, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	b	.LBB118_8
	.p2align	4, , 16
.LBB118_7:                              # %._crit_edge
                                        #   in Loop: Header=BB118_8 Depth=1
	addi.d	$s3, $s3, 1
.LBB118_8:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB118_17 Depth 2
                                        #       Child Loop BB118_44 Depth 3
	ldptr.d	$a1, $s1, 2448
	ldptr.d	$a0, $s1, 2416
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $s1, 2424
	ldptr.d	$a4, $s1, 2432
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $s1, 2408
	ldptr.d	$a1, $s1, 2392
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s4
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s4
	add.w	$a2, $a2, $a3
	bge	$s3, $a2, .LBB118_51
# %bb.9:                                #   in Loop: Header=BB118_8 Depth=1
	ldptr.d	$a2, $s1, 2400
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $s4
	add.d	$a2, $a2, $s3
	beqz	$a2, .LBB118_11
# %bb.10:                               #   in Loop: Header=BB118_8 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB118_12
	.p2align	4, , 16
.LBB118_11:                             #   in Loop: Header=BB118_8 Depth=1
	slli.d	$a0, $s3, 9
	alsl.d	$a0, $s3, $a0, 3
	add.d	$a0, $a1, $a0
.LBB118_12:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB118_8 Depth=1
	ld.d	$a1, $a0, 72
	ld.d	$a2, $a0, 40
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $a0, 48
	ld.d	$a4, $a0, 56
	sub.d	$a1, $a2, $a1
	ld.d	$a2, $a0, 32
	ld.d	$a0, $a0, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a1, $a1, $a3, 2
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
	addi.w	$a1, $a0, 0
	blez	$a1, .LBB118_7
# %bb.13:                               # %.lr.ph.preheader
                                        #   in Loop: Header=BB118_8 Depth=1
	move	$s8, $zero
	bstrpick.d	$a0, $a0, 30, 0
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	slli.d	$a0, $s3, 9
	alsl.d	$a0, $s3, $a0, 3
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	b	.LBB118_17
	.p2align	4, , 16
.LBB118_14:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	st.d	$a1, $s7, 0
	ld.d	$a0, $sp, 80
	st.d	$a0, $s7, 16
.LBB118_15:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit.thread
                                        #   in Loop: Header=BB118_17 Depth=2
	st.d	$s5, $s7, 8
	ld.d	$a0, $fp, 8
	st.d	$s6, $sp, 64
	st.d	$zero, $sp, 72
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB118_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB118_17 Depth=2
	addi.d	$s8, $s8, 1
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	beq	$s8, $a0, .LBB118_7
.LBB118_17:                             # %.lr.ph
                                        #   Parent Loop BB118_8 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB118_44 Depth 3
	ldptr.d	$a0, $s1, 2392
	ldptr.d	$a1, $s1, 2400
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s4
	add.d	$a1, $a1, $s3
	beqz	$a1, .LBB118_19
# %bb.18:                               #   in Loop: Header=BB118_17 Depth=2
	ldptr.d	$a0, $s1, 2416
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB118_20
	.p2align	4, , 16
.LBB118_19:                             #   in Loop: Header=BB118_17 Depth=2
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
.LBB118_20:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit28
                                        #   in Loop: Header=BB118_17 Depth=2
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s8
	bltz	$a1, .LBB118_23
# %bb.21:                               #   in Loop: Header=BB118_17 Depth=2
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB118_24
# %bb.22:                               #   in Loop: Header=BB118_17 Depth=2
	slli.d	$a0, $s8, 7
	add.d	$a0, $a2, $a0
	b	.LBB118_26
	.p2align	4, , 16
.LBB118_23:                             #   in Loop: Header=BB118_17 Depth=2
	srai.d	$a2, $a1, 2
	b	.LBB118_25
	.p2align	4, , 16
.LBB118_24:                             #   in Loop: Header=BB118_17 Depth=2
	srli.d	$a2, $a1, 2
.LBB118_25:                             #   in Loop: Header=BB118_17 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB118_26:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB118_17 Depth=2
	st.d	$s6, $sp, 64
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 96
	move	$a0, $s6
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB118_28
# %bb.27:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 96
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 96
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB118_28:                             # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	beq	$a1, $s0, .LBB118_32
# %bb.29:                               # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	bnez	$a1, .LBB118_31
# %bb.30:                               #   in Loop: Header=BB118_17 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB118_32
	.p2align	4, , 16
.LBB118_31:                             #   in Loop: Header=BB118_17 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB118_32:                             # %_ZN2PP12Restartblock11get_varnameB5cxx11Ei.exit
                                        #   in Loop: Header=BB118_17 Depth=2
	ld.d	$s5, $sp, 96
	ld.d	$s7, $fp, 8
	ld.d	$a0, $fp, 16
	st.d	$s5, $sp, 72
	beq	$s7, $a0, .LBB118_35
# %bb.33:                               #   in Loop: Header=BB118_17 Depth=2
	addi.d	$a0, $s7, 16
	st.d	$a0, $s7, 0
	ld.d	$a1, $sp, 64
	bne	$a1, $s6, .LBB118_14
# %bb.34:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	addi.d	$a2, $s5, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB118_15
	.p2align	4, , 16
.LBB118_35:                             #   in Loop: Header=BB118_17 Depth=2
	ld.d	$s2, $fp, 0
	sub.d	$s6, $s7, $s2
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB118_97
# %bb.36:                               # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB118_17 Depth=2
	srai.d	$a0, $s6, 5
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	lu52i.d	$a1, $s0, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s3, $a0, 5
.Ltmp3000:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3001:
# %bb.37:                               # %.noexc58
                                        #   in Loop: Header=BB118_17 Depth=2
	move	$s4, $a0
	ld.d	$a1, $sp, 64
	add.d	$s0, $a0, $s6
	addi.d	$a0, $s0, 16
	stx.d	$a0, $s4, $s6
	addi.d	$s6, $sp, 80
	beq	$a1, $s6, .LBB118_39
# %bb.38:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i54
                                        #   in Loop: Header=BB118_17 Depth=2
	ld.d	$a0, $sp, 80
	st.d	$a1, $s0, 0
	st.d	$a0, $s0, 16
	b	.LBB118_40
.LBB118_39:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	addi.d	$a2, $s5, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB118_40:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
                                        #   in Loop: Header=BB118_17 Depth=2
	st.d	$s5, $s0, 8
	st.d	$s6, $sp, 64
	st.d	$zero, $sp, 72
	st.b	$zero, $sp, 80
	move	$s0, $s4
	beq	$s2, $s7, .LBB118_47
# %bb.41:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB118_17 Depth=2
	move	$s6, $zero
	b	.LBB118_44
	.p2align	4, , 16
.LBB118_42:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i55
                                        #   in Loop: Header=BB118_44 Depth=3
	st.d	$a1, $s1, 0
	ld.d	$a0, $s5, 0
	st.d	$a0, $s1, 16
	ld.d	$fp, $s0, 8
.LBB118_43:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB118_44 Depth=3
	st.d	$fp, $s1, 8
	stx.d	$s5, $s2, $s6
	st.d	$zero, $s0, 8
	addi.d	$s6, $s6, 32
	add.d	$a0, $s2, $s6
	st.b	$zero, $s5, 0
	beq	$a0, $s7, .LBB118_46
.LBB118_44:                             # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB118_8 Depth=1
                                        #     Parent Loop BB118_17 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	add.d	$s1, $s4, $s6
	addi.d	$a0, $s1, 16
	stx.d	$a0, $s4, $s6
	ldx.d	$a1, $s2, $s6
	add.d	$s0, $s2, $s6
	addi.d	$s5, $s0, 16
	bne	$s5, $a1, .LBB118_42
# %bb.45:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB118_44 Depth=3
	ld.d	$fp, $s0, 8
	addi.d	$a2, $fp, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB118_43
	.p2align	4, , 16
.LBB118_46:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i.loopexit
                                        #   in Loop: Header=BB118_17 Depth=2
	add.d	$s0, $s4, $s6
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 40                    # 8-byte Folded Reload
	addi.d	$s6, $sp, 80
.LBB118_47:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i
                                        #   in Loop: Header=BB118_17 Depth=2
	beqz	$s2, .LBB118_49
# %bb.48:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB118_49:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
                                        #   in Loop: Header=BB118_17 Depth=2
	addi.d	$a1, $s0, 32
	ld.d	$a0, $sp, 64
	st.d	$s4, $fp, 0
	st.d	$a1, $fp, 8
	add.d	$a1, $s4, $s3
	st.d	$a1, $fp, 16
	ld.d	$s0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	beq	$a0, $s6, .LBB118_16
# %bb.50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB118_17 Depth=2
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB118_16
.LBB118_51:                             # %.preheader
	move	$s3, $zero
	addi.d	$s6, $sp, 80
	lu12i.w	$a0, -118150
	ori	$a0, $a0, 2423
	lu32i.d	$a0, -177225
	lu52i.d	$s4, $a0, 403
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	b	.LBB118_53
	.p2align	4, , 16
.LBB118_52:                             # %._crit_edge100
                                        #   in Loop: Header=BB118_53 Depth=1
	addi.d	$s3, $s3, 1
.LBB118_53:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB118_62 Depth 2
                                        #       Child Loop BB118_89 Depth 3
	ldptr.d	$a1, $s1, 2368
	ldptr.d	$a0, $s1, 2336
	sub.d	$a2, $a1, $a0
	ldptr.d	$a3, $s1, 2344
	ldptr.d	$a4, $s1, 2352
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ldptr.d	$a4, $s1, 2328
	ldptr.d	$a1, $s1, 2312
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s4
	add.d	$a2, $a2, $a3
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 3
	mul.d	$a3, $a3, $s4
	add.w	$a2, $a2, $a3
	bge	$s3, $a2, .LBB118_96
# %bb.54:                               #   in Loop: Header=BB118_53 Depth=1
	ldptr.d	$a2, $s1, 2320
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $s4
	add.d	$a2, $a2, $s3
	ori	$a3, $zero, 568
	mul.d	$a3, $s3, $a3
	st.d	$a3, $sp, 24                    # 8-byte Folded Spill
	beqz	$a2, .LBB118_56
# %bb.55:                               #   in Loop: Header=BB118_53 Depth=1
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB118_57
	.p2align	4, , 16
.LBB118_56:                             #   in Loop: Header=BB118_53 Depth=1
	add.d	$a0, $a1, $a3
.LBB118_57:                             # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB118_53 Depth=1
	ld.d	$a1, $a0, 72
	ld.d	$a2, $a0, 40
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $a0, 48
	ld.d	$a4, $a0, 56
	sub.d	$a1, $a2, $a1
	ld.d	$a2, $a0, 32
	ld.d	$a0, $a0, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a1, $a1, $a3, 2
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
	addi.w	$a1, $a0, 0
	blez	$a1, .LBB118_52
# %bb.58:                               # %.lr.ph99.preheader
                                        #   in Loop: Header=BB118_53 Depth=1
	move	$s8, $zero
	bstrpick.d	$a0, $a0, 30, 0
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	b	.LBB118_62
	.p2align	4, , 16
.LBB118_59:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i43
                                        #   in Loop: Header=BB118_62 Depth=2
	st.d	$a1, $s7, 0
	ld.d	$a0, $sp, 80
	st.d	$a0, $s7, 16
.LBB118_60:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit47.thread
                                        #   in Loop: Header=BB118_62 Depth=2
	st.d	$s5, $s7, 8
	ld.d	$a0, $fp, 8
	st.d	$s6, $sp, 64
	st.d	$zero, $sp, 72
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB118_61:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50
                                        #   in Loop: Header=BB118_62 Depth=2
	addi.d	$s8, $s8, 1
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	beq	$s8, $a0, .LBB118_52
.LBB118_62:                             # %.lr.ph99
                                        #   Parent Loop BB118_53 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB118_89 Depth 3
	ldptr.d	$a0, $s1, 2312
	ldptr.d	$a1, $s1, 2320
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s4
	add.d	$a1, $a1, $s3
	beqz	$a1, .LBB118_64
# %bb.63:                               #   in Loop: Header=BB118_62 Depth=2
	ldptr.d	$a0, $s1, 2336
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB118_65
	.p2align	4, , 16
.LBB118_64:                             #   in Loop: Header=BB118_62 Depth=2
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
.LBB118_65:                             # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit37
                                        #   in Loop: Header=BB118_62 Depth=2
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s8
	bltz	$a1, .LBB118_68
# %bb.66:                               #   in Loop: Header=BB118_62 Depth=2
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB118_69
# %bb.67:                               #   in Loop: Header=BB118_62 Depth=2
	slli.d	$a0, $s8, 7
	add.d	$a0, $a2, $a0
	b	.LBB118_71
	.p2align	4, , 16
.LBB118_68:                             #   in Loop: Header=BB118_62 Depth=2
	srai.d	$a2, $a1, 2
	b	.LBB118_70
	.p2align	4, , 16
.LBB118_69:                             #   in Loop: Header=BB118_62 Depth=2
	srli.d	$a2, $a1, 2
.LBB118_70:                             #   in Loop: Header=BB118_62 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB118_71:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i38
                                        #   in Loop: Header=BB118_62 Depth=2
	st.d	$s6, $sp, 64
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 96
	move	$a0, $s6
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB118_73
# %bb.72:                               # %.noexc.i.i.i41
                                        #   in Loop: Header=BB118_62 Depth=2
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 96
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 96
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB118_73:                             # %._crit_edge.i.i.i.i40
                                        #   in Loop: Header=BB118_62 Depth=2
	beq	$a1, $s0, .LBB118_77
# %bb.74:                               # %._crit_edge.i.i.i.i40
                                        #   in Loop: Header=BB118_62 Depth=2
	bnez	$a1, .LBB118_76
# %bb.75:                               #   in Loop: Header=BB118_62 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB118_77
	.p2align	4, , 16
.LBB118_76:                             #   in Loop: Header=BB118_62 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB118_77:                             # %_ZN2PP8Whenthen11get_varnameB5cxx11Ei.exit
                                        #   in Loop: Header=BB118_62 Depth=2
	ld.d	$s5, $sp, 96
	ld.d	$s7, $fp, 8
	ld.d	$a0, $fp, 16
	st.d	$s5, $sp, 72
	beq	$s7, $a0, .LBB118_80
# %bb.78:                               #   in Loop: Header=BB118_62 Depth=2
	addi.d	$a0, $s7, 16
	st.d	$a0, $s7, 0
	ld.d	$a1, $sp, 64
	bne	$a1, $s6, .LBB118_59
# %bb.79:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i45
                                        #   in Loop: Header=BB118_62 Depth=2
	addi.d	$a2, $s5, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB118_60
	.p2align	4, , 16
.LBB118_80:                             #   in Loop: Header=BB118_62 Depth=2
	ld.d	$s2, $fp, 0
	sub.d	$s6, $s7, $s2
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB118_99
# %bb.81:                               # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit.i59
                                        #   in Loop: Header=BB118_62 Depth=2
	srai.d	$a0, $s6, 5
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	lu52i.d	$a1, $s0, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s3, $a0, 5
.Ltmp2994:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2995:
# %bb.82:                               # %.noexc81
                                        #   in Loop: Header=BB118_62 Depth=2
	move	$s4, $a0
	ld.d	$a1, $sp, 64
	add.d	$s0, $a0, $s6
	addi.d	$a0, $s0, 16
	stx.d	$a0, $s4, $s6
	addi.d	$s6, $sp, 80
	beq	$a1, $s6, .LBB118_84
# %bb.83:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i61
                                        #   in Loop: Header=BB118_62 Depth=2
	ld.d	$a0, $sp, 80
	st.d	$a1, $s0, 0
	st.d	$a0, $s0, 16
	b	.LBB118_85
.LBB118_84:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i79
                                        #   in Loop: Header=BB118_62 Depth=2
	addi.d	$a2, $s5, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB118_85:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i64
                                        #   in Loop: Header=BB118_62 Depth=2
	st.d	$s5, $s0, 8
	st.d	$s6, $sp, 64
	st.d	$zero, $sp, 72
	st.b	$zero, $sp, 80
	move	$s0, $s4
	beq	$s2, $s7, .LBB118_92
# %bb.86:                               # %.lr.ph.i.i.i.i66.preheader
                                        #   in Loop: Header=BB118_62 Depth=2
	move	$s6, $zero
	b	.LBB118_89
	.p2align	4, , 16
.LBB118_87:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i69
                                        #   in Loop: Header=BB118_89 Depth=3
	st.d	$a1, $s1, 0
	ld.d	$a0, $s5, 0
	st.d	$a0, $s1, 16
	ld.d	$fp, $s0, 8
.LBB118_88:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i72
                                        #   in Loop: Header=BB118_89 Depth=3
	st.d	$fp, $s1, 8
	stx.d	$s5, $s2, $s6
	st.d	$zero, $s0, 8
	addi.d	$s6, $s6, 32
	add.d	$a0, $s2, $s6
	st.b	$zero, $s5, 0
	beq	$a0, $s7, .LBB118_91
.LBB118_89:                             # %.lr.ph.i.i.i.i66
                                        #   Parent Loop BB118_53 Depth=1
                                        #     Parent Loop BB118_62 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	add.d	$s1, $s4, $s6
	addi.d	$a0, $s1, 16
	stx.d	$a0, $s4, $s6
	ldx.d	$a1, $s2, $s6
	add.d	$s0, $s2, $s6
	addi.d	$s5, $s0, 16
	bne	$s5, $a1, .LBB118_87
# %bb.90:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i78
                                        #   in Loop: Header=BB118_89 Depth=3
	ld.d	$fp, $s0, 8
	addi.d	$a2, $fp, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB118_88
	.p2align	4, , 16
.LBB118_91:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i74.loopexit
                                        #   in Loop: Header=BB118_62 Depth=2
	add.d	$s0, $s4, $s6
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 40                    # 8-byte Folded Reload
	addi.d	$s6, $sp, 80
.LBB118_92:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i74
                                        #   in Loop: Header=BB118_62 Depth=2
	beqz	$s2, .LBB118_94
# %bb.93:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i.i77
                                        #   in Loop: Header=BB118_62 Depth=2
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB118_94:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit47
                                        #   in Loop: Header=BB118_62 Depth=2
	addi.d	$a1, $s0, 32
	ld.d	$a0, $sp, 64
	st.d	$s4, $fp, 0
	st.d	$a1, $fp, 8
	add.d	$a1, $s4, $s3
	st.d	$a1, $fp, 16
	ld.d	$s0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	beq	$a0, $s6, .LBB118_61
# %bb.95:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
                                        #   in Loop: Header=BB118_62 Depth=2
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB118_61
.LBB118_96:
	ld.d	$s8, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 168                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 176                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 184                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 192
	ret
.LBB118_97:
.Ltmp3003:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp3004:
# %bb.98:                               # %.noexc57
.LBB118_99:
.Ltmp2997:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp2998:
# %bb.100:                              # %.noexc80
.LBB118_101:                            # %.loopexit
.Ltmp2996:
	b	.LBB118_105
.LBB118_102:                            # %.loopexit.split-lp
.Ltmp2999:
	b	.LBB118_105
.LBB118_103:                            # %.loopexit83
.Ltmp3002:
	b	.LBB118_105
.LBB118_104:                            # %.loopexit.split-lp84
.Ltmp3005:
.LBB118_105:
	addi.d	$a1, $sp, 80
	ld.d	$a2, $sp, 64
	beq	$a2, $a1, .LBB118_107
# %bb.106:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i51
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
.LBB118_107:
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end118:
	.size	_ZN2PP11PowerParser15get_rb_varnamesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE, .Lfunc_end118-_ZN2PP11PowerParser15get_rb_varnamesERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table118:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Lfunc_begin64-.Lfunc_begin64  # >> Call Site 1 <<
	.uleb128 .Ltmp3000-.Lfunc_begin64       #   Call between .Lfunc_begin64 and .Ltmp3000
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3000-.Lfunc_begin64       # >> Call Site 2 <<
	.uleb128 .Ltmp3001-.Ltmp3000            #   Call between .Ltmp3000 and .Ltmp3001
	.uleb128 .Ltmp3002-.Lfunc_begin64       #     jumps to .Ltmp3002
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3001-.Lfunc_begin64       # >> Call Site 3 <<
	.uleb128 .Ltmp2994-.Ltmp3001            #   Call between .Ltmp3001 and .Ltmp2994
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2994-.Lfunc_begin64       # >> Call Site 4 <<
	.uleb128 .Ltmp2995-.Ltmp2994            #   Call between .Ltmp2994 and .Ltmp2995
	.uleb128 .Ltmp2996-.Lfunc_begin64       #     jumps to .Ltmp2996
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2995-.Lfunc_begin64       # >> Call Site 5 <<
	.uleb128 .Ltmp3003-.Ltmp2995            #   Call between .Ltmp2995 and .Ltmp3003
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3003-.Lfunc_begin64       # >> Call Site 6 <<
	.uleb128 .Ltmp3004-.Ltmp3003            #   Call between .Ltmp3003 and .Ltmp3004
	.uleb128 .Ltmp3005-.Lfunc_begin64       #     jumps to .Ltmp3005
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2997-.Lfunc_begin64       # >> Call Site 7 <<
	.uleb128 .Ltmp2998-.Ltmp2997            #   Call between .Ltmp2997 and .Ltmp2998
	.uleb128 .Ltmp2999-.Lfunc_begin64       #     jumps to .Ltmp2999
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2998-.Lfunc_begin64       # >> Call Site 8 <<
	.uleb128 .Lfunc_end118-.Ltmp2998        #   Call between .Ltmp2998 and .Lfunc_end118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end64:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ldptr.d	$a0, $a0, 2448
	ldptr.d	$a2, $fp, 2416
	sub.d	$a2, $a0, $a2
	ldptr.d	$a3, $fp, 2424
	ldptr.d	$a4, $fp, 2432
	srai.d	$a2, $a2, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a2, $a0
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	lu12i.w	$a3, -258112
	ori	$a3, $a3, 4033
	lu32i.d	$a3, 64527
	ldptr.d	$a4, $fp, 2408
	ldptr.d	$a5, $fp, 2392
	lu52i.d	$a3, $a3, 252
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a4, $a5
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $a3
	add.w	$s2, $a0, $a2
	move	$s0, $a1
	blez	$s2, .LBB119_4
# %bb.1:                                # %.preheader.preheader
	move	$s1, $zero
	.p2align	4, , 16
.LBB119_2:                              # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi)
	jirl	$ra, $ra, 0
	addi.w	$s1, $s1, 1
	bne	$s2, $s1, .LBB119_2
# %bb.3:                                # %.loopexit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB119_4:
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	addi.d	$fp, $s0, 16
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB119_17
# %bb.5:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB119_7
# %bb.6:
	ld.bu	$a0, $s0, 67
	b	.LBB119_8
.LBB119_7:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB119_8:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.210)
	addi.d	$a1, $a0, %pc_lo12(.L.str.210)
	ori	$a2, $zero, 38
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB119_17
# %bb.9:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i9
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB119_11
# %bb.10:
	ld.bu	$a0, $s0, 67
	b	.LBB119_12
.LBB119_11:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB119_12:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit12
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$fp, $a1, 240
	beqz	$fp, .LBB119_17
# %bb.13:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i14
	ld.bu	$a1, $fp, 56
	beqz	$a1, .LBB119_15
# %bb.14:
	ld.bu	$a1, $fp, 67
	b	.LBB119_16
.LBB119_15:
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s0
.LBB119_16:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit17
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZNSo5flushEv)
	jr	$t8
.LBB119_17:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end119:
	.size	_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end119-_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser13list_rb_startEv # -- Begin function _ZN2PP11PowerParser13list_rb_startEv
	.p2align	5
	.type	_ZN2PP11PowerParser13list_rb_startEv,@function
_ZN2PP11PowerParser13list_rb_startEv:   # @_ZN2PP11PowerParser13list_rb_startEv
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	ld.d	$a2, $a0, 1184
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	addi.d	$a0, $a0, 1176
.Ltmp3006:
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3007:
# %bb.1:                                # %.noexc4
	ld.wu	$a2, $fp, 1168
	addi.d	$a0, $fp, 1104
	ld.d	$a3, $fp, 1184
	ld.d	$a1, $fp, 1176
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp3008:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp3009:
# %bb.2:                                # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB120_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB120_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$a1, $fp, 1080
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser10list_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	st.w	$zero, $fp, 1072
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB120_5:
.Ltmp3010:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s0, .LBB120_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB120_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end120:
	.size	_ZN2PP11PowerParser13list_rb_startEv, .Lfunc_end120-_ZN2PP11PowerParser13list_rb_startEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table120:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Ltmp3006-.Lfunc_begin65       # >> Call Site 1 <<
	.uleb128 .Ltmp3009-.Ltmp3006            #   Call between .Ltmp3006 and .Ltmp3009
	.uleb128 .Ltmp3010-.Lfunc_begin65       #     jumps to .Ltmp3010
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3009-.Lfunc_begin65       # >> Call Site 2 <<
	.uleb128 .Lfunc_end120-.Ltmp3009        #   Call between .Ltmp3009 and .Lfunc_end120
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end65:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi
.LCPI121_0:
	.dword	8                               # 0x8
	.dword	2314885530818453536             # 0x2020202020202020
	.text
	.globl	_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi
	.p2align	5
	.type	_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi,@function
_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi: # @_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	st.d	$s7, $sp, 192                   # 8-byte Folded Spill
	st.d	$s8, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s2, $a1
	ld.d	$a1, $a1, 16
	ld.d	$a1, $a1, -24
	addi.d	$a3, $s2, 16
	st.d	$a3, $sp, 48                    # 8-byte Folded Spill
	add.d	$a1, $a3, $a1
	ld.d	$s3, $a1, 240
	beqz	$s3, .LBB121_115
# %bb.1:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	move	$s6, $a2
	move	$s1, $a0
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB121_3
# %bb.2:
	ld.bu	$a0, $s3, 67
	b	.LBB121_4
.LBB121_3:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB121_4:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.213)
	addi.d	$a1, $a0, %pc_lo12(.L.str.213)
	ori	$a2, $zero, 49
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ldptr.d	$a0, $s1, 2392
	ldptr.d	$a1, $s1, 2400
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	lu12i.w	$a2, -258112
	ori	$a2, $a2, 4033
	lu32i.d	$a2, 64527
	lu52i.d	$a2, $a2, 252
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	mul.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s6
	slli.d	$s5, $s6, 9
	beqz	$a1, .LBB121_6
# %bb.5:
	ldptr.d	$a0, $s1, 2416
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB121_7
.LBB121_6:
	alsl.d	$a1, $s6, $s5, 3
	add.d	$a0, $a0, $a1
.LBB121_7:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit
	addi.d	$s0, $sp, 168
	ld.d	$a1, $a0, 496
	ld.d	$s3, $a0, 488
	st.d	$s0, $sp, 152
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s0
	bltu	$a1, $a2, .LBB121_9
# %bb.8:                                # %.noexc.i.i
	addi.d	$a0, $sp, 152
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 152
	st.d	$a1, $sp, 168
.LBB121_9:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB121_13
# %bb.10:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB121_12
# %bb.11:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB121_13
.LBB121_12:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB121_13:                             # %_ZN2PP12Restartblock8get_nameB5cxx11Ev.exit
	ld.d	$a2, $sp, 56
	ld.d	$a1, $sp, 152
	st.d	$a2, $sp, 160
.Ltmp3011:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3012:
# %bb.14:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB121_116
# %bb.15:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i114
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB121_17
# %bb.16:
	ld.bu	$a0, $s4, 67
	b	.LBB121_19
.LBB121_17:
.Ltmp3013:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3014:
# %bb.18:                               # %.noexc118
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp3015:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp3016:
.LBB121_19:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp3017:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3018:
# %bb.20:                               # %.noexc120
.Ltmp3019:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3020:
# %bb.21:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB121_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$a2, $sp, 168
	pcalau12i	$a0, %pc_hi20(.L.str.214)
	addi.d	$a0, $a0, %pc_lo12(.L.str.214)
	ld.w	$a3, $a0, 0
	ld.b	$a4, $a0, 4
	ori	$a0, $zero, 5
	st.d	$a0, $sp, 160
	ldptr.d	$a0, $s1, 2392
	ldptr.d	$a1, $s1, 2400
	st.d	$a2, $sp, 152
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	st.w	$a3, $sp, 168
	st.d	$a4, $sp, 24                    # 8-byte Folded Spill
	st.b	$a4, $sp, 172
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s6
	st.b	$zero, $sp, 173
	beqz	$a1, .LBB121_25
# %bb.24:
	ldptr.d	$a0, $s1, 2416
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	ld.w	$a0, $a0, 480
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB121_26
	b	.LBB121_27
.LBB121_25:
	alsl.d	$a1, $s6, $s5, 3
	add.d	$a0, $a0, $a1
	ld.w	$a0, $a0, 480
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB121_27
.LBB121_26:
.Ltmp3021:
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$a3, $a0, %pc_lo12(.L.str.215)
	addi.d	$a0, $sp, 152
	ori	$a2, $zero, 5
	ori	$a4, $zero, 4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3022:
.LBB121_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
.Ltmp3023:
	pcalau12i	$a0, %pc_hi20(.L.str.216)
	addi.d	$a1, $a0, %pc_lo12(.L.str.216)
	ori	$a2, $zero, 18
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3024:
# %bb.28:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a1, $sp, 152
	ld.d	$a2, $sp, 160
.Ltmp3025:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3026:
# %bb.29:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit43
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB121_113
# %bb.30:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i124
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB121_32
# %bb.31:
	ld.bu	$a0, $s4, 67
	b	.LBB121_34
.LBB121_32:
.Ltmp3027:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3028:
# %bb.33:                               # %.noexc129
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp3029:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp3030:
.LBB121_34:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i126
.Ltmp3031:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3032:
# %bb.35:                               # %.noexc131
.Ltmp3033:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3034:
# %bb.36:                               # %_ZNSolsEPFRSoS_E.exit45
.Ltmp3035:
	pcalau12i	$a0, %pc_hi20(.L.str.217)
	addi.d	$a1, $a0, %pc_lo12(.L.str.217)
	ori	$a2, $zero, 38
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3036:
# %bb.37:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit47
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a0, $a1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $a1, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB121_113
# %bb.38:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i135
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB121_40
# %bb.39:
	ld.bu	$a0, $s3, 67
	b	.LBB121_42
.LBB121_40:
.Ltmp3037:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3038:
# %bb.41:                               # %.noexc140
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp3039:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp3040:
.LBB121_42:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i137
.Ltmp3041:
	ext.w.b	$a1, $a0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3042:
# %bb.43:                               # %.noexc142
.Ltmp3043:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3044:
# %bb.44:                               # %_ZNSolsEPFRSoS_E.exit49
	ldptr.d	$a0, $s1, 2392
	ldptr.d	$a1, $s1, 2400
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s6
	beqz	$a1, .LBB121_46
# %bb.45:
	ldptr.d	$a0, $s1, 2416
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB121_47
.LBB121_46:
	alsl.d	$a1, $s6, $s5, 3
	add.d	$a0, $a0, $a1
.LBB121_47:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit51
	pcalau12i	$a1, %pc_hi20(.LCPI121_0)
	vld	$vr0, $a1, %pc_lo12(.LCPI121_0)
	addi.d	$s0, $sp, 136
	st.d	$s0, $sp, 120
	vst	$vr0, $sp, 128
	st.b	$zero, $sp, 144
	addi.d	$s3, $sp, 104
	st.d	$s3, $sp, 88
	vst	$vr0, $sp, 96
	st.b	$zero, $sp, 112
.Ltmp3045:
	addi.d	$a1, $sp, 120
	addi.d	$a2, $sp, 88
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZN2PP12Restartblock14list_conditionENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp3046:
# %bb.48:
	ld.d	$a0, $sp, 88
	beq	$a0, $s3, .LBB121_50
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i60
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_50:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit62
	ld.d	$a0, $sp, 120
	beq	$a0, $s0, .LBB121_52
# %bb.51:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i63
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_52:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a0, $a1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $a1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB121_113
# %bb.53:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i146
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB121_55
# %bb.54:
	ld.bu	$a0, $s2, 67
	b	.LBB121_57
.LBB121_55:
.Ltmp3048:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3049:
# %bb.56:                               # %.noexc151
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp3050:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp3051:
.LBB121_57:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i148
.Ltmp3052:
	ext.w.b	$a1, $a0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3053:
# %bb.58:                               # %.noexc153
.Ltmp3054:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3055:
# %bb.59:                               # %_ZNSolsEPFRSoS_E.exit67
.Ltmp3056:
	pcalau12i	$a0, %pc_hi20(.L.str.219)
	addi.d	$a1, $a0, %pc_lo12(.L.str.219)
	ori	$a2, $zero, 31
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3057:
# %bb.60:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit69
	ldptr.d	$a0, $s1, 2392
	ldptr.d	$a1, $s1, 2400
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s6
	beqz	$a1, .LBB121_62
# %bb.61:
	ldptr.d	$a0, $s1, 2416
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB121_63
.LBB121_62:
	alsl.d	$a1, $s6, $s5, 3
	add.d	$a0, $a0, $a1
.LBB121_63:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit71
	ld.d	$a1, $a0, 392
	ld.d	$a2, $a0, 360
	sub.d	$a2, $a1, $a2
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $a0, 368
	ld.d	$a4, $a0, 376
	sub.d	$a1, $a2, $a1
	ld.d	$a2, $a0, 352
	ld.d	$a0, $a0, 336
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 5
	alsl.d	$a1, $a1, $a3, 4
	sub.d	$a0, $a2, $a0
	srli.d	$a0, $a0, 5
	add.w	$a1, $a1, $a0
.Ltmp3058:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp3059:
# %bb.64:
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB121_113
# %bb.65:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i157
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB121_67
# %bb.66:
	ld.bu	$a0, $s3, 67
	b	.LBB121_69
.LBB121_67:
.Ltmp3060:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3061:
# %bb.68:                               # %.noexc162
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp3062:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp3063:
.LBB121_69:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i159
.Ltmp3064:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3065:
# %bb.70:                               # %.noexc164
.Ltmp3066:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3067:
# %bb.71:                               # %_ZNSolsEPFRSoS_E.exit73.preheader
	move	$s0, $zero
	move	$fp, $zero
	ori	$s2, $zero, 1
	addi.d	$s8, $sp, 72
	move	$s3, $s6
	alsl.d	$a0, $s6, $s5, 3
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$a0, $a0, %pc_lo12(.L.str.215)
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$s4, $a0, %pc_lo12(.L.str.220)
	pcalau12i	$a0, %pc_hi20(.L.str.221)
	addi.d	$s5, $a0, %pc_lo12(.L.str.221)
	b	.LBB121_73
	.p2align	4, , 16
.LBB121_72:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit106
                                        #   in Loop: Header=BB121_73 Depth=1
	addi.d	$s0, $s0, 32
	addi.w	$s2, $s2, 1
	addi.d	$fp, $fp, 1
.LBB121_73:                             # %_ZNSolsEPFRSoS_E.exit73
                                        # =>This Inner Loop Header: Depth=1
	ldptr.d	$a0, $s1, 2392
	ldptr.d	$a1, $s1, 2400
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	add.d	$a2, $a1, $s3
	slli.d	$a1, $a2, 3
	beqz	$a2, .LBB121_75
# %bb.74:                               #   in Loop: Header=BB121_73 Depth=1
	ldptr.d	$a3, $s1, 2416
	ldx.d	$a3, $a3, $a1
	b	.LBB121_76
	.p2align	4, , 16
.LBB121_75:                             #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a3, $sp, 16                    # 8-byte Folded Reload
	add.d	$a3, $a0, $a3
.LBB121_76:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit75
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a4, $a3, 392
	ld.d	$a5, $a3, 360
	sub.d	$a5, $a4, $a5
	srli.d	$a5, $a5, 3
	sltu	$a4, $zero, $a4
	ld.d	$a6, $a3, 368
	ld.d	$a7, $a3, 376
	sub.d	$a4, $a5, $a4
	ld.d	$a5, $a3, 352
	ld.d	$a3, $a3, 336
	sub.d	$a6, $a6, $a7
	srli.d	$a6, $a6, 5
	alsl.d	$a4, $a4, $a6, 4
	sub.d	$a3, $a5, $a3
	srli.d	$a3, $a3, 5
	add.w	$a3, $a4, $a3
	bge	$fp, $a3, .LBB121_101
# %bb.77:                               # %._crit_edge.i.i85
                                        #   in Loop: Header=BB121_73 Depth=1
	st.d	$s8, $sp, 56
	ld.d	$a3, $sp, 32                    # 8-byte Folded Reload
	st.w	$a3, $s8, 0
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	st.b	$a3, $s8, 4
	ori	$a3, $zero, 5
	st.d	$a3, $sp, 64
	st.b	$zero, $sp, 77
	beqz	$a2, .LBB121_79
# %bb.78:                               #   in Loop: Header=BB121_73 Depth=1
	ldptr.d	$a0, $s1, 2416
	ldx.d	$a0, $a0, $a1
	b	.LBB121_80
	.p2align	4, , 16
.LBB121_79:                             #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	add.d	$a0, $a0, $a1
.LBB121_80:                             # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EEixEm.exit90
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a2, $a0, 336
	ld.d	$a1, $a0, 344
	ld.d	$a0, $a0, 360
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $fp, $a1
	bltz	$a1, .LBB121_83
# %bb.81:                               #   in Loop: Header=BB121_73 Depth=1
	ori	$a3, $zero, 15
	bltu	$a3, $a1, .LBB121_84
# %bb.82:                               #   in Loop: Header=BB121_73 Depth=1
	add.d	$a0, $a2, $s0
	ld.d	$a1, $a0, 8
	ori	$a2, $zero, 4
	beq	$a1, $a2, .LBB121_86
	b	.LBB121_88
	.p2align	4, , 16
.LBB121_83:                             #   in Loop: Header=BB121_73 Depth=1
	srai.d	$a2, $a1, 4
	b	.LBB121_85
	.p2align	4, , 16
.LBB121_84:                             #   in Loop: Header=BB121_73 Depth=1
	srli.d	$a2, $a1, 4
.LBB121_85:                             #   in Loop: Header=BB121_73 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
	ld.d	$a1, $a0, 8
	ori	$a2, $zero, 4
	bne	$a1, $a2, .LBB121_88
.LBB121_86:                             # %_ZN2PP12Restartblock7get_satEi.exit
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a0, $a0, 0
	ori	$a2, $zero, 4
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB121_88
# %bb.87:                               #   in Loop: Header=BB121_73 Depth=1
.Ltmp3076:
	addi.d	$a0, $sp, 56
	ori	$a2, $zero, 5
	ori	$a4, $zero, 4
	move	$a1, $zero
	ld.d	$a3, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3077:
	.p2align	4, , 16
.LBB121_88:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit92
                                        #   in Loop: Header=BB121_73 Depth=1
.Ltmp3078:
	ori	$a2, $zero, 26
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3079:
# %bb.89:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit97
                                        #   in Loop: Header=BB121_73 Depth=1
.Ltmp3080:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp3081:
# %bb.90:                               #   in Loop: Header=BB121_73 Depth=1
.Ltmp3082:
	move	$s6, $a0
	ori	$a2, $zero, 19
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3083:
# %bb.91:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit99
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a1, $sp, 56
	ld.d	$a2, $sp, 64
.Ltmp3084:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3085:
# %bb.92:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit101
                                        #   in Loop: Header=BB121_73 Depth=1
	move	$s6, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s6, $a0
	ld.d	$s7, $a0, 240
	beqz	$s7, .LBB121_111
# %bb.93:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i179
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB121_95
# %bb.94:                               #   in Loop: Header=BB121_73 Depth=1
	ld.bu	$a0, $s7, 67
	b	.LBB121_97
	.p2align	4, , 16
.LBB121_95:                             #   in Loop: Header=BB121_73 Depth=1
.Ltmp3086:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3087:
# %bb.96:                               # %.noexc184
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp3088:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp3089:
.LBB121_97:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i181
                                        #   in Loop: Header=BB121_73 Depth=1
.Ltmp3090:
	ext.w.b	$a1, $a0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3091:
# %bb.98:                               # %.noexc186
                                        #   in Loop: Header=BB121_73 Depth=1
.Ltmp3092:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3093:
# %bb.99:                               # %_ZNSolsEPFRSoS_E.exit103
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a0, $sp, 56
	beq	$a0, $s8, .LBB121_72
# %bb.100:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i104
                                        #   in Loop: Header=BB121_73 Depth=1
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB121_72
.LBB121_101:
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a0, $a1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $a1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB121_113
# %bb.102:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i168
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB121_104
# %bb.103:
	ld.bu	$a0, $s0, 67
	b	.LBB121_106
.LBB121_104:
.Ltmp3068:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3069:
# %bb.105:                              # %.noexc173
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp3070:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp3071:
.LBB121_106:                            # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i170
.Ltmp3072:
	ext.w.b	$a1, $a0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3073:
# %bb.107:                              # %.noexc175
.Ltmp3074:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3075:
# %bb.108:                              # %_ZNSolsEPFRSoS_E.exit78
	ld.d	$a0, $sp, 152
	addi.d	$a1, $sp, 168
	beq	$a0, $a1, .LBB121_110
# %bb.109:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i107
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_110:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109
	ld.d	$s8, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB121_111:
.Ltmp3095:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp3096:
# %bb.112:                              # %.noexc183
.LBB121_113:                            # %.invoke
.Ltmp3098:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp3099:
# %bb.114:                              # %.cont
.LBB121_115:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB121_116:
.Ltmp3101:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp3102:
# %bb.117:                              # %.noexc117
.LBB121_118:
.Ltmp3047:
	ld.d	$a2, $sp, 88
	move	$fp, $a0
	beq	$a2, $s3, .LBB121_120
# %bb.119:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i79
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_120:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit81
	ld.d	$a0, $sp, 120
	beq	$a0, $s0, .LBB121_130
# %bb.121:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i82
	ld.d	$a1, $sp, 136
	b	.LBB121_129
.LBB121_122:
.Ltmp3103:
	ld.d	$a2, $sp, 152
	move	$fp, $a0
	beq	$a2, $s0, .LBB121_133
# %bb.123:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a0, $sp, 168
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB121_132
.LBB121_124:
.Ltmp3100:
	move	$fp, $a0
	b	.LBB121_130
.LBB121_125:                            # %.loopexit.split-lp
.Ltmp3097:
	b	.LBB121_127
.LBB121_126:                            # %.loopexit
.Ltmp3094:
.LBB121_127:
	move	$fp, $a0
	ld.d	$a0, $sp, 56
	beq	$a0, $s8, .LBB121_130
# %bb.128:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i93
	ld.d	$a1, $sp, 72
.LBB121_129:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit84
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_130:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit84
	ld.d	$a0, $sp, 152
	addi.d	$a1, $sp, 168
	beq	$a0, $a1, .LBB121_133
# %bb.131:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i110
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
.LBB121_132:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_133:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end121:
	.size	_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi, .Lfunc_end121-_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table121:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Lfunc_begin66-.Lfunc_begin66  # >> Call Site 1 <<
	.uleb128 .Ltmp3011-.Lfunc_begin66       #   Call between .Lfunc_begin66 and .Ltmp3011
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3011-.Lfunc_begin66       # >> Call Site 2 <<
	.uleb128 .Ltmp3020-.Ltmp3011            #   Call between .Ltmp3011 and .Ltmp3020
	.uleb128 .Ltmp3103-.Lfunc_begin66       #     jumps to .Ltmp3103
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3020-.Lfunc_begin66       # >> Call Site 3 <<
	.uleb128 .Ltmp3021-.Ltmp3020            #   Call between .Ltmp3020 and .Ltmp3021
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3021-.Lfunc_begin66       # >> Call Site 4 <<
	.uleb128 .Ltmp3044-.Ltmp3021            #   Call between .Ltmp3021 and .Ltmp3044
	.uleb128 .Ltmp3100-.Lfunc_begin66       #     jumps to .Ltmp3100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3045-.Lfunc_begin66       # >> Call Site 5 <<
	.uleb128 .Ltmp3046-.Ltmp3045            #   Call between .Ltmp3045 and .Ltmp3046
	.uleb128 .Ltmp3047-.Lfunc_begin66       #     jumps to .Ltmp3047
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3046-.Lfunc_begin66       # >> Call Site 6 <<
	.uleb128 .Ltmp3048-.Ltmp3046            #   Call between .Ltmp3046 and .Ltmp3048
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3048-.Lfunc_begin66       # >> Call Site 7 <<
	.uleb128 .Ltmp3067-.Ltmp3048            #   Call between .Ltmp3048 and .Ltmp3067
	.uleb128 .Ltmp3100-.Lfunc_begin66       #     jumps to .Ltmp3100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3067-.Lfunc_begin66       # >> Call Site 8 <<
	.uleb128 .Ltmp3076-.Ltmp3067            #   Call between .Ltmp3067 and .Ltmp3076
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3076-.Lfunc_begin66       # >> Call Site 9 <<
	.uleb128 .Ltmp3093-.Ltmp3076            #   Call between .Ltmp3076 and .Ltmp3093
	.uleb128 .Ltmp3094-.Lfunc_begin66       #     jumps to .Ltmp3094
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3093-.Lfunc_begin66       # >> Call Site 10 <<
	.uleb128 .Ltmp3068-.Ltmp3093            #   Call between .Ltmp3093 and .Ltmp3068
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3068-.Lfunc_begin66       # >> Call Site 11 <<
	.uleb128 .Ltmp3075-.Ltmp3068            #   Call between .Ltmp3068 and .Ltmp3075
	.uleb128 .Ltmp3100-.Lfunc_begin66       #     jumps to .Ltmp3100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3075-.Lfunc_begin66       # >> Call Site 12 <<
	.uleb128 .Ltmp3095-.Ltmp3075            #   Call between .Ltmp3075 and .Ltmp3095
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3095-.Lfunc_begin66       # >> Call Site 13 <<
	.uleb128 .Ltmp3096-.Ltmp3095            #   Call between .Ltmp3095 and .Ltmp3096
	.uleb128 .Ltmp3097-.Lfunc_begin66       #     jumps to .Ltmp3097
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3098-.Lfunc_begin66       # >> Call Site 14 <<
	.uleb128 .Ltmp3099-.Ltmp3098            #   Call between .Ltmp3098 and .Ltmp3099
	.uleb128 .Ltmp3100-.Lfunc_begin66       #     jumps to .Ltmp3100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3099-.Lfunc_begin66       # >> Call Site 15 <<
	.uleb128 .Ltmp3101-.Ltmp3099            #   Call between .Ltmp3099 and .Ltmp3101
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3101-.Lfunc_begin66       # >> Call Site 16 <<
	.uleb128 .Ltmp3102-.Ltmp3101            #   Call between .Ltmp3101 and .Ltmp3102
	.uleb128 .Ltmp3103-.Lfunc_begin66       #     jumps to .Ltmp3103
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3102-.Lfunc_begin66       # >> Call Site 17 <<
	.uleb128 .Lfunc_end121-.Ltmp3102        #   Call between .Ltmp3102 and .Lfunc_end121
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end66:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser14list_rb1_startEPi # -- Begin function _ZN2PP11PowerParser14list_rb1_startEPi
	.p2align	5
	.type	_ZN2PP11PowerParser14list_rb1_startEPi,@function
_ZN2PP11PowerParser14list_rb1_startEPi: # @_ZN2PP11PowerParser14list_rb1_startEPi
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s1, $sp, 16
	st.d	$s1, $sp, 0
	ld.d	$a2, $a0, 1184
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
	addi.d	$a0, $a0, 1176
.Ltmp3104:
	move	$a1, $zero
	move	$a3, $s1
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3105:
# %bb.1:                                # %.noexc5
	ld.wu	$a2, $fp, 1168
	addi.d	$a0, $fp, 1104
	ld.d	$a3, $fp, 1184
	ld.d	$a1, $fp, 1176
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp3106:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp3107:
# %bb.2:                                # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 0
	beq	$a0, $s1, .LBB122_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB122_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$a1, $fp, 1080
	move	$a0, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi)
	jirl	$ra, $ra, 0
	st.w	$zero, $fp, 1072
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB122_5:
.Ltmp3108:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s1, .LBB122_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB122_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end122:
	.size	_ZN2PP11PowerParser14list_rb1_startEPi, .Lfunc_end122-_ZN2PP11PowerParser14list_rb1_startEPi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table122:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Ltmp3104-.Lfunc_begin67       # >> Call Site 1 <<
	.uleb128 .Ltmp3107-.Ltmp3104            #   Call between .Ltmp3104 and .Ltmp3107
	.uleb128 .Ltmp3108-.Lfunc_begin67       #     jumps to .Ltmp3108
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3107-.Lfunc_begin67       # >> Call Site 2 <<
	.uleb128 .Lfunc_end122-.Ltmp3107        #   Call between .Ltmp3107 and .Lfunc_end122
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end67:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi # -- Begin function _ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi
	.p2align	5
	.type	_ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi,@function
_ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi: # @_ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.w	$a2, $a2, 0
	bltz	$a2, .LBB123_3
# %bb.1:
	ldptr.d	$a3, $a0, 2448
	ldptr.d	$a4, $a0, 2416
	sub.d	$a4, $a3, $a4
	ldptr.d	$a5, $a0, 2424
	ldptr.d	$a6, $a0, 2432
	srai.d	$a4, $a4, 3
	sltu	$a3, $zero, $a3
	sub.d	$a3, $a4, $a3
	sub.d	$a4, $a5, $a6
	srai.d	$a4, $a4, 3
	lu12i.w	$a5, -258112
	ori	$a5, $a5, 4033
	lu32i.d	$a5, 64527
	ldptr.d	$a6, $a0, 2408
	ldptr.d	$a7, $a0, 2392
	lu52i.d	$a5, $a5, 252
	mul.d	$a4, $a4, $a5
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a6, $a7
	srai.d	$a4, $a4, 3
	mul.d	$a4, $a4, $a5
	add.w	$a3, $a3, $a4
	bge	$a2, $a3, .LBB123_6
# %bb.2:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2PP11PowerParser14list_one_rb_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEi)
	jr	$t8
.LBB123_3:
	ld.d	$a0, $a1, 16
	ld.d	$a0, $a0, -24
	addi.d	$fp, $a1, 16
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB123_26
# %bb.4:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB123_9
# %bb.5:
	ld.bu	$a0, $s0, 67
	b	.LBB123_10
.LBB123_6:
	ld.d	$a0, $a1, 16
	ld.d	$a0, $a0, -24
	addi.d	$fp, $a1, 16
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB123_26
# %bb.7:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i19
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB123_17
# %bb.8:
	ld.bu	$a0, $s0, 67
	b	.LBB123_18
.LBB123_9:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB123_10:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.211)
	ori	$a2, $zero, 30
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB123_26
# %bb.11:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i9
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB123_13
# %bb.12:
	ld.bu	$a0, $s0, 67
	b	.LBB123_14
.LBB123_13:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB123_14:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit12
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$fp, $a1, 240
	beqz	$fp, .LBB123_26
# %bb.15:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i14
	ld.bu	$a1, $fp, 56
	beqz	$a1, .LBB123_24
.LBB123_16:
	ld.bu	$a1, $fp, 67
	b	.LBB123_25
.LBB123_17:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB123_18:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit22
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.212)
	addi.d	$a1, $a0, %pc_lo12(.L.str.212)
	ori	$a2, $zero, 35
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB123_26
# %bb.19:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i24
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB123_21
# %bb.20:
	ld.bu	$a0, $s0, 67
	b	.LBB123_22
.LBB123_21:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB123_22:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit27
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$fp, $a1, 240
	beqz	$fp, .LBB123_26
# %bb.23:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i29
	ld.bu	$a1, $fp, 56
	bnez	$a1, .LBB123_16
.LBB123_24:
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s0
.LBB123_25:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit17
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZNSo5flushEv)
	jr	$t8
.LBB123_26:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end123:
	.size	_ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi, .Lfunc_end123-_ZN2PP11PowerParser11list_rb1_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEPi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP11PowerParser10print_lineEi # -- Begin function _ZN2PP11PowerParser10print_lineEi
	.p2align	5
	.type	_ZN2PP11PowerParser10print_lineEi,@function
_ZN2PP11PowerParser10print_lineEi:      # @_ZN2PP11PowerParser10print_lineEi
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	addi.d	$sp, $sp, -464
	.cfi_def_cfa_offset 464
	st.d	$ra, $sp, 456                   # 8-byte Folded Spill
	st.d	$fp, $sp, 448                   # 8-byte Folded Spill
	st.d	$s0, $sp, 440                   # 8-byte Folded Spill
	st.d	$s1, $sp, 432                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 520
	ld.w	$a2, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a2, $a0, .LBB124_22
# %bb.1:
	move	$s0, $a1
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 840
	ld.d	$a1, $fp, 848
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 4
	lu12i.w	$a2, 427197
	ori	$a2, $a2, 2579
	lu32i.d	$a2, -155345
	lu52i.d	$a2, $a2, -1973
	mul.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s0
	beqz	$a1, .LBB124_3
# %bb.2:
	ld.d	$a0, $fp, 864
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB124_4
.LBB124_3:
	ori	$a1, $zero, 432
	mul.d	$a1, $s0, $a1
	add.d	$a0, $a0, $a1
.LBB124_4:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
.Ltmp3109:
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp3110:
# %bb.5:
	ld.d	$a0, $sp, 104
	addi.d	$s1, $sp, 24
	st.d	$s1, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB124_8
# %bb.6:
	ld.d	$a1, $sp, 88
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB124_8
# %bb.7:
	ld.d	$a3, $sp, 96
	sub.d	$a4, $a0, $a3
.Ltmp3112:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3113:
	b	.LBB124_9
.LBB124_8:
	addi.d	$a1, $sp, 136
.Ltmp3114:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp3115:
.LBB124_9:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
.Ltmp3117:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3118:
# %bb.10:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB124_23
# %bb.11:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB124_13
# %bb.12:
	ld.bu	$a0, $s0, 67
	b	.LBB124_15
.LBB124_13:
.Ltmp3119:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3120:
# %bb.14:                               # %.noexc10
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp3121:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp3122:
.LBB124_15:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp3123:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3124:
# %bb.16:                               # %.noexc12
.Ltmp3125:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3126:
# %bb.17:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s1, .LBB124_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB124_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 40
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 40
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 136
	st.d	$a2, $sp, 56
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 152
	st.d	$a1, $sp, 64
	beq	$a0, $a2, .LBB124_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB124_21:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 40
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 48
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
.LBB124_22:
	ld.d	$s1, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 440                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 448                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 456                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 464
	ret
.LBB124_23:
.Ltmp3127:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp3128:
# %bb.24:                               # %.noexc
.LBB124_25:
.Ltmp3116:
	b	.LBB124_28
.LBB124_26:
.Ltmp3111:
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB124_27:
.Ltmp3129:
.LBB124_28:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s1, .LBB124_30
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB124_30:
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end124:
	.size	_ZN2PP11PowerParser10print_lineEi, .Lfunc_end124-_ZN2PP11PowerParser10print_lineEi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table124:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Lfunc_begin68-.Lfunc_begin68  # >> Call Site 1 <<
	.uleb128 .Ltmp3109-.Lfunc_begin68       #   Call between .Lfunc_begin68 and .Ltmp3109
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3109-.Lfunc_begin68       # >> Call Site 2 <<
	.uleb128 .Ltmp3110-.Ltmp3109            #   Call between .Ltmp3109 and .Ltmp3110
	.uleb128 .Ltmp3111-.Lfunc_begin68       #     jumps to .Ltmp3111
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3112-.Lfunc_begin68       # >> Call Site 3 <<
	.uleb128 .Ltmp3115-.Ltmp3112            #   Call between .Ltmp3112 and .Ltmp3115
	.uleb128 .Ltmp3116-.Lfunc_begin68       #     jumps to .Ltmp3116
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3117-.Lfunc_begin68       # >> Call Site 4 <<
	.uleb128 .Ltmp3126-.Ltmp3117            #   Call between .Ltmp3117 and .Ltmp3126
	.uleb128 .Ltmp3129-.Lfunc_begin68       #     jumps to .Ltmp3129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3126-.Lfunc_begin68       # >> Call Site 5 <<
	.uleb128 .Ltmp3127-.Ltmp3126            #   Call between .Ltmp3126 and .Ltmp3127
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3127-.Lfunc_begin68       # >> Call Site 6 <<
	.uleb128 .Ltmp3128-.Ltmp3127            #   Call between .Ltmp3127 and .Ltmp3128
	.uleb128 .Ltmp3129-.Lfunc_begin68       #     jumps to .Ltmp3129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3128-.Lfunc_begin68       # >> Call Site 7 <<
	.uleb128 .Lfunc_end124-.Ltmp3128        #   Call between .Ltmp3128 and .Lfunc_end124
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end68:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser10print_lineERNS_3CmdE # -- Begin function _ZN2PP11PowerParser10print_lineERNS_3CmdE
	.p2align	5
	.type	_ZN2PP11PowerParser10print_lineERNS_3CmdE,@function
_ZN2PP11PowerParser10print_lineERNS_3CmdE: # @_ZN2PP11PowerParser10print_lineERNS_3CmdE
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	addi.d	$sp, $sp, -464
	.cfi_def_cfa_offset 464
	st.d	$ra, $sp, 456                   # 8-byte Folded Spill
	st.d	$fp, $sp, 448                   # 8-byte Folded Spill
	st.d	$s0, $sp, 440                   # 8-byte Folded Spill
	st.d	$s1, $sp, 432                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a0, $a0, 520
	ld.w	$a2, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a2, $a0, .LBB125_19
# %bb.1:
	move	$fp, $a1
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp3130:
	addi.d	$a1, $sp, 40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp3131:
# %bb.2:
	ld.d	$a0, $sp, 104
	addi.d	$s1, $sp, 24
	st.d	$s1, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB125_5
# %bb.3:
	ld.d	$a1, $sp, 88
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB125_5
# %bb.4:
	ld.d	$a3, $sp, 96
	sub.d	$a4, $a0, $a3
.Ltmp3133:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3134:
	b	.LBB125_6
.LBB125_5:
	addi.d	$a1, $sp, 136
.Ltmp3135:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp3136:
.LBB125_6:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
.Ltmp3138:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3139:
# %bb.7:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB125_20
# %bb.8:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB125_10
# %bb.9:
	ld.bu	$a0, $s0, 67
	b	.LBB125_12
.LBB125_10:
.Ltmp3140:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3141:
# %bb.11:                               # %.noexc10
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp3142:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp3143:
.LBB125_12:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp3144:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3145:
# %bb.13:                               # %.noexc12
.Ltmp3146:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3147:
# %bb.14:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s1, .LBB125_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB125_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 40
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 40
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 136
	st.d	$a2, $sp, 56
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 152
	st.d	$a1, $sp, 64
	beq	$a0, $a2, .LBB125_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB125_18:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 40
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 48
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
.LBB125_19:
	ld.d	$s1, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 440                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 448                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 456                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 464
	ret
.LBB125_20:
.Ltmp3148:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp3149:
# %bb.21:                               # %.noexc
.LBB125_22:
.Ltmp3137:
	b	.LBB125_25
.LBB125_23:
.Ltmp3132:
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB125_24:
.Ltmp3150:
.LBB125_25:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s1, .LBB125_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB125_27:
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end125:
	.size	_ZN2PP11PowerParser10print_lineERNS_3CmdE, .Lfunc_end125-_ZN2PP11PowerParser10print_lineERNS_3CmdE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table125:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Lfunc_begin69-.Lfunc_begin69  # >> Call Site 1 <<
	.uleb128 .Ltmp3130-.Lfunc_begin69       #   Call between .Lfunc_begin69 and .Ltmp3130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3130-.Lfunc_begin69       # >> Call Site 2 <<
	.uleb128 .Ltmp3131-.Ltmp3130            #   Call between .Ltmp3130 and .Ltmp3131
	.uleb128 .Ltmp3132-.Lfunc_begin69       #     jumps to .Ltmp3132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3133-.Lfunc_begin69       # >> Call Site 3 <<
	.uleb128 .Ltmp3136-.Ltmp3133            #   Call between .Ltmp3133 and .Ltmp3136
	.uleb128 .Ltmp3137-.Lfunc_begin69       #     jumps to .Ltmp3137
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3138-.Lfunc_begin69       # >> Call Site 4 <<
	.uleb128 .Ltmp3147-.Ltmp3138            #   Call between .Ltmp3138 and .Ltmp3147
	.uleb128 .Ltmp3150-.Lfunc_begin69       #     jumps to .Ltmp3150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3147-.Lfunc_begin69       # >> Call Site 5 <<
	.uleb128 .Ltmp3148-.Ltmp3147            #   Call between .Ltmp3147 and .Ltmp3148
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3148-.Lfunc_begin69       # >> Call Site 6 <<
	.uleb128 .Ltmp3149-.Ltmp3148            #   Call between .Ltmp3148 and .Ltmp3149
	.uleb128 .Ltmp3150-.Lfunc_begin69       #     jumps to .Ltmp3150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3149-.Lfunc_begin69       # >> Call Site 7 <<
	.uleb128 .Lfunc_end125-.Ltmp3149        #   Call between .Ltmp3149 and .Lfunc_end125
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end69:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser15list_vars_startEv # -- Begin function _ZN2PP11PowerParser15list_vars_startEv
	.p2align	5
	.type	_ZN2PP11PowerParser15list_vars_startEv,@function
_ZN2PP11PowerParser15list_vars_startEv: # @_ZN2PP11PowerParser15list_vars_startEv
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	addi.d	$s0, $sp, 112
	st.d	$s0, $sp, 96
	ld.d	$a2, $a0, 1184
	st.d	$zero, $sp, 104
	st.b	$zero, $sp, 112
	addi.d	$a0, $a0, 1176
.Ltmp3151:
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3152:
# %bb.1:                                # %.noexc13
	ld.wu	$a2, $fp, 1168
	addi.d	$a0, $fp, 1104
	ld.d	$a3, $fp, 1184
	ld.d	$a1, $fp, 1176
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp3153:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp3154:
# %bb.2:                                # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 96
	beq	$a0, $s0, .LBB126_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB126_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 1536
	st.d	$s0, $sp, 96
	st.d	$zero, $sp, 104
	st.b	$zero, $sp, 112
	beqz	$a0, .LBB126_7
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a1, $fp, 1520
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB126_7
# %bb.6:
	ld.d	$a3, $fp, 1528
	sub.d	$a4, $a0, $a3
.Ltmp3156:
	addi.d	$a0, $sp, 96
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3157:
	b	.LBB126_8
.LBB126_7:
	addi.d	$a1, $fp, 1568
.Ltmp3158:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp3159:
.LBB126_8:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 96
	ld.d	$a2, $sp, 104
	addi.d	$a0, $fp, 1096
.Ltmp3161:
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3162:
# %bb.9:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB126_26
# %bb.10:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB126_12
# %bb.11:
	ld.bu	$a0, $s2, 67
	b	.LBB126_14
.LBB126_12:
.Ltmp3163:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3164:
# %bb.13:                               # %.noexc58
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp3165:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp3166:
.LBB126_14:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp3167:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3168:
# %bb.15:                               # %.noexc60
.Ltmp3169:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3170:
# %bb.16:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 96
	addi.d	$s1, $fp, 1080
	beq	$a0, $s0, .LBB126_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i17
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB126_18:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit19
	addi.d	$s0, $sp, 80
	st.d	$s0, $sp, 64
	st.d	$zero, $sp, 72
	st.b	$zero, $sp, 80
	addi.d	$s2, $sp, 48
	st.d	$s2, $sp, 32
	st.d	$zero, $sp, 40
	st.b	$zero, $sp, 48
	addi.d	$s3, $sp, 16
	st.d	$s3, $sp, 0
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
.Ltmp3171:
	addi.d	$a1, $sp, 64
	addi.d	$a2, $sp, 32
	addi.d	$a3, $sp, 0
	move	$a0, $fp
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser12list_vars_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_S6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp3172:
# %bb.19:
	ld.d	$a0, $sp, 0
	beq	$a0, $s3, .LBB126_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB126_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	ld.d	$a0, $sp, 32
	beq	$a0, $s2, .LBB126_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB126_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	ld.d	$a0, $sp, 64
	beq	$a0, $s0, .LBB126_25
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB126_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	st.w	$zero, $fp, 1072
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB126_26:
.Ltmp3174:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp3175:
# %bb.27:                               # %.noexc57
.LBB126_28:
.Ltmp3173:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	bne	$a2, $s3, .LBB126_31
# %bb.29:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit49
	ld.d	$a0, $sp, 32
	bne	$a0, $s2, .LBB126_32
.LBB126_30:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit52
	ld.d	$a0, $sp, 64
	bne	$a0, $s0, .LBB126_33
	b	.LBB126_40
.LBB126_31:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 32
	beq	$a0, $s2, .LBB126_30
.LBB126_32:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i50
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 64
	beq	$a0, $s0, .LBB126_40
.LBB126_33:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i53
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	b	.LBB126_39
.LBB126_34:
.Ltmp3160:
	b	.LBB126_37
.LBB126_35:
.Ltmp3155:
	b	.LBB126_37
.LBB126_36:
.Ltmp3176:
.LBB126_37:
	ld.d	$a2, $sp, 96
	move	$fp, $a0
	beq	$a2, $s0, .LBB126_40
# %bb.38:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 112
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB126_39:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB126_40:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end126:
	.size	_ZN2PP11PowerParser15list_vars_startEv, .Lfunc_end126-_ZN2PP11PowerParser15list_vars_startEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table126:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Ltmp3151-.Lfunc_begin70       # >> Call Site 1 <<
	.uleb128 .Ltmp3154-.Ltmp3151            #   Call between .Ltmp3151 and .Ltmp3154
	.uleb128 .Ltmp3155-.Lfunc_begin70       #     jumps to .Ltmp3155
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3154-.Lfunc_begin70       # >> Call Site 2 <<
	.uleb128 .Ltmp3156-.Ltmp3154            #   Call between .Ltmp3154 and .Ltmp3156
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3156-.Lfunc_begin70       # >> Call Site 3 <<
	.uleb128 .Ltmp3159-.Ltmp3156            #   Call between .Ltmp3156 and .Ltmp3159
	.uleb128 .Ltmp3160-.Lfunc_begin70       #     jumps to .Ltmp3160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3161-.Lfunc_begin70       # >> Call Site 4 <<
	.uleb128 .Ltmp3170-.Ltmp3161            #   Call between .Ltmp3161 and .Ltmp3170
	.uleb128 .Ltmp3176-.Lfunc_begin70       #     jumps to .Ltmp3176
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3170-.Lfunc_begin70       # >> Call Site 5 <<
	.uleb128 .Ltmp3171-.Ltmp3170            #   Call between .Ltmp3170 and .Ltmp3171
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3171-.Lfunc_begin70       # >> Call Site 6 <<
	.uleb128 .Ltmp3172-.Ltmp3171            #   Call between .Ltmp3171 and .Ltmp3172
	.uleb128 .Ltmp3173-.Lfunc_begin70       #     jumps to .Ltmp3173
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3172-.Lfunc_begin70       # >> Call Site 7 <<
	.uleb128 .Ltmp3174-.Ltmp3172            #   Call between .Ltmp3172 and .Ltmp3174
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3174-.Lfunc_begin70       # >> Call Site 8 <<
	.uleb128 .Ltmp3175-.Ltmp3174            #   Call between .Ltmp3174 and .Ltmp3175
	.uleb128 .Ltmp3176-.Lfunc_begin70       #     jumps to .Ltmp3176
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3175-.Lfunc_begin70       # >> Call Site 9 <<
	.uleb128 .Lfunc_end126-.Ltmp3175        #   Call between .Ltmp3175 and .Lfunc_end126
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end70:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE # -- Begin function _ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE
	.p2align	5
	.type	_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE,@function
_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE: # @_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	addi.d	$sp, $sp, -848
	.cfi_def_cfa_offset 848
	st.d	$ra, $sp, 840                   # 8-byte Folded Spill
	st.d	$fp, $sp, 832                   # 8-byte Folded Spill
	st.d	$s0, $sp, 824                   # 8-byte Folded Spill
	st.d	$s1, $sp, 816                   # 8-byte Folded Spill
	st.d	$s2, $sp, 808                   # 8-byte Folded Spill
	st.d	$s3, $sp, 800                   # 8-byte Folded Spill
	st.d	$s4, $sp, 792                   # 8-byte Folded Spill
	st.d	$s5, $sp, 784                   # 8-byte Folded Spill
	st.d	$s6, $sp, 776                   # 8-byte Folded Spill
	st.d	$s7, $sp, 768                   # 8-byte Folded Spill
	st.d	$s8, $sp, 760                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a0
	ld.d	$a0, $a0, 520
	ld.w	$a4, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a4, $a0, .LBB127_185
# %bb.1:
	st.d	$a2, $sp, 24                    # 8-byte Folded Spill
	ld.d	$a4, $a1, 0
	ld.d	$a2, $a1, 8
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	addi.d	$a0, $a3, 16
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$fp, $a1, 240
	beqz	$fp, .LBB127_198
# %bb.2:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a1, $fp, 56
	beqz	$a1, .LBB127_4
# %bb.3:
	ld.bu	$a1, $fp, 67
	b	.LBB127_5
.LBB127_4:
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s0
.LBB127_5:
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	st.d	$zero, $sp, 752
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 736
	st.d	$zero, $sp, 728
	vst	$vr0, $sp, 96                   # 16-byte Folded Spill
	vst	$vr0, $sp, 712
	pcalau12i	$a0, %pc_hi20(.L.str.226)
	addi.d	$a0, $a0, %pc_lo12(.L.str.226)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 5
	addi.d	$fp, $sp, 280
	st.d	$fp, $sp, 264
	st.d	$a1, $sp, 280
	st.d	$a0, $sp, 285
	ori	$a0, $zero, 13
	st.d	$a0, $sp, 272
	st.b	$zero, $sp, 293
.Ltmp3177:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3178:
# %bb.6:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
	ld.d	$a0, $sp, 264
	beq	$a0, $fp, .LBB127_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %pc_hi20(.L.str.227)
	addi.d	$a0, $a0, %pc_lo12(.L.str.227)
	ld.w	$a1, $a0, 0
	st.d	$fp, $sp, 264
	ld.b	$a2, $a0, 4
	st.w	$a1, $sp, 280
	ld.d	$a0, $sp, 720
	ld.d	$a1, $sp, 728
	st.b	$a2, $sp, 284
	ori	$a2, $zero, 5
	st.d	$a2, $sp, 272
	st.b	$zero, $sp, 285
	beq	$a0, $a1, .LBB127_11
# %bb.9:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 264
	beq	$a2, $fp, .LBB127_14
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i58
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 280
	st.d	$a1, $a0, 16
	b	.LBB127_15
.LBB127_11:
.Ltmp3180:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3181:
# %bb.12:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit62
	ld.d	$a0, $sp, 264
	beq	$a0, $fp, .LBB127_16
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i63
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_16
.LBB127_14:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i60
	ld.h	$a2, $fp, 4
	st.h	$a2, $a1, 4
	ld.w	$a2, $fp, 0
	st.w	$a2, $a1, 0
.LBB127_15:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit62.thread
	ori	$a1, $zero, 5
	st.d	$a1, $a0, 8
	st.d	$fp, $sp, 264
	st.d	$zero, $sp, 272
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 720
.LBB127_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
	st.d	$fp, $sp, 264
	lu12i.w	$a0, 415495
	ori	$a1, $a0, 2420
	ld.d	$a0, $sp, 720
	ld.d	$a2, $sp, 728
	st.w	$a1, $sp, 280
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 272
	st.b	$zero, $sp, 284
	beq	$a0, $a2, .LBB127_19
# %bb.17:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 264
	beq	$a2, $fp, .LBB127_22
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i71
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 280
	st.d	$a1, $a0, 16
	b	.LBB127_23
.LBB127_19:
.Ltmp3183:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3184:
# %bb.20:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit75
	ld.d	$a0, $sp, 264
	beq	$a0, $fp, .LBB127_24
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i76
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_24
.LBB127_22:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i73
	ld.b	$a2, $fp, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $fp, 0
	st.w	$a2, $a1, 0
.LBB127_23:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit75.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$fp, $sp, 264
	st.d	$zero, $sp, 272
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 720
.LBB127_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit78
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	ld.d	$a1, $a0, 0
	st.d	$fp, $sp, 264
	ld.w	$a2, $a0, 7
	st.d	$a1, $sp, 280
	ld.d	$a0, $sp, 720
	ld.d	$a1, $sp, 728
	st.w	$a2, $sp, 287
	ori	$a2, $zero, 11
	st.d	$a2, $sp, 272
	st.b	$zero, $sp, 291
	beq	$a0, $a1, .LBB127_27
# %bb.25:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 264
	beq	$a2, $fp, .LBB127_33
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i84
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 280
	st.d	$a1, $a0, 16
	b	.LBB127_34
.LBB127_27:
.Ltmp3186:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3187:
# %bb.28:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit88
	ld.d	$a0, $sp, 264
	beq	$a0, $fp, .LBB127_30
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i89
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_30:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit91
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB127_35
.LBB127_31:
.Ltmp3189:
	addi.d	$a1, $sp, 712
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp3190:
# %bb.32:                               # %.noexc92
	ld.d	$a0, $sp, 744
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	st.d	$a0, $sp, 744
	b	.LBB127_37
.LBB127_33:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i86
	ld.w	$a2, $fp, 8
	st.w	$a2, $a1, 8
	ld.d	$a2, $fp, 0
	st.d	$a2, $a1, 0
.LBB127_34:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit88.thread
	ori	$a1, $zero, 11
	st.d	$a1, $a0, 8
	st.d	$fp, $sp, 264
	st.d	$zero, $sp, 272
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 720
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	bne	$a0, $a1, .LBB127_31
.LBB127_35:
.Ltmp3191:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 712
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3192:
# %bb.36:                               # %._ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit_crit_edge
	ld.d	$a0, $sp, 744
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
.LBB127_37:                             # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit
	ld.d	$s0, $s3, 800
	ld.d	$a0, $sp, 736
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	addi.d	$a0, $s3, 784
	st.d	$a0, $sp, 88                    # 8-byte Folded Spill
	beq	$s0, $a0, .LBB127_145
# %bb.38:                               # %.lr.ph307
	ld.d	$a0, $sp, 720
	ld.d	$a1, $sp, 712
	sub.d	$a0, $a0, $a1
	srai.d	$a0, $a0, 5
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	addi.d	$s5, $sp, 696
	addi.d	$s7, $sp, 248
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	addi.d	$s1, $sp, 216
	addi.d	$s4, $sp, 184
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 72                    # 8-byte Folded Spill
	ld.d	$a1, $a0, 64
	st.d	$a1, $sp, 64                    # 8-byte Folded Spill
	ld.d	$a1, $a0, 72
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	ld.d	$a1, $a0, 16
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a0, $a0, 24
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	ori	$s6, $zero, 16
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 128                   # 8-byte Folded Spill
	b	.LBB127_40
	.p2align	4, , 16
.LBB127_39:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit160
                                        #   in Loop: Header=BB127_40 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	beq	$s0, $a0, .LBB127_145
.LBB127_40:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB127_70 Depth 2
                                        #       Child Loop BB127_109 Depth 3
                                        #     Child Loop BB127_138 Depth 2
	ld.d	$a1, $s0, 40
	ld.d	$fp, $s0, 32
	st.d	$s5, $sp, 680
	st.d	$a1, $sp, 264
	move	$a0, $s5
	bltu	$a1, $s6, .LBB127_43
# %bb.41:                               # %.noexc.i95
                                        #   in Loop: Header=BB127_40 Depth=1
.Ltmp3194:
	addi.d	$a0, $sp, 680
	addi.d	$a1, $sp, 264
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3195:
# %bb.42:                               # %.noexc96
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 264
	st.d	$a0, $sp, 680
	st.d	$a1, $sp, 696
.LBB127_43:                             # %._crit_edge.i.i94
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a2, $sp, 128                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB127_47
# %bb.44:                               # %._crit_edge.i.i94
                                        #   in Loop: Header=BB127_40 Depth=1
	bnez	$a1, .LBB127_46
# %bb.45:                               #   in Loop: Header=BB127_40 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB127_47
	.p2align	4, , 16
.LBB127_46:                             #   in Loop: Header=BB127_40 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB127_47:                             #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 264
	ld.w	$fp, $s0, 100
	st.d	$a0, $sp, 688
	st.d	$zero, $sp, 672
	vld	$vr0, $sp, 96                   # 16-byte Folded Reload
	vst	$vr0, $sp, 656
.Ltmp3197:
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp3198:
# %bb.48:                               #   in Loop: Header=BB127_40 Depth=1
.Ltmp3200:
	addi.d	$a0, $sp, 280
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp3201:
# %bb.49:                               #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $s0, 144
	ld.d	$fp, $s0, 136
	st.d	$s7, $sp, 232
	st.d	$a1, $sp, 200
	move	$a0, $s7
	bltu	$a1, $s6, .LBB127_52
# %bb.50:                               # %.noexc.i.i
                                        #   in Loop: Header=BB127_40 Depth=1
.Ltmp3203:
	addi.d	$a0, $sp, 232
	addi.d	$a1, $sp, 200
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3204:
# %bb.51:                               # %.noexc97
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 200
	st.d	$a0, $sp, 232
	st.d	$a1, $sp, 248
.LBB127_52:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a2, $sp, 128                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB127_56
# %bb.53:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB127_40 Depth=1
	bnez	$a1, .LBB127_55
# %bb.54:                               #   in Loop: Header=BB127_40 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB127_56
	.p2align	4, , 16
.LBB127_55:                             #   in Loop: Header=BB127_40 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB127_56:                             #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 200
	ld.d	$a1, $s0, 112
	ld.d	$fp, $s0, 104
	st.d	$a0, $sp, 240
	st.d	$s1, $sp, 200
	st.d	$a1, $sp, 168
	move	$a0, $s1
	bltu	$a1, $s6, .LBB127_59
# %bb.57:                               # %.noexc.i.i99
                                        #   in Loop: Header=BB127_40 Depth=1
.Ltmp3206:
	addi.d	$a0, $sp, 200
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3207:
# %bb.58:                               # %.noexc100
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 200
	st.d	$a1, $sp, 216
.LBB127_59:                             # %._crit_edge.i.i.i98
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a2, $sp, 128                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB127_63
# %bb.60:                               # %._crit_edge.i.i.i98
                                        #   in Loop: Header=BB127_40 Depth=1
	bnez	$a1, .LBB127_62
# %bb.61:                               #   in Loop: Header=BB127_40 Depth=1
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB127_63
	.p2align	4, , 16
.LBB127_62:                             #   in Loop: Header=BB127_40 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB127_63:                             # %_ZN2PP8Function15get_descriptionB5cxx11Ev.exit
                                        #   in Loop: Header=BB127_40 Depth=1
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	ld.d	$a0, $sp, 168
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	addi.w	$a1, $a1, 0
	st.d	$a0, $sp, 208
	st.d	$a1, $sp, 136                   # 8-byte Folded Spill
	blez	$a1, .LBB127_125
# %bb.64:                               # %.lr.ph.preheader
                                        #   in Loop: Header=BB127_40 Depth=1
	move	$s3, $zero
	b	.LBB127_70
.LBB127_65:                             #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB127_66:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a0, $sp, 168
	st.d	$a0, $fp, 8
.LBB127_67:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a0, $sp, 664
	addi.d	$a0, $a0, 32
.LBB127_68:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB127_70 Depth=2
	st.d	$a0, $sp, 664
.LBB127_69:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB127_70 Depth=2
	addi.w	$s3, $s3, 1
	ld.d	$a0, $sp, 136                   # 8-byte Folded Reload
	beq	$s3, $a0, .LBB127_125
.LBB127_70:                             # %.lr.ph
                                        #   Parent Loop BB127_40 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB127_109 Depth 3
	ori	$a0, $zero, 3
	bltu	$a0, $s3, .LBB127_69
# %bb.71:                               # %.lr.ph
                                        #   in Loop: Header=BB127_70 Depth=2
	slli.d	$a0, $s3, 2
	pcalau12i	$a1, %pc_hi20(.LJTI127_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI127_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB127_72:                             #   in Loop: Header=BB127_70 Depth=2
	ld.d	$fp, $sp, 664
	ld.d	$a0, $sp, 672
	beq	$fp, $a0, .LBB127_111
# %bb.73:                               #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	ld.d	$a1, $sp, 688
	ld.d	$s0, $sp, 680
	st.d	$a1, $sp, 168
	bltu	$a1, $s6, .LBB127_79
# %bb.74:                               # %.noexc.i.i119
                                        #   in Loop: Header=BB127_70 Depth=2
.Ltmp3229:
	addi.d	$a1, $sp, 168
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3230:
	b	.LBB127_78
	.p2align	4, , 16
.LBB127_75:                             #   in Loop: Header=BB127_70 Depth=2
	ld.d	$fp, $sp, 664
	ld.d	$a0, $sp, 672
	beq	$fp, $a0, .LBB127_96
# %bb.76:                               #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	ld.d	$a1, $sp, 240
	ld.d	$s0, $sp, 232
	st.d	$a1, $sp, 168
	bltu	$a1, $s6, .LBB127_79
# %bb.77:                               # %.noexc.i.i138
                                        #   in Loop: Header=BB127_70 Depth=2
.Ltmp3219:
	addi.d	$a1, $sp, 168
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3220:
.LBB127_78:                             # %.noexc120
                                        #   in Loop: Header=BB127_70 Depth=2
	st.d	$a0, $fp, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $fp, 16
.LBB127_79:                             # %._crit_edge.i.i.i118
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a2, $sp, 128                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB127_66
# %bb.80:                               # %._crit_edge.i.i.i118
                                        #   in Loop: Header=BB127_70 Depth=2
	bnez	$a1, .LBB127_65
# %bb.81:                               #   in Loop: Header=BB127_70 Depth=2
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB127_66
	.p2align	4, , 16
.LBB127_82:                             #   in Loop: Header=BB127_70 Depth=2
	ld.d	$s8, $sp, 664
	ld.d	$a0, $sp, 672
	beq	$s8, $a0, .LBB127_97
# %bb.83:                               #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a0, $s8, 16
	st.d	$a0, $s8, 0
	ld.d	$a1, $sp, 208
	ld.d	$fp, $sp, 200
	st.d	$a1, $sp, 168
	bltu	$a1, $s6, .LBB127_86
# %bb.84:                               # %.noexc.i.i145
                                        #   in Loop: Header=BB127_70 Depth=2
.Ltmp3209:
	addi.d	$a1, $sp, 168
	move	$a0, $s8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3210:
# %bb.85:                               # %.noexc146
                                        #   in Loop: Header=BB127_70 Depth=2
	st.d	$a0, $s8, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $s8, 16
.LBB127_86:                             # %._crit_edge.i.i.i143
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a2, $sp, 128                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB127_120
# %bb.87:                               # %._crit_edge.i.i.i143
                                        #   in Loop: Header=BB127_70 Depth=2
	bnez	$a1, .LBB127_119
# %bb.88:                               #   in Loop: Header=BB127_70 Depth=2
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB127_120
.LBB127_89:                             #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a0, $sp, 328
	st.d	$s4, $sp, 168
	st.d	$zero, $sp, 176
	st.b	$zero, $sp, 184
	beqz	$a0, .LBB127_92
# %bb.90:                               #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a1, $sp, 312
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB127_92
# %bb.91:                               #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a3, $sp, 320
	sub.d	$a4, $a0, $a3
.Ltmp3221:
	addi.d	$a0, $sp, 168
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3222:
	b	.LBB127_93
.LBB127_92:                             #   in Loop: Header=BB127_70 Depth=2
.Ltmp3223:
	addi.d	$a0, $sp, 168
	addi.d	$a1, $sp, 360
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp3224:
.LBB127_93:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$fp, $sp, 664
	ld.d	$a0, $sp, 672
	beq	$fp, $a0, .LBB127_113
# %bb.94:                               #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	ld.d	$a1, $sp, 168
	beq	$a1, $s4, .LBB127_116
# %bb.95:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i124
                                        #   in Loop: Header=BB127_70 Depth=2
	st.d	$a1, $fp, 0
	ld.d	$a0, $sp, 184
	ld.d	$s0, $sp, 176
	st.d	$a0, $fp, 16
	b	.LBB127_117
.LBB127_96:                             #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a1, $sp, 232
	b	.LBB127_112
.LBB127_97:                             #   in Loop: Header=BB127_70 Depth=2
	ld.d	$s0, $sp, 656
	sub.d	$s2, $s8, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB127_196
# %bb.98:                               # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB127_70 Depth=2
	srai.d	$a0, $s2, 5
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	ld.d	$a1, $sp, 128                   # 8-byte Folded Reload
	lu52i.d	$a1, $a1, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$fp, $a0, 5
.Ltmp3211:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3212:
# %bb.99:                               # %.noexc225
                                        #   in Loop: Header=BB127_70 Depth=2
	move	$s1, $a0
	add.d	$s4, $a0, $s2
	ld.d	$a1, $sp, 208
	ori	$a2, $zero, 16
	ld.d	$s6, $sp, 200
	addi.d	$a0, $s4, 16
	stx.d	$a0, $s1, $s2
	st.d	$a1, $sp, 168
	bltu	$a1, $a2, .LBB127_102
# %bb.100:                              # %.noexc.i.i222
                                        #   in Loop: Header=BB127_70 Depth=2
.Ltmp3213:
	addi.d	$a1, $sp, 168
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3214:
# %bb.101:                              # %.noexc.i223
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a1, $sp, 168
	st.d	$a0, $s4, 0
	st.d	$a1, $s4, 16
.LBB127_102:                            # %._crit_edge.i.i.i218
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a2, $sp, 128                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB127_105
# %bb.103:                              # %._crit_edge.i.i.i218
                                        #   in Loop: Header=BB127_70 Depth=2
	bnez	$a1, .LBB127_121
# %bb.104:                              #   in Loop: Header=BB127_70 Depth=2
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
.LBB127_105:                            #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a0, $sp, 168
	st.d	$a0, $s4, 8
	move	$s2, $s1
	beq	$s0, $s8, .LBB127_122
.LBB127_106:                            # %.lr.ph.i.i.i.i219.preheader
                                        #   in Loop: Header=BB127_70 Depth=2
	move	$s6, $zero
	b	.LBB127_109
	.p2align	4, , 16
.LBB127_107:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB127_109 Depth=3
	st.d	$a1, $s2, 0
	ld.d	$a0, $s4, 0
	st.d	$a0, $s2, 16
	ld.d	$s5, $s7, 8
.LBB127_108:                            # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB127_109 Depth=3
	st.d	$s5, $s2, 8
	stx.d	$s4, $s0, $s6
	st.d	$zero, $s7, 8
	addi.d	$s6, $s6, 32
	add.d	$a0, $s0, $s6
	st.b	$zero, $s4, 0
	beq	$a0, $s8, .LBB127_118
.LBB127_109:                            # %.lr.ph.i.i.i.i219
                                        #   Parent Loop BB127_40 Depth=1
                                        #     Parent Loop BB127_70 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	add.d	$s2, $s1, $s6
	addi.d	$a0, $s2, 16
	stx.d	$a0, $s1, $s6
	ldx.d	$a1, $s0, $s6
	add.d	$s7, $s0, $s6
	addi.d	$s4, $s7, 16
	bne	$s4, $a1, .LBB127_107
# %bb.110:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB127_109 Depth=3
	ld.d	$s5, $s7, 8
	addi.d	$a2, $s5, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB127_108
.LBB127_111:                            #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a1, $sp, 680
.LBB127_112:                            # %.invoke
                                        #   in Loop: Header=BB127_70 Depth=2
.Ltmp3231:
	addi.d	$a0, $sp, 656
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3232:
	b	.LBB127_69
.LBB127_113:                            #   in Loop: Header=BB127_70 Depth=2
.Ltmp3226:
	addi.d	$a0, $sp, 656
	addi.d	$a1, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3227:
# %bb.114:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit128
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a0, $sp, 168
	beq	$a0, $s4, .LBB127_69
# %bb.115:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i129
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a1, $sp, 184
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_69
.LBB127_116:                            # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i126
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$s0, $sp, 176
	addi.d	$a2, $s0, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB127_117:                            # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit128.thread
                                        #   in Loop: Header=BB127_70 Depth=2
	st.d	$s0, $fp, 8
	st.d	$s4, $sp, 168
	st.d	$zero, $sp, 176
	addi.d	$a0, $fp, 32
	b	.LBB127_68
.LBB127_118:                            # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i.loopexit
                                        #   in Loop: Header=BB127_70 Depth=2
	add.d	$s2, $s1, $s6
	addi.d	$s5, $sp, 696
	addi.d	$s7, $sp, 248
	bnez	$s0, .LBB127_123
	b	.LBB127_124
.LBB127_119:                            #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB127_120:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i144
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a0, $sp, 168
	st.d	$a0, $s8, 8
	b	.LBB127_67
.LBB127_121:                            #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 168
	st.d	$a0, $s4, 8
	move	$s2, $s1
	bne	$s0, $s8, .LBB127_106
.LBB127_122:                            # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i
                                        #   in Loop: Header=BB127_70 Depth=2
	beqz	$s0, .LBB127_124
.LBB127_123:                            # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i.i
                                        #   in Loop: Header=BB127_70 Depth=2
	ld.d	$a0, $sp, 672
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_124:                            # %.noexc147
                                        #   in Loop: Header=BB127_70 Depth=2
	addi.d	$a0, $s2, 32
	st.d	$s1, $sp, 656
	st.d	$a0, $sp, 664
	add.d	$a0, $s1, $fp
	st.d	$a0, $sp, 672
	addi.d	$s4, $sp, 184
	ori	$s6, $zero, 16
	b	.LBB127_69
	.p2align	4, , 16
.LBB127_125:                            # %._crit_edge
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 744
	ld.d	$a1, $sp, 752
	beq	$a0, $a1, .LBB127_128
# %bb.126:                              #   in Loop: Header=BB127_40 Depth=1
.Ltmp3234:
	addi.d	$a1, $sp, 656
	addi.d	$s1, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp3235:
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	addi.d	$fp, $sp, 264
# %bb.127:                              # %.noexc102
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 744
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 744
	b	.LBB127_129
	.p2align	4, , 16
.LBB127_128:                            #   in Loop: Header=BB127_40 Depth=1
.Ltmp3236:
	addi.d	$a0, $sp, 736
	addi.d	$a1, $sp, 656
	addi.d	$s1, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3237:
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	addi.d	$fp, $sp, 264
.LBB127_129:                            # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE9push_backERKS7_.exit104
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 200
	beq	$a0, $s1, .LBB127_131
# %bb.130:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i149
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_131:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit151
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 232
	beq	$a0, $s7, .LBB127_133
# %bb.132:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i152
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_133:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit154
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	st.d	$a0, $sp, 264
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	stx.d	$a1, $a0, $fp
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $sp, 360
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	st.d	$a2, $sp, 280
	addi.d	$a1, $a1, 16
	st.d	$a1, $sp, 288
	addi.d	$a1, $sp, 376
	beq	$a0, $a1, .LBB127_135
# %bb.134:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 376
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_135:                            # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
                                        #   in Loop: Header=BB127_40 Depth=1
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 288
	addi.d	$a0, $sp, 344
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	st.d	$a0, $sp, 264
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	stx.d	$a1, $a0, $fp
	st.d	$zero, $sp, 272
	addi.d	$a0, $sp, 392
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 656
	ld.d	$fp, $sp, 664
	beq	$a0, $fp, .LBB127_141
# %bb.136:                              # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB127_40 Depth=1
	addi.d	$s0, $a0, 16
	b	.LBB127_138
	.p2align	4, , 16
.LBB127_137:                            # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB127_138 Depth=2
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB127_140
.LBB127_138:                            # %.lr.ph.i.i
                                        #   Parent Loop BB127_40 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB127_137
# %bb.139:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i155
                                        #   in Loop: Header=BB127_138 Depth=2
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_137
	.p2align	4, , 16
.LBB127_140:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 656
.LBB127_141:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
                                        #   in Loop: Header=BB127_40 Depth=1
	beqz	$a0, .LBB127_143
# %bb.142:                              #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 672
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_143:                            # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a0, $sp, 680
	beq	$a0, $s5, .LBB127_39
# %bb.144:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i158
                                        #   in Loop: Header=BB127_40 Depth=1
	ld.d	$a1, $sp, 696
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_39
.LBB127_145:                            # %._crit_edge308
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.b	$a0, $a0, %pc_lo12(_ZN2PPL10index_baseE)
	ori	$a1, $zero, 1
	andn	$a1, $a1, $a0
.Ltmp3239:
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp3240:
# %bb.146:
	ld.d	$s1, $sp, 744
	ld.d	$fp, $sp, 736
	sub.d	$s0, $s1, $fp
	st.d	$zero, $sp, 144
	vld	$vr0, $sp, 96                   # 16-byte Folded Reload
	vst	$vr0, $sp, 152
	beq	$s1, $fp, .LBB127_151
# %bb.147:                              # %_ZNSt15__new_allocatorISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEE8allocateEmPKv.exit.i.i.i.i
.Ltmp3241:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3242:
# %bb.148:                              # %.noexc171
	st.d	$a0, $sp, 144
	st.d	$a0, $sp, 152
	add.d	$a1, $a0, $s0
	st.d	$a1, $sp, 160
	st.d	$a0, $sp, 680
	st.d	$a0, $sp, 264
	addi.d	$a1, $sp, 680
	st.d	$a1, $sp, 272
	.p2align	4, , 16
.LBB127_149:                            # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3243:
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp3244:
# %bb.150:                              # %_ZSt10_ConstructISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEJRKS8_EEvPT_DpOT0_.exit.i.i.i.i
                                        #   in Loop: Header=BB127_149 Depth=1
	ld.d	$a0, $sp, 680
	addi.d	$fp, $fp, 24
	addi.d	$a0, $a0, 24
	st.d	$a0, $sp, 680
	bne	$fp, $s1, .LBB127_149
	b	.LBB127_152
.LBB127_151:                            # %.noexc171.thread
	move	$a0, $zero
	vst	$vr0, $sp, 144
	st.d	$s0, $sp, 160
.LBB127_152:                            # %.loopexit
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	sub.d	$a1, $a1, $a2
	srli.d	$a1, $a1, 3
	lu12i.w	$a2, -349526
	ori	$a2, $a2, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$a2, $a2, -1366
	mul.w	$a2, $a1, $a2
	st.d	$a0, $sp, 152
.Ltmp3246:
	addi.d	$a0, $sp, 232
	addi.d	$a1, $sp, 144
	ori	$a3, $zero, 3
	ori	$a4, $zero, 4
	ori	$a5, $zero, 85
	ld.d	$a6, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils13print_stringsESt6vectorIS1_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EESaIS9_EEiiiiRNS2_18basic_stringstreamIcS5_S6_EE)
	jirl	$ra, $ra, 0
.Ltmp3247:
# %bb.153:
	ld.d	$fp, $sp, 144
	ld.d	$s0, $sp, 152
	bne	$fp, $s0, .LBB127_161
# %bb.154:                              # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit.i
	beqz	$fp, .LBB127_156
.LBB127_155:
	ld.d	$a0, $sp, 160
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_156:                            # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev.exit
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp3249:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp3250:
# %bb.157:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB127_199
# %bb.158:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i229
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB127_170
# %bb.159:
	ld.bu	$a0, $s0, 67
	b	.LBB127_172
	.p2align	4, , 16
.LBB127_160:                            # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i.i
                                        #   in Loop: Header=BB127_161 Depth=1
	addi.d	$fp, $fp, 24
	beq	$fp, $s0, .LBB127_169
.LBB127_161:                            # %.lr.ph.i.i175
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB127_164 Depth 2
	ld.d	$a0, $fp, 0
	ld.d	$s1, $fp, 8
	beq	$a0, $s1, .LBB127_167
# %bb.162:                              # %.lr.ph.i.i.i.i.i.preheader
                                        #   in Loop: Header=BB127_161 Depth=1
	addi.d	$s2, $a0, 16
	b	.LBB127_164
	.p2align	4, , 16
.LBB127_163:                            # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB127_164 Depth=2
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB127_166
.LBB127_164:                            # %.lr.ph.i.i.i.i.i
                                        #   Parent Loop BB127_161 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB127_163
# %bb.165:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB127_164 Depth=2
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_163
	.p2align	4, , 16
.LBB127_166:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i
                                        #   in Loop: Header=BB127_161 Depth=1
	ld.d	$a0, $fp, 0
.LBB127_167:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i
                                        #   in Loop: Header=BB127_161 Depth=1
	beqz	$a0, .LBB127_160
# %bb.168:                              #   in Loop: Header=BB127_161 Depth=1
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_160
.LBB127_169:                            # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split.i
	ld.d	$fp, $sp, 144
	bnez	$fp, .LBB127_155
	b	.LBB127_156
.LBB127_170:
.Ltmp3251:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp3252:
# %bb.171:                              # %.noexc233
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp3253:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp3254:
.LBB127_172:                            # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp3255:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp3256:
# %bb.173:                              # %.noexc235
.Ltmp3257:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp3258:
# %bb.174:                              # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 712
	ld.d	$fp, $sp, 720
	beq	$a0, $fp, .LBB127_180
# %bb.175:                              # %.lr.ph.i.i184.preheader
	addi.d	$s0, $a0, 16
	b	.LBB127_177
	.p2align	4, , 16
.LBB127_176:                            # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i187
                                        #   in Loop: Header=BB127_177 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB127_179
.LBB127_177:                            # %.lr.ph.i.i184
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB127_176
# %bb.178:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i186
                                        #   in Loop: Header=BB127_177 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_176
.LBB127_179:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i189
	ld.d	$a0, $sp, 712
.LBB127_180:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i191
	beqz	$a0, .LBB127_182
# %bb.181:
	ld.d	$a1, $sp, 728
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_182:                            # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit194
	ld.d	$fp, $sp, 736
	ld.d	$s0, $sp, 744
	bne	$fp, $s0, .LBB127_187
# %bb.183:                              # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exit.i212
	beqz	$fp, .LBB127_185
.LBB127_184:
	ld.d	$a0, $sp, 752
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_185:
	ld.d	$s8, $sp, 760                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 768                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 776                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 784                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 792                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 800                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 808                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 816                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 824                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 832                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 840                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 848
	ret
	.p2align	4, , 16
.LBB127_186:                            # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit.i.i208
                                        #   in Loop: Header=BB127_187 Depth=1
	addi.d	$fp, $fp, 24
	beq	$fp, $s0, .LBB127_195
.LBB127_187:                            # %.lr.ph.i.i196
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB127_190 Depth 2
	ld.d	$a0, $fp, 0
	ld.d	$s1, $fp, 8
	beq	$a0, $s1, .LBB127_193
# %bb.188:                              # %.lr.ph.i.i.i.i.i199.preheader
                                        #   in Loop: Header=BB127_187 Depth=1
	addi.d	$s2, $a0, 16
	b	.LBB127_190
	.p2align	4, , 16
.LBB127_189:                            # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i202
                                        #   in Loop: Header=BB127_190 Depth=2
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB127_192
.LBB127_190:                            # %.lr.ph.i.i.i.i.i199
                                        #   Parent Loop BB127_187 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB127_189
# %bb.191:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i201
                                        #   in Loop: Header=BB127_190 Depth=2
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_189
	.p2align	4, , 16
.LBB127_192:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i204
                                        #   in Loop: Header=BB127_187 Depth=1
	ld.d	$a0, $fp, 0
.LBB127_193:                            # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i206
                                        #   in Loop: Header=BB127_187 Depth=1
	beqz	$a0, .LBB127_186
# %bb.194:                              #   in Loop: Header=BB127_187 Depth=1
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_186
.LBB127_195:                            # %_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EES8_EvT_SA_RSaIT0_E.exitthread-pre-split.i210
	ld.d	$fp, $sp, 736
	bnez	$fp, .LBB127_184
	b	.LBB127_185
.LBB127_196:
.Ltmp3216:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp3217:
# %bb.197:                              # %.noexc224
.LBB127_198:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB127_199:
.Ltmp3259:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp3260:
# %bb.200:                              # %.noexc232
.LBB127_201:
.Ltmp3188:
	b	.LBB127_207
.LBB127_202:
.Ltmp3185:
	b	.LBB127_207
.LBB127_203:
.Ltmp3182:
	b	.LBB127_207
.LBB127_204:
.Ltmp3248:
	move	$s0, $a0
	addi.d	$a0, $sp, 144
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB127_235
.LBB127_205:
.Ltmp3193:
	move	$s0, $a0
	b	.LBB127_235
.LBB127_206:
.Ltmp3179:
.LBB127_207:
	ld.d	$a2, $sp, 264
	move	$s0, $a0
	beq	$a2, $fp, .LBB127_235
# %bb.208:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i105
	ld.d	$a0, $sp, 280
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB127_234
.LBB127_209:
.Ltmp3261:
	move	$s0, $a0
	b	.LBB127_235
.LBB127_210:
.Ltmp3196:
	move	$s0, $a0
	b	.LBB127_235
.LBB127_211:
.Ltmp3208:
	move	$s0, $a0
	b	.LBB127_229
.LBB127_212:
.Ltmp3205:
	move	$s0, $a0
	b	.LBB127_231
.LBB127_213:                            # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22.i
.Ltmp3215:
	move	$s0, $a0
	move	$a0, $s1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB127_226
.LBB127_214:
.Ltmp3238:
	move	$s0, $a0
	b	.LBB127_227
.LBB127_215:
.Ltmp3199:
	move	$s0, $a0
	b	.LBB127_232
.LBB127_216:
.Ltmp3202:
	move	$s0, $a0
	b	.LBB127_231
.LBB127_217:                            # %.body.i
.Ltmp3245:
	move	$s0, $a0
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 144
	beqz	$a0, .LBB127_235
# %bb.218:
	ld.d	$a1, $sp, 160
	sub.d	$a1, $a1, $a0
	b	.LBB127_234
.LBB127_219:
.Ltmp3228:
	b	.LBB127_222
.LBB127_220:                            # %.loopexit.split-lp
.Ltmp3218:
	move	$s0, $a0
	b	.LBB127_224
.LBB127_221:
.Ltmp3225:
.LBB127_222:
	ld.d	$a2, $sp, 168
	move	$s0, $a0
	beq	$a2, $s4, .LBB127_224
# %bb.223:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i132
	ld.d	$a0, $sp, 184
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_224:                            # %.body
	addi.d	$s5, $sp, 696
	addi.d	$s7, $sp, 248
	b	.LBB127_226
.LBB127_225:                            # %.loopexit247
.Ltmp3233:
	move	$s0, $a0
.LBB127_226:                            # %.body226
	addi.d	$s1, $sp, 216
.LBB127_227:                            # %.body226
	ld.d	$a0, $sp, 200
	beq	$a0, $s1, .LBB127_229
# %bb.228:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i161
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_229:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit163
	ld.d	$a0, $sp, 232
	beq	$a0, $s7, .LBB127_231
# %bb.230:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i164
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_231:
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
.LBB127_232:
	addi.d	$a0, $sp, 656
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 680
	beq	$a0, $s5, .LBB127_235
# %bb.233:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i167
	ld.d	$a1, $sp, 696
	addi.d	$a1, $a1, 1
.LBB127_234:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB127_235:
	addi.d	$a0, $sp, 712
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 736
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end127:
	.size	_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE, .Lfunc_end127-_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI127_0:
	.word	.LBB127_72-.LJTI127_0
	.word	.LBB127_89-.LJTI127_0
	.word	.LBB127_75-.LJTI127_0
	.word	.LBB127_82-.LJTI127_0
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table127:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Lfunc_begin71-.Lfunc_begin71  # >> Call Site 1 <<
	.uleb128 .Ltmp3177-.Lfunc_begin71       #   Call between .Lfunc_begin71 and .Ltmp3177
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3177-.Lfunc_begin71       # >> Call Site 2 <<
	.uleb128 .Ltmp3178-.Ltmp3177            #   Call between .Ltmp3177 and .Ltmp3178
	.uleb128 .Ltmp3179-.Lfunc_begin71       #     jumps to .Ltmp3179
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3178-.Lfunc_begin71       # >> Call Site 3 <<
	.uleb128 .Ltmp3180-.Ltmp3178            #   Call between .Ltmp3178 and .Ltmp3180
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3180-.Lfunc_begin71       # >> Call Site 4 <<
	.uleb128 .Ltmp3181-.Ltmp3180            #   Call between .Ltmp3180 and .Ltmp3181
	.uleb128 .Ltmp3182-.Lfunc_begin71       #     jumps to .Ltmp3182
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3181-.Lfunc_begin71       # >> Call Site 5 <<
	.uleb128 .Ltmp3183-.Ltmp3181            #   Call between .Ltmp3181 and .Ltmp3183
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3183-.Lfunc_begin71       # >> Call Site 6 <<
	.uleb128 .Ltmp3184-.Ltmp3183            #   Call between .Ltmp3183 and .Ltmp3184
	.uleb128 .Ltmp3185-.Lfunc_begin71       #     jumps to .Ltmp3185
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3184-.Lfunc_begin71       # >> Call Site 7 <<
	.uleb128 .Ltmp3186-.Ltmp3184            #   Call between .Ltmp3184 and .Ltmp3186
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3186-.Lfunc_begin71       # >> Call Site 8 <<
	.uleb128 .Ltmp3187-.Ltmp3186            #   Call between .Ltmp3186 and .Ltmp3187
	.uleb128 .Ltmp3188-.Lfunc_begin71       #     jumps to .Ltmp3188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3187-.Lfunc_begin71       # >> Call Site 9 <<
	.uleb128 .Ltmp3189-.Ltmp3187            #   Call between .Ltmp3187 and .Ltmp3189
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3189-.Lfunc_begin71       # >> Call Site 10 <<
	.uleb128 .Ltmp3192-.Ltmp3189            #   Call between .Ltmp3189 and .Ltmp3192
	.uleb128 .Ltmp3193-.Lfunc_begin71       #     jumps to .Ltmp3193
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3192-.Lfunc_begin71       # >> Call Site 11 <<
	.uleb128 .Ltmp3194-.Ltmp3192            #   Call between .Ltmp3192 and .Ltmp3194
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3194-.Lfunc_begin71       # >> Call Site 12 <<
	.uleb128 .Ltmp3195-.Ltmp3194            #   Call between .Ltmp3194 and .Ltmp3195
	.uleb128 .Ltmp3196-.Lfunc_begin71       #     jumps to .Ltmp3196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3195-.Lfunc_begin71       # >> Call Site 13 <<
	.uleb128 .Ltmp3197-.Ltmp3195            #   Call between .Ltmp3195 and .Ltmp3197
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3197-.Lfunc_begin71       # >> Call Site 14 <<
	.uleb128 .Ltmp3198-.Ltmp3197            #   Call between .Ltmp3197 and .Ltmp3198
	.uleb128 .Ltmp3199-.Lfunc_begin71       #     jumps to .Ltmp3199
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3200-.Lfunc_begin71       # >> Call Site 15 <<
	.uleb128 .Ltmp3201-.Ltmp3200            #   Call between .Ltmp3200 and .Ltmp3201
	.uleb128 .Ltmp3202-.Lfunc_begin71       #     jumps to .Ltmp3202
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3203-.Lfunc_begin71       # >> Call Site 16 <<
	.uleb128 .Ltmp3204-.Ltmp3203            #   Call between .Ltmp3203 and .Ltmp3204
	.uleb128 .Ltmp3205-.Lfunc_begin71       #     jumps to .Ltmp3205
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3204-.Lfunc_begin71       # >> Call Site 17 <<
	.uleb128 .Ltmp3206-.Ltmp3204            #   Call between .Ltmp3204 and .Ltmp3206
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3206-.Lfunc_begin71       # >> Call Site 18 <<
	.uleb128 .Ltmp3207-.Ltmp3206            #   Call between .Ltmp3206 and .Ltmp3207
	.uleb128 .Ltmp3208-.Lfunc_begin71       #     jumps to .Ltmp3208
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3207-.Lfunc_begin71       # >> Call Site 19 <<
	.uleb128 .Ltmp3229-.Ltmp3207            #   Call between .Ltmp3207 and .Ltmp3229
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3229-.Lfunc_begin71       # >> Call Site 20 <<
	.uleb128 .Ltmp3210-.Ltmp3229            #   Call between .Ltmp3229 and .Ltmp3210
	.uleb128 .Ltmp3233-.Lfunc_begin71       #     jumps to .Ltmp3233
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3221-.Lfunc_begin71       # >> Call Site 21 <<
	.uleb128 .Ltmp3224-.Ltmp3221            #   Call between .Ltmp3221 and .Ltmp3224
	.uleb128 .Ltmp3225-.Lfunc_begin71       #     jumps to .Ltmp3225
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3211-.Lfunc_begin71       # >> Call Site 22 <<
	.uleb128 .Ltmp3212-.Ltmp3211            #   Call between .Ltmp3211 and .Ltmp3212
	.uleb128 .Ltmp3233-.Lfunc_begin71       #     jumps to .Ltmp3233
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3213-.Lfunc_begin71       # >> Call Site 23 <<
	.uleb128 .Ltmp3214-.Ltmp3213            #   Call between .Ltmp3213 and .Ltmp3214
	.uleb128 .Ltmp3215-.Lfunc_begin71       #     jumps to .Ltmp3215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3214-.Lfunc_begin71       # >> Call Site 24 <<
	.uleb128 .Ltmp3231-.Ltmp3214            #   Call between .Ltmp3214 and .Ltmp3231
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3231-.Lfunc_begin71       # >> Call Site 25 <<
	.uleb128 .Ltmp3232-.Ltmp3231            #   Call between .Ltmp3231 and .Ltmp3232
	.uleb128 .Ltmp3233-.Lfunc_begin71       #     jumps to .Ltmp3233
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3226-.Lfunc_begin71       # >> Call Site 26 <<
	.uleb128 .Ltmp3227-.Ltmp3226            #   Call between .Ltmp3226 and .Ltmp3227
	.uleb128 .Ltmp3228-.Lfunc_begin71       #     jumps to .Ltmp3228
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3227-.Lfunc_begin71       # >> Call Site 27 <<
	.uleb128 .Ltmp3234-.Ltmp3227            #   Call between .Ltmp3227 and .Ltmp3234
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3234-.Lfunc_begin71       # >> Call Site 28 <<
	.uleb128 .Ltmp3237-.Ltmp3234            #   Call between .Ltmp3234 and .Ltmp3237
	.uleb128 .Ltmp3238-.Lfunc_begin71       #     jumps to .Ltmp3238
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3237-.Lfunc_begin71       # >> Call Site 29 <<
	.uleb128 .Ltmp3239-.Ltmp3237            #   Call between .Ltmp3237 and .Ltmp3239
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3239-.Lfunc_begin71       # >> Call Site 30 <<
	.uleb128 .Ltmp3242-.Ltmp3239            #   Call between .Ltmp3239 and .Ltmp3242
	.uleb128 .Ltmp3261-.Lfunc_begin71       #     jumps to .Ltmp3261
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3243-.Lfunc_begin71       # >> Call Site 31 <<
	.uleb128 .Ltmp3244-.Ltmp3243            #   Call between .Ltmp3243 and .Ltmp3244
	.uleb128 .Ltmp3245-.Lfunc_begin71       #     jumps to .Ltmp3245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3246-.Lfunc_begin71       # >> Call Site 32 <<
	.uleb128 .Ltmp3247-.Ltmp3246            #   Call between .Ltmp3246 and .Ltmp3247
	.uleb128 .Ltmp3248-.Lfunc_begin71       #     jumps to .Ltmp3248
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3247-.Lfunc_begin71       # >> Call Site 33 <<
	.uleb128 .Ltmp3249-.Ltmp3247            #   Call between .Ltmp3247 and .Ltmp3249
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3249-.Lfunc_begin71       # >> Call Site 34 <<
	.uleb128 .Ltmp3250-.Ltmp3249            #   Call between .Ltmp3249 and .Ltmp3250
	.uleb128 .Ltmp3261-.Lfunc_begin71       #     jumps to .Ltmp3261
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3250-.Lfunc_begin71       # >> Call Site 35 <<
	.uleb128 .Ltmp3251-.Ltmp3250            #   Call between .Ltmp3250 and .Ltmp3251
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3251-.Lfunc_begin71       # >> Call Site 36 <<
	.uleb128 .Ltmp3258-.Ltmp3251            #   Call between .Ltmp3251 and .Ltmp3258
	.uleb128 .Ltmp3261-.Lfunc_begin71       #     jumps to .Ltmp3261
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3258-.Lfunc_begin71       # >> Call Site 37 <<
	.uleb128 .Ltmp3216-.Ltmp3258            #   Call between .Ltmp3258 and .Ltmp3216
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3216-.Lfunc_begin71       # >> Call Site 38 <<
	.uleb128 .Ltmp3217-.Ltmp3216            #   Call between .Ltmp3216 and .Ltmp3217
	.uleb128 .Ltmp3218-.Lfunc_begin71       #     jumps to .Ltmp3218
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3217-.Lfunc_begin71       # >> Call Site 39 <<
	.uleb128 .Ltmp3259-.Ltmp3217            #   Call between .Ltmp3217 and .Ltmp3259
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3259-.Lfunc_begin71       # >> Call Site 40 <<
	.uleb128 .Ltmp3260-.Ltmp3259            #   Call between .Ltmp3259 and .Ltmp3260
	.uleb128 .Ltmp3261-.Lfunc_begin71       #     jumps to .Ltmp3261
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3260-.Lfunc_begin71       # >> Call Site 41 <<
	.uleb128 .Lfunc_end127-.Ltmp3260        #   Call between .Ltmp3260 and .Lfunc_end127
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end71:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser16list_funcs_startEv # -- Begin function _ZN2PP11PowerParser16list_funcs_startEv
	.p2align	5
	.type	_ZN2PP11PowerParser16list_funcs_startEv,@function
_ZN2PP11PowerParser16list_funcs_startEv: # @_ZN2PP11PowerParser16list_funcs_startEv
.Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception72
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.d	$s0, $sp, 88
	st.d	$s0, $sp, 72
	ld.d	$a2, $a0, 1184
	st.d	$zero, $sp, 80
	st.b	$zero, $sp, 88
	addi.d	$a0, $a0, 1176
.Ltmp3262:
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3263:
# %bb.1:                                # %.noexc11
	ld.wu	$a2, $fp, 1168
	addi.d	$a0, $fp, 1104
	ld.d	$a3, $fp, 1184
	ld.d	$a1, $fp, 1176
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp3264:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp3265:
# %bb.2:                                # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 72
	addi.d	$s1, $fp, 1080
	beq	$a0, $s0, .LBB128_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB128_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$s0, $sp, 56
	st.d	$s0, $sp, 40
	st.d	$zero, $sp, 48
	st.b	$zero, $sp, 56
	addi.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
.Ltmp3267:
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13list_funcs_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp3268:
# %bb.5:
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB128_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB128_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB128_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i24
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB128_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	st.w	$zero, $fp, 1072
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB128_10:
.Ltmp3269:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s2, .LBB128_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB128_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB128_17
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	b	.LBB128_16
.LBB128_14:
.Ltmp3266:
	ld.d	$a2, $sp, 72
	move	$fp, $a0
	beq	$a2, $s0, .LBB128_17
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	ld.d	$a0, $sp, 88
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB128_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB128_17:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end128:
	.size	_ZN2PP11PowerParser16list_funcs_startEv, .Lfunc_end128-_ZN2PP11PowerParser16list_funcs_startEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table128:
.Lexception72:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end72-.Lcst_begin72
.Lcst_begin72:
	.uleb128 .Ltmp3262-.Lfunc_begin72       # >> Call Site 1 <<
	.uleb128 .Ltmp3265-.Ltmp3262            #   Call between .Ltmp3262 and .Ltmp3265
	.uleb128 .Ltmp3266-.Lfunc_begin72       #     jumps to .Ltmp3266
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3265-.Lfunc_begin72       # >> Call Site 2 <<
	.uleb128 .Ltmp3267-.Ltmp3265            #   Call between .Ltmp3265 and .Ltmp3267
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3267-.Lfunc_begin72       # >> Call Site 3 <<
	.uleb128 .Ltmp3268-.Ltmp3267            #   Call between .Ltmp3267 and .Ltmp3268
	.uleb128 .Ltmp3269-.Lfunc_begin72       #     jumps to .Ltmp3269
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3268-.Lfunc_begin72       # >> Call Site 4 <<
	.uleb128 .Lfunc_end128-.Ltmp3268        #   Call between .Ltmp3268 and .Lfunc_end128
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end72:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE # -- Begin function _ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE
	.p2align	5
	.type	_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE,@function
_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE: # @_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE
.Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception73
# %bb.0:
	addi.d	$sp, $sp, -192
	.cfi_def_cfa_offset 192
	st.d	$ra, $sp, 184                   # 8-byte Folded Spill
	st.d	$fp, $sp, 176                   # 8-byte Folded Spill
	st.d	$s0, $sp, 168                   # 8-byte Folded Spill
	st.d	$s1, $sp, 160                   # 8-byte Folded Spill
	st.d	$s2, $sp, 152                   # 8-byte Folded Spill
	st.d	$s3, $sp, 144                   # 8-byte Folded Spill
	st.d	$s4, $sp, 136                   # 8-byte Folded Spill
	st.d	$s5, $sp, 128                   # 8-byte Folded Spill
	st.d	$s6, $sp, 120                   # 8-byte Folded Spill
	st.d	$s7, $sp, 112                   # 8-byte Folded Spill
	st.d	$s8, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 520
	ld.w	$a4, $a0, 8
	ld.w	$a0, $a0, 12
	bne	$a4, $a0, .LBB129_34
# %bb.1:
	move	$s1, $a3
	move	$s6, $a2
	ld.d	$a3, $a1, 0
	ld.d	$a2, $a1, 8
	addi.d	$s2, $s1, 16
	move	$a0, $s2
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s0, $zero
	move	$s4, $zero
	addi.d	$a0, $s1, 256
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$s5, $a0, -1973
	b	.LBB129_4
	.p2align	4, , 16
.LBB129_2:                              #   in Loop: Header=BB129_4 Depth=1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB129_3:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
                                        #   in Loop: Header=BB129_4 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	addi.d	$s4, $s4, 1
	addi.d	$s0, $s0, 432
.LBB129_4:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 984
	ld.d	$a2, $a1, 72
	ld.d	$a0, $a1, 40
	sub.d	$a3, $a2, $a0
	ld.d	$a4, $a1, 48
	ld.d	$a5, $a1, 56
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	sub.d	$a3, $a3, $a2
	sub.d	$a4, $a4, $a5
	ld.d	$a5, $a1, 32
	ld.d	$a2, $a1, 16
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s5
	add.d	$a3, $a3, $a4
	sub.d	$a4, $a5, $a2
	srli.d	$a4, $a4, 4
	mul.d	$a4, $a4, $s5
	add.w	$a3, $a3, $a4
	bge	$s4, $a3, .LBB129_11
# %bb.5:                                #   in Loop: Header=BB129_4 Depth=1
	ld.d	$a1, $a1, 24
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $s5
	add.d	$a1, $s4, $a1
	beqz	$a1, .LBB129_7
# %bb.6:                                #   in Loop: Header=BB129_4 Depth=1
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB129_8
	.p2align	4, , 16
.LBB129_7:                              #   in Loop: Header=BB129_4 Depth=1
	add.d	$a0, $a2, $s0
.LBB129_8:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB129_4 Depth=1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ldx.d	$s3, $a1, $a0
	beqz	$s3, .LBB129_35
# %bb.9:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB129_4 Depth=1
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB129_2
# %bb.10:                               #   in Loop: Header=BB129_4 Depth=1
	ld.bu	$a0, $s3, 67
	b	.LBB129_3
.LBB129_11:                             # %.preheader
	st.d	$s6, $sp, 0                     # 8-byte Folded Spill
	move	$s8, $zero
	move	$s3, $zero
	addi.d	$s6, $sp, 88
	addi.d	$s0, $sp, 56
	lu12i.w	$a0, -118150
	ori	$a0, $a0, 2423
	lu32i.d	$a0, -177225
	lu52i.d	$s4, $a0, 403
	pcalau12i	$a0, %pc_hi20(.L.str.229)
	addi.d	$a0, $a0, %pc_lo12(.L.str.229)
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$s5, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(.L.str.231)
	addi.d	$a0, $a0, %pc_lo12(.L.str.231)
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.45)
	addi.d	$a0, $a0, %pc_lo12(.L.str.45)
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	b	.LBB129_14
	.p2align	4, , 16
.LBB129_12:                             #   in Loop: Header=BB129_14 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB129_13:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit50
                                        #   in Loop: Header=BB129_14 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 1
	addi.d	$s8, $s8, 568
	move	$s6, $s0
	move	$s0, $s7
.LBB129_14:                             # =>This Inner Loop Header: Depth=1
	ldptr.d	$a0, $fp, 2368
	ldptr.d	$a1, $fp, 2336
	sub.d	$a1, $a0, $a1
	ldptr.d	$a2, $fp, 2344
	ldptr.d	$a3, $fp, 2352
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a1, $a2, $a3
	ldptr.d	$a2, $fp, 2328
	ldptr.d	$a3, $fp, 2312
	srli.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s4
	add.d	$a0, $a0, $a1
	sub.d	$a1, $a2, $a3
	srli.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s4
	add.w	$a0, $a0, $a1
	bge	$s3, $a0, .LBB129_33
# %bb.15:                               #   in Loop: Header=BB129_14 Depth=1
	ori	$a2, $zero, 6
	move	$a0, $s2
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ldptr.d	$a0, $fp, 2312
	ldptr.d	$a1, $fp, 2320
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s4
	add.d	$a1, $s3, $a1
	beqz	$a1, .LBB129_17
# %bb.16:                               #   in Loop: Header=BB129_14 Depth=1
	ldptr.d	$a0, $fp, 2336
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB129_18
	.p2align	4, , 16
.LBB129_17:                             #   in Loop: Header=BB129_14 Depth=1
	add.d	$a0, $a0, $s8
.LBB129_18:                             # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB129_14 Depth=1
	st.d	$s6, $sp, 72
	st.d	$zero, $sp, 80
	ld.w	$a1, $s5, 0
	ld.h	$a2, $s5, 4
	st.b	$zero, $sp, 88
	st.d	$s0, $sp, 40
	st.w	$a1, $s0, 0
	st.h	$a2, $s0, 4
	ori	$a1, $zero, 6
	st.d	$a1, $sp, 48
	st.b	$zero, $sp, 62
.Ltmp3270:
	addi.d	$a1, $sp, 72
	addi.d	$a2, $sp, 40
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN2PP8Whenthen14list_conditionENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp3271:
# %bb.19:                               #   in Loop: Header=BB129_14 Depth=1
	ld.d	$a0, $sp, 40
	move	$s7, $s0
	beq	$a0, $s0, .LBB129_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB129_14 Depth=1
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB129_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB129_14 Depth=1
	ld.d	$a0, $sp, 72
	move	$s0, $s6
	beq	$a0, $s6, .LBB129_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
                                        #   in Loop: Header=BB129_14 Depth=1
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB129_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
                                        #   in Loop: Header=BB129_14 Depth=1
	ori	$a2, $zero, 7
	move	$a0, $s2
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB129_35
# %bb.24:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i42
                                        #   in Loop: Header=BB129_14 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB129_26
# %bb.25:                               #   in Loop: Header=BB129_14 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB129_27
	.p2align	4, , 16
.LBB129_26:                             #   in Loop: Header=BB129_14 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB129_27:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit45
                                        #   in Loop: Header=BB129_14 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ldptr.d	$a0, $fp, 2312
	ldptr.d	$a1, $fp, 2320
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s4
	add.d	$a1, $s3, $a1
	beqz	$a1, .LBB129_29
# %bb.28:                               #   in Loop: Header=BB129_14 Depth=1
	ldptr.d	$a0, $fp, 2336
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB129_30
	.p2align	4, , 16
.LBB129_29:                             #   in Loop: Header=BB129_14 Depth=1
	add.d	$a0, $a0, $s8
.LBB129_30:                             # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit34
                                        #   in Loop: Header=BB129_14 Depth=1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP8Whenthen13list_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 7
	move	$a0, $s2
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ldx.d	$s6, $a1, $a0
	beqz	$s6, .LBB129_35
# %bb.31:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i47
                                        #   in Loop: Header=BB129_14 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB129_12
# %bb.32:                               #   in Loop: Header=BB129_14 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB129_13
.LBB129_33:
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.LBB129_34:
	ld.d	$s8, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 168                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 176                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 184                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 192
	ret
.LBB129_35:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB129_36:
.Ltmp3272:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	bne	$a2, $s0, .LBB129_39
# %bb.37:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	ld.d	$a0, $sp, 72
	bne	$a0, $s6, .LBB129_40
.LBB129_38:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB129_39:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 72
	beq	$a0, $s6, .LBB129_38
.LBB129_40:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end129:
	.size	_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE, .Lfunc_end129-_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table129:
.Lexception73:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end73-.Lcst_begin73
.Lcst_begin73:
	.uleb128 .Lfunc_begin73-.Lfunc_begin73  # >> Call Site 1 <<
	.uleb128 .Ltmp3270-.Lfunc_begin73       #   Call between .Lfunc_begin73 and .Ltmp3270
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3270-.Lfunc_begin73       # >> Call Site 2 <<
	.uleb128 .Ltmp3271-.Ltmp3270            #   Call between .Ltmp3270 and .Ltmp3271
	.uleb128 .Ltmp3272-.Lfunc_begin73       #     jumps to .Ltmp3272
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3271-.Lfunc_begin73       # >> Call Site 3 <<
	.uleb128 .Lfunc_end129-.Ltmp3271        #   Call between .Ltmp3271 and .Lfunc_end129
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end73:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser16list_cmdsf_startEv # -- Begin function _ZN2PP11PowerParser16list_cmdsf_startEv
	.p2align	5
	.type	_ZN2PP11PowerParser16list_cmdsf_startEv,@function
_ZN2PP11PowerParser16list_cmdsf_startEv: # @_ZN2PP11PowerParser16list_cmdsf_startEv
.Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception74
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.d	$s0, $sp, 88
	st.d	$s0, $sp, 72
	ld.d	$a2, $a0, 1184
	st.d	$zero, $sp, 80
	st.b	$zero, $sp, 88
	addi.d	$a0, $a0, 1176
.Ltmp3273:
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3274:
# %bb.1:                                # %.noexc11
	ld.wu	$a2, $fp, 1168
	addi.d	$a0, $fp, 1104
	ld.d	$a3, $fp, 1184
	ld.d	$a1, $fp, 1176
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp3275:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp3276:
# %bb.2:                                # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 72
	addi.d	$s1, $fp, 1080
	beq	$a0, $s0, .LBB130_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB130_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$s0, $sp, 56
	st.d	$s0, $sp, 40
	st.d	$zero, $sp, 48
	st.b	$zero, $sp, 56
	addi.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
.Ltmp3278:
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser13list_cmdsf_ssENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp3279:
# %bb.5:
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB130_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB130_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB130_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i24
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB130_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	st.w	$zero, $fp, 1072
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB130_10:
.Ltmp3280:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s2, .LBB130_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB130_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB130_17
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	b	.LBB130_16
.LBB130_14:
.Ltmp3277:
	ld.d	$a2, $sp, 72
	move	$fp, $a0
	beq	$a2, $s0, .LBB130_17
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	ld.d	$a0, $sp, 88
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB130_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB130_17:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end130:
	.size	_ZN2PP11PowerParser16list_cmdsf_startEv, .Lfunc_end130-_ZN2PP11PowerParser16list_cmdsf_startEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table130:
.Lexception74:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end74-.Lcst_begin74
.Lcst_begin74:
	.uleb128 .Ltmp3273-.Lfunc_begin74       # >> Call Site 1 <<
	.uleb128 .Ltmp3276-.Ltmp3273            #   Call between .Ltmp3273 and .Ltmp3276
	.uleb128 .Ltmp3277-.Lfunc_begin74       #     jumps to .Ltmp3277
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3276-.Lfunc_begin74       # >> Call Site 2 <<
	.uleb128 .Ltmp3278-.Ltmp3276            #   Call between .Ltmp3276 and .Ltmp3278
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3278-.Lfunc_begin74       # >> Call Site 3 <<
	.uleb128 .Ltmp3279-.Ltmp3278            #   Call between .Ltmp3278 and .Ltmp3279
	.uleb128 .Ltmp3280-.Lfunc_begin74       #     jumps to .Ltmp3280
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3279-.Lfunc_begin74       # >> Call Site 4 <<
	.uleb128 .Lfunc_end130-.Ltmp3279        #   Call between .Ltmp3279 and .Lfunc_end130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end74:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.LCPI131_0:
	.dword	8                               # 0x8
	.dword	2314885530818453536             # 0x2020202020202020
	.text
	.globl	_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception75
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ldptr.d	$a0, $a0, 2368
	ldptr.d	$a2, $s0, 2336
	move	$s1, $a1
	sub.d	$a1, $a0, $a2
	ldptr.d	$a2, $s0, 2344
	ldptr.d	$a3, $s0, 2352
	srai.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a1, $a2, $a3
	srai.d	$a1, $a1, 3
	lu12i.w	$a2, -118150
	ori	$a2, $a2, 2423
	lu32i.d	$a2, -177225
	ldptr.d	$a3, $s0, 2328
	ldptr.d	$a4, $s0, 2312
	lu52i.d	$s7, $a2, 403
	mul.d	$a1, $a1, $s7
	add.d	$a0, $a0, $a1
	sub.d	$a1, $a3, $a4
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s7
	add.d	$a0, $a0, $a1
	addi.w	$a1, $a0, 0
	addi.d	$fp, $s1, 16
	blez	$a1, .LBB131_39
# %bb.1:                                # %.preheader
	move	$s8, $zero
	move	$s3, $zero
	addi.d	$s4, $s1, 256
	addi.d	$s5, $sp, 104
	bstrpick.d	$a0, $a0, 30, 0
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	ori	$s2, $zero, 1
	pcalau12i	$a0, %pc_hi20(.L.str.233)
	addi.d	$a0, $a0, %pc_lo12(.L.str.233)
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.234)
	pcalau12i	$a1, %pc_hi20(.LCPI131_0)
	vld	$vr0, $a1, %pc_lo12(.LCPI131_0)
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	addi.d	$a0, $a0, %pc_lo12(.L.str.234)
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.235)
	addi.d	$a0, $a0, %pc_lo12(.L.str.235)
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	b	.LBB131_4
	.p2align	4, , 16
.LBB131_2:                              #   in Loop: Header=BB131_4 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB131_3:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit78
                                        #   in Loop: Header=BB131_4 Depth=1
	addi.d	$s3, $s3, 1
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	addi.d	$s8, $s8, 568
	addi.w	$s2, $s2, 1
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	beq	$a0, $s3, .LBB131_38
.LBB131_4:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	ldx.d	$s6, $s4, $a0
	beqz	$s6, .LBB131_52
# %bb.5:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i50
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB131_7
# %bb.6:                                #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB131_8
	.p2align	4, , 16
.LBB131_7:                              #   in Loop: Header=BB131_4 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB131_8:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit53
                                        #   in Loop: Header=BB131_4 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 55
	move	$a0, $fp
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s6, $a1, 240
	beqz	$s6, .LBB131_52
# %bb.9:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i55
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a1, $s6, 56
	beqz	$a1, .LBB131_11
# %bb.10:                               #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a1, $s6, 67
	b	.LBB131_12
	.p2align	4, , 16
.LBB131_11:                             #   in Loop: Header=BB131_4 Depth=1
	move	$s5, $a0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s5
	addi.d	$s5, $sp, 104
.LBB131_12:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit58
                                        #   in Loop: Header=BB131_4 Depth=1
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 36
	move	$a0, $fp
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	ldx.d	$s6, $s4, $a0
	beqz	$s6, .LBB131_52
# %bb.13:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i60
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB131_15
# %bb.14:                               #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB131_16
	.p2align	4, , 16
.LBB131_15:                             #   in Loop: Header=BB131_4 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB131_16:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit63
                                        #   in Loop: Header=BB131_4 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ldptr.d	$a0, $s0, 2312
	ldptr.d	$a1, $s0, 2320
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s7
	add.d	$a1, $s3, $a1
	addi.d	$s6, $sp, 72
	beqz	$a1, .LBB131_18
# %bb.17:                               #   in Loop: Header=BB131_4 Depth=1
	ldptr.d	$a0, $s0, 2336
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB131_19
	.p2align	4, , 16
.LBB131_18:                             #   in Loop: Header=BB131_4 Depth=1
	add.d	$a0, $a0, $s8
.LBB131_19:                             # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB131_4 Depth=1
	st.d	$s5, $sp, 88
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 96
	st.b	$zero, $sp, 112
	st.d	$s6, $sp, 56
	vst	$vr0, $sp, 64
	st.b	$zero, $sp, 80
.Ltmp3281:
	addi.d	$a1, $sp, 88
	addi.d	$a2, $sp, 56
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN2PP8Whenthen14list_conditionENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_RNS1_18basic_stringstreamIcS4_S5_EE)
	jirl	$ra, $ra, 0
.Ltmp3282:
# %bb.20:                               #   in Loop: Header=BB131_4 Depth=1
	ld.d	$a0, $sp, 56
	beq	$a0, $s6, .LBB131_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB131_22:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.d	$a0, $sp, 88
	beq	$a0, $s5, .LBB131_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB131_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit30
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	ldx.d	$s6, $s4, $a0
	beqz	$s6, .LBB131_52
# %bb.25:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i65
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB131_27
# %bb.26:                               #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB131_28
	.p2align	4, , 16
.LBB131_27:                             #   in Loop: Header=BB131_4 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB131_28:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit68
                                        #   in Loop: Header=BB131_4 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 35
	move	$a0, $fp
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	ldx.d	$s6, $s4, $a0
	beqz	$s6, .LBB131_52
# %bb.29:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i70
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB131_31
# %bb.30:                               #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB131_32
	.p2align	4, , 16
.LBB131_31:                             #   in Loop: Header=BB131_4 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.LBB131_32:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit73
                                        #   in Loop: Header=BB131_4 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ldptr.d	$a0, $s0, 2312
	ldptr.d	$a1, $s0, 2320
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	mul.d	$a1, $a1, $s7
	add.d	$a1, $s3, $a1
	beqz	$a1, .LBB131_34
# %bb.33:                               #   in Loop: Header=BB131_4 Depth=1
	ldptr.d	$a0, $s0, 2336
	slli.d	$a1, $a1, 3
	ldx.d	$a0, $a0, $a1
	b	.LBB131_35
	.p2align	4, , 16
.LBB131_34:                             #   in Loop: Header=BB131_4 Depth=1
	add.d	$a0, $a0, $s8
.LBB131_35:                             # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EEixEm.exit32
                                        #   in Loop: Header=BB131_4 Depth=1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP8Whenthen13list_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	ldx.d	$s6, $s4, $a0
	beqz	$s6, .LBB131_52
# %bb.36:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i75
                                        #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB131_2
# %bb.37:                               #   in Loop: Header=BB131_4 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB131_3
.LBB131_38:                             # %.loopexit
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB131_39:
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB131_52
# %bb.40:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB131_42
# %bb.41:
	ld.bu	$a0, $s0, 67
	b	.LBB131_43
.LBB131_42:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB131_43:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.232)
	addi.d	$a1, $a0, %pc_lo12(.L.str.232)
	ori	$a2, $zero, 44
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB131_52
# %bb.44:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i40
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB131_46
# %bb.45:
	ld.bu	$a0, $s0, 67
	b	.LBB131_47
.LBB131_46:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB131_47:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit43
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$fp, $a1, 240
	beqz	$fp, .LBB131_52
# %bb.48:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i45
	ld.bu	$a1, $fp, 56
	beqz	$a1, .LBB131_50
# %bb.49:
	ld.bu	$a1, $fp, 67
	b	.LBB131_51
.LBB131_50:
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s0
.LBB131_51:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit48
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	pcaddu18i	$t8, %call36(_ZNSo5flushEv)
	jr	$t8
.LBB131_52:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB131_53:
.Ltmp3283:
	ld.d	$a2, $sp, 56
	move	$fp, $a0
	bne	$a2, $s6, .LBB131_56
# %bb.54:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	bne	$a0, $a1, .LBB131_57
.LBB131_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB131_56:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB131_55
.LBB131_57:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end131:
	.size	_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end131-_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table131:
.Lexception75:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end75-.Lcst_begin75
.Lcst_begin75:
	.uleb128 .Lfunc_begin75-.Lfunc_begin75  # >> Call Site 1 <<
	.uleb128 .Ltmp3281-.Lfunc_begin75       #   Call between .Lfunc_begin75 and .Ltmp3281
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3281-.Lfunc_begin75       # >> Call Site 2 <<
	.uleb128 .Ltmp3282-.Ltmp3281            #   Call between .Ltmp3281 and .Ltmp3282
	.uleb128 .Ltmp3283-.Lfunc_begin75       #     jumps to .Ltmp3283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3282-.Lfunc_begin75       # >> Call Site 3 <<
	.uleb128 .Lfunc_end131-.Ltmp3282        #   Call between .Ltmp3282 and .Lfunc_end131
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end75:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser19list_wt_cmdsf_startEv # -- Begin function _ZN2PP11PowerParser19list_wt_cmdsf_startEv
	.p2align	5
	.type	_ZN2PP11PowerParser19list_wt_cmdsf_startEv,@function
_ZN2PP11PowerParser19list_wt_cmdsf_startEv: # @_ZN2PP11PowerParser19list_wt_cmdsf_startEv
.Lfunc_begin76:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception76
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	ld.d	$a2, $a0, 1184
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	addi.d	$a0, $a0, 1176
.Ltmp3284:
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3285:
# %bb.1:                                # %.noexc4
	ld.wu	$a2, $fp, 1168
	addi.d	$a0, $fp, 1104
	ld.d	$a3, $fp, 1184
	ld.d	$a1, $fp, 1176
	andi	$a2, $a2, 3
	sltui	$a2, $a2, 1
	masknez	$a3, $a3, $a2
.Ltmp3286:
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm)
	jirl	$ra, $ra, 0
.Ltmp3287:
# %bb.2:                                # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB132_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB132_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$a1, $fp, 1080
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP11PowerParser16list_wt_cmdsf_ssERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	st.w	$zero, $fp, 1072
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB132_5:
.Ltmp3288:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s0, .LBB132_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB132_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end132:
	.size	_ZN2PP11PowerParser19list_wt_cmdsf_startEv, .Lfunc_end132-_ZN2PP11PowerParser19list_wt_cmdsf_startEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table132:
.Lexception76:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end76-.Lcst_begin76
.Lcst_begin76:
	.uleb128 .Ltmp3284-.Lfunc_begin76       # >> Call Site 1 <<
	.uleb128 .Ltmp3287-.Ltmp3284            #   Call between .Ltmp3284 and .Ltmp3287
	.uleb128 .Ltmp3288-.Lfunc_begin76       #     jumps to .Ltmp3288
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3287-.Lfunc_begin76       # >> Call Site 2 <<
	.uleb128 .Lfunc_end132-.Ltmp3287        #   Call between .Ltmp3287 and .Lfunc_end132
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end76:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser15get_ssfout_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP11PowerParser15get_ssfout_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP11PowerParser15get_ssfout_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParser15get_ssfout_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP11PowerParser15get_ssfout_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin77:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception77
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	move	$s2, $a0
	ld.d	$a0, $a0, 1144
	addi.d	$s1, $sp, 24
	st.d	$s1, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beqz	$a0, .LBB133_3
# %bb.1:
	ld.d	$a1, $s2, 1128
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB133_3
# %bb.2:
	ld.d	$a3, $s2, 1136
	sub.d	$a4, $a0, $a3
.Ltmp3289:
	addi.d	$a0, $sp, 8
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3290:
	b	.LBB133_4
.LBB133_3:
	addi.d	$a1, $s2, 1176
.Ltmp3291:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp3292:
.LBB133_4:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a2, $s0, 8
.Ltmp3294:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3295:
# %bb.5:                                # %.noexc
	ld.w	$s3, $sp, 16
	ld.w	$fp, $s2, 1072
	bge	$fp, $s3, .LBB133_16
# %bb.6:                                # %.preheader.i
	st.d	$s2, $sp, 0                     # 8-byte Folded Spill
	addi.d	$s6, $s0, 16
	addi.d	$s5, $fp, 1
	ori	$s7, $zero, 13
	ori	$s8, $zero, 10
	move	$s4, $fp
	b	.LBB133_9
	.p2align	4, , 16
.LBB133_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit.i
                                        #   in Loop: Header=BB133_9 Depth=1
	stx.b	$s2, $a0, $s1
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s1, 1
	st.d	$a1, $s0, 8
	stx.b	$zero, $a0, $a1
.LBB133_8:                              #   in Loop: Header=BB133_9 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s5, $s5, 1
	beq	$s3, $s4, .LBB133_14
.LBB133_9:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $sp, 8
	ldx.bu	$s2, $a0, $s4
	beq	$s2, $s7, .LBB133_8
# %bb.10:                               #   in Loop: Header=BB133_9 Depth=1
	beq	$s2, $s8, .LBB133_15
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i
                                        #   in Loop: Header=BB133_9 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s6, 0
	ld.d	$s1, $s0, 8
	xor	$a2, $a0, $s6
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	ori	$a3, $zero, 15
	maskeqz	$a2, $a3, $a2
	or	$a1, $a2, $a1
	bltu	$s1, $a1, .LBB133_7
# %bb.12:                               #   in Loop: Header=BB133_9 Depth=1
.Ltmp3297:
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp3298:
# %bb.13:                               # %.noexc4
                                        #   in Loop: Header=BB133_9 Depth=1
	ld.d	$a0, $s0, 0
	b	.LBB133_7
.LBB133_14:
	move	$s5, $s3
.LBB133_15:                             # %.sink.split.i
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	st.w	$s5, $a0, 1072
	addi.d	$s1, $sp, 24
.LBB133_16:                             # %_ZN2PP11PowerParser20get_line_from_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_Ri.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s1, .LBB133_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i5
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB133_18:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit7
	slt	$a0, $fp, $s3
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB133_19:                             # %.loopexit.split-lp
.Ltmp3296:
	b	.LBB133_23
.LBB133_20:
.Ltmp3293:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s1, .LBB133_26
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB133_25
.LBB133_22:                             # %.loopexit
.Ltmp3299:
.LBB133_23:
	move	$fp, $a0
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB133_26
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
.LBB133_25:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB133_26:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end133:
	.size	_ZN2PP11PowerParser15get_ssfout_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end133-_ZN2PP11PowerParser15get_ssfout_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table133:
.Lexception77:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end77-.Lcst_begin77
.Lcst_begin77:
	.uleb128 .Ltmp3289-.Lfunc_begin77       # >> Call Site 1 <<
	.uleb128 .Ltmp3292-.Ltmp3289            #   Call between .Ltmp3289 and .Ltmp3292
	.uleb128 .Ltmp3293-.Lfunc_begin77       #     jumps to .Ltmp3293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3294-.Lfunc_begin77       # >> Call Site 2 <<
	.uleb128 .Ltmp3295-.Ltmp3294            #   Call between .Ltmp3294 and .Ltmp3295
	.uleb128 .Ltmp3296-.Lfunc_begin77       #     jumps to .Ltmp3296
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3297-.Lfunc_begin77       # >> Call Site 3 <<
	.uleb128 .Ltmp3298-.Ltmp3297            #   Call between .Ltmp3297 and .Ltmp3298
	.uleb128 .Ltmp3299-.Lfunc_begin77       #     jumps to .Ltmp3299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3298-.Lfunc_begin77       # >> Call Site 4 <<
	.uleb128 .Lfunc_end133-.Ltmp3298        #   Call between .Ltmp3298 and .Lfunc_end133
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end77:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13chars_to_vstrEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii # -- Begin function _ZN2PP11PowerParser13chars_to_vstrEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii
	.p2align	5
	.type	_ZN2PP11PowerParser13chars_to_vstrEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii,@function
_ZN2PP11PowerParser13chars_to_vstrEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii: # @_ZN2PP11PowerParser13chars_to_vstrEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii
.Lfunc_begin78:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception78
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	move	$a0, $a4
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	blez	$s0, .LBB134_36
# %bb.1:                                # %.lr.ph70
	move	$s7, $zero
	addi.d	$s6, $sp, 32
	bstrpick.d	$a0, $fp, 31, 0
	addi.d	$s8, $a0, -1
	ori	$s2, $zero, 32
	b	.LBB134_3
	.p2align	4, , 16
.LBB134_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB134_3 Depth=1
	addi.d	$s7, $s7, 1
	beq	$s7, $s0, .LBB134_36
.LBB134_3:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB134_6 Depth 2
                                        #     Child Loop BB134_18 Depth 2
	blez	$fp, .LBB134_5
# %bb.4:                                # %.lr.ph.preheader
                                        #   in Loop: Header=BB134_3 Depth=1
	mul.d	$a0, $fp, $s7
	add.w	$a1, $fp, $a0
	addi.w	$a2, $a0, 1
	slt	$a3, $a2, $a1
	masknez	$a2, $a2, $a3
	maskeqz	$a1, $a1, $a3
	or	$a1, $a1, $a2
	sub.d	$a1, $a0, $a1
	nor	$a1, $a1, $zero
	bstrpick.d	$a1, $a1, 31, 0
	addi.d	$a2, $a1, 1
	addi.w	$a0, $a0, 0
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	add.d	$a1, $a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB134_5:                              # %.preheader.preheader
                                        #   in Loop: Header=BB134_3 Depth=1
	move	$a0, $fp
	move	$a1, $s8
	.p2align	4, , 16
.LBB134_6:                              # %.preheader
                                        #   Parent Loop BB134_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	blez	$a0, .LBB134_9
# %bb.7:                                #   in Loop: Header=BB134_6 Depth=2
	ldx.bu	$a2, $s3, $a1
	addi.d	$a1, $a1, -1
	addi.w	$a0, $a0, -1
	beq	$a2, $s2, .LBB134_6
# %bb.8:                                # %._crit_edge83
                                        #   in Loop: Header=BB134_3 Depth=1
	addi.d	$s4, $a1, 2
	addi.w	$s5, $a0, 1
	b	.LBB134_10
	.p2align	4, , 16
.LBB134_9:                              #   in Loop: Header=BB134_3 Depth=1
	move	$s4, $fp
	move	$s5, $fp
.LBB134_10:                             # %split
                                        #   in Loop: Header=BB134_3 Depth=1
	st.d	$s6, $sp, 16
	st.d	$s4, $sp, 48
	move	$a0, $s6
	ori	$a1, $zero, 16
	bltu	$s5, $a1, .LBB134_12
# %bb.11:                               # %.noexc.i
                                        #   in Loop: Header=BB134_3 Depth=1
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB134_12:                             # %._crit_edge.i.i
                                        #   in Loop: Header=BB134_3 Depth=1
	beqz	$s5, .LBB134_16
# %bb.13:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB134_3 Depth=1
	ori	$a1, $zero, 1
	bne	$s5, $a1, .LBB134_15
# %bb.14:                               #   in Loop: Header=BB134_3 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB134_16
	.p2align	4, , 16
.LBB134_15:                             #   in Loop: Header=BB134_3 Depth=1
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB134_16:                             #   in Loop: Header=BB134_3 Depth=1
	ld.d	$a0, $sp, 48
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 24
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 24
	addi.w	$a1, $a0, 0
	blez	$a1, .LBB134_24
# %bb.17:                               # %.lr.ph68
                                        #   in Loop: Header=BB134_3 Depth=1
	ld.d	$a1, $sp, 16
	move	$a2, $zero
	bstrpick.d	$a3, $a0, 30, 0
	.p2align	4, , 16
.LBB134_18:                             #   Parent Loop BB134_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ldx.bu	$a4, $a1, $a2
	bne	$a4, $s2, .LBB134_20
# %bb.19:                               #   in Loop: Header=BB134_18 Depth=2
	addi.d	$a2, $a2, 1
	bne	$a3, $a2, .LBB134_18
	b	.LBB134_24
	.p2align	4, , 16
.LBB134_20:                             #   in Loop: Header=BB134_3 Depth=1
	beqz	$a2, .LBB134_24
# %bb.21:                               #   in Loop: Header=BB134_3 Depth=1
	bstrpick.d	$a2, $a2, 31, 0
	bne	$a0, $a2, .LBB134_23
# %bb.22:                               #   in Loop: Header=BB134_3 Depth=1
	st.d	$zero, $sp, 24
	st.b	$zero, $a1, 0
	b	.LBB134_24
.LBB134_23:                             #   in Loop: Header=BB134_3 Depth=1
.Ltmp3300:
	addi.d	$a0, $sp, 16
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm)
	jirl	$ra, $ra, 0
.Ltmp3301:
	.p2align	4, , 16
.LBB134_24:                             # %.thread
                                        #   in Loop: Header=BB134_3 Depth=1
	ld.d	$s4, $s1, 8
	ld.d	$a0, $s1, 16
	beq	$s4, $a0, .LBB134_31
# %bb.25:                               #   in Loop: Header=BB134_3 Depth=1
	addi.d	$a0, $s4, 16
	st.d	$a0, $s4, 0
	ld.d	$a1, $sp, 24
	ld.d	$s5, $sp, 16
	st.d	$a1, $sp, 48
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB134_28
# %bb.26:                               # %.noexc.i.i
                                        #   in Loop: Header=BB134_3 Depth=1
.Ltmp3303:
	addi.d	$a1, $sp, 48
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3304:
# %bb.27:                               # %.noexc48
                                        #   in Loop: Header=BB134_3 Depth=1
	st.d	$a0, $s4, 0
	ld.d	$a1, $sp, 48
	st.d	$a1, $s4, 16
.LBB134_28:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB134_3 Depth=1
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB134_34
# %bb.29:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB134_3 Depth=1
	bnez	$a1, .LBB134_33
# %bb.30:                               #   in Loop: Header=BB134_3 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB134_34
	.p2align	4, , 16
.LBB134_31:                             #   in Loop: Header=BB134_3 Depth=1
.Ltmp3305:
	addi.d	$a1, $sp, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp3306:
# %bb.32:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB134_3 Depth=1
	ld.d	$a0, $sp, 16
	bne	$a0, $s6, .LBB134_35
	b	.LBB134_2
	.p2align	4, , 16
.LBB134_33:                             #   in Loop: Header=BB134_3 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB134_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB134_3 Depth=1
	ld.d	$a0, $sp, 48
	st.d	$a0, $s4, 8
	ld.d	$a0, $s1, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $s1, 8
	ld.d	$a0, $sp, 16
	beq	$a0, $s6, .LBB134_2
.LBB134_35:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB134_3 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB134_2
.LBB134_36:                             # %._crit_edge
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB134_37:
.Ltmp3302:
	b	.LBB134_39
.LBB134_38:
.Ltmp3307:
.LBB134_39:
	move	$fp, $a0
	ld.d	$a0, $sp, 16
	beq	$a0, $s6, .LBB134_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i50
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB134_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit52
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end134:
	.size	_ZN2PP11PowerParser13chars_to_vstrEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii, .Lfunc_end134-_ZN2PP11PowerParser13chars_to_vstrEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table134:
.Lexception78:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end78-.Lcst_begin78
.Lcst_begin78:
	.uleb128 .Lfunc_begin78-.Lfunc_begin78  # >> Call Site 1 <<
	.uleb128 .Ltmp3300-.Lfunc_begin78       #   Call between .Lfunc_begin78 and .Ltmp3300
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3300-.Lfunc_begin78       # >> Call Site 2 <<
	.uleb128 .Ltmp3301-.Ltmp3300            #   Call between .Ltmp3300 and .Ltmp3301
	.uleb128 .Ltmp3302-.Lfunc_begin78       #     jumps to .Ltmp3302
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3303-.Lfunc_begin78       # >> Call Site 3 <<
	.uleb128 .Ltmp3306-.Ltmp3303            #   Call between .Ltmp3303 and .Ltmp3306
	.uleb128 .Ltmp3307-.Lfunc_begin78       #     jumps to .Ltmp3307
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3306-.Lfunc_begin78       # >> Call Site 4 <<
	.uleb128 .Lfunc_end134-.Ltmp3306        #   Call between .Ltmp3306 and .Lfunc_end134
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end78:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP11PowerParser13vstr_to_charsEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii # -- Begin function _ZN2PP11PowerParser13vstr_to_charsEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii
	.p2align	5
	.type	_ZN2PP11PowerParser13vstr_to_charsEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii,@function
_ZN2PP11PowerParser13vstr_to_charsEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii: # @_ZN2PP11PowerParser13vstr_to_charsEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.d	$a0, $a2, 8
	ld.d	$a2, $a2, 0
	sub.d	$a0, $a0, $a2
	srli.d	$a0, $a0, 5
	addi.w	$a0, $a0, 0
	blez	$a0, .LBB135_8
# %bb.1:                                # %.lr.ph40.preheader
	move	$s0, $a4
	move	$s1, $a1
	move	$a0, $zero
	move	$s2, $zero
	b	.LBB135_3
	.p2align	4, , 16
.LBB135_2:                              # %._crit_edge
                                        #   in Loop: Header=BB135_3 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a2, $fp, 0
	addi.d	$s2, $s2, 1
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 27
	srai.d	$a1, $a0, 32
	move	$a0, $s3
	bge	$s2, $a1, .LBB135_8
.LBB135_3:                              # %.lr.ph40
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB135_5 Depth 2
	slli.d	$a4, $s2, 5
	add.d	$a1, $a2, $a4
	ld.w	$a3, $a1, 8
	mul.d	$a2, $s0, $s2
	slt	$a1, $s0, $a3
	masknez	$a5, $a3, $a1
	maskeqz	$a1, $s0, $a1
	or	$a1, $a1, $a5
	add.w	$a5, $a1, $a2
	blez	$a1, .LBB135_6
# %bb.4:                                # %.lr.ph.preheader
                                        #   in Loop: Header=BB135_3 Depth=1
	move	$a6, $zero
	add.d	$a7, $s1, $a0
	.p2align	4, , 16
.LBB135_5:                              # %.lr.ph
                                        #   Parent Loop BB135_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$t0, $fp, 0
	ldx.d	$t0, $t0, $a4
	ldx.b	$t0, $t0, $a6
	stx.b	$t0, $a7, $a6
	addi.d	$a6, $a6, 1
	add.d	$t0, $a0, $a6
	blt	$t0, $a5, .LBB135_5
.LBB135_6:                              # %.preheader
                                        #   in Loop: Header=BB135_3 Depth=1
	add.w	$s3, $a0, $s0
	bge	$a3, $s0, .LBB135_2
# %bb.7:                                # %.lr.ph37.preheader
                                        #   in Loop: Header=BB135_3 Depth=1
	addi.d	$a3, $a0, 1
	nor	$a2, $a2, $zero
	add.d	$a0, $s1, $a5
	add.w	$a3, $a1, $a3
	slt	$a4, $a3, $s3
	masknez	$a3, $a3, $a4
	maskeqz	$a4, $s3, $a4
	or	$a3, $a4, $a3
	add.d	$a2, $a3, $a2
	sub.d	$a1, $a2, $a1
	bstrpick.d	$a1, $a1, 31, 0
	addi.d	$a2, $a1, 1
	ori	$a1, $zero, 32
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	b	.LBB135_2
.LBB135_8:                              # %._crit_edge41
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end135:
	.size	_ZN2PP11PowerParser13vstr_to_charsEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii, .Lfunc_end135-_ZN2PP11PowerParser13vstr_to_charsEPcRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EEii
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm
.Lfunc_begin79:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception79
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 4
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	addi.d	$s1, $a1, 3
	addi.w	$a1, $zero, -48
	st.d	$s1, $fp, 8
	bgeu	$s0, $a1, .LBB136_5
# %bb.1:                                # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_allocate_mapEm.exit
	addi.d	$s2, $a0, 1
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB136_2:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3308:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3309:
# %bb.3:                                # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB136_2 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB136_2
# %bb.4:                                # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_create_nodesEPPS5_S9_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 15
	slli.d	$a0, $a0, 5
	add.d	$a0, $a1, $a0
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB136_5:                              # %.noexc3.i
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB136_6:
.Ltmp3310:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB136_8
	.p2align	4, , 16
.LBB136_7:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB136_7
.LBB136_8:                              # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i
.Ltmp3311:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3312:
# %bb.9:
.LBB136_10:
.Ltmp3313:
	move	$s0, $a0
.Ltmp3314:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3315:
# %bb.11:                               # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp3317:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3318:
# %bb.12:
.LBB136_13:
.Ltmp3319:
	move	$fp, $a0
.Ltmp3320:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3321:
# %bb.14:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB136_15:
.Ltmp3322:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB136_16:
.Ltmp3316:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end136:
	.size	_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm, .Lfunc_end136-_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table136:
.Lexception79:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end79-.Lcst_begin79
.Lcst_begin79:
	.uleb128 .Lfunc_begin79-.Lfunc_begin79  # >> Call Site 1 <<
	.uleb128 .Ltmp3308-.Lfunc_begin79       #   Call between .Lfunc_begin79 and .Ltmp3308
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3308-.Lfunc_begin79       # >> Call Site 2 <<
	.uleb128 .Ltmp3309-.Ltmp3308            #   Call between .Ltmp3308 and .Ltmp3309
	.uleb128 .Ltmp3310-.Lfunc_begin79       #     jumps to .Ltmp3310
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3309-.Lfunc_begin79       # >> Call Site 3 <<
	.uleb128 .Ltmp3311-.Ltmp3309            #   Call between .Ltmp3309 and .Ltmp3311
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3311-.Lfunc_begin79       # >> Call Site 4 <<
	.uleb128 .Ltmp3312-.Ltmp3311            #   Call between .Ltmp3311 and .Ltmp3312
	.uleb128 .Ltmp3313-.Lfunc_begin79       #     jumps to .Ltmp3313
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3314-.Lfunc_begin79       # >> Call Site 5 <<
	.uleb128 .Ltmp3315-.Ltmp3314            #   Call between .Ltmp3314 and .Ltmp3315
	.uleb128 .Ltmp3316-.Lfunc_begin79       #     jumps to .Ltmp3316
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3315-.Lfunc_begin79       # >> Call Site 6 <<
	.uleb128 .Ltmp3317-.Ltmp3315            #   Call between .Ltmp3315 and .Ltmp3317
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3317-.Lfunc_begin79       # >> Call Site 7 <<
	.uleb128 .Ltmp3318-.Ltmp3317            #   Call between .Ltmp3317 and .Ltmp3318
	.uleb128 .Ltmp3319-.Lfunc_begin79       #     jumps to .Ltmp3319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3320-.Lfunc_begin79       # >> Call Site 8 <<
	.uleb128 .Ltmp3321-.Ltmp3320            #   Call between .Ltmp3320 and .Ltmp3321
	.uleb128 .Ltmp3322-.Lfunc_begin79       #     jumps to .Ltmp3322
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3321-.Lfunc_begin79       # >> Call Site 9 <<
	.uleb128 .Lfunc_end136-.Ltmp3321        #   Call between .Ltmp3321 and .Lfunc_end136
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end79:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm
.Lfunc_begin80:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception80
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.d	$a0, $a1, 3
	ori	$a2, $zero, 8
	sltu	$a3, $a2, $a0
	masknez	$a2, $a2, $a3
	maskeqz	$a3, $a0, $a3
	or	$s0, $a3, $a2
	srli.d	$a2, $a0, 60
	st.d	$s0, $fp, 8
	bnez	$a2, .LBB137_7
# %bb.1:                                # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE15_M_allocate_mapEm.exit
	addi.d	$s1, $a1, 1
	slli.d	$a0, $s0, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s0, $s1
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s0, $a0, $a1
	alsl.d	$s2, $s1, $s0, 3
                                        # implicit-def: $r4
                                        # implicit-def: $r5
	beqz	$s1, .LBB137_6
# %bb.2:                                # %.lr.ph.i.preheader
	move	$s1, $s0
	.p2align	4, , 16
.LBB137_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3323:
	ori	$a0, $zero, 432
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3324:
# %bb.4:                                # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB137_3 Depth=1
	st.d	$a0, $s1, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB137_3
# %bb.5:                                # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE15_M_create_nodesEPPS1_S5_.exit.loopexit
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, -8
.LBB137_6:                              # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE15_M_create_nodesEPPS1_S5_.exit
	st.d	$s0, $fp, 40
	st.d	$a1, $fp, 24
	addi.d	$a2, $a1, 432
	st.d	$a2, $fp, 32
	addi.d	$a2, $s2, -8
	st.d	$a2, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a2, $a0, 432
	st.d	$a2, $fp, 64
	st.d	$a1, $fp, 16
	st.d	$a0, $fp, 48
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB137_7:
	srli.d	$a0, $a0, 61
	beqz	$a0, .LBB137_9
# %bb.8:                                # %.noexc.i
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB137_9:                              # %.noexc3.i
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB137_10:
.Ltmp3325:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s0, $s1, .LBB137_12
	.p2align	4, , 16
.LBB137_11:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ori	$a1, $zero, 432
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 8
	bltu	$s0, $s1, .LBB137_11
.LBB137_12:                             # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
.Ltmp3326:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3327:
# %bb.13:
.LBB137_14:
.Ltmp3328:
	move	$s0, $a0
.Ltmp3329:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3330:
# %bb.15:                               # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp3332:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3333:
# %bb.16:
.LBB137_17:
.Ltmp3334:
	move	$fp, $a0
.Ltmp3335:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3336:
# %bb.18:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB137_19:
.Ltmp3337:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB137_20:
.Ltmp3331:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end137:
	.size	_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm, .Lfunc_end137-_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table137:
.Lexception80:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end80-.Lcst_begin80
.Lcst_begin80:
	.uleb128 .Lfunc_begin80-.Lfunc_begin80  # >> Call Site 1 <<
	.uleb128 .Ltmp3323-.Lfunc_begin80       #   Call between .Lfunc_begin80 and .Ltmp3323
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3323-.Lfunc_begin80       # >> Call Site 2 <<
	.uleb128 .Ltmp3324-.Ltmp3323            #   Call between .Ltmp3323 and .Ltmp3324
	.uleb128 .Ltmp3325-.Lfunc_begin80       #     jumps to .Ltmp3325
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3324-.Lfunc_begin80       # >> Call Site 3 <<
	.uleb128 .Ltmp3326-.Ltmp3324            #   Call between .Ltmp3324 and .Ltmp3326
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3326-.Lfunc_begin80       # >> Call Site 4 <<
	.uleb128 .Ltmp3327-.Ltmp3326            #   Call between .Ltmp3326 and .Ltmp3327
	.uleb128 .Ltmp3328-.Lfunc_begin80       #     jumps to .Ltmp3328
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3329-.Lfunc_begin80       # >> Call Site 5 <<
	.uleb128 .Ltmp3330-.Ltmp3329            #   Call between .Ltmp3329 and .Ltmp3330
	.uleb128 .Ltmp3331-.Lfunc_begin80       #     jumps to .Ltmp3331
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3330-.Lfunc_begin80       # >> Call Site 6 <<
	.uleb128 .Ltmp3332-.Ltmp3330            #   Call between .Ltmp3330 and .Ltmp3332
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3332-.Lfunc_begin80       # >> Call Site 7 <<
	.uleb128 .Ltmp3333-.Ltmp3332            #   Call between .Ltmp3332 and .Ltmp3333
	.uleb128 .Ltmp3334-.Lfunc_begin80       #     jumps to .Ltmp3334
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3335-.Lfunc_begin80       # >> Call Site 8 <<
	.uleb128 .Ltmp3336-.Ltmp3335            #   Call between .Ltmp3335 and .Ltmp3336
	.uleb128 .Ltmp3337-.Lfunc_begin80       #     jumps to .Ltmp3337
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3336-.Lfunc_begin80       # >> Call Site 9 <<
	.uleb128 .Lfunc_end137-.Ltmp3336        #   Call between .Ltmp3336 and .Lfunc_end137
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end80:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm
.Lfunc_begin81:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception81
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.d	$a0, $a1, 3
	ori	$a2, $zero, 8
	sltu	$a3, $a2, $a0
	masknez	$a2, $a2, $a3
	maskeqz	$a3, $a0, $a3
	or	$s0, $a3, $a2
	srli.d	$a2, $a0, 60
	st.d	$s0, $fp, 8
	bnez	$a2, .LBB138_7
# %bb.1:                                # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE15_M_allocate_mapEm.exit
	addi.d	$s1, $a1, 1
	slli.d	$a0, $s0, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s0, $s1
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s0, $a0, $a1
	alsl.d	$s2, $s1, $s0, 3
                                        # implicit-def: $r4
                                        # implicit-def: $r5
	beqz	$s1, .LBB138_6
# %bb.2:                                # %.lr.ph.i.preheader
	move	$s1, $s0
	.p2align	4, , 16
.LBB138_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3338:
	ori	$a0, $zero, 568
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3339:
# %bb.4:                                # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB138_3 Depth=1
	st.d	$a0, $s1, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB138_3
# %bb.5:                                # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE15_M_create_nodesEPPS1_S5_.exit.loopexit
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, -8
.LBB138_6:                              # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE15_M_create_nodesEPPS1_S5_.exit
	st.d	$s0, $fp, 40
	st.d	$a1, $fp, 24
	addi.d	$a2, $a1, 568
	st.d	$a2, $fp, 32
	addi.d	$a2, $s2, -8
	st.d	$a2, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a2, $a0, 568
	st.d	$a2, $fp, 64
	st.d	$a1, $fp, 16
	st.d	$a0, $fp, 48
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB138_7:
	srli.d	$a0, $a0, 61
	beqz	$a0, .LBB138_9
# %bb.8:                                # %.noexc.i
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB138_9:                              # %.noexc3.i
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB138_10:
.Ltmp3340:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s0, $s1, .LBB138_12
	.p2align	4, , 16
.LBB138_11:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ori	$a1, $zero, 568
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 8
	bltu	$s0, $s1, .LBB138_11
.LBB138_12:                             # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
.Ltmp3341:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3342:
# %bb.13:
.LBB138_14:
.Ltmp3343:
	move	$s0, $a0
.Ltmp3344:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3345:
# %bb.15:                               # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp3347:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3348:
# %bb.16:
.LBB138_17:
.Ltmp3349:
	move	$fp, $a0
.Ltmp3350:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3351:
# %bb.18:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB138_19:
.Ltmp3352:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB138_20:
.Ltmp3346:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end138:
	.size	_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm, .Lfunc_end138-_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table138:
.Lexception81:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end81-.Lcst_begin81
.Lcst_begin81:
	.uleb128 .Lfunc_begin81-.Lfunc_begin81  # >> Call Site 1 <<
	.uleb128 .Ltmp3338-.Lfunc_begin81       #   Call between .Lfunc_begin81 and .Ltmp3338
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3338-.Lfunc_begin81       # >> Call Site 2 <<
	.uleb128 .Ltmp3339-.Ltmp3338            #   Call between .Ltmp3338 and .Ltmp3339
	.uleb128 .Ltmp3340-.Lfunc_begin81       #     jumps to .Ltmp3340
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3339-.Lfunc_begin81       # >> Call Site 3 <<
	.uleb128 .Ltmp3341-.Ltmp3339            #   Call between .Ltmp3339 and .Ltmp3341
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3341-.Lfunc_begin81       # >> Call Site 4 <<
	.uleb128 .Ltmp3342-.Ltmp3341            #   Call between .Ltmp3341 and .Ltmp3342
	.uleb128 .Ltmp3343-.Lfunc_begin81       #     jumps to .Ltmp3343
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3344-.Lfunc_begin81       # >> Call Site 5 <<
	.uleb128 .Ltmp3345-.Ltmp3344            #   Call between .Ltmp3344 and .Ltmp3345
	.uleb128 .Ltmp3346-.Lfunc_begin81       #     jumps to .Ltmp3346
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3345-.Lfunc_begin81       # >> Call Site 6 <<
	.uleb128 .Ltmp3347-.Ltmp3345            #   Call between .Ltmp3345 and .Ltmp3347
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3347-.Lfunc_begin81       # >> Call Site 7 <<
	.uleb128 .Ltmp3348-.Ltmp3347            #   Call between .Ltmp3347 and .Ltmp3348
	.uleb128 .Ltmp3349-.Lfunc_begin81       #     jumps to .Ltmp3349
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3350-.Lfunc_begin81       # >> Call Site 8 <<
	.uleb128 .Ltmp3351-.Ltmp3350            #   Call between .Ltmp3350 and .Ltmp3351
	.uleb128 .Ltmp3352-.Lfunc_begin81       #     jumps to .Ltmp3352
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3351-.Lfunc_begin81       # >> Call Site 9 <<
	.uleb128 .Lfunc_end138-.Ltmp3351        #   Call between .Ltmp3351 and .Lfunc_end138
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end81:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm
.Lfunc_begin82:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception82
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.d	$a0, $a1, 3
	ori	$a2, $zero, 8
	sltu	$a3, $a2, $a0
	masknez	$a2, $a2, $a3
	maskeqz	$a3, $a0, $a3
	or	$s0, $a3, $a2
	srli.d	$a2, $a0, 60
	st.d	$s0, $fp, 8
	bnez	$a2, .LBB139_7
# %bb.1:                                # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE15_M_allocate_mapEm.exit
	addi.d	$s1, $a1, 1
	slli.d	$a0, $s0, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s0, $s1
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s0, $a0, $a1
	alsl.d	$s2, $s1, $s0, 3
                                        # implicit-def: $r4
                                        # implicit-def: $r5
	beqz	$s1, .LBB139_6
# %bb.2:                                # %.lr.ph.i.preheader
	move	$s1, $s0
	.p2align	4, , 16
.LBB139_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3353:
	ori	$a0, $zero, 520
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3354:
# %bb.4:                                # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB139_3 Depth=1
	st.d	$a0, $s1, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB139_3
# %bb.5:                                # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE15_M_create_nodesEPPS1_S5_.exit.loopexit
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, -8
.LBB139_6:                              # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE15_M_create_nodesEPPS1_S5_.exit
	st.d	$s0, $fp, 40
	st.d	$a1, $fp, 24
	addi.d	$a2, $a1, 520
	st.d	$a2, $fp, 32
	addi.d	$a2, $s2, -8
	st.d	$a2, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a2, $a0, 520
	st.d	$a2, $fp, 64
	st.d	$a1, $fp, 16
	st.d	$a0, $fp, 48
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB139_7:
	srli.d	$a0, $a0, 61
	beqz	$a0, .LBB139_9
# %bb.8:                                # %.noexc.i
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB139_9:                              # %.noexc3.i
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB139_10:
.Ltmp3355:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s0, $s1, .LBB139_12
	.p2align	4, , 16
.LBB139_11:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ori	$a1, $zero, 520
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 8
	bltu	$s0, $s1, .LBB139_11
.LBB139_12:                             # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
.Ltmp3356:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3357:
# %bb.13:
.LBB139_14:
.Ltmp3358:
	move	$s0, $a0
.Ltmp3359:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3360:
# %bb.15:                               # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp3362:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3363:
# %bb.16:
.LBB139_17:
.Ltmp3364:
	move	$fp, $a0
.Ltmp3365:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3366:
# %bb.18:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB139_19:
.Ltmp3367:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB139_20:
.Ltmp3361:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end139:
	.size	_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm, .Lfunc_end139-_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table139:
.Lexception82:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end82-.Lcst_begin82
.Lcst_begin82:
	.uleb128 .Lfunc_begin82-.Lfunc_begin82  # >> Call Site 1 <<
	.uleb128 .Ltmp3353-.Lfunc_begin82       #   Call between .Lfunc_begin82 and .Ltmp3353
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3353-.Lfunc_begin82       # >> Call Site 2 <<
	.uleb128 .Ltmp3354-.Ltmp3353            #   Call between .Ltmp3353 and .Ltmp3354
	.uleb128 .Ltmp3355-.Lfunc_begin82       #     jumps to .Ltmp3355
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3354-.Lfunc_begin82       # >> Call Site 3 <<
	.uleb128 .Ltmp3356-.Ltmp3354            #   Call between .Ltmp3354 and .Ltmp3356
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3356-.Lfunc_begin82       # >> Call Site 4 <<
	.uleb128 .Ltmp3357-.Ltmp3356            #   Call between .Ltmp3356 and .Ltmp3357
	.uleb128 .Ltmp3358-.Lfunc_begin82       #     jumps to .Ltmp3358
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3359-.Lfunc_begin82       # >> Call Site 5 <<
	.uleb128 .Ltmp3360-.Ltmp3359            #   Call between .Ltmp3359 and .Ltmp3360
	.uleb128 .Ltmp3361-.Lfunc_begin82       #     jumps to .Ltmp3361
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3360-.Lfunc_begin82       # >> Call Site 6 <<
	.uleb128 .Ltmp3362-.Ltmp3360            #   Call between .Ltmp3360 and .Ltmp3362
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3362-.Lfunc_begin82       # >> Call Site 7 <<
	.uleb128 .Ltmp3363-.Ltmp3362            #   Call between .Ltmp3362 and .Ltmp3363
	.uleb128 .Ltmp3364-.Lfunc_begin82       #     jumps to .Ltmp3364
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3365-.Lfunc_begin82       # >> Call Site 8 <<
	.uleb128 .Ltmp3366-.Ltmp3365            #   Call between .Ltmp3365 and .Ltmp3366
	.uleb128 .Ltmp3367-.Lfunc_begin82       #     jumps to .Ltmp3367
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3366-.Lfunc_begin82       # >> Call Site 9 <<
	.uleb128 .Lfunc_end139-.Ltmp3366        #   Call between .Ltmp3366 and .Lfunc_end139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end82:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm
.Lfunc_begin83:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception83
# %bb.0:                                # %_ZNSt11_Deque_baseIbSaIbEE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 9
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB140_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3368:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3369:
# %bb.2:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB140_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB140_1
# %bb.3:                                # %_ZNSt11_Deque_baseIbSaIbEE15_M_create_nodesEPPbS3_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 511
	add.d	$a0, $a1, $a0
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB140_4:
.Ltmp3370:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB140_6
	.p2align	4, , 16
.LBB140_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB140_5
.LBB140_6:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i
.Ltmp3371:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3372:
# %bb.7:
.LBB140_8:
.Ltmp3373:
	move	$s0, $a0
.Ltmp3374:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3375:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp3377:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3378:
# %bb.10:
.LBB140_11:
.Ltmp3379:
	move	$fp, $a0
.Ltmp3380:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3381:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB140_13:
.Ltmp3382:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB140_14:
.Ltmp3376:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end140:
	.size	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm, .Lfunc_end140-_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table140:
.Lexception83:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end83-.Lcst_begin83
.Lcst_begin83:
	.uleb128 .Lfunc_begin83-.Lfunc_begin83  # >> Call Site 1 <<
	.uleb128 .Ltmp3368-.Lfunc_begin83       #   Call between .Lfunc_begin83 and .Ltmp3368
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3368-.Lfunc_begin83       # >> Call Site 2 <<
	.uleb128 .Ltmp3369-.Ltmp3368            #   Call between .Ltmp3368 and .Ltmp3369
	.uleb128 .Ltmp3370-.Lfunc_begin83       #     jumps to .Ltmp3370
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3369-.Lfunc_begin83       # >> Call Site 3 <<
	.uleb128 .Ltmp3371-.Ltmp3369            #   Call between .Ltmp3369 and .Ltmp3371
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3371-.Lfunc_begin83       # >> Call Site 4 <<
	.uleb128 .Ltmp3372-.Ltmp3371            #   Call between .Ltmp3371 and .Ltmp3372
	.uleb128 .Ltmp3373-.Lfunc_begin83       #     jumps to .Ltmp3373
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3374-.Lfunc_begin83       # >> Call Site 5 <<
	.uleb128 .Ltmp3375-.Ltmp3374            #   Call between .Ltmp3374 and .Ltmp3375
	.uleb128 .Ltmp3376-.Lfunc_begin83       #     jumps to .Ltmp3376
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3375-.Lfunc_begin83       # >> Call Site 6 <<
	.uleb128 .Ltmp3377-.Ltmp3375            #   Call between .Ltmp3375 and .Ltmp3377
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3377-.Lfunc_begin83       # >> Call Site 7 <<
	.uleb128 .Ltmp3378-.Ltmp3377            #   Call between .Ltmp3377 and .Ltmp3378
	.uleb128 .Ltmp3379-.Lfunc_begin83       #     jumps to .Ltmp3379
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3380-.Lfunc_begin83       # >> Call Site 8 <<
	.uleb128 .Ltmp3381-.Ltmp3380            #   Call between .Ltmp3380 and .Ltmp3381
	.uleb128 .Ltmp3382-.Lfunc_begin83       #     jumps to .Ltmp3382
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3381-.Lfunc_begin83       # >> Call Site 9 <<
	.uleb128 .Lfunc_end140-.Ltmp3381        #   Call between .Ltmp3381 and .Lfunc_end140
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end83:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm
.Lfunc_begin84:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception84
# %bb.0:                                # %_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 7
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB141_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3383:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3384:
# %bb.2:                                # %_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB141_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB141_1
# %bb.3:                                # %_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 127
	alsl.d	$a0, $a0, $a1, 2
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB141_4:
.Ltmp3385:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB141_6
	.p2align	4, , 16
.LBB141_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB141_5
.LBB141_6:                              # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i
.Ltmp3386:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3387:
# %bb.7:
.LBB141_8:
.Ltmp3388:
	move	$s0, $a0
.Ltmp3389:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3390:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp3392:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3393:
# %bb.10:
.LBB141_11:
.Ltmp3394:
	move	$fp, $a0
.Ltmp3395:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3396:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB141_13:
.Ltmp3397:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB141_14:
.Ltmp3391:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end141:
	.size	_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm, .Lfunc_end141-_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table141:
.Lexception84:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end84-.Lcst_begin84
.Lcst_begin84:
	.uleb128 .Lfunc_begin84-.Lfunc_begin84  # >> Call Site 1 <<
	.uleb128 .Ltmp3383-.Lfunc_begin84       #   Call between .Lfunc_begin84 and .Ltmp3383
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3383-.Lfunc_begin84       # >> Call Site 2 <<
	.uleb128 .Ltmp3384-.Ltmp3383            #   Call between .Ltmp3383 and .Ltmp3384
	.uleb128 .Ltmp3385-.Lfunc_begin84       #     jumps to .Ltmp3385
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3384-.Lfunc_begin84       # >> Call Site 3 <<
	.uleb128 .Ltmp3386-.Ltmp3384            #   Call between .Ltmp3384 and .Ltmp3386
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3386-.Lfunc_begin84       # >> Call Site 4 <<
	.uleb128 .Ltmp3387-.Ltmp3386            #   Call between .Ltmp3386 and .Ltmp3387
	.uleb128 .Ltmp3388-.Lfunc_begin84       #     jumps to .Ltmp3388
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3389-.Lfunc_begin84       # >> Call Site 5 <<
	.uleb128 .Ltmp3390-.Ltmp3389            #   Call between .Ltmp3389 and .Ltmp3390
	.uleb128 .Ltmp3391-.Lfunc_begin84       #     jumps to .Ltmp3391
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3390-.Lfunc_begin84       # >> Call Site 6 <<
	.uleb128 .Ltmp3392-.Ltmp3390            #   Call between .Ltmp3390 and .Ltmp3392
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3392-.Lfunc_begin84       # >> Call Site 7 <<
	.uleb128 .Ltmp3393-.Ltmp3392            #   Call between .Ltmp3392 and .Ltmp3393
	.uleb128 .Ltmp3394-.Lfunc_begin84       #     jumps to .Ltmp3394
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3395-.Lfunc_begin84       # >> Call Site 8 <<
	.uleb128 .Ltmp3396-.Ltmp3395            #   Call between .Ltmp3395 and .Ltmp3396
	.uleb128 .Ltmp3397-.Lfunc_begin84       #     jumps to .Ltmp3397
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3396-.Lfunc_begin84       # >> Call Site 9 <<
	.uleb128 .Lfunc_end141-.Ltmp3396        #   Call between .Ltmp3396 and .Lfunc_end141
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end84:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB142_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB142_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB142_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB142_4:                              # %._crit_edge
	ret
.Lfunc_end142:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E, .Lfunc_end142-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a1
	ld.d	$a0, $a1, 136
	addi.d	$a1, $a1, 152
	beq	$a0, $a1, .LBB143_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB143_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
	ld.d	$a0, $fp, 104
	addi.d	$a1, $fp, 120
	beq	$a0, $a1, .LBB143_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB143_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a1, $fp, 80
	beq	$a0, $a1, .LBB143_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB143_6:                              # %_ZN2PP8FunctionD2Ev.exit.i.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB143_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB143_8:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISA_E.exit
	ori	$a1, $zero, 168
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end143:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E, .Lfunc_end143-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E,"axG",@progbits,_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E,comdat
	.weak	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E # -- Begin function _ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
	.p2align	5
	.type	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E,@function
_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E: # @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB144_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	b	.LBB144_3
	.p2align	4, , 16
.LBB144_2:                              # %_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E.exit
                                        #   in Loop: Header=BB144_3 Depth=1
	ori	$a1, $zero, 72
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	beqz	$s1, .LBB144_5
.LBB144_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	ld.d	$s1, $s0, 16
	addi.d	$a1, $s0, 56
	beq	$a0, $a1, .LBB144_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB144_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB144_2
.LBB144_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB144_6:                              # %._crit_edge
	ret
.Lfunc_end144:
	.size	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, .Lfunc_end144-_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB145_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB145_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	addi.d	$a0, $s0, 32
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 200
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB145_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB145_4:                              # %._crit_edge
	ret
.Lfunc_end145:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E, .Lfunc_end145-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,"axG",@progbits,_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,comdat
	.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev # -- Begin function _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.p2align	5
	.type	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,@function
_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev: # @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 136
	addi.d	$a1, $fp, 152
	beq	$a0, $a1, .LBB146_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB146_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $fp, 104
	beqz	$a0, .LBB146_4
# %bb.3:
	ld.d	$a1, $fp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB146_4:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	ld.d	$a0, $fp, 64
	ld.d	$s0, $fp, 72
	beq	$a0, $s0, .LBB146_10
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB146_7
	.p2align	4, , 16
.LBB146_6:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB146_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB146_9
.LBB146_7:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB146_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB146_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB146_6
.LBB146_9:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 64
.LBB146_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB146_12
# %bb.11:
	ld.d	$a1, $fp, 80
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB146_12:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB146_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB146_14:                             # %_ZN2PP8VariableD2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB146_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB146_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end146:
	.size	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev, .Lfunc_end146-_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,@function
_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev:     # @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev
.Lfunc_begin85:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception85
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	vld	$vr0, $a0, 16
	vld	$vr1, $a0, 32
	vld	$vr2, $a0, 48
	vld	$vr3, $a0, 64
	vst	$vr0, $sp, 32
	vst	$vr1, $sp, 48
	vst	$vr2, $sp, 0
	vst	$vr3, $sp, 16
.Ltmp3398:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp3399:
# %bb.1:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB147_7
# %bb.2:
	ld.d	$s0, $fp, 72
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB147_6
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB147_4:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB147_4
# %bb.5:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i
	ld.d	$a0, $fp, 0
.LBB147_6:                              # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
	ld.d	$a1, $fp, 8
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB147_7:                              # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev.exit
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB147_8:
.Ltmp3400:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end147:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev, .Lfunc_end147-_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table147:
.Lexception85:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end85-.Lcst_begin85
.Lcst_begin85:
	.uleb128 .Ltmp3398-.Lfunc_begin85       # >> Call Site 1 <<
	.uleb128 .Ltmp3399-.Ltmp3398            #   Call between .Ltmp3398 and .Ltmp3399
	.uleb128 .Ltmp3400-.Lfunc_begin85       #     jumps to .Ltmp3400
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3399-.Lfunc_begin85       # >> Call Site 2 <<
	.uleb128 .Lfunc_end147-.Ltmp3399        #   Call between .Ltmp3399 and .Lfunc_end147
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end85:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev,"axG",@progbits,_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev,comdat
	.weak	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev # -- Begin function _ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev,@function
_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev: # @_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB148_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB148_5
# %bb.2:                                # %.lr.ph.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB148_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB148_3
# %bb.4:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB148_5:                              # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB148_6:
	ret
.Lfunc_end148:
	.size	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev, .Lfunc_end148-_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	ld.d	$a1, $a1, 24
	ld.d	$a0, $a2, 24
	addi.d	$s2, $a1, 8
	bgeu	$s2, $a0, .LBB149_3
	.p2align	4, , 16
.LBB149_1:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s1, $s2, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s1, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s1, 256
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s1, 384
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 24
	addi.d	$s2, $s2, 8
	bltu	$s2, $a0, .LBB149_1
# %bb.2:                                # %._crit_edge.loopexit
	ld.d	$a1, $s0, 24
.LBB149_3:                              # %._crit_edge
	ld.d	$s1, $s0, 0
	beq	$a1, $a0, .LBB149_8
# %bb.4:
	ld.d	$s0, $s0, 16
	beq	$s1, $s0, .LBB149_6
	.p2align	4, , 16
.LBB149_5:                              # %.lr.ph.i6
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s0, .LBB149_5
.LBB149_6:                              # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit9
	ld.d	$s0, $fp, 8
	ld.d	$fp, $fp, 0
	beq	$s0, $fp, .LBB149_10
	.p2align	4, , 16
.LBB149_7:                              # %.lr.ph.i11
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 128
	bne	$s0, $fp, .LBB149_7
	b	.LBB149_10
.LBB149_8:
	ld.d	$fp, $fp, 0
	beq	$s1, $fp, .LBB149_10
	.p2align	4, , 16
.LBB149_9:                              # %.lr.ph.i16
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $fp, .LBB149_9
.LBB149_10:                             # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit14
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end149:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_, .Lfunc_end149-_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_: # @_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_
.Lfunc_begin86:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception86
# %bb.0:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EEC2ERKS2_m.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a1
	ld.d	$a1, $a1, 72
	ld.d	$a2, $s1, 40
	move	$fp, $a0
	sub.d	$a0, $a1, $a2
	srai.d	$a0, $a0, 3
	sltu	$a1, $zero, $a1
	ld.d	$a2, $s1, 48
	ld.d	$a3, $s1, 56
	sub.d	$a0, $a0, $a1
	ld.d	$a1, $s1, 32
	ld.d	$a4, $s1, 16
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srai.d	$a1, $a1, 7
	add.d	$s0, $a0, $a1
	ori	$a2, $zero, 80
	move	$a0, $fp
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	ld.d	$s0, $s1, 16
	ld.d	$s2, $s1, 32
	ld.d	$s3, $s1, 40
	ld.d	$s1, $s1, 48
	ld.d	$a0, $fp, 16
	ld.d	$a1, $fp, 24
	ld.d	$a2, $fp, 32
	ld.d	$a3, $fp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 16
	st.d	$a2, $sp, 24
	st.d	$a3, $sp, 32
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
	st.d	$a3, $sp, 64
	addi.d	$a1, $sp, 8
	st.d	$a1, $sp, 72
	bne	$s0, $s1, .LBB150_3
.LBB150_1:                              # %.loopexit
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
	.p2align	4, , 16
.LBB150_2:                              # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit.i.i.i
                                        #   in Loop: Header=BB150_3 Depth=1
	beq	$s0, $s1, .LBB150_1
.LBB150_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3401:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp3402:
# %bb.4:                                # %_ZSt10_ConstructIN2PP4WordEJRKS1_EEvPT_DpOT0_.exit.i.i.i
                                        #   in Loop: Header=BB150_3 Depth=1
	addi.d	$s0, $s0, 128
	bne	$s0, $s2, .LBB150_6
# %bb.5:                                #   in Loop: Header=BB150_3 Depth=1
	ld.d	$s0, $s3, 8
	addi.d	$s3, $s3, 8
	addi.d	$s2, $s0, 512
.LBB150_6:                              # %_ZNSt15_Deque_iteratorIN2PP4WordERKS1_PS2_EppEv.exit.i.i.i
                                        #   in Loop: Header=BB150_3 Depth=1
	ld.d	$a0, $sp, 8
	ld.d	$a1, $sp, 24
	addi.d	$a0, $a0, 128
	st.d	$a0, $sp, 8
	bne	$a0, $a1, .LBB150_2
# %bb.7:                                #   in Loop: Header=BB150_3 Depth=1
	ld.d	$a1, $sp, 32
	ld.d	$a0, $a1, 8
	addi.d	$a1, $a1, 8
	st.d	$a1, $sp, 32
	st.d	$a0, $sp, 16
	addi.d	$a1, $a0, 512
	st.d	$a1, $sp, 24
	st.d	$a0, $sp, 8
	b	.LBB150_2
.LBB150_8:                              # %.body
.Ltmp3403:
	move	$s0, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end150:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_, .Lfunc_end150-_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_,comdat
	.p2align	2, 0x0
GCC_except_table150:
.Lexception86:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end86-.Lcst_begin86
.Lcst_begin86:
	.uleb128 .Lfunc_begin86-.Lfunc_begin86  # >> Call Site 1 <<
	.uleb128 .Ltmp3401-.Lfunc_begin86       #   Call between .Lfunc_begin86 and .Ltmp3401
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3401-.Lfunc_begin86       # >> Call Site 2 <<
	.uleb128 .Ltmp3402-.Ltmp3401            #   Call between .Ltmp3401 and .Ltmp3402
	.uleb128 .Ltmp3403-.Lfunc_begin86       #     jumps to .Ltmp3403
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3402-.Lfunc_begin86       # >> Call Site 3 <<
	.uleb128 .Lfunc_end150-.Ltmp3402        #   Call between .Ltmp3402 and .Lfunc_end150
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end86:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
.Lfunc_begin87:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception87
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s1, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB151_2
# %bb.1:                                # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	b	.LBB151_3
.LBB151_2:
	move	$s0, $zero
.LBB151_3:
	st.d	$s0, $fp, 0
	st.d	$s0, $fp, 8
	add.d	$a0, $s0, $s2
	st.d	$a0, $fp, 16
	ld.d	$s2, $s1, 0
	ld.d	$s3, $s1, 8
	st.d	$s0, $sp, 16
	st.d	$s0, $sp, 0
	addi.d	$a0, $sp, 16
	st.d	$a0, $sp, 8
	beq	$s2, $s3, .LBB151_13
# %bb.4:                                # %.lr.ph.i.i.i.preheader
	ori	$s4, $zero, 16
	addi.w	$s5, $zero, -1
	b	.LBB151_7
	.p2align	4, , 16
.LBB151_5:                              #   in Loop: Header=BB151_7 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB151_6:                              #   in Loop: Header=BB151_7 Depth=1
	ld.d	$a0, $sp, 24
	ld.d	$a1, $sp, 16
	st.d	$a0, $s0, 8
	addi.d	$s2, $s2, 32
	addi.d	$s0, $a1, 32
	st.d	$s0, $sp, 16
	beq	$s2, $s3, .LBB151_13
.LBB151_7:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s2, 8
	ld.d	$s1, $s2, 0
	st.d	$a1, $sp, 24
	bltu	$a1, $s4, .LBB151_10
# %bb.8:                                # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB151_7 Depth=1
.Ltmp3404:
	addi.d	$a1, $sp, 24
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3405:
# %bb.9:                                # %.noexc.i.i.i
                                        #   in Loop: Header=BB151_7 Depth=1
	ld.d	$a1, $sp, 24
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB151_10:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB151_7 Depth=1
	beq	$a1, $s5, .LBB151_6
# %bb.11:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB151_7 Depth=1
	bnez	$a1, .LBB151_5
# %bb.12:                               #   in Loop: Header=BB151_7 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB151_6
.LBB151_13:                             # %.loopexit
	st.d	$s0, $fp, 8
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB151_14:                             # %.body
.Ltmp3406:
	move	$s0, $a0
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB151_16
# %bb.15:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB151_16:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end151:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_, .Lfunc_end151-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.p2align	2, 0x0
GCC_except_table151:
.Lexception87:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end87-.Lcst_begin87
.Lcst_begin87:
	.uleb128 .Lfunc_begin87-.Lfunc_begin87  # >> Call Site 1 <<
	.uleb128 .Ltmp3404-.Lfunc_begin87       #   Call between .Lfunc_begin87 and .Ltmp3404
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3404-.Lfunc_begin87       # >> Call Site 2 <<
	.uleb128 .Ltmp3405-.Ltmp3404            #   Call between .Ltmp3404 and .Ltmp3405
	.uleb128 .Ltmp3406-.Lfunc_begin87       #     jumps to .Ltmp3406
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3405-.Lfunc_begin87       # >> Call Site 3 <<
	.uleb128 .Lfunc_end151-.Ltmp3405        #   Call between .Ltmp3405 and .Lfunc_end151
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end87:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEEC2ERKS1_,"axG",@progbits,_ZNSt6vectorIbSaIbEEC2ERKS1_,comdat
	.weak	_ZNSt6vectorIbSaIbEEC2ERKS1_    # -- Begin function _ZNSt6vectorIbSaIbEEC2ERKS1_
	.p2align	5
	.type	_ZNSt6vectorIbSaIbEEC2ERKS1_,@function
_ZNSt6vectorIbSaIbEEC2ERKS1_:           # @_ZNSt6vectorIbSaIbEEC2ERKS1_
.Lfunc_begin88:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception88
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	st.d	$s7, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	st.d	$zero, $a0, 0
	st.w	$zero, $a0, 8
	st.d	$zero, $a0, 16
	st.w	$zero, $a0, 24
	ld.d	$s0, $a1, 0
	ld.d	$s4, $a1, 16
	ld.wu	$s5, $a1, 24
	sub.d	$s1, $s4, $s0
	alsl.d	$s6, $s1, $s5, 3
	st.d	$zero, $a0, 32
	beqz	$s6, .LBB152_12
# %bb.1:
	move	$s2, $a0
	addi.d	$a0, $s6, 63
	srli.d	$a0, $a0, 3
	addi.w	$s7, $zero, -8
	lu52i.d	$a1, $s7, 511
	and	$s3, $a0, $a1
.Ltmp3407:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3408:
# %bb.2:                                # %.noexc
	move	$fp, $a0
	add.d	$a0, $a0, $s3
	st.d	$a0, $s2, 32
	st.d	$fp, $s2, 0
	st.w	$zero, $s2, 8
	srai.d	$a0, $s6, 63
	srli.d	$a0, $a0, 58
	add.d	$a0, $s6, $a0
	srai.d	$a0, $a0, 6
	alsl.d	$a0, $a0, $fp, 3
	andi	$a1, $s6, 63
	bstrins.d	$s6, $zero, 62, 6
	lu52i.d	$a2, $zero, -2048
	sltu	$a2, $a2, $s6
	maskeqz	$a2, $s7, $a2
	add.d	$a0, $a0, $a2
	st.d	$a0, $s2, 16
	st.w	$a1, $s2, 24
	ori	$a0, $zero, 9
	blt	$s1, $a0, .LBB152_13
.LBB152_3:
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	add.d	$fp, $fp, $s1
.LBB152_4:                              # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	beqz	$s5, .LBB152_11
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	move	$a1, $zero
	move	$a3, $zero
	ori	$a0, $zero, 1
	addi.w	$a2, $s5, 0
	move	$a4, $s4
	.p2align	4, , 16
.LBB152_6:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a5, $a4, 0
	srl.d	$a5, $a5, $a3
	andi	$a6, $a5, 1
	sll.d	$a5, $a0, $a1
	beqz	$a6, .LBB152_8
# %bb.7:                                #   in Loop: Header=BB152_6 Depth=1
	ld.d	$a6, $fp, 0
	or	$a5, $a6, $a5
	b	.LBB152_9
	.p2align	4, , 16
.LBB152_8:                              #   in Loop: Header=BB152_6 Depth=1
	ld.d	$a6, $fp, 0
	andn	$a5, $a6, $a5
.LBB152_9:                              # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i
                                        #   in Loop: Header=BB152_6 Depth=1
	st.d	$a5, $fp, 0
	addi.w	$a5, $a1, 1
	addi.d	$a1, $a1, -63
	sltui	$a6, $a1, 1
	masknez	$a1, $a5, $a6
	alsl.d	$fp, $a6, $fp, 3
	addi.w	$a5, $a3, 1
	addi.d	$a3, $a3, -63
	sltui	$a6, $a3, 1
	masknez	$a3, $a5, $a6
	alsl.d	$a4, $a6, $a4, 3
	bne	$a3, $a2, .LBB152_6
# %bb.10:                               # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i
                                        #   in Loop: Header=BB152_6 Depth=1
	bne	$a4, $s4, .LBB152_6
.LBB152_11:                             # %._crit_edge.loopexit.i.i.i
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB152_12:
	move	$fp, $zero
	ori	$a0, $zero, 9
	bge	$s1, $a0, .LBB152_3
.LBB152_13:
	ori	$a0, $zero, 8
	bne	$s1, $a0, .LBB152_4
# %bb.14:
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 0
	addi.d	$fp, $fp, 8
	b	.LBB152_4
.LBB152_15:
.Ltmp3409:
	move	$fp, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt13_Bvector_baseISaIbEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end152:
	.size	_ZNSt6vectorIbSaIbEEC2ERKS1_, .Lfunc_end152-_ZNSt6vectorIbSaIbEEC2ERKS1_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIbSaIbEEC2ERKS1_,"aG",@progbits,_ZNSt6vectorIbSaIbEEC2ERKS1_,comdat
	.p2align	2, 0x0
GCC_except_table152:
.Lexception88:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end88-.Lcst_begin88
.Lcst_begin88:
	.uleb128 .Ltmp3407-.Lfunc_begin88       # >> Call Site 1 <<
	.uleb128 .Ltmp3408-.Ltmp3407            #   Call between .Ltmp3407 and .Ltmp3408
	.uleb128 .Ltmp3409-.Lfunc_begin88       #     jumps to .Ltmp3409
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3408-.Lfunc_begin88       # >> Call Site 2 <<
	.uleb128 .Lfunc_end152-.Ltmp3408        #   Call between .Ltmp3408 and .Lfunc_end152
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end88:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm
.Lfunc_begin89:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception89
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 2
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	addi.d	$s1, $a1, 3
	addi.w	$a1, $zero, -12
	lu52i.d	$a2, $a1, 1023
	st.d	$s1, $fp, 8
	bgeu	$s0, $a2, .LBB153_5
# %bb.1:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE15_M_allocate_mapEm.exit
	addi.d	$s2, $a0, 1
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB153_2:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3410:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp3411:
# %bb.3:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB153_2 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB153_2
# %bb.4:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE15_M_create_nodesEPPS1_S5_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 3
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB153_5:
	lu52i.d	$a0, $a1, 2047
	bltu	$s0, $a0, .LBB153_7
# %bb.6:                                # %.noexc.i
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB153_7:                              # %.noexc3.i
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB153_8:
.Ltmp3412:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB153_10
	.p2align	4, , 16
.LBB153_9:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB153_9
.LBB153_10:                             # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
.Ltmp3413:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3414:
# %bb.11:
.LBB153_12:
.Ltmp3415:
	move	$s0, $a0
.Ltmp3416:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3417:
# %bb.13:                               # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp3419:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3420:
# %bb.14:
.LBB153_15:
.Ltmp3421:
	move	$fp, $a0
.Ltmp3422:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3423:
# %bb.16:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB153_17:
.Ltmp3424:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB153_18:
.Ltmp3418:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end153:
	.size	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm, .Lfunc_end153-_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table153:
.Lexception89:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end89-.Lcst_begin89
.Lcst_begin89:
	.uleb128 .Lfunc_begin89-.Lfunc_begin89  # >> Call Site 1 <<
	.uleb128 .Ltmp3410-.Lfunc_begin89       #   Call between .Lfunc_begin89 and .Ltmp3410
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3410-.Lfunc_begin89       # >> Call Site 2 <<
	.uleb128 .Ltmp3411-.Ltmp3410            #   Call between .Ltmp3410 and .Ltmp3411
	.uleb128 .Ltmp3412-.Lfunc_begin89       #     jumps to .Ltmp3412
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3411-.Lfunc_begin89       # >> Call Site 3 <<
	.uleb128 .Ltmp3413-.Ltmp3411            #   Call between .Ltmp3411 and .Ltmp3413
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3413-.Lfunc_begin89       # >> Call Site 4 <<
	.uleb128 .Ltmp3414-.Ltmp3413            #   Call between .Ltmp3413 and .Ltmp3414
	.uleb128 .Ltmp3415-.Lfunc_begin89       #     jumps to .Ltmp3415
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3416-.Lfunc_begin89       # >> Call Site 5 <<
	.uleb128 .Ltmp3417-.Ltmp3416            #   Call between .Ltmp3416 and .Ltmp3417
	.uleb128 .Ltmp3418-.Lfunc_begin89       #     jumps to .Ltmp3418
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3417-.Lfunc_begin89       # >> Call Site 6 <<
	.uleb128 .Ltmp3419-.Ltmp3417            #   Call between .Ltmp3417 and .Ltmp3419
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3419-.Lfunc_begin89       # >> Call Site 7 <<
	.uleb128 .Ltmp3420-.Ltmp3419            #   Call between .Ltmp3419 and .Ltmp3420
	.uleb128 .Ltmp3421-.Lfunc_begin89       #     jumps to .Ltmp3421
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3422-.Lfunc_begin89       # >> Call Site 8 <<
	.uleb128 .Ltmp3423-.Ltmp3422            #   Call between .Ltmp3422 and .Ltmp3423
	.uleb128 .Ltmp3424-.Lfunc_begin89       #     jumps to .Ltmp3424
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3423-.Lfunc_begin89       # >> Call Site 9 <<
	.uleb128 .Lfunc_end153-.Ltmp3423        #   Call between .Ltmp3423 and .Lfunc_end153
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end89:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase17:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev,comdat
	.weak	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev,@function
_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev: # @_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a1, $a0, 32
	bnez	$a1, .LBB154_2
# %bb.1:                                # %_ZSt8_DestroyISt15_Deque_iteratorIN2PP4WordERS2_PS2_EEvT_S6_.exit
	ret
.LBB154_2:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$fp, $a0, 0
	ld.d	$s0, $a1, 0
	beq	$fp, $s0, .LBB154_7
# %bb.3:                                # %.lr.ph.i.preheader
	ld.d	$s1, $a0, 24
	ld.d	$s2, $a0, 16
	b	.LBB154_5
.LBB154_4:                              # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit.i
                                        #   in Loop: Header=BB154_5 Depth=1
	beq	$fp, $s0, .LBB154_7
.LBB154_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, 128
	bne	$fp, $s2, .LBB154_4
# %bb.6:                                #   in Loop: Header=BB154_5 Depth=1
	ld.d	$fp, $s1, 8
	addi.d	$s1, $s1, 8
	addi.d	$s2, $fp, 512
	b	.LBB154_4
.LBB154_7:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end154:
	.size	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev, .Lfunc_end154-_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP4WordERS2_PS2_EvED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.weak	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,@function
_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev: # @_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
.Lfunc_begin90:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception90
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB155_2
.LBB155_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB155_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp3425:
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_)
	jirl	$ra, $ra, 0
.Ltmp3426:
	b	.LBB155_1
.LBB155_3:
.Ltmp3427:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end155:
	.size	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev, .Lfunc_end155-_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table155:
.Lexception90:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end90-.Lcst_begin90
.Lcst_begin90:
	.uleb128 .Ltmp3425-.Lfunc_begin90       # >> Call Site 1 <<
	.uleb128 .Ltmp3426-.Ltmp3425            #   Call between .Ltmp3425 and .Ltmp3426
	.uleb128 .Ltmp3427-.Lfunc_begin90       #     jumps to .Ltmp3427
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3426-.Lfunc_begin90       # >> Call Site 2 <<
	.uleb128 .Lfunc_end155-.Ltmp3426        #   Call between .Ltmp3426 and .Lfunc_end155
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end90:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase18:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,"axG",@progbits,_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,comdat
	.weak	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ # -- Begin function _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.p2align	5
	.type	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,@function
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_: # @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB156_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	addi.d	$s0, $a0, 16
	b	.LBB156_3
	.p2align	4, , 16
.LBB156_2:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit
                                        #   in Loop: Header=BB156_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB156_5
.LBB156_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB156_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB156_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB156_2
.LBB156_5:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB156_6:                              # %._crit_edge
	ret
.Lfunc_end156:
	.size	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_, .Lfunc_end156-_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_
.Lfunc_begin91:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception91
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	beq	$a1, $a0, .LBB157_17
# %bb.1:
	ld.d	$s1, $a1, 8
	ld.d	$s2, $a1, 0
	ld.d	$a0, $fp, 16
	ld.d	$s3, $fp, 0
	sub.d	$s4, $s1, $s2
	srai.d	$a2, $s4, 5
	sub.d	$a0, $a0, $s3
	srai.d	$a0, $a0, 5
	bgeu	$a0, $a2, .LBB157_7
# %bb.2:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $s2
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 0
	ld.d	$s1, $fp, 8
	move	$s0, $a0
	beq	$a2, $s1, .LBB157_13
# %bb.3:                                # %.lr.ph.i.preheader
	addi.d	$s2, $a2, 16
	b	.LBB157_5
	.p2align	4, , 16
.LBB157_4:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB157_5 Depth=1
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB157_12
.LBB157_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB157_4
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB157_5 Depth=1
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB157_4
.LBB157_7:
	ld.d	$s0, $fp, 8
	sub.d	$s5, $s0, $s3
	srai.d	$a0, $s5, 5
	bgeu	$a0, $a2, .LBB157_18
# %bb.8:
	beq	$s0, $s3, .LBB157_22
# %bb.9:                                # %.lr.ph.i.i33.preheader
	move	$s0, $a1
	.p2align	4, , 16
.LBB157_10:                             # %.lr.ph.i.i33
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 32
	addi.d	$s5, $s5, -32
	addi.d	$s2, $s2, 32
	bnez	$s5, .LBB157_10
# %bb.11:                               # %_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_.exit.loopexit
	move	$a0, $s0
	ld.d	$s2, $s0, 0
	ld.d	$s0, $fp, 8
	ld.d	$a1, $fp, 0
	ld.d	$s1, $a0, 8
	sub.d	$a0, $s0, $a1
	b	.LBB157_23
.LBB157_12:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exitthread-pre-split
	ld.d	$a2, $fp, 0
.LBB157_13:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exit
	beqz	$a2, .LBB157_15
# %bb.14:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB157_15:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit
	st.d	$s0, $fp, 0
	add.d	$a0, $s0, $s4
	st.d	$a0, $fp, 16
.LBB157_16:                             # %_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_.exit
	ld.d	$a0, $fp, 0
	add.d	$a0, $a0, $s4
	st.d	$a0, $fp, 8
.LBB157_17:
	move	$a0, $fp
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB157_18:
	beq	$s2, $s1, .LBB157_33
# %bb.19:                               # %.lr.ph.i.i.preheader
	move	$s5, $s3
	.p2align	4, , 16
.LBB157_20:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 32
	addi.d	$s2, $s2, 32
	addi.d	$s5, $s5, 32
	bne	$s2, $s1, .LBB157_20
# %bb.21:                               # %_ZSt14__copy_move_a2ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_PS5_ET2_T0_T1_S9_.exit.loopexit.i
	ld.d	$s0, $fp, 8
	beq	$s5, $s0, .LBB157_16
	b	.LBB157_34
.LBB157_22:
	move	$a0, $zero
.LBB157_23:                             # %_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_.exit
	add.d	$s3, $s2, $a0
	st.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	addi.d	$a0, $sp, 24
	st.d	$a0, $sp, 16
	beq	$s3, $s1, .LBB157_16
# %bb.24:                               # %.lr.ph.i.i.i.preheader
	ori	$s5, $zero, 16
	addi.w	$s6, $zero, -1
	b	.LBB157_27
	.p2align	4, , 16
.LBB157_25:                             #   in Loop: Header=BB157_27 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB157_26:                             #   in Loop: Header=BB157_27 Depth=1
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 24
	st.d	$a0, $s0, 8
	addi.d	$s3, $s3, 32
	addi.d	$s0, $a1, 32
	st.d	$s0, $sp, 24
	beq	$s3, $s1, .LBB157_16
.LBB157_27:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s3, 8
	ld.d	$s2, $s3, 0
	st.d	$a1, $sp, 32
	bltu	$a1, $s5, .LBB157_30
# %bb.28:                               # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB157_27 Depth=1
.Ltmp3428:
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3429:
# %bb.29:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB157_27 Depth=1
	ld.d	$a1, $sp, 32
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB157_30:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB157_27 Depth=1
	beq	$a1, $s6, .LBB157_26
# %bb.31:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB157_27 Depth=1
	beqz	$a1, .LBB157_25
# %bb.32:                               #   in Loop: Header=BB157_27 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB157_26
.LBB157_33:
	move	$s5, $s3
	beq	$s5, $s0, .LBB157_16
.LBB157_34:                             # %.lr.ph.preheader.i
	addi.d	$s1, $s5, 16
	b	.LBB157_36
	.p2align	4, , 16
.LBB157_35:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i29
                                        #   in Loop: Header=BB157_36 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB157_16
.LBB157_36:                             # %.lr.ph.i27
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB157_35
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i28
                                        #   in Loop: Header=BB157_36 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB157_35
.LBB157_38:
.Ltmp3430:
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end157:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_, .Lfunc_end157-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,comdat
	.p2align	2, 0x0
GCC_except_table157:
.Lexception91:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end91-.Lcst_begin91
.Lcst_begin91:
	.uleb128 .Lfunc_begin91-.Lfunc_begin91  # >> Call Site 1 <<
	.uleb128 .Ltmp3428-.Lfunc_begin91       #   Call between .Lfunc_begin91 and .Ltmp3428
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3428-.Lfunc_begin91       # >> Call Site 2 <<
	.uleb128 .Ltmp3429-.Ltmp3428            #   Call between .Ltmp3428 and .Ltmp3429
	.uleb128 .Ltmp3430-.Lfunc_begin91       #     jumps to .Ltmp3430
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3429-.Lfunc_begin91       # >> Call Site 3 <<
	.uleb128 .Lfunc_end157-.Ltmp3429        #   Call between .Ltmp3429 and .Lfunc_end157
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end91:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIiSaIiEEaSERKS1_,"axG",@progbits,_ZNSt6vectorIiSaIiEEaSERKS1_,comdat
	.weak	_ZNSt6vectorIiSaIiEEaSERKS1_    # -- Begin function _ZNSt6vectorIiSaIiEEaSERKS1_
	.p2align	5
	.type	_ZNSt6vectorIiSaIiEEaSERKS1_,@function
_ZNSt6vectorIiSaIiEEaSERKS1_:           # @_ZNSt6vectorIiSaIiEEaSERKS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	beq	$a1, $a0, .LBB158_15
# %bb.1:
	ld.d	$a3, $a1, 8
	ld.d	$s1, $a1, 0
	ld.d	$a0, $fp, 16
	ld.d	$s2, $fp, 0
	sub.d	$s0, $a3, $s1
	srai.d	$a4, $s0, 2
	sub.d	$s3, $a0, $s2
	srai.d	$a0, $s3, 2
	bgeu	$a0, $a4, .LBB158_7
# %bb.2:                                # %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	blez	$s0, .LBB158_4
# %bb.3:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB158_4:                              # %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPimT_S9_.exit
	beqz	$s2, .LBB158_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB158_6:                              # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit
	st.d	$s4, $fp, 0
	add.d	$a0, $s4, $s0
	st.d	$a0, $fp, 16
	b	.LBB158_14
.LBB158_7:
	ld.d	$a0, $fp, 8
	sub.d	$a2, $a0, $s2
	srai.d	$a5, $a2, 2
	bgeu	$a5, $a4, .LBB158_12
# %bb.8:
	move	$s3, $a1
	ori	$a1, $zero, 5
	blt	$a2, $a1, .LBB158_16
# %bb.9:
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s3, 0
	ld.d	$a0, $fp, 8
	ld.d	$a1, $fp, 0
	ld.d	$a3, $s3, 8
	sub.d	$a1, $a0, $a1
.LBB158_10:                             # %_ZSt4copyIPiS0_ET0_T_S2_S1_.exit
	add.d	$a1, $s1, $a1
	sub.d	$a2, $a3, $a1
	blez	$a2, .LBB158_14
# %bb.11:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB158_14
.LBB158_12:
	ori	$a0, $zero, 5
	blt	$s0, $a0, .LBB158_18
# %bb.13:
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB158_14:                             # %_ZSt22__uninitialized_copy_aIPiS0_S0_iET1_T_T0_S1_RSaIT2_E.exit
	ld.d	$a0, $fp, 0
	add.d	$a0, $a0, $s0
	st.d	$a0, $fp, 8
.LBB158_15:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB158_16:
	ori	$a1, $zero, 4
	bne	$a2, $a1, .LBB158_20
# %bb.17:
	ld.w	$a2, $s1, 0
	st.w	$a2, $s2, 0
	b	.LBB158_10
.LBB158_18:
	ori	$a0, $zero, 4
	bne	$s0, $a0, .LBB158_14
# %bb.19:
	ld.w	$a0, $s1, 0
	st.w	$a0, $s2, 0
	b	.LBB158_14
.LBB158_20:
	move	$a1, $a2
	b	.LBB158_10
.Lfunc_end158:
	.size	_ZNSt6vectorIiSaIiEEaSERKS1_, .Lfunc_end158-_ZNSt6vectorIiSaIiEEaSERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_
.Lfunc_begin92:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception92
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a3
	move	$s1, $a2
	move	$fp, $a1
	beqz	$a1, .LBB159_3
# %bb.1:
	srli.d	$a0, $fp, 58
	bnez	$a0, .LBB159_15
# %bb.2:                                # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i
	slli.d	$a0, $fp, 5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	b	.LBB159_4
.LBB159_3:
	move	$s2, $zero
.LBB159_4:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
	st.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	addi.d	$a0, $sp, 24
	st.d	$a0, $sp, 16
	bne	$s1, $s0, .LBB159_6
.LBB159_5:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	move	$a0, $s2
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB159_6:                              # %.lr.ph.preheader.i.i.i
	ori	$s5, $zero, 16
	addi.w	$s6, $zero, -1
	move	$s3, $s2
	b	.LBB159_9
	.p2align	4, , 16
.LBB159_7:                              #   in Loop: Header=BB159_9 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB159_8:                              #   in Loop: Header=BB159_9 Depth=1
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 24
	st.d	$a0, $s3, 8
	addi.d	$s1, $s1, 32
	addi.d	$s3, $a1, 32
	st.d	$s3, $sp, 24
	beq	$s1, $s0, .LBB159_5
.LBB159_9:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s3, 16
	st.d	$a0, $s3, 0
	ld.d	$a1, $s1, 8
	ld.d	$s4, $s1, 0
	st.d	$a1, $sp, 32
	bltu	$a1, $s5, .LBB159_12
# %bb.10:                               # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB159_9 Depth=1
.Ltmp3431:
	addi.d	$a1, $sp, 32
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3432:
# %bb.11:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB159_9 Depth=1
	ld.d	$a1, $sp, 32
	st.d	$a0, $s3, 0
	st.d	$a1, $s3, 16
.LBB159_12:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB159_9 Depth=1
	beq	$a1, $s6, .LBB159_8
# %bb.13:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB159_9 Depth=1
	bnez	$a1, .LBB159_7
# %bb.14:                               #   in Loop: Header=BB159_9 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB159_8
.LBB159_15:
	srli.d	$a0, $fp, 59
	beqz	$a0, .LBB159_17
# %bb.16:
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB159_17:
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB159_18:                             # %.body
.Ltmp3433:
	move	$s0, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	beqz	$s2, .LBB159_20
# %bb.19:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i9
	slli.d	$a1, $fp, 5
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB159_20:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit10
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end159:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_, .Lfunc_end159-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,comdat
	.p2align	2, 0x0
GCC_except_table159:
.Lexception92:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end92-.Lcst_begin92
.Lcst_begin92:
	.uleb128 .Lfunc_begin92-.Lfunc_begin92  # >> Call Site 1 <<
	.uleb128 .Ltmp3431-.Lfunc_begin92       #   Call between .Lfunc_begin92 and .Ltmp3431
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3431-.Lfunc_begin92       # >> Call Site 2 <<
	.uleb128 .Ltmp3432-.Ltmp3431            #   Call between .Ltmp3431 and .Ltmp3432
	.uleb128 .Ltmp3433-.Lfunc_begin92       #     jumps to .Ltmp3433
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3432-.Lfunc_begin92       # >> Call Site 3 <<
	.uleb128 .Lfunc_end159-.Ltmp3432        #   Call between .Ltmp3432 and .Lfunc_end159
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end92:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP8FunctionC2ERKS0_,"axG",@progbits,_ZN2PP8FunctionC2ERKS0_,comdat
	.weak	_ZN2PP8FunctionC2ERKS0_         # -- Begin function _ZN2PP8FunctionC2ERKS0_
	.p2align	5
	.type	_ZN2PP8FunctionC2ERKS0_,@function
_ZN2PP8FunctionC2ERKS0_:                # @_ZN2PP8FunctionC2ERKS0_
.Lfunc_begin93:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception93
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	ld.d	$a1, $a1, 8
	ld.d	$s1, $s0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	move	$a0, $s4
	bltu	$a1, $a2, .LBB160_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB160_2:                              # %._crit_edge.i.i
	addi.w	$s5, $zero, -1
	beq	$a1, $s5, .LBB160_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB160_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB160_6
.LBB160_5:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB160_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	ld.d	$a0, $s0, 32
	st.d	$a0, $fp, 32
	addi.d	$s6, $fp, 56
	st.d	$s6, $fp, 40
	ld.d	$a1, $s0, 48
	ld.d	$s2, $s0, 40
	addi.d	$s1, $fp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	move	$a0, $s6
	bltu	$a1, $a2, .LBB160_9
# %bb.7:                                # %.noexc.i9
.Ltmp3434:
	addi.d	$a1, $sp, 0
	move	$a0, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3435:
# %bb.8:                                # %.noexc
	ld.d	$a1, $sp, 0
	st.d	$a0, $s1, 0
	st.d	$a1, $s6, 0
.LBB160_9:                              # %._crit_edge.i.i8
	beq	$a1, $s5, .LBB160_13
# %bb.10:                               # %._crit_edge.i.i8
	bnez	$a1, .LBB160_12
# %bb.11:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB160_13
.LBB160_12:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB160_13:
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 48
	addi.d	$s2, $fp, 88
	st.d	$s2, $fp, 72
	ld.d	$a1, $s0, 80
	ld.d	$s0, $s0, 72
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a0, .LBB160_16
# %bb.14:                               # %.noexc.i12
.Ltmp3437:
	addi.d	$s3, $fp, 72
	addi.d	$a1, $sp, 0
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3438:
# %bb.15:                               # %.noexc13
	ld.d	$a1, $sp, 0
	st.d	$a0, $s3, 0
	st.d	$a1, $s2, 0
	move	$s2, $a0
.LBB160_16:                             # %._crit_edge.i.i11
	beq	$a1, $s5, .LBB160_20
# %bb.17:                               # %._crit_edge.i.i11
	bnez	$a1, .LBB160_19
# %bb.18:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s2, 0
	b	.LBB160_20
.LBB160_19:
	addi.d	$a2, $a1, 1
	move	$a0, $s2
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB160_20:
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 80
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB160_21:
.Ltmp3439:
	ld.d	$a2, $s1, 0
	move	$s0, $a0
	bne	$a2, $s6, .LBB160_24
# %bb.22:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 0
	bne	$a0, $s4, .LBB160_26
.LBB160_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit17
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB160_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s6, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB160_23
	b	.LBB160_26
.LBB160_25:
.Ltmp3436:
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB160_23
.LBB160_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i15
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end160:
	.size	_ZN2PP8FunctionC2ERKS0_, .Lfunc_end160-_ZN2PP8FunctionC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP8FunctionC2ERKS0_,"aG",@progbits,_ZN2PP8FunctionC2ERKS0_,comdat
	.p2align	2, 0x0
GCC_except_table160:
.Lexception93:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end93-.Lcst_begin93
.Lcst_begin93:
	.uleb128 .Lfunc_begin93-.Lfunc_begin93  # >> Call Site 1 <<
	.uleb128 .Ltmp3434-.Lfunc_begin93       #   Call between .Lfunc_begin93 and .Ltmp3434
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3434-.Lfunc_begin93       # >> Call Site 2 <<
	.uleb128 .Ltmp3435-.Ltmp3434            #   Call between .Ltmp3434 and .Ltmp3435
	.uleb128 .Ltmp3436-.Lfunc_begin93       #     jumps to .Ltmp3436
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3435-.Lfunc_begin93       # >> Call Site 3 <<
	.uleb128 .Ltmp3437-.Ltmp3435            #   Call between .Ltmp3435 and .Ltmp3437
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3437-.Lfunc_begin93       # >> Call Site 4 <<
	.uleb128 .Ltmp3438-.Ltmp3437            #   Call between .Ltmp3437 and .Ltmp3438
	.uleb128 .Ltmp3439-.Lfunc_begin93       #     jumps to .Ltmp3439
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3438-.Lfunc_begin93       # >> Call Site 5 <<
	.uleb128 .Lfunc_end160-.Ltmp3438        #   Call between .Ltmp3438 and .Lfunc_end160
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end93:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev,"axG",@progbits,_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev,comdat
	.weak	_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev # -- Begin function _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
	.p2align	5
	.type	_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev,@function
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev: # @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	pcalau12i	$a1, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	addi.d	$a2, $a1, 16
	addi.d	$a1, $fp, 88
	st.d	$a2, $fp, 0
	beq	$a0, $a1, .LBB161_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB161_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a1, $a0, 16
	addi.d	$a0, $fp, 56
	st.d	$a1, $fp, 0
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt6localeD1Ev)
	jr	$t8
.Lfunc_end161:
	.size	_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev, .Lfunc_end161-_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.weak	_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	5
	.type	_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB162_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB162_5
# %bb.2:                                # %.lr.ph.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB162_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB162_3
# %bb.4:                                # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.loopexit
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB162_5:                              # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB162_6:
	ret
.Lfunc_end162:
	.size	_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end162-_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_,"axG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_,comdat
	.weak	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_ # -- Begin function _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_
	.p2align	5
	.type	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_,@function
_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_: # @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	ld.d	$a1, $a1, 24
	ld.d	$a0, $a2, 24
	addi.d	$s1, $a1, 8
	bltu	$s1, $a0, .LBB163_5
# %bb.1:                                # %._crit_edge
	ld.d	$a2, $s0, 0
	beq	$a1, $a0, .LBB163_46
.LBB163_2:
	ld.d	$s0, $s0, 16
	beq	$a2, $s0, .LBB163_40
# %bb.3:                                # %.lr.ph.i6.preheader
	addi.d	$s1, $a2, 16
	b	.LBB163_38
	.p2align	4, , 16
.LBB163_4:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.15
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $fp, 24
	addi.d	$s1, $s1, 8
	bgeu	$s1, $a0, .LBB163_45
.LBB163_5:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s1, 0
	ld.d	$a0, $s2, 0
	addi.d	$a1, $s2, 16
	beq	$a0, $a1, .LBB163_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_7:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 32
	addi.d	$a1, $s2, 48
	beq	$a0, $a1, .LBB163_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.1
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_9:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.1
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 64
	addi.d	$a1, $s2, 80
	beq	$a0, $a1, .LBB163_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.2
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_11:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.2
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 96
	addi.d	$a1, $s2, 112
	beq	$a0, $a1, .LBB163_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.3
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_13:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.3
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 128
	addi.d	$a1, $s2, 144
	beq	$a0, $a1, .LBB163_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.4
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_15:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.4
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 160
	addi.d	$a1, $s2, 176
	beq	$a0, $a1, .LBB163_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.5
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_17:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.5
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 192
	addi.d	$a1, $s2, 208
	beq	$a0, $a1, .LBB163_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.6
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_19:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.6
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 224
	addi.d	$a1, $s2, 240
	beq	$a0, $a1, .LBB163_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.7
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_21:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.7
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 256
	addi.d	$a1, $s2, 272
	beq	$a0, $a1, .LBB163_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.8
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_23:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.8
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 288
	addi.d	$a1, $s2, 304
	beq	$a0, $a1, .LBB163_25
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.9
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_25:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.9
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 320
	addi.d	$a1, $s2, 336
	beq	$a0, $a1, .LBB163_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.10
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_27:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.10
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 352
	addi.d	$a1, $s2, 368
	beq	$a0, $a1, .LBB163_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.11
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_29:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.11
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 384
	addi.d	$a1, $s2, 400
	beq	$a0, $a1, .LBB163_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.12
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_31:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.12
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 416
	addi.d	$a1, $s2, 432
	beq	$a0, $a1, .LBB163_33
# %bb.32:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.13
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_33:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.13
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 448
	addi.d	$a1, $s2, 464
	beq	$a0, $a1, .LBB163_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.14
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB163_35:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.14
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a0, $s2, 480
	addi.d	$a1, $s2, 496
	beq	$a0, $a1, .LBB163_4
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.15
                                        #   in Loop: Header=BB163_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB163_4
	.p2align	4, , 16
.LBB163_37:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i9
                                        #   in Loop: Header=BB163_38 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB163_40
.LBB163_38:                             # %.lr.ph.i6
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB163_37
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i8
                                        #   in Loop: Header=BB163_38 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB163_37
.LBB163_40:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exit12
	ld.d	$a0, $fp, 8
	ld.d	$fp, $fp, 0
	beq	$a0, $fp, .LBB163_51
# %bb.41:                               # %.lr.ph.i14.preheader
	addi.d	$s0, $a0, 16
	b	.LBB163_43
	.p2align	4, , 16
.LBB163_42:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i17
                                        #   in Loop: Header=BB163_43 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB163_51
.LBB163_43:                             # %.lr.ph.i14
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB163_42
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i16
                                        #   in Loop: Header=BB163_43 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB163_42
.LBB163_45:                             # %._crit_edge.loopexit
	ld.d	$a1, $s0, 24
	ld.d	$a2, $s0, 0
	bne	$a1, $a0, .LBB163_2
.LBB163_46:
	ld.d	$fp, $fp, 0
	beq	$a2, $fp, .LBB163_51
# %bb.47:                               # %.lr.ph.i22.preheader
	addi.d	$s0, $a2, 16
	b	.LBB163_49
	.p2align	4, , 16
.LBB163_48:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i25
                                        #   in Loop: Header=BB163_49 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB163_51
.LBB163_49:                             # %.lr.ph.i22
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB163_48
# %bb.50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i24
                                        #   in Loop: Header=BB163_49 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB163_48
.LBB163_51:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exit20
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end163:
	.size	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_, .Lfunc_end163-_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev,"axG",@progbits,_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev,comdat
	.weak	_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev # -- Begin function _ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev,@function
_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev: # @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB164_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB164_5
# %bb.2:                                # %.lr.ph.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB164_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 432
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB164_3
# %bb.4:                                # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB164_5:                              # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB164_6:
	ret
.Lfunc_end164:
	.size	_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev, .Lfunc_end164-_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_
	.p2align	5
	.type	_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_,@function
_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_:   # @_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB165_10
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a1
	move	$s0, $a0
	b	.LBB165_4
	.p2align	4, , 16
.LBB165_2:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i.i.i
                                        #   in Loop: Header=BB165_4 Depth=1
	ld.d	$a1, $s0, 408
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB165_3:                              # %_ZSt8_DestroyIN2PP8WhenthenEEvPT_.exit
                                        #   in Loop: Header=BB165_4 Depth=1
	addi.d	$a0, $s0, 320
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s0, 240
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s0, 160
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s0, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 568
	beq	$s0, $fp, .LBB165_9
.LBB165_4:                              # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB165_7 Depth 2
	addi.d	$a0, $s0, 480
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 400
	beqz	$a0, .LBB165_3
# %bb.5:                                #   in Loop: Header=BB165_4 Depth=1
	ld.d	$s1, $s0, 472
	ld.d	$a1, $s0, 440
	addi.d	$a2, $s1, 8
	bgeu	$a1, $a2, .LBB165_2
# %bb.6:                                # %.lr.ph.i.i.i.i.i.preheader
                                        #   in Loop: Header=BB165_4 Depth=1
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB165_7:                              # %.lr.ph.i.i.i.i.i
                                        #   Parent Loop BB165_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s2, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s2
	bltu	$s2, $s1, .LBB165_7
# %bb.8:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i.i.i
                                        #   in Loop: Header=BB165_4 Depth=1
	ld.d	$a0, $s0, 400
	b	.LBB165_2
.LBB165_9:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
.LBB165_10:                             # %._crit_edge
	ret
.Lfunc_end165:
	.size	_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_, .Lfunc_end165-_ZSt8_DestroyIPN2PP8WhenthenEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,"axG",@progbits,_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,comdat
	.weak	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ # -- Begin function _ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.p2align	5
	.type	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,@function
_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_: # @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
.Lfunc_begin94:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception94
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	st.d	$s4, $sp, 120                   # 8-byte Folded Spill
	st.d	$s5, $sp, 112                   # 8-byte Folded Spill
	st.d	$s6, $sp, 104                   # 8-byte Folded Spill
	st.d	$s7, $sp, 96                    # 8-byte Folded Spill
	st.d	$s8, $sp, 88                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a3, $a1, 24
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a0, $a2, 24
	addi.d	$s4, $a3, 8
	bgeu	$s4, $a0, .LBB166_79
# %bb.1:
	st.d	$a1, $sp, 0                     # 8-byte Folded Spill
	b	.LBB166_4
	.p2align	4, , 16
.LBB166_2:                              # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a1, $s5, 8
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_3:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev.exit
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 24
	addi.d	$s4, $s4, 8
	bgeu	$s4, $a0, .LBB166_78
.LBB166_4:                              # %.lr.ph.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB166_9 Depth 2
                                        #     Child Loop BB166_16 Depth 2
                                        #     Child Loop BB166_20 Depth 2
                                        #     Child Loop BB166_23 Depth 2
                                        #     Child Loop BB166_25 Depth 2
                                        #     Child Loop BB166_27 Depth 2
                                        #     Child Loop BB166_31 Depth 2
                                        #     Child Loop BB166_35 Depth 2
                                        #     Child Loop BB166_38 Depth 2
                                        #     Child Loop BB166_40 Depth 2
                                        #     Child Loop BB166_42 Depth 2
                                        #     Child Loop BB166_46 Depth 2
                                        #     Child Loop BB166_50 Depth 2
                                        #     Child Loop BB166_53 Depth 2
                                        #     Child Loop BB166_55 Depth 2
                                        #     Child Loop BB166_57 Depth 2
                                        #     Child Loop BB166_61 Depth 2
                                        #     Child Loop BB166_65 Depth 2
                                        #     Child Loop BB166_68 Depth 2
                                        #     Child Loop BB166_70 Depth 2
                                        #     Child Loop BB166_72 Depth 2
                                        #     Child Loop BB166_76 Depth 2
	ld.d	$s5, $s4, 0
	ld.d	$a0, $s5, 488
	addi.d	$a1, $s5, 504
	beq	$a0, $a1, .LBB166_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 400
	beqz	$a0, .LBB166_12
# %bb.7:                                #   in Loop: Header=BB166_4 Depth=1
	ld.d	$fp, $s5, 472
	ld.d	$a1, $s5, 440
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB166_11
# %bb.8:                                # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB166_4 Depth=1
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB166_9:                              # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB166_9
# %bb.10:                               # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 400
.LBB166_11:                             # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a1, $s5, 408
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_12:                             # %_ZN2PP12RestartblockD2Ev.exit
                                        #   in Loop: Header=BB166_4 Depth=1
	addi.d	$s1, $s5, 320
	vld	$vr0, $s5, 336
	vld	$vr1, $s5, 352
	vld	$vr2, $s5, 368
	vld	$vr3, $s5, 384
	vst	$vr0, $sp, 48
	vst	$vr1, $sp, 64
	vst	$vr2, $sp, 16
	vst	$vr3, $sp, 32
.Ltmp3440:
	addi.d	$a1, $sp, 48
	addi.d	$a2, $sp, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_)
	jirl	$ra, $ra, 0
.Ltmp3441:
# %bb.13:                               #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB166_19
# %bb.14:                               #   in Loop: Header=BB166_4 Depth=1
	ld.d	$fp, $s5, 392
	ld.d	$a1, $s5, 360
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB166_18
# %bb.15:                               # %.lr.ph.i.i.i42.preheader
                                        #   in Loop: Header=BB166_4 Depth=1
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB166_16:                             # %.lr.ph.i.i.i42
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB166_16
# %bb.17:                               # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.loopexit.i.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s1, 0
.LBB166_18:                             # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a1, $s5, 328
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_19:                             # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$s1, $s5, 256
	ld.d	$s7, $s5, 272
	ld.d	$s8, $s5, 280
	ld.d	$s6, $s5, 288
	ld.d	$s0, $s5, 312
	ld.d	$s2, $s5, 296
	addi.d	$fp, $s8, 8
	bgeu	$fp, $s0, .LBB166_21
	.p2align	4, , 16
.LBB166_20:                             # %.lr.ph.i116
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s3, $fp, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 256
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 384
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, 8
	bltu	$fp, $s0, .LBB166_20
.LBB166_21:                             # %._crit_edge.i100
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s8, $s0, .LBB166_26
# %bb.22:                               #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s7, .LBB166_24
	.p2align	4, , 16
.LBB166_23:                             # %.lr.ph.i6.i104
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s7, .LBB166_23
.LBB166_24:                             # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit9.i107
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s2, $s6, .LBB166_28
	.p2align	4, , 16
.LBB166_25:                             # %.lr.ph.i11.i109
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 128
	bne	$s2, $s6, .LBB166_25
	b	.LBB166_28
	.p2align	4, , 16
.LBB166_26:                             #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s6, .LBB166_28
	.p2align	4, , 16
.LBB166_27:                             # %.lr.ph.i16.i113
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s6, .LBB166_27
.LBB166_28:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_.exit124
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 240
	beqz	$a0, .LBB166_34
# %bb.29:                               #   in Loop: Header=BB166_4 Depth=1
	ld.d	$fp, $s5, 312
	ld.d	$a1, $s5, 280
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB166_33
# %bb.30:                               # %.lr.ph.i.i.i36.preheader
                                        #   in Loop: Header=BB166_4 Depth=1
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB166_31:                             # %.lr.ph.i.i.i36
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB166_31
# %bb.32:                               # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i.i38
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 240
.LBB166_33:                             # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i.i35
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a1, $s5, 248
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_34:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev.exit40
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$s1, $s5, 176
	ld.d	$s7, $s5, 192
	ld.d	$s8, $s5, 200
	ld.d	$s6, $s5, 208
	ld.d	$s0, $s5, 232
	ld.d	$s2, $s5, 216
	addi.d	$fp, $s8, 8
	bgeu	$fp, $s0, .LBB166_36
	.p2align	4, , 16
.LBB166_35:                             # %.lr.ph.i90
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s3, $fp, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 256
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 384
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, 8
	bltu	$fp, $s0, .LBB166_35
.LBB166_36:                             # %._crit_edge.i74
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s8, $s0, .LBB166_41
# %bb.37:                               #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s7, .LBB166_39
	.p2align	4, , 16
.LBB166_38:                             # %.lr.ph.i6.i78
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s7, .LBB166_38
.LBB166_39:                             # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit9.i81
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s2, $s6, .LBB166_43
	.p2align	4, , 16
.LBB166_40:                             # %.lr.ph.i11.i83
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 128
	bne	$s2, $s6, .LBB166_40
	b	.LBB166_43
	.p2align	4, , 16
.LBB166_41:                             #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s6, .LBB166_43
	.p2align	4, , 16
.LBB166_42:                             # %.lr.ph.i16.i87
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s6, .LBB166_42
.LBB166_43:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_.exit98
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 160
	beqz	$a0, .LBB166_49
# %bb.44:                               #   in Loop: Header=BB166_4 Depth=1
	ld.d	$fp, $s5, 232
	ld.d	$a1, $s5, 200
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB166_48
# %bb.45:                               # %.lr.ph.i.i.i29.preheader
                                        #   in Loop: Header=BB166_4 Depth=1
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB166_46:                             # %.lr.ph.i.i.i29
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB166_46
# %bb.47:                               # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i.i31
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 160
.LBB166_48:                             # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i.i28
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a1, $s5, 168
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_49:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev.exit33
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$s1, $s5, 96
	ld.d	$s7, $s5, 112
	ld.d	$s8, $s5, 120
	ld.d	$s6, $s5, 128
	ld.d	$s0, $s5, 152
	ld.d	$s2, $s5, 136
	addi.d	$fp, $s8, 8
	bgeu	$fp, $s0, .LBB166_51
	.p2align	4, , 16
.LBB166_50:                             # %.lr.ph.i64
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s3, $fp, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 256
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 384
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, 8
	bltu	$fp, $s0, .LBB166_50
.LBB166_51:                             # %._crit_edge.i48
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s8, $s0, .LBB166_56
# %bb.52:                               #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s7, .LBB166_54
	.p2align	4, , 16
.LBB166_53:                             # %.lr.ph.i6.i52
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s7, .LBB166_53
.LBB166_54:                             # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit9.i55
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s2, $s6, .LBB166_58
	.p2align	4, , 16
.LBB166_55:                             # %.lr.ph.i11.i57
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 128
	bne	$s2, $s6, .LBB166_55
	b	.LBB166_58
	.p2align	4, , 16
.LBB166_56:                             #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s6, .LBB166_58
	.p2align	4, , 16
.LBB166_57:                             # %.lr.ph.i16.i61
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s6, .LBB166_57
.LBB166_58:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_.exit72
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 80
	beqz	$a0, .LBB166_64
# %bb.59:                               #   in Loop: Header=BB166_4 Depth=1
	ld.d	$fp, $s5, 152
	ld.d	$a1, $s5, 120
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB166_63
# %bb.60:                               # %.lr.ph.i.i.i22.preheader
                                        #   in Loop: Header=BB166_4 Depth=1
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB166_61:                             # %.lr.ph.i.i.i22
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB166_61
# %bb.62:                               # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i.i24
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 80
.LBB166_63:                             # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i.i21
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a1, $s5, 88
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_64:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev.exit26
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$s1, $s5, 16
	ld.d	$s7, $s5, 32
	ld.d	$s8, $s5, 40
	ld.d	$s6, $s5, 48
	ld.d	$s0, $s5, 72
	ld.d	$s2, $s5, 56
	addi.d	$fp, $s8, 8
	bgeu	$fp, $s0, .LBB166_66
	.p2align	4, , 16
.LBB166_65:                             # %.lr.ph.i46
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s3, $fp, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 256
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s3, 384
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, 8
	bltu	$fp, $s0, .LBB166_65
.LBB166_66:                             # %._crit_edge.i
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s8, $s0, .LBB166_71
# %bb.67:                               #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s7, .LBB166_69
	.p2align	4, , 16
.LBB166_68:                             # %.lr.ph.i6.i
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s7, .LBB166_68
.LBB166_69:                             # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit9.i
                                        #   in Loop: Header=BB166_4 Depth=1
	beq	$s2, $s6, .LBB166_73
	.p2align	4, , 16
.LBB166_70:                             # %.lr.ph.i11.i
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 128
	bne	$s2, $s6, .LBB166_70
	b	.LBB166_73
	.p2align	4, , 16
.LBB166_71:                             #   in Loop: Header=BB166_4 Depth=1
	beq	$s1, $s6, .LBB166_73
	.p2align	4, , 16
.LBB166_72:                             # %.lr.ph.i16.i
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s6, .LBB166_72
.LBB166_73:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_.exit
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 0
	beqz	$a0, .LBB166_3
# %bb.74:                               #   in Loop: Header=BB166_4 Depth=1
	ld.d	$fp, $s5, 72
	ld.d	$a1, $s5, 40
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB166_2
# %bb.75:                               # %.lr.ph.i.i.i.preheader
                                        #   in Loop: Header=BB166_4 Depth=1
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB166_76:                             # %.lr.ph.i.i.i
                                        #   Parent Loop BB166_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB166_76
# %bb.77:                               # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i.i
                                        #   in Loop: Header=BB166_4 Depth=1
	ld.d	$a0, $s5, 0
	b	.LBB166_2
.LBB166_78:                             # %._crit_edge.loopexit
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$a3, $a1, 24
.LBB166_79:                             # %._crit_edge
	ld.d	$s1, $a1, 0
	beq	$a3, $a0, .LBB166_84
# %bb.80:
	ld.d	$fp, $a1, 16
	beq	$s1, $fp, .LBB166_82
	.p2align	4, , 16
.LBB166_81:                             # %.lr.ph.i6
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 520
	bne	$s1, $fp, .LBB166_81
.LBB166_82:                             # %_ZSt8_DestroyIPN2PP12RestartblockEEvT_S3_.exit9
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s0, $a0, 8
	ld.d	$fp, $a0, 0
	beq	$s0, $fp, .LBB166_86
	.p2align	4, , 16
.LBB166_83:                             # %.lr.ph.i11
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 520
	bne	$s0, $fp, .LBB166_83
	b	.LBB166_86
.LBB166_84:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $a0, 0
	beq	$s1, $fp, .LBB166_86
	.p2align	4, , 16
.LBB166_85:                             # %.lr.ph.i16
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 520
	bne	$s1, $fp, .LBB166_85
.LBB166_86:                             # %_ZSt8_DestroyIPN2PP12RestartblockEEvT_S3_.exit14
	ld.d	$s8, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB166_87:
.Ltmp3442:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end166:
	.size	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_, .Lfunc_end166-_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,"aG",@progbits,_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,comdat
	.p2align	2, 0x0
GCC_except_table166:
.Lexception94:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end94-.Lcst_begin94
.Lcst_begin94:
	.uleb128 .Lfunc_begin94-.Lfunc_begin94  # >> Call Site 1 <<
	.uleb128 .Ltmp3440-.Lfunc_begin94       #   Call between .Lfunc_begin94 and .Ltmp3440
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3440-.Lfunc_begin94       # >> Call Site 2 <<
	.uleb128 .Ltmp3441-.Ltmp3440            #   Call between .Ltmp3440 and .Ltmp3441
	.uleb128 .Ltmp3442-.Lfunc_begin94       #     jumps to .Ltmp3442
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3441-.Lfunc_begin94       # >> Call Site 3 <<
	.uleb128 .Lfunc_end166-.Ltmp3441        #   Call between .Ltmp3441 and .Lfunc_end166
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end94:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E,"axG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E,comdat
	.weak	_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E # -- Begin function _ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E
	.p2align	5
	.type	_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E,@function
_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E: # @_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	st.d	$s7, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a1
	move	$s0, $a0
	ld.d	$s1, $a1, 0
	ld.d	$s4, $a1, 16
	ld.d	$s5, $a1, 24
	ld.d	$s3, $a0, 48
	ld.d	$s6, $a0, 72
	ld.d	$s2, $a0, 56
	addi.d	$s7, $s5, 8
	bgeu	$s7, $s6, .LBB167_2
	.p2align	4, , 16
.LBB167_1:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s7, 0
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s7, $s7, 8
	bltu	$s7, $s6, .LBB167_1
.LBB167_2:                              # %._crit_edge.i.i
	beq	$s5, $s6, .LBB167_7
# %bb.3:
	beq	$s1, $s4, .LBB167_5
	.p2align	4, , 16
.LBB167_4:                              # %.lr.ph.i6.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 432
	bne	$s1, $s4, .LBB167_4
.LBB167_5:                              # %_ZSt8_DestroyIPN2PP3CmdEEvT_S3_.exit9.i.i
	beq	$s2, $s3, .LBB167_9
	.p2align	4, , 16
.LBB167_6:                              # %.lr.ph.i11.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 432
	bne	$s2, $s3, .LBB167_6
	b	.LBB167_9
.LBB167_7:
	beq	$s1, $s3, .LBB167_9
	.p2align	4, , 16
.LBB167_8:                              # %.lr.ph.i16.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 432
	bne	$s1, $s3, .LBB167_8
.LBB167_9:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_.exit
	ld.d	$a1, $fp, 24
	ld.d	$s1, $s0, 72
	addi.d	$s0, $s0, 48
	bgeu	$a1, $s1, .LBB167_11
	.p2align	4, , 16
.LBB167_10:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s2, $a1, 8
	ori	$a1, $zero, 432
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s2
	bltu	$s2, $s1, .LBB167_10
.LBB167_11:                             # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit
	vld	$vr0, $fp, 16
	vst	$vr0, $s0, 16
	vld	$vr0, $fp, 0
	vst	$vr0, $s0, 0
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end167:
	.size	_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E, .Lfunc_end167-_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_ # -- Begin function _ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,@function
_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_: # @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_
.Lfunc_begin95:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception95
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a3
	move	$s2, $a1
	move	$s0, $a0
	st.d	$a0, $sp, 0
	ori	$a0, $zero, 72
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.w	$a1, $a1, 0
	move	$fp, $a0
	addi.d	$s1, $a0, 32
	st.w	$a1, $a0, 32
	addi.d	$s3, $a0, 56
	st.d	$s3, $a0, 40
	st.d	$zero, $a0, 48
	st.b	$zero, $a0, 56
	st.d	$a0, $sp, 8
.Ltmp3443:
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_)
	jirl	$ra, $ra, 0
.Ltmp3444:
# %bb.1:
	move	$a4, $a0
	move	$a2, $a1
	beqz	$a1, .LBB168_6
# %bb.2:
	addi.d	$a3, $s0, 8
	ori	$a0, $zero, 1
	bnez	$a4, .LBB168_5
# %bb.3:
	beq	$a3, $a2, .LBB168_5
# %bb.4:
	ld.w	$a0, $s1, 0
	ld.w	$a1, $a2, 32
	slt	$a0, $a0, $a1
.LBB168_5:                              # %.thread
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 40
	move	$a0, $fp
	b	.LBB168_9
.LBB168_6:
	move	$s0, $a4
	ld.d	$a0, $fp, 40
	beq	$a0, $s3, .LBB168_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
	ld.d	$a1, $s3, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB168_8:                              # %_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E.exit.i
	ori	$a1, $zero, 72
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
.LBB168_9:                              # %_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev.exit
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB168_10:
.Ltmp3445:
	move	$fp, $a0
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end168:
	.size	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_, .Lfunc_end168-_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table168:
.Lexception95:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end95-.Lcst_begin95
.Lcst_begin95:
	.uleb128 .Lfunc_begin95-.Lfunc_begin95  # >> Call Site 1 <<
	.uleb128 .Ltmp3443-.Lfunc_begin95       #   Call between .Lfunc_begin95 and .Ltmp3443
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3443-.Lfunc_begin95       # >> Call Site 2 <<
	.uleb128 .Ltmp3444-.Ltmp3443            #   Call between .Ltmp3443 and .Ltmp3444
	.uleb128 .Ltmp3445-.Lfunc_begin95       #     jumps to .Ltmp3445
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3444-.Lfunc_begin95       # >> Call Site 3 <<
	.uleb128 .Lfunc_end168-.Ltmp3444        #   Call between .Ltmp3444 and .Lfunc_end168
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end95:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_,"axG",@progbits,_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_,comdat
	.weak	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_ # -- Begin function _ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_
	.p2align	5
	.type	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_,@function
_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_: # @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$a3, $a0
	addi.d	$fp, $a0, 8
	beq	$fp, $a1, .LBB169_5
# %bb.1:
	move	$a0, $a1
	ld.w	$s0, $a2, 0
	ld.w	$a1, $a1, 32
	bge	$s0, $a1, .LBB169_8
# %bb.2:
	ld.d	$s1, $a3, 24
	beq	$s1, $a0, .LBB169_20
# %bb.3:
	move	$s3, $a3
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.w	$a1, $a0, 32
	bge	$a1, $s0, .LBB169_21
# %bb.4:
	ld.d	$a1, $a0, 24
	sltui	$a1, $a1, 1
	move	$a2, $a0
	masknez	$a0, $s2, $a1
	maskeqz	$a1, $a2, $a1
	or	$a1, $a1, $a0
	b	.LBB169_36
.LBB169_5:
	ld.d	$a0, $a3, 40
	beqz	$a0, .LBB169_12
# %bb.6:
	ld.d	$a1, $a3, 32
	ld.w	$a0, $a1, 32
	ld.w	$a4, $a2, 0
	bge	$a0, $a4, .LBB169_12
.LBB169_7:
	move	$a0, $zero
	b	.LBB169_36
.LBB169_8:
	bge	$a1, $s0, .LBB169_19
# %bb.9:
	ld.d	$a1, $a3, 32
	beq	$a1, $a0, .LBB169_26
# %bb.10:
	move	$s1, $a3
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.w	$a1, $a0, 32
	bge	$s0, $a1, .LBB169_27
# %bb.11:
	ld.d	$a1, $s2, 24
	sltui	$a1, $a1, 1
	maskeqz	$a2, $s2, $a1
	masknez	$a0, $a0, $a1
	or	$a1, $a2, $a0
	b	.LBB169_36
.LBB169_12:
	ld.d	$a5, $a3, 16
	beqz	$a5, .LBB169_16
# %bb.13:                               # %.lr.ph.i
	ld.w	$a1, $a2, 0
	ori	$a0, $zero, 24
	ori	$a6, $zero, 16
	.p2align	4, , 16
.LBB169_14:                             # =>This Inner Loop Header: Depth=1
	move	$fp, $a5
	ld.w	$a4, $a5, 32
	slt	$a5, $a1, $a4
	masknez	$a7, $a0, $a5
	maskeqz	$a5, $a6, $a5
	or	$a5, $a5, $a7
	ldx.d	$a5, $fp, $a5
	bnez	$a5, .LBB169_14
# %bb.15:                               # %._crit_edge.i
	move	$a0, $fp
	bge	$a1, $a4, .LBB169_18
.LBB169_16:                             # %._crit_edge.thread.i
	ld.d	$a0, $a3, 24
	beq	$fp, $a0, .LBB169_35
# %bb.17:
	move	$a0, $fp
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.w	$a4, $a0, 32
	ld.w	$a1, $s0, 0
.LBB169_18:
	slt	$a2, $a4, $a1
	b	.LBB169_34
.LBB169_19:
	move	$a1, $zero
	b	.LBB169_36
.LBB169_20:
	move	$a1, $a0
	b	.LBB169_36
.LBB169_21:
	ld.d	$a4, $s3, 16
	move	$a1, $s1
	beqz	$a4, .LBB169_25
# %bb.22:                               # %.lr.ph.i23.preheader
	ori	$a0, $zero, 24
	ori	$a3, $zero, 16
	.p2align	4, , 16
.LBB169_23:                             # %.lr.ph.i23
                                        # =>This Inner Loop Header: Depth=1
	move	$fp, $a4
	ld.w	$a2, $a4, 32
	slt	$a4, $s0, $a2
	masknez	$a5, $a0, $a4
	maskeqz	$a4, $a3, $a4
	or	$a4, $a4, $a5
	ldx.d	$a4, $fp, $a4
	bnez	$a4, .LBB169_23
# %bb.24:                               # %._crit_edge.i29
	move	$a0, $fp
	bge	$s0, $a2, .LBB169_33
.LBB169_25:                             # %._crit_edge.thread.i37
	bne	$fp, $a1, .LBB169_32
	b	.LBB169_7
.LBB169_26:
	move	$a1, $a0
	move	$a0, $zero
	b	.LBB169_36
.LBB169_27:
	move	$a1, $s1
	ld.d	$a4, $s1, 16
	beqz	$a4, .LBB169_31
# %bb.28:                               # %.lr.ph.i42.preheader
	ori	$a0, $zero, 24
	ori	$a3, $zero, 16
	.p2align	4, , 16
.LBB169_29:                             # %.lr.ph.i42
                                        # =>This Inner Loop Header: Depth=1
	move	$fp, $a4
	ld.w	$a2, $a4, 32
	slt	$a4, $s0, $a2
	masknez	$a5, $a0, $a4
	maskeqz	$a4, $a3, $a4
	or	$a4, $a4, $a5
	ldx.d	$a4, $fp, $a4
	bnez	$a4, .LBB169_29
# %bb.30:                               # %._crit_edge.i48
	move	$a0, $fp
	bge	$s0, $a2, .LBB169_33
.LBB169_31:                             # %._crit_edge.thread.i56
	ld.d	$a0, $a1, 24
	beq	$fp, $a0, .LBB169_35
.LBB169_32:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.w	$a2, $a0, 32
.LBB169_33:
	slt	$a2, $a2, $s0
.LBB169_34:                             # %_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE24_M_get_insert_unique_posERS1_.exit
	maskeqz	$a1, $fp, $a2
	masknez	$a0, $a0, $a2
	b	.LBB169_36
.LBB169_35:
	move	$a0, $zero
	move	$a1, $fp
.LBB169_36:                             # %_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE24_M_get_insert_unique_posERS1_.exit
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end169:
	.size	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_, .Lfunc_end169-_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev,"axG",@progbits,_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev,comdat
	.weak	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev # -- Begin function _ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev
	.p2align	5
	.type	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev,@function
_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev: # @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB170_4
# %bb.1:
	ld.d	$a0, $fp, 40
	addi.d	$a1, $fp, 56
	beq	$a0, $a1, .LBB170_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB170_3:                              # %_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E.exit
	ori	$a1, $zero, 72
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB170_4:
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end170:
	.size	_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev, .Lfunc_end170-_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE10_Auto_nodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # -- Begin function _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,@function
_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_: # @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
.Lfunc_begin96:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception96
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s0, $a0
	srli.d	$a0, $a0, 3
	sltu	$a2, $zero, $s0
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	sub.d	$a0, $a0, $a2
	ld.d	$a2, $fp, 32
	ld.d	$a5, $fp, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 5
	alsl.d	$a0, $a0, $a3, 4
	sub.d	$a2, $a2, $a5
	srai.d	$a2, $a2, 5
	add.d	$a0, $a0, $a2
	addi.w	$s2, $zero, -1
	lu52i.d	$a2, $s2, 63
	beq	$a0, $a2, .LBB171_11
# %bb.1:
	move	$s1, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s0, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB171_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s0, $fp, 72
.LBB171_3:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	ld.d	$s0, $fp, 48
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s1, 8
	ld.d	$s1, $s1, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a2, .LBB171_6
# %bb.4:                                # %.noexc.i
.Ltmp3446:
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3447:
# %bb.5:                                # %.noexc
	ld.d	$a1, $sp, 0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB171_6:                              # %._crit_edge.i.i
	beq	$a1, $s2, .LBB171_10
# %bb.7:                                # %._crit_edge.i.i
	bnez	$a1, .LBB171_9
# %bb.8:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB171_10
.LBB171_9:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB171_10:
	ld.d	$a0, $fp, 72
	ld.d	$a1, $sp, 0
	ld.d	$a2, $a0, 8
	st.d	$a1, $s0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a2, $fp, 56
	addi.d	$a0, $a2, 512
	st.d	$a0, $fp, 64
	st.d	$a2, $fp, 48
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB171_11:
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a0, $a0, %pc_lo12(.L.str.239)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB171_12:
.Ltmp3448:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp3449:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3450:
# %bb.13:
.LBB171_14:
.Ltmp3451:
	move	$fp, $a0
.Ltmp3452:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3453:
# %bb.15:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB171_16:
.Ltmp3454:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end171:
	.size	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_, .Lfunc_end171-_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table171:
.Lexception96:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end96-.Lcst_begin96
.Lcst_begin96:
	.uleb128 .Lfunc_begin96-.Lfunc_begin96  # >> Call Site 1 <<
	.uleb128 .Ltmp3446-.Lfunc_begin96       #   Call between .Lfunc_begin96 and .Ltmp3446
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3446-.Lfunc_begin96       # >> Call Site 2 <<
	.uleb128 .Ltmp3447-.Ltmp3446            #   Call between .Ltmp3446 and .Ltmp3447
	.uleb128 .Ltmp3448-.Lfunc_begin96       #     jumps to .Ltmp3448
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3447-.Lfunc_begin96       # >> Call Site 3 <<
	.uleb128 .Ltmp3449-.Ltmp3447            #   Call between .Ltmp3447 and .Ltmp3449
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3449-.Lfunc_begin96       # >> Call Site 4 <<
	.uleb128 .Ltmp3450-.Ltmp3449            #   Call between .Ltmp3449 and .Ltmp3450
	.uleb128 .Ltmp3451-.Lfunc_begin96       #     jumps to .Ltmp3451
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3452-.Lfunc_begin96       # >> Call Site 5 <<
	.uleb128 .Ltmp3453-.Ltmp3452            #   Call between .Ltmp3452 and .Ltmp3453
	.uleb128 .Ltmp3454-.Lfunc_begin96       #     jumps to .Ltmp3454
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3453-.Lfunc_begin96       # >> Call Site 6 <<
	.uleb128 .Lfunc_end171-.Ltmp3453        #   Call between .Ltmp3453 and .Lfunc_end171
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end96:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB172_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB172_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB172_12
# %bb.3:
	move	$a0, $s0
	b	.LBB172_8
.LBB172_4:                              # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB172_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB172_6:                              # %_ZSt4copyIPPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ET0_T_S9_S8_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB172_9
.LBB172_7:                              # %_ZSt9__advanceIPPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB172_14
.LBB172_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB172_9:                              # %_ZSt4copyIPPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ET0_T_S9_S8_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB172_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB172_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB172_6
.LBB172_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB172_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB172_9
.LBB172_14:                             # %_ZSt9__advanceIPPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB172_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB172_9
.Lfunc_end172:
	.size	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb, .Lfunc_end172-_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_ # -- Begin function _ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,@function
_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_: # @_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
.Lfunc_begin97:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception97
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srai.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 4
	lu12i.w	$a3, 427197
	ori	$a3, $a3, 2579
	lu32i.d	$a3, -155345
	ld.d	$a4, $fp, 32
	ld.d	$a5, $fp, 16
	lu52i.d	$a3, $a3, -1973
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a4, $a5
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	lu12i.w	$a2, -38837
	ori	$a2, $a2, 3489
	lu32i.d	$a2, -271854
	lu52i.d	$a2, $a2, 4
	beq	$a0, $a2, .LBB173_5
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB173_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB173_3:                              # %_ZNSt5dequeIN2PP3CmdESaIS1_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 432
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
.Ltmp3455:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3CmdC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp3456:
# %bb.4:                                # %_ZNSt16allocator_traitsISaIN2PP3CmdEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_.exit
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 432
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB173_5:
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a0, $a0, %pc_lo12(.L.str.239)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB173_6:
.Ltmp3457:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 432
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp3458:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3459:
# %bb.7:
.LBB173_8:
.Ltmp3460:
	move	$fp, $a0
.Ltmp3461:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3462:
# %bb.9:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB173_10:
.Ltmp3463:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end173:
	.size	_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_, .Lfunc_end173-_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table173:
.Lexception97:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end97-.Lcst_begin97
.Lcst_begin97:
	.uleb128 .Lfunc_begin97-.Lfunc_begin97  # >> Call Site 1 <<
	.uleb128 .Ltmp3455-.Lfunc_begin97       #   Call between .Lfunc_begin97 and .Ltmp3455
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3455-.Lfunc_begin97       # >> Call Site 2 <<
	.uleb128 .Ltmp3456-.Ltmp3455            #   Call between .Ltmp3455 and .Ltmp3456
	.uleb128 .Ltmp3457-.Lfunc_begin97       #     jumps to .Ltmp3457
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3456-.Lfunc_begin97       # >> Call Site 3 <<
	.uleb128 .Ltmp3458-.Ltmp3456            #   Call between .Ltmp3456 and .Ltmp3458
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3458-.Lfunc_begin97       # >> Call Site 4 <<
	.uleb128 .Ltmp3459-.Ltmp3458            #   Call between .Ltmp3458 and .Ltmp3459
	.uleb128 .Ltmp3460-.Lfunc_begin97       #     jumps to .Ltmp3460
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3461-.Lfunc_begin97       # >> Call Site 5 <<
	.uleb128 .Ltmp3462-.Ltmp3461            #   Call between .Ltmp3461 and .Ltmp3462
	.uleb128 .Ltmp3463-.Lfunc_begin97       #     jumps to .Ltmp3463
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3462-.Lfunc_begin97       # >> Call Site 6 <<
	.uleb128 .Lfunc_end173-.Ltmp3462        #   Call between .Ltmp3462 and .Lfunc_end173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end97:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB174_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB174_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB174_12
# %bb.3:
	move	$a0, $s0
	b	.LBB174_8
.LBB174_4:                              # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB174_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB174_6:                              # %_ZSt4copyIPPN2PP3CmdES3_ET0_T_S5_S4_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB174_9
.LBB174_7:                              # %_ZSt9__advanceIPPN2PP3CmdElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB174_14
.LBB174_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB174_9:                              # %_ZSt4copyIPPN2PP3CmdES3_ET0_T_S5_S4_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 432
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 432
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB174_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB174_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB174_6
.LBB174_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB174_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB174_9
.LBB174_14:                             # %_ZSt9__advanceIPPN2PP3CmdElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB174_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB174_9
.Lfunc_end174:
	.size	_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb, .Lfunc_end174-_ZNSt5dequeIN2PP3CmdESaIS1_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E,"axG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E,comdat
	.weak	_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E # -- Begin function _ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E
	.p2align	5
	.type	_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E,@function
_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E: # @_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -192
	.cfi_def_cfa_offset 192
	st.d	$ra, $sp, 184                   # 8-byte Folded Spill
	st.d	$fp, $sp, 176                   # 8-byte Folded Spill
	st.d	$s0, $sp, 168                   # 8-byte Folded Spill
	st.d	$s1, $sp, 160                   # 8-byte Folded Spill
	st.d	$s2, $sp, 152                   # 8-byte Folded Spill
	st.d	$s3, $sp, 144                   # 8-byte Folded Spill
	st.d	$s4, $sp, 136                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.d	$a5, $a2, 0
	ld.d	$a4, $a2, 8
	ld.d	$a3, $a2, 16
	ld.d	$a2, $a2, 24
	addi.d	$a6, $a5, 432
	move	$s0, $a1
	move	$fp, $a0
	move	$t0, $a4
	move	$a7, $a3
	move	$a1, $a2
	bne	$a6, $a3, .LBB175_2
# %bb.1:
	ld.d	$a6, $a2, 8
	addi.d	$a1, $a2, 8
	addi.d	$a7, $a6, 432
	move	$t0, $a6
.LBB175_2:                              # %_ZNSt15_Deque_iteratorIN2PP3CmdERS1_PS1_EppEv.exit
	ld.d	$t2, $s0, 40
	ld.d	$s1, $s0, 16
	ld.d	$t1, $s0, 32
	sub.d	$a0, $a2, $t2
	srai.d	$a0, $a0, 3
	sltu	$t3, $zero, $a2
	sub.d	$t4, $a5, $a4
	srai.d	$t4, $t4, 4
	lu12i.w	$t5, 427197
	ori	$t5, $t5, 2579
	lu32i.d	$t5, -155345
	lu52i.d	$s2, $t5, -1973
	mul.d	$t4, $t4, $s2
	sub.d	$t5, $t1, $s1
	srai.d	$t5, $t5, 4
	mul.d	$t5, $t5, $s2
	sub.d	$t3, $t4, $t3
	add.d	$t3, $t3, $t5
	ld.d	$t4, $s0, 72
	add.d	$s3, $t3, $a0
	ld.d	$t3, $s0, 48
	ld.d	$a0, $s0, 56
	sub.d	$t6, $t4, $t2
	srai.d	$t6, $t6, 3
	sltu	$t7, $zero, $t4
	sub.d	$t8, $t3, $a0
	srai.d	$t8, $t8, 4
	mul.d	$t8, $t8, $s2
	sub.d	$t5, $t5, $t7
	add.d	$t5, $t5, $t6
	add.d	$t5, $t5, $t8
	srli.d	$t5, $t5, 1
	bgeu	$s3, $t5, .LBB175_7
# %bb.3:
	beq	$a5, $s1, .LBB175_5
# %bb.4:
	ld.d	$a0, $s0, 24
	st.d	$s1, $sp, 104
	st.d	$a0, $sp, 112
	st.d	$t1, $sp, 120
	st.d	$t2, $sp, 128
	st.d	$a5, $sp, 72
	st.d	$a4, $sp, 80
	st.d	$a3, $sp, 88
	st.d	$a2, $sp, 96
	st.d	$a6, $sp, 40
	st.d	$t0, $sp, 48
	st.d	$a7, $sp, 56
	st.d	$a1, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 72
	addi.d	$a3, $sp, 40
	pcaddu18i	$ra, %call36(_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ld.d	$t1, $s0, 32
.LBB175_5:
	addi.d	$s4, $t1, -432
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	beq	$s1, $s4, .LBB175_11
# %bb.6:
	ld.d	$a0, $s0, 16
	addi.d	$a0, $a0, 432
	st.d	$a0, $s0, 16
	b	.LBB175_14
.LBB175_7:
	beq	$a6, $t3, .LBB175_9
# %bb.8:
	ld.d	$t1, $s0, 64
	st.d	$a6, $sp, 104
	st.d	$t0, $sp, 112
	st.d	$a7, $sp, 120
	st.d	$a1, $sp, 128
	st.d	$t3, $sp, 72
	st.d	$a0, $sp, 80
	st.d	$t1, $sp, 88
	st.d	$t4, $sp, 96
	st.d	$a5, $sp, 40
	st.d	$a4, $sp, 48
	st.d	$a3, $sp, 56
	st.d	$a2, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 72
	addi.d	$a3, $sp, 40
	pcaddu18i	$ra, %call36(_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
	ld.d	$t3, $s0, 48
	ld.d	$a0, $s0, 56
.LBB175_9:
	beq	$t3, $a0, .LBB175_12
# %bb.10:
	addi.d	$a0, $t3, -432
	b	.LBB175_13
.LBB175_11:
	ld.d	$a0, $s0, 24
	ori	$a1, $zero, 432
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $a0, 8
	st.d	$a1, $s0, 40
	ld.d	$a0, $a0, 8
	st.d	$a0, $s0, 24
	addi.d	$a1, $a0, 432
	st.d	$a1, $s0, 32
	st.d	$a0, $s0, 16
	b	.LBB175_14
.LBB175_12:
	ori	$a1, $zero, 432
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s0, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s0, 56
	addi.d	$a1, $a0, 432
	st.d	$a1, $s0, 64
.LBB175_13:                             # %_ZNSt5dequeIN2PP3CmdESaIS1_EE8pop_backEv.exit
	st.d	$a0, $s0, 48
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
.LBB175_14:
	vld	$vr0, $s0, 24
	ld.d	$a2, $s0, 24
	ld.d	$a1, $s0, 40
	vst	$vr0, $fp, 8
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 4
	mul.d	$a2, $a2, $s2
	add.d	$a2, $a2, $s3
	st.d	$a1, $fp, 24
	beqz	$a2, .LBB175_16
# %bb.15:
	slli.d	$a0, $a2, 3
	ldx.d	$a0, $a1, $a0
	alsl.d	$a1, $a2, $a1, 3
	st.d	$a1, $fp, 24
	st.d	$a0, $fp, 8
	addi.d	$a1, $a0, 432
	st.d	$a1, $fp, 16
	b	.LBB175_17
.LBB175_16:
	ori	$a1, $zero, 432
	mul.d	$a1, $s3, $a1
	add.d	$a0, $a0, $a1
.LBB175_17:                             # %_ZStplRKSt15_Deque_iteratorIN2PP3CmdERS1_PS1_El.exit
	st.d	$a0, $fp, 0
	ld.d	$s4, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 168                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 176                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 184                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 192
	ret
.Lfunc_end175:
	.size	_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E, .Lfunc_end175-_ZNSt5dequeIN2PP3CmdESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,"axG",@progbits,_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,comdat
	.weak	_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_ # -- Begin function _ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.p2align	5
	.type	_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,@function
_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_: # @_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a4, $a1, 24
	ld.d	$a5, $a2, 24
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	beq	$a4, $a5, .LBB176_35
# %bb.1:
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	ld.d	$a0, $a2, 8
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	ld.d	$fp, $a2, 0
	ld.d	$a5, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$a1, $a3, 16
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	st.d	$a3, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a1, $a3, 24
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	sub.d	$a0, $fp, $a0
	blez	$a0, .LBB176_12
# %bb.2:                                # %.lr.ph.i
	srli.d	$a0, $a0, 4
	lu12i.w	$a1, 427197
	ori	$a1, $a1, 2579
	lu32i.d	$a1, -155345
	lu52i.d	$s0, $a1, -1973
	mul.d	$s1, $a0, $s0
	addi.w	$a0, $zero, -432
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	b	.LBB176_4
	.p2align	4, , 16
.LBB176_3:                              #   in Loop: Header=BB176_4 Depth=1
	sub.d	$a0, $a0, $s2
	slli.d	$a1, $a0, 3
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	ldx.d	$s6, $a2, $a1
	alsl.d	$a0, $a0, $a2, 3
	addi.d	$a1, $s6, 432
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	move	$a5, $s6
	sub.d	$s1, $s1, $s2
	add.d	$fp, $fp, $s7
	blez	$s1, .LBB176_12
.LBB176_4:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB176_8 Depth 2
	sub.d	$a0, $a5, $s6
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s0
	move	$a2, $a0
	move	$a1, $a5
	bne	$a5, $s6, .LBB176_6
# %bb.5:                                #   in Loop: Header=BB176_4 Depth=1
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 432
	ori	$a2, $zero, 1
.LBB176_6:                              #   in Loop: Header=BB176_4 Depth=1
	slt	$a3, $a2, $s1
	masknez	$a4, $s1, $a3
	maskeqz	$a2, $a2, $a3
	or	$s2, $a2, $a4
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	mul.d	$s7, $s2, $a2
	beqz	$s2, .LBB176_10
# %bb.7:                                # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB176_4 Depth=1
	move	$s8, $a5
	addi.d	$s3, $a1, -432
	addi.d	$s4, $fp, -432
	move	$s5, $s7
	.p2align	4, , 16
.LBB176_8:                              # %.lr.ph.i.i
                                        #   Parent Loop BB176_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, -432
	addi.d	$s5, $s5, 432
	addi.d	$s4, $s4, -432
	bnez	$s5, .LBB176_8
# %bb.9:                                # %_ZSt23__copy_move_backward_a2ILb1EPN2PP3CmdES2_ET1_T0_S4_S3_.exit.loopexit.i
                                        #   in Loop: Header=BB176_4 Depth=1
	move	$a5, $s8
	sub.d	$a0, $s8, $s6
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s0
.LBB176_10:                             # %_ZSt23__copy_move_backward_a2ILb1EPN2PP3CmdES2_ET1_T0_S4_S3_.exit.i
                                        #   in Loop: Header=BB176_4 Depth=1
	bne	$a0, $s2, .LBB176_3
# %bb.11:                               #   in Loop: Header=BB176_4 Depth=1
	sub.d	$a0, $zero, $s2
	ori	$a1, $zero, 432
	mul.d	$a0, $a0, $a1
	add.d	$a5, $a5, $a0
	sub.d	$s1, $s1, $s2
	add.d	$fp, $fp, $s7
	bgtz	$s1, .LBB176_4
.LBB176_12:                             # %_ZSt23__copy_move_backward_a1ILb1EPN2PP3CmdES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 8                     # 8-byte Folded Reload
	st.d	$a0, $a3, 24
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 24
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a1, $a2, 24
	st.d	$a5, $a3, 0
	st.d	$s6, $a3, 8
	addi.d	$a4, $a0, -8
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	st.d	$a0, $a3, 16
	beq	$a4, $a1, .LBB176_24
# %bb.13:
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	addi.w	$a0, $zero, -432
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$a0, $a0, -1973
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	b	.LBB176_15
	.p2align	4, , 16
.LBB176_14:                             # %_ZSt23__copy_move_backward_a1ILb1EPN2PP3CmdES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit64
                                        #   in Loop: Header=BB176_15 Depth=1
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 8                     # 8-byte Folded Reload
	st.d	$a0, $a3, 24
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a0, $a2, 24
	st.d	$a5, $a3, 0
	st.d	$s6, $a3, 8
	ld.d	$a4, $sp, 24                    # 8-byte Folded Reload
	addi.d	$a4, $a4, -8
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	st.d	$a1, $a3, 16
	beq	$a4, $a0, .LBB176_24
.LBB176_15:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB176_17 Depth 2
                                        #       Child Loop BB176_21 Depth 3
	st.d	$a4, $sp, 24                    # 8-byte Folded Spill
	ld.d	$a0, $a4, 0
	addi.d	$a0, $a0, 432
	ori	$s4, $zero, 1
	b	.LBB176_17
	.p2align	4, , 16
.LBB176_16:                             #   in Loop: Header=BB176_17 Depth=2
	sub.d	$a0, $a0, $s7
	slli.d	$a1, $a0, 3
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	ldx.d	$s6, $a2, $a1
	alsl.d	$a0, $a0, $a2, 3
	addi.d	$a1, $s6, 432
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	move	$a5, $s6
	sub.d	$s4, $s4, $s7
	move	$a0, $fp
	blez	$s4, .LBB176_14
.LBB176_17:                             #   Parent Loop BB176_15 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB176_21 Depth 3
	sub.d	$s0, $a5, $s6
	move	$s8, $s6
	beq	$a5, $s6, .LBB176_19
# %bb.18:                               #   in Loop: Header=BB176_17 Depth=2
	srai.d	$a1, $s0, 4
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	slt	$a2, $a1, $s4
	maskeqz	$a1, $a1, $a2
	masknez	$a2, $s4, $a2
	or	$s7, $a1, $a2
	sub.d	$s5, $zero, $s7
	addi.w	$a1, $zero, -432
	mul.d	$s6, $s7, $a1
	move	$s1, $a5
	move	$a1, $a5
	b	.LBB176_20
	.p2align	4, , 16
.LBB176_19:                             # %.thread
                                        #   in Loop: Header=BB176_17 Depth=2
	move	$s1, $a5
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 432
	ori	$s7, $zero, 1
	ld.d	$s6, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 40                    # 8-byte Folded Reload
.LBB176_20:                             # %.lr.ph.i.i49.preheader
                                        #   in Loop: Header=BB176_17 Depth=2
	add.d	$fp, $a0, $s6
	addi.d	$s2, $a1, -432
	addi.d	$s3, $a0, -432
	.p2align	4, , 16
.LBB176_21:                             # %.lr.ph.i.i49
                                        #   Parent Loop BB176_15 Depth=1
                                        #     Parent Loop BB176_17 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, -432
	addi.d	$s6, $s6, 432
	addi.d	$s3, $s3, -432
	bnez	$s6, .LBB176_21
# %bb.22:                               # %_ZSt23__copy_move_backward_a2ILb1EPN2PP3CmdES2_ET1_T0_S4_S3_.exit.loopexit.i53
                                        #   in Loop: Header=BB176_17 Depth=2
	srai.d	$a0, $s0, 4
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	mul.d	$a0, $a0, $a1
	bne	$a0, $s7, .LBB176_16
# %bb.23:                               #   in Loop: Header=BB176_17 Depth=2
	ori	$a0, $zero, 432
	mul.d	$a0, $s5, $a0
	add.d	$a5, $s1, $a0
	move	$s6, $s8
	sub.d	$s4, $s4, $s7
	move	$a0, $fp
	bgtz	$s4, .LBB176_17
	b	.LBB176_14
.LBB176_24:                             # %._crit_edge
	ld.d	$a0, $a2, 0
	ld.d	$fp, $a2, 16
	sub.d	$a0, $fp, $a0
	blez	$a0, .LBB176_46
# %bb.25:                               # %.lr.ph.i9
	srli.d	$a0, $a0, 4
	lu12i.w	$a1, 427197
	ori	$a1, $a1, 2579
	lu32i.d	$a1, -155345
	lu52i.d	$s2, $a1, -1973
	mul.d	$s3, $a0, $s2
	addi.w	$a0, $zero, -432
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	b	.LBB176_27
	.p2align	4, , 16
.LBB176_26:                             #   in Loop: Header=BB176_27 Depth=1
	sub.d	$a0, $a0, $s7
	slli.d	$a1, $a0, 3
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	ldx.d	$s6, $a2, $a1
	alsl.d	$a0, $a0, $a2, 3
	addi.d	$a1, $s6, 432
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	move	$a5, $s6
	sub.d	$s3, $s3, $s7
	add.d	$fp, $fp, $s4
	blez	$s3, .LBB176_46
.LBB176_27:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB176_31 Depth 2
	sub.d	$a0, $a5, $s6
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s2
	move	$a2, $a0
	move	$a1, $a5
	bne	$a5, $s6, .LBB176_29
# %bb.28:                               #   in Loop: Header=BB176_27 Depth=1
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 432
	ori	$a2, $zero, 1
.LBB176_29:                             #   in Loop: Header=BB176_27 Depth=1
	slt	$a3, $a2, $s3
	masknez	$a4, $s3, $a3
	maskeqz	$a2, $a2, $a3
	or	$s7, $a2, $a4
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	mul.d	$s4, $s7, $a2
	beqz	$s7, .LBB176_33
# %bb.30:                               # %.lr.ph.i.i19.preheader
                                        #   in Loop: Header=BB176_27 Depth=1
	move	$s8, $a5
	addi.d	$s0, $a1, -432
	addi.d	$s1, $fp, -432
	move	$s5, $s4
	.p2align	4, , 16
.LBB176_31:                             # %.lr.ph.i.i19
                                        #   Parent Loop BB176_27 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, -432
	addi.d	$s5, $s5, 432
	addi.d	$s1, $s1, -432
	bnez	$s5, .LBB176_31
# %bb.32:                               # %_ZSt23__copy_move_backward_a2ILb1EPN2PP3CmdES2_ET1_T0_S4_S3_.exit.loopexit.i23
                                        #   in Loop: Header=BB176_27 Depth=1
	move	$a5, $s8
	sub.d	$a0, $s8, $s6
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s2
.LBB176_33:                             # %_ZSt23__copy_move_backward_a2ILb1EPN2PP3CmdES2_ET1_T0_S4_S3_.exit.i30
                                        #   in Loop: Header=BB176_27 Depth=1
	bne	$a0, $s7, .LBB176_26
# %bb.34:                               #   in Loop: Header=BB176_27 Depth=1
	sub.d	$a0, $zero, $s7
	ori	$a1, $zero, 432
	mul.d	$a0, $a0, $a1
	add.d	$a5, $a5, $a0
	sub.d	$s3, $s3, $s7
	add.d	$fp, $fp, $s4
	bgtz	$s3, .LBB176_27
	b	.LBB176_46
.LBB176_35:
	ld.d	$a0, $a1, 0
	ld.d	$fp, $a2, 0
	ld.d	$a5, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$a1, $a3, 16
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a1, $a3, 24
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	sub.d	$a0, $fp, $a0
	blez	$a0, .LBB176_46
# %bb.36:                               # %.lr.ph.i69
	srli.d	$a0, $a0, 4
	lu12i.w	$a1, 427197
	ori	$a1, $a1, 2579
	lu32i.d	$a1, -155345
	lu52i.d	$s2, $a1, -1973
	mul.d	$s3, $a0, $s2
	addi.w	$a0, $zero, -432
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	b	.LBB176_38
	.p2align	4, , 16
.LBB176_37:                             #   in Loop: Header=BB176_38 Depth=1
	sub.d	$a0, $a0, $s7
	slli.d	$a1, $a0, 3
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	ldx.d	$s6, $a2, $a1
	alsl.d	$a0, $a0, $a2, 3
	addi.d	$a1, $s6, 432
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	move	$a5, $s6
	sub.d	$s3, $s3, $s7
	add.d	$fp, $fp, $s4
	blez	$s3, .LBB176_46
.LBB176_38:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB176_42 Depth 2
	sub.d	$a0, $a5, $s6
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s2
	move	$a2, $a0
	move	$a1, $a5
	bne	$a5, $s6, .LBB176_40
# %bb.39:                               #   in Loop: Header=BB176_38 Depth=1
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 432
	ori	$a2, $zero, 1
.LBB176_40:                             #   in Loop: Header=BB176_38 Depth=1
	slt	$a3, $a2, $s3
	masknez	$a4, $s3, $a3
	maskeqz	$a2, $a2, $a3
	or	$s7, $a2, $a4
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	mul.d	$s4, $s7, $a2
	beqz	$s7, .LBB176_44
# %bb.41:                               # %.lr.ph.i.i79.preheader
                                        #   in Loop: Header=BB176_38 Depth=1
	move	$s8, $a5
	addi.d	$s0, $a1, -432
	addi.d	$s1, $fp, -432
	move	$s5, $s4
	.p2align	4, , 16
.LBB176_42:                             # %.lr.ph.i.i79
                                        #   Parent Loop BB176_38 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, -432
	addi.d	$s5, $s5, 432
	addi.d	$s1, $s1, -432
	bnez	$s5, .LBB176_42
# %bb.43:                               # %_ZSt23__copy_move_backward_a2ILb1EPN2PP3CmdES2_ET1_T0_S4_S3_.exit.loopexit.i83
                                        #   in Loop: Header=BB176_38 Depth=1
	move	$a5, $s8
	sub.d	$a0, $s8, $s6
	srai.d	$a0, $a0, 4
	mul.d	$a0, $a0, $s2
.LBB176_44:                             # %_ZSt23__copy_move_backward_a2ILb1EPN2PP3CmdES2_ET1_T0_S4_S3_.exit.i90
                                        #   in Loop: Header=BB176_38 Depth=1
	bne	$a0, $s7, .LBB176_37
# %bb.45:                               #   in Loop: Header=BB176_38 Depth=1
	sub.d	$a0, $zero, $s7
	ori	$a1, $zero, 432
	mul.d	$a0, $a0, $a1
	add.d	$a5, $a5, $a0
	sub.d	$s3, $s3, $s7
	add.d	$fp, $fp, $s4
	bgtz	$s3, .LBB176_38
.LBB176_46:                             # %_ZSt23__copy_move_backward_a1ILb1EPN2PP3CmdES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit34
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	st.d	$a5, $a0, 0
	st.d	$s6, $a0, 8
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	st.d	$a1, $a0, 16
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	st.d	$a1, $a0, 24
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.Lfunc_end176:
	.size	_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_, .Lfunc_end176-_ZSt24__copy_move_backward_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP3CmdaSEOS0_,"axG",@progbits,_ZN2PP3CmdaSEOS0_,comdat
	.weak	_ZN2PP3CmdaSEOS0_               # -- Begin function _ZN2PP3CmdaSEOS0_
	.p2align	5
	.type	_ZN2PP3CmdaSEOS0_,@function
_ZN2PP3CmdaSEOS0_:                      # @_ZN2PP3CmdaSEOS0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a0
	ld.d	$a1, $a1, 0
	ld.d	$a0, $a0, 8
	addi.d	$a3, $fp, 24
	st.d	$a1, $fp, 0
	beq	$a0, $a3, .LBB177_3
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $s0, 8
	addi.d	$a2, $s0, 24
	beq	$a1, $a2, .LBB177_7
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a3, $a3, 0
	b	.LBB177_5
.LBB177_3:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $s0, 8
	addi.d	$a2, $s0, 24
	beq	$a1, $a2, .LBB177_7
# %bb.4:
	move	$a0, $zero
                                        # implicit-def: $r7
.LBB177_5:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i
	ld.d	$a4, $s0, 16
	st.d	$a1, $fp, 8
	st.d	$a4, $fp, 16
	ld.d	$a1, $s0, 24
	st.d	$a1, $fp, 24
	beqz	$a0, .LBB177_11
# %bb.6:
	st.d	$a0, $s0, 8
	st.d	$a3, $s0, 24
	b	.LBB177_14
.LBB177_7:
	beq	$s0, $fp, .LBB177_103
# %bb.8:
	ld.d	$a2, $s0, 16
	beqz	$a2, .LBB177_13
# %bb.9:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB177_12
# %bb.10:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB177_13
.LBB177_11:
	st.d	$a2, $s0, 8
	move	$a0, $a2
	b	.LBB177_14
.LBB177_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB177_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $s0, 16
	ld.d	$a1, $fp, 8
	st.d	$a0, $fp, 16
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s0, 8
.LBB177_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $s0, 16
	st.b	$zero, $a0, 0
	ld.d	$a1, $s0, 40
	ld.d	$a0, $fp, 48
	addi.d	$a3, $fp, 64
	st.d	$a1, $fp, 40
	beq	$a0, $a3, .LBB177_17
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i15
	ld.d	$a1, $s0, 48
	addi.d	$a2, $s0, 64
	beq	$a1, $a2, .LBB177_21
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i16
	ld.d	$a3, $a3, 0
	b	.LBB177_19
.LBB177_17:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i24
	ld.d	$a1, $s0, 48
	addi.d	$a2, $s0, 64
	beq	$a1, $a2, .LBB177_21
# %bb.18:
	move	$a0, $zero
                                        # implicit-def: $r7
.LBB177_19:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i17
	ld.d	$a4, $s0, 56
	st.d	$a1, $fp, 48
	st.d	$a4, $fp, 56
	ld.d	$a1, $s0, 64
	st.d	$a1, $fp, 64
	beqz	$a0, .LBB177_25
# %bb.20:
	st.d	$a0, $s0, 48
	st.d	$a3, $s0, 64
	b	.LBB177_28
.LBB177_21:
	beq	$s0, $fp, .LBB177_104
# %bb.22:
	ld.d	$a2, $s0, 56
	beqz	$a2, .LBB177_27
# %bb.23:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB177_26
# %bb.24:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB177_27
.LBB177_25:
	st.d	$a2, $s0, 48
	move	$a0, $a2
	b	.LBB177_28
.LBB177_26:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB177_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i22
	ld.d	$a0, $s0, 56
	ld.d	$a1, $fp, 48
	st.d	$a0, $fp, 56
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s0, 48
.LBB177_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit25
	st.d	$zero, $s0, 56
	st.b	$zero, $a0, 0
	vld	$vr0, $s0, 80
	ld.d	$a0, $fp, 96
	addi.d	$a3, $fp, 112
	vst	$vr0, $fp, 80
	beq	$a0, $a3, .LBB177_31
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i26
	ld.d	$a1, $s0, 96
	addi.d	$a2, $s0, 112
	beq	$a1, $a2, .LBB177_35
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i27
	ld.d	$a3, $a3, 0
	b	.LBB177_33
.LBB177_31:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i35
	ld.d	$a1, $s0, 96
	addi.d	$a2, $s0, 112
	beq	$a1, $a2, .LBB177_35
# %bb.32:
	move	$a0, $zero
                                        # implicit-def: $r7
.LBB177_33:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i28
	ld.d	$a4, $s0, 104
	st.d	$a1, $fp, 96
	st.d	$a4, $fp, 104
	ld.d	$a1, $s0, 112
	st.d	$a1, $fp, 112
	beqz	$a0, .LBB177_39
# %bb.34:
	st.d	$a0, $s0, 96
	st.d	$a3, $s0, 112
	b	.LBB177_42
.LBB177_35:
	beq	$s0, $fp, .LBB177_105
# %bb.36:
	ld.d	$a2, $s0, 104
	beqz	$a2, .LBB177_41
# %bb.37:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB177_40
# %bb.38:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB177_41
.LBB177_39:
	st.d	$a2, $s0, 96
	move	$a0, $a2
	b	.LBB177_42
.LBB177_40:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB177_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i33
	ld.d	$a0, $s0, 104
	ld.d	$a1, $fp, 96
	st.d	$a0, $fp, 104
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s0, 96
.LBB177_42:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit36
	st.d	$zero, $s0, 104
	st.b	$zero, $a0, 0
	ld.d	$a0, $fp, 128
	addi.d	$a3, $fp, 144
	beq	$a0, $a3, .LBB177_45
# %bb.43:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i37
	ld.d	$a1, $s0, 128
	addi.d	$a2, $s0, 144
	beq	$a1, $a2, .LBB177_49
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i38
	ld.d	$a3, $a3, 0
	b	.LBB177_47
.LBB177_45:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i46
	ld.d	$a1, $s0, 128
	addi.d	$a2, $s0, 144
	beq	$a1, $a2, .LBB177_49
# %bb.46:
	move	$a0, $zero
                                        # implicit-def: $r7
.LBB177_47:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i39
	ld.d	$a4, $s0, 136
	st.d	$a1, $fp, 128
	st.d	$a4, $fp, 136
	ld.d	$a1, $s0, 144
	st.d	$a1, $fp, 144
	beqz	$a0, .LBB177_53
# %bb.48:
	st.d	$a0, $s0, 128
	st.d	$a3, $s0, 144
	b	.LBB177_56
.LBB177_49:
	beq	$s0, $fp, .LBB177_106
# %bb.50:
	ld.d	$a2, $s0, 136
	beqz	$a2, .LBB177_55
# %bb.51:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB177_54
# %bb.52:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB177_55
.LBB177_53:
	st.d	$a2, $s0, 128
	move	$a0, $a2
	b	.LBB177_56
.LBB177_54:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB177_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i44
	ld.d	$a0, $s0, 136
	ld.d	$a1, $fp, 128
	st.d	$a0, $fp, 136
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s0, 128
.LBB177_56:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit47
	st.d	$zero, $s0, 136
	st.b	$zero, $a0, 0
	addi.d	$a0, $fp, 160
	addi.d	$a1, $s0, 160
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 240
	addi.d	$a3, $fp, 256
	beq	$a0, $a3, .LBB177_59
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i48
	ld.d	$a1, $s0, 240
	addi.d	$a2, $s0, 256
	beq	$a1, $a2, .LBB177_63
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i49
	ld.d	$a3, $a3, 0
	b	.LBB177_61
.LBB177_59:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i57
	ld.d	$a1, $s0, 240
	addi.d	$a2, $s0, 256
	beq	$a1, $a2, .LBB177_63
# %bb.60:
	move	$a0, $zero
                                        # implicit-def: $r7
.LBB177_61:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i50
	ld.d	$a4, $s0, 248
	st.d	$a1, $fp, 240
	st.d	$a4, $fp, 248
	ld.d	$a1, $s0, 256
	st.d	$a1, $fp, 256
	beqz	$a0, .LBB177_67
# %bb.62:
	st.d	$a0, $s0, 240
	st.d	$a3, $s0, 256
	b	.LBB177_70
.LBB177_63:
	beq	$s0, $fp, .LBB177_107
# %bb.64:
	ld.d	$a2, $s0, 248
	beqz	$a2, .LBB177_69
# %bb.65:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB177_68
# %bb.66:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB177_69
.LBB177_67:
	st.d	$a2, $s0, 240
	move	$a0, $a2
	b	.LBB177_70
.LBB177_68:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB177_69:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i55
	ld.d	$a0, $s0, 248
	ld.d	$a1, $fp, 240
	st.d	$a0, $fp, 248
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s0, 240
.LBB177_70:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit58
	st.d	$zero, $s0, 248
	st.b	$zero, $a0, 0
	ld.d	$a0, $fp, 272
	addi.d	$a3, $fp, 288
	beq	$a0, $a3, .LBB177_73
# %bb.71:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i59
	ld.d	$a1, $s0, 272
	addi.d	$a2, $s0, 288
	beq	$a1, $a2, .LBB177_77
# %bb.72:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i60
	ld.d	$a3, $a3, 0
	b	.LBB177_75
.LBB177_73:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i68
	ld.d	$a1, $s0, 272
	addi.d	$a2, $s0, 288
	beq	$a1, $a2, .LBB177_77
# %bb.74:
	move	$a0, $zero
                                        # implicit-def: $r7
.LBB177_75:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i61
	ld.d	$a4, $s0, 280
	st.d	$a1, $fp, 272
	st.d	$a4, $fp, 280
	ld.d	$a1, $s0, 288
	st.d	$a1, $fp, 288
	beqz	$a0, .LBB177_81
# %bb.76:
	st.d	$a0, $s0, 272
	st.d	$a3, $s0, 288
	b	.LBB177_84
.LBB177_77:
	beq	$s0, $fp, .LBB177_108
# %bb.78:
	ld.d	$a2, $s0, 280
	beqz	$a2, .LBB177_83
# %bb.79:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB177_82
# %bb.80:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB177_83
.LBB177_81:
	st.d	$a2, $s0, 272
	move	$a0, $a2
	b	.LBB177_84
.LBB177_82:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB177_83:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i66
	ld.d	$a0, $s0, 280
	ld.d	$a1, $fp, 272
	st.d	$a0, $fp, 280
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s0, 272
.LBB177_84:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit69
	st.d	$zero, $s0, 280
	st.b	$zero, $a0, 0
	vld	$vr0, $s0, 304
	ld.d	$s1, $fp, 304
	ld.d	$s3, $fp, 312
	vst	$vr0, $fp, 304
	ld.d	$a0, $s0, 320
	ld.d	$s2, $fp, 320
	st.d	$a0, $fp, 320
	st.d	$zero, $s0, 320
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $s0, 304
	beq	$s1, $s3, .LBB177_89
# %bb.85:                               # %.lr.ph.i.i.i.i.preheader
	addi.d	$s4, $s1, 16
	b	.LBB177_87
	.p2align	4, , 16
.LBB177_86:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB177_87 Depth=1
	addi.d	$a0, $s4, 16
	addi.d	$s4, $s4, 32
	beq	$a0, $s3, .LBB177_89
.LBB177_87:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, -16
	beq	$s4, $a0, .LBB177_86
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB177_87 Depth=1
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB177_86
.LBB177_89:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i
	beqz	$s1, .LBB177_91
# %bb.90:
	sub.d	$a1, $s2, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB177_91:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_.exit
	vld	$vr0, $s0, 328
	ld.d	$s1, $fp, 328
	ld.d	$s3, $fp, 336
	vst	$vr0, $fp, 328
	ld.d	$a0, $s0, 344
	ld.d	$s2, $fp, 344
	st.d	$a0, $fp, 344
	st.d	$zero, $s0, 344
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $s0, 328
	beq	$s1, $s3, .LBB177_96
# %bb.92:                               # %.lr.ph.i.i.i.i71.preheader
	addi.d	$s4, $s1, 16
	b	.LBB177_94
	.p2align	4, , 16
.LBB177_93:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i74
                                        #   in Loop: Header=BB177_94 Depth=1
	addi.d	$a0, $s4, 16
	addi.d	$s4, $s4, 32
	beq	$a0, $s3, .LBB177_96
.LBB177_94:                             # %.lr.ph.i.i.i.i71
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, -16
	beq	$s4, $a0, .LBB177_93
# %bb.95:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i73
                                        #   in Loop: Header=BB177_94 Depth=1
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB177_93
.LBB177_96:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i76
	beqz	$s1, .LBB177_98
# %bb.97:
	sub.d	$a1, $s2, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB177_98:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_.exit79
	ld.d	$a0, $fp, 352
	addi.d	$s1, $fp, 352
	addi.d	$s2, $s0, 352
	beqz	$a0, .LBB177_100
# %bb.99:
	ld.d	$a1, $fp, 384
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $fp, 352
	st.w	$zero, $fp, 360
	st.d	$zero, $fp, 368
	st.w	$zero, $fp, 376
	st.d	$zero, $fp, 384
.LBB177_100:                            # %_ZNSt6vectorIbSaIbEEaSEOS1_.exit
	ld.d	$a0, $s2, 32
	st.d	$a0, $s1, 32
	vld	$vr0, $s2, 16
	vst	$vr0, $s1, 16
	vld	$vr0, $s2, 0
	vst	$vr0, $s1, 0
	st.d	$zero, $s0, 352
	st.w	$zero, $s0, 360
	st.d	$zero, $s0, 368
	st.w	$zero, $s0, 376
	st.d	$zero, $s0, 384
	ld.d	$a0, $fp, 392
	addi.d	$s1, $fp, 392
	beqz	$a0, .LBB177_102
# %bb.101:
	ld.d	$a1, $fp, 424
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $fp, 392
	st.w	$zero, $fp, 400
	st.d	$zero, $fp, 408
	st.w	$zero, $fp, 416
	st.d	$zero, $fp, 424
.LBB177_102:                            # %_ZNSt6vectorIbSaIbEEaSEOS1_.exit88
	ld.d	$a0, $s0, 424
	st.d	$a0, $s1, 32
	vld	$vr0, $s0, 408
	vst	$vr0, $s1, 16
	vld	$vr0, $s0, 392
	vst	$vr0, $s1, 0
	st.d	$zero, $s0, 392
	st.w	$zero, $s0, 400
	st.d	$zero, $s0, 408
	st.w	$zero, $s0, 416
	st.d	$zero, $s0, 424
	move	$a0, $fp
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB177_103:
	move	$a0, $a1
	b	.LBB177_14
.LBB177_104:
	move	$a0, $a1
	b	.LBB177_28
.LBB177_105:
	move	$a0, $a1
	b	.LBB177_42
.LBB177_106:
	move	$a0, $a1
	b	.LBB177_56
.LBB177_107:
	move	$a0, $a1
	b	.LBB177_70
.LBB177_108:
	move	$a0, $a1
	b	.LBB177_84
.Lfunc_end177:
	.size	_ZN2PP3CmdaSEOS0_, .Lfunc_end177-_ZN2PP3CmdaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE: # @_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE
.Lfunc_begin98:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception98
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	vld	$vr0, $a0, 0
	ld.d	$s1, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s3, $a0, 32
	ld.d	$s4, $a0, 40
	ld.d	$s5, $a0, 48
	ld.d	$s6, $a0, 56
	ld.d	$s7, $a0, 64
	ld.d	$s8, $a0, 72
	move	$fp, $a1
	vst	$vr0, $sp, 40
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	vld	$vr0, $sp, 40
	vst	$vr0, $fp, 0
	st.d	$s1, $fp, 16
	st.d	$s2, $fp, 24
	st.d	$s3, $fp, 32
	st.d	$s4, $fp, 40
	st.d	$s5, $fp, 48
	st.d	$s6, $fp, 56
	st.d	$s7, $fp, 64
	st.d	$s8, $fp, 72
	st.d	$s1, $sp, 40
	st.d	$s2, $sp, 48
	st.d	$s3, $sp, 56
	st.d	$s4, $sp, 64
	st.d	$s5, $sp, 8
	st.d	$s6, $sp, 16
	st.d	$s7, $sp, 24
	st.d	$s8, $sp, 32
.Ltmp3464:
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp3465:
# %bb.1:                                # %.noexc.i
	ld.d	$s0, $fp, 72
	bgeu	$s4, $s0, .LBB178_4
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$a1, $s4
	.p2align	4, , 16
.LBB178_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s5, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s5
	bltu	$s5, $s0, .LBB178_3
.LBB178_4:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE5clearEv.exit
	st.d	$s1, $fp, 48
	st.d	$s2, $fp, 56
	st.d	$s3, $fp, 64
	st.d	$s4, $fp, 72
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB178_5:
.Ltmp3466:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end178:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE, .Lfunc_end178-_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_move_assign1EOS3_St17integral_constantIbLb1EE,comdat
	.p2align	2, 0x0
GCC_except_table178:
.Lexception98:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end98-.Lcst_begin98
.Lcst_begin98:
	.uleb128 .Lfunc_begin98-.Lfunc_begin98  # >> Call Site 1 <<
	.uleb128 .Ltmp3464-.Lfunc_begin98       #   Call between .Lfunc_begin98 and .Ltmp3464
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3464-.Lfunc_begin98       # >> Call Site 2 <<
	.uleb128 .Ltmp3465-.Ltmp3464            #   Call between .Ltmp3464 and .Ltmp3465
	.uleb128 .Ltmp3466-.Lfunc_begin98       #     jumps to .Ltmp3466
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3465-.Lfunc_begin98       # >> Call Site 3 <<
	.uleb128 .Lfunc_end178-.Ltmp3465        #   Call between .Ltmp3465 and .Lfunc_end178
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end98:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,"axG",@progbits,_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,comdat
	.weak	_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_ # -- Begin function _ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.p2align	5
	.type	_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,@function
_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_: # @_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a1, 24
	ld.d	$a4, $a2, 24
	ld.d	$fp, $a1, 0
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	beq	$a5, $a4, .LBB179_27
# %bb.1:
	st.d	$a2, $sp, 24                    # 8-byte Folded Spill
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $a1, 16
	ld.d	$a4, $a3, 0
	ld.d	$a2, $a3, 8
	ld.d	$a6, $a3, 16
	st.d	$a3, $sp, 16                    # 8-byte Folded Spill
	ld.d	$s6, $a3, 24
	sub.d	$a0, $a0, $fp
	blez	$a0, .LBB179_9
# %bb.2:                                # %.lr.ph.i
	srli.d	$a0, $a0, 4
	lu12i.w	$a1, 427197
	ori	$a1, $a1, 2579
	lu32i.d	$a1, -155345
	lu52i.d	$a3, $a1, -1973
	mul.d	$s2, $a0, $a3
	b	.LBB179_4
	.p2align	4, , 16
.LBB179_3:                              #   in Loop: Header=BB179_4 Depth=1
	slli.d	$a1, $a0, 3
	ld.d	$a4, $sp, 40                    # 8-byte Folded Reload
	ldx.d	$a2, $a4, $a1
	alsl.d	$s6, $a0, $a4, 3
	addi.d	$a6, $a2, 432
	move	$a4, $a2
	sub.d	$s2, $s2, $s1
	add.d	$fp, $fp, $s0
	blez	$s2, .LBB179_9
.LBB179_4:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB179_6 Depth 2
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	move	$s7, $a2
	sub.d	$a0, $a6, $a4
	srai.d	$a0, $a0, 4
	move	$s6, $a3
	mul.d	$a0, $a0, $a3
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$s1, $a0, $a1
	ori	$a0, $zero, 432
	mul.d	$s0, $s1, $a0
	st.d	$a6, $sp, 48                    # 8-byte Folded Spill
	move	$s8, $a4
	beq	$a6, $a4, .LBB179_7
# %bb.5:                                # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB179_4 Depth=1
	move	$s5, $s0
	move	$s3, $s8
	move	$s4, $fp
	.p2align	4, , 16
.LBB179_6:                              # %.lr.ph.i.i
                                        #   Parent Loop BB179_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 432
	addi.d	$s5, $s5, -432
	addi.d	$s4, $s4, 432
	bnez	$s5, .LBB179_6
.LBB179_7:                              # %_ZSt14__copy_move_a2ILb1EPN2PP3CmdES2_S2_ET2_T0_T1_S3_.exit.i
                                        #   in Loop: Header=BB179_4 Depth=1
	sub.d	$a0, $s8, $s7
	srai.d	$a0, $a0, 4
	move	$a3, $s6
	mul.d	$a0, $a0, $s6
	add.d	$a0, $a0, $s1
	bnez	$a0, .LBB179_3
# %bb.8:                                #   in Loop: Header=BB179_4 Depth=1
	move	$a2, $s7
	ori	$a0, $zero, 432
	mul.d	$a0, $s1, $a0
	add.d	$a4, $s8, $a0
	ld.d	$a6, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	sub.d	$s2, $s2, $s1
	add.d	$fp, $fp, $s0
	bgtz	$s2, .LBB179_4
.LBB179_9:                              # %_ZSt14__copy_move_a1ILb1EPN2PP3CmdES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit
	ld.d	$a3, $sp, 16                    # 8-byte Folded Reload
	st.d	$s6, $a3, 24
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 24
	ld.d	$a5, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a1, $a5, 24
	st.d	$a4, $a3, 0
	st.d	$a2, $a3, 8
	addi.d	$a7, $a0, 8
	st.d	$a6, $a3, 16
	beq	$a7, $a1, .LBB179_19
# %bb.10:
	lu12i.w	$a0, 427197
	ori	$a0, $a0, 2579
	lu32i.d	$a0, -155345
	lu52i.d	$a3, $a0, -1973
	b	.LBB179_12
	.p2align	4, , 16
.LBB179_11:                             # %_ZSt14__copy_move_a1ILb1EPN2PP3CmdES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit48
                                        #   in Loop: Header=BB179_12 Depth=1
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	st.d	$s6, $a1, 24
	ld.d	$a5, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a5, 24
	st.d	$a4, $a1, 0
	st.d	$a2, $a1, 8
	ld.d	$a7, $sp, 32                    # 8-byte Folded Reload
	addi.d	$a7, $a7, 8
	st.d	$a6, $a1, 16
	beq	$a7, $a0, .LBB179_19
.LBB179_12:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB179_14 Depth 2
                                        #       Child Loop BB179_16 Depth 3
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$a7, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s1, $a7, 0
	ori	$fp, $zero, 1
	b	.LBB179_14
	.p2align	4, , 16
.LBB179_13:                             #   in Loop: Header=BB179_14 Depth=2
	slli.d	$a1, $a0, 3
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ldx.d	$a2, $s6, $a1
	alsl.d	$a0, $a0, $s6, 3
	addi.d	$a6, $a2, 432
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	move	$a4, $a2
	sub.d	$fp, $fp, $s5
	add.d	$s1, $s1, $s7
	blez	$fp, .LBB179_11
.LBB179_14:                             #   Parent Loop BB179_12 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB179_16 Depth 3
	move	$s6, $a2
	sub.d	$a0, $a6, $a4
	srai.d	$a0, $a0, 4
	move	$s8, $a3
	mul.d	$a0, $a0, $a3
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$s5, $a0, $a1
	ori	$a0, $zero, 432
	mul.d	$s7, $s5, $a0
	st.d	$a6, $sp, 48                    # 8-byte Folded Spill
	move	$s4, $a4
	beq	$a6, $a4, .LBB179_17
# %bb.15:                               # %.lr.ph.i.i37.preheader
                                        #   in Loop: Header=BB179_14 Depth=2
	move	$s0, $s7
	move	$s2, $s4
	move	$s3, $s1
	.p2align	4, , 16
.LBB179_16:                             # %.lr.ph.i.i37
                                        #   Parent Loop BB179_12 Depth=1
                                        #     Parent Loop BB179_14 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 432
	addi.d	$s0, $s0, -432
	addi.d	$s3, $s3, 432
	bnez	$s0, .LBB179_16
.LBB179_17:                             # %_ZSt14__copy_move_a2ILb1EPN2PP3CmdES2_S2_ET2_T0_T1_S3_.exit.i44
                                        #   in Loop: Header=BB179_14 Depth=2
	sub.d	$a0, $s4, $s6
	srai.d	$a0, $a0, 4
	move	$a3, $s8
	mul.d	$a0, $a0, $s8
	add.d	$a0, $a0, $s5
	bnez	$a0, .LBB179_13
# %bb.18:                               #   in Loop: Header=BB179_14 Depth=2
	move	$a2, $s6
	ori	$a0, $zero, 432
	mul.d	$a0, $s5, $a0
	add.d	$a4, $s4, $a0
	ld.d	$a6, $sp, 48                    # 8-byte Folded Reload
	sub.d	$fp, $fp, $s5
	add.d	$s1, $s1, $s7
	bgtz	$fp, .LBB179_14
	b	.LBB179_11
.LBB179_19:                             # %._crit_edge
	ld.d	$fp, $a5, 8
	ld.d	$a0, $a5, 0
	sub.d	$a0, $a0, $fp
	blez	$a0, .LBB179_35
# %bb.20:                               # %.lr.ph.i9
	srli.d	$a0, $a0, 4
	lu12i.w	$a1, 427197
	ori	$a1, $a1, 2579
	lu32i.d	$a1, -155345
	lu52i.d	$a3, $a1, -1973
	mul.d	$s3, $a0, $a3
	b	.LBB179_22
	.p2align	4, , 16
.LBB179_21:                             #   in Loop: Header=BB179_22 Depth=1
	slli.d	$a1, $a0, 3
	ldx.d	$a2, $s6, $a1
	alsl.d	$s6, $a0, $s6, 3
	addi.d	$a6, $a2, 432
	move	$a4, $a2
	sub.d	$s3, $s3, $s4
	add.d	$fp, $fp, $s2
	blez	$s3, .LBB179_35
.LBB179_22:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB179_24 Depth 2
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	sub.d	$a0, $a6, $a4
	srai.d	$a0, $a0, 4
	move	$s7, $a3
	mul.d	$a0, $a0, $a3
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$s4, $a0, $a1
	ori	$a0, $zero, 432
	mul.d	$s2, $s4, $a0
	st.d	$a6, $sp, 48                    # 8-byte Folded Spill
	move	$s8, $a4
	beq	$a6, $a4, .LBB179_25
# %bb.23:                               # %.lr.ph.i.i15.preheader
                                        #   in Loop: Header=BB179_22 Depth=1
	move	$s5, $s2
	move	$s0, $s8
	move	$s1, $fp
	.p2align	4, , 16
.LBB179_24:                             # %.lr.ph.i.i15
                                        #   Parent Loop BB179_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 432
	addi.d	$s5, $s5, -432
	addi.d	$s1, $s1, 432
	bnez	$s5, .LBB179_24
.LBB179_25:                             # %_ZSt14__copy_move_a2ILb1EPN2PP3CmdES2_S2_ET2_T0_T1_S3_.exit.i22
                                        #   in Loop: Header=BB179_22 Depth=1
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	sub.d	$a0, $s8, $a2
	srai.d	$a0, $a0, 4
	move	$a3, $s7
	mul.d	$a0, $a0, $s7
	add.d	$a0, $a0, $s4
	bnez	$a0, .LBB179_21
# %bb.26:                               #   in Loop: Header=BB179_22 Depth=1
	ori	$a0, $zero, 432
	mul.d	$a0, $s4, $a0
	add.d	$a4, $s8, $a0
	ld.d	$a6, $sp, 48                    # 8-byte Folded Reload
	sub.d	$s3, $s3, $s4
	add.d	$fp, $fp, $s2
	bgtz	$s3, .LBB179_22
	b	.LBB179_35
.LBB179_27:
	ld.d	$a0, $a2, 0
	ld.d	$a4, $a3, 0
	ld.d	$a2, $a3, 8
	ld.d	$a6, $a3, 16
	ld.d	$s6, $a3, 24
	sub.d	$a0, $a0, $fp
	blez	$a0, .LBB179_35
# %bb.28:                               # %.lr.ph.i53
	srli.d	$a0, $a0, 4
	lu12i.w	$a1, 427197
	ori	$a1, $a1, 2579
	lu32i.d	$a1, -155345
	lu52i.d	$a3, $a1, -1973
	mul.d	$s3, $a0, $a3
	b	.LBB179_30
	.p2align	4, , 16
.LBB179_29:                             #   in Loop: Header=BB179_30 Depth=1
	slli.d	$a1, $a0, 3
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ldx.d	$a2, $s6, $a1
	alsl.d	$s6, $a0, $s6, 3
	addi.d	$a6, $a2, 432
	move	$a4, $a2
	sub.d	$s3, $s3, $s5
	add.d	$fp, $fp, $s4
	blez	$s3, .LBB179_35
.LBB179_30:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB179_32 Depth 2
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	move	$s2, $a2
	sub.d	$a0, $a6, $a4
	srai.d	$a0, $a0, 4
	move	$s6, $a3
	mul.d	$a0, $a0, $a3
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$s5, $a0, $a1
	ori	$a0, $zero, 432
	mul.d	$s4, $s5, $a0
	st.d	$a6, $sp, 48                    # 8-byte Folded Spill
	move	$s8, $a4
	beq	$a6, $a4, .LBB179_33
# %bb.31:                               # %.lr.ph.i.i59.preheader
                                        #   in Loop: Header=BB179_30 Depth=1
	move	$s7, $s4
	move	$s0, $s8
	move	$s1, $fp
	.p2align	4, , 16
.LBB179_32:                             # %.lr.ph.i.i59
                                        #   Parent Loop BB179_30 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3CmdaSEOS0_)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 432
	addi.d	$s7, $s7, -432
	addi.d	$s1, $s1, 432
	bnez	$s7, .LBB179_32
.LBB179_33:                             # %_ZSt14__copy_move_a2ILb1EPN2PP3CmdES2_S2_ET2_T0_T1_S3_.exit.i66
                                        #   in Loop: Header=BB179_30 Depth=1
	sub.d	$a0, $s8, $s2
	srai.d	$a0, $a0, 4
	move	$a3, $s6
	mul.d	$a0, $a0, $s6
	add.d	$a0, $a0, $s5
	bnez	$a0, .LBB179_29
# %bb.34:                               #   in Loop: Header=BB179_30 Depth=1
	move	$a2, $s2
	ori	$a0, $zero, 432
	mul.d	$a0, $s5, $a0
	add.d	$a4, $s8, $a0
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a6, $sp, 48                    # 8-byte Folded Reload
	sub.d	$s3, $s3, $s5
	add.d	$fp, $fp, $s4
	bgtz	$s3, .LBB179_30
.LBB179_35:                             # %_ZSt14__copy_move_a1ILb1EPN2PP3CmdES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit26
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	st.d	$a4, $a0, 0
	st.d	$a2, $a0, 8
	st.d	$a6, $a0, 16
	st.d	$s6, $a0, 24
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.Lfunc_end179:
	.size	_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_, .Lfunc_end179-_ZSt15__copy_move_ditILb1EN2PP3CmdERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_ # -- Begin function _ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,@function
_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_: # @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
.Lfunc_begin99:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception99
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srai.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 3
	lu12i.w	$a3, -258112
	ori	$a3, $a3, 4033
	lu32i.d	$a3, 64527
	ld.d	$a4, $fp, 32
	ld.d	$a5, $fp, 16
	lu52i.d	$a3, $a3, 252
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a4, $a5
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	lu12i.w	$a2, 258111
	ori	$a2, $a2, 63
	bstrins.d	$a2, $a2, 53, 36
	beq	$a0, $a2, .LBB180_5
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB180_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB180_3:                              # %_ZNSt5dequeIN2PP12RestartblockESaIS1_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 520
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
.Ltmp3467:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP12RestartblockC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp3468:
# %bb.4:                                # %_ZNSt16allocator_traitsISaIN2PP12RestartblockEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_.exit
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 520
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB180_5:
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a0, $a0, %pc_lo12(.L.str.239)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB180_6:
.Ltmp3469:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 520
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp3470:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3471:
# %bb.7:
.LBB180_8:
.Ltmp3472:
	move	$fp, $a0
.Ltmp3473:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3474:
# %bb.9:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB180_10:
.Ltmp3475:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end180:
	.size	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_, .Lfunc_end180-_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeIN2PP12RestartblockESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table180:
.Lexception99:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end99-.Lcst_begin99
.Lcst_begin99:
	.uleb128 .Lfunc_begin99-.Lfunc_begin99  # >> Call Site 1 <<
	.uleb128 .Ltmp3467-.Lfunc_begin99       #   Call between .Lfunc_begin99 and .Ltmp3467
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3467-.Lfunc_begin99       # >> Call Site 2 <<
	.uleb128 .Ltmp3468-.Ltmp3467            #   Call between .Ltmp3467 and .Ltmp3468
	.uleb128 .Ltmp3469-.Lfunc_begin99       #     jumps to .Ltmp3469
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3468-.Lfunc_begin99       # >> Call Site 3 <<
	.uleb128 .Ltmp3470-.Ltmp3468            #   Call between .Ltmp3468 and .Ltmp3470
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3470-.Lfunc_begin99       # >> Call Site 4 <<
	.uleb128 .Ltmp3471-.Ltmp3470            #   Call between .Ltmp3470 and .Ltmp3471
	.uleb128 .Ltmp3472-.Lfunc_begin99       #     jumps to .Ltmp3472
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3473-.Lfunc_begin99       # >> Call Site 5 <<
	.uleb128 .Ltmp3474-.Ltmp3473            #   Call between .Ltmp3473 and .Ltmp3474
	.uleb128 .Ltmp3475-.Lfunc_begin99       #     jumps to .Ltmp3475
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3474-.Lfunc_begin99       # >> Call Site 6 <<
	.uleb128 .Lfunc_end180-.Ltmp3474        #   Call between .Ltmp3474 and .Lfunc_end180
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end99:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP12RestartblockC2ERKS0_,"axG",@progbits,_ZN2PP12RestartblockC2ERKS0_,comdat
	.weak	_ZN2PP12RestartblockC2ERKS0_    # -- Begin function _ZN2PP12RestartblockC2ERKS0_
	.p2align	5
	.type	_ZN2PP12RestartblockC2ERKS0_,@function
_ZN2PP12RestartblockC2ERKS0_:           # @_ZN2PP12RestartblockC2ERKS0_
.Lfunc_begin100:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception100
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s3, $a1
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
	addi.d	$s0, $fp, 80
	addi.d	$a1, $s3, 80
.Ltmp3476:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp3477:
# %bb.1:
	addi.d	$s1, $fp, 160
	addi.d	$a1, $s3, 160
.Ltmp3479:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp3480:
# %bb.2:
	addi.d	$s2, $fp, 240
	addi.d	$a1, $s3, 240
.Ltmp3482:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp3483:
# %bb.3:
	addi.d	$s4, $fp, 320
	addi.d	$a1, $s3, 320
.Ltmp3485:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp3486:
# %bb.4:
	ld.d	$a0, $s3, 472
	ld.d	$a1, $s3, 440
	addi.d	$s5, $fp, 400
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s3, 448
	ld.d	$a2, $s3, 456
	ld.d	$a3, $s3, 432
	slli.d	$a0, $a0, 9
	ld.d	$a4, $s3, 416
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a1, $a3
	add.d	$a0, $a1, $a0
	sub.d	$s6, $a0, $a4
	ori	$a2, $zero, 80
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp3488:
	move	$a0, $s5
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp3489:
# %bb.5:                                # %.noexc
	ld.d	$a1, $s3, 416
	ld.d	$a0, $s3, 448
	beq	$a1, $a0, .LBB181_12
# %bb.6:                                # %.lr.ph.i.i.i.preheader.i
	ld.d	$a2, $fp, 440
	ld.d	$a5, $fp, 432
	ld.d	$a3, $fp, 416
	ld.d	$a4, $s3, 440
	ld.d	$a6, $s3, 432
	b	.LBB181_8
	.p2align	4, , 16
.LBB181_7:                              # %_ZNSt15_Deque_iteratorIbRbPbEppEv.exit.i.i.i.i
                                        #   in Loop: Header=BB181_8 Depth=1
	beq	$a1, $a0, .LBB181_12
.LBB181_8:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a7, $a1, 0
	addi.d	$a1, $a1, 1
	st.b	$a7, $a3, 0
	beq	$a1, $a6, .LBB181_10
# %bb.9:                                # %_ZNSt15_Deque_iteratorIbRKbPS0_EppEv.exit.i.i.i.i
                                        #   in Loop: Header=BB181_8 Depth=1
	addi.d	$a3, $a3, 1
	bne	$a3, $a5, .LBB181_7
	b	.LBB181_11
	.p2align	4, , 16
.LBB181_10:                             #   in Loop: Header=BB181_8 Depth=1
	ld.d	$a1, $a4, 8
	addi.d	$a4, $a4, 8
	addi.d	$a6, $a1, 512
	addi.d	$a3, $a3, 1
	bne	$a3, $a5, .LBB181_7
.LBB181_11:                             #   in Loop: Header=BB181_8 Depth=1
	ld.d	$a3, $a2, 8
	addi.d	$a2, $a2, 8
	addi.d	$a5, $a3, 512
	b	.LBB181_7
.LBB181_12:                             # %_ZNSt5dequeIbSaIbEEC2ERKS1_.exit
	ld.w	$a0, $s3, 480
	addi.d	$s6, $fp, 504
	st.d	$s6, $fp, 488
	ld.d	$a1, $s3, 496
	ld.d	$s3, $s3, 488
	st.w	$a0, $fp, 480
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a0, .LBB181_15
# %bb.13:                               # %.noexc.i
.Ltmp3491:
	addi.d	$s7, $fp, 488
	addi.d	$a1, $sp, 8
	move	$a0, $s7
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3492:
# %bb.14:                               # %.noexc20
	ld.d	$a1, $sp, 8
	st.d	$a0, $s7, 0
	st.d	$a1, $s6, 0
	move	$s6, $a0
.LBB181_15:                             # %._crit_edge.i.i
	addi.w	$a0, $zero, -1
	beq	$a1, $a0, .LBB181_19
# %bb.16:                               # %._crit_edge.i.i
	bnez	$a1, .LBB181_18
# %bb.17:
	ld.b	$a0, $s3, 0
	st.b	$a0, $s6, 0
	b	.LBB181_19
.LBB181_18:
	addi.d	$a2, $a1, 1
	move	$a0, $s6
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB181_19:
	ld.d	$a0, $sp, 8
	st.d	$a0, $fp, 496
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB181_20:
.Ltmp3493:
	move	$s3, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB181_22
.LBB181_21:
.Ltmp3490:
	move	$s3, $a0
.LBB181_22:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB181_24
.LBB181_23:
.Ltmp3487:
	move	$s3, $a0
.LBB181_24:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB181_26
.LBB181_25:
.Ltmp3484:
	move	$s3, $a0
.LBB181_26:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB181_28
.LBB181_27:
.Ltmp3481:
	move	$s3, $a0
.LBB181_28:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB181_29:
.Ltmp3478:
	move	$s3, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end181:
	.size	_ZN2PP12RestartblockC2ERKS0_, .Lfunc_end181-_ZN2PP12RestartblockC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP12RestartblockC2ERKS0_,"aG",@progbits,_ZN2PP12RestartblockC2ERKS0_,comdat
	.p2align	2, 0x0
GCC_except_table181:
.Lexception100:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end100-.Lcst_begin100
.Lcst_begin100:
	.uleb128 .Lfunc_begin100-.Lfunc_begin100 # >> Call Site 1 <<
	.uleb128 .Ltmp3476-.Lfunc_begin100      #   Call between .Lfunc_begin100 and .Ltmp3476
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3476-.Lfunc_begin100      # >> Call Site 2 <<
	.uleb128 .Ltmp3477-.Ltmp3476            #   Call between .Ltmp3476 and .Ltmp3477
	.uleb128 .Ltmp3478-.Lfunc_begin100      #     jumps to .Ltmp3478
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3479-.Lfunc_begin100      # >> Call Site 3 <<
	.uleb128 .Ltmp3480-.Ltmp3479            #   Call between .Ltmp3479 and .Ltmp3480
	.uleb128 .Ltmp3481-.Lfunc_begin100      #     jumps to .Ltmp3481
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3482-.Lfunc_begin100      # >> Call Site 4 <<
	.uleb128 .Ltmp3483-.Ltmp3482            #   Call between .Ltmp3482 and .Ltmp3483
	.uleb128 .Ltmp3484-.Lfunc_begin100      #     jumps to .Ltmp3484
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3485-.Lfunc_begin100      # >> Call Site 5 <<
	.uleb128 .Ltmp3486-.Ltmp3485            #   Call between .Ltmp3485 and .Ltmp3486
	.uleb128 .Ltmp3487-.Lfunc_begin100      #     jumps to .Ltmp3487
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3486-.Lfunc_begin100      # >> Call Site 6 <<
	.uleb128 .Ltmp3488-.Ltmp3486            #   Call between .Ltmp3486 and .Ltmp3488
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3488-.Lfunc_begin100      # >> Call Site 7 <<
	.uleb128 .Ltmp3489-.Ltmp3488            #   Call between .Ltmp3488 and .Ltmp3489
	.uleb128 .Ltmp3490-.Lfunc_begin100      #     jumps to .Ltmp3490
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3491-.Lfunc_begin100      # >> Call Site 8 <<
	.uleb128 .Ltmp3492-.Ltmp3491            #   Call between .Ltmp3491 and .Ltmp3492
	.uleb128 .Ltmp3493-.Lfunc_begin100      #     jumps to .Ltmp3493
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3492-.Lfunc_begin100      # >> Call Site 9 <<
	.uleb128 .Lfunc_end181-.Ltmp3492        #   Call between .Ltmp3492 and .Lfunc_end181
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end100:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"axG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.weak	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_ # -- Begin function _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.p2align	5
	.type	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,@function
_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_: # @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
.Lfunc_begin101:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception101
# %bb.0:                                # %_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS6_m.exit
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s0, $a1
	ld.d	$a1, $a1, 72
	ld.d	$a2, $s0, 40
	move	$fp, $a0
	sub.d	$a0, $a1, $a2
	srli.d	$a0, $a0, 3
	sltu	$a1, $zero, $a1
	ld.d	$a2, $s0, 48
	ld.d	$a3, $s0, 56
	sub.d	$a0, $a0, $a1
	ld.d	$a1, $s0, 32
	ld.d	$a4, $s0, 16
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 5
	alsl.d	$a0, $a0, $a2, 4
	sub.d	$a1, $a1, $a4
	srai.d	$a1, $a1, 5
	add.d	$s1, $a0, $a1
	ori	$a2, $zero, 80
	move	$a0, $fp
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	ld.d	$s2, $s0, 16
	ld.d	$s4, $s0, 32
	ld.d	$s5, $s0, 40
	ld.d	$s3, $s0, 48
	ld.d	$s0, $fp, 16
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	ld.d	$a2, $fp, 40
	st.d	$s0, $sp, 0
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 16
	st.d	$a2, $sp, 24
	st.d	$s0, $sp, 32
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
	addi.d	$a0, $sp, 0
	st.d	$a0, $sp, 64
	beq	$s2, $s3, .LBB182_14
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	ori	$s6, $zero, 16
	addi.w	$s7, $zero, -1
	b	.LBB182_3
	.p2align	4, , 16
.LBB182_2:                              # %_ZNSt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS5_PS5_EppEv.exit.i.i.i
                                        #   in Loop: Header=BB182_3 Depth=1
	beq	$s2, $s3, .LBB182_14
.LBB182_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s2, 8
	ld.d	$s1, $s2, 0
	st.d	$a1, $sp, 72
	bltu	$a1, $s6, .LBB182_6
# %bb.4:                                # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB182_3 Depth=1
.Ltmp3494:
	addi.d	$a1, $sp, 72
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3495:
# %bb.5:                                # %.noexc.i.i.i
                                        #   in Loop: Header=BB182_3 Depth=1
	ld.d	$a1, $sp, 72
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB182_6:                              # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB182_3 Depth=1
	beq	$a1, $s7, .LBB182_9
# %bb.7:                                # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB182_3 Depth=1
	bnez	$a1, .LBB182_13
# %bb.8:                                #   in Loop: Header=BB182_3 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
.LBB182_9:                              #   in Loop: Header=BB182_3 Depth=1
	ld.d	$a0, $sp, 72
	addi.d	$s2, $s2, 32
	st.d	$a0, $s0, 8
	bne	$s2, $s4, .LBB182_11
.LBB182_10:                             #   in Loop: Header=BB182_3 Depth=1
	ld.d	$s2, $s5, 8
	addi.d	$s5, $s5, 8
	addi.d	$s4, $s2, 512
.LBB182_11:                             # %_ZNSt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS5_PS6_EppEv.exit.i.i.i
                                        #   in Loop: Header=BB182_3 Depth=1
	ld.d	$a0, $sp, 0
	ld.d	$a1, $sp, 16
	addi.d	$s0, $a0, 32
	st.d	$s0, $sp, 0
	bne	$s0, $a1, .LBB182_2
# %bb.12:                               #   in Loop: Header=BB182_3 Depth=1
	ld.d	$a0, $sp, 24
	ld.d	$s0, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $sp, 24
	st.d	$s0, $sp, 8
	addi.d	$a0, $s0, 512
	st.d	$a0, $sp, 16
	st.d	$s0, $sp, 0
	b	.LBB182_2
	.p2align	4, , 16
.LBB182_13:                             #   in Loop: Header=BB182_3 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 72
	addi.d	$s2, $s2, 32
	st.d	$a0, $s0, 8
	bne	$s2, $s4, .LBB182_11
	b	.LBB182_10
.LBB182_14:                             # %.loopexit
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB182_15:                             # %.body
.Ltmp3496:
	move	$s0, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end182:
	.size	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_, .Lfunc_end182-_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"aG",@progbits,_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.p2align	2, 0x0
GCC_except_table182:
.Lexception101:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end101-.Lcst_begin101
.Lcst_begin101:
	.uleb128 .Lfunc_begin101-.Lfunc_begin101 # >> Call Site 1 <<
	.uleb128 .Ltmp3494-.Lfunc_begin101      #   Call between .Lfunc_begin101 and .Ltmp3494
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3494-.Lfunc_begin101      # >> Call Site 2 <<
	.uleb128 .Ltmp3495-.Ltmp3494            #   Call between .Ltmp3494 and .Ltmp3495
	.uleb128 .Ltmp3496-.Lfunc_begin101      #     jumps to .Ltmp3496
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3495-.Lfunc_begin101      # >> Call Site 3 <<
	.uleb128 .Lfunc_end182-.Ltmp3495        #   Call between .Ltmp3495 and .Lfunc_end182
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end101:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev,comdat
	.weak	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev,@function
_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev: # @_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a1, $a0, 32
	bnez	$a1, .LBB183_2
# %bb.1:
	ret
.LBB183_2:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	vld	$vr0, $a0, 0
	vld	$vr1, $a0, 16
	vst	$vr0, $sp, 32
	vst	$vr1, $sp, 48
	vld	$vr0, $a1, 0
	vld	$vr1, $a1, 16
	vst	$vr0, $sp, 0
	vst	$vr1, $sp, 16
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_)
	jirl	$ra, $ra, 0
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end183:
	.size	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev, .Lfunc_end183-_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EvED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_,"axG",@progbits,_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_,comdat
	.weak	_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_ # -- Begin function _ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_
	.p2align	5
	.type	_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_,@function
_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_: # @_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ld.d	$a1, $a0, 0
	.p2align	4, , 16
.LBB184_1:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	beq	$a1, $a0, .LBB184_6
# %bb.2:                                #   in Loop: Header=BB184_1 Depth=1
	ld.d	$a0, $a1, 0
	addi.d	$a2, $a1, 16
	beq	$a0, $a2, .LBB184_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB184_1 Depth=1
	ld.d	$a1, $a2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
.LBB184_4:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit
                                        #   in Loop: Header=BB184_1 Depth=1
	ld.d	$a0, $s0, 16
	addi.d	$a1, $a1, 32
	st.d	$a1, $s0, 0
	bne	$a1, $a0, .LBB184_1
# %bb.5:                                #   in Loop: Header=BB184_1 Depth=1
	ld.d	$a0, $s0, 24
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $s0, 24
	st.d	$a1, $s0, 8
	addi.d	$a0, $a1, 512
	st.d	$a0, $s0, 16
	st.d	$a1, $s0, 0
	b	.LBB184_1
.LBB184_6:                              # %._crit_edge
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end184:
	.size	_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_, .Lfunc_end184-_ZSt8_DestroyISt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_PS6_EEvT_SA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB185_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB185_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB185_12
# %bb.3:
	move	$a0, $s0
	b	.LBB185_8
.LBB185_4:                              # %_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB185_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB185_6:                              # %_ZSt4copyIPPN2PP12RestartblockES3_ET0_T_S5_S4_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB185_9
.LBB185_7:                              # %_ZSt9__advanceIPPN2PP12RestartblockElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB185_14
.LBB185_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB185_9:                              # %_ZSt4copyIPPN2PP12RestartblockES3_ET0_T_S5_S4_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 520
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 520
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB185_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB185_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB185_6
.LBB185_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB185_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB185_9
.LBB185_14:                             # %_ZSt9__advanceIPPN2PP12RestartblockElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB185_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB185_9
.Lfunc_end185:
	.size	_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb, .Lfunc_end185-_ZNSt5dequeIN2PP12RestartblockESaIS1_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_ # -- Begin function _ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,@function
_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_: # @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
.Lfunc_begin102:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception102
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srai.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 3
	lu12i.w	$a3, -118150
	ori	$a3, $a3, 2423
	lu32i.d	$a3, -177225
	ld.d	$a4, $fp, 32
	ld.d	$a5, $fp, 16
	lu52i.d	$a3, $a3, 403
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a4, $a5
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	lu12i.w	$a2, 73843
	ori	$a2, $a2, 1557
	lu32i.d	$a2, -413523
	lu52i.d	$a2, $a2, 3
	beq	$a0, $a2, .LBB186_5
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB186_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB186_3:                              # %_ZNSt5dequeIN2PP8WhenthenESaIS1_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 568
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
.Ltmp3497:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP8WhenthenC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp3498:
# %bb.4:                                # %_ZNSt16allocator_traitsISaIN2PP8WhenthenEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_.exit
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 568
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB186_5:
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a0, $a0, %pc_lo12(.L.str.239)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB186_6:
.Ltmp3499:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 568
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp3500:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp3501:
# %bb.7:
.LBB186_8:
.Ltmp3502:
	move	$fp, $a0
.Ltmp3503:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp3504:
# %bb.9:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB186_10:
.Ltmp3505:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end186:
	.size	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_, .Lfunc_end186-_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table186:
.Lexception102:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end102-.Lcst_begin102
.Lcst_begin102:
	.uleb128 .Lfunc_begin102-.Lfunc_begin102 # >> Call Site 1 <<
	.uleb128 .Ltmp3497-.Lfunc_begin102      #   Call between .Lfunc_begin102 and .Ltmp3497
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3497-.Lfunc_begin102      # >> Call Site 2 <<
	.uleb128 .Ltmp3498-.Ltmp3497            #   Call between .Ltmp3497 and .Ltmp3498
	.uleb128 .Ltmp3499-.Lfunc_begin102      #     jumps to .Ltmp3499
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3498-.Lfunc_begin102      # >> Call Site 3 <<
	.uleb128 .Ltmp3500-.Ltmp3498            #   Call between .Ltmp3498 and .Ltmp3500
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3500-.Lfunc_begin102      # >> Call Site 4 <<
	.uleb128 .Ltmp3501-.Ltmp3500            #   Call between .Ltmp3500 and .Ltmp3501
	.uleb128 .Ltmp3502-.Lfunc_begin102      #     jumps to .Ltmp3502
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3503-.Lfunc_begin102      # >> Call Site 5 <<
	.uleb128 .Ltmp3504-.Ltmp3503            #   Call between .Ltmp3503 and .Ltmp3504
	.uleb128 .Ltmp3505-.Lfunc_begin102      #     jumps to .Ltmp3505
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3504-.Lfunc_begin102      # >> Call Site 6 <<
	.uleb128 .Lfunc_end186-.Ltmp3504        #   Call between .Ltmp3504 and .Lfunc_end186
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end102:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2PP8WhenthenC2ERKS0_,"axG",@progbits,_ZN2PP8WhenthenC2ERKS0_,comdat
	.weak	_ZN2PP8WhenthenC2ERKS0_         # -- Begin function _ZN2PP8WhenthenC2ERKS0_
	.p2align	5
	.type	_ZN2PP8WhenthenC2ERKS0_,@function
_ZN2PP8WhenthenC2ERKS0_:                # @_ZN2PP8WhenthenC2ERKS0_
.Lfunc_begin103:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception103
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s3, $a1
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
	addi.d	$s0, $fp, 80
	addi.d	$a1, $s3, 80
.Ltmp3506:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp3507:
# %bb.1:
	addi.d	$s1, $fp, 160
	addi.d	$a1, $s3, 160
.Ltmp3509:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp3510:
# %bb.2:
	addi.d	$s2, $fp, 240
	addi.d	$a1, $s3, 240
.Ltmp3512:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp3513:
# %bb.3:
	addi.d	$s4, $fp, 320
	addi.d	$a1, $s3, 320
.Ltmp3515:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp3516:
# %bb.4:
	ld.d	$a0, $s3, 472
	ld.d	$a1, $s3, 440
	addi.d	$s5, $fp, 400
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s3, 448
	ld.d	$a2, $s3, 456
	ld.d	$a3, $s3, 432
	slli.d	$a0, $a0, 9
	ld.d	$a4, $s3, 416
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a1, $a3
	add.d	$a0, $a1, $a0
	sub.d	$s6, $a0, $a4
	ori	$a2, $zero, 80
	move	$a0, $s5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp3518:
	move	$a0, $s5
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp3519:
# %bb.5:                                # %.noexc
	ld.d	$a1, $s3, 416
	ld.d	$a0, $s3, 448
	beq	$a1, $a0, .LBB187_12
# %bb.6:                                # %.lr.ph.i.i.i.preheader.i
	ld.d	$a2, $fp, 440
	ld.d	$a5, $fp, 432
	ld.d	$a3, $fp, 416
	ld.d	$a4, $s3, 440
	ld.d	$a6, $s3, 432
	b	.LBB187_8
	.p2align	4, , 16
.LBB187_7:                              # %_ZNSt15_Deque_iteratorIbRbPbEppEv.exit.i.i.i.i
                                        #   in Loop: Header=BB187_8 Depth=1
	beq	$a1, $a0, .LBB187_12
.LBB187_8:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a7, $a1, 0
	addi.d	$a1, $a1, 1
	st.b	$a7, $a3, 0
	beq	$a1, $a6, .LBB187_10
# %bb.9:                                # %_ZNSt15_Deque_iteratorIbRKbPS0_EppEv.exit.i.i.i.i
                                        #   in Loop: Header=BB187_8 Depth=1
	addi.d	$a3, $a3, 1
	bne	$a3, $a5, .LBB187_7
	b	.LBB187_11
	.p2align	4, , 16
.LBB187_10:                             #   in Loop: Header=BB187_8 Depth=1
	ld.d	$a1, $a4, 8
	addi.d	$a4, $a4, 8
	addi.d	$a6, $a1, 512
	addi.d	$a3, $a3, 1
	bne	$a3, $a5, .LBB187_7
.LBB187_11:                             #   in Loop: Header=BB187_8 Depth=1
	ld.d	$a3, $a2, 8
	addi.d	$a2, $a2, 8
	addi.d	$a5, $a3, 512
	b	.LBB187_7
.LBB187_12:                             # %_ZNSt5dequeIbSaIbEEC2ERKS1_.exit
	addi.d	$a0, $fp, 480
	addi.d	$a1, $s3, 480
.Ltmp3521:
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_)
	jirl	$ra, $ra, 0
.Ltmp3522:
# %bb.13:
	ld.d	$a0, $s3, 560
	st.d	$a0, $fp, 560
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB187_14:
.Ltmp3523:
	move	$s3, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB187_16
.LBB187_15:
.Ltmp3520:
	move	$s3, $a0
.LBB187_16:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB187_18
.LBB187_17:
.Ltmp3517:
	move	$s3, $a0
.LBB187_18:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB187_20
.LBB187_19:
.Ltmp3514:
	move	$s3, $a0
.LBB187_20:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB187_22
.LBB187_21:
.Ltmp3511:
	move	$s3, $a0
.LBB187_22:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB187_23:
.Ltmp3508:
	move	$s3, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end187:
	.size	_ZN2PP8WhenthenC2ERKS0_, .Lfunc_end187-_ZN2PP8WhenthenC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP8WhenthenC2ERKS0_,"aG",@progbits,_ZN2PP8WhenthenC2ERKS0_,comdat
	.p2align	2, 0x0
GCC_except_table187:
.Lexception103:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end103-.Lcst_begin103
.Lcst_begin103:
	.uleb128 .Lfunc_begin103-.Lfunc_begin103 # >> Call Site 1 <<
	.uleb128 .Ltmp3506-.Lfunc_begin103      #   Call between .Lfunc_begin103 and .Ltmp3506
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3506-.Lfunc_begin103      # >> Call Site 2 <<
	.uleb128 .Ltmp3507-.Ltmp3506            #   Call between .Ltmp3506 and .Ltmp3507
	.uleb128 .Ltmp3508-.Lfunc_begin103      #     jumps to .Ltmp3508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3509-.Lfunc_begin103      # >> Call Site 3 <<
	.uleb128 .Ltmp3510-.Ltmp3509            #   Call between .Ltmp3509 and .Ltmp3510
	.uleb128 .Ltmp3511-.Lfunc_begin103      #     jumps to .Ltmp3511
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3512-.Lfunc_begin103      # >> Call Site 4 <<
	.uleb128 .Ltmp3513-.Ltmp3512            #   Call between .Ltmp3512 and .Ltmp3513
	.uleb128 .Ltmp3514-.Lfunc_begin103      #     jumps to .Ltmp3514
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3515-.Lfunc_begin103      # >> Call Site 5 <<
	.uleb128 .Ltmp3516-.Ltmp3515            #   Call between .Ltmp3515 and .Ltmp3516
	.uleb128 .Ltmp3517-.Lfunc_begin103      #     jumps to .Ltmp3517
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3516-.Lfunc_begin103      # >> Call Site 6 <<
	.uleb128 .Ltmp3518-.Ltmp3516            #   Call between .Ltmp3516 and .Ltmp3518
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3518-.Lfunc_begin103      # >> Call Site 7 <<
	.uleb128 .Ltmp3519-.Ltmp3518            #   Call between .Ltmp3518 and .Ltmp3519
	.uleb128 .Ltmp3520-.Lfunc_begin103      #     jumps to .Ltmp3520
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3521-.Lfunc_begin103      # >> Call Site 8 <<
	.uleb128 .Ltmp3522-.Ltmp3521            #   Call between .Ltmp3521 and .Ltmp3522
	.uleb128 .Ltmp3523-.Lfunc_begin103      #     jumps to .Ltmp3523
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3522-.Lfunc_begin103      # >> Call Site 9 <<
	.uleb128 .Lfunc_end187-.Ltmp3522        #   Call between .Ltmp3522 and .Lfunc_end187
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end103:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_,"axG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_,comdat
	.weak	_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_ # -- Begin function _ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_
	.p2align	5
	.type	_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_,@function
_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_:  # @_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_
.Lfunc_begin104:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception104
# %bb.0:                                # %_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EEC2ERKS2_m.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a1
	ld.d	$a1, $a1, 72
	ld.d	$a2, $s1, 40
	move	$fp, $a0
	sub.d	$a0, $a1, $a2
	ld.d	$a2, $s1, 48
	ld.d	$a3, $s1, 56
	srai.d	$a0, $a0, 3
	sltu	$a1, $zero, $a1
	sub.d	$a0, $a0, $a1
	sub.d	$a1, $a2, $a3
	srai.d	$a1, $a1, 4
	lu12i.w	$a2, 427197
	ori	$a2, $a2, 2579
	lu32i.d	$a2, -155345
	ld.d	$a3, $s1, 32
	ld.d	$a4, $s1, 16
	lu52i.d	$a2, $a2, -1973
	mul.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
	sub.d	$a1, $a3, $a4
	srai.d	$a1, $a1, 4
	mul.d	$a1, $a1, $a2
	add.d	$s0, $a0, $a1
	ori	$a2, $zero, 80
	move	$a0, $fp
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	ld.d	$s0, $s1, 16
	ld.d	$s2, $s1, 32
	ld.d	$s3, $s1, 40
	ld.d	$s1, $s1, 48
	ld.d	$a0, $fp, 16
	ld.d	$a1, $fp, 24
	ld.d	$a2, $fp, 32
	ld.d	$a3, $fp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 16
	st.d	$a2, $sp, 24
	st.d	$a3, $sp, 32
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
	st.d	$a3, $sp, 64
	addi.d	$a1, $sp, 8
	st.d	$a1, $sp, 72
	bne	$s0, $s1, .LBB188_3
.LBB188_1:                              # %.loopexit
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
	.p2align	4, , 16
.LBB188_2:                              # %_ZNSt15_Deque_iteratorIN2PP3CmdERS1_PS1_EppEv.exit.i.i.i
                                        #   in Loop: Header=BB188_3 Depth=1
	beq	$s0, $s1, .LBB188_1
.LBB188_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp3524:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3CmdC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp3525:
# %bb.4:                                # %_ZSt10_ConstructIN2PP3CmdEJRKS1_EEvPT_DpOT0_.exit.i.i.i
                                        #   in Loop: Header=BB188_3 Depth=1
	addi.d	$s0, $s0, 432
	bne	$s0, $s2, .LBB188_6
# %bb.5:                                #   in Loop: Header=BB188_3 Depth=1
	ld.d	$s0, $s3, 8
	addi.d	$s3, $s3, 8
	addi.d	$s2, $s0, 432
.LBB188_6:                              # %_ZNSt15_Deque_iteratorIN2PP3CmdERKS1_PS2_EppEv.exit.i.i.i
                                        #   in Loop: Header=BB188_3 Depth=1
	ld.d	$a0, $sp, 8
	ld.d	$a1, $sp, 24
	addi.d	$a0, $a0, 432
	st.d	$a0, $sp, 8
	bne	$a0, $a1, .LBB188_2
# %bb.7:                                #   in Loop: Header=BB188_3 Depth=1
	ld.d	$a1, $sp, 32
	ld.d	$a0, $a1, 8
	addi.d	$a1, $a1, 8
	st.d	$a1, $sp, 32
	st.d	$a0, $sp, 16
	addi.d	$a1, $a0, 432
	st.d	$a1, $sp, 24
	st.d	$a0, $sp, 8
	b	.LBB188_2
.LBB188_8:                              # %.body
.Ltmp3526:
	move	$s0, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end188:
	.size	_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_, .Lfunc_end188-_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_,"aG",@progbits,_ZNSt5dequeIN2PP3CmdESaIS1_EEC2ERKS3_,comdat
	.p2align	2, 0x0
GCC_except_table188:
.Lexception104:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end104-.Lcst_begin104
.Lcst_begin104:
	.uleb128 .Lfunc_begin104-.Lfunc_begin104 # >> Call Site 1 <<
	.uleb128 .Ltmp3524-.Lfunc_begin104      #   Call between .Lfunc_begin104 and .Ltmp3524
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3524-.Lfunc_begin104      # >> Call Site 2 <<
	.uleb128 .Ltmp3525-.Ltmp3524            #   Call between .Ltmp3524 and .Ltmp3525
	.uleb128 .Ltmp3526-.Lfunc_begin104      #     jumps to .Ltmp3526
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3525-.Lfunc_begin104      # >> Call Site 3 <<
	.uleb128 .Lfunc_end188-.Ltmp3525        #   Call between .Ltmp3525 and .Lfunc_end188
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end104:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev,comdat
	.weak	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev,@function
_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev: # @_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a1, $a0, 32
	bnez	$a1, .LBB189_2
# %bb.1:                                # %_ZSt8_DestroyISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EEvT_S6_.exit
	ret
.LBB189_2:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$fp, $a0, 0
	ld.d	$s0, $a1, 0
	beq	$fp, $s0, .LBB189_7
# %bb.3:                                # %.lr.ph.i.preheader
	ld.d	$s1, $a0, 24
	ld.d	$s2, $a0, 16
	b	.LBB189_5
.LBB189_4:                              # %_ZNSt15_Deque_iteratorIN2PP3CmdERS1_PS1_EppEv.exit.i
                                        #   in Loop: Header=BB189_5 Depth=1
	beq	$fp, $s0, .LBB189_7
.LBB189_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3CmdD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, 432
	bne	$fp, $s2, .LBB189_4
# %bb.6:                                #   in Loop: Header=BB189_5 Depth=1
	ld.d	$fp, $s1, 8
	addi.d	$s1, $s1, 8
	addi.d	$s2, $fp, 432
	b	.LBB189_4
.LBB189_7:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end189:
	.size	_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev, .Lfunc_end189-_ZNSt19_UninitDestroyGuardISt15_Deque_iteratorIN2PP3CmdERS2_PS2_EvED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB190_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB190_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB190_12
# %bb.3:
	move	$a0, $s0
	b	.LBB190_8
.LBB190_4:                              # %_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB190_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB190_6:                              # %_ZSt4copyIPPN2PP8WhenthenES3_ET0_T_S5_S4_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB190_9
.LBB190_7:                              # %_ZSt9__advanceIPPN2PP8WhenthenElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB190_14
.LBB190_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB190_9:                              # %_ZSt4copyIPPN2PP8WhenthenES3_ET0_T_S5_S4_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 568
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 568
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB190_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB190_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB190_6
.LBB190_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB190_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB190_9
.LBB190_14:                             # %_ZSt9__advanceIPPN2PP8WhenthenElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB190_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB190_9
.Lfunc_end190:
	.size	_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb, .Lfunc_end190-_ZNSt5dequeIN2PP8WhenthenESaIS1_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_,"axG",@progbits,_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_,comdat
	.weak	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ # -- Begin function _ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_,@function
_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_: # @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 7
	srai.d	$a2, $a2, 2
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 2
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 511
	beq	$a0, $a2, .LBB191_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB191_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB191_3:                              # %_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.w	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.w	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB191_4:
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a0, $a0, %pc_lo12(.L.str.239)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end191:
	.size	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_, .Lfunc_end191-_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB192_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB192_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB192_12
# %bb.3:
	move	$a0, $s0
	b	.LBB192_8
.LBB192_4:                              # %_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB192_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB192_6:                              # %_ZSt4copyIPPiS1_ET0_T_S3_S2_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB192_9
.LBB192_7:                              # %_ZSt9__advanceIPPilEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB192_14
.LBB192_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB192_9:                              # %_ZSt4copyIPPiS1_ET0_T_S3_S2_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB192_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB192_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB192_6
.LBB192_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB192_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB192_9
.LBB192_14:                             # %_ZSt9__advanceIPPilEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB192_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB192_9
.Lfunc_end192:
	.size	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb, .Lfunc_end192-_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE,"axG",@progbits,_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE,comdat
	.weak	_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE # -- Begin function _ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE,@function
_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE: # @_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a5, $a2, 0
	ld.d	$a4, $a2, 8
	ld.d	$a3, $a2, 16
	ld.d	$a2, $a2, 24
	addi.d	$a6, $a5, 4
	move	$s0, $a1
	move	$fp, $a0
	move	$t1, $a4
	move	$t0, $a3
	move	$a7, $a2
	bne	$a6, $a3, .LBB193_2
# %bb.1:
	ld.d	$a6, $a2, 8
	addi.d	$a7, $a2, 8
	addi.d	$t0, $a6, 512
	move	$t1, $a6
.LBB193_2:                              # %_ZNSt15_Deque_iteratorIiRiPiEppEv.exit
	ld.d	$t3, $s0, 40
	ld.d	$t2, $s0, 16
	ld.d	$a1, $s0, 32
	sub.d	$a0, $a2, $t3
	srli.d	$a0, $a0, 3
	sltu	$t4, $zero, $a2
	sub.d	$a0, $a0, $t4
	slli.d	$a0, $a0, 7
	sub.d	$t4, $a5, $a4
	srai.d	$t4, $t4, 2
	sub.d	$t6, $a1, $t2
	ld.d	$t5, $s0, 72
	srai.d	$t6, $t6, 2
	add.d	$t4, $t6, $t4
	add.d	$s1, $t4, $a0
	sub.d	$a0, $t5, $t3
	srli.d	$t7, $a0, 3
	ld.d	$t4, $s0, 48
	ld.d	$a0, $s0, 56
	sltu	$t8, $zero, $t5
	sub.d	$t7, $t7, $t8
	slli.d	$t7, $t7, 7
	sub.d	$t8, $t4, $a0
	srai.d	$t8, $t8, 2
	add.d	$t6, $t8, $t6
	add.d	$t6, $t6, $t7
	srli.d	$t6, $t6, 1
	bgeu	$s1, $t6, .LBB193_7
# %bb.3:
	beq	$a5, $t2, .LBB193_5
# %bb.4:
	ld.d	$a0, $s0, 24
	st.d	$t2, $sp, 96
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 112
	st.d	$t3, $sp, 120
	st.d	$a5, $sp, 64
	st.d	$a4, $sp, 72
	st.d	$a3, $sp, 80
	st.d	$a2, $sp, 88
	st.d	$a6, $sp, 32
	st.d	$t1, $sp, 40
	st.d	$t0, $sp, 48
	st.d	$a7, $sp, 56
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 64
	addi.d	$a3, $sp, 32
	pcaddu18i	$ra, %call36(_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_)
	jirl	$ra, $ra, 0
	ld.d	$t2, $s0, 16
	ld.d	$a1, $s0, 32
.LBB193_5:
	addi.d	$a0, $a1, -4
	beq	$t2, $a0, .LBB193_11
# %bb.6:
	addi.d	$a0, $t2, 4
	st.d	$a0, $s0, 16
	b	.LBB193_14
.LBB193_7:
	beq	$a6, $t4, .LBB193_9
# %bb.8:
	ld.d	$a1, $s0, 64
	st.d	$a6, $sp, 96
	st.d	$t1, $sp, 104
	st.d	$t0, $sp, 112
	st.d	$a7, $sp, 120
	st.d	$t4, $sp, 64
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 80
	st.d	$t5, $sp, 88
	st.d	$a5, $sp, 32
	st.d	$a4, $sp, 40
	st.d	$a3, $sp, 48
	st.d	$a2, $sp, 56
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 64
	addi.d	$a3, $sp, 32
	pcaddu18i	$ra, %call36(_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_)
	jirl	$ra, $ra, 0
	ld.d	$t4, $s0, 48
	ld.d	$a0, $s0, 56
.LBB193_9:
	beq	$t4, $a0, .LBB193_12
# %bb.10:
	addi.d	$a2, $t4, -4
	b	.LBB193_13
.LBB193_11:
	ld.d	$a0, $s0, 24
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $a0, 8
	st.d	$a1, $s0, 40
	ld.d	$a0, $a0, 8
	st.d	$a0, $s0, 24
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 32
	st.d	$a0, $s0, 16
	b	.LBB193_14
.LBB193_12:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s0, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s0, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 64
	addi.d	$a2, $a0, 508
.LBB193_13:                             # %_ZNSt5dequeIiSaIiEE8pop_backEv.exit
	ld.d	$a0, $s0, 16
	ld.d	$a1, $s0, 32
	st.d	$a2, $s0, 48
.LBB193_14:
	ld.d	$a3, $s0, 24
	ld.d	$a2, $s0, 40
	st.d	$a3, $fp, 8
	st.d	$a1, $fp, 16
	sub.d	$a1, $a0, $a3
	srai.d	$a1, $a1, 2
	add.d	$a1, $a1, $s1
	st.d	$a2, $fp, 24
	bltz	$a1, .LBB193_17
# %bb.15:
	ori	$a3, $zero, 127
	bltu	$a3, $a1, .LBB193_18
# %bb.16:
	alsl.d	$a0, $s1, $a0, 2
	b	.LBB193_20
.LBB193_17:
	srai.d	$a0, $a1, 7
	b	.LBB193_19
.LBB193_18:
	srli.d	$a0, $a1, 7
.LBB193_19:
	slli.d	$a3, $a0, 3
	ldx.d	$a3, $a2, $a3
	alsl.d	$a2, $a0, $a2, 3
	st.d	$a2, $fp, 24
	st.d	$a3, $fp, 8
	addi.d	$a2, $a3, 512
	st.d	$a2, $fp, 16
	slli.d	$a0, $a0, 7
	sub.d	$a0, $a1, $a0
	alsl.d	$a0, $a0, $a3, 2
.LBB193_20:                             # %_ZStplRKSt15_Deque_iteratorIiRiPiEl.exit
	st.d	$a0, $fp, 0
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.Lfunc_end193:
	.size	_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE, .Lfunc_end193-_ZNSt5dequeIiSaIiEE8_M_eraseESt15_Deque_iteratorIiRiPiE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,"axG",@progbits,_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,comdat
	.weak	_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_ # -- Begin function _ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.p2align	5
	.type	_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,@function
_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_: # @_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a1
	ld.d	$a1, $a1, 24
	ld.d	$a4, $a2, 24
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	beq	$a1, $a4, .LBB194_45
# %bb.1:
	ld.d	$a0, $a2, 8
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s3, $a2, 0
	ld.d	$s7, $a3, 0
	ld.d	$s5, $a3, 8
	ld.d	$s6, $a3, 16
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s4, $a3, 24
	sub.d	$a0, $s3, $a0
	srai.d	$fp, $a0, 2
	blez	$fp, .LBB194_15
# %bb.2:                                # %.lr.ph.i.preheader
	ori	$s8, $zero, 2
	ori	$s2, $zero, 127
	b	.LBB194_5
	.p2align	4, , 16
.LBB194_3:                              #   in Loop: Header=BB194_5 Depth=1
	srai.d	$a1, $a0, 7
.LBB194_4:                              #   in Loop: Header=BB194_5 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s5, $s4, $a2
	alsl.d	$s4, $a1, $s4, 3
	addi.d	$s6, $s5, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s7, $a0, $s5, 2
	sub.d	$fp, $fp, $s0
	blez	$fp, .LBB194_15
.LBB194_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
	move	$a2, $a1
	move	$a0, $s7
	bne	$s7, $s5, .LBB194_7
# %bb.6:                                #   in Loop: Header=BB194_5 Depth=1
	ld.d	$a0, $s4, -8
	addi.d	$a0, $a0, 512
	ori	$a2, $zero, 128
.LBB194_7:                              # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        #   in Loop: Header=BB194_5 Depth=1
	slt	$a3, $a2, $fp
	masknez	$a4, $fp, $a3
	maskeqz	$a2, $a2, $a3
	or	$s0, $a2, $a4
	slli.d	$a2, $s0, 2
	sub.d	$s3, $s3, $a2
	sub.d	$a0, $a0, $a2
	blt	$s0, $s8, .LBB194_13
# %bb.8:                                #   in Loop: Header=BB194_5 Depth=1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
.LBB194_9:                              # %_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_.exit.i
                                        #   in Loop: Header=BB194_5 Depth=1
	sub.d	$a0, $a1, $s0
	bltz	$a0, .LBB194_3
# %bb.10:                               #   in Loop: Header=BB194_5 Depth=1
	bltu	$s2, $a0, .LBB194_12
# %bb.11:                               #   in Loop: Header=BB194_5 Depth=1
	sub.d	$a0, $zero, $s0
	alsl.d	$s7, $a0, $s7, 2
	sub.d	$fp, $fp, $s0
	bgtz	$fp, .LBB194_5
	b	.LBB194_15
	.p2align	4, , 16
.LBB194_12:                             #   in Loop: Header=BB194_5 Depth=1
	srli.d	$a1, $a0, 7
	b	.LBB194_4
.LBB194_13:                             # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i
                                        #   in Loop: Header=BB194_5 Depth=1
	ori	$a2, $zero, 1
	bne	$s0, $a2, .LBB194_9
# %bb.14:                               #   in Loop: Header=BB194_5 Depth=1
	ld.w	$a2, $s3, 0
	st.w	$a2, $a0, 0
	b	.LBB194_9
.LBB194_15:                             # %_ZSt23__copy_move_backward_a1ILb1EPiiEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	st.d	$s4, $a2, 24
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 24
	ld.d	$a1, $s1, 24
	st.d	$s7, $a2, 0
	st.d	$s5, $a2, 8
	addi.d	$s3, $a0, -8
	st.d	$s6, $a2, 16
	beq	$s3, $a1, .LBB194_31
# %bb.16:
	ori	$s8, $zero, 2
	ori	$fp, $zero, 127
	st.d	$s1, $sp, 24                    # 8-byte Folded Spill
	b	.LBB194_18
	.p2align	4, , 16
.LBB194_17:                             # %_ZSt23__copy_move_backward_a1ILb1EPiiEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit62
                                        #   in Loop: Header=BB194_18 Depth=1
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	st.d	$s4, $a1, 24
	ld.d	$s1, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $s1, 24
	st.d	$s7, $a1, 0
	st.d	$s5, $a1, 8
	addi.d	$s3, $s3, -8
	st.d	$s6, $a1, 16
	beq	$s3, $a0, .LBB194_31
.LBB194_18:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB194_21 Depth 2
	ld.d	$a0, $s3, 0
	addi.d	$s2, $a0, 512
	ori	$s0, $zero, 128
	b	.LBB194_21
	.p2align	4, , 16
.LBB194_19:                             #   in Loop: Header=BB194_21 Depth=2
	srai.d	$a1, $a0, 7
.LBB194_20:                             #   in Loop: Header=BB194_21 Depth=2
	slli.d	$a2, $a1, 3
	ldx.d	$s5, $s4, $a2
	alsl.d	$s4, $a1, $s4, 3
	addi.d	$s6, $s5, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s7, $a0, $s5, 2
	sub.d	$s0, $s0, $s1
	blez	$s0, .LBB194_17
.LBB194_21:                             #   Parent Loop BB194_18 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
	move	$a2, $a1
	move	$a0, $s7
	bne	$s7, $s5, .LBB194_23
# %bb.22:                               #   in Loop: Header=BB194_21 Depth=2
	ld.d	$a0, $s4, -8
	addi.d	$a0, $a0, 512
	ori	$a2, $zero, 128
.LBB194_23:                             # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.i.i48
                                        #   in Loop: Header=BB194_21 Depth=2
	slt	$a3, $a2, $s0
	masknez	$a4, $s0, $a3
	maskeqz	$a2, $a2, $a3
	or	$s1, $a2, $a4
	slli.d	$a2, $s1, 2
	sub.d	$s2, $s2, $a2
	sub.d	$a0, $a0, $a2
	blt	$s1, $s8, .LBB194_29
# %bb.24:                               #   in Loop: Header=BB194_21 Depth=2
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
.LBB194_25:                             # %_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_.exit.i50
                                        #   in Loop: Header=BB194_21 Depth=2
	sub.d	$a0, $a1, $s1
	bltz	$a0, .LBB194_19
# %bb.26:                               #   in Loop: Header=BB194_21 Depth=2
	bltu	$fp, $a0, .LBB194_28
# %bb.27:                               #   in Loop: Header=BB194_21 Depth=2
	sub.d	$a0, $zero, $s1
	alsl.d	$s7, $a0, $s7, 2
	sub.d	$s0, $s0, $s1
	bgtz	$s0, .LBB194_21
	b	.LBB194_17
	.p2align	4, , 16
.LBB194_28:                             #   in Loop: Header=BB194_21 Depth=2
	srli.d	$a1, $a0, 7
	b	.LBB194_20
.LBB194_29:                             # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i49
                                        #   in Loop: Header=BB194_21 Depth=2
	ori	$a2, $zero, 1
	bne	$s1, $a2, .LBB194_25
# %bb.30:                               #   in Loop: Header=BB194_21 Depth=2
	ld.w	$a2, $s2, 0
	st.w	$a2, $a0, 0
	b	.LBB194_25
.LBB194_31:                             # %._crit_edge
	ld.d	$a0, $s1, 0
	ld.d	$s0, $s1, 16
	sub.d	$a0, $s0, $a0
	srai.d	$fp, $a0, 2
	blez	$fp, .LBB194_59
# %bb.32:                               # %.lr.ph.i8.preheader
	ori	$s1, $zero, 2
	ori	$s2, $zero, 127
	ori	$s3, $zero, 1
	b	.LBB194_35
	.p2align	4, , 16
.LBB194_33:                             #   in Loop: Header=BB194_35 Depth=1
	srai.d	$a1, $a0, 7
.LBB194_34:                             #   in Loop: Header=BB194_35 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s5, $s4, $a2
	alsl.d	$s4, $a1, $s4, 3
	addi.d	$s6, $s5, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s7, $a0, $s5, 2
	sub.d	$fp, $fp, $s8
	blez	$fp, .LBB194_59
.LBB194_35:                             # %.lr.ph.i8
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
	move	$a2, $a1
	move	$a0, $s7
	bne	$s7, $s5, .LBB194_37
# %bb.36:                               #   in Loop: Header=BB194_35 Depth=1
	ld.d	$a0, $s4, -8
	addi.d	$a0, $a0, 512
	ori	$a2, $zero, 128
.LBB194_37:                             # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.i.i19
                                        #   in Loop: Header=BB194_35 Depth=1
	slt	$a3, $a2, $fp
	masknez	$a4, $fp, $a3
	maskeqz	$a2, $a2, $a3
	or	$s8, $a2, $a4
	slli.d	$a2, $s8, 2
	sub.d	$s0, $s0, $a2
	sub.d	$a0, $a0, $a2
	blt	$s8, $s1, .LBB194_43
# %bb.38:                               #   in Loop: Header=BB194_35 Depth=1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
.LBB194_39:                             # %_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_.exit.i21
                                        #   in Loop: Header=BB194_35 Depth=1
	sub.d	$a0, $a1, $s8
	bltz	$a0, .LBB194_33
# %bb.40:                               #   in Loop: Header=BB194_35 Depth=1
	bltu	$s2, $a0, .LBB194_42
# %bb.41:                               #   in Loop: Header=BB194_35 Depth=1
	sub.d	$a0, $zero, $s8
	alsl.d	$s7, $a0, $s7, 2
	sub.d	$fp, $fp, $s8
	bgtz	$fp, .LBB194_35
	b	.LBB194_59
	.p2align	4, , 16
.LBB194_42:                             #   in Loop: Header=BB194_35 Depth=1
	srli.d	$a1, $a0, 7
	b	.LBB194_34
.LBB194_43:                             # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i20
                                        #   in Loop: Header=BB194_35 Depth=1
	bne	$s8, $s3, .LBB194_39
# %bb.44:                               #   in Loop: Header=BB194_35 Depth=1
	ld.w	$a2, $s0, 0
	st.w	$a2, $a0, 0
	b	.LBB194_39
.LBB194_45:
	ld.d	$a0, $s1, 0
	ld.d	$s0, $a2, 0
	ld.d	$s7, $a3, 0
	ld.d	$s5, $a3, 8
	ld.d	$s6, $a3, 16
	ld.d	$s4, $a3, 24
	sub.d	$a0, $s0, $a0
	srai.d	$fp, $a0, 2
	blez	$fp, .LBB194_59
# %bb.46:                               # %.lr.ph.i66.preheader
	ori	$s1, $zero, 2
	ori	$s2, $zero, 127
	ori	$s3, $zero, 1
	b	.LBB194_49
	.p2align	4, , 16
.LBB194_47:                             #   in Loop: Header=BB194_49 Depth=1
	srai.d	$a1, $a0, 7
.LBB194_48:                             #   in Loop: Header=BB194_49 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s5, $s4, $a2
	alsl.d	$s4, $a1, $s4, 3
	addi.d	$s6, $s5, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s7, $a0, $s5, 2
	sub.d	$fp, $fp, $s8
	blez	$fp, .LBB194_59
.LBB194_49:                             # %.lr.ph.i66
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
	move	$a2, $a1
	move	$a0, $s7
	bne	$s7, $s5, .LBB194_51
# %bb.50:                               #   in Loop: Header=BB194_49 Depth=1
	ld.d	$a0, $s4, -8
	addi.d	$a0, $a0, 512
	ori	$a2, $zero, 128
.LBB194_51:                             # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.i.i77
                                        #   in Loop: Header=BB194_49 Depth=1
	slt	$a3, $a2, $fp
	masknez	$a4, $fp, $a3
	maskeqz	$a2, $a2, $a3
	or	$s8, $a2, $a4
	slli.d	$a2, $s8, 2
	sub.d	$s0, $s0, $a2
	sub.d	$a0, $a0, $a2
	blt	$s8, $s1, .LBB194_57
# %bb.52:                               #   in Loop: Header=BB194_49 Depth=1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	sub.d	$a0, $s7, $s5
	srai.d	$a1, $a0, 2
.LBB194_53:                             # %_ZSt23__copy_move_backward_a2ILb1EPiS0_ET1_T0_S2_S1_.exit.i79
                                        #   in Loop: Header=BB194_49 Depth=1
	sub.d	$a0, $a1, $s8
	bltz	$a0, .LBB194_47
# %bb.54:                               #   in Loop: Header=BB194_49 Depth=1
	bltu	$s2, $a0, .LBB194_56
# %bb.55:                               #   in Loop: Header=BB194_49 Depth=1
	sub.d	$a0, $zero, $s8
	alsl.d	$s7, $a0, $s7, 2
	sub.d	$fp, $fp, $s8
	bgtz	$fp, .LBB194_49
	b	.LBB194_59
	.p2align	4, , 16
.LBB194_56:                             #   in Loop: Header=BB194_49 Depth=1
	srli.d	$a1, $a0, 7
	b	.LBB194_48
.LBB194_57:                             # %_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i78
                                        #   in Loop: Header=BB194_49 Depth=1
	bne	$s8, $s3, .LBB194_53
# %bb.58:                               #   in Loop: Header=BB194_49 Depth=1
	ld.w	$a2, $s0, 0
	st.w	$a2, $a0, 0
	b	.LBB194_53
.LBB194_59:                             # %_ZSt23__copy_move_backward_a1ILb1EPiiEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit33
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.d	$s7, $a0, 0
	st.d	$s5, $a0, 8
	st.d	$s6, $a0, 16
	st.d	$s4, $a0, 24
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end194:
	.size	_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_, .Lfunc_end194-_ZSt24__copy_move_backward_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,"axG",@progbits,_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,comdat
	.weak	_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_ # -- Begin function _ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.p2align	5
	.type	_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,@function
_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_: # @_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s2, $a2
	ld.d	$a4, $a1, 24
	ld.d	$a2, $a2, 24
	ld.d	$s3, $a1, 0
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	beq	$a4, $a2, .LBB195_39
# %bb.1:
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a0, $a1, 16
	ld.d	$s0, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$s7, $a3, 16
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s5, $a3, 24
	sub.d	$a0, $a0, $s3
	srai.d	$fp, $a0, 2
	blez	$fp, .LBB195_13
# %bb.2:                                # %.lr.ph.i.preheader
	ori	$s8, $zero, 2
	ori	$s4, $zero, 127
	b	.LBB195_5
	.p2align	4, , 16
.LBB195_3:                              #   in Loop: Header=BB195_5 Depth=1
	srai.d	$a1, $a0, 7
.LBB195_4:                              #   in Loop: Header=BB195_5 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s0, $a0, $s6, 2
	sub.d	$fp, $fp, $s1
	alsl.d	$s3, $s1, $s3, 2
	blez	$fp, .LBB195_13
.LBB195_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s7, $s0
	srai.d	$a0, $a0, 2
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$s1, $a0, $a1
	blt	$s1, $s8, .LBB195_11
# %bb.6:                                #   in Loop: Header=BB195_5 Depth=1
	slli.d	$a2, $s1, 2
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB195_7:                              # %_ZSt14__copy_move_a2ILb1EPiS0_S0_ET2_T0_T1_S1_.exit.i
                                        #   in Loop: Header=BB195_5 Depth=1
	sub.d	$a0, $s0, $s6
	srai.d	$a0, $a0, 2
	add.d	$a0, $a0, $s1
	bltz	$a0, .LBB195_3
# %bb.8:                                #   in Loop: Header=BB195_5 Depth=1
	bltu	$s4, $a0, .LBB195_10
# %bb.9:                                #   in Loop: Header=BB195_5 Depth=1
	alsl.d	$s0, $s1, $s0, 2
	sub.d	$fp, $fp, $s1
	alsl.d	$s3, $s1, $s3, 2
	bgtz	$fp, .LBB195_5
	b	.LBB195_13
	.p2align	4, , 16
.LBB195_10:                             #   in Loop: Header=BB195_5 Depth=1
	srli.d	$a1, $a0, 7
	b	.LBB195_4
.LBB195_11:                             #   in Loop: Header=BB195_5 Depth=1
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB195_7
# %bb.12:                               #   in Loop: Header=BB195_5 Depth=1
	ld.w	$a0, $s3, 0
	st.w	$a0, $s0, 0
	b	.LBB195_7
.LBB195_13:                             # %_ZSt14__copy_move_a1ILb1EPiiEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	st.d	$s5, $a2, 24
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 24
	ld.d	$a1, $s2, 24
	st.d	$s0, $a2, 0
	st.d	$s6, $a2, 8
	addi.d	$s4, $a0, 8
	st.d	$s7, $a2, 16
	beq	$s4, $a1, .LBB195_27
# %bb.14:
	ori	$s8, $zero, 2
	ori	$fp, $zero, 127
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	b	.LBB195_16
	.p2align	4, , 16
.LBB195_15:                             # %_ZSt14__copy_move_a1ILb1EPiiEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit36
                                        #   in Loop: Header=BB195_16 Depth=1
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	st.d	$s5, $a1, 24
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $s2, 24
	st.d	$s0, $a1, 0
	st.d	$s6, $a1, 8
	addi.d	$s4, $s4, 8
	st.d	$s7, $a1, 16
	beq	$s4, $a0, .LBB195_27
.LBB195_16:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB195_19 Depth 2
	ld.d	$s3, $s4, 0
	ori	$s1, $zero, 128
	b	.LBB195_19
	.p2align	4, , 16
.LBB195_17:                             #   in Loop: Header=BB195_19 Depth=2
	srai.d	$a1, $a0, 7
.LBB195_18:                             #   in Loop: Header=BB195_19 Depth=2
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s0, $a0, $s6, 2
	sub.d	$s1, $s1, $s2
	alsl.d	$s3, $s2, $s3, 2
	blez	$s1, .LBB195_15
.LBB195_19:                             #   Parent Loop BB195_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	sub.d	$a0, $s7, $s0
	srai.d	$a0, $a0, 2
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$s2, $a0, $a1
	blt	$s2, $s8, .LBB195_25
# %bb.20:                               #   in Loop: Header=BB195_19 Depth=2
	slli.d	$a2, $s2, 2
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB195_21:                             # %_ZSt14__copy_move_a2ILb1EPiS0_S0_ET2_T0_T1_S1_.exit.i29
                                        #   in Loop: Header=BB195_19 Depth=2
	sub.d	$a0, $s0, $s6
	srai.d	$a0, $a0, 2
	add.d	$a0, $a0, $s2
	bltz	$a0, .LBB195_17
# %bb.22:                               #   in Loop: Header=BB195_19 Depth=2
	bltu	$fp, $a0, .LBB195_24
# %bb.23:                               #   in Loop: Header=BB195_19 Depth=2
	alsl.d	$s0, $s2, $s0, 2
	sub.d	$s1, $s1, $s2
	alsl.d	$s3, $s2, $s3, 2
	bgtz	$s1, .LBB195_19
	b	.LBB195_15
	.p2align	4, , 16
.LBB195_24:                             #   in Loop: Header=BB195_19 Depth=2
	srli.d	$a1, $a0, 7
	b	.LBB195_18
.LBB195_25:                             #   in Loop: Header=BB195_19 Depth=2
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB195_21
# %bb.26:                               #   in Loop: Header=BB195_19 Depth=2
	ld.w	$a0, $s3, 0
	st.w	$a0, $s0, 0
	b	.LBB195_21
.LBB195_27:                             # %._crit_edge
	move	$a0, $s2
	ld.d	$s2, $s2, 8
	ld.d	$a0, $a0, 0
	sub.d	$a0, $a0, $s2
	srai.d	$fp, $a0, 2
	blez	$fp, .LBB195_51
# %bb.28:                               # %.lr.ph.i9.preheader
	ori	$s1, $zero, 2
	ori	$s3, $zero, 127
	ori	$s4, $zero, 1
	b	.LBB195_31
	.p2align	4, , 16
.LBB195_29:                             #   in Loop: Header=BB195_31 Depth=1
	srai.d	$a1, $a0, 7
.LBB195_30:                             #   in Loop: Header=BB195_31 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s0, $a0, $s6, 2
	sub.d	$fp, $fp, $s8
	alsl.d	$s2, $s8, $s2, 2
	blez	$fp, .LBB195_51
.LBB195_31:                             # %.lr.ph.i9
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s7, $s0
	srai.d	$a0, $a0, 2
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$s8, $a0, $a1
	blt	$s8, $s1, .LBB195_37
# %bb.32:                               #   in Loop: Header=BB195_31 Depth=1
	slli.d	$a2, $s8, 2
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB195_33:                             # %_ZSt14__copy_move_a2ILb1EPiS0_S0_ET2_T0_T1_S1_.exit.i13
                                        #   in Loop: Header=BB195_31 Depth=1
	sub.d	$a0, $s0, $s6
	srai.d	$a0, $a0, 2
	add.d	$a0, $a0, $s8
	bltz	$a0, .LBB195_29
# %bb.34:                               #   in Loop: Header=BB195_31 Depth=1
	bltu	$s3, $a0, .LBB195_36
# %bb.35:                               #   in Loop: Header=BB195_31 Depth=1
	alsl.d	$s0, $s8, $s0, 2
	sub.d	$fp, $fp, $s8
	alsl.d	$s2, $s8, $s2, 2
	bgtz	$fp, .LBB195_31
	b	.LBB195_51
	.p2align	4, , 16
.LBB195_36:                             #   in Loop: Header=BB195_31 Depth=1
	srli.d	$a1, $a0, 7
	b	.LBB195_30
.LBB195_37:                             #   in Loop: Header=BB195_31 Depth=1
	bne	$s8, $s4, .LBB195_33
# %bb.38:                               #   in Loop: Header=BB195_31 Depth=1
	ld.w	$a0, $s2, 0
	st.w	$a0, $s0, 0
	b	.LBB195_33
.LBB195_39:
	ld.d	$a0, $s2, 0
	ld.d	$s0, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$s7, $a3, 16
	ld.d	$s5, $a3, 24
	sub.d	$a0, $a0, $s3
	srai.d	$fp, $a0, 2
	blez	$fp, .LBB195_51
# %bb.40:                               # %.lr.ph.i41.preheader
	ori	$s1, $zero, 2
	ori	$s2, $zero, 127
	ori	$s4, $zero, 1
	b	.LBB195_43
	.p2align	4, , 16
.LBB195_41:                             #   in Loop: Header=BB195_43 Depth=1
	srai.d	$a1, $a0, 7
.LBB195_42:                             #   in Loop: Header=BB195_43 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 7
	sub.d	$a0, $a0, $a1
	alsl.d	$s0, $a0, $s6, 2
	sub.d	$fp, $fp, $s8
	alsl.d	$s3, $s8, $s3, 2
	blez	$fp, .LBB195_51
.LBB195_43:                             # %.lr.ph.i41
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s7, $s0
	srai.d	$a0, $a0, 2
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$s8, $a0, $a1
	blt	$s8, $s1, .LBB195_49
# %bb.44:                               #   in Loop: Header=BB195_43 Depth=1
	slli.d	$a2, $s8, 2
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB195_45:                             # %_ZSt14__copy_move_a2ILb1EPiS0_S0_ET2_T0_T1_S1_.exit.i45
                                        #   in Loop: Header=BB195_43 Depth=1
	sub.d	$a0, $s0, $s6
	srai.d	$a0, $a0, 2
	add.d	$a0, $a0, $s8
	bltz	$a0, .LBB195_41
# %bb.46:                               #   in Loop: Header=BB195_43 Depth=1
	bltu	$s2, $a0, .LBB195_48
# %bb.47:                               #   in Loop: Header=BB195_43 Depth=1
	alsl.d	$s0, $s8, $s0, 2
	sub.d	$fp, $fp, $s8
	alsl.d	$s3, $s8, $s3, 2
	bgtz	$fp, .LBB195_43
	b	.LBB195_51
	.p2align	4, , 16
.LBB195_48:                             #   in Loop: Header=BB195_43 Depth=1
	srli.d	$a1, $a0, 7
	b	.LBB195_42
.LBB195_49:                             #   in Loop: Header=BB195_43 Depth=1
	bne	$s8, $s4, .LBB195_45
# %bb.50:                               #   in Loop: Header=BB195_43 Depth=1
	ld.w	$a0, $s3, 0
	st.w	$a0, $s0, 0
	b	.LBB195_45
.LBB195_51:                             # %_ZSt14__copy_move_a1ILb1EPiiEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit20
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.d	$s0, $a0, 0
	st.d	$s6, $a0, 8
	st.d	$s7, $a0, 16
	st.d	$s5, $a0, 24
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end195:
	.size	_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_, .Lfunc_end195-_ZSt15__copy_move_ditILb1EiRiPiSt15_Deque_iteratorIiS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
.Lfunc_begin105:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception105
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s1, $a2
	move	$s3, $a1
	move	$s0, $a0
	st.d	$a0, $sp, 8
	ori	$a0, $zero, 200
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	addi.d	$s2, $a0, 32
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E)
	jirl	$ra, $ra, 0
	st.d	$fp, $sp, 16
.Ltmp3527:
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_)
	jirl	$ra, $ra, 0
.Ltmp3528:
# %bb.1:
	move	$s1, $a1
	beqz	$a1, .LBB196_9
# %bb.2:
	addi.d	$a3, $s0, 8
	ori	$a1, $zero, 1
	bnez	$a0, .LBB196_8
# %bb.3:
	beq	$a3, $s1, .LBB196_8
# %bb.4:
	ld.d	$s3, $fp, 40
	ld.d	$s4, $s1, 40
	sltu	$a0, $s4, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB196_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s2, 0
	move	$s2, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a3, $s2
	bnez	$a0, .LBB196_7
.LBB196_6:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s3, $s4
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB196_7:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
.LBB196_8:                              # %.thread
	move	$a0, $a1
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 40
	move	$a0, $fp
	b	.LBB196_10
.LBB196_9:
	move	$s0, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 200
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
.LBB196_10:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB196_11:
.Ltmp3529:
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end196:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_, .Lfunc_end196-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table196:
.Lexception105:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end105-.Lcst_begin105
.Lcst_begin105:
	.uleb128 .Lfunc_begin105-.Lfunc_begin105 # >> Call Site 1 <<
	.uleb128 .Ltmp3527-.Lfunc_begin105      #   Call between .Lfunc_begin105 and .Ltmp3527
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3527-.Lfunc_begin105      # >> Call Site 2 <<
	.uleb128 .Ltmp3528-.Ltmp3527            #   Call between .Ltmp3527 and .Ltmp3528
	.uleb128 .Ltmp3529-.Lfunc_begin105      #     jumps to .Ltmp3529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3528-.Lfunc_begin105      # >> Call Site 3 <<
	.uleb128 .Lfunc_end196-.Ltmp3528        #   Call between .Ltmp3528 and .Lfunc_end196
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end105:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	addi.d	$a0, $a0, 8
	move	$s0, $a2
	beq	$a0, $a1, .LBB197_4
# %bb.1:
	move	$fp, $a1
	ld.d	$s5, $s0, 8
	ld.d	$s6, $a1, 40
	sltu	$a0, $s6, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s6, $a0
	or	$s2, $a0, $a1
	beqz	$s2, .LBB197_10
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i22
	ld.d	$s3, $fp, 32
	ld.d	$s4, $s0, 0
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB197_11
# %bb.3:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread
	bltz	$a0, .LBB197_12
	b	.LBB197_18
.LBB197_4:
	ld.d	$a0, $s1, 40
	beqz	$a0, .LBB197_28
# %bb.5:
	ld.d	$a1, $s1, 32
	ld.d	$fp, $a1, 40
	ld.d	$s2, $s0, 8
	sltu	$a0, $s2, $fp
	masknez	$a2, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a2
	beqz	$a2, .LBB197_7
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a3, $s0, 0
	ld.d	$a0, $a1, 32
	move	$s3, $a1
	move	$a1, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	bnez	$a0, .LBB197_8
.LBB197_7:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $fp, $s2
	lu12i.w	$a2, -524288
	slt	$a3, $a2, $a0
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
	lu12i.w	$a2, 524287
	ori	$a2, $a2, 4095
	slt	$a3, $a0, $a2
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
.LBB197_8:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB197_28
# %bb.9:
	move	$fp, $zero
	b	.LBB197_29
.LBB197_10:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29
	bltu	$s5, $s6, .LBB197_12
	b	.LBB197_19
.LBB197_11:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread81
	bgeu	$s5, $s6, .LBB197_18
.LBB197_12:
	ld.d	$a0, $s1, 24
	beq	$a0, $fp, .LBB197_22
# %bb.13:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s5, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB197_15
# %bb.14:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i31
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB197_16
.LBB197_15:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i34
	sub.d	$a0, $s3, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB197_16:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit38
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB197_28
# %bb.17:
	ld.d	$a0, $s2, 24
	sltui	$a0, $a0, 1
	masknez	$fp, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a1, $a0, $fp
	b	.LBB197_29
.LBB197_18:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i40
	move	$a0, $s3
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB197_20
.LBB197_19:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i43
	sub.d	$a0, $s6, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB197_20:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit47
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB197_23
# %bb.21:
	move	$a1, $zero
	b	.LBB197_29
.LBB197_22:
	move	$a1, $fp
	b	.LBB197_29
.LBB197_23:
	ld.d	$a0, $s1, 32
	beq	$a0, $fp, .LBB197_30
# %bb.24:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB197_26
# %bb.25:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i49
	ld.d	$a1, $s2, 32
	ld.d	$a0, $s0, 0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB197_27
.LBB197_26:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i52
	sub.d	$a0, $s5, $s3
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB197_27:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit56
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB197_31
.LBB197_28:
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.LBB197_29:
	move	$a0, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB197_30:
	move	$a1, $fp
	move	$fp, $zero
	b	.LBB197_29
.LBB197_31:
	ld.d	$a0, $fp, 24
	sltui	$a0, $a0, 1
	maskeqz	$a1, $fp, $a0
	masknez	$fp, $s2, $a0
	or	$a1, $a1, $fp
	b	.LBB197_29
.Lfunc_end197:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_, .Lfunc_end197-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB198_2
# %bb.1:
	addi.d	$a0, $fp, 32
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 200
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB198_2:
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end198:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev, .Lfunc_end198-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,"axG",@progbits,_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,comdat
	.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E # -- Begin function _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.p2align	5
	.type	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,@function
_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E: # @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	addi.d	$a0, $a0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $a1, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB199_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 0
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 16
	b	.LBB199_3
.LBB199_2:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB199_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 8
	st.d	$s1, $fp, 0
	st.b	$zero, $fp, 16
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 32
	addi.d	$s1, $fp, 48
	st.d	$zero, $fp, 8
	beq	$a1, $s1, .LBB199_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB199_6
.LBB199_5:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	ld.d	$a1, $fp, 40
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB199_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	ld.d	$a0, $fp, 40
	vld	$vr0, $fp, 64
	st.d	$a0, $s0, 40
	st.b	$zero, $fp, 48
	vst	$vr0, $s0, 64
	ld.d	$a0, $fp, 80
	st.d	$s1, $fp, 32
	st.d	$zero, $fp, 40
	st.d	$a0, $s0, 80
	ld.w	$a0, $fp, 96
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 64
	st.d	$zero, $fp, 80
	st.w	$a0, $s0, 96
	ld.d	$a0, $fp, 88
	st.d	$a0, $s0, 88
	vld	$vr1, $fp, 104
	vst	$vr1, $s0, 104
	ld.d	$a0, $fp, 120
	st.d	$a0, $s0, 120
	ld.h	$a0, $fp, 128
	st.d	$zero, $fp, 120
	vst	$vr0, $fp, 104
	st.h	$a0, $s0, 128
	addi.d	$a0, $s0, 152
	st.d	$a0, $s0, 136
	ld.d	$a1, $fp, 136
	addi.d	$s1, $fp, 152
	beq	$a1, $s1, .LBB199_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i7.i
	st.d	$a1, $s0, 136
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 152
	b	.LBB199_9
.LBB199_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i8.i
	ld.d	$a1, $fp, 144
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB199_9:                              # %_ZN2PP8VariableC2EOS0_.exit
	ld.d	$a0, $fp, 144
	st.d	$a0, $s0, 144
	st.d	$s1, $fp, 136
	st.d	$zero, $fp, 144
	st.b	$zero, $fp, 152
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end199:
	.size	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E, .Lfunc_end199-_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	lu12i.w	$s4, -524288
	lu12i.w	$s3, 524287
	beqz	$a0, .LBB200_13
# %bb.1:                                # %.lr.ph
	ld.d	$s5, $s0, 8
	ld.d	$s2, $s0, 0
	ori	$s6, $s3, 4095
	ori	$s7, $zero, 24
	ori	$s8, $zero, 16
	b	.LBB200_4
	.p2align	4, , 16
.LBB200_2:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB200_4 Depth=1
	sub.d	$a0, $s5, $s3
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB200_3:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
                                        #   in Loop: Header=BB200_4 Depth=1
	addi.w	$a1, $a0, 0
	slti	$a0, $a1, 0
	masknez	$a2, $s7, $a0
	maskeqz	$a0, $s8, $a0
	or	$a0, $a0, $a2
	ldx.d	$a0, $fp, $a0
	beqz	$a0, .LBB200_6
.LBB200_4:                              # =>This Inner Loop Header: Depth=1
	move	$fp, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB200_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB200_4 Depth=1
	ld.d	$a1, $fp, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB200_3
	b	.LBB200_2
.LBB200_6:                              # %._crit_edge
	move	$s2, $fp
	lu12i.w	$s3, 524287
	bgez	$a1, .LBB200_9
# %bb.7:                                # %._crit_edge.thread
	ld.d	$a0, $s1, 24
	beq	$fp, $a0, .LBB200_14
.LBB200_8:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
.LBB200_9:
	ld.d	$s1, $s2, 40
	ld.d	$s5, $s0, 8
	sltu	$a0, $s5, $s1
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB200_11
# %bb.10:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i6
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB200_12
.LBB200_11:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i9
	sub.d	$a0, $s1, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	ori	$a1, $s3, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB200_12:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit13
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
	srai.d	$a0, $a0, 63
	and	$fp, $a0, $fp
	masknez	$a0, $s2, $a1
	b	.LBB200_15
.LBB200_13:
	addi.d	$fp, $s1, 8
	ld.d	$a0, $s1, 24
	bne	$fp, $a0, .LBB200_8
.LBB200_14:
	move	$a0, $zero
.LBB200_15:
	move	$a1, $fp
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end200:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_, .Lfunc_end200-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
.Lfunc_begin106:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception106
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB201_18
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	move	$s4, $a1
	srai.d	$a0, $s7, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$s6, $zero, -1
	lu52i.d	$a1, $s6, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	add.d	$s3, $a0, $s7
	addi.d	$a0, $s3, 16
	ld.d	$a1, $s4, 8
	ld.d	$s4, $s4, 0
	stx.d	$a0, $s2, $s7
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a2, .LBB201_4
# %bb.2:                                # %.noexc.i
.Ltmp3530:
	addi.d	$a1, $sp, 0
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp3531:
# %bb.3:                                # %.noexc
	ld.d	$a1, $sp, 0
	st.d	$a0, $s3, 0
	st.d	$a1, $s3, 16
.LBB201_4:                              # %._crit_edge.i.i
	beq	$a1, $s6, .LBB201_7
# %bb.5:                                # %._crit_edge.i.i
	bnez	$a1, .LBB201_11
# %bb.6:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
.LBB201_7:
	ld.d	$a0, $sp, 0
	st.d	$a0, $s3, 8
	move	$s3, $s2
	bne	$s0, $s5, .LBB201_12
.LBB201_8:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	beqz	$s0, .LBB201_10
.LBB201_9:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB201_10:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB201_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0
	st.d	$a0, $s3, 8
	move	$s3, $s2
	beq	$s0, $s5, .LBB201_8
.LBB201_12:                             # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB201_15
	.p2align	4, , 16
.LBB201_13:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB201_15 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB201_14:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB201_15 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	addi.d	$s4, $s4, 32
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB201_17
.LBB201_15:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	bne	$s3, $a1, .LBB201_13
# %bb.16:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB201_15 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB201_14
.LBB201_17:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	add.d	$s3, $s2, $s4
	bnez	$s0, .LBB201_9
	b	.LBB201_10
.LBB201_18:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB201_19:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22
.Ltmp3532:
	move	$fp, $a0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end201:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_, .Lfunc_end201-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table201:
.Lexception106:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end106-.Lcst_begin106
.Lcst_begin106:
	.uleb128 .Lfunc_begin106-.Lfunc_begin106 # >> Call Site 1 <<
	.uleb128 .Ltmp3530-.Lfunc_begin106      #   Call between .Lfunc_begin106 and .Ltmp3530
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3530-.Lfunc_begin106      # >> Call Site 2 <<
	.uleb128 .Ltmp3531-.Ltmp3530            #   Call between .Ltmp3530 and .Ltmp3531
	.uleb128 .Ltmp3532-.Lfunc_begin106      #     jumps to .Ltmp3532
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3531-.Lfunc_begin106      # >> Call Site 3 <<
	.uleb128 .Lfunc_end201-.Ltmp3531        #   Call between .Ltmp3531 and .Lfunc_end201
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end106:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_,"axG",@progbits,_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_,comdat
	.weak	_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_ # -- Begin function _ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_
	.p2align	5
	.type	_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_,@function
_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_: # @_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB202_12
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a1
	move	$s0, $a0
	b	.LBB202_3
	.p2align	4, , 16
.LBB202_2:                              # %_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_.exit
                                        #   in Loop: Header=BB202_3 Depth=1
	addi.d	$s0, $s0, 24
	beq	$s0, $fp, .LBB202_11
.LBB202_3:                              # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB202_6 Depth 2
	ld.d	$a0, $s0, 0
	ld.d	$s1, $s0, 8
	beq	$a0, $s1, .LBB202_9
# %bb.4:                                # %.lr.ph.i.i.i.preheader
                                        #   in Loop: Header=BB202_3 Depth=1
	addi.d	$s2, $a0, 16
	b	.LBB202_6
	.p2align	4, , 16
.LBB202_5:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB202_6 Depth=2
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB202_8
.LBB202_6:                              # %.lr.ph.i.i.i
                                        #   Parent Loop BB202_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB202_5
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB202_6 Depth=2
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB202_5
	.p2align	4, , 16
.LBB202_8:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
                                        #   in Loop: Header=BB202_3 Depth=1
	ld.d	$a0, $s0, 0
.LBB202_9:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
                                        #   in Loop: Header=BB202_3 Depth=1
	beqz	$a0, .LBB202_2
# %bb.10:                               #   in Loop: Header=BB202_3 Depth=1
	ld.d	$a1, $s0, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB202_2
.LBB202_11:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
.LBB202_12:                             # %._crit_edge
	ret
.Lfunc_end202:
	.size	_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_, .Lfunc_end202-_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s6, $s5, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB203_14
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	move	$s3, $a1
	srai.d	$a0, $s6, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$a1, $s3, 0
	add.d	$s7, $a0, $s6
	addi.d	$a0, $s7, 16
	addi.d	$s4, $s3, 16
	stx.d	$a0, $s2, $s6
	beq	$a1, $s4, .LBB203_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a0, $s3, 16
	ld.d	$s6, $s3, 8
	st.d	$a1, $s7, 0
	st.d	$a0, $s7, 16
	b	.LBB203_4
.LBB203_3:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$s6, $s3, 8
	addi.d	$a2, $s6, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB203_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	st.d	$s6, $s7, 8
	st.d	$s4, $s3, 0
	st.d	$zero, $s3, 8
	st.b	$zero, $s3, 16
	move	$s3, $s2
	beq	$s0, $s5, .LBB203_11
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB203_8
	.p2align	4, , 16
.LBB203_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB203_8 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB203_7:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB203_8 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	addi.d	$s4, $s4, 32
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB203_10
.LBB203_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	bne	$s3, $a1, .LBB203_6
# %bb.9:                                # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB203_8 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB203_7
.LBB203_10:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	add.d	$s3, $s2, $s4
.LBB203_11:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	beqz	$s0, .LBB203_13
# %bb.12:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB203_13:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB203_14:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end203:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_, .Lfunc_end203-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_ # -- Begin function _ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_,@function
_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_: # @_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_
.Lfunc_begin107:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception107
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$s4, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s6, $s4, $s0
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB204_8
# %bb.1:                                # %_ZNKSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE12_M_check_lenEmPKc.exit
	move	$s2, $a1
	srli.d	$a0, $s6, 3
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mul.d	$a0, $a0, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	maskeqz	$a3, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a1, $a3, $a1
	add.d	$a0, $a1, $a0
	lu12i.w	$a1, 349525
	ori	$a1, $a1, 1365
	bstrins.d	$a1, $a1, 58, 32
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s5, $a0, $a1
	slli.d	$a0, $s5, 4
	alsl.d	$s3, $s5, $a0, 3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	add.d	$a0, $a0, $s6
.Ltmp3533:
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp3534:
# %bb.2:                                # %_ZNSt16allocator_traitsISaISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEE9constructIS8_JRKS8_EEEvRS9_PT_DpOT0_.exit
	move	$s2, $s1
	beq	$s0, $s4, .LBB204_5
# %bb.3:                                # %.lr.ph.i.i.i.preheader
	vrepli.b	$vr0, 0
	move	$s2, $s1
	move	$a0, $s0
	.p2align	4, , 16
.LBB204_4:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr1, $a0, 0
	ld.d	$a1, $a0, 16
	vst	$vr1, $s2, 0
	st.d	$a1, $s2, 16
	st.d	$zero, $a0, 16
	vst	$vr0, $a0, 0
	addi.d	$a0, $a0, 24
	addi.d	$s2, $s2, 24
	bne	$a0, $s4, .LBB204_4
.LBB204_5:                              # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE11_S_relocateEPS7_SA_SA_RS8_.exit
	beqz	$s0, .LBB204_7
# %bb.6:                                # %_ZNSt12_Vector_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EESaIS8_EE13_M_deallocateEPS8_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB204_7:                              # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 24
	st.d	$s1, $fp, 0
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 24
	mul.d	$a0, $s5, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB204_8:
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a0, $a0, %pc_lo12(.L.str.241)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB204_9:                              # %_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE12_Guard_allocD2Ev.exit22
.Ltmp3535:
	move	$fp, $a0
	move	$a0, $s1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end204:
	.size	_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_, .Lfunc_end204-_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorIS_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EESaIS7_EE17_M_realloc_appendIJRKS7_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table204:
.Lexception107:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end107-.Lcst_begin107
.Lcst_begin107:
	.uleb128 .Lfunc_begin107-.Lfunc_begin107 # >> Call Site 1 <<
	.uleb128 .Ltmp3533-.Lfunc_begin107      #   Call between .Lfunc_begin107 and .Ltmp3533
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3533-.Lfunc_begin107      # >> Call Site 2 <<
	.uleb128 .Ltmp3534-.Ltmp3533            #   Call between .Ltmp3533 and .Ltmp3534
	.uleb128 .Ltmp3535-.Lfunc_begin107      #     jumps to .Ltmp3535
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3534-.Lfunc_begin107      # >> Call Site 3 <<
	.uleb128 .Lfunc_end204-.Ltmp3534        #   Call between .Ltmp3534 and .Lfunc_end204
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end107:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev,comdat
	.weak	_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev,@function
_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev: # @_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev
.Lfunc_begin108:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception108
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB205_2
.LBB205_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB205_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp3536:
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvT_SA_)
	jirl	$ra, $ra, 0
.Ltmp3537:
	b	.LBB205_1
.LBB205_3:
.Ltmp3538:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end205:
	.size	_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev, .Lfunc_end205-_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEvED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table205:
.Lexception108:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end108-.Lcst_begin108
.Lcst_begin108:
	.uleb128 .Ltmp3536-.Lfunc_begin108      # >> Call Site 1 <<
	.uleb128 .Ltmp3537-.Ltmp3536            #   Call between .Ltmp3536 and .Ltmp3537
	.uleb128 .Ltmp3538-.Lfunc_begin108      #     jumps to .Ltmp3538
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3537-.Lfunc_begin108      # >> Call Site 2 <<
	.uleb128 .Lfunc_end205-.Ltmp3537        #   Call between .Ltmp3537 and .Lfunc_end205
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end108:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
.Lfunc_begin109:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception109
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s1, $a2
	move	$s3, $a1
	move	$fp, $a0
	ori	$a0, $zero, 168
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	addi.d	$s2, $a0, 32
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E)
	jirl	$ra, $ra, 0
.Ltmp3539:
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_)
	jirl	$ra, $ra, 0
.Ltmp3540:
# %bb.1:
	move	$a2, $a0
	move	$s1, $a1
	beqz	$a1, .LBB206_9
# %bb.2:
	addi.d	$a3, $fp, 8
	ori	$a0, $zero, 1
	bnez	$a2, .LBB206_8
# %bb.3:
	beq	$a3, $s1, .LBB206_8
# %bb.4:
	ld.d	$s3, $s0, 40
	ld.d	$s4, $s1, 40
	sltu	$a0, $s4, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB206_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s2, 0
	move	$s2, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a3, $s2
	bnez	$a0, .LBB206_7
.LBB206_6:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s3, $s4
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB206_7:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
.LBB206_8:                              # %.thread
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 40
	move	$a0, $s0
	b	.LBB206_10
.LBB206_9:
	move	$s1, $a2
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
	move	$a0, $s1
.LBB206_10:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev.exit7
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB206_11:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev.exit
.Ltmp3541:
	move	$s1, $a0
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end206:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_, .Lfunc_end206-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table206:
.Lexception109:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end109-.Lcst_begin109
.Lcst_begin109:
	.uleb128 .Lfunc_begin109-.Lfunc_begin109 # >> Call Site 1 <<
	.uleb128 .Ltmp3539-.Lfunc_begin109      #   Call between .Lfunc_begin109 and .Ltmp3539
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3539-.Lfunc_begin109      # >> Call Site 2 <<
	.uleb128 .Ltmp3540-.Ltmp3539            #   Call between .Ltmp3539 and .Ltmp3540
	.uleb128 .Ltmp3541-.Lfunc_begin109      #     jumps to .Ltmp3541
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3540-.Lfunc_begin109      # >> Call Site 3 <<
	.uleb128 .Lfunc_end206-.Ltmp3540        #   Call between .Ltmp3540 and .Lfunc_end206
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end109:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	addi.d	$a0, $a0, 8
	move	$s0, $a2
	beq	$a0, $a1, .LBB207_4
# %bb.1:
	move	$fp, $a1
	ld.d	$s5, $s0, 8
	ld.d	$s6, $a1, 40
	sltu	$a0, $s6, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s6, $a0
	or	$s2, $a0, $a1
	beqz	$s2, .LBB207_10
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i22
	ld.d	$s3, $fp, 32
	ld.d	$s4, $s0, 0
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB207_11
# %bb.3:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread
	bltz	$a0, .LBB207_12
	b	.LBB207_18
.LBB207_4:
	ld.d	$a0, $s1, 40
	beqz	$a0, .LBB207_28
# %bb.5:
	ld.d	$a1, $s1, 32
	ld.d	$fp, $a1, 40
	ld.d	$s2, $s0, 8
	sltu	$a0, $s2, $fp
	masknez	$a2, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a2
	beqz	$a2, .LBB207_7
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a3, $s0, 0
	ld.d	$a0, $a1, 32
	move	$s3, $a1
	move	$a1, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	bnez	$a0, .LBB207_8
.LBB207_7:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $fp, $s2
	lu12i.w	$a2, -524288
	slt	$a3, $a2, $a0
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
	lu12i.w	$a2, 524287
	ori	$a2, $a2, 4095
	slt	$a3, $a0, $a2
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
.LBB207_8:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB207_28
# %bb.9:
	move	$fp, $zero
	b	.LBB207_29
.LBB207_10:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29
	bltu	$s5, $s6, .LBB207_12
	b	.LBB207_19
.LBB207_11:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread81
	bgeu	$s5, $s6, .LBB207_18
.LBB207_12:
	ld.d	$a0, $s1, 24
	beq	$a0, $fp, .LBB207_22
# %bb.13:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s5, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB207_15
# %bb.14:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i31
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB207_16
.LBB207_15:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i34
	sub.d	$a0, $s3, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB207_16:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit38
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB207_28
# %bb.17:
	ld.d	$a0, $s2, 24
	sltui	$a0, $a0, 1
	masknez	$fp, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a1, $a0, $fp
	b	.LBB207_29
.LBB207_18:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i40
	move	$a0, $s3
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB207_20
.LBB207_19:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i43
	sub.d	$a0, $s6, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB207_20:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit47
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB207_23
# %bb.21:
	move	$a1, $zero
	b	.LBB207_29
.LBB207_22:
	move	$a1, $fp
	b	.LBB207_29
.LBB207_23:
	ld.d	$a0, $s1, 32
	beq	$a0, $fp, .LBB207_30
# %bb.24:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB207_26
# %bb.25:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i49
	ld.d	$a1, $s2, 32
	ld.d	$a0, $s0, 0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB207_27
.LBB207_26:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i52
	sub.d	$a0, $s5, $s3
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB207_27:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit56
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB207_31
.LBB207_28:
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.LBB207_29:
	move	$a0, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB207_30:
	move	$a1, $fp
	move	$fp, $zero
	b	.LBB207_29
.LBB207_31:
	ld.d	$a0, $fp, 24
	sltui	$a0, $a0, 1
	maskeqz	$a1, $fp, $a0
	masknez	$fp, $s2, $a0
	or	$a1, $a1, $fp
	b	.LBB207_29
.Lfunc_end207:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_, .Lfunc_end207-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,"axG",@progbits,_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,comdat
	.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E # -- Begin function _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.p2align	5
	.type	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,@function
_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E: # @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	addi.d	$a0, $a0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $a1, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB208_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 0
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 16
	b	.LBB208_3
.LBB208_2:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB208_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 8
	st.d	$s1, $fp, 0
	st.b	$zero, $fp, 16
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 32
	addi.d	$s1, $fp, 48
	st.d	$zero, $fp, 8
	beq	$a1, $s1, .LBB208_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB208_6
.LBB208_5:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	ld.d	$a1, $fp, 40
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB208_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	ld.d	$a0, $fp, 40
	st.d	$a0, $s0, 40
	ld.d	$a0, $fp, 64
	st.d	$s1, $fp, 32
	st.d	$zero, $fp, 40
	st.b	$zero, $fp, 48
	st.d	$a0, $s0, 64
	addi.d	$a0, $s0, 88
	st.d	$a0, $s0, 72
	ld.d	$a1, $fp, 72
	addi.d	$s1, $fp, 88
	beq	$a1, $s1, .LBB208_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i5.i
	st.d	$a1, $s0, 72
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 88
	b	.LBB208_9
.LBB208_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i6.i
	ld.d	$a1, $fp, 80
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB208_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit7.i
	ld.d	$a0, $fp, 80
	st.d	$a0, $s0, 80
	st.d	$s1, $fp, 72
	st.b	$zero, $fp, 88
	addi.d	$a0, $s0, 120
	st.d	$a0, $s0, 104
	ld.d	$a1, $fp, 104
	addi.d	$s1, $fp, 120
	st.d	$zero, $fp, 80
	beq	$a1, $s1, .LBB208_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i8.i
	st.d	$a1, $s0, 104
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 120
	b	.LBB208_12
.LBB208_11:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i9.i
	ld.d	$a1, $fp, 112
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB208_12:                             # %_ZN2PP8FunctionC2EOS0_.exit
	ld.d	$a0, $fp, 112
	st.d	$a0, $s0, 112
	st.d	$s1, $fp, 104
	st.d	$zero, $fp, 112
	st.b	$zero, $fp, 120
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end208:
	.size	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E, .Lfunc_end208-_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	lu12i.w	$s4, -524288
	lu12i.w	$s3, 524287
	beqz	$a0, .LBB209_13
# %bb.1:                                # %.lr.ph
	ld.d	$s5, $s0, 8
	ld.d	$s2, $s0, 0
	ori	$s6, $s3, 4095
	ori	$s7, $zero, 24
	ori	$s8, $zero, 16
	b	.LBB209_4
	.p2align	4, , 16
.LBB209_2:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB209_4 Depth=1
	sub.d	$a0, $s5, $s3
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB209_3:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
                                        #   in Loop: Header=BB209_4 Depth=1
	addi.w	$a1, $a0, 0
	slti	$a0, $a1, 0
	masknez	$a2, $s7, $a0
	maskeqz	$a0, $s8, $a0
	or	$a0, $a0, $a2
	ldx.d	$a0, $fp, $a0
	beqz	$a0, .LBB209_6
.LBB209_4:                              # =>This Inner Loop Header: Depth=1
	move	$fp, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB209_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB209_4 Depth=1
	ld.d	$a1, $fp, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB209_3
	b	.LBB209_2
.LBB209_6:                              # %._crit_edge
	move	$s2, $fp
	lu12i.w	$s3, 524287
	bgez	$a1, .LBB209_9
# %bb.7:                                # %._crit_edge.thread
	ld.d	$a0, $s1, 24
	beq	$fp, $a0, .LBB209_14
.LBB209_8:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
.LBB209_9:
	ld.d	$s1, $s2, 40
	ld.d	$s5, $s0, 8
	sltu	$a0, $s5, $s1
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB209_11
# %bb.10:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i6
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB209_12
.LBB209_11:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i9
	sub.d	$a0, $s1, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	ori	$a1, $s3, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB209_12:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit13
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
	srai.d	$a0, $a0, 63
	and	$fp, $a0, $fp
	masknez	$a0, $s2, $a1
	b	.LBB209_15
.LBB209_13:
	addi.d	$fp, $s1, 8
	ld.d	$a0, $s1, 24
	bne	$fp, $a0, .LBB209_8
.LBB209_14:
	move	$a0, $zero
.LBB209_15:
	move	$a1, $fp
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end209:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_, .Lfunc_end209-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_,"axG",@progbits,_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_,comdat
	.weak	_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_ # -- Begin function _ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_
	.p2align	5
	.type	_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_,@function
_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_: # @_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a2, $a0, 64
	ld.d	$a0, $a0, 48
	addi.d	$a2, $a2, -1
	beq	$a0, $a2, .LBB210_2
# %bb.1:
	ld.b	$a1, $a1, 0
	ld.d	$a2, $fp, 56
	st.b	$a1, $a0, 0
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 48
	bne	$a0, $a2, .LBB210_7
	b	.LBB210_6
.LBB210_2:
	ld.d	$s0, $fp, 72
	ld.d	$a2, $fp, 40
	sub.d	$a2, $s0, $a2
	srli.d	$a2, $a2, 3
	sltu	$a3, $zero, $s0
	ld.d	$a4, $fp, 56
	ld.d	$a5, $fp, 32
	ld.d	$a6, $fp, 16
	sub.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 9
	add.d	$a0, $a0, $a5
	add.d	$a3, $a4, $a6
	sub.d	$a0, $a0, $a3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 2047
	beq	$a0, $a2, .LBB210_8
# %bb.3:
	move	$s1, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s0, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB210_5
# %bb.4:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s0, $fp, 72
.LBB210_5:                              # %.thread
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	ld.d	$a1, $fp, 48
	ld.b	$a2, $s1, 0
	addi.d	$a3, $s0, 8
	st.b	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
.LBB210_6:
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB210_7:                              # %_ZNSt5dequeIbSaIbEE4backEv.exit
	addi.d	$a0, $a0, -1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB210_8:
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a0, $a0, %pc_lo12(.L.str.239)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end210:
	.size	_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_, .Lfunc_end210-_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB211_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB211_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB211_12
# %bb.3:
	move	$a0, $s0
	b	.LBB211_8
.LBB211_4:                              # %_ZNSt11_Deque_baseIbSaIbEE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB211_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB211_6:                              # %_ZSt4copyIPPbS1_ET0_T_S3_S2_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB211_9
.LBB211_7:                              # %_ZSt9__advanceIPPblEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB211_14
.LBB211_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB211_9:                              # %_ZSt4copyIPPbS1_ET0_T_S3_S2_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB211_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB211_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB211_6
.LBB211_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB211_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB211_9
.LBB211_14:                             # %_ZSt9__advanceIPPblEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB211_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB211_9
.Lfunc_end211:
	.size	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb, .Lfunc_end211-_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.type	_ZN2PPL14case_sensitiveE,@object # @_ZN2PPL14case_sensitiveE
	.local	_ZN2PPL14case_sensitiveE
	.comm	_ZN2PPL14case_sensitiveE,1,1
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.space	1
	.size	.L.str, 1

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"Number of include files = "
	.size	.L.str.1, 27

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"\n"
	.size	.L.str.2, 2

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"Include file << "
	.size	.L.str.3, 17

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	" = "
	.size	.L.str.4, 4

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"set_index_base_zero"
	.size	.L.str.5, 20

	.type	_ZN2PPL10index_baseE,@object    # @_ZN2PPL10index_baseE
	.local	_ZN2PPL10index_baseE
	.comm	_ZN2PPL10index_baseE,1,4
	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"set_index_base_one"
	.size	.L.str.6, 19

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	"set_case_sensitive"
	.size	.L.str.7, 19

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"set_case_insensitive"
	.size	.L.str.8, 21

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"put_exe_args_here"
	.size	.L.str.9, 18

	.type	.L.str.10,@object               # @.str.10
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.10:
	.asciz	"execution line arguments"
	.size	.L.str.10, 25

	.type	.L.str.11,@object               # @.str.11
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.11:
	.asciz	"*** FATAL ERROR in line "
	.size	.L.str.11, 25

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	":"
	.size	.L.str.12, 2

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"    "
	.size	.L.str.13, 5

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"in file: "
	.size	.L.str.14, 10

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"Could not open include file."
	.size	.L.str.15, 29

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"The name of the file and any alternates are:"
	.size	.L.str.16, 45

	.type	.L.str.17,@object               # @.str.17
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.17:
	.asciz	"exe_args_tmp"
	.size	.L.str.17, 13

	.type	.L.str.18,@object               # @.str.18
	.p2align	3, 0x0
.L.str.18:
	.asciz	"********** List of pre-defined parser variables"
	.size	.L.str.18, 48

	.type	.L.str.19,@object               # @.str.19
	.p2align	3, 0x0
.L.str.19:
	.asciz	"********** End list of pre-defined parser variables"
	.size	.L.str.19, 52

	.type	.L.str.20,@object               # @.str.20
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.20:
	.asciz	"handle quotes gave error "
	.size	.L.str.20, 26

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	","
	.size	.L.str.22, 2

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"handle variable dimension statement has error "
	.size	.L.str.23, 47

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"error"
	.size	.L.str.24, 6

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"depcmd_dse"
	.size	.L.str.25, 11

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"matdef"
	.size	.L.str.26, 7

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"fix"
	.size	.L.str.27, 4

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"handle space between digits has error "
	.size	.L.str.28, 39

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"parser_redirect_to_file"
	.size	.L.str.29, 24

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"parser.out"
	.size	.L.str.30, 11

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	"restart_block"
	.size	.L.str.31, 14

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"Restart block names must be unique."
	.size	.L.str.32, 36

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"Non unique name = "
	.size	.L.str.33, 19

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"end_restart_block"
	.size	.L.str.34, 18

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"endsubroutine"
	.size	.L.str.35, 14

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"parser_list_variables"
	.size	.L.str.36, 22

	.type	.L.str.37,@object               # @.str.37
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.37:
	.asciz	"********** Debugging: list variable names and values available in input file."
	.size	.L.str.37, 78

	.type	.L.str.38,@object               # @.str.38
	.p2align	3, 0x0
.L.str.38:
	.asciz	"********** Debugging END: list variable names and values"
	.size	.L.str.38, 57

	.type	.L.str.39,@object               # @.str.39
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.39:
	.asciz	"parser_list_functions"
	.size	.L.str.39, 22

	.type	.L.str.40,@object               # @.str.40
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.40:
	.asciz	"********** Debugging: list function names available in input file."
	.size	.L.str.40, 67

	.type	.L.str.41,@object               # @.str.41
	.p2align	3, 0x0
.L.str.41:
	.asciz	"********** Debugging END: list function names."
	.size	.L.str.41, 47

	.type	.L.str.42,@object               # @.str.42
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.42:
	.asciz	"parser_print_fbuffer"
	.size	.L.str.42, 21

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"when"
	.size	.L.str.43, 5

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"whenever"
	.size	.L.str.44, 9

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"endwhen"
	.size	.L.str.45, 8

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"Extra endwhen (or end when) found with no matching when command."
	.size	.L.str.46, 65

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"Make sure every when command has one and only one"
	.size	.L.str.47, 50

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"matching endwhen command."
	.size	.L.str.48, 26

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"handle endwhen "
	.size	.L.str.49, 16

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"jump_to_call error "
	.size	.L.str.50, 20

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"jump_to_sub error "
	.size	.L.str.51, 19

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"subroutine"
	.size	.L.str.52, 11

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"command"
	.size	.L.str.53, 8

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"handle enddo is wrong with err "
	.size	.L.str.54, 32

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"Checked for  duplicate arrays and error is "
	.size	.L.str.55, 44

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"********************************************************************************\n"
	.size	.L.str.56, 82

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"********** Echo final parser buffer, this is what the code uses to set internal \n"
	.size	.L.str.57, 82

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"********** code variables."
	.size	.L.str.58, 27

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"********** End of echo final parser buffer.\n"
	.size	.L.str.59, 45

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"********************************************************************************\n\n"
	.size	.L.str.60, 83

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"********** Echo final when...then parser buffers, this is what the code uses to \n"
	.size	.L.str.61, 82

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"********** set internal code variables when processing when...then commands."
	.size	.L.str.62, 77

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"********** End of echo final when...then parser buffers.\n"
	.size	.L.str.63, 58

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"********** Echo restart block information."
	.size	.L.str.64, 43

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"********** End of echo restart block information.\n"
	.size	.L.str.65, 51

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"icall size = 0, this should never happen."
	.size	.L.str.66, 42

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"Subroutine argument not found."
	.size	.L.str.68, 31

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"This should not happen."
	.size	.L.str.69, 24

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"The calling argument, argument number "
	.size	.L.str.71, 39

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	", (after any math eval) is "
	.size	.L.str.72, 28

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"The corrseponding subroutine dummy argument, "
	.size	.L.str.73, 46

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	", has"
	.size	.L.str.74, 6

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	" the value of "
	.size	.L.str.75, 15

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"These are different and should not be."
	.size	.L.str.76, 39

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"The calling argument is not a variable and thus is fixed and cannot be changed."
	.size	.L.str.77, 80

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"The dummy argument was changed in the subroutine,"
	.size	.L.str.78, 50

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"thus you are trying to change a fixed quantity which is not allowed."
	.size	.L.str.79, 69

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"Calling argument not found."
	.size	.L.str.81, 28

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"Subroutine "
	.size	.L.str.83, 12

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	" not found."
	.size	.L.str.84, 12

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"Number of calling arguments = "
	.size	.L.str.86, 31

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"Number of subroutine arguments = "
	.size	.L.str.87, 34

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	"These must be the same."
	.size	.L.str.88, 24

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"Arguments in subroutine and in calling are different "
	.size	.L.str.89, 54

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"Subroutine dummy arguments must always be variables."
	.size	.L.str.90, 53

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"Argument "
	.size	.L.str.91, 10

	.type	.L.str.92,@object               # @.str.92
.L.str.92:
	.asciz	", "
	.size	.L.str.92, 3

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	"is not a variable."
	.size	.L.str.93, 19

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"Remember that variables always begin with a dollar sign, $"
	.size	.L.str.94, 59

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"Note that putting quotes around a variable name makes it"
	.size	.L.str.95, 57

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"a string, not a variable."
	.size	.L.str.96, 26

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	"Dummy arguments must be variables "
	.size	.L.str.97, 35

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"is both a global variable and a dummy subroutine argument."
	.size	.L.str.98, 59

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	"This is not allowed, dummy subroutine arguments cannot also be"
	.size	.L.str.99, 63

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	"global variables."
	.size	.L.str.100, 18

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	"Dummy argument cannot be global variable "
	.size	.L.str.101, 42

	.type	.L.str.102,@object              # @.str.102
.L.str.102:
	.asciz	"No enddo found for do statement."
	.size	.L.str.102, 33

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"Enddo not found "
	.size	.L.str.103, 17

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	"duplicate_array_values"
	.size	.L.str.104, 23

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	"warning"
	.size	.L.str.105, 8

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	"fatal"
	.size	.L.str.106, 6

	.type	.L.str.107,@object              # @.str.107
.L.str.107:
	.asciz	"none"
	.size	.L.str.107, 5

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"The value for the duplicate_array_values command must"
	.size	.L.str.108, 54

	.type	.L.str.109,@object              # @.str.109
.L.str.109:
	.asciz	"be either none, warning, or fatal"
	.size	.L.str.109, 34

	.type	.L.str.110,@object              # @.str.110
.L.str.110:
	.asciz	"Duplicate array values not recognized "
	.size	.L.str.110, 39

	.type	.L.str.111,@object              # @.str.111
.L.str.111:
	.asciz	" "
	.size	.L.str.111, 2

	.type	.L.str.114,@object              # @.str.114
.L.str.114:
	.asciz	"Number"
	.size	.L.str.114, 7

	.type	.L.str.115,@object              # @.str.115
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.115:
	.asciz	"Command"
	.size	.L.str.115, 8

	.type	.L.str.116,@object              # @.str.116
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.116:
	.asciz	"("
	.size	.L.str.116, 2

	.type	.L.str.117,@object              # @.str.117
.L.str.117:
	.asciz	"********** WARNING: Duplicate Scalar Commands Found in User Input File"
	.size	.L.str.117, 71

	.type	.L.str.118,@object              # @.str.118
.L.str.118:
	.asciz	"  The following commands appear more than once in the user input file."
	.size	.L.str.118, 71

	.type	.L.str.119,@object              # @.str.119
.L.str.119:
	.asciz	"********** WARNING: Duplicate Scalar Commands Found in when...then"
	.size	.L.str.119, 67

	.type	.L.str.120,@object              # @.str.120
.L.str.120:
	.asciz	"  The following commands appear more than once in the when...then."
	.size	.L.str.120, 67

	.type	.L.str.121,@object              # @.str.121
.L.str.121:
	.asciz	"  The last instance of the command will be used."
	.size	.L.str.121, 49

	.type	.L.str.122,@object              # @.str.122
.L.str.122:
	.asciz	"  Is this what you want??"
	.size	.L.str.122, 26

	.type	.L.str.123,@object              # @.str.123
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.123:
	.asciz	"$huge_double"
	.size	.L.str.123, 13

	.type	.L.str.124,@object              # @.str.124
	.p2align	3, 0x0
.L.str.124:
	.asciz	"largest double/2.0"
	.size	.L.str.124, 19

	.type	.L.str.125,@object              # @.str.125
	.p2align	3, 0x0
.L.str.125:
	.asciz	"$huge_float"
	.size	.L.str.125, 12

	.type	.L.str.126,@object              # @.str.126
	.p2align	3, 0x0
.L.str.126:
	.asciz	"largest float"
	.size	.L.str.126, 14

	.type	.L.str.127,@object              # @.str.127
	.p2align	3, 0x0
.L.str.127:
	.asciz	"$huge_int"
	.size	.L.str.127, 10

	.type	.L.str.128,@object              # @.str.128
	.p2align	3, 0x0
.L.str.128:
	.asciz	"largest integer"
	.size	.L.str.128, 16

	.type	.L.str.129,@object              # @.str.129
	.p2align	3, 0x0
.L.str.129:
	.asciz	"$tiny_double"
	.size	.L.str.129, 13

	.type	.L.str.130,@object              # @.str.130
	.p2align	3, 0x0
.L.str.130:
	.asciz	"tiniest double"
	.size	.L.str.130, 15

	.type	.L.str.131,@object              # @.str.131
	.p2align	3, 0x0
.L.str.131:
	.asciz	"$tiny_float"
	.size	.L.str.131, 12

	.type	.L.str.132,@object              # @.str.132
	.p2align	3, 0x0
.L.str.132:
	.asciz	"tiniest float"
	.size	.L.str.132, 14

	.type	.L.str.133,@object              # @.str.133
	.p2align	3, 0x0
.L.str.133:
	.asciz	"$tiny_int"
	.size	.L.str.133, 10

	.type	.L.str.134,@object              # @.str.134
	.p2align	3, 0x0
.L.str.134:
	.asciz	"tiniest integer"
	.size	.L.str.134, 16

	.type	.L.str.135,@object              # @.str.135
	.p2align	3, 0x0
.L.str.135:
	.asciz	"$ncores_tot"
	.size	.L.str.135, 12

	.type	.L.str.136,@object              # @.str.136
	.p2align	3, 0x0
.L.str.136:
	.asciz	"total number of cores"
	.size	.L.str.136, 22

	.type	.L.str.139,@object              # @.str.139
	.p2align	3, 0x0
.L.str.139:
	.asciz	"arccosine, radians, arg -1 to 1"
	.size	.L.str.139, 32

	.type	.L.str.141,@object              # @.str.141
	.p2align	3, 0x0
.L.str.141:
	.asciz	"arcsine, radians, arg -1 to 1"
	.size	.L.str.141, 30

	.type	.L.str.143,@object              # @.str.143
	.p2align	3, 0x0
.L.str.143:
	.asciz	"arctangent, returns radians"
	.size	.L.str.143, 28

	.type	.L.str.145,@object              # @.str.145
	.p2align	3, 0x0
.L.str.145:
	.asciz	"round up (smallest int >= arg)"
	.size	.L.str.145, 31

	.type	.L.str.146,@object              # @.str.146
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.146:
	.asciz	"cos"
	.size	.L.str.146, 4

	.type	.L.str.147,@object              # @.str.147
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.147:
	.asciz	"cosine, arg in radians"
	.size	.L.str.147, 23

	.type	.L.str.149,@object              # @.str.149
	.p2align	3, 0x0
.L.str.149:
	.asciz	"hyperbolic cosine"
	.size	.L.str.149, 18

	.type	.L.str.150,@object              # @.str.150
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.150:
	.asciz	"exp"
	.size	.L.str.150, 4

	.type	.L.str.151,@object              # @.str.151
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.151:
	.asciz	"exponential"
	.size	.L.str.151, 12

	.type	.L.str.153,@object              # @.str.153
	.p2align	3, 0x0
.L.str.153:
	.asciz	"absolute value of a real"
	.size	.L.str.153, 25

	.type	.L.str.154,@object              # @.str.154
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.154:
	.asciz	"floor"
	.size	.L.str.154, 6

	.type	.L.str.155,@object              # @.str.155
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.155:
	.asciz	"round down (largest int <= arg)"
	.size	.L.str.155, 32

	.type	.L.str.156,@object              # @.str.156
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.156:
	.asciz	"log"
	.size	.L.str.156, 4

	.type	.L.str.157,@object              # @.str.157
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.157:
	.asciz	"log to base e, arg>0"
	.size	.L.str.157, 21

	.type	.L.str.158,@object              # @.str.158
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.158:
	.asciz	"log10"
	.size	.L.str.158, 6

	.type	.L.str.159,@object              # @.str.159
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.159:
	.asciz	"log to base 10, arg>0"
	.size	.L.str.159, 22

	.type	.L.str.160,@object              # @.str.160
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.160:
	.asciz	"sin"
	.size	.L.str.160, 4

	.type	.L.str.161,@object              # @.str.161
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.161:
	.asciz	"sine, arg in radians"
	.size	.L.str.161, 21

	.type	.L.str.163,@object              # @.str.163
	.p2align	3, 0x0
.L.str.163:
	.asciz	"hyperbolic sine"
	.size	.L.str.163, 16

	.type	.L.str.165,@object              # @.str.165
	.p2align	3, 0x0
.L.str.165:
	.asciz	"square root (arg >= 0)"
	.size	.L.str.165, 23

	.type	.L.str.166,@object              # @.str.166
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.166:
	.asciz	"tan"
	.size	.L.str.166, 4

	.type	.L.str.167,@object              # @.str.167
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.167:
	.asciz	"tangent, arg in radians"
	.size	.L.str.167, 24

	.type	.L.str.169,@object              # @.str.169
	.p2align	3, 0x0
.L.str.169:
	.asciz	"hyperbolic tangent"
	.size	.L.str.169, 19

	.type	.L.str.170,@object              # @.str.170
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.170:
	.asciz	"atan2"
	.size	.L.str.170, 6

	.type	.L.str.171,@object              # @.str.171
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.171:
	.asciz	"arctangent, 2 args"
	.size	.L.str.171, 19

	.type	.L.str.173,@object              # @.str.173
	.p2align	3, 0x0
.L.str.173:
	.asciz	"remainder of arg1/arg2"
	.size	.L.str.173, 23

	.type	.L.str.174,@object              # @.str.174
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.174:
	.asciz	"pow"
	.size	.L.str.174, 4

	.type	.L.str.175,@object              # @.str.175
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.175:
	.asciz	"arg1 raised to arg2 power"
	.size	.L.str.175, 26

	.type	.L.str.176,@object              # @.str.176
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.176:
	.asciz	"max"
	.size	.L.str.176, 4

	.type	.L.str.177,@object              # @.str.177
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.177:
	.asciz	"return the greater of two args"
	.size	.L.str.177, 31

	.type	.L.str.178,@object              # @.str.178
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.178:
	.asciz	"min"
	.size	.L.str.178, 4

	.type	.L.str.179,@object              # @.str.179
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.179:
	.asciz	"return the lesser of two args"
	.size	.L.str.179, 30

	.type	.L.str.180,@object              # @.str.180
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.180:
	.asciz	"strlen"
	.size	.L.str.180, 7

	.type	.L.str.181,@object              # @.str.181
.L.str.181:
	.asciz	"string"
	.size	.L.str.181, 7

	.type	.L.str.182,@object              # @.str.182
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.182:
	.asciz	"number of chars in arg"
	.size	.L.str.182, 23

	.type	.L.str.183,@object              # @.str.183
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.183:
	.asciz	"strcat"
	.size	.L.str.183, 7

	.type	.L.str.184,@object              # @.str.184
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.184:
	.asciz	"concatenate two strings"
	.size	.L.str.184, 24

	.type	.L.str.186,@object              # @.str.186
	.p2align	3, 0x0
.L.str.186:
	.asciz	"erase chars from string"
	.size	.L.str.186, 24

	.type	.L.str.187,@object              # @.str.187
	.p2align	3, 0x0
.L.str.187:
	.asciz	"strinsert"
	.size	.L.str.187, 10

	.type	.L.str.188,@object              # @.str.188
	.p2align	3, 0x0
.L.str.188:
	.asciz	"insert chars into string"
	.size	.L.str.188, 25

	.type	.L.str.189,@object              # @.str.189
	.p2align	3, 0x0
.L.str.189:
	.asciz	"strsubstr"
	.size	.L.str.189, 10

	.type	.L.str.190,@object              # @.str.190
	.p2align	3, 0x0
.L.str.190:
	.asciz	"get sub string"
	.size	.L.str.190, 15

	.type	.L.str.191,@object              # @.str.191
	.p2align	3, 0x0
.L.str.191:
	.asciz	"strtrim"
	.size	.L.str.191, 8

	.type	.L.str.192,@object              # @.str.192
	.p2align	3, 0x0
.L.str.192:
	.asciz	"remove trailing whitespace"
	.size	.L.str.192, 27

	.type	.L.str.193,@object              # @.str.193
	.p2align	3, 0x0
.L.str.193:
	.asciz	"defined"
	.size	.L.str.193, 8

	.type	.L.str.194,@object              # @.str.194
	.p2align	3, 0x0
.L.str.194:
	.asciz	"logical"
	.size	.L.str.194, 8

	.type	.L.str.195,@object              # @.str.195
	.p2align	3, 0x0
.L.str.195:
	.asciz	"is a variable defined or not"
	.size	.L.str.195, 29

	.type	.L.str.196,@object              # @.str.196
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.196:
	.asciz	"*** FATAL ERROR"
	.size	.L.str.196, 16

	.type	.L.str.197,@object              # @.str.197
.L.str.197:
	.asciz	"Could not open input (or include) file."
	.size	.L.str.197, 40

	.type	.L.str.198,@object              # @.str.198
.L.str.198:
	.asciz	"The name of the file is "
	.size	.L.str.198, 25

	.type	.L.str.199,@object              # @.str.199
.L.str.199:
	.asciz	"(The file name is blank.)"
	.size	.L.str.199, 26

	.type	.L.str.200,@object              # @.str.200
.L.str.200:
	.asciz	"The name of the input file is "
	.size	.L.str.200, 31

	.type	.L.str.201,@object              # @.str.201
.L.str.201:
	.asciz	"This file exists, but its size is 0 bytes, (empty file)."
	.size	.L.str.201, 57

	.type	.L.str.202,@object              # @.str.202
.L.str.202:
	.asciz	"Perhaps the file system is full??"
	.size	.L.str.202, 34

	.type	.L.str.203,@object              # @.str.203
.L.str.203:
	.asciz	"Use a unix command like \"df -k .\" to find out how full the file system is."
	.size	.L.str.203, 75

	.type	.L.str.205,@object              # @.str.205
.L.str.205:
	.asciz	"Fatal errors"
	.size	.L.str.205, 13

	.type	.L.str.206,@object              # @.str.206
.L.str.206:
	.asciz	" have been encountered while parsing the user input file."
	.size	.L.str.206, 58

	.type	.L.str.207,@object              # @.str.207
.L.str.207:
	.asciz	"Note that often fixing the first error will also fix the other errors."
	.size	.L.str.207, 71

	.type	.L.str.208,@object              # @.str.208
.L.str.208:
	.asciz	"Error encountered in process_error_return_int -- err code is "
	.size	.L.str.208, 62

	.type	.L.str.209,@object              # @.str.209
.L.str.209:
	.asciz	"Error encountered while parsing the user input file -- err code is "
	.size	.L.str.209, 68

	.type	.L.str.210,@object              # @.str.210
.L.str.210:
	.asciz	"No restart blocks have been specified."
	.size	.L.str.210, 39

	.type	.L.str.211,@object              # @.str.211
.L.str.211:
	.asciz	"List restart block error: rb<0"
	.size	.L.str.211, 31

	.type	.L.str.212,@object              # @.str.212
.L.str.212:
	.asciz	"List restart block error: rb>=rblen"
	.size	.L.str.212, 36

	.type	.L.str.213,@object              # @.str.213
.L.str.213:
	.asciz	"** Echo restart block info, restart block name = "
	.size	.L.str.213, 50

	.type	.L.str.214,@object              # @.str.214
.L.str.214:
	.asciz	"false"
	.size	.L.str.214, 6

	.type	.L.str.215,@object              # @.str.215
.L.str.215:
	.asciz	"true"
	.size	.L.str.215, 5

	.type	.L.str.216,@object              # @.str.216
.L.str.216:
	.asciz	"    Active flag = "
	.size	.L.str.216, 19

	.type	.L.str.217,@object              # @.str.217
.L.str.217:
	.asciz	"    Condition for this restart block ="
	.size	.L.str.217, 39

	.type	.L.str.219,@object              # @.str.219
.L.str.219:
	.asciz	"    Number of sub-conditions = "
	.size	.L.str.219, 32

	.type	.L.str.220,@object              # @.str.220
.L.str.220:
	.asciz	"        For sub-condition "
	.size	.L.str.220, 27

	.type	.L.str.221,@object              # @.str.221
.L.str.221:
	.asciz	", satisfied flag = "
	.size	.L.str.221, 20

	.type	.L.str.222,@object              # @.str.222
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.222:
	.asciz	"Variable name"
	.size	.L.str.222, 14

	.type	.L.str.223,@object              # @.str.223
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.223:
	.asciz	"Value"
	.size	.L.str.223, 6

	.type	.L.str.224,@object              # @.str.224
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.224:
	.asciz	"Description"
	.size	.L.str.224, 12

	.type	.L.str.225,@object              # @.str.225
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.225:
	.asciz	")"
	.size	.L.str.225, 2

	.type	.L.str.226,@object              # @.str.226
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.226:
	.asciz	"Function name"
	.size	.L.str.226, 14

	.type	.L.str.227,@object              # @.str.227
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.227:
	.asciz	"nargs"
	.size	.L.str.227, 6

	.type	.L.str.229,@object              # @.str.229
.L.str.229:
	.asciz	"when ("
	.size	.L.str.229, 7

	.type	.L.str.230,@object              # @.str.230
.L.str.230:
	.asciz	"      "
	.size	.L.str.230, 7

	.type	.L.str.231,@object              # @.str.231
.L.str.231:
	.asciz	") then "
	.size	.L.str.231, 8

	.type	.L.str.232,@object              # @.str.232
.L.str.232:
	.asciz	"No when...then commands have been specified."
	.size	.L.str.232, 45

	.type	.L.str.233,@object              # @.str.233
.L.str.233:
	.asciz	"** Echo when...then final buffer, when...then number = "
	.size	.L.str.233, 56

	.type	.L.str.234,@object              # @.str.234
.L.str.234:
	.asciz	"    Condition for this when...then ="
	.size	.L.str.234, 37

	.type	.L.str.235,@object              # @.str.235
.L.str.235:
	.asciz	"    Commands for this when...then ="
	.size	.L.str.235, 36

	.type	.L.str.237,@object              # @.str.237
.L.str.237:
	.asciz	"include"
	.size	.L.str.237, 8

	.type	.L.str.238,@object              # @.str.238
.L.str.238:
	.asciz	"basic_string: construction from null is not valid"
	.size	.L.str.238, 50

	.type	_ZSt19piecewise_construct,@object # @_ZSt19piecewise_construct
	.section	.rodata._ZSt19piecewise_construct,"aG",@progbits,_ZSt19piecewise_construct,comdat
	.weak	_ZSt19piecewise_construct
_ZSt19piecewise_construct:
	.space	1
	.size	_ZSt19piecewise_construct, 1

	.type	.L.str.239,@object              # @.str.239
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.239:
	.asciz	"cannot create std::deque larger than max_size()"
	.size	.L.str.239, 48

	.type	.L.str.240,@object              # @.str.240
.L.str.240:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.240, 49

	.type	.L.str.241,@object              # @.str.241
.L.str.241:
	.asciz	"vector::_M_realloc_append"
	.size	.L.str.241, 26

	.type	.L.str.242,@object              # @.str.242
.L.str.242:
	.asciz	"basic_string::erase"
	.size	.L.str.242, 20

	.type	.L.str.243,@object              # @.str.243
.L.str.243:
	.asciz	"%s: __pos (which is %zu) > this->size() (which is %zu)"
	.size	.L.str.243, 55

	.globl	_ZN2PP11PowerParserC1Ev
	.type	_ZN2PP11PowerParserC1Ev,@function
_ZN2PP11PowerParserC1Ev = _ZN2PP11PowerParserC2Ev
	.globl	_ZN2PP11PowerParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.type	_ZN2PP11PowerParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP11PowerParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = _ZN2PP11PowerParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN2PP11PowerParserC1EPKc
	.type	_ZN2PP11PowerParserC1EPKc,@function
_ZN2PP11PowerParserC1EPKc = _ZN2PP11PowerParserC2EPKc
	.globl	_ZN2PP11PowerParserD1Ev
	.type	_ZN2PP11PowerParserD1Ev,@function
_ZN2PP11PowerParserD1Ev = _ZN2PP11PowerParserD2Ev
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.dword	__gxx_personality_v0
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZSt4cout
	.addrsig_sym _ZSt4cerr
	.addrsig_sym _ZSt19piecewise_construct
