	.file	"output_test_helper.cc"
                                        # Start of file scope inline assembly
	.globl	_ZSt21ios_base_library_initv

                                        # End of file scope inline assembly
	.text
	.hidden	_ZN8internal17GetResultsCheckerEv # -- Begin function _ZN8internal17GetResultsCheckerEv
	.globl	_ZN8internal17GetResultsCheckerEv
	.p2align	5
	.type	_ZN8internal17GetResultsCheckerEv,@function
_ZN8internal17GetResultsCheckerEv:      # @_ZN8internal17GetResultsCheckerEv
# %bb.0:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	dbar	20
	beqz	$a0, .LBB0_2
# %bb.1:
	pcalau12i	$a0, %pc_hi20(_ZZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal17GetResultsCheckerEvE2rc)
	ret
.LBB0_2:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB0_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$fp, $a0, %pc_lo12(_ZZN8internal17GetResultsCheckerEvE2rc)
	ori	$a2, $zero, 72
	move	$a0, $fp
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN8internal14ResultsCheckerD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN8internal14ResultsCheckerD2Ev)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
.LBB0_4:
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal17GetResultsCheckerEvE2rc)
	ret
.Lfunc_end0:
	.size	_ZN8internal17GetResultsCheckerEv, .Lfunc_end0-_ZN8internal17GetResultsCheckerEv
                                        # -- End function
	.section	.text._ZN8internal14ResultsCheckerD2Ev,"axG",@progbits,_ZN8internal14ResultsCheckerD2Ev,comdat
	.hidden	_ZN8internal14ResultsCheckerD2Ev # -- Begin function _ZN8internal14ResultsCheckerD2Ev
	.weak	_ZN8internal14ResultsCheckerD2Ev
	.p2align	2
	.type	_ZN8internal14ResultsCheckerD2Ev,@function
_ZN8internal14ResultsCheckerD2Ev:       # @_ZN8internal14ResultsCheckerD2Ev
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 48
	ld.d	$s0, $fp, 56
	beq	$a0, $s0, .LBB1_6
# %bb.1:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB1_3
	.p2align	4, , 16
.LBB1_2:                                # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB1_3 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB1_5
.LBB1_3:                                # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB1_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB1_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB1_2
.LBB1_5:                                # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 48
.LBB1_6:                                # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB1_8
# %bb.7:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1_8:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s0, $fp, 24
	ld.d	$s1, $fp, 32
	bne	$s0, $s1, .LBB1_17
# %bb.9:                                # %_ZSt8_DestroyIP7ResultsS0_EvT_S2_RSaIT0_E.exit.i
	beqz	$s0, .LBB1_11
.LBB1_10:
	ld.d	$a0, $fp, 40
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1_11:                               # %_ZNSt6vectorI7ResultsSaIS0_EED2Ev.exit
	ld.d	$s0, $fp, 0
	ld.d	$s1, $fp, 8
	beq	$s0, $s1, .LBB1_14
	.p2align	4, , 16
.LBB1_12:                               # %.lr.ph.i.i8
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker12PatternAndFnD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 120
	bne	$s0, $s1, .LBB1_12
# %bb.13:                               # %_ZSt8_DestroyIPN8internal14ResultsChecker12PatternAndFnES2_EvT_S4_RSaIT0_E.exitthread-pre-split.i
	ld.d	$s0, $fp, 0
.LBB1_14:                               # %_ZSt8_DestroyIPN8internal14ResultsChecker12PatternAndFnES2_EvT_S4_RSaIT0_E.exit.i
	beqz	$s0, .LBB1_21
# %bb.15:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB1_16:                               # %_ZSt8_DestroyI7ResultsEvPT_.exit.i.i
                                        #   in Loop: Header=BB1_17 Depth=1
	addi.d	$s0, $s0, 80
	beq	$s0, $s1, .LBB1_20
.LBB1_17:                               # %.lr.ph.i.i2
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 48
	addi.d	$a0, $s0, 32
.Ltmp0:                                 # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E)
	jirl	$ra, $ra, 0
.Ltmp1:                                 # EH_LABEL
# %bb.18:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEED2Ev.exit.i.i.i.i
                                        #   in Loop: Header=BB1_17 Depth=1
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s0, 16
	beq	$a1, $a0, .LBB1_16
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB1_17 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB1_16
.LBB1_20:                               # %_ZSt8_DestroyIP7ResultsS0_EvT_S2_RSaIT0_E.exitthread-pre-split.i
	ld.d	$s0, $fp, 24
	bnez	$s0, .LBB1_10
	b	.LBB1_11
.LBB1_21:                               # %_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1_22:
.Ltmp2:                                 # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end1:
	.size	_ZN8internal14ResultsCheckerD2Ev, .Lfunc_end1-_ZN8internal14ResultsCheckerD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8internal14ResultsCheckerD2Ev,"aG",@progbits,_ZN8internal14ResultsCheckerD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table1:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    # >> Call Site 1 <<
	.uleb128 .Ltmp0-.Lfunc_begin0           #   Call between .Lfunc_begin0 and .Ltmp0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0           #     jumps to .Ltmp2
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Lfunc_end1-.Ltmp1             #   Call between .Ltmp1 and .Lfunc_end1
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE # -- Begin function _ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.globl	_ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.p2align	2
	.type	_ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE,@function
_ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE: # @_ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.cfi_startproc
# %bb.0:
	pcaddu18i	$t8, %call36(_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_)
	jr	$t8
.Lfunc_end2:
	.size	_ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE, .Lfunc_end2-_ZN8internal14ResultsChecker3AddERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_,"axG",@progbits,_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_,comdat
	.hidden	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_ # -- Begin function _ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_
	.weak	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_
	.p2align	2
	.type	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_,@function
_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_: # @_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s1, $a0, 8
	ld.d	$a0, $a0, 16
	move	$s2, $a2
	move	$s0, $a1
	beq	$s1, $a0, .LBB3_8
# %bb.1:
	ld.d	$a3, $s2, 16
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 8
	beqz	$a3, .LBB3_4
# %bb.2:
.Ltmp3:                                 # EH_LABEL
	addi.d	$a0, $sp, 8
	ori	$a2, $zero, 2
	move	$a1, $s2
	jirl	$ra, $a3, 0
.Ltmp4:                                 # EH_LABEL
# %bb.3:
	vld	$vr0, $s2, 16
	vst	$vr0, $sp, 24
.LBB3_4:                                # %_ZNSt8functionIFvRK7ResultsEEC2ERKS4_.exit
.Ltmp9:                                 # EH_LABEL
	addi.d	$a2, $sp, 8
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE)
	jirl	$ra, $ra, 0
.Ltmp10:                                # EH_LABEL
# %bb.5:                                # %_ZNSt15__new_allocatorIN8internal14ResultsChecker12PatternAndFnEE9constructIS2_JRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvPT_DpOT0_.exit
	ld.d	$a3, $sp, 24
	beqz	$a3, .LBB3_7
# %bb.6:
.Ltmp15:                                # EH_LABEL
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 8
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp16:                                # EH_LABEL
.LBB3_7:                                # %_ZNSt14_Function_baseD2Ev.exit6
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 120
	st.d	$a0, $fp, 8
	b	.LBB3_9
.LBB3_8:
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 8
.LBB3_9:
	addi.d	$a0, $a0, -120
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB3_10:
.Ltmp17:                                # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB3_11:
.Ltmp5:                                 # EH_LABEL
	ld.d	$a3, $sp, 24
	move	$fp, $a0
	beqz	$a3, .LBB3_16
# %bb.12:
.Ltmp6:                                 # EH_LABEL
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 8
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp7:                                 # EH_LABEL
	b	.LBB3_16
.LBB3_13:
.Ltmp8:                                 # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB3_14:
.Ltmp11:                                # EH_LABEL
	ld.d	$a3, $sp, 24
	move	$fp, $a0
	beqz	$a3, .LBB3_16
# %bb.15:
.Ltmp12:                                # EH_LABEL
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 8
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp13:                                # EH_LABEL
.LBB3_16:                               # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB3_17:
.Ltmp14:                                # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end3:
	.size	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_, .Lfunc_end3-_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_,"aG",@progbits,_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_,comdat
	.p2align	2, 0x0
GCC_except_table3:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Ltmp3-.Lfunc_begin1           # >> Call Site 1 <<
	.uleb128 .Ltmp4-.Ltmp3                  #   Call between .Ltmp3 and .Ltmp4
	.uleb128 .Ltmp5-.Lfunc_begin1           #     jumps to .Ltmp5
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp9-.Lfunc_begin1           # >> Call Site 2 <<
	.uleb128 .Ltmp10-.Ltmp9                 #   Call between .Ltmp9 and .Ltmp10
	.uleb128 .Ltmp11-.Lfunc_begin1          #     jumps to .Ltmp11
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp15-.Lfunc_begin1          # >> Call Site 3 <<
	.uleb128 .Ltmp16-.Ltmp15                #   Call between .Ltmp15 and .Ltmp16
	.uleb128 .Ltmp17-.Lfunc_begin1          #     jumps to .Ltmp17
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp16-.Lfunc_begin1          # >> Call Site 4 <<
	.uleb128 .Ltmp6-.Ltmp16                 #   Call between .Ltmp16 and .Ltmp6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp6-.Lfunc_begin1           # >> Call Site 5 <<
	.uleb128 .Ltmp7-.Ltmp6                  #   Call between .Ltmp6 and .Ltmp7
	.uleb128 .Ltmp8-.Lfunc_begin1           #     jumps to .Ltmp8
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp7-.Lfunc_begin1           # >> Call Site 6 <<
	.uleb128 .Ltmp12-.Ltmp7                 #   Call between .Ltmp7 and .Ltmp12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp12-.Lfunc_begin1          # >> Call Site 7 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.uleb128 .Ltmp14-.Lfunc_begin1          #     jumps to .Ltmp14
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp13-.Lfunc_begin1          # >> Call Site 8 <<
	.uleb128 .Lfunc_end3-.Ltmp13            #   Call between .Ltmp13 and .Lfunc_end3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.globl	_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	st.d	$s7, $sp, 192                   # 8-byte Folded Spill
	st.d	$s8, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a1, $a1, -24
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	add.d	$a0, $s0, $a1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSi5tellgEv)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 1
	blt	$a0, $a1, .LBB4_2
# %bb.1:
	move	$a0, $s0
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSi5seekgESt4fposI11__mbstate_tE)
	jirl	$ra, $ra, 0
.LBB4_2:
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
	addi.d	$a1, $sp, 136
	ld.d	$a0, $s0, 0
	st.d	$a1, $sp, 120
	st.d	$zero, $sp, 128
	st.b	$zero, $sp, 136
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.wu	$a0, $a0, 32
	andi	$a1, $a0, 2
	bnez	$a1, .LBB4_26
# %bb.3:                                # %.lr.ph.preheader
	bnez	$a0, .LBB4_164
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s1, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a0, $s1, 0
	dbar	20
	beqz	$a0, .LBB4_169
.LBB4_5:
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB4_167
# %bb.6:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.peel
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB4_8
# %bb.7:
	ld.bu	$a0, $s2, 67
	b	.LBB4_10
.LBB4_8:
.Ltmp18:                                # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp19:                                # EH_LABEL
# %bb.9:                                # %.noexc39.peel
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp20:                                # EH_LABEL
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp21:                                # EH_LABEL
.LBB4_10:                               # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.peel
.Ltmp22:                                # EH_LABEL
	ext.w.b	$a2, $a0
	addi.d	$a1, $sp, 120
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_)
	jirl	$ra, $ra, 0
.Ltmp23:                                # EH_LABEL
# %bb.11:                               # %_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit.peel
.Ltmp24:                                # EH_LABEL
	addi.d	$a1, $sp, 120
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp25:                                # EH_LABEL
# %bb.12:                               # %.backedge.peel
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.w	$a0, $a0, 32
	andi	$a1, $a0, 2
	bnez	$a1, .LBB4_26
# %bb.13:                               # %.lr.ph.preheader368
	pcalau12i	$fp, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	.p2align	4, , 16
.LBB4_14:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	bnez	$a0, .LBB4_164
# %bb.15:                               #   in Loop: Header=BB4_14 Depth=1
	ld.b	$a0, $s1, 0
	dbar	20
	beqz	$a0, .LBB4_24
.LBB4_16:                               #   in Loop: Header=BB4_14 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB4_167
# %bb.17:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB4_14 Depth=1
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB4_19
# %bb.18:                               #   in Loop: Header=BB4_14 Depth=1
	ld.bu	$a0, $s2, 67
	b	.LBB4_21
	.p2align	4, , 16
.LBB4_19:                               #   in Loop: Header=BB4_14 Depth=1
.Ltmp32:                                # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp33:                                # EH_LABEL
# %bb.20:                               # %.noexc39
                                        #   in Loop: Header=BB4_14 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp34:                                # EH_LABEL
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp35:                                # EH_LABEL
.LBB4_21:                               # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB4_14 Depth=1
.Ltmp36:                                # EH_LABEL
	ext.w.b	$a2, $a0
	addi.d	$a1, $sp, 120
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_)
	jirl	$ra, $ra, 0
.Ltmp37:                                # EH_LABEL
# %bb.22:                               # %_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB4_14 Depth=1
.Ltmp38:                                # EH_LABEL
	addi.d	$a1, $sp, 120
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp39:                                # EH_LABEL
# %bb.23:                               # %.backedge
                                        #   in Loop: Header=BB4_14 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.w	$a0, $a0, 32
	andi	$a1, $a0, 2
	beqz	$a1, .LBB4_14
	b	.LBB4_26
.LBB4_24:                               #   in Loop: Header=BB4_14 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_16
# %bb.25:                               #   in Loop: Header=BB4_14 Depth=1
	st.d	$zero, $fp, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$a0, $s1
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_16
.LBB4_26:                               # %._crit_edge
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s8, $a0, 0
	ld.d	$a0, $a0, 8
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	beq	$s8, $a0, .LBB4_159
# %bb.27:
	pcalau12i	$s3, %pc_hi20(_ZZN9benchmark8internal8LogLevelEvE9log_level)
	ori	$s4, $zero, 2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	ori	$fp, $zero, 1
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 80                   # 32-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.2)
	addi.d	$a0, $a0, %pc_lo12(.L.str.2)
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.3)
	addi.d	$a0, $a0, %pc_lo12(.L.str.3)
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.10)
	addi.d	$a0, $a0, %pc_lo12(.L.str.10)
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.12)
	addi.d	$a0, $a0, %pc_lo12(.L.str.12)
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	pcalau12i	$s1, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	b	.LBB4_29
	.p2align	4, , 16
.LBB4_28:                               # %._crit_edge343
                                        #   in Loop: Header=BB4_29 Depth=1
	addi.d	$s8, $s8, 120
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	beq	$s8, $a0, .LBB4_159
.LBB4_29:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_62 Depth 2
	ld.w	$a0, $s3, %pc_lo12(_ZZN9benchmark8internal8LogLevelEvE9log_level)
	bge	$a0, $s4, .LBB4_33
# %bb.30:                               #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.b	$a0, $a0, 0
	dbar	20
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	bnez	$a0, .LBB4_34
# %bb.31:                               #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_34
# %bb.32:                               #   in Loop: Header=BB4_29 Depth=1
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	st.d	$zero, $s0, 0
	ld.d	$s5, $sp, 72                    # 8-byte Folded Reload
	b	.LBB4_155
	.p2align	4, , 16
.LBB4_33:                               #   in Loop: Header=BB4_29 Depth=1
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s0, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	dbar	20
	beqz	$a0, .LBB4_153
.LBB4_34:                               # %_ZN9benchmark8internal22GetLogInstanceForLevelEi.exit
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_42
# %bb.35:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp41:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.2)
	addi.d	$a1, $a1, %pc_lo12(.L.str.2)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp42:                                # EH_LABEL
# %bb.36:                               # %_ZN9benchmark8internallsIA8_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_42
# %bb.37:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp43:                                # EH_LABEL
	ori	$a1, $zero, 2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp44:                                # EH_LABEL
# %bb.38:                               # %_ZN9benchmark8internallsIiEERNS0_7LogTypeES3_RKT_.exit
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_42
# %bb.39:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp45:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.3)
	addi.d	$a1, $a1, %pc_lo12(.L.str.3)
	ori	$a2, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp46:                                # EH_LABEL
# %bb.40:                               # %_ZN9benchmark8internallsIA4_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_42
# %bb.41:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp47:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.4)
	addi.d	$a1, $a1, %pc_lo12(.L.str.4)
	ori	$a2, $zero, 33
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp48:                                # EH_LABEL
	.p2align	4, , 16
.LBB4_42:                               # %_ZN9benchmark8internallsIA34_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.w	$a0, $s3, %pc_lo12(_ZZN9benchmark8internal8LogLevelEvE9log_level)
	bge	$a0, $s4, .LBB4_46
# %bb.43:                               #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.b	$a0, $a0, 0
	dbar	20
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	bnez	$a0, .LBB4_47
# %bb.44:                               #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_47
# %bb.45:                               #   in Loop: Header=BB4_29 Depth=1
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	st.d	$zero, $s0, 0
	ld.d	$s5, $sp, 72                    # 8-byte Folded Reload
	b	.LBB4_158
	.p2align	4, , 16
.LBB4_46:                               #   in Loop: Header=BB4_29 Depth=1
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s0, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	beqz	$a0, .LBB4_156
.LBB4_47:                               # %_ZN9benchmark8internal22GetLogInstanceForLevelEi.exit58
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_59
# %bb.48:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp50:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.2)
	addi.d	$a1, $a1, %pc_lo12(.L.str.2)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp51:                                # EH_LABEL
# %bb.49:                               # %_ZN9benchmark8internallsIA8_cEERNS0_7LogTypeES4_RKT_.exit61
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_59
# %bb.50:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp53:                                # EH_LABEL
	ori	$a1, $zero, 2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp54:                                # EH_LABEL
# %bb.51:                               # %_ZN9benchmark8internallsIiEERNS0_7LogTypeES3_RKT_.exit64
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_59
# %bb.52:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp55:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.3)
	addi.d	$a1, $a1, %pc_lo12(.L.str.3)
	ori	$a2, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp56:                                # EH_LABEL
# %bb.53:                               # %_ZN9benchmark8internallsIA4_cEERNS0_7LogTypeES4_RKT_.exit67
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_59
# %bb.54:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp57:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.5)
	addi.d	$a1, $a1, %pc_lo12(.L.str.5)
	ori	$a2, $zero, 33
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp58:                                # EH_LABEL
# %bb.55:                               # %_ZN9benchmark8internallsIA34_cEERNS0_7LogTypeES4_RKT_.exit70
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_59
# %bb.56:                               #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a1, $s8, 0
	ld.d	$a2, $s8, 8
.Ltmp59:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp60:                                # EH_LABEL
# %bb.57:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB4_59
# %bb.58:                               #   in Loop: Header=BB4_29 Depth=1
.Ltmp61:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.6)
	addi.d	$a1, $a1, %pc_lo12(.L.str.6)
	ori	$a2, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp62:                                # EH_LABEL
	.p2align	4, , 16
.LBB4_59:                               # %_ZN9benchmark8internallsIA5_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_29 Depth=1
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s5, $a0, 24
	ld.d	$s0, $a0, 32
	beq	$s5, $s0, .LBB4_28
# %bb.60:                               # %.lr.ph342
                                        #   in Loop: Header=BB4_29 Depth=1
	addi.d	$s6, $s8, 88
	b	.LBB4_62
	.p2align	4, , 16
.LBB4_61:                               # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_62 Depth=2
	addi.d	$s5, $s5, 80
	beq	$s5, $s0, .LBB4_28
.LBB4_62:                               #   Parent Loop BB4_29 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s8, 72
	ld.bu	$a0, $a1, 0
	bne	$a0, $fp, .LBB4_71
# %bb.63:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s5, 0
	ld.d	$a2, $s5, 8
	addi.d	$a3, $a1, 8
	add.d	$a1, $a0, $a2
	xvld	$xr0, $sp, 80                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 152
.Ltmp64:                                # EH_LABEL
	addi.d	$a2, $sp, 152
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb)
	jirl	$ra, $ra, 0
.Ltmp65:                                # EH_LABEL
# %bb.64:                               # %_ZSt12regex_searchIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS4_9sub_matchISA_EEEcNS4_12regex_traitsIcEEEbT_SG_RNS4_13match_resultsISG_T0_EERKNS4_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeE.exit.i.i.i
                                        #   in Loop: Header=BB4_62 Depth=2
	move	$s7, $a0
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB4_66
# %bb.65:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_66:                               # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
                                        #   in Loop: Header=BB4_62 Depth=2
	beqz	$s7, .LBB4_71
# %bb.67:                               #   in Loop: Header=BB4_62 Depth=2
	ld.w	$a0, $s3, %pc_lo12(_ZZN9benchmark8internal8LogLevelEvE9log_level)
	bge	$a0, $s4, .LBB4_90
# %bb.68:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.b	$a0, $a0, 0
	dbar	20
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	bnez	$a0, .LBB4_91
# %bb.69:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_91
# %bb.70:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	st.d	$zero, $s2, 0
	ld.d	$s7, $sp, 72                    # 8-byte Folded Reload
	b	.LBB4_146
	.p2align	4, , 16
.LBB4_71:                               # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit.thread
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.w	$a0, $s3, %pc_lo12(_ZZN9benchmark8internal8LogLevelEvE9log_level)
	bge	$a0, $s4, .LBB4_75
# %bb.72:                               #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s7, $a1, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	bnez	$a0, .LBB4_76
# %bb.73:                               #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s2, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_76
# %bb.74:                               #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s7, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $s7, 0
	b	.LBB4_143
	.p2align	4, , 16
.LBB4_75:                               #   in Loop: Header=BB4_62 Depth=2
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s7, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	beqz	$a0, .LBB4_141
.LBB4_76:                               # %_ZN9benchmark8internal22GetLogInstanceForLevelEi.exit83
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB4_61
# %bb.77:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp67:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.2)
	addi.d	$a1, $a1, %pc_lo12(.L.str.2)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp68:                                # EH_LABEL
# %bb.78:                               # %_ZN9benchmark8internallsIA8_cEERNS0_7LogTypeES4_RKT_.exit86
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB4_61
# %bb.79:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp69:                                # EH_LABEL
	ori	$a1, $zero, 2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp70:                                # EH_LABEL
# %bb.80:                               # %_ZN9benchmark8internallsIiEERNS0_7LogTypeES3_RKT_.exit89
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB4_61
# %bb.81:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp71:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.3)
	addi.d	$a1, $a1, %pc_lo12(.L.str.3)
	ori	$a2, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp72:                                # EH_LABEL
# %bb.82:                               # %_ZN9benchmark8internallsIA4_cEERNS0_7LogTypeES4_RKT_.exit92
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB4_61
# %bb.83:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a1, $s8, 0
	ld.d	$a2, $s8, 8
.Ltmp73:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp74:                                # EH_LABEL
# %bb.84:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit95
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB4_61
# %bb.85:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp75:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.7)
	addi.d	$a1, $a1, %pc_lo12(.L.str.7)
	ori	$a2, $zero, 19
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp76:                                # EH_LABEL
# %bb.86:                               # %_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB4_61
# %bb.87:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a1, $s5, 0
	ld.d	$a2, $s5, 8
.Ltmp77:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp78:                                # EH_LABEL
# %bb.88:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit100
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB4_61
# %bb.89:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp79:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.8)
	addi.d	$a1, $a1, %pc_lo12(.L.str.8)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp80:                                # EH_LABEL
	b	.LBB4_61
.LBB4_90:                               #   in Loop: Header=BB4_62 Depth=2
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s2, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	beqz	$a0, .LBB4_144
.LBB4_91:                               # %_ZN9benchmark8internal22GetLogInstanceForLevelEi.exit110
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_105
# %bb.92:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp82:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.2)
	addi.d	$a1, $a1, %pc_lo12(.L.str.2)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp83:                                # EH_LABEL
# %bb.93:                               # %_ZN9benchmark8internallsIA8_cEERNS0_7LogTypeES4_RKT_.exit113
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_105
# %bb.94:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp84:                                # EH_LABEL
	ori	$a1, $zero, 2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp85:                                # EH_LABEL
# %bb.95:                               # %_ZN9benchmark8internallsIiEERNS0_7LogTypeES3_RKT_.exit116
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_105
# %bb.96:                               #   in Loop: Header=BB4_62 Depth=2
.Ltmp86:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.3)
	addi.d	$a1, $a1, %pc_lo12(.L.str.3)
	ori	$a2, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp87:                                # EH_LABEL
# %bb.97:                               # %_ZN9benchmark8internallsIA4_cEERNS0_7LogTypeES4_RKT_.exit119
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_105
# %bb.98:                               #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a1, $s8, 0
	ld.d	$a2, $s8, 8
.Ltmp88:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp89:                                # EH_LABEL
# %bb.99:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit122
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_105
# %bb.100:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp90:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.9)
	addi.d	$a1, $a1, %pc_lo12(.L.str.9)
	ori	$a2, $zero, 15
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp91:                                # EH_LABEL
# %bb.101:                              # %_ZN9benchmark8internallsIA16_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_105
# %bb.102:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a1, $s5, 0
	ld.d	$a2, $s5, 8
.Ltmp92:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp93:                                # EH_LABEL
# %bb.103:                              # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit127
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_105
# %bb.104:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp94:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.8)
	addi.d	$a1, $a1, %pc_lo12(.L.str.8)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp95:                                # EH_LABEL
	.p2align	4, , 16
.LBB4_105:                              # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit130
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.w	$a0, $s3, %pc_lo12(_ZZN9benchmark8internal8LogLevelEvE9log_level)
	blt	$a0, $fp, .LBB4_109
# %bb.106:                              #   in Loop: Header=BB4_62 Depth=2
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s2, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	bnez	$a0, .LBB4_110
# %bb.107:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s7, $a0, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$a0, $s7
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_110
# %bb.108:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %got_pc_hi20(_ZSt4clog)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4clog)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s2, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	st.d	$a0, $s2, 0
	b	.LBB4_149
.LBB4_109:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.b	$a0, $a0, 0
	dbar	20
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_147
.LBB4_110:                              # %_ZN9benchmark8internal22GetLogInstanceForLevelEi.exit138
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_122
# %bb.111:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp97:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.2)
	addi.d	$a1, $a1, %pc_lo12(.L.str.2)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp98:                                # EH_LABEL
# %bb.112:                              # %_ZN9benchmark8internallsIA8_cEERNS0_7LogTypeES4_RKT_.exit141
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_122
# %bb.113:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp99:                                # EH_LABEL
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp100:                               # EH_LABEL
# %bb.114:                              # %_ZN9benchmark8internallsIiEERNS0_7LogTypeES3_RKT_.exit144
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_122
# %bb.115:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp101:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.3)
	addi.d	$a1, $a1, %pc_lo12(.L.str.3)
	ori	$a2, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp102:                               # EH_LABEL
# %bb.116:                              # %_ZN9benchmark8internallsIA4_cEERNS0_7LogTypeES4_RKT_.exit147
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_122
# %bb.117:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp103:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.10)
	addi.d	$a1, $a1, %pc_lo12(.L.str.10)
	ori	$a2, $zero, 20
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp104:                               # EH_LABEL
# %bb.118:                              # %_ZN9benchmark8internallsIA21_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_122
# %bb.119:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a1, $s5, 0
	ld.d	$a2, $s5, 8
.Ltmp105:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp106:                               # EH_LABEL
# %bb.120:                              # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit152
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_122
# %bb.121:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp107:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.11)
	addi.d	$a1, $a1, %pc_lo12(.L.str.11)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp108:                               # EH_LABEL
	.p2align	4, , 16
.LBB4_122:                              # %_ZN9benchmark8internallsIA8_cEERNS0_7LogTypeES4_RKT_.exit155
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s8, 104
	beqz	$a0, .LBB4_162
# %bb.123:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a2, $s8, 112
.Ltmp110:                               # EH_LABEL
	move	$a0, $s6
	move	$a1, $s5
	jirl	$ra, $a2, 0
.Ltmp111:                               # EH_LABEL
# %bb.124:                              # %_ZNKSt8functionIFvRK7ResultsEEclES2_.exit
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.w	$a0, $s3, %pc_lo12(_ZZN9benchmark8internal8LogLevelEvE9log_level)
	blt	$a0, $fp, .LBB4_128
# %bb.125:                              #   in Loop: Header=BB4_62 Depth=2
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s2, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	bnez	$a0, .LBB4_129
# %bb.126:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s7, $a0, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$a0, $s7
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_129
# %bb.127:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %got_pc_hi20(_ZSt4clog)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4clog)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s2, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	st.d	$a0, $s2, 0
	b	.LBB4_152
.LBB4_128:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.b	$a0, $a0, 0
	dbar	20
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_150
.LBB4_129:                              # %_ZN9benchmark8internal22GetLogInstanceForLevelEi.exit166
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_61
# %bb.130:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp112:                               # EH_LABEL
	ori	$a2, $zero, 7
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp113:                               # EH_LABEL
# %bb.131:                              # %_ZN9benchmark8internallsIA8_cEERNS0_7LogTypeES4_RKT_.exit169
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_61
# %bb.132:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp115:                               # EH_LABEL
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp116:                               # EH_LABEL
# %bb.133:                              # %_ZN9benchmark8internallsIiEERNS0_7LogTypeES3_RKT_.exit172
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_61
# %bb.134:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp117:                               # EH_LABEL
	ori	$a2, $zero, 3
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp118:                               # EH_LABEL
# %bb.135:                              # %_ZN9benchmark8internallsIA4_cEERNS0_7LogTypeES4_RKT_.exit175
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_61
# %bb.136:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp119:                               # EH_LABEL
	ori	$a2, $zero, 20
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp120:                               # EH_LABEL
# %bb.137:                              # %_ZN9benchmark8internallsIA21_cEERNS0_7LogTypeES4_RKT_.exit178
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_61
# %bb.138:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a1, $s5, 0
	ld.d	$a2, $s5, 8
.Ltmp121:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp122:                               # EH_LABEL
# %bb.139:                              # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit181
                                        #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB4_61
# %bb.140:                              #   in Loop: Header=BB4_62 Depth=2
.Ltmp123:                               # EH_LABEL
	ori	$a2, $zero, 6
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp124:                               # EH_LABEL
	b	.LBB4_61
.LBB4_141:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s2, $a0, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_76
# %bb.142:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %got_pc_hi20(_ZSt4clog)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4clog)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s7, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	st.d	$a0, $s7, 0
.LBB4_143:                              # %_ZN9benchmark8internal19GetErrorLogInstanceEv.exit.sink.split.i79
                                        #   in Loop: Header=BB4_62 Depth=2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_76
.LBB4_144:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s7, $a0, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$a0, $s7
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_91
# %bb.145:                              #   in Loop: Header=BB4_62 Depth=2
	pcalau12i	$a0, %got_pc_hi20(_ZSt4clog)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4clog)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s2, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	st.d	$a0, $s2, 0
.LBB4_146:                              # %_ZN9benchmark8internal19GetErrorLogInstanceEv.exit.sink.split.i106
                                        #   in Loop: Header=BB4_62 Depth=2
	move	$a0, $s7
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_91
.LBB4_147:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_110
# %bb.148:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	st.d	$zero, $s2, 0
	ld.d	$s7, $sp, 72                    # 8-byte Folded Reload
.LBB4_149:                              # %_ZN9benchmark8internal19GetErrorLogInstanceEv.exit.sink.split.i134
                                        #   in Loop: Header=BB4_62 Depth=2
	move	$a0, $s7
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_110
.LBB4_150:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_129
# %bb.151:                              #   in Loop: Header=BB4_62 Depth=2
	ld.d	$s2, $sp, 64                    # 8-byte Folded Reload
	st.d	$zero, $s2, 0
	ld.d	$s7, $sp, 72                    # 8-byte Folded Reload
.LBB4_152:                              # %_ZN9benchmark8internal19GetErrorLogInstanceEv.exit.sink.split.i162
                                        #   in Loop: Header=BB4_62 Depth=2
	move	$a0, $s7
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_129
.LBB4_153:                              #   in Loop: Header=BB4_29 Depth=1
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s5, $a0, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$a0, $s5
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_34
# %bb.154:                              #   in Loop: Header=BB4_29 Depth=1
	pcalau12i	$a0, %got_pc_hi20(_ZSt4clog)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4clog)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s0, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	st.d	$a0, $s0, 0
.LBB4_155:                              # %_ZN9benchmark8internal19GetErrorLogInstanceEv.exit.sink.split.i
                                        #   in Loop: Header=BB4_29 Depth=1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_34
.LBB4_156:                              #   in Loop: Header=BB4_29 Depth=1
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s5, $a0, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$a0, $s5
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_47
# %bb.157:                              #   in Loop: Header=BB4_29 Depth=1
	pcalau12i	$a0, %got_pc_hi20(_ZSt4clog)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4clog)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s0, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	st.d	$a0, $s0, 0
.LBB4_158:                              # %_ZN9benchmark8internal19GetErrorLogInstanceEv.exit.sink.split.i54
                                        #   in Loop: Header=BB4_29 Depth=1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_47
.LBB4_159:                              # %._crit_edge348
	ld.d	$a0, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a0, $a1, .LBB4_161
# %bb.160:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_161:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s8, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB4_162:
.Ltmp126:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt25__throw_bad_function_callv)
	jirl	$ra, $ra, 0
.Ltmp127:                               # EH_LABEL
# %bb.163:                              # %.noexc157
.LBB4_164:                              # %.loopexit350
.Ltmp27:                                # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a1, $a0, %pc_lo12(.L.str)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	addi.d	$a0, $sp, 152
	ori	$a4, $zero, 235
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp28:                                # EH_LABEL
# %bb.165:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
.Ltmp29:                                # EH_LABEL
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp30:                                # EH_LABEL
# %bb.166:
.LBB4_167:                              # %.loopexit351
.Ltmp129:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp130:                               # EH_LABEL
# %bb.168:                              # %.noexc
.LBB4_169:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_5
# %bb.170:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_5
.LBB4_171:                              # %.loopexit333.loopexit.split-lp
.Ltmp26:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_172:                              # %.loopexit.split-lp334
.Ltmp131:                               # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_173:
.Ltmp31:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_174:
.Ltmp49:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_175:
.Ltmp63:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_176:                              # %.loopexit333.loopexit
.Ltmp40:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_177:
.Ltmp52:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_178:
.Ltmp109:                               # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_179:
.Ltmp125:                               # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_180:
.Ltmp96:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_181:                              # %.loopexit.split-lp
.Ltmp128:                               # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_182:
.Ltmp66:                                # EH_LABEL
	ld.d	$a2, $sp, 152
	bnez	$a2, .LBB4_185
# %bb.183:                              # %.body
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	bne	$a2, $a1, .LBB4_188
.LBB4_184:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit186
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB4_185:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a2
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_186:
.Ltmp81:                                # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
	b	.LBB4_188
.LBB4_187:                              # %.loopexit
.Ltmp114:                               # EH_LABEL
	ld.d	$a2, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a2, $a1, .LBB4_184
.LBB4_188:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i184
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end4:
	.size	_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end4-_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table4:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2    # >> Call Site 1 <<
	.uleb128 .Ltmp18-.Lfunc_begin2          #   Call between .Lfunc_begin2 and .Ltmp18
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp18-.Lfunc_begin2          # >> Call Site 2 <<
	.uleb128 .Ltmp25-.Ltmp18                #   Call between .Ltmp18 and .Ltmp25
	.uleb128 .Ltmp26-.Lfunc_begin2          #     jumps to .Ltmp26
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp32-.Lfunc_begin2          # >> Call Site 3 <<
	.uleb128 .Ltmp39-.Ltmp32                #   Call between .Ltmp32 and .Ltmp39
	.uleb128 .Ltmp40-.Lfunc_begin2          #     jumps to .Ltmp40
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp39-.Lfunc_begin2          # >> Call Site 4 <<
	.uleb128 .Ltmp41-.Ltmp39                #   Call between .Ltmp39 and .Ltmp41
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp41-.Lfunc_begin2          # >> Call Site 5 <<
	.uleb128 .Ltmp42-.Ltmp41                #   Call between .Ltmp41 and .Ltmp42
	.uleb128 .Ltmp52-.Lfunc_begin2          #     jumps to .Ltmp52
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp43-.Lfunc_begin2          # >> Call Site 6 <<
	.uleb128 .Ltmp48-.Ltmp43                #   Call between .Ltmp43 and .Ltmp48
	.uleb128 .Ltmp49-.Lfunc_begin2          #     jumps to .Ltmp49
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp48-.Lfunc_begin2          # >> Call Site 7 <<
	.uleb128 .Ltmp50-.Ltmp48                #   Call between .Ltmp48 and .Ltmp50
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp50-.Lfunc_begin2          # >> Call Site 8 <<
	.uleb128 .Ltmp51-.Ltmp50                #   Call between .Ltmp50 and .Ltmp51
	.uleb128 .Ltmp52-.Lfunc_begin2          #     jumps to .Ltmp52
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp53-.Lfunc_begin2          # >> Call Site 9 <<
	.uleb128 .Ltmp62-.Ltmp53                #   Call between .Ltmp53 and .Ltmp62
	.uleb128 .Ltmp63-.Lfunc_begin2          #     jumps to .Ltmp63
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp64-.Lfunc_begin2          # >> Call Site 10 <<
	.uleb128 .Ltmp65-.Ltmp64                #   Call between .Ltmp64 and .Ltmp65
	.uleb128 .Ltmp66-.Lfunc_begin2          #     jumps to .Ltmp66
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp65-.Lfunc_begin2          # >> Call Site 11 <<
	.uleb128 .Ltmp67-.Ltmp65                #   Call between .Ltmp65 and .Ltmp67
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp67-.Lfunc_begin2          # >> Call Site 12 <<
	.uleb128 .Ltmp68-.Ltmp67                #   Call between .Ltmp67 and .Ltmp68
	.uleb128 .Ltmp114-.Lfunc_begin2         #     jumps to .Ltmp114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp69-.Lfunc_begin2          # >> Call Site 13 <<
	.uleb128 .Ltmp80-.Ltmp69                #   Call between .Ltmp69 and .Ltmp80
	.uleb128 .Ltmp81-.Lfunc_begin2          #     jumps to .Ltmp81
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp82-.Lfunc_begin2          # >> Call Site 14 <<
	.uleb128 .Ltmp83-.Ltmp82                #   Call between .Ltmp82 and .Ltmp83
	.uleb128 .Ltmp114-.Lfunc_begin2         #     jumps to .Ltmp114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp84-.Lfunc_begin2          # >> Call Site 15 <<
	.uleb128 .Ltmp95-.Ltmp84                #   Call between .Ltmp84 and .Ltmp95
	.uleb128 .Ltmp96-.Lfunc_begin2          #     jumps to .Ltmp96
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp95-.Lfunc_begin2          # >> Call Site 16 <<
	.uleb128 .Ltmp97-.Ltmp95                #   Call between .Ltmp95 and .Ltmp97
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp97-.Lfunc_begin2          # >> Call Site 17 <<
	.uleb128 .Ltmp98-.Ltmp97                #   Call between .Ltmp97 and .Ltmp98
	.uleb128 .Ltmp114-.Lfunc_begin2         #     jumps to .Ltmp114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp99-.Lfunc_begin2          # >> Call Site 18 <<
	.uleb128 .Ltmp108-.Ltmp99               #   Call between .Ltmp99 and .Ltmp108
	.uleb128 .Ltmp109-.Lfunc_begin2         #     jumps to .Ltmp109
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp110-.Lfunc_begin2         # >> Call Site 19 <<
	.uleb128 .Ltmp111-.Ltmp110              #   Call between .Ltmp110 and .Ltmp111
	.uleb128 .Ltmp114-.Lfunc_begin2         #     jumps to .Ltmp114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp111-.Lfunc_begin2         # >> Call Site 20 <<
	.uleb128 .Ltmp112-.Ltmp111              #   Call between .Ltmp111 and .Ltmp112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp112-.Lfunc_begin2         # >> Call Site 21 <<
	.uleb128 .Ltmp113-.Ltmp112              #   Call between .Ltmp112 and .Ltmp113
	.uleb128 .Ltmp114-.Lfunc_begin2         #     jumps to .Ltmp114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp115-.Lfunc_begin2         # >> Call Site 22 <<
	.uleb128 .Ltmp124-.Ltmp115              #   Call between .Ltmp115 and .Ltmp124
	.uleb128 .Ltmp125-.Lfunc_begin2         #     jumps to .Ltmp125
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp124-.Lfunc_begin2         # >> Call Site 23 <<
	.uleb128 .Ltmp126-.Ltmp124              #   Call between .Ltmp124 and .Ltmp126
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp126-.Lfunc_begin2         # >> Call Site 24 <<
	.uleb128 .Ltmp127-.Ltmp126              #   Call between .Ltmp126 and .Ltmp127
	.uleb128 .Ltmp128-.Lfunc_begin2         #     jumps to .Ltmp128
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp27-.Lfunc_begin2          # >> Call Site 25 <<
	.uleb128 .Ltmp30-.Ltmp27                #   Call between .Ltmp27 and .Ltmp30
	.uleb128 .Ltmp31-.Lfunc_begin2          #     jumps to .Ltmp31
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp129-.Lfunc_begin2         # >> Call Site 26 <<
	.uleb128 .Ltmp130-.Ltmp129              #   Call between .Ltmp129 and .Ltmp130
	.uleb128 .Ltmp131-.Lfunc_begin2         #     jumps to .Ltmp131
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp130-.Lfunc_begin2         # >> Call Site 27 <<
	.uleb128 .Lfunc_end4-.Ltmp130           #   Call between .Ltmp130 and .Lfunc_end4
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i,"axG",@progbits,_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i,comdat
	.hidden	_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i # -- Begin function _ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i
	.weak	_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i
	.p2align	2
	.type	_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i,@function
_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i: # @_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	pcalau12i	$a5, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	ld.b	$a5, $a5, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$s1, $a4
	move	$s0, $a3
	move	$fp, $a1
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$s4, $a1, %pc_lo12(_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	beqz	$a5, .LBB5_18
.LBB5_1:                                # %_ZN9benchmark8internal19GetErrorLogInstanceEv.exit
	ld.d	$s2, $s4, 0
	st.d	$s4, $a0, 0
	beqz	$s2, .LBB5_17
# %bb.2:
	beqz	$a2, .LBB5_4
# %bb.3:
	move	$a0, $a2
	move	$s3, $a2
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	bnez	$a0, .LBB5_5
	b	.LBB5_17
.LBB5_4:
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.w	$a1, $a0, 32
	ori	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB5_17
.LBB5_5:                                # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit
	pcalau12i	$a1, %pc_hi20(.L.str.45)
	addi.d	$a1, $a1, %pc_lo12(.L.str.45)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB5_17
# %bb.6:                                # %_ZN9benchmark8internallsIiEERNS0_7LogTypeES3_RKT_.exit
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB5_17
# %bb.7:                                # %_ZN9benchmark8internallsIA3_cEERNS0_7LogTypeES4_RKT_.exit
	pcalau12i	$a1, %pc_hi20(.L.str.46)
	addi.d	$a1, $a1, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s4, 0
	beqz	$s1, .LBB5_17
# %bb.8:
	beqz	$s0, .LBB5_10
# %bb.9:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	bnez	$a0, .LBB5_11
	b	.LBB5_17
.LBB5_10:
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.w	$a1, $a0, 32
	ori	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB5_17
.LBB5_11:                               # %_ZN9benchmark8internallsIA10_cEERNS0_7LogTypeES4_RKT_.exit
	pcalau12i	$a1, %pc_hi20(.L.str.47)
	addi.d	$a1, $a1, %pc_lo12(.L.str.47)
	ori	$a2, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$s0, $s4, 0
	beqz	$s0, .LBB5_17
# %bb.12:
	beqz	$fp, .LBB5_14
# %bb.13:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $s0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	b	.LBB5_15
.LBB5_14:
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.w	$a1, $a0, 32
	ori	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
.LBB5_15:                               # %_ZN9benchmark8internallsIPKcEERNS0_7LogTypeES5_RKT_.exit11
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB5_17
# %bb.16:
	pcalau12i	$a1, %pc_hi20(.L.str.48)
	addi.d	$a1, $a1, %pc_lo12(.L.str.48)
	ori	$a2, $zero, 10
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jr	$t8
.LBB5_17:                               # %_ZN9benchmark8internallsIA11_cEERNS0_7LogTypeES4_RKT_.exit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB5_18:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	move	$s2, $a0
	move	$a0, $a1
	move	$s3, $a2
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a2, $s3
	move	$a1, $a0
	move	$a0, $s2
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB5_1
# %bb.19:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4clog)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4clog)
	st.d	$a0, $s4, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	move	$a2, $s3
	b	.LBB5_1
.Lfunc_end5:
	.size	_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i, .Lfunc_end5-_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal12CheckHandlerD2Ev,"axG",@progbits,_ZN9benchmark8internal12CheckHandlerD2Ev,comdat
	.hidden	_ZN9benchmark8internal12CheckHandlerD2Ev # -- Begin function _ZN9benchmark8internal12CheckHandlerD2Ev
	.weak	_ZN9benchmark8internal12CheckHandlerD2Ev
	.p2align	2
	.type	_ZN9benchmark8internal12CheckHandlerD2Ev,@function
_ZN9benchmark8internal12CheckHandlerD2Ev: # @_ZN9benchmark8internal12CheckHandlerD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$a0, $a0, 0
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB6_7
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	bnez	$s0, .LBB6_3
# %bb.2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB6_3:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	bnez	$a0, .LBB6_5
# %bb.4:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	b	.LBB6_6
.LBB6_5:
	ld.bu	$a0, $s0, 67
.LBB6_6:                                # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.LBB6_7:                                # %_ZN9benchmark8internallsERNS0_7LogTypeEPFRSoS3_E.exit
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal16CallAbortHandlerEv)
	jirl	$ra, $ra, 0
.Lfunc_end6:
	.size	_ZN9benchmark8internal12CheckHandlerD2Ev, .Lfunc_end6-_ZN9benchmark8internal12CheckHandlerD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	5
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZSt9terminatev)
	jirl	$ra, $ra, 0
.Lfunc_end7:
	.size	__clang_call_terminate, .Lfunc_end7-__clang_call_terminate
                                        # -- End function
	.text
	.hidden	_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$a2, $a1
	move	$s0, $a0
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$fp, $s0, 48
	vld	$vr0, $sp, 16
	ld.d	$a0, $sp, 32
	ld.d	$s2, $s0, 56
	ld.d	$s1, $s0, 64
	vst	$vr0, $s0, 48
	st.d	$a0, $s0, 64
	st.d	$zero, $sp, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
	beq	$fp, $s2, .LBB8_5
# %bb.1:                                # %.lr.ph.i.i.i.i.preheader
	addi.d	$s0, $fp, 16
	b	.LBB8_3
	.p2align	4, , 16
.LBB8_2:                                # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB8_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $s2, .LBB8_5
.LBB8_3:                                # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB8_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB8_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB8_2
.LBB8_5:                                # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i
	beqz	$fp, .LBB8_7
# %bb.6:
	sub.d	$a1, $s1, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB8_7:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_.exit
	ld.d	$a0, $sp, 16
	ld.d	$fp, $sp, 24
	beq	$a0, $fp, .LBB8_13
# %bb.8:                                # %.lr.ph.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB8_10
	.p2align	4, , 16
.LBB8_9:                                # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB8_10 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB8_12
.LBB8_10:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB8_9
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB8_10 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB8_9
.LBB8_12:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $sp, 16
.LBB8_13:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB8_15
# %bb.14:
	ld.d	$a1, $sp, 32
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB8_15:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end8:
	.size	_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end8-_ZN8internal14ResultsChecker10SetHeader_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	beqz	$a1, .LBB9_30
# %bb.1:
	move	$fp, $a0
	ld.d	$a0, $a0, 48
	ld.d	$a1, $fp, 56
	beq	$a0, $a1, .LBB9_31
# %bb.2:
	pcalau12i	$s1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB9_32
.LBB9_3:
	addi.d	$a0, $sp, 16
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 24
	ld.d	$a1, $sp, 16
	ld.d	$a2, $fp, 56
	ld.d	$a3, $fp, 48
	sub.d	$a0, $a0, $a1
	srai.d	$a0, $a0, 5
	sub.d	$a1, $a2, $a3
	srai.d	$a1, $a1, 5
	bne	$a0, $a1, .LBB9_34
# %bb.4:
	ld.b	$a0, $s1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB9_37
.LBB9_5:
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	ld.d	$a1, $sp, 16
	beq	$s0, $a0, .LBB9_12
# %bb.6:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a2, $a1, 8
	ld.d	$s1, $a1, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 40
	bltu	$a2, $a1, .LBB9_9
# %bb.7:                                # %.noexc.i.i.i
.Ltmp137:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp138:                               # EH_LABEL
# %bb.8:                                # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a2, $sp, 40
	st.d	$a2, $s0, 16
.LBB9_9:                                # %._crit_edge.i.i.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB9_15
# %bb.10:                               # %._crit_edge.i.i.i.i
	bnez	$a2, .LBB9_14
# %bb.11:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB9_15
.LBB9_12:
	addi.d	$a0, $fp, 24
.Ltmp139:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp140:                               # EH_LABEL
# %bb.13:                               # %._ZNSt6vectorI7ResultsSaIS0_EE12emplace_backIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERS0_DpOT_.exit_crit_edge
	ld.d	$a1, $fp, 32
	b	.LBB9_16
.LBB9_14:
	addi.d	$a2, $a2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB9_15:                               # %_ZN7ResultsC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit.i
	ld.d	$a0, $sp, 40
	st.d	$a0, $s0, 8
	addi.d	$a0, $s0, 40
	st.w	$zero, $s0, 40
	st.d	$zero, $s0, 48
	st.d	$a0, $s0, 56
	st.d	$a0, $s0, 64
	st.d	$zero, $s0, 72
	ld.d	$a0, $fp, 32
	addi.d	$a1, $a0, 80
	st.d	$a1, $fp, 32
.LBB9_16:                               # %_ZNSt6vectorI7ResultsSaIS0_EE12emplace_backIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEERS0_DpOT_.exit
	ld.d	$s0, $sp, 24
	ld.d	$a0, $sp, 16
	sub.d	$a2, $s0, $a0
	srai.d	$a2, $a2, 5
	ori	$a3, $zero, 2
	bltu	$a2, $a3, .LBB9_22
# %bb.17:                               # %.lr.ph
	addi.d	$s0, $a1, -48
	slli.d	$s1, $a2, 5
	ori	$s2, $zero, 32
	.p2align	4, , 16
.LBB9_18:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 48
	ld.d	$s3, $sp, 16
	add.d	$a1, $a0, $s2
.Ltmp142:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_)
	jirl	$ra, $ra, 0
.Ltmp143:                               # EH_LABEL
# %bb.19:                               #   in Loop: Header=BB9_18 Depth=1
	add.d	$a1, $s3, $s2
.Ltmp144:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp145:                               # EH_LABEL
# %bb.20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit
                                        #   in Loop: Header=BB9_18 Depth=1
	addi.d	$s2, $s2, 32
	bne	$s1, $s2, .LBB9_18
# %bb.21:                               # %._crit_edge.loopexit
	ld.d	$a0, $sp, 16
	ld.d	$s0, $sp, 24
.LBB9_22:                               # %._crit_edge
	beq	$a0, $s0, .LBB9_28
# %bb.23:                               # %.lr.ph.i.i.preheader
	addi.d	$fp, $a0, 16
	b	.LBB9_25
	.p2align	4, , 16
.LBB9_24:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB9_25 Depth=1
	addi.d	$a0, $fp, 16
	addi.d	$fp, $fp, 32
	beq	$a0, $s0, .LBB9_27
.LBB9_25:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, -16
	beq	$fp, $a0, .LBB9_24
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB9_25 Depth=1
	ld.d	$a1, $fp, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB9_24
.LBB9_27:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $sp, 16
.LBB9_28:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB9_30
# %bb.29:
	ld.d	$a1, $sp, 32
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB9_30:
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB9_31:
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a1, $a0, %pc_lo12(.L.str.13)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 269
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.LBB9_32:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB9_3
# %bb.33:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB9_3
.LBB9_34:
.Ltmp132:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.14)
	addi.d	$a1, $a0, %pc_lo12(.L.str.14)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a0, $sp, 40
	ori	$a4, $zero, 271
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp133:                               # EH_LABEL
# %bb.35:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit22
.Ltmp134:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp135:                               # EH_LABEL
# %bb.36:
.LBB9_37:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB9_5
# %bb.38:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB9_5
.LBB9_39:
.Ltmp141:                               # EH_LABEL
	b	.LBB9_42
.LBB9_40:
.Ltmp136:                               # EH_LABEL
	b	.LBB9_42
.LBB9_41:
.Ltmp146:                               # EH_LABEL
.LBB9_42:
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end9:
	.size	_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end9-_ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table9:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin3-.Lfunc_begin3    # >> Call Site 1 <<
	.uleb128 .Ltmp137-.Lfunc_begin3         #   Call between .Lfunc_begin3 and .Ltmp137
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp137-.Lfunc_begin3         # >> Call Site 2 <<
	.uleb128 .Ltmp140-.Ltmp137              #   Call between .Ltmp137 and .Ltmp140
	.uleb128 .Ltmp141-.Lfunc_begin3         #     jumps to .Ltmp141
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp140-.Lfunc_begin3         # >> Call Site 3 <<
	.uleb128 .Ltmp142-.Ltmp140              #   Call between .Ltmp140 and .Ltmp142
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp142-.Lfunc_begin3         # >> Call Site 4 <<
	.uleb128 .Ltmp145-.Ltmp142              #   Call between .Ltmp142 and .Ltmp145
	.uleb128 .Ltmp146-.Lfunc_begin3         #     jumps to .Ltmp146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp145-.Lfunc_begin3         # >> Call Site 5 <<
	.uleb128 .Ltmp132-.Ltmp145              #   Call between .Ltmp145 and .Ltmp132
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp132-.Lfunc_begin3         # >> Call Site 6 <<
	.uleb128 .Ltmp135-.Ltmp132              #   Call between .Ltmp132 and .Ltmp135
	.uleb128 .Ltmp136-.Lfunc_begin3         #     jumps to .Ltmp136
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp135-.Lfunc_begin3         # >> Call Site 7 <<
	.uleb128 .Lfunc_end9-.Ltmp135           #   Call between .Ltmp135 and .Lfunc_end9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_,"axG",@progbits,_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_,comdat
	.hidden	_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_ # -- Begin function _ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_
	.weak	_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_
	.p2align	5
	.type	_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_,@function
_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_: # @_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_
	.cfi_startproc
# %bb.0:
	ld.d	$a4, $a0, 0
	beqz	$a4, .LBB10_2
# %bb.1:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$a3, $a1, 0
	ld.d	$a2, $a1, 8
	move	$fp, $a0
	move	$a0, $a4
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB10_2:
	ret
.Lfunc_end10:
	.size	_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_, .Lfunc_end10-_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_,"axG",@progbits,_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_,comdat
	.hidden	_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_ # -- Begin function _ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_
	.weak	_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_
	.p2align	5
	.type	_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_,@function
_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_: # @_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB11_2
# %bb.1:
	move	$s1, $a0
	move	$a0, $a1
	move	$s0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s1
.LBB11_2:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end11:
	.size	_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_, .Lfunc_end11-_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_
	.cfi_endproc
                                        # -- End function
	.text
	.hidden	_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a2
	ld.d	$a2, $a2, 8
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	beqz	$a2, .LBB12_42
# %bb.1:
	move	$fp, $a0
	ld.d	$a0, $a1, 48
	ld.d	$a1, $a1, 56
	beq	$a0, $a1, .LBB12_3
# %bb.2:
	sub.d	$a0, $a1, $a0
	srai.d	$a1, $a0, 5
.Ltmp147:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm)
	jirl	$ra, $ra, 0
.Ltmp148:                               # EH_LABEL
.LBB12_3:
	ori	$a1, $zero, 44
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	move	$s4, $zero
	addi.d	$s1, $sp, 32
	addi.w	$s6, $zero, -1
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s3, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ori	$s8, $zero, 16
	b	.LBB12_7
	.p2align	4, , 16
.LBB12_4:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB12_7 Depth=1
	st.d	$a1, $s4, 0
	ld.d	$a0, $sp, 32
	ld.d	$s5, $sp, 24
	st.d	$a0, $s4, 16
.LBB12_5:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit.thread
                                        #   in Loop: Header=BB12_7 Depth=1
	st.d	$s5, $s4, 8
	ld.d	$a0, $fp, 8
	st.d	$s1, $sp, 16
	st.d	$zero, $sp, 24
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB12_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB12_7 Depth=1
	addi.d	$s4, $s2, 1
	ori	$a1, $zero, 44
	move	$a0, $s0
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
.LBB12_7:                               # =>This Inner Loop Header: Depth=1
	beq	$s2, $s6, .LBB12_26
# %bb.8:                                #   in Loop: Header=BB12_7 Depth=1
	beqz	$s2, .LBB12_43
# %bb.9:                                #   in Loop: Header=BB12_7 Depth=1
	ld.b	$a0, $s3, 0
	dbar	20
	beqz	$a0, .LBB12_24
.LBB12_10:                              #   in Loop: Header=BB12_7 Depth=1
	ld.d	$s7, $s0, 0
	ldx.bu	$a0, $s7, $s4
	ld.d	$a3, $s0, 8
	addi.d	$a0, $a0, -34
	sltui	$a0, $a0, 1
	add.d	$s4, $s4, $a0
	bltu	$a3, $s4, .LBB12_46
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
                                        #   in Loop: Header=BB12_7 Depth=1
	addi.d	$a0, $s2, -1
	ldx.bu	$a1, $s7, $a0
	addi.d	$a1, $a1, -34
	sltui	$a1, $a1, 1
	masknez	$a2, $s2, $a1
	maskeqz	$a0, $a0, $a1
	or	$a0, $a0, $a2
	sub.d	$a0, $a0, $s4
	st.d	$s1, $sp, 16
	sub.d	$a1, $a3, $s4
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s5, $a0, $a1
	st.d	$s5, $sp, 48
	move	$a0, $s1
	bltu	$s5, $s8, .LBB12_14
# %bb.12:                               # %.noexc10.i.i
                                        #   in Loop: Header=BB12_7 Depth=1
.Ltmp163:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp164:                               # EH_LABEL
# %bb.13:                               # %.noexc57
                                        #   in Loop: Header=BB12_7 Depth=1
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB12_14:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB12_7 Depth=1
	beqz	$s5, .LBB12_18
# %bb.15:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB12_7 Depth=1
	add.d	$a1, $s7, $s4
	ori	$a2, $zero, 1
	bne	$s5, $a2, .LBB12_17
# %bb.16:                               #   in Loop: Header=BB12_7 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB12_18
	.p2align	4, , 16
.LBB12_17:                              #   in Loop: Header=BB12_7 Depth=1
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB12_18:                              #   in Loop: Header=BB12_7 Depth=1
	ld.d	$a0, $sp, 48
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 24
	stx.b	$zero, $a1, $a0
	ld.d	$s4, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$s4, $a0, .LBB12_21
# %bb.19:                               #   in Loop: Header=BB12_7 Depth=1
	addi.d	$a0, $s4, 16
	st.d	$a0, $s4, 0
	ld.d	$a1, $sp, 16
	bne	$a1, $s1, .LBB12_4
# %bb.20:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
                                        #   in Loop: Header=BB12_7 Depth=1
	ld.d	$s5, $sp, 24
	addi.d	$a2, $s5, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB12_5
	.p2align	4, , 16
.LBB12_21:                              #   in Loop: Header=BB12_7 Depth=1
.Ltmp166:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp167:                               # EH_LABEL
# %bb.22:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
                                        #   in Loop: Header=BB12_7 Depth=1
	ld.d	$a0, $sp, 16
	beq	$a0, $s1, .LBB12_6
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB12_7 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB12_6
.LBB12_24:                              #   in Loop: Header=BB12_7 Depth=1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB12_10
# %bb.25:                               #   in Loop: Header=BB12_7 Depth=1
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$a0, $s3
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB12_10
.LBB12_26:
	ld.d	$s3, $s0, 0
	ldx.bu	$a0, $s3, $s4
	ld.d	$a3, $s0, 8
	addi.d	$a0, $a0, -34
	sltui	$a0, $a0, 1
	add.d	$s1, $s4, $a0
	bltu	$a3, $s1, .LBB12_48
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i62
	addi.d	$a0, $a3, -1
	ldx.bu	$a1, $s3, $a0
	addi.d	$a1, $a1, -34
	sltui	$a1, $a1, 1
	masknez	$a2, $a3, $a1
	maskeqz	$a0, $a0, $a1
	or	$a0, $a0, $a2
	sub.d	$a0, $a0, $s1
	addi.d	$s0, $sp, 32
	st.d	$s0, $sp, 16
	sub.d	$a1, $a3, $s1
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s2, $a0, $a1
	ori	$a1, $zero, 16
	st.d	$s2, $sp, 48
	move	$a0, $s0
	bltu	$s2, $a1, .LBB12_30
# %bb.28:                               # %.noexc10.i.i65
.Ltmp155:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp156:                               # EH_LABEL
# %bb.29:                               # %.noexc67
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB12_30:                              # %._crit_edge.i.i.i64
	beqz	$s2, .LBB12_34
# %bb.31:                               # %._crit_edge.i.i.i64
	ori	$a2, $zero, 1
	add.d	$a1, $s3, $s1
	bne	$s2, $a2, .LBB12_33
# %bb.32:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB12_34
.LBB12_33:
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB12_34:
	ld.d	$a0, $sp, 48
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 24
	stx.b	$zero, $a1, $a0
	ld.d	$s1, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$s1, $a0, .LBB12_37
# %bb.35:
	addi.d	$a0, $s1, 16
	st.d	$a0, $s1, 0
	ld.d	$a1, $sp, 16
	beq	$a1, $s0, .LBB12_40
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i70
	st.d	$a1, $s1, 0
	ld.d	$a0, $sp, 32
	ld.d	$s2, $sp, 24
	st.d	$a0, $s1, 16
	b	.LBB12_41
.LBB12_37:
.Ltmp157:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp158:                               # EH_LABEL
# %bb.38:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit74
	ld.d	$a0, $sp, 16
	beq	$a0, $s0, .LBB12_42
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i75
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB12_42
.LBB12_40:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i72
	ld.d	$s2, $sp, 24
	addi.d	$a2, $s2, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB12_41:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit74.thread
	st.d	$s2, $s1, 8
	ld.d	$a0, $fp, 8
	st.d	$zero, $sp, 24
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB12_42:
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB12_43:
.Ltmp150:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.15)
	addi.d	$a1, $a0, %pc_lo12(.L.str.15)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 286
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp151:                               # EH_LABEL
# %bb.44:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
.Ltmp152:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp153:                               # EH_LABEL
# %bb.45:
.LBB12_46:
.Ltmp169:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.66)
	addi.d	$a0, $a0, %pc_lo12(.L.str.66)
	pcalau12i	$a1, %pc_hi20(.L.str.297)
	addi.d	$a1, $a1, %pc_lo12(.L.str.297)
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.Ltmp170:                               # EH_LABEL
# %bb.47:                               # %.noexc
.LBB12_48:
.Ltmp160:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.66)
	addi.d	$a0, $a0, %pc_lo12(.L.str.66)
	pcalau12i	$a1, %pc_hi20(.L.str.297)
	addi.d	$a1, $a1, %pc_lo12(.L.str.297)
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.Ltmp161:                               # EH_LABEL
# %bb.49:                               # %.noexc66
.LBB12_50:
.Ltmp159:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$s2, $a0
	bne	$a2, $s0, .LBB12_54
	b	.LBB12_59
.LBB12_51:
.Ltmp149:                               # EH_LABEL
	b	.LBB12_58
.LBB12_52:
.Ltmp162:                               # EH_LABEL
	b	.LBB12_58
.LBB12_53:
.Ltmp168:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$s2, $a0
	beq	$a2, $s1, .LBB12_59
.LBB12_54:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i59
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB12_55:                              # %.loopexit
.Ltmp165:                               # EH_LABEL
	b	.LBB12_58
.LBB12_56:                              # %.loopexit.split-lp
.Ltmp171:                               # EH_LABEL
	b	.LBB12_58
.LBB12_57:
.Ltmp154:                               # EH_LABEL
.LBB12_58:
	move	$s2, $a0
.LBB12_59:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end12:
	.size	_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end12-_ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table12:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Ltmp147-.Lfunc_begin4         # >> Call Site 1 <<
	.uleb128 .Ltmp148-.Ltmp147              #   Call between .Ltmp147 and .Ltmp148
	.uleb128 .Ltmp149-.Lfunc_begin4         #     jumps to .Ltmp149
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp148-.Lfunc_begin4         # >> Call Site 2 <<
	.uleb128 .Ltmp163-.Ltmp148              #   Call between .Ltmp148 and .Ltmp163
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp163-.Lfunc_begin4         # >> Call Site 3 <<
	.uleb128 .Ltmp164-.Ltmp163              #   Call between .Ltmp163 and .Ltmp164
	.uleb128 .Ltmp165-.Lfunc_begin4         #     jumps to .Ltmp165
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp164-.Lfunc_begin4         # >> Call Site 4 <<
	.uleb128 .Ltmp166-.Ltmp164              #   Call between .Ltmp164 and .Ltmp166
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp166-.Lfunc_begin4         # >> Call Site 5 <<
	.uleb128 .Ltmp167-.Ltmp166              #   Call between .Ltmp166 and .Ltmp167
	.uleb128 .Ltmp168-.Lfunc_begin4         #     jumps to .Ltmp168
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp167-.Lfunc_begin4         # >> Call Site 6 <<
	.uleb128 .Ltmp155-.Ltmp167              #   Call between .Ltmp167 and .Ltmp155
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp155-.Lfunc_begin4         # >> Call Site 7 <<
	.uleb128 .Ltmp156-.Ltmp155              #   Call between .Ltmp155 and .Ltmp156
	.uleb128 .Ltmp162-.Lfunc_begin4         #     jumps to .Ltmp162
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp156-.Lfunc_begin4         # >> Call Site 8 <<
	.uleb128 .Ltmp157-.Ltmp156              #   Call between .Ltmp156 and .Ltmp157
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp157-.Lfunc_begin4         # >> Call Site 9 <<
	.uleb128 .Ltmp158-.Ltmp157              #   Call between .Ltmp157 and .Ltmp158
	.uleb128 .Ltmp159-.Lfunc_begin4         #     jumps to .Ltmp159
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp158-.Lfunc_begin4         # >> Call Site 10 <<
	.uleb128 .Ltmp150-.Ltmp158              #   Call between .Ltmp158 and .Ltmp150
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp150-.Lfunc_begin4         # >> Call Site 11 <<
	.uleb128 .Ltmp153-.Ltmp150              #   Call between .Ltmp150 and .Ltmp153
	.uleb128 .Ltmp154-.Lfunc_begin4         #     jumps to .Ltmp154
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp169-.Lfunc_begin4         # >> Call Site 12 <<
	.uleb128 .Ltmp170-.Ltmp169              #   Call between .Ltmp169 and .Ltmp170
	.uleb128 .Ltmp171-.Lfunc_begin4         #     jumps to .Ltmp171
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp160-.Lfunc_begin4         # >> Call Site 13 <<
	.uleb128 .Ltmp161-.Ltmp160              #   Call between .Ltmp160 and .Ltmp161
	.uleb128 .Ltmp162-.Lfunc_begin4         #     jumps to .Ltmp162
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp161-.Lfunc_begin4         # >> Call Site 14 <<
	.uleb128 .Lfunc_end12-.Ltmp161          #   Call between .Ltmp161 and .Lfunc_end12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.hidden	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	2
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s0, $fp, 8
	beq	$a0, $s0, .LBB13_6
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB13_3
	.p2align	4, , 16
.LBB13_2:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB13_3 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB13_5
.LBB13_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB13_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB13_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB13_2
.LBB13_5:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split
	ld.d	$a0, $fp, 0
.LBB13_6:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit
	beqz	$a0, .LBB13_8
# %bb.7:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB13_8:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end13:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end13-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_,comdat
	.hidden	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_ # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_
	.p2align	2
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ld.d	$s7, $a0, 16
	move	$s8, $a1
	addi.d	$s2, $a0, 8
	beqz	$s7, .LBB14_11
# %bb.1:                                # %.lr.ph.i.i.i
	st.d	$s0, $sp, 16                    # 8-byte Folded Spill
	ld.d	$s6, $s8, 8
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s3, $s8, 0
	lu12i.w	$s5, -524288
	lu12i.w	$a0, 524287
	ori	$s4, $a0, 4095
	ori	$s8, $zero, 16
	ori	$s0, $zero, 24
	move	$s1, $s2
	b	.LBB14_4
	.p2align	4, , 16
.LBB14_2:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB14_4 Depth=1
	sub.d	$a0, $fp, $s6
	slt	$a1, $s5, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s5, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s4
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
.LBB14_3:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB14_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s7, $a0
	masknez	$a2, $s8, $a0
	maskeqz	$a3, $s0, $a0
	or	$a2, $a3, $a2
	ldx.d	$s7, $s7, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s7, .LBB14_6
.LBB14_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$fp, $s7, 40
	sltu	$a0, $s6, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s6, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB14_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB14_4 Depth=1
	ld.d	$a0, $s7, 32
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB14_3
	b	.LBB14_2
.LBB14_6:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEE11lower_boundERS9_.exit
	ld.d	$s0, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	beq	$s1, $s2, .LBB14_11
# %bb.7:
	ld.d	$fp, $s1, 40
	sltu	$a0, $fp, $s6
	masknez	$a1, $s6, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB14_9
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a1, $s1, 32
	move	$a0, $s3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB14_10
.LBB14_9:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $s6, $fp
	slt	$a1, $s5, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s5, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s4
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
.LBB14_10:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	addi.w	$a1, $zero, -1
	move	$s2, $s1
	blt	$a1, $a0, .LBB14_12
.LBB14_11:                              # %.critedge
	st.d	$s8, $sp, 32
	pcalau12i	$a0, %pc_hi20(_ZSt19piecewise_construct)
	addi.d	$a2, $a0, %pc_lo12(_ZSt19piecewise_construct)
	addi.d	$a3, $sp, 32
	addi.d	$a4, $sp, 31
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_)
	jirl	$ra, $ra, 0
	move	$s1, $a0
.LBB14_12:
	addi.d	$a0, $s1, 64
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end14:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_, .Lfunc_end14-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm
	.p2align	2
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	srli.d	$a2, $a1, 58
	bnez	$a2, .LBB15_13
# %bb.1:
	move	$fp, $a0
	ld.d	$a0, $a0, 16
	ld.d	$s3, $fp, 0
	sub.d	$a0, $a0, $s3
	srai.d	$a0, $a0, 5
	bgeu	$a0, $a1, .LBB15_12
# %bb.2:                                # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
	ld.d	$s4, $fp, 8
	slli.d	$s0, $a1, 5
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	move	$a0, $s3
	beq	$s4, $s3, .LBB15_9
# %bb.3:                                # %.lr.ph.i.i.i.preheader
	move	$s5, $zero
	b	.LBB15_6
	.p2align	4, , 16
.LBB15_4:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB15_6 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB15_5:                               # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB15_6 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s2, $s3, $s5
	st.d	$zero, $s7, 8
	addi.d	$s5, $s5, 32
	add.d	$a0, $s3, $s5
	st.b	$zero, $s2, 0
	beq	$a0, $s4, .LBB15_8
.LBB15_6:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s1, $s5
	ldx.d	$a1, $s3, $s5
	add.d	$s7, $s3, $s5
	addi.d	$a0, $s6, 16
	addi.d	$s2, $s7, 16
	stx.d	$a0, $s1, $s5
	bne	$s2, $a1, .LBB15_4
# %bb.7:                                # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB15_6 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB15_5
.LBB15_8:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	ld.d	$a0, $fp, 0
.LBB15_9:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	sub.d	$s2, $s4, $s3
	beqz	$a0, .LBB15_11
# %bb.10:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB15_11:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit
	st.d	$s1, $fp, 0
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 8
	add.d	$a0, $s1, $s0
	st.d	$a0, $fp, 16
.LBB15_12:
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB15_13:
	pcalau12i	$a0, %pc_hi20(.L.str.296)
	addi.d	$a0, $a0, %pc_lo12(.L.str.296)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end15:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm, .Lfunc_end15-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE7reserveEm
	.cfi_endproc
                                        # -- End function
	.text
	.hidden	_Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE # -- Begin function _Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.globl	_Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.p2align	5
	.type	_Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE,@function
_Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE: # @_Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	pcalau12i	$a2, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	move	$fp, $a1
	move	$s0, $a0
	dbar	20
	beqz	$a2, .LBB16_2
.LBB16_1:                               # %_ZN8internal17GetResultsCheckerEv.exit
	pcalau12i	$a0, %pc_hi20(_ZZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$s1, $a0, %pc_lo12(_ZZN8internal17GetResultsCheckerEvE2rc)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEERS2_DpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 32
	ld.d	$a1, $s1, 24
	sub.d	$a0, $a0, $a1
	srli.d	$a0, $a0, 4
	lu12i.w	$a1, -209716
	ori	$a1, $a1, 3277
	lu32i.d	$a1, -209716
	lu52i.d	$a1, $a1, -820
	mul.d	$a0, $a0, $a1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB16_2:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB16_1
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$s1, $a0, %pc_lo12(_ZZN8internal17GetResultsCheckerEvE2rc)
	ori	$a2, $zero, 72
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN8internal14ResultsCheckerD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN8internal14ResultsCheckerD2Ev)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $s1
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB16_1
.Lfunc_end16:
	.size	_Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE, .Lfunc_end16-_Z10AddCheckerRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEE
	.cfi_endproc
                                        # -- End function
	.hidden	_ZNK7Results10NumThreadsEv      # -- Begin function _ZNK7Results10NumThreadsEv
	.globl	_ZNK7Results10NumThreadsEv
	.p2align	2
	.type	_ZNK7Results10NumThreadsEv,@function
_ZNK7Results10NumThreadsEv:             # @_ZNK7Results10NumThreadsEv
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	addi.d	$sp, $sp, -496
	.cfi_def_cfa_offset 496
	st.d	$ra, $sp, 488                   # 8-byte Folded Spill
	st.d	$fp, $sp, 480                   # 8-byte Folded Spill
	st.d	$s0, $sp, 472                   # 8-byte Folded Spill
	st.d	$s1, $sp, 464                   # 8-byte Folded Spill
	st.d	$s2, $sp, 456                   # 8-byte Folded Spill
	st.d	$s3, $sp, 448                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.16)
	addi.d	$a1, $a0, %pc_lo12(.L.str.16)
	ori	$a3, $zero, 9
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$a1, $zero, -1
	beq	$a0, $a1, .LBB17_8
# %bb.1:
	addi.d	$fp, $a0, 9
	ori	$a1, $zero, 47
	move	$a0, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s0, 8
	bltu	$a3, $fp, .LBB17_20
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
	addi.d	$s2, $sp, 32
	st.d	$s2, $sp, 16
	ld.d	$s3, $s0, 0
	sub.d	$a0, $a3, $fp
	sltu	$a1, $s1, $a0
	masknez	$a0, $a0, $a1
	maskeqz	$a1, $s1, $a1
	or	$s0, $a1, $a0
	ori	$a1, $zero, 16
	st.d	$s0, $sp, 440
	move	$a0, $s2
	bltu	$s0, $a1, .LBB17_5
# %bb.3:                                # %.noexc10.i.i
.Ltmp172:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 440
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp173:                               # EH_LABEL
# %bb.4:                                # %.noexc19
	ld.d	$a1, $sp, 440
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB17_5:                               # %._crit_edge.i.i.i
	beqz	$s0, .LBB17_10
# %bb.6:                                # %._crit_edge.i.i.i
	ori	$a2, $zero, 1
	add.d	$a1, $s3, $fp
	bne	$s0, $a2, .LBB17_9
# %bb.7:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB17_10
.LBB17_8:
	ori	$fp, $zero, 1
	b	.LBB17_19
.LBB17_9:
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB17_10:
	ld.d	$a0, $sp, 440
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 24
	stx.b	$zero, $a1, $a0
	ld.d	$a1, $sp, 16
	ld.d	$a2, $sp, 24
	addi.d	$a0, $sp, 64
.Ltmp174:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp175:                               # EH_LABEL
# %bb.11:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 16
	beq	$a0, $s2, .LBB17_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB17_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ori	$a0, $zero, 1
	st.w	$a0, $sp, 440
.Ltmp177:                               # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 440
	addi.d	$fp, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSirsERi)
	jirl	$ra, $ra, 0
.Ltmp178:                               # EH_LABEL
# %bb.14:
	ld.d	$a0, $sp, 48
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.bu	$a0, $a0, 32
	andi	$a0, $a0, 5
	bnez	$a0, .LBB17_22
# %bb.15:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB17_25
.LBB17_16:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $s0, 0
	st.d	$a0, $sp, 48
	ld.d	$a1, $s0, 64
	ld.d	$a0, $a0, -24
	addi.d	$s1, $sp, 48
	stx.d	$a1, $a0, $s1
	ld.d	$a1, $s0, 72
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.w	$fp, $sp, 440
	ld.d	$a0, $sp, 144
	st.d	$a1, $sp, 64
	addi.d	$a1, $a2, 16
	addi.d	$a2, $sp, 160
	st.d	$a1, $sp, 72
	beq	$a0, $a2, .LBB17_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB17_18:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 72
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	st.d	$a0, $sp, 48
	ld.d	$a1, $s0, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s1
	st.d	$zero, $sp, 56
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
.LBB17_19:
	move	$a0, $fp
	ld.d	$s3, $sp, 448                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 472                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 480                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 488                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 496
	ret
.LBB17_20:
.Ltmp185:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.66)
	addi.d	$a0, $a0, %pc_lo12(.L.str.66)
	pcalau12i	$a1, %pc_hi20(.L.str.297)
	addi.d	$a1, $a1, %pc_lo12(.L.str.297)
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.Ltmp186:                               # EH_LABEL
# %bb.21:                               # %.noexc
.LBB17_22:
.Ltmp180:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.17)
	addi.d	$a1, $a0, %pc_lo12(.L.str.17)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZNK7Results10NumThreadsEv)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZNK7Results10NumThreadsEv)
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 317
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp181:                               # EH_LABEL
# %bb.23:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
.Ltmp182:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp183:                               # EH_LABEL
# %bb.24:
.LBB17_25:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB17_16
# %bb.26:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB17_16
.LBB17_27:
.Ltmp184:                               # EH_LABEL
	b	.LBB17_32
.LBB17_28:
.Ltmp179:                               # EH_LABEL
	b	.LBB17_32
.LBB17_29:
.Ltmp176:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s2, .LBB17_33
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB17_31:
.Ltmp187:                               # EH_LABEL
.LBB17_32:
	move	$fp, $a0
.LBB17_33:
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end17:
	.size	_ZNK7Results10NumThreadsEv, .Lfunc_end17-_ZNK7Results10NumThreadsEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table17:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp172-.Lfunc_begin5         #   Call between .Lfunc_begin5 and .Ltmp172
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp172-.Lfunc_begin5         # >> Call Site 2 <<
	.uleb128 .Ltmp173-.Ltmp172              #   Call between .Ltmp172 and .Ltmp173
	.uleb128 .Ltmp187-.Lfunc_begin5         #     jumps to .Ltmp187
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp173-.Lfunc_begin5         # >> Call Site 3 <<
	.uleb128 .Ltmp174-.Ltmp173              #   Call between .Ltmp173 and .Ltmp174
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp174-.Lfunc_begin5         # >> Call Site 4 <<
	.uleb128 .Ltmp175-.Ltmp174              #   Call between .Ltmp174 and .Ltmp175
	.uleb128 .Ltmp176-.Lfunc_begin5         #     jumps to .Ltmp176
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp175-.Lfunc_begin5         # >> Call Site 5 <<
	.uleb128 .Ltmp177-.Ltmp175              #   Call between .Ltmp175 and .Ltmp177
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp177-.Lfunc_begin5         # >> Call Site 6 <<
	.uleb128 .Ltmp178-.Ltmp177              #   Call between .Ltmp177 and .Ltmp178
	.uleb128 .Ltmp179-.Lfunc_begin5         #     jumps to .Ltmp179
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp178-.Lfunc_begin5         # >> Call Site 7 <<
	.uleb128 .Ltmp185-.Ltmp178              #   Call between .Ltmp178 and .Ltmp185
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp185-.Lfunc_begin5         # >> Call Site 8 <<
	.uleb128 .Ltmp186-.Ltmp185              #   Call between .Ltmp185 and .Ltmp186
	.uleb128 .Ltmp187-.Lfunc_begin5         #     jumps to .Ltmp187
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp180-.Lfunc_begin5         # >> Call Site 9 <<
	.uleb128 .Ltmp183-.Ltmp180              #   Call between .Ltmp180 and .Ltmp183
	.uleb128 .Ltmp184-.Lfunc_begin5         #     jumps to .Ltmp184
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp183-.Lfunc_begin5         # >> Call Site 10 <<
	.uleb128 .Lfunc_end17-.Ltmp183          #   Call between .Ltmp183 and .Lfunc_end17
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZNK7Results13NumIterationsEv   # -- Begin function _ZNK7Results13NumIterationsEv
	.globl	_ZNK7Results13NumIterationsEv
	.p2align	2
	.type	_ZNK7Results13NumIterationsEv,@function
_ZNK7Results13NumIterationsEv:          # @_ZNK7Results13NumIterationsEv
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	fst.d	$fs0, $sp, 48                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 56, -32
	pcalau12i	$a1, %pc_hi20(.L.str.18)
	addi.d	$a1, $a1, %pc_lo12(.L.str.18)
	ld.d	$a2, $a1, 0
	ld.h	$a1, $a1, 8
	addi.d	$s0, $sp, 32
	st.d	$s0, $sp, 16
	st.d	$a2, $sp, 32
	st.h	$a1, $sp, 40
	ori	$a1, $zero, 10
	st.d	$a1, $sp, 24
	st.b	$zero, $sp, 42
.Ltmp188:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp189:                               # EH_LABEL
# %bb.1:
	ld.d	$a0, $sp, 16
	beq	$a0, $s0, .LBB18_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	fmov.d	$fs0, $fa0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
.LBB18_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	fld.d	$fs0, $sp, 48                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB18_4:
.Ltmp190:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s0, .LBB18_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB18_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end18:
	.size	_ZNK7Results13NumIterationsEv, .Lfunc_end18-_ZNK7Results13NumIterationsEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table18:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Ltmp188-.Lfunc_begin6         # >> Call Site 1 <<
	.uleb128 .Ltmp189-.Ltmp188              #   Call between .Ltmp188 and .Ltmp189
	.uleb128 .Ltmp190-.Lfunc_begin6         #     jumps to .Ltmp190
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp189-.Lfunc_begin6         # >> Call Site 2 <<
	.uleb128 .Lfunc_end18-.Ltmp189          #   Call between .Ltmp189 and .Lfunc_end18
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	addi.d	$sp, $sp, -512
	.cfi_def_cfa_offset 512
	st.d	$ra, $sp, 504                   # 8-byte Folded Spill
	st.d	$fp, $sp, 496                   # 8-byte Folded Spill
	st.d	$s0, $sp, 488                   # 8-byte Folded Spill
	st.d	$s1, $sp, 480                   # 8-byte Folded Spill
	st.d	$s2, $sp, 472                   # 8-byte Folded Spill
	st.d	$s3, $sp, 464                   # 8-byte Folded Spill
	st.d	$s4, $sp, 456                   # 8-byte Folded Spill
	st.d	$s5, $sp, 448                   # 8-byte Folded Spill
	st.d	$s6, $sp, 440                   # 8-byte Folded Spill
	st.d	$s7, $sp, 432                   # 8-byte Folded Spill
	st.d	$s8, $sp, 424                   # 8-byte Folded Spill
	fst.d	$fs0, $sp, 416                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	.cfi_offset 56, -96
	ld.d	$s5, $a0, 48
	beqz	$s5, .LBB19_20
# %bb.1:                                # %.lr.ph.i.i.i.i
	addi.d	$s1, $a0, 40
	ld.d	$s4, $a1, 8
	ld.d	$fp, $a1, 0
	lu12i.w	$s3, -524288
	lu12i.w	$a0, 524287
	ori	$s2, $a0, 4095
	ori	$s6, $zero, 16
	ori	$s7, $zero, 24
	move	$s0, $s1
	b	.LBB19_4
	.p2align	4, , 16
.LBB19_2:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB19_4 Depth=1
	sub.d	$a0, $s8, $s4
	slt	$a1, $s3, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB19_3:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i.i
                                        #   in Loop: Header=BB19_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s5, $a0
	masknez	$a2, $s6, $a0
	maskeqz	$a3, $s7, $a0
	or	$a2, $a3, $a2
	ldx.d	$s5, $s5, $a2
	maskeqz	$a0, $s0, $a0
	or	$s0, $a0, $a1
	beqz	$s5, .LBB19_6
.LBB19_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$s8, $s5, 40
	sltu	$a0, $s4, $s8
	masknez	$a1, $s8, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB19_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB19_4 Depth=1
	ld.d	$a0, $s5, 32
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB19_3
	b	.LBB19_2
.LBB19_6:                               # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSG_RS7_.exit.i.i.i
	beq	$s0, $s1, .LBB19_20
# %bb.7:
	ld.d	$s5, $s0, 40
	sltu	$a0, $s5, $s4
	masknez	$a1, $s4, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB19_9
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
	ld.d	$a1, $s0, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB19_10
.LBB19_9:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
	sub.d	$a0, $s4, $s5
	slt	$a1, $s3, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB19_10:                              # %_ZNK7Results3GetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB19_20
# %bb.11:
	ld.d	$a1, $s0, 72
	beqz	$a1, .LBB19_20
# %bb.12:
	slti	$a0, $a0, 0
	pcalau12i	$fp, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a1, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	masknez	$a2, $s0, $a0
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a2
	dbar	20
	beqz	$a1, .LBB19_21
.LBB19_13:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	addi.d	$a0, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 64
	ld.d	$a2, $s0, 72
	addi.d	$a0, $sp, 40
.Ltmp191:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp192:                               # EH_LABEL
# %bb.14:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
.Ltmp194:                               # EH_LABEL
	addi.d	$a0, $sp, 24
	addi.d	$a1, $sp, 16
	addi.d	$s0, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSi10_M_extractIdEERSiRT_)
	jirl	$ra, $ra, 0
.Ltmp195:                               # EH_LABEL
# %bb.15:                               # %_ZNSirsERd.exit
	ld.d	$a0, $sp, 24
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.bu	$a0, $a0, 32
	andi	$a0, $a0, 5
	bnez	$a0, .LBB19_23
# %bb.16:
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB19_26
.LBB19_17:
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 24
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 24
	stx.d	$a1, $a0, $s0
	ld.d	$a1, $fp, 72
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	fld.d	$fs0, $sp, 16
	ld.d	$a0, $sp, 120
	st.d	$a1, $sp, 40
	addi.d	$a1, $a2, 16
	addi.d	$a2, $sp, 136
	st.d	$a1, $sp, 48
	beq	$a0, $a2, .LBB19_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB19_19:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 48
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 24
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 32
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	fld.d	$fs0, $sp, 416                  # 8-byte Folded Reload
	ld.d	$s8, $sp, 424                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 440                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 448                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 488                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 496                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 504                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 512
	ret
.LBB19_20:                              # %.critedge
	pcalau12i	$a0, %pc_hi20(.L.str.299)
	addi.d	$a1, $a0, %pc_lo12(.L.str.299)
	pcalau12i	$a0, %pc_hi20(.L.str.300)
	addi.d	$a2, $a0, %pc_lo12(.L.str.300)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a0, $sp, 24
	ori	$a4, $zero, 144
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 24
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.LBB19_21:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB19_13
# %bb.22:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB19_13
.LBB19_23:
.Ltmp197:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.17)
	addi.d	$a1, $a0, %pc_lo12(.L.str.17)
	pcalau12i	$a0, %pc_hi20(.L.str.300)
	addi.d	$a2, $a0, %pc_lo12(.L.str.300)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	addi.d	$a0, $sp, 8
	ori	$a4, $zero, 149
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp198:                               # EH_LABEL
# %bb.24:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit20
.Ltmp199:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp200:                               # EH_LABEL
# %bb.25:
.LBB19_26:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB19_17
# %bb.27:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB19_17
.LBB19_28:
.Ltmp201:                               # EH_LABEL
	b	.LBB19_31
.LBB19_29:
.Ltmp196:                               # EH_LABEL
	b	.LBB19_31
.LBB19_30:
.Ltmp193:                               # EH_LABEL
.LBB19_31:
	move	$fp, $a0
	addi.d	$a0, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end19:
	.size	_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end19-_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table19:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7    # >> Call Site 1 <<
	.uleb128 .Ltmp191-.Lfunc_begin7         #   Call between .Lfunc_begin7 and .Ltmp191
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp191-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Ltmp192-.Ltmp191              #   Call between .Ltmp191 and .Ltmp192
	.uleb128 .Ltmp193-.Lfunc_begin7         #     jumps to .Ltmp193
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp194-.Lfunc_begin7         # >> Call Site 3 <<
	.uleb128 .Ltmp195-.Ltmp194              #   Call between .Ltmp194 and .Ltmp195
	.uleb128 .Ltmp196-.Lfunc_begin7         #     jumps to .Ltmp196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp195-.Lfunc_begin7         # >> Call Site 4 <<
	.uleb128 .Ltmp197-.Ltmp195              #   Call between .Ltmp195 and .Ltmp197
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp197-.Lfunc_begin7         # >> Call Site 5 <<
	.uleb128 .Ltmp200-.Ltmp197              #   Call between .Ltmp197 and .Ltmp200
	.uleb128 .Ltmp201-.Lfunc_begin7         #     jumps to .Ltmp201
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp200-.Lfunc_begin7         # >> Call Site 6 <<
	.uleb128 .Lfunc_end19-.Ltmp200          #   Call between .Ltmp200 and .Lfunc_end19
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,comdat
	.hidden	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.p2align	2
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	addi.d	$s2, $a0, 16
	st.d	$s2, $a0, 0
	beqz	$a1, .LBB20_8
# %bb.1:
	move	$s0, $a1
	move	$fp, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a0, $zero, 16
	st.d	$s1, $sp, 0
	bltu	$s1, $a0, .LBB20_3
# %bb.2:                                # %.noexc
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	move	$s2, $a0
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB20_3:                               # %._crit_edge.i
	beqz	$s1, .LBB20_7
# %bb.4:                                # %._crit_edge.i
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB20_6
# %bb.5:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s2, 0
	b	.LBB20_7
.LBB20_6:
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB20_7:
	ld.d	$a0, $sp, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB20_8:
	pcalau12i	$a0, %pc_hi20(.L.str.84)
	addi.d	$a0, $a0, %pc_lo12(.L.str.84)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end20:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_, .Lfunc_end20-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0                          # -- Begin function _ZNK7Results7GetTimeENS_13BenchmarkTimeE
.LCPI21_0:
	.dword	0x3f50624dd2f1a9fc              # double 0.001
.LCPI21_1:
	.dword	0x3eb0c6f7a0b5ed8d              # double 9.9999999999999995E-7
.LCPI21_2:
	.dword	0x3e112e0be826d695              # double 1.0000000000000001E-9
	.text
	.hidden	_ZNK7Results7GetTimeENS_13BenchmarkTimeE
	.globl	_ZNK7Results7GetTimeENS_13BenchmarkTimeE
	.p2align	2
	.type	_ZNK7Results7GetTimeENS_13BenchmarkTimeE,@function
_ZNK7Results7GetTimeENS_13BenchmarkTimeE: # @_ZNK7Results7GetTimeENS_13BenchmarkTimeE
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	fst.d	$fs0, $sp, 48                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	.cfi_offset 56, -96
	ori	$a2, $zero, 1
	bltu	$a2, $a1, .LBB21_32
# %bb.1:
	move	$s0, $a0
	pcalau12i	$s2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a0, $s2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB21_33
.LBB21_2:                               # %._crit_edge.i.i
	sltui	$s3, $a1, 1
	pcalau12i	$a0, %pc_hi20(.L.str.21)
	addi.d	$a0, $a0, %pc_lo12(.L.str.21)
	masknez	$a0, $a0, $s3
	pcalau12i	$a1, %pc_hi20(.L.str.20)
	addi.d	$a1, $a1, %pc_lo12(.L.str.20)
	maskeqz	$a1, $a1, $s3
	or	$a1, $a1, $a0
	addi.d	$fp, $sp, 32
	st.d	$fp, $sp, 16
	xori	$s1, $s3, 9
	move	$a0, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 24
	xori	$a0, $s3, 25
	addi.d	$a1, $sp, 16
	stx.b	$zero, $a0, $a1
.Ltmp202:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp203:                               # EH_LABEL
# %bb.3:
	fmov.d	$fs0, $fa0
	ld.d	$a0, $sp, 16
	beq	$a0, $fp, .LBB21_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB21_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a0, $a0, %pc_lo12(.L.str.22)
	ld.d	$a1, $a0, 0
	ld.b	$a0, $a0, 8
	st.d	$fp, $sp, 16
	st.d	$a1, $sp, 32
	ld.d	$s3, $s0, 48
	st.b	$a0, $sp, 40
	ori	$s4, $zero, 9
	st.d	$s4, $sp, 24
	st.b	$zero, $sp, 41
	beqz	$s3, .LBB21_31
# %bb.6:                                # %.lr.ph.i.i.i.i.preheader
	addi.d	$s0, $s0, 40
	ori	$s5, $zero, 8
	bstrins.d	$s5, $s5, 32, 28
	ori	$s6, $zero, 16
	ori	$s7, $zero, 24
	move	$s1, $s0
	b	.LBB21_9
	.p2align	4, , 16
.LBB21_7:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_9 Depth=1
	sltu	$a0, $s8, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s8, $a0
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, -9
.LBB21_8:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i.i
                                        #   in Loop: Header=BB21_9 Depth=1
	slti	$a0, $a0, 0
	masknez	$a1, $s3, $a0
	masknez	$a2, $s6, $a0
	maskeqz	$a3, $s7, $a0
	or	$a2, $a3, $a2
	ldx.d	$s3, $s3, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s3, .LBB21_11
.LBB21_9:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s8, $s3, 40
	beqz	$s8, .LBB21_7
# %bb.10:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_9 Depth=1
	sltui	$a1, $s8, 9
	ld.d	$a0, $s3, 32
	masknez	$a2, $s4, $a1
	maskeqz	$a1, $s8, $a1
	or	$a2, $a1, $a2
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB21_8
	b	.LBB21_7
.LBB21_11:                              # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSG_RS7_.exit.i.i.i
	beq	$s1, $s0, .LBB21_31
# %bb.12:
	ld.d	$s3, $s1, 40
	beqz	$s3, .LBB21_14
# %bb.13:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
	sltui	$a0, $s3, 9
	ori	$a2, $zero, 9
	ld.d	$a1, $s1, 32
	masknez	$a2, $a2, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a2
	move	$a0, $fp
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB21_15
.LBB21_14:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
	ori	$a0, $zero, 9
	sub.d	$a0, $a0, $s3
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB21_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB21_31
# %bb.16:
	slti	$a0, $a0, 0
	ld.b	$a1, $s2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	masknez	$a2, $s1, $a0
	maskeqz	$a0, $s0, $a0
	or	$fp, $a0, $a2
	dbar	20
	beqz	$a1, .LBB21_35
.LBB21_17:
	ld.d	$a2, $fp, 72
	ori	$a0, $zero, 1
	addi.d	$fp, $fp, 64
	beq	$a2, $a0, .LBB21_23
# %bb.18:
	ori	$a0, $zero, 2
	bne	$a2, $a0, .LBB21_24
# %bb.19:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	ld.d	$a0, $fp, 0
	ld.hu	$a2, $a0, 0
	lu12i.w	$a1, 7
	ori	$a3, $a1, 878
	beq	$a2, $a3, .LBB21_27
# %bb.20:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit50
	ld.hu	$a2, $a0, 0
	ori	$a3, $a1, 885
	beq	$a2, $a3, .LBB21_28
# %bb.21:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit52
	ld.hu	$a0, $a0, 0
	ori	$a1, $a1, 877
	bne	$a0, $a1, .LBB21_24
# %bb.22:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit52.thread
	pcalau12i	$a0, %pc_hi20(.LCPI21_0)
	fld.d	$fa0, $a0, %pc_lo12(.LCPI21_0)
	b	.LBB21_29
.LBB21_23:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit54
	ld.d	$a0, $fp, 0
	pcalau12i	$a1, %pc_hi20(.L.str.27)
	addi.d	$a1, $a1, %pc_lo12(.L.str.27)
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB21_30
.LBB21_24:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit54.thread59
	pcalau12i	$a0, %pc_hi20(.L.str.28)
	addi.d	$a1, $a0, %pc_lo12(.L.str.28)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE)
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 341
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 16
.Ltmp205:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.29)
	addi.d	$a1, $a1, %pc_lo12(.L.str.29)
	pcaddu18i	$ra, %call36(_ZN9benchmark8internallsIA20_cEERNS0_7LogTypeES4_RKT_)
	jirl	$ra, $ra, 0
.Ltmp206:                               # EH_LABEL
# %bb.25:
.Ltmp207:                               # EH_LABEL
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_)
	jirl	$ra, $ra, 0
.Ltmp208:                               # EH_LABEL
# %bb.26:
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.LBB21_27:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	pcalau12i	$a0, %pc_hi20(.LCPI21_2)
	fld.d	$fa0, $a0, %pc_lo12(.LCPI21_2)
	b	.LBB21_29
.LBB21_28:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit50.thread
	pcalau12i	$a0, %pc_hi20(.LCPI21_1)
	fld.d	$fa0, $a0, %pc_lo12(.LCPI21_1)
.LBB21_29:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit54.thread
	fmul.d	$fs0, $fs0, $fa0
.LBB21_30:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit54.thread
	fmov.d	$fa0, $fs0
	fld.d	$fs0, $sp, 48                   # 8-byte Folded Reload
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB21_31:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a1, $a0, %pc_lo12(.L.str.23)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE)
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 328
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.LBB21_32:
	pcalau12i	$a0, %pc_hi20(.L.str.19)
	addi.d	$a1, $a0, %pc_lo12(.L.str.19)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE)
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 324
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.LBB21_33:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $fp
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB21_2
# %bb.34:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $fp
	b	.LBB21_2
.LBB21_35:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB21_17
# %bb.36:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB21_17
.LBB21_37:
.Ltmp209:                               # EH_LABEL
.Ltmp210:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp211:                               # EH_LABEL
# %bb.38:
.LBB21_39:
.Ltmp212:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB21_40:
.Ltmp204:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$s0, $a0
	beq	$a2, $fp, .LBB21_42
# %bb.41:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i43
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB21_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit45
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end21:
	.size	_ZNK7Results7GetTimeENS_13BenchmarkTimeE, .Lfunc_end21-_ZNK7Results7GetTimeENS_13BenchmarkTimeE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table21:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Lfunc_begin8-.Lfunc_begin8    # >> Call Site 1 <<
	.uleb128 .Ltmp202-.Lfunc_begin8         #   Call between .Lfunc_begin8 and .Ltmp202
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp202-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Ltmp203-.Ltmp202              #   Call between .Ltmp202 and .Ltmp203
	.uleb128 .Ltmp204-.Lfunc_begin8         #     jumps to .Ltmp204
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp203-.Lfunc_begin8         # >> Call Site 3 <<
	.uleb128 .Ltmp205-.Ltmp203              #   Call between .Ltmp203 and .Ltmp205
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp205-.Lfunc_begin8         # >> Call Site 4 <<
	.uleb128 .Ltmp208-.Ltmp205              #   Call between .Ltmp205 and .Ltmp208
	.uleb128 .Ltmp209-.Lfunc_begin8         #     jumps to .Ltmp209
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp208-.Lfunc_begin8         # >> Call Site 5 <<
	.uleb128 .Ltmp210-.Ltmp208              #   Call between .Ltmp208 and .Ltmp210
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp210-.Lfunc_begin8         # >> Call Site 6 <<
	.uleb128 .Ltmp211-.Ltmp210              #   Call between .Ltmp210 and .Ltmp211
	.uleb128 .Ltmp212-.Lfunc_begin8         #     jumps to .Ltmp212
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp211-.Lfunc_begin8         # >> Call Site 7 <<
	.uleb128 .Lfunc_end21-.Ltmp211          #   Call between .Ltmp211 and .Lfunc_end21
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi # -- Begin function _ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
	.globl	_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
	.p2align	2
	.type	_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi,@function
_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi: # @_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$fp, $a0, 16
	st.d	$fp, $a0, 0
	ld.d	$a0, $a1, 0
	addi.d	$s3, $a1, 16
	move	$s2, $a2
	beq	$a0, $s3, .LBB22_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a0, $s0, 0
	ld.d	$a0, $s3, 0
	st.d	$a0, $s0, 16
	b	.LBB22_3
.LBB22_2:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a0, $s1, 8
	addi.d	$a2, $a0, 1
	move	$a0, $fp
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB22_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $s1, 8
	st.d	$a0, $s0, 8
	st.d	$s3, $s1, 0
	st.d	$zero, $s1, 8
	st.b	$zero, $s1, 16
	st.w	$s2, $s0, 32
	addi.d	$s3, $sp, 72
	ld.d	$a1, $s0, 8
	ld.d	$s2, $s0, 0
	st.d	$s3, $sp, 56
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 24
	move	$a0, $s3
	bltu	$a1, $a2, .LBB22_6
# %bb.4:                                # %.noexc.i
.Ltmp213:                               # EH_LABEL
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 24
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp214:                               # EH_LABEL
# %bb.5:                                # %.noexc
	ld.d	$a1, $sp, 24
	st.d	$a0, $sp, 56
	st.d	$a1, $sp, 72
.LBB22_6:                               # %._crit_edge.i.i
	addi.w	$a2, $zero, -1
	addi.d	$s1, $s0, 40
	beq	$a1, $a2, .LBB22_10
# %bb.7:                                # %._crit_edge.i.i
	bnez	$a1, .LBB22_9
# %bb.8:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB22_10
.LBB22_9:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB22_10:
	ld.d	$a0, $sp, 24
	st.d	$a0, $sp, 64
.Ltmp216:                               # EH_LABEL
	addi.d	$a1, $sp, 56
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp217:                               # EH_LABEL
# %bb.11:
	ld.d	$a0, $sp, 56
	beq	$a0, $s3, .LBB22_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
.Ltmp219:                               # EH_LABEL
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp220:                               # EH_LABEL
# %bb.14:
	move	$s2, $a0
	ori	$a0, $zero, 1
	lu32i.d	$a0, 1
	st.d	$a0, $s2, 8
	pcalau12i	$a0, %pc_hi20(_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE+16)
	st.d	$a0, $s2, 0
	addi.d	$s3, $s2, 16
	st.b	$zero, $s2, 16
	ori	$a0, $zero, 16
	st.w	$a0, $s2, 24
	addi.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s2, 40
	st.d	$s2, $s0, 80
	st.d	$s3, $s0, 72
	addi.d	$s4, $sp, 40
	st.d	$s4, $sp, 24
	st.d	$zero, $sp, 32
	st.b	$zero, $sp, 40
.Ltmp222:                               # EH_LABEL
	addi.d	$a2, $sp, 24
	move	$a0, $s3
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_)
	jirl	$ra, $ra, 0
.Ltmp223:                               # EH_LABEL
# %bb.15:
	ld.d	$s2, $sp, 32
	beqz	$s2, .LBB22_18
# %bb.16:
.Ltmp225:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi)
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 356
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp226:                               # EH_LABEL
# %bb.17:
	ld.d	$s1, $sp, 16
	b	.LBB22_19
.LBB22_18:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s1, $a1, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	beqz	$a0, .LBB22_41
.LBB22_19:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.20:
.Ltmp227:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.31)
	addi.d	$a1, $a1, %pc_lo12(.L.str.31)
	ori	$a2, $zero, 27
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp228:                               # EH_LABEL
# %bb.21:                               # %_ZN9benchmark8internallsIA28_cEERNS0_7LogTypeES4_RKT_.exit
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.22:
	ld.d	$a1, $s0, 40
	ld.d	$a2, $s0, 48
.Ltmp229:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp230:                               # EH_LABEL
# %bb.23:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.24:
.Ltmp231:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.32)
	addi.d	$a1, $a1, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp232:                               # EH_LABEL
# %bb.25:                               # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.26:
.Ltmp233:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.33)
	addi.d	$a1, $a1, %pc_lo12(.L.str.33)
	ori	$a2, $zero, 17
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp234:                               # EH_LABEL
# %bb.27:                               # %_ZN9benchmark8internallsIA18_cEERNS0_7LogTypeES4_RKT_.exit
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.28:
	ld.d	$a1, $s0, 0
	ld.d	$a2, $s0, 8
.Ltmp235:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp236:                               # EH_LABEL
# %bb.29:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit30
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.30:
.Ltmp237:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.32)
	addi.d	$a1, $a1, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp238:                               # EH_LABEL
# %bb.31:                               # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit33
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.32:
.Ltmp239:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.34)
	addi.d	$a1, $a1, %pc_lo12(.L.str.34)
	ori	$a2, $zero, 16
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp240:                               # EH_LABEL
# %bb.33:                               # %_ZN9benchmark8internallsIA17_cEERNS0_7LogTypeES4_RKT_.exit
	ld.d	$a0, $s1, 0
	beqz	$a0, .LBB22_35
# %bb.34:
	ld.d	$a1, $sp, 24
	ld.d	$a2, $sp, 32
.Ltmp241:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp242:                               # EH_LABEL
.LBB22_35:                              # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit38
	bnez	$s2, .LBB22_39
# %bb.36:
	ld.d	$a0, $sp, 24
	beq	$a0, $s4, .LBB22_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB22_39:
.Ltmp247:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp248:                               # EH_LABEL
# %bb.40:
.LBB22_41:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB22_19
# %bb.42:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s1, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $s1, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB22_19
.LBB22_43:
.Ltmp215:                               # EH_LABEL
	move	$s1, $a0
	b	.LBB22_56
.LBB22_44:
.Ltmp224:                               # EH_LABEL
	b	.LBB22_50
.LBB22_45:
.Ltmp221:                               # EH_LABEL
	move	$s1, $a0
	b	.LBB22_53
.LBB22_46:
.Ltmp218:                               # EH_LABEL
	ld.d	$a2, $sp, 56
	move	$s1, $a0
	beq	$a2, $s3, .LBB22_56
# %bb.47:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB22_55
.LBB22_48:
.Ltmp249:                               # EH_LABEL
	b	.LBB22_50
.LBB22_49:
.Ltmp243:                               # EH_LABEL
	bnez	$s2, .LBB22_59
.LBB22_50:
	move	$s1, $a0
	ld.d	$a0, $sp, 24
	addi.d	$s2, $s0, 72
	beq	$a0, $s4, .LBB22_52
# %bb.51:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_52:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev)
	jirl	$ra, $ra, 0
.LBB22_53:
	ld.d	$a0, $s0, 40
	addi.d	$a1, $s0, 56
	beq	$a0, $a1, .LBB22_56
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
.LBB22_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_56:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	ld.d	$a0, $s0, 0
	beq	$a0, $fp, .LBB22_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i51
	ld.d	$a1, $fp, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_58:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit53
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB22_59:
.Ltmp244:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp245:                               # EH_LABEL
# %bb.60:
.LBB22_61:
.Ltmp246:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end22:
	.size	_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi, .Lfunc_end22-_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table22:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin9-.Lfunc_begin9    # >> Call Site 1 <<
	.uleb128 .Ltmp213-.Lfunc_begin9         #   Call between .Lfunc_begin9 and .Ltmp213
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp213-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp214-.Ltmp213              #   Call between .Ltmp213 and .Ltmp214
	.uleb128 .Ltmp215-.Lfunc_begin9         #     jumps to .Ltmp215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp214-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Ltmp216-.Ltmp214              #   Call between .Ltmp214 and .Ltmp216
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp216-.Lfunc_begin9         # >> Call Site 4 <<
	.uleb128 .Ltmp217-.Ltmp216              #   Call between .Ltmp216 and .Ltmp217
	.uleb128 .Ltmp218-.Lfunc_begin9         #     jumps to .Ltmp218
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp217-.Lfunc_begin9         # >> Call Site 5 <<
	.uleb128 .Ltmp219-.Ltmp217              #   Call between .Ltmp217 and .Ltmp219
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp219-.Lfunc_begin9         # >> Call Site 6 <<
	.uleb128 .Ltmp220-.Ltmp219              #   Call between .Ltmp219 and .Ltmp220
	.uleb128 .Ltmp221-.Lfunc_begin9         #     jumps to .Ltmp221
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp220-.Lfunc_begin9         # >> Call Site 7 <<
	.uleb128 .Ltmp222-.Ltmp220              #   Call between .Ltmp220 and .Ltmp222
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp222-.Lfunc_begin9         # >> Call Site 8 <<
	.uleb128 .Ltmp223-.Ltmp222              #   Call between .Ltmp222 and .Ltmp223
	.uleb128 .Ltmp224-.Lfunc_begin9         #     jumps to .Ltmp224
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp225-.Lfunc_begin9         # >> Call Site 9 <<
	.uleb128 .Ltmp226-.Ltmp225              #   Call between .Ltmp225 and .Ltmp226
	.uleb128 .Ltmp249-.Lfunc_begin9         #     jumps to .Ltmp249
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp227-.Lfunc_begin9         # >> Call Site 10 <<
	.uleb128 .Ltmp242-.Ltmp227              #   Call between .Ltmp227 and .Ltmp242
	.uleb128 .Ltmp243-.Lfunc_begin9         #     jumps to .Ltmp243
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp242-.Lfunc_begin9         # >> Call Site 11 <<
	.uleb128 .Ltmp247-.Ltmp242              #   Call between .Ltmp242 and .Ltmp247
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp247-.Lfunc_begin9         # >> Call Site 12 <<
	.uleb128 .Ltmp248-.Ltmp247              #   Call between .Ltmp247 and .Ltmp248
	.uleb128 .Ltmp249-.Lfunc_begin9         #     jumps to .Ltmp249
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp248-.Lfunc_begin9         # >> Call Site 13 <<
	.uleb128 .Ltmp244-.Ltmp248              #   Call between .Ltmp248 and .Ltmp244
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp244-.Lfunc_begin9         # >> Call Site 14 <<
	.uleb128 .Ltmp245-.Ltmp244              #   Call between .Ltmp244 and .Ltmp245
	.uleb128 .Ltmp246-.Lfunc_begin9         #     jumps to .Ltmp246
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp245-.Lfunc_begin9         # >> Call Site 15 <<
	.uleb128 .Lfunc_end22-.Ltmp245          #   Call between .Ltmp245 and .Lfunc_end22
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	5                               # -- Begin function _ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.type	_ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a1
	move	$s0, $a0
	pcaddu18i	$ra, %call36(_ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	ld.d	$s2, $a0, 0
	ld.d	$s3, $a0, 8
	beq	$s2, $s3, .LBB23_6
# %bb.1:                                # %.preheader.lr.ph
	addi.w	$s4, $zero, -1
	b	.LBB23_3
	.p2align	4, , 16
.LBB23_2:                               # %._crit_edge
                                        #   in Loop: Header=BB23_3 Depth=1
	addi.d	$s2, $s2, 64
	beq	$s2, $s3, .LBB23_6
.LBB23_3:                               # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB23_4 Depth 2
	ld.d	$a1, $s2, 0
	ld.d	$a3, $s2, 8
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	move	$a6, $a0
	beq	$a0, $s4, .LBB23_2
	.p2align	4, , 16
.LBB23_4:                               #   Parent Loop BB23_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a3, $fp, 8
	bltu	$a3, $a6, .LBB23_10
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmRKS4_.exit
                                        #   in Loop: Header=BB23_4 Depth=2
	ld.d	$a4, $s2, 40
	ld.d	$a0, $s2, 8
	ld.d	$a5, $s2, 32
	add.d	$s1, $a4, $a6
	sub.d	$a1, $a3, $a6
	sltu	$a2, $a0, $a1
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a2, $a0, $a1
	move	$a0, $fp
	move	$a1, $a6
	move	$a3, $a5
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a3, $s2, 8
	move	$a0, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	move	$a6, $a0
	bne	$a0, $s4, .LBB23_4
	b	.LBB23_2
.LBB23_6:                               # %._crit_edge19
	ld.d	$a1, $fp, 0
	addi.d	$a0, $s0, 16
	addi.d	$s1, $fp, 16
	st.d	$a0, $s0, 0
	beq	$a1, $s1, .LBB23_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a0, $fp, 16
	ld.d	$s2, $fp, 8
	st.d	$a1, $s0, 0
	st.d	$a0, $s0, 16
	b	.LBB23_9
.LBB23_8:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$s2, $fp, 8
	addi.d	$a2, $s2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB23_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	st.d	$s2, $s0, 8
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB23_10:
	pcalau12i	$a0, %pc_hi20(.L.str.66)
	addi.d	$a0, $a0, %pc_lo12(.L.str.66)
	pcalau12i	$a1, %pc_hi20(.L.str.65)
	addi.d	$a1, $a1, %pc_lo12(.L.str.65)
	move	$a2, $a6
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.Lfunc_end23:
	.size	_ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end23-_ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,"axG",@progbits,_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,comdat
	.hidden	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_ # -- Begin function _ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
	.weak	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
	.p2align	2
	.type	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,@function
_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_: # @_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a2
	move	$fp, $a0
.Ltmp250:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	ori	$a2, $zero, 64
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE)
	jirl	$ra, $ra, 0
.Ltmp251:                               # EH_LABEL
# %bb.1:
	ld.w	$a0, $sp, 16
	st.w	$a0, $fp, 8
	addi.d	$a0, $fp, 16
	addi.d	$s0, $sp, 24
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt6localeaSERKS_)
	jirl	$ra, $ra, 0
	vld	$vr0, $sp, 32
	ld.d	$s1, $fp, 32
	vrepli.b	$vr1, 0
	vst	$vr1, $sp, 32
	vst	$vr0, $fp, 24
	beqz	$s1, .LBB24_6
# %bb.2:
	ld.d	$a0, $s1, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB24_4
# %bb.3:
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$s1, $sp, 40
	bnez	$s1, .LBB24_7
	b	.LBB24_14
.LBB24_4:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB24_11
# %bb.5:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB24_12
.LBB24_6:                               # %_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEaSEOS3_.exit
	ld.d	$s1, $sp, 40
	beqz	$s1, .LBB24_14
.LBB24_7:
	ld.d	$a0, $s1, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB24_9
# %bb.8:
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	b	.LBB24_14
.LBB24_9:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB24_13
# %bb.10:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB24_14
	b	.LBB24_16
.LBB24_11:
	addi.d	$a1, $s1, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB24_6
.LBB24_12:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 40
	bnez	$s1, .LBB24_7
	b	.LBB24_14
.LBB24_13:
	addi.d	$a1, $s1, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB24_16
.LBB24_14:                              # %_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 0
.LBB24_15:
	andi	$a0, $a0, 1
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB24_16:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB24_14
.LBB24_17:
.Ltmp252:                               # EH_LABEL
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	move	$s1, $a0
	bne	$a1, $a2, .LBB24_22
# %bb.18:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	beqz	$s0, .LBB24_20
# %bb.19:
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 16
	jirl	$ra, $a1, 0
	move	$a1, $a0
.Ltmp253:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc)
	jirl	$ra, $ra, 0
.Ltmp254:                               # EH_LABEL
.LBB24_20:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
	ld.b	$a0, $fp, 0
	b	.LBB24_15
.LBB24_21:
.Ltmp255:                               # EH_LABEL
	move	$s1, $a0
.Ltmp256:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp257:                               # EH_LABEL
.LBB24_22:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB24_23:
.Ltmp258:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end24:
	.size	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_, .Lfunc_end24-_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
	.cfi_endproc
	.section	.gcc_except_table._ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,"aG",@progbits,_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,comdat
	.p2align	2, 0x0
GCC_except_table24:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Ltmp250-.Lfunc_begin10        # >> Call Site 1 <<
	.uleb128 .Ltmp251-.Ltmp250              #   Call between .Ltmp250 and .Ltmp251
	.uleb128 .Ltmp252-.Lfunc_begin10        #     jumps to .Ltmp252
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp251-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Ltmp253-.Ltmp251              #   Call between .Ltmp251 and .Ltmp253
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp253-.Lfunc_begin10        # >> Call Site 3 <<
	.uleb128 .Ltmp254-.Ltmp253              #   Call between .Ltmp253 and .Ltmp254
	.uleb128 .Ltmp255-.Lfunc_begin10        #     jumps to .Ltmp255
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp254-.Lfunc_begin10        # >> Call Site 4 <<
	.uleb128 .Ltmp256-.Ltmp254              #   Call between .Ltmp254 and .Ltmp256
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp256-.Lfunc_begin10        # >> Call Site 5 <<
	.uleb128 .Ltmp257-.Ltmp256              #   Call between .Ltmp256 and .Ltmp257
	.uleb128 .Ltmp258-.Lfunc_begin10        #     jumps to .Ltmp258
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp257-.Lfunc_begin10        # >> Call Site 6 <<
	.uleb128 .Lfunc_end24-.Ltmp257          #   Call between .Ltmp257 and .Lfunc_end24
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.byte	2                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 2
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 2
.Ltmp259:                               # TypeInfo 1
	.word	.L_ZTISt11regex_error.DW.stub-.Ltmp259
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE # -- Begin function _Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE
	.globl	_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE
	.p2align	5
	.type	_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE,@function
_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE: # @_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	pcalau12i	$a3, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ld.b	$a3, $a3, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	move	$fp, $a1
	dbar	20
	beqz	$a3, .LBB25_2
.LBB25_1:                               # %_ZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseID.exit
	bstrpick.d	$a0, $a0, 31, 0
	slli.d	$a1, $a0, 4
	alsl.d	$a0, $a0, $a1, 3
	pcalau12i	$a1, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a1, $a1, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	add.d	$a0, $a1, $a0
	ld.d	$a1, $a0, 8
	ori	$a3, $zero, 88
	mul.d	$a2, $a2, $a3
	add.d	$a3, $fp, $a2
	move	$a2, $fp
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB25_2:
	pcalau12i	$a1, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	move	$s0, $a0
	move	$a0, $a1
	move	$s1, $a2
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a2, $s1
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB25_1
# %bb.3:                                # %.preheader.preheader.i
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ori	$a2, $zero, 144
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(__cxx_global_array_dtor)
	addi.d	$a0, $a0, %pc_lo12(__cxx_global_array_dtor)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $zero
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a2, $s1
	b	.LBB25_1
.Lfunc_end25:
	.size	_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE, .Lfunc_end25-_Z8AddCases10TestCaseIDSt16initializer_listI8TestCaseE
	.cfi_endproc
                                        # -- End function
	.hidden	_Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE # -- Begin function _Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE
	.globl	_Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE
	.p2align	5
	.type	_Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE,@function
_Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE: # @_Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	st.d	$s5, $sp, 192                   # 8-byte Folded Spill
	st.d	$s6, $sp, 184                   # 8-byte Folded Spill
	st.d	$s7, $sp, 176                   # 8-byte Folded Spill
	st.d	$s8, $sp, 168                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev)
	jirl	$ra, $ra, 0
	beqz	$s0, .LBB26_62
# %bb.1:                                # %.lr.ph65
	slli.d	$a0, $s0, 6
	add.d	$a0, $fp, $a0
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	addi.d	$s5, $sp, 48
	addi.d	$s0, $sp, 144
	addi.d	$s7, $sp, 80
	addi.d	$s8, $sp, 112
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	addi.d	$s2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	b	.LBB26_3
	.p2align	4, , 16
.LBB26_2:                               # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev.exit
                                        #   in Loop: Header=BB26_3 Depth=1
	addi.d	$fp, $fp, 64
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	beq	$fp, $a0, .LBB26_62
.LBB26_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB26_30 Depth 2
	addi.d	$a0, $sp, 96
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 136
	ld.d	$s3, $sp, 128
	st.d	$s5, $sp, 32
	st.d	$a1, $sp, 160
	move	$a0, $s5
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB26_6
# %bb.4:                                # %.noexc.i
                                        #   in Loop: Header=BB26_3 Depth=1
.Ltmp260:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 160
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp261:                               # EH_LABEL
# %bb.5:                                # %.noexc
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 160
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB26_6:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB26_10
# %bb.7:                                # %._crit_edge.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	bnez	$a1, .LBB26_9
# %bb.8:                                #   in Loop: Header=BB26_3 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB26_10
	.p2align	4, , 16
.LBB26_9:                               #   in Loop: Header=BB26_3 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_10:                              #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $sp, 160
	st.d	$a0, $sp, 40
.Ltmp263:                               # EH_LABEL
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 32
	pcaddu18i	$ra, %call36(_ZN8internal12_GLOBAL__N_120PerformSubstitutionsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp264:                               # EH_LABEL
# %bb.11:                               #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $sp, 128
	beq	$a0, $s0, .LBB26_15
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 64
	beq	$a1, $s7, .LBB26_18
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a2, $sp, 144
	vld	$vr0, $sp, 72
	st.d	$a1, $sp, 128
	vst	$vr0, $sp, 136
	beqz	$a0, .LBB26_17
.LBB26_14:                              #   in Loop: Header=BB26_3 Depth=1
	st.d	$a0, $sp, 64
	st.d	$a2, $sp, 80
	b	.LBB26_23
	.p2align	4, , 16
.LBB26_15:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 64
	beq	$a1, $s7, .LBB26_18
# %bb.16:                               #   in Loop: Header=BB26_3 Depth=1
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 72
	st.d	$a1, $sp, 128
	vst	$vr0, $sp, 136
	bnez	$a0, .LBB26_14
.LBB26_17:                              #   in Loop: Header=BB26_3 Depth=1
	st.d	$s7, $sp, 64
	move	$a0, $s7
	b	.LBB26_23
	.p2align	4, , 16
.LBB26_18:                              #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a2, $sp, 72
	beqz	$a2, .LBB26_22
# %bb.19:                               #   in Loop: Header=BB26_3 Depth=1
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB26_21
# %bb.20:                               #   in Loop: Header=BB26_3 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB26_22
.LBB26_21:                              #   in Loop: Header=BB26_3 Depth=1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $sp, 72
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 136
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 64
.LBB26_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB26_3 Depth=1
	st.d	$zero, $sp, 72
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 64
	beq	$a0, $s7, .LBB26_25
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $sp, 32
	beq	$a0, $s5, .LBB26_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$s6, $s2, 8
	beq	$a0, $s6, .LBB26_36
# %bb.28:                               # %.lr.ph
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$s3, $sp, 104
	ld.d	$s4, $sp, 96
	addi.d	$s1, $a0, 48
	b	.LBB26_30
	.p2align	4, , 16
.LBB26_29:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread49
                                        #   in Loop: Header=BB26_30 Depth=2
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 64
	beq	$a0, $s6, .LBB26_36
.LBB26_30:                              #   Parent Loop BB26_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s1, -40
	bne	$a0, $s3, .LBB26_29
# %bb.31:                               #   in Loop: Header=BB26_30 Depth=2
	beqz	$s3, .LBB26_33
# %bb.32:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
                                        #   in Loop: Header=BB26_30 Depth=2
	ld.d	$a0, $s1, -48
	move	$a1, $s4
	move	$a2, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB26_29
.LBB26_33:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB26_49
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i33
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 128
	beq	$a1, $s0, .LBB26_53
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i34
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a2, $s1, 0
	b	.LBB26_51
	.p2align	4, , 16
.LBB26_36:                              # %._crit_edge
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $s2, 16
	beq	$s6, $a0, .LBB26_39
# %bb.37:                               #   in Loop: Header=BB26_3 Depth=1
	addi.d	$a0, $s6, 16
	st.d	$a0, $s6, 0
	ld.d	$a1, $sp, 96
	beq	$a1, $s8, .LBB26_40
# %bb.38:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	st.d	$a1, $s6, 0
	ld.d	$a0, $sp, 112
	ld.d	$s1, $sp, 104
	st.d	$a0, $s6, 16
	b	.LBB26_41
	.p2align	4, , 16
.LBB26_39:                              #   in Loop: Header=BB26_3 Depth=1
.Ltmp266:                               # EH_LABEL
	addi.d	$a1, $sp, 96
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp267:                               # EH_LABEL
	b	.LBB26_45
.LBB26_40:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$s1, $sp, 104
	addi.d	$a2, $s1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_41:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	addi.d	$a0, $s6, 48
	st.d	$a0, $s6, 32
	ld.d	$a1, $sp, 128
	st.d	$s1, $s6, 8
	st.d	$s8, $sp, 96
	st.d	$zero, $sp, 104
	st.b	$zero, $sp, 112
	beq	$a1, $s0, .LBB26_43
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	st.d	$a1, $s6, 32
	ld.d	$a0, $sp, 144
	ld.d	$s1, $sp, 136
	st.d	$a0, $s6, 48
	b	.LBB26_44
.LBB26_43:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$s1, $sp, 136
	addi.d	$a2, $s1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_44:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2EOS6_.exit.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	st.d	$s1, $s6, 40
	st.d	$s0, $sp, 128
	st.d	$zero, $sp, 136
	st.b	$zero, $sp, 144
	addi.d	$a0, $s6, 64
	st.d	$a0, $s2, 8
.LBB26_45:                              # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $sp, 128
	beq	$a0, $s0, .LBB26_47
.LBB26_46:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_47:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $sp, 96
	beq	$a0, $s8, .LBB26_2
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB26_2
.LBB26_49:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i41
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a1, $sp, 128
	beq	$a1, $s0, .LBB26_53
# %bb.50:                               #   in Loop: Header=BB26_3 Depth=1
	move	$a0, $zero
                                        # implicit-def: $r6
.LBB26_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i35
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a3, $sp, 136
	st.d	$a1, $s1, -16
	st.d	$a3, $s1, -8
	ld.d	$a1, $sp, 144
	st.d	$a1, $s1, 0
	beqz	$a0, .LBB26_57
# %bb.52:                               #   in Loop: Header=BB26_3 Depth=1
	st.d	$a0, $sp, 128
	st.d	$a2, $sp, 144
	b	.LBB26_60
.LBB26_53:                              #   in Loop: Header=BB26_3 Depth=1
	addi.d	$a2, $s1, -48
	addi.d	$a3, $sp, 96
	beq	$a2, $a3, .LBB26_61
# %bb.54:                               #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a2, $sp, 136
	beqz	$a2, .LBB26_59
# %bb.55:                               #   in Loop: Header=BB26_3 Depth=1
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB26_58
# %bb.56:                               #   in Loop: Header=BB26_3 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB26_59
.LBB26_57:                              #   in Loop: Header=BB26_3 Depth=1
	st.d	$s0, $sp, 128
	move	$a0, $s0
	b	.LBB26_60
.LBB26_58:                              #   in Loop: Header=BB26_3 Depth=1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_59:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i39
                                        #   in Loop: Header=BB26_3 Depth=1
	ld.d	$a0, $sp, 136
	ld.d	$a1, $s1, -16
	st.d	$a0, $s1, -8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 128
.LBB26_60:                              # %.thread52
                                        #   in Loop: Header=BB26_3 Depth=1
	st.d	$zero, $sp, 136
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 128
	bne	$a0, $s0, .LBB26_46
	b	.LBB26_47
.LBB26_61:                              #   in Loop: Header=BB26_3 Depth=1
	move	$a0, $a1
	b	.LBB26_60
.LBB26_62:                              # %._crit_edge66
	move	$a0, $zero
	ld.d	$s8, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB26_63:
.Ltmp268:                               # EH_LABEL
	b	.LBB26_65
.LBB26_64:
.Ltmp262:                               # EH_LABEL
.LBB26_65:
	move	$fp, $a0
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB26_66:
.Ltmp265:                               # EH_LABEL
	ld.d	$a2, $sp, 32
	move	$fp, $a0
	beq	$a2, $s5, .LBB26_68
# %bb.67:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_68:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end26:
	.size	_Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE, .Lfunc_end26-_Z16SetSubstitutionsSt16initializer_listISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table26:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Lfunc_begin11-.Lfunc_begin11  # >> Call Site 1 <<
	.uleb128 .Ltmp260-.Lfunc_begin11        #   Call between .Lfunc_begin11 and .Ltmp260
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp260-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp261-.Ltmp260              #   Call between .Ltmp260 and .Ltmp261
	.uleb128 .Ltmp262-.Lfunc_begin11        #     jumps to .Ltmp262
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp261-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp263-.Ltmp261              #   Call between .Ltmp261 and .Ltmp263
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp263-.Lfunc_begin11        # >> Call Site 4 <<
	.uleb128 .Ltmp264-.Ltmp263              #   Call between .Ltmp263 and .Ltmp264
	.uleb128 .Ltmp265-.Lfunc_begin11        #     jumps to .Ltmp265
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp264-.Lfunc_begin11        # >> Call Site 5 <<
	.uleb128 .Ltmp266-.Ltmp264              #   Call between .Ltmp264 and .Ltmp266
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp266-.Lfunc_begin11        # >> Call Site 6 <<
	.uleb128 .Ltmp267-.Ltmp266              #   Call between .Ltmp266 and .Ltmp267
	.uleb128 .Ltmp268-.Lfunc_begin11        #     jumps to .Ltmp268
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp267-.Lfunc_begin11        # >> Call Site 7 <<
	.uleb128 .Lfunc_end26-.Ltmp267          #   Call between .Ltmp267 and .Lfunc_end26
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	5                               # -- Begin function _ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev
	.type	_ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev,@function
_ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev: # @_ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	addi.d	$sp, $sp, -2032
	.cfi_def_cfa_offset 2032
	st.d	$ra, $sp, 2024                  # 8-byte Folded Spill
	st.d	$fp, $sp, 2016                  # 8-byte Folded Spill
	st.d	$s0, $sp, 2008                  # 8-byte Folded Spill
	st.d	$s1, $sp, 2000                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1992                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	addi.d	$sp, $sp, -2048
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 4160
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	dbar	20
	beqz	$a0, .LBB27_5
.LBB27_1:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	dbar	20
	beqz	$a0, .LBB27_8
.LBB27_2:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	dbar	20
	beqz	$a0, .LBB27_11
.LBB27_3:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	dbar	20
	beqz	$a0, .LBB27_14
.LBB27_4:
	addi.d	$sp, $sp, 2032
	addi.d	$sp, $sp, 96
	ld.d	$s2, $sp, 1992                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 2000                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 2008                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 2016                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 2024                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 2032
	ret
.LBB27_5:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$fp, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB27_1
# %bb.6:
.Ltmp269:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	pcalau12i	$a1, %pc_hi20(.L.str.218)
	addi.d	$a1, $a1, %pc_lo12(.L.str.218)
	ori	$a2, $zero, 2520
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_)
	jirl	$ra, $ra, 0
.Ltmp270:                               # EH_LABEL
# %bb.7:
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	pcalau12i	$a1, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a1, $a1, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	pcalau12i	$a2, %pc_hi20(__dso_handle)
	addi.d	$a2, $a2, %pc_lo12(__dso_handle)
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB27_1
.LBB27_8:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$fp, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB27_2
# %bb.9:
.Ltmp272:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	pcalau12i	$a1, %pc_hi20(.L.str.219)
	addi.d	$a1, $a1, %pc_lo12(.L.str.219)
	ori	$a2, $zero, 2520
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_)
	jirl	$ra, $ra, 0
.Ltmp273:                               # EH_LABEL
# %bb.10:
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	pcalau12i	$a1, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a1, $a1, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	pcalau12i	$a2, %pc_hi20(__dso_handle)
	addi.d	$a2, $a2, %pc_lo12(__dso_handle)
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB27_2
.LBB27_11:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	addi.d	$fp, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB27_3
# %bb.12:
.Ltmp275:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	pcalau12i	$a1, %pc_hi20(.L.str.220)
	addi.d	$a1, $a1, %pc_lo12(.L.str.220)
	ori	$a2, $zero, 2520
	add.d	$a2, $sp, $a2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_)
	jirl	$ra, $ra, 0
.Ltmp276:                               # EH_LABEL
# %bb.13:
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	pcalau12i	$a1, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	addi.d	$a1, $a1, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	pcalau12i	$a2, %pc_hi20(__dso_handle)
	addi.d	$a2, $a2, %pc_lo12(__dso_handle)
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB27_3
.LBB27_14:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	addi.d	$fp, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB27_4
# %bb.15:
	ori	$a0, $zero, 2520
	add.d	$s0, $sp, $a0
.Ltmp278:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.221)
	addi.d	$a1, $a0, %pc_lo12(.L.str.221)
	pcalau12i	$a0, %pc_hi20(.L.str.218)
	addi.d	$a2, $a0, %pc_lo12(.L.str.218)
	ori	$a0, $zero, 2520
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_)
	jirl	$ra, $ra, 0
.Ltmp279:                               # EH_LABEL
# %bb.16:
	ori	$a0, $zero, 2584
	add.d	$s0, $sp, $a0
.Ltmp280:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.222)
	addi.d	$a1, $a0, %pc_lo12(.L.str.222)
	pcalau12i	$a0, %pc_hi20(.L.str.223)
	addi.d	$a2, $a0, %pc_lo12(.L.str.223)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_)
	jirl	$ra, $ra, 0
.Ltmp281:                               # EH_LABEL
# %bb.17:
	ori	$a0, $zero, 2648
	add.d	$s0, $sp, $a0
.Ltmp282:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a1, $a0, %pc_lo12(.L.str.224)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_)
	jirl	$ra, $ra, 0
.Ltmp283:                               # EH_LABEL
# %bb.18:
	ori	$a0, $zero, 2712
	add.d	$s0, $sp, $a0
.Ltmp284:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a1, $a0, %pc_lo12(.L.str.225)
	pcalau12i	$a0, %pc_hi20(.L.str.226)
	addi.d	$a2, $a0, %pc_lo12(.L.str.226)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_)
	jirl	$ra, $ra, 0
.Ltmp285:                               # EH_LABEL
# %bb.19:
	ori	$a0, $zero, 2776
	add.d	$s0, $sp, $a0
.Ltmp286:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.227)
	addi.d	$a1, $a0, %pc_lo12(.L.str.227)
	pcalau12i	$a0, %pc_hi20(.L.str.228)
	addi.d	$a2, $a0, %pc_lo12(.L.str.228)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp287:                               # EH_LABEL
# %bb.20:
	ori	$a0, $zero, 2840
	add.d	$s0, $sp, $a0
.Ltmp289:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	ori	$a0, $zero, 2456
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp290:                               # EH_LABEL
# %bb.21:
.Ltmp292:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.231)
	addi.d	$a2, $a0, %pc_lo12(.L.str.231)
	ori	$a0, $zero, 2488
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2456
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp293:                               # EH_LABEL
# %bb.22:
.Ltmp295:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.229)
	addi.d	$a1, $a0, %pc_lo12(.L.str.229)
	ori	$a0, $zero, 2488
	add.d	$a2, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp296:                               # EH_LABEL
# %bb.23:
	ori	$a0, $zero, 2904
	add.d	$s0, $sp, $a0
.Ltmp298:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	ori	$a0, $zero, 2328
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp299:                               # EH_LABEL
# %bb.24:
.Ltmp301:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.233)
	addi.d	$a2, $a0, %pc_lo12(.L.str.233)
	ori	$a0, $zero, 2360
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2328
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp302:                               # EH_LABEL
# %bb.25:
.Ltmp304:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	ori	$a0, $zero, 2392
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2360
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp305:                               # EH_LABEL
# %bb.26:
.Ltmp307:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.234)
	addi.d	$a2, $a0, %pc_lo12(.L.str.234)
	ori	$a0, $zero, 2424
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2392
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp308:                               # EH_LABEL
# %bb.27:
.Ltmp310:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.232)
	addi.d	$a1, $a0, %pc_lo12(.L.str.232)
	ori	$a0, $zero, 2424
	add.d	$a2, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp311:                               # EH_LABEL
# %bb.28:
	ori	$a0, $zero, 2968
	add.d	$s0, $sp, $a0
.Ltmp313:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	ori	$a0, $zero, 2200
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp314:                               # EH_LABEL
# %bb.29:
.Ltmp316:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.236)
	addi.d	$a2, $a0, %pc_lo12(.L.str.236)
	ori	$a0, $zero, 2232
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2200
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp317:                               # EH_LABEL
# %bb.30:
.Ltmp319:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11)
	ori	$a0, $zero, 2264
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2232
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp320:                               # EH_LABEL
# %bb.31:
.Ltmp322:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.237)
	addi.d	$a2, $a0, %pc_lo12(.L.str.237)
	ori	$a0, $zero, 2296
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2264
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp323:                               # EH_LABEL
# %bb.32:
.Ltmp325:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.235)
	addi.d	$a1, $a0, %pc_lo12(.L.str.235)
	ori	$a0, $zero, 2296
	add.d	$a2, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp326:                               # EH_LABEL
# %bb.33:
	ori	$a0, $zero, 3032
	add.d	$s0, $sp, $a0
.Ltmp328:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	ori	$a0, $zero, 2072
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp329:                               # EH_LABEL
# %bb.34:
.Ltmp331:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a2, $a0, %pc_lo12(.L.str.239)
	ori	$a0, $zero, 2104
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2072
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp332:                               # EH_LABEL
# %bb.35:
.Ltmp334:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	ori	$a0, $zero, 2136
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2104
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp335:                               # EH_LABEL
# %bb.36:
.Ltmp337:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a2, $a0, %pc_lo12(.L.str.240)
	ori	$a0, $zero, 2168
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2136
	add.d	$a1, $sp, $a1
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp338:                               # EH_LABEL
# %bb.37:
.Ltmp340:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a1, $a0, %pc_lo12(.L.str.238)
	ori	$a0, $zero, 2168
	add.d	$a2, $sp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp341:                               # EH_LABEL
# %bb.38:
	ori	$a0, $zero, 3096
	add.d	$s0, $sp, $a0
.Ltmp343:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1944
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp344:                               # EH_LABEL
# %bb.39:
.Ltmp346:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.242)
	addi.d	$a2, $a0, %pc_lo12(.L.str.242)
	addi.d	$a0, $sp, 1976
	addi.d	$a1, $sp, 1944
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp347:                               # EH_LABEL
# %bb.40:
.Ltmp349:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 1976
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp350:                               # EH_LABEL
# %bb.41:
.Ltmp352:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.243)
	addi.d	$a2, $a0, %pc_lo12(.L.str.243)
	addi.d	$a0, $sp, 2040
	addi.d	$a1, $sp, 2008
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp353:                               # EH_LABEL
# %bb.42:
.Ltmp355:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.241)
	addi.d	$a1, $a0, %pc_lo12(.L.str.241)
	addi.d	$a2, $sp, 2040
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp356:                               # EH_LABEL
# %bb.43:
	ori	$a0, $zero, 3160
	add.d	$s0, $sp, $a0
.Ltmp358:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1816
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp359:                               # EH_LABEL
# %bb.44:
.Ltmp361:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.245)
	addi.d	$a2, $a0, %pc_lo12(.L.str.245)
	addi.d	$a0, $sp, 1848
	addi.d	$a1, $sp, 1816
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp362:                               # EH_LABEL
# %bb.45:
.Ltmp364:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1880
	addi.d	$a1, $sp, 1848
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp365:                               # EH_LABEL
# %bb.46:
.Ltmp367:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.246)
	addi.d	$a2, $a0, %pc_lo12(.L.str.246)
	addi.d	$a0, $sp, 1912
	addi.d	$a1, $sp, 1880
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp368:                               # EH_LABEL
# %bb.47:
.Ltmp370:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.244)
	addi.d	$a1, $a0, %pc_lo12(.L.str.244)
	addi.d	$a2, $sp, 1912
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp371:                               # EH_LABEL
# %bb.48:
	ori	$a0, $zero, 3224
	add.d	$s0, $sp, $a0
.Ltmp373:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1688
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp374:                               # EH_LABEL
# %bb.49:
.Ltmp376:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.233)
	addi.d	$a2, $a0, %pc_lo12(.L.str.233)
	addi.d	$a0, $sp, 1720
	addi.d	$a1, $sp, 1688
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp377:                               # EH_LABEL
# %bb.50:
.Ltmp379:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1752
	addi.d	$a1, $sp, 1720
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp380:                               # EH_LABEL
# %bb.51:
.Ltmp382:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.231)
	addi.d	$a2, $a0, %pc_lo12(.L.str.231)
	addi.d	$a0, $sp, 1784
	addi.d	$a1, $sp, 1752
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp383:                               # EH_LABEL
# %bb.52:
.Ltmp385:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.247)
	addi.d	$a1, $a0, %pc_lo12(.L.str.247)
	addi.d	$a2, $sp, 1784
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp386:                               # EH_LABEL
# %bb.53:
	ori	$a0, $zero, 3288
	add.d	$s0, $sp, $a0
.Ltmp388:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1560
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp389:                               # EH_LABEL
# %bb.54:
.Ltmp391:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a2, $a0, %pc_lo12(.L.str.239)
	addi.d	$a0, $sp, 1592
	addi.d	$a1, $sp, 1560
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp392:                               # EH_LABEL
# %bb.55:
.Ltmp394:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1624
	addi.d	$a1, $sp, 1592
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp395:                               # EH_LABEL
# %bb.56:
.Ltmp397:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.240)
	addi.d	$a2, $a0, %pc_lo12(.L.str.240)
	addi.d	$a0, $sp, 1656
	addi.d	$a1, $sp, 1624
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp398:                               # EH_LABEL
# %bb.57:
.Ltmp400:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.238)
	addi.d	$a1, $a0, %pc_lo12(.L.str.238)
	addi.d	$a2, $sp, 1656
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp401:                               # EH_LABEL
# %bb.58:
	ori	$a0, $zero, 3352
	add.d	$s0, $sp, $a0
.Ltmp403:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.230)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1432
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp404:                               # EH_LABEL
# %bb.59:
.Ltmp406:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.239)
	addi.d	$a2, $a0, %pc_lo12(.L.str.239)
	addi.d	$a0, $sp, 1464
	addi.d	$a1, $sp, 1432
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp407:                               # EH_LABEL
# %bb.60:
.Ltmp409:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11)
	addi.d	$a0, $sp, 1496
	addi.d	$a1, $sp, 1464
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp410:                               # EH_LABEL
# %bb.61:
.Ltmp412:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.249)
	addi.d	$a2, $a0, %pc_lo12(.L.str.249)
	addi.d	$a0, $sp, 1528
	addi.d	$a1, $sp, 1496
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp413:                               # EH_LABEL
# %bb.62:
.Ltmp415:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.248)
	addi.d	$a1, $a0, %pc_lo12(.L.str.248)
	addi.d	$a2, $sp, 1528
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp416:                               # EH_LABEL
# %bb.63:
	ori	$a0, $zero, 3416
	add.d	$s0, $sp, $a0
.Ltmp417:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.250)
	addi.d	$a1, $a0, %pc_lo12(.L.str.250)
	pcalau12i	$a0, %pc_hi20(.L.str.251)
	addi.d	$a2, $a0, %pc_lo12(.L.str.251)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_)
	jirl	$ra, $ra, 0
.Ltmp418:                               # EH_LABEL
# %bb.64:
	ori	$a0, $zero, 3480
	add.d	$s0, $sp, $a0
.Ltmp420:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 1304
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp421:                               # EH_LABEL
# %bb.65:
.Ltmp423:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 1336
	addi.d	$a1, $sp, 1304
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp424:                               # EH_LABEL
# %bb.66:
.Ltmp426:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 1368
	addi.d	$a1, $sp, 1336
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp427:                               # EH_LABEL
# %bb.67:
.Ltmp429:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.255)
	addi.d	$a2, $a0, %pc_lo12(.L.str.255)
	addi.d	$a0, $sp, 1400
	addi.d	$a1, $sp, 1368
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp430:                               # EH_LABEL
# %bb.68:
.Ltmp432:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.252)
	addi.d	$a1, $a0, %pc_lo12(.L.str.252)
	addi.d	$a2, $sp, 1400
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp433:                               # EH_LABEL
# %bb.69:
	ori	$a0, $zero, 3544
	add.d	$s0, $sp, $a0
.Ltmp435:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 1176
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp436:                               # EH_LABEL
# %bb.70:
.Ltmp438:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 1208
	addi.d	$a1, $sp, 1176
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp439:                               # EH_LABEL
# %bb.71:
.Ltmp441:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 1240
	addi.d	$a1, $sp, 1208
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp442:                               # EH_LABEL
# %bb.72:
.Ltmp444:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.257)
	addi.d	$a2, $a0, %pc_lo12(.L.str.257)
	addi.d	$a0, $sp, 1272
	addi.d	$a1, $sp, 1240
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp445:                               # EH_LABEL
# %bb.73:
.Ltmp447:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.256)
	addi.d	$a1, $a0, %pc_lo12(.L.str.256)
	addi.d	$a2, $sp, 1272
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp448:                               # EH_LABEL
# %bb.74:
	ori	$a0, $zero, 3608
	add.d	$s0, $sp, $a0
.Ltmp450:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 1048
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp451:                               # EH_LABEL
# %bb.75:
.Ltmp453:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 1080
	addi.d	$a1, $sp, 1048
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp454:                               # EH_LABEL
# %bb.76:
.Ltmp456:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 1112
	addi.d	$a1, $sp, 1080
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp457:                               # EH_LABEL
# %bb.77:
.Ltmp459:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.259)
	addi.d	$a2, $a0, %pc_lo12(.L.str.259)
	addi.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 1112
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp460:                               # EH_LABEL
# %bb.78:
.Ltmp462:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.258)
	addi.d	$a1, $a0, %pc_lo12(.L.str.258)
	addi.d	$a2, $sp, 1144
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp463:                               # EH_LABEL
# %bb.79:
	ori	$a0, $zero, 3672
	add.d	$s0, $sp, $a0
.Ltmp465:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 920
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp466:                               # EH_LABEL
# %bb.80:
.Ltmp468:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 952
	addi.d	$a1, $sp, 920
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp469:                               # EH_LABEL
# %bb.81:
.Ltmp471:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 984
	addi.d	$a1, $sp, 952
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp472:                               # EH_LABEL
# %bb.82:
.Ltmp474:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.261)
	addi.d	$a2, $a0, %pc_lo12(.L.str.261)
	addi.d	$a0, $sp, 1016
	addi.d	$a1, $sp, 984
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp475:                               # EH_LABEL
# %bb.83:
.Ltmp477:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.260)
	addi.d	$a1, $a0, %pc_lo12(.L.str.260)
	addi.d	$a2, $sp, 1016
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp478:                               # EH_LABEL
# %bb.84:
	ori	$a0, $zero, 3736
	add.d	$s0, $sp, $a0
.Ltmp480:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 792
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp481:                               # EH_LABEL
# %bb.85:
.Ltmp483:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 824
	addi.d	$a1, $sp, 792
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp484:                               # EH_LABEL
# %bb.86:
.Ltmp486:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 856
	addi.d	$a1, $sp, 824
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp487:                               # EH_LABEL
# %bb.87:
.Ltmp489:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.263)
	addi.d	$a2, $a0, %pc_lo12(.L.str.263)
	addi.d	$a0, $sp, 888
	addi.d	$a1, $sp, 856
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp490:                               # EH_LABEL
# %bb.88:
.Ltmp492:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.262)
	addi.d	$a1, $a0, %pc_lo12(.L.str.262)
	addi.d	$a2, $sp, 888
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp493:                               # EH_LABEL
# %bb.89:
	ori	$a0, $zero, 3800
	add.d	$s0, $sp, $a0
.Ltmp495:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 600
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp496:                               # EH_LABEL
# %bb.90:
.Ltmp498:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 632
	addi.d	$a1, $sp, 600
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp499:                               # EH_LABEL
# %bb.91:
.Ltmp501:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 664
	addi.d	$a1, $sp, 632
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp502:                               # EH_LABEL
# %bb.92:
.Ltmp504:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.265)
	addi.d	$a2, $a0, %pc_lo12(.L.str.265)
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp505:                               # EH_LABEL
# %bb.93:
.Ltmp507:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 728
	addi.d	$a1, $sp, 696
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp508:                               # EH_LABEL
# %bb.94:
.Ltmp510:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.266)
	addi.d	$a2, $a0, %pc_lo12(.L.str.266)
	addi.d	$a0, $sp, 760
	addi.d	$a1, $sp, 728
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp511:                               # EH_LABEL
# %bb.95:
.Ltmp513:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.264)
	addi.d	$a1, $a0, %pc_lo12(.L.str.264)
	addi.d	$a2, $sp, 760
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp514:                               # EH_LABEL
# %bb.96:
	ori	$a0, $zero, 3864
	add.d	$s0, $sp, $a0
.Ltmp516:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 408
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp517:                               # EH_LABEL
# %bb.97:
.Ltmp519:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 440
	addi.d	$a1, $sp, 408
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp520:                               # EH_LABEL
# %bb.98:
.Ltmp522:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 440
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp523:                               # EH_LABEL
# %bb.99:
.Ltmp525:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.268)
	addi.d	$a2, $a0, %pc_lo12(.L.str.268)
	addi.d	$a0, $sp, 504
	addi.d	$a1, $sp, 472
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp526:                               # EH_LABEL
# %bb.100:
.Ltmp528:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 536
	addi.d	$a1, $sp, 504
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp529:                               # EH_LABEL
# %bb.101:
.Ltmp531:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.269)
	addi.d	$a2, $a0, %pc_lo12(.L.str.269)
	addi.d	$a0, $sp, 568
	addi.d	$a1, $sp, 536
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp532:                               # EH_LABEL
# %bb.102:
.Ltmp534:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.267)
	addi.d	$a1, $a0, %pc_lo12(.L.str.267)
	addi.d	$a2, $sp, 568
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp535:                               # EH_LABEL
# %bb.103:
	ori	$a0, $zero, 3928
	add.d	$s0, $sp, $a0
.Ltmp537:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp538:                               # EH_LABEL
# %bb.104:
.Ltmp540:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 184
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp541:                               # EH_LABEL
# %bb.105:
.Ltmp543:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 216
	addi.d	$a1, $sp, 184
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp544:                               # EH_LABEL
# %bb.106:
.Ltmp546:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.265)
	addi.d	$a2, $a0, %pc_lo12(.L.str.265)
	addi.d	$a0, $sp, 248
	addi.d	$a1, $sp, 216
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp547:                               # EH_LABEL
# %bb.107:
.Ltmp549:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 280
	addi.d	$a1, $sp, 248
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp550:                               # EH_LABEL
# %bb.108:
.Ltmp552:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 312
	addi.d	$a1, $sp, 280
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp553:                               # EH_LABEL
# %bb.109:
.Ltmp555:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 344
	addi.d	$a1, $sp, 312
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp556:                               # EH_LABEL
# %bb.110:
.Ltmp558:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.269)
	addi.d	$a2, $a0, %pc_lo12(.L.str.269)
	addi.d	$a0, $sp, 376
	addi.d	$a1, $sp, 344
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp559:                               # EH_LABEL
# %bb.111:
.Ltmp561:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.270)
	addi.d	$a1, $a0, %pc_lo12(.L.str.270)
	addi.d	$a2, $sp, 376
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp562:                               # EH_LABEL
# %bb.112:
	ori	$a0, $zero, 3992
	add.d	$s0, $sp, $a0
.Ltmp564:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.253)
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 24
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp565:                               # EH_LABEL
# %bb.113:
.Ltmp567:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.254)
	addi.d	$a2, $a0, %pc_lo12(.L.str.254)
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 24
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp568:                               # EH_LABEL
# %bb.114:
.Ltmp570:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a2, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11)
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_)
	jirl	$ra, $ra, 0
.Ltmp571:                               # EH_LABEL
# %bb.115:
.Ltmp573:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.272)
	addi.d	$a2, $a0, %pc_lo12(.L.str.272)
	addi.d	$a0, $sp, 120
	addi.d	$a1, $sp, 88
	pcaddu18i	$ra, %call36(_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_)
	jirl	$ra, $ra, 0
.Ltmp574:                               # EH_LABEL
# %bb.116:
.Ltmp576:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.271)
	addi.d	$a1, $a0, %pc_lo12(.L.str.271)
	addi.d	$a2, $sp, 120
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp577:                               # EH_LABEL
# %bb.117:
	ori	$a0, $zero, 4056
	add.d	$s0, $sp, $a0
.Ltmp578:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.273)
	addi.d	$a1, $a0, %pc_lo12(.L.str.273)
	pcalau12i	$a0, %pc_hi20(.L.str.274)
	addi.d	$a2, $a0, %pc_lo12(.L.str.274)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_)
	jirl	$ra, $ra, 0
.Ltmp579:                               # EH_LABEL
# %bb.118:
.Ltmp581:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	ori	$a1, $zero, 2520
	add.d	$a1, $sp, $a1
	ori	$a2, $zero, 25
	addi.d	$a3, $sp, 23
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_)
	jirl	$ra, $ra, 0
.Ltmp582:                               # EH_LABEL
# %bb.119:
	ori	$a0, $zero, 4056
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3992
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3928
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3864
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3800
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3736
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3672
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3608
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3480
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3416
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3352
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3288
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3224
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3160
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3096
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3032
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2968
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2840
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2776
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2712
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2648
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2584
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2520
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a0, $a1, .LBB27_121
# %bb.120:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_121:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB27_123
# %bb.122:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i405
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_123:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit407
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB27_125
# %bb.124:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i408
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_125:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit410
	ld.d	$a0, $sp, 24
	addi.d	$a1, $sp, 40
	beq	$a0, $a1, .LBB27_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i411
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_127:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit413
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB27_129
# %bb.128:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i414
	ld.d	$a1, $sp, 392
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_129:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit416
	ld.d	$a0, $sp, 344
	addi.d	$a1, $sp, 360
	beq	$a0, $a1, .LBB27_131
# %bb.130:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i417
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_131:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit419
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 328
	beq	$a0, $a1, .LBB27_133
# %bb.132:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i420
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_133:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit422
	ld.d	$a0, $sp, 280
	addi.d	$a1, $sp, 296
	beq	$a0, $a1, .LBB27_135
# %bb.134:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i423
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_135:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit425
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB27_137
# %bb.136:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i426
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_137:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit428
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	beq	$a0, $a1, .LBB27_139
# %bb.138:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i429
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_139:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit431
	ld.d	$a0, $sp, 184
	addi.d	$a1, $sp, 200
	beq	$a0, $a1, .LBB27_141
# %bb.140:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i432
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_141:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit434
	ld.d	$a0, $sp, 152
	addi.d	$a1, $sp, 168
	beq	$a0, $a1, .LBB27_143
# %bb.142:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i435
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_143:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit437
	ld.d	$a0, $sp, 568
	addi.d	$a1, $sp, 584
	beq	$a0, $a1, .LBB27_145
# %bb.144:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i438
	ld.d	$a1, $sp, 584
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_145:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit440
	ld.d	$a0, $sp, 536
	addi.d	$a1, $sp, 552
	beq	$a0, $a1, .LBB27_147
# %bb.146:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i441
	ld.d	$a1, $sp, 552
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_147:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit443
	ld.d	$a0, $sp, 504
	addi.d	$a1, $sp, 520
	beq	$a0, $a1, .LBB27_149
# %bb.148:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i444
	ld.d	$a1, $sp, 520
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_149:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit446
	ld.d	$a0, $sp, 472
	addi.d	$a1, $sp, 488
	beq	$a0, $a1, .LBB27_151
# %bb.150:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i447
	ld.d	$a1, $sp, 488
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_151:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit449
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	beq	$a0, $a1, .LBB27_153
# %bb.152:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i450
	ld.d	$a1, $sp, 456
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_153:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit452
	ld.d	$a0, $sp, 408
	addi.d	$a1, $sp, 424
	beq	$a0, $a1, .LBB27_155
# %bb.154:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i453
	ld.d	$a1, $sp, 424
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_155:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit455
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	beq	$a0, $a1, .LBB27_157
# %bb.156:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i456
	ld.d	$a1, $sp, 776
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_157:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit458
	ld.d	$a0, $sp, 728
	addi.d	$a1, $sp, 744
	beq	$a0, $a1, .LBB27_159
# %bb.158:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i459
	ld.d	$a1, $sp, 744
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_159:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit461
	ld.d	$a0, $sp, 696
	addi.d	$a1, $sp, 712
	beq	$a0, $a1, .LBB27_161
# %bb.160:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i462
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_161:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit464
	ld.d	$a0, $sp, 664
	addi.d	$a1, $sp, 680
	beq	$a0, $a1, .LBB27_163
# %bb.162:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i465
	ld.d	$a1, $sp, 680
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_163:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit467
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB27_165
# %bb.164:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i468
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_165:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit470
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB27_167
# %bb.166:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i471
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_167:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit473
	ld.d	$a0, $sp, 888
	addi.d	$a1, $sp, 904
	beq	$a0, $a1, .LBB27_169
# %bb.168:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i474
	ld.d	$a1, $sp, 904
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_169:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit476
	ld.d	$a0, $sp, 856
	addi.d	$a1, $sp, 872
	beq	$a0, $a1, .LBB27_171
# %bb.170:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i477
	ld.d	$a1, $sp, 872
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_171:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit479
	ld.d	$a0, $sp, 824
	addi.d	$a1, $sp, 840
	beq	$a0, $a1, .LBB27_173
# %bb.172:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i480
	ld.d	$a1, $sp, 840
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_173:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit482
	ld.d	$a0, $sp, 792
	addi.d	$a1, $sp, 808
	beq	$a0, $a1, .LBB27_175
# %bb.174:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i483
	ld.d	$a1, $sp, 808
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_175:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit485
	ld.d	$a0, $sp, 1016
	addi.d	$a1, $sp, 1032
	beq	$a0, $a1, .LBB27_177
# %bb.176:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i486
	ld.d	$a1, $sp, 1032
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_177:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit488
	ld.d	$a0, $sp, 984
	addi.d	$a1, $sp, 1000
	beq	$a0, $a1, .LBB27_179
# %bb.178:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i489
	ld.d	$a1, $sp, 1000
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_179:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit491
	ld.d	$a0, $sp, 952
	addi.d	$a1, $sp, 968
	beq	$a0, $a1, .LBB27_181
# %bb.180:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i492
	ld.d	$a1, $sp, 968
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_181:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit494
	ld.d	$a0, $sp, 920
	addi.d	$a1, $sp, 936
	beq	$a0, $a1, .LBB27_183
# %bb.182:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i495
	ld.d	$a1, $sp, 936
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_183:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit497
	ld.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 1160
	beq	$a0, $a1, .LBB27_185
# %bb.184:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i498
	ld.d	$a1, $sp, 1160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_185:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit500
	ld.d	$a0, $sp, 1112
	addi.d	$a1, $sp, 1128
	beq	$a0, $a1, .LBB27_187
# %bb.186:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i501
	ld.d	$a1, $sp, 1128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_187:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit503
	ld.d	$a0, $sp, 1080
	addi.d	$a1, $sp, 1096
	beq	$a0, $a1, .LBB27_189
# %bb.188:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i504
	ld.d	$a1, $sp, 1096
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_189:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit506
	ld.d	$a0, $sp, 1048
	addi.d	$a1, $sp, 1064
	beq	$a0, $a1, .LBB27_191
# %bb.190:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i507
	ld.d	$a1, $sp, 1064
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_191:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit509
	ld.d	$a0, $sp, 1272
	addi.d	$a1, $sp, 1288
	beq	$a0, $a1, .LBB27_193
# %bb.192:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i510
	ld.d	$a1, $sp, 1288
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_193:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit512
	ld.d	$a0, $sp, 1240
	addi.d	$a1, $sp, 1256
	beq	$a0, $a1, .LBB27_195
# %bb.194:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i513
	ld.d	$a1, $sp, 1256
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_195:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit515
	ld.d	$a0, $sp, 1208
	addi.d	$a1, $sp, 1224
	beq	$a0, $a1, .LBB27_197
# %bb.196:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i516
	ld.d	$a1, $sp, 1224
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_197:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit518
	ld.d	$a0, $sp, 1176
	addi.d	$a1, $sp, 1192
	beq	$a0, $a1, .LBB27_199
# %bb.198:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i519
	ld.d	$a1, $sp, 1192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_199:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit521
	ld.d	$a0, $sp, 1400
	addi.d	$a1, $sp, 1416
	beq	$a0, $a1, .LBB27_201
# %bb.200:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i522
	ld.d	$a1, $sp, 1416
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_201:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit524
	ld.d	$a0, $sp, 1368
	addi.d	$a1, $sp, 1384
	beq	$a0, $a1, .LBB27_203
# %bb.202:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i525
	ld.d	$a1, $sp, 1384
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_203:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit527
	ld.d	$a0, $sp, 1336
	addi.d	$a1, $sp, 1352
	beq	$a0, $a1, .LBB27_205
# %bb.204:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i528
	ld.d	$a1, $sp, 1352
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_205:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit530
	ld.d	$a0, $sp, 1304
	addi.d	$a1, $sp, 1320
	beq	$a0, $a1, .LBB27_207
# %bb.206:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i531
	ld.d	$a1, $sp, 1320
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_207:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit533
	ld.d	$a0, $sp, 1528
	addi.d	$a1, $sp, 1544
	beq	$a0, $a1, .LBB27_209
# %bb.208:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i534
	ld.d	$a1, $sp, 1544
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_209:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit536
	ld.d	$a0, $sp, 1496
	addi.d	$a1, $sp, 1512
	beq	$a0, $a1, .LBB27_211
# %bb.210:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i537
	ld.d	$a1, $sp, 1512
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_211:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit539
	ld.d	$a0, $sp, 1464
	addi.d	$a1, $sp, 1480
	beq	$a0, $a1, .LBB27_213
# %bb.212:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i540
	ld.d	$a1, $sp, 1480
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_213:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit542
	ld.d	$a0, $sp, 1432
	addi.d	$a1, $sp, 1448
	beq	$a0, $a1, .LBB27_215
# %bb.214:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i543
	ld.d	$a1, $sp, 1448
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_215:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit545
	ld.d	$a0, $sp, 1656
	addi.d	$a1, $sp, 1672
	beq	$a0, $a1, .LBB27_217
# %bb.216:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i546
	ld.d	$a1, $sp, 1672
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_217:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit548
	ld.d	$a0, $sp, 1624
	addi.d	$a1, $sp, 1640
	beq	$a0, $a1, .LBB27_219
# %bb.218:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i549
	ld.d	$a1, $sp, 1640
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_219:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit551
	ld.d	$a0, $sp, 1592
	addi.d	$a1, $sp, 1608
	beq	$a0, $a1, .LBB27_221
# %bb.220:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i552
	ld.d	$a1, $sp, 1608
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_221:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit554
	ld.d	$a0, $sp, 1560
	addi.d	$a1, $sp, 1576
	beq	$a0, $a1, .LBB27_223
# %bb.222:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i555
	ld.d	$a1, $sp, 1576
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_223:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit557
	ld.d	$a0, $sp, 1784
	addi.d	$a1, $sp, 1800
	beq	$a0, $a1, .LBB27_225
# %bb.224:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i558
	ld.d	$a1, $sp, 1800
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_225:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit560
	ld.d	$a0, $sp, 1752
	addi.d	$a1, $sp, 1768
	beq	$a0, $a1, .LBB27_227
# %bb.226:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i561
	ld.d	$a1, $sp, 1768
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_227:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit563
	ld.d	$a0, $sp, 1720
	addi.d	$a1, $sp, 1736
	beq	$a0, $a1, .LBB27_229
# %bb.228:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i564
	ld.d	$a1, $sp, 1736
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_229:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit566
	ld.d	$a0, $sp, 1688
	addi.d	$a1, $sp, 1704
	beq	$a0, $a1, .LBB27_231
# %bb.230:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i567
	ld.d	$a1, $sp, 1704
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_231:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit569
	ld.d	$a0, $sp, 1912
	addi.d	$a1, $sp, 1928
	beq	$a0, $a1, .LBB27_233
# %bb.232:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i570
	ld.d	$a1, $sp, 1928
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_233:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit572
	ld.d	$a0, $sp, 1880
	addi.d	$a1, $sp, 1896
	beq	$a0, $a1, .LBB27_235
# %bb.234:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i573
	ld.d	$a1, $sp, 1896
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_235:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit575
	ld.d	$a0, $sp, 1848
	addi.d	$a1, $sp, 1864
	beq	$a0, $a1, .LBB27_237
# %bb.236:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i576
	ld.d	$a1, $sp, 1864
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_237:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit578
	ld.d	$a0, $sp, 1816
	addi.d	$a1, $sp, 1832
	beq	$a0, $a1, .LBB27_239
# %bb.238:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i579
	ld.d	$a1, $sp, 1832
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_239:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit581
	ld.d	$a0, $sp, 2040
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_241
# %bb.240:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i582
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_241:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit584
	ld.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 2024
	beq	$a0, $a1, .LBB27_243
# %bb.242:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i585
	ld.d	$a1, $sp, 2024
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_243:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit587
	ld.d	$a0, $sp, 1976
	addi.d	$a1, $sp, 1992
	beq	$a0, $a1, .LBB27_245
# %bb.244:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i588
	ld.d	$a1, $sp, 1992
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_245:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit590
	ld.d	$a0, $sp, 1944
	addi.d	$a1, $sp, 1960
	beq	$a0, $a1, .LBB27_247
# %bb.246:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i591
	ld.d	$a1, $sp, 1960
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_247:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit593
	ori	$a0, $zero, 2168
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2184
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_249
# %bb.248:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i594
	ori	$a1, $zero, 2184
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_249:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit596
	ori	$a0, $zero, 2136
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2152
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_251
# %bb.250:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i597
	ori	$a1, $zero, 2152
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_251:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit599
	ori	$a0, $zero, 2104
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2120
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_253
# %bb.252:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i600
	ori	$a1, $zero, 2120
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_253:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit602
	ori	$a0, $zero, 2072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2088
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_255
# %bb.254:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i603
	ori	$a1, $zero, 2088
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_255:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit605
	ori	$a0, $zero, 2296
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2312
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_257
# %bb.256:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i606
	ori	$a1, $zero, 2312
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_257:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit608
	ori	$a0, $zero, 2264
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2280
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_259
# %bb.258:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i609
	ori	$a1, $zero, 2280
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_259:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit611
	ori	$a0, $zero, 2232
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2248
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_261
# %bb.260:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i612
	ori	$a1, $zero, 2248
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_261:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit614
	ori	$a0, $zero, 2200
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2216
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_263
# %bb.262:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i615
	ori	$a1, $zero, 2216
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_263:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit617
	ori	$a0, $zero, 2424
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2440
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_265
# %bb.264:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i618
	ori	$a1, $zero, 2440
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_265:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit620
	ori	$a0, $zero, 2392
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2408
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_267
# %bb.266:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i621
	ori	$a1, $zero, 2408
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_267:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit623
	ori	$a0, $zero, 2360
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2376
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_269
# %bb.268:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i624
	ori	$a1, $zero, 2376
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_269:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit626
	ori	$a0, $zero, 2328
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_271
# %bb.270:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i627
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_271:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit629
	ori	$a0, $zero, 2488
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2504
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_273
# %bb.272:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i630
	ori	$a1, $zero, 2504
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_273:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit632
	ori	$a0, $zero, 2456
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2472
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_275
# %bb.274:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i633
	ori	$a1, $zero, 2472
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_275:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit635
	pcalau12i	$a0, %pc_hi20(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev)
	pcalau12i	$a1, %pc_hi20(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	addi.d	$a1, $a1, %pc_lo12(_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	pcalau12i	$a2, %pc_hi20(__dso_handle)
	addi.d	$a2, $a2, %pc_lo12(__dso_handle)
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB27_4
.LBB27_276:                             # %.loopexit870.loopexit
.Ltmp583:                               # EH_LABEL
	move	$s1, $a0
	ori	$a0, $zero, 4056
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3992
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3928
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3864
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3800
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3736
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3672
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3608
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3544
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3480
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3416
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3352
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3288
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3224
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3160
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3096
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3032
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2968
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2904
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2840
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2776
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2712
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2648
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2584
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2520
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ori	$s2, $zero, 1
	b	.LBB27_392
.LBB27_277:
.Ltmp575:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB27_394
	b	.LBB27_491
.LBB27_278:
.Ltmp572:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB27_395
	b	.LBB27_492
.LBB27_279:
.Ltmp569:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 24
	addi.d	$a1, $sp, 40
	beq	$a0, $a1, .LBB27_396
	b	.LBB27_493
.LBB27_280:
.Ltmp566:                               # EH_LABEL
	b	.LBB27_282
.LBB27_281:
.Ltmp563:                               # EH_LABEL
.LBB27_282:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB27_397
	b	.LBB27_494
.LBB27_283:
.Ltmp560:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 344
	addi.d	$a1, $sp, 360
	beq	$a0, $a1, .LBB27_398
	b	.LBB27_495
.LBB27_284:
.Ltmp557:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 328
	beq	$a0, $a1, .LBB27_399
	b	.LBB27_496
.LBB27_285:
.Ltmp554:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 280
	addi.d	$a1, $sp, 296
	beq	$a0, $a1, .LBB27_400
	b	.LBB27_497
.LBB27_286:
.Ltmp551:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB27_401
	b	.LBB27_498
.LBB27_287:
.Ltmp548:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	beq	$a0, $a1, .LBB27_402
	b	.LBB27_499
.LBB27_288:
.Ltmp545:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 184
	addi.d	$a1, $sp, 200
	beq	$a0, $a1, .LBB27_403
	b	.LBB27_500
.LBB27_289:
.Ltmp542:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 152
	addi.d	$a1, $sp, 168
	beq	$a0, $a1, .LBB27_404
	b	.LBB27_501
.LBB27_290:
.Ltmp539:                               # EH_LABEL
	b	.LBB27_292
.LBB27_291:
.Ltmp536:                               # EH_LABEL
.LBB27_292:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 568
	addi.d	$a1, $sp, 584
	beq	$a0, $a1, .LBB27_405
	b	.LBB27_502
.LBB27_293:
.Ltmp533:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 536
	addi.d	$a1, $sp, 552
	beq	$a0, $a1, .LBB27_406
	b	.LBB27_503
.LBB27_294:
.Ltmp530:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 504
	addi.d	$a1, $sp, 520
	beq	$a0, $a1, .LBB27_407
	b	.LBB27_504
.LBB27_295:
.Ltmp527:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 472
	addi.d	$a1, $sp, 488
	beq	$a0, $a1, .LBB27_408
	b	.LBB27_505
.LBB27_296:
.Ltmp524:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	beq	$a0, $a1, .LBB27_409
	b	.LBB27_506
.LBB27_297:
.Ltmp521:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 408
	addi.d	$a1, $sp, 424
	beq	$a0, $a1, .LBB27_410
	b	.LBB27_507
.LBB27_298:
.Ltmp518:                               # EH_LABEL
	b	.LBB27_300
.LBB27_299:
.Ltmp515:                               # EH_LABEL
.LBB27_300:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	beq	$a0, $a1, .LBB27_411
	b	.LBB27_508
.LBB27_301:
.Ltmp512:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 728
	addi.d	$a1, $sp, 744
	beq	$a0, $a1, .LBB27_412
	b	.LBB27_509
.LBB27_302:
.Ltmp509:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 696
	addi.d	$a1, $sp, 712
	beq	$a0, $a1, .LBB27_413
	b	.LBB27_510
.LBB27_303:
.Ltmp506:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 664
	addi.d	$a1, $sp, 680
	beq	$a0, $a1, .LBB27_414
	b	.LBB27_511
.LBB27_304:
.Ltmp503:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB27_415
	b	.LBB27_512
.LBB27_305:
.Ltmp500:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB27_416
	b	.LBB27_513
.LBB27_306:
.Ltmp497:                               # EH_LABEL
	b	.LBB27_308
.LBB27_307:
.Ltmp494:                               # EH_LABEL
.LBB27_308:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 888
	addi.d	$a1, $sp, 904
	beq	$a0, $a1, .LBB27_417
	b	.LBB27_514
.LBB27_309:
.Ltmp491:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 856
	addi.d	$a1, $sp, 872
	beq	$a0, $a1, .LBB27_418
	b	.LBB27_515
.LBB27_310:
.Ltmp488:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 824
	addi.d	$a1, $sp, 840
	beq	$a0, $a1, .LBB27_419
	b	.LBB27_516
.LBB27_311:
.Ltmp485:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 792
	addi.d	$a1, $sp, 808
	beq	$a0, $a1, .LBB27_420
	b	.LBB27_517
.LBB27_312:
.Ltmp482:                               # EH_LABEL
	b	.LBB27_314
.LBB27_313:
.Ltmp479:                               # EH_LABEL
.LBB27_314:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1016
	addi.d	$a1, $sp, 1032
	beq	$a0, $a1, .LBB27_421
	b	.LBB27_518
.LBB27_315:
.Ltmp476:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 984
	addi.d	$a1, $sp, 1000
	beq	$a0, $a1, .LBB27_422
	b	.LBB27_519
.LBB27_316:
.Ltmp473:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 952
	addi.d	$a1, $sp, 968
	beq	$a0, $a1, .LBB27_423
	b	.LBB27_520
.LBB27_317:
.Ltmp470:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 920
	addi.d	$a1, $sp, 936
	beq	$a0, $a1, .LBB27_424
	b	.LBB27_521
.LBB27_318:
.Ltmp467:                               # EH_LABEL
	b	.LBB27_320
.LBB27_319:
.Ltmp464:                               # EH_LABEL
.LBB27_320:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 1160
	beq	$a0, $a1, .LBB27_425
	b	.LBB27_522
.LBB27_321:
.Ltmp461:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1112
	addi.d	$a1, $sp, 1128
	beq	$a0, $a1, .LBB27_426
	b	.LBB27_523
.LBB27_322:
.Ltmp458:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1080
	addi.d	$a1, $sp, 1096
	beq	$a0, $a1, .LBB27_427
	b	.LBB27_524
.LBB27_323:
.Ltmp455:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1048
	addi.d	$a1, $sp, 1064
	beq	$a0, $a1, .LBB27_428
	b	.LBB27_525
.LBB27_324:
.Ltmp452:                               # EH_LABEL
	b	.LBB27_326
.LBB27_325:
.Ltmp449:                               # EH_LABEL
.LBB27_326:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1272
	addi.d	$a1, $sp, 1288
	beq	$a0, $a1, .LBB27_429
	b	.LBB27_526
.LBB27_327:
.Ltmp446:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1240
	addi.d	$a1, $sp, 1256
	beq	$a0, $a1, .LBB27_430
	b	.LBB27_527
.LBB27_328:
.Ltmp443:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1208
	addi.d	$a1, $sp, 1224
	beq	$a0, $a1, .LBB27_431
	b	.LBB27_528
.LBB27_329:
.Ltmp440:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1176
	addi.d	$a1, $sp, 1192
	beq	$a0, $a1, .LBB27_432
	b	.LBB27_529
.LBB27_330:
.Ltmp437:                               # EH_LABEL
	b	.LBB27_332
.LBB27_331:
.Ltmp434:                               # EH_LABEL
.LBB27_332:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1400
	addi.d	$a1, $sp, 1416
	beq	$a0, $a1, .LBB27_433
	b	.LBB27_530
.LBB27_333:
.Ltmp431:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1368
	addi.d	$a1, $sp, 1384
	beq	$a0, $a1, .LBB27_434
	b	.LBB27_531
.LBB27_334:
.Ltmp428:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1336
	addi.d	$a1, $sp, 1352
	beq	$a0, $a1, .LBB27_435
	b	.LBB27_532
.LBB27_335:
.Ltmp425:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1304
	addi.d	$a1, $sp, 1320
	beq	$a0, $a1, .LBB27_436
	b	.LBB27_533
.LBB27_336:
.Ltmp422:                               # EH_LABEL
	b	.LBB27_554
.LBB27_337:
.Ltmp414:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1496
	addi.d	$a1, $sp, 1512
	beq	$a0, $a1, .LBB27_438
	b	.LBB27_535
.LBB27_338:
.Ltmp411:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1464
	addi.d	$a1, $sp, 1480
	beq	$a0, $a1, .LBB27_439
	b	.LBB27_536
.LBB27_339:
.Ltmp408:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1432
	addi.d	$a1, $sp, 1448
	beq	$a0, $a1, .LBB27_440
	b	.LBB27_537
.LBB27_340:
.Ltmp405:                               # EH_LABEL
	b	.LBB27_342
.LBB27_341:
.Ltmp402:                               # EH_LABEL
.LBB27_342:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1656
	addi.d	$a1, $sp, 1672
	beq	$a0, $a1, .LBB27_441
	b	.LBB27_538
.LBB27_343:
.Ltmp399:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1624
	addi.d	$a1, $sp, 1640
	beq	$a0, $a1, .LBB27_442
	b	.LBB27_539
.LBB27_344:
.Ltmp396:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1592
	addi.d	$a1, $sp, 1608
	beq	$a0, $a1, .LBB27_443
	b	.LBB27_540
.LBB27_345:
.Ltmp393:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1560
	addi.d	$a1, $sp, 1576
	beq	$a0, $a1, .LBB27_444
	b	.LBB27_541
.LBB27_346:
.Ltmp390:                               # EH_LABEL
	b	.LBB27_348
.LBB27_347:
.Ltmp387:                               # EH_LABEL
.LBB27_348:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1784
	addi.d	$a1, $sp, 1800
	beq	$a0, $a1, .LBB27_445
	b	.LBB27_542
.LBB27_349:
.Ltmp384:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1752
	addi.d	$a1, $sp, 1768
	beq	$a0, $a1, .LBB27_446
	b	.LBB27_543
.LBB27_350:
.Ltmp381:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1720
	addi.d	$a1, $sp, 1736
	beq	$a0, $a1, .LBB27_447
	b	.LBB27_544
.LBB27_351:
.Ltmp378:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1688
	addi.d	$a1, $sp, 1704
	beq	$a0, $a1, .LBB27_448
	b	.LBB27_545
.LBB27_352:
.Ltmp375:                               # EH_LABEL
	b	.LBB27_354
.LBB27_353:
.Ltmp372:                               # EH_LABEL
.LBB27_354:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1912
	addi.d	$a1, $sp, 1928
	beq	$a0, $a1, .LBB27_449
	b	.LBB27_546
.LBB27_355:
.Ltmp369:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1880
	addi.d	$a1, $sp, 1896
	beq	$a0, $a1, .LBB27_450
	b	.LBB27_547
.LBB27_356:
.Ltmp366:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1848
	addi.d	$a1, $sp, 1864
	beq	$a0, $a1, .LBB27_451
	b	.LBB27_548
.LBB27_357:
.Ltmp363:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1816
	addi.d	$a1, $sp, 1832
	beq	$a0, $a1, .LBB27_452
	b	.LBB27_549
.LBB27_358:
.Ltmp360:                               # EH_LABEL
	b	.LBB27_360
.LBB27_359:
.Ltmp357:                               # EH_LABEL
.LBB27_360:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 2040
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_453
	b	.LBB27_550
.LBB27_361:
.Ltmp354:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 2024
	beq	$a0, $a1, .LBB27_454
	b	.LBB27_551
.LBB27_362:
.Ltmp351:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1976
	addi.d	$a1, $sp, 1992
	beq	$a0, $a1, .LBB27_455
	b	.LBB27_552
.LBB27_363:
.Ltmp348:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1944
	addi.d	$a1, $sp, 1960
	bne	$a0, $a1, .LBB27_456
	b	.LBB27_457
.LBB27_364:
.Ltmp345:                               # EH_LABEL
	b	.LBB27_366
.LBB27_365:
.Ltmp342:                               # EH_LABEL
.LBB27_366:
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_457
.LBB27_367:
.Ltmp339:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_459
.LBB27_368:
.Ltmp336:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_461
.LBB27_369:
.Ltmp333:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_463
.LBB27_370:
.Ltmp330:                               # EH_LABEL
	b	.LBB27_372
.LBB27_371:
.Ltmp327:                               # EH_LABEL
.LBB27_372:
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_465
.LBB27_373:
.Ltmp324:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_467
.LBB27_374:
.Ltmp321:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_469
.LBB27_375:
.Ltmp318:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_471
.LBB27_376:
.Ltmp315:                               # EH_LABEL
	b	.LBB27_378
.LBB27_377:
.Ltmp312:                               # EH_LABEL
.LBB27_378:
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_473
.LBB27_379:
.Ltmp309:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_475
.LBB27_380:
.Ltmp306:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_477
.LBB27_381:
.Ltmp303:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_479
.LBB27_382:
.Ltmp300:                               # EH_LABEL
	b	.LBB27_384
.LBB27_383:
.Ltmp297:                               # EH_LABEL
.LBB27_384:
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_481
.LBB27_385:
.Ltmp294:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
	b	.LBB27_483
.LBB27_386:
.Ltmp291:                               # EH_LABEL
	b	.LBB27_556
.LBB27_387:
.Ltmp277:                               # EH_LABEL
	b	.LBB27_390
.LBB27_388:
.Ltmp274:                               # EH_LABEL
	b	.LBB27_390
.LBB27_389:
.Ltmp271:                               # EH_LABEL
.LBB27_390:
	move	$s1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_guard_abort)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB27_391:
.Ltmp580:                               # EH_LABEL
	move	$s1, $a0
	move	$s2, $zero
.LBB27_392:                             # %.loopexit870
	ld.d	$a0, $sp, 120
	addi.d	$a1, $sp, 136
	bne	$a0, $a1, .LBB27_490
# %bb.393:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit638
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	bne	$a0, $a1, .LBB27_491
.LBB27_394:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit641
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	bne	$a0, $a1, .LBB27_492
.LBB27_395:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit644
	ld.d	$a0, $sp, 24
	addi.d	$a1, $sp, 40
	bne	$a0, $a1, .LBB27_493
.LBB27_396:
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	bne	$a0, $a1, .LBB27_494
.LBB27_397:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit650
	ld.d	$a0, $sp, 344
	addi.d	$a1, $sp, 360
	bne	$a0, $a1, .LBB27_495
.LBB27_398:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit653
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 328
	bne	$a0, $a1, .LBB27_496
.LBB27_399:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit656
	ld.d	$a0, $sp, 280
	addi.d	$a1, $sp, 296
	bne	$a0, $a1, .LBB27_497
.LBB27_400:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit659
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	bne	$a0, $a1, .LBB27_498
.LBB27_401:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit662
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	bne	$a0, $a1, .LBB27_499
.LBB27_402:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit665
	ld.d	$a0, $sp, 184
	addi.d	$a1, $sp, 200
	bne	$a0, $a1, .LBB27_500
.LBB27_403:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit668
	ld.d	$a0, $sp, 152
	addi.d	$a1, $sp, 168
	bne	$a0, $a1, .LBB27_501
.LBB27_404:
	ld.d	$a0, $sp, 568
	addi.d	$a1, $sp, 584
	bne	$a0, $a1, .LBB27_502
.LBB27_405:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit674
	ld.d	$a0, $sp, 536
	addi.d	$a1, $sp, 552
	bne	$a0, $a1, .LBB27_503
.LBB27_406:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit677
	ld.d	$a0, $sp, 504
	addi.d	$a1, $sp, 520
	bne	$a0, $a1, .LBB27_504
.LBB27_407:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit680
	ld.d	$a0, $sp, 472
	addi.d	$a1, $sp, 488
	bne	$a0, $a1, .LBB27_505
.LBB27_408:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit683
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	bne	$a0, $a1, .LBB27_506
.LBB27_409:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit686
	ld.d	$a0, $sp, 408
	addi.d	$a1, $sp, 424
	bne	$a0, $a1, .LBB27_507
.LBB27_410:
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	bne	$a0, $a1, .LBB27_508
.LBB27_411:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit692
	ld.d	$a0, $sp, 728
	addi.d	$a1, $sp, 744
	bne	$a0, $a1, .LBB27_509
.LBB27_412:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit695
	ld.d	$a0, $sp, 696
	addi.d	$a1, $sp, 712
	bne	$a0, $a1, .LBB27_510
.LBB27_413:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit698
	ld.d	$a0, $sp, 664
	addi.d	$a1, $sp, 680
	bne	$a0, $a1, .LBB27_511
.LBB27_414:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit701
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	bne	$a0, $a1, .LBB27_512
.LBB27_415:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit704
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	bne	$a0, $a1, .LBB27_513
.LBB27_416:
	ld.d	$a0, $sp, 888
	addi.d	$a1, $sp, 904
	bne	$a0, $a1, .LBB27_514
.LBB27_417:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit710
	ld.d	$a0, $sp, 856
	addi.d	$a1, $sp, 872
	bne	$a0, $a1, .LBB27_515
.LBB27_418:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit713
	ld.d	$a0, $sp, 824
	addi.d	$a1, $sp, 840
	bne	$a0, $a1, .LBB27_516
.LBB27_419:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit716
	ld.d	$a0, $sp, 792
	addi.d	$a1, $sp, 808
	bne	$a0, $a1, .LBB27_517
.LBB27_420:
	ld.d	$a0, $sp, 1016
	addi.d	$a1, $sp, 1032
	bne	$a0, $a1, .LBB27_518
.LBB27_421:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit722
	ld.d	$a0, $sp, 984
	addi.d	$a1, $sp, 1000
	bne	$a0, $a1, .LBB27_519
.LBB27_422:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit725
	ld.d	$a0, $sp, 952
	addi.d	$a1, $sp, 968
	bne	$a0, $a1, .LBB27_520
.LBB27_423:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit728
	ld.d	$a0, $sp, 920
	addi.d	$a1, $sp, 936
	bne	$a0, $a1, .LBB27_521
.LBB27_424:
	ld.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 1160
	bne	$a0, $a1, .LBB27_522
.LBB27_425:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit734
	ld.d	$a0, $sp, 1112
	addi.d	$a1, $sp, 1128
	bne	$a0, $a1, .LBB27_523
.LBB27_426:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit737
	ld.d	$a0, $sp, 1080
	addi.d	$a1, $sp, 1096
	bne	$a0, $a1, .LBB27_524
.LBB27_427:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit740
	ld.d	$a0, $sp, 1048
	addi.d	$a1, $sp, 1064
	bne	$a0, $a1, .LBB27_525
.LBB27_428:
	ld.d	$a0, $sp, 1272
	addi.d	$a1, $sp, 1288
	bne	$a0, $a1, .LBB27_526
.LBB27_429:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit746
	ld.d	$a0, $sp, 1240
	addi.d	$a1, $sp, 1256
	bne	$a0, $a1, .LBB27_527
.LBB27_430:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit749
	ld.d	$a0, $sp, 1208
	addi.d	$a1, $sp, 1224
	bne	$a0, $a1, .LBB27_528
.LBB27_431:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit752
	ld.d	$a0, $sp, 1176
	addi.d	$a1, $sp, 1192
	bne	$a0, $a1, .LBB27_529
.LBB27_432:
	ld.d	$a0, $sp, 1400
	addi.d	$a1, $sp, 1416
	bne	$a0, $a1, .LBB27_530
.LBB27_433:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit758
	ld.d	$a0, $sp, 1368
	addi.d	$a1, $sp, 1384
	bne	$a0, $a1, .LBB27_531
.LBB27_434:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit761
	ld.d	$a0, $sp, 1336
	addi.d	$a1, $sp, 1352
	bne	$a0, $a1, .LBB27_532
.LBB27_435:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit764
	ld.d	$a0, $sp, 1304
	addi.d	$a1, $sp, 1320
	bne	$a0, $a1, .LBB27_533
.LBB27_436:
	ld.d	$a0, $sp, 1528
	addi.d	$a1, $sp, 1544
	bne	$a0, $a1, .LBB27_534
.LBB27_437:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit770
	ld.d	$a0, $sp, 1496
	addi.d	$a1, $sp, 1512
	bne	$a0, $a1, .LBB27_535
.LBB27_438:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit773
	ld.d	$a0, $sp, 1464
	addi.d	$a1, $sp, 1480
	bne	$a0, $a1, .LBB27_536
.LBB27_439:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit776
	ld.d	$a0, $sp, 1432
	addi.d	$a1, $sp, 1448
	bne	$a0, $a1, .LBB27_537
.LBB27_440:
	ld.d	$a0, $sp, 1656
	addi.d	$a1, $sp, 1672
	bne	$a0, $a1, .LBB27_538
.LBB27_441:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit782
	ld.d	$a0, $sp, 1624
	addi.d	$a1, $sp, 1640
	bne	$a0, $a1, .LBB27_539
.LBB27_442:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit785
	ld.d	$a0, $sp, 1592
	addi.d	$a1, $sp, 1608
	bne	$a0, $a1, .LBB27_540
.LBB27_443:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit788
	ld.d	$a0, $sp, 1560
	addi.d	$a1, $sp, 1576
	bne	$a0, $a1, .LBB27_541
.LBB27_444:
	ld.d	$a0, $sp, 1784
	addi.d	$a1, $sp, 1800
	bne	$a0, $a1, .LBB27_542
.LBB27_445:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit794
	ld.d	$a0, $sp, 1752
	addi.d	$a1, $sp, 1768
	bne	$a0, $a1, .LBB27_543
.LBB27_446:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit797
	ld.d	$a0, $sp, 1720
	addi.d	$a1, $sp, 1736
	bne	$a0, $a1, .LBB27_544
.LBB27_447:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit800
	ld.d	$a0, $sp, 1688
	addi.d	$a1, $sp, 1704
	bne	$a0, $a1, .LBB27_545
.LBB27_448:
	ld.d	$a0, $sp, 1912
	addi.d	$a1, $sp, 1928
	bne	$a0, $a1, .LBB27_546
.LBB27_449:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit806
	ld.d	$a0, $sp, 1880
	addi.d	$a1, $sp, 1896
	bne	$a0, $a1, .LBB27_547
.LBB27_450:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit809
	ld.d	$a0, $sp, 1848
	addi.d	$a1, $sp, 1864
	bne	$a0, $a1, .LBB27_548
.LBB27_451:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit812
	ld.d	$a0, $sp, 1816
	addi.d	$a1, $sp, 1832
	bne	$a0, $a1, .LBB27_549
.LBB27_452:
	ld.d	$a0, $sp, 2040
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	bne	$a0, $a1, .LBB27_550
.LBB27_453:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit818
	ld.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 2024
	bne	$a0, $a1, .LBB27_551
.LBB27_454:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit821
	ld.d	$a0, $sp, 1976
	addi.d	$a1, $sp, 1992
	bne	$a0, $a1, .LBB27_552
.LBB27_455:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit824
	ld.d	$a0, $sp, 1944
	addi.d	$a1, $sp, 1960
	beq	$a0, $a1, .LBB27_457
.LBB27_456:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i825
	ld.d	$a1, $sp, 1960
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_457:
	ori	$a0, $zero, 2168
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2184
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_459
# %bb.458:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i828
	ori	$a1, $zero, 2184
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_459:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit830
	ori	$a0, $zero, 2136
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2152
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_461
# %bb.460:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i831
	ori	$a1, $zero, 2152
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_461:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit833
	ori	$a0, $zero, 2104
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2120
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_463
# %bb.462:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i834
	ori	$a1, $zero, 2120
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_463:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit836
	ori	$a0, $zero, 2072
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2088
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_465
# %bb.464:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i837
	ori	$a1, $zero, 2088
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_465:
	ori	$a0, $zero, 2296
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2312
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_467
# %bb.466:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i840
	ori	$a1, $zero, 2312
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_467:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit842
	ori	$a0, $zero, 2264
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2280
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_469
# %bb.468:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i843
	ori	$a1, $zero, 2280
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_469:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit845
	ori	$a0, $zero, 2232
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2248
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_471
# %bb.470:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i846
	ori	$a1, $zero, 2248
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_471:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit848
	ori	$a0, $zero, 2200
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2216
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_473
# %bb.472:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i849
	ori	$a1, $zero, 2216
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_473:
	ori	$a0, $zero, 2424
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2440
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_475
# %bb.474:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i852
	ori	$a1, $zero, 2440
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_475:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit854
	ori	$a0, $zero, 2392
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2408
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_477
# %bb.476:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i855
	ori	$a1, $zero, 2408
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_477:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit857
	ori	$a0, $zero, 2360
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2376
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_479
# %bb.478:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i858
	ori	$a1, $zero, 2376
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_479:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit860
	ori	$a0, $zero, 2328
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_481
# %bb.480:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i861
	ori	$a1, $zero, 2344
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_481:
	ori	$a0, $zero, 2488
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2504
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_483
# %bb.482:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i864
	ori	$a1, $zero, 2504
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_483:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit866
	ori	$a0, $zero, 2456
	add.d	$a0, $sp, $a0
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2472
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_485
# %bb.484:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i867
	ori	$a1, $zero, 2472
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_485:
	bnez	$s2, .LBB27_489
.LBB27_486:
	ori	$a0, $zero, 2520
	add.d	$a0, $sp, $a0
	xor	$a0, $a0, $s0
	sltui	$a0, $a0, 1
	bnez	$a0, .LBB27_489
# %bb.487:                              # %.preheader.preheader
	ori	$a0, $zero, 2520
	add.d	$s2, $sp, $a0
.LBB27_488:                             # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$s0, $s0, -64
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	bne	$s0, $s2, .LBB27_488
.LBB27_489:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_guard_abort)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB27_490:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i636
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB27_394
.LBB27_491:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i639
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB27_395
.LBB27_492:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i642
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 24
	addi.d	$a1, $sp, 40
	beq	$a0, $a1, .LBB27_396
.LBB27_493:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i645
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB27_397
.LBB27_494:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i648
	ld.d	$a1, $sp, 392
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 344
	addi.d	$a1, $sp, 360
	beq	$a0, $a1, .LBB27_398
.LBB27_495:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i651
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 328
	beq	$a0, $a1, .LBB27_399
.LBB27_496:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i654
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 280
	addi.d	$a1, $sp, 296
	beq	$a0, $a1, .LBB27_400
.LBB27_497:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i657
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB27_401
.LBB27_498:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i660
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	beq	$a0, $a1, .LBB27_402
.LBB27_499:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i663
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 184
	addi.d	$a1, $sp, 200
	beq	$a0, $a1, .LBB27_403
.LBB27_500:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i666
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 152
	addi.d	$a1, $sp, 168
	beq	$a0, $a1, .LBB27_404
.LBB27_501:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i669
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 568
	addi.d	$a1, $sp, 584
	beq	$a0, $a1, .LBB27_405
.LBB27_502:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i672
	ld.d	$a1, $sp, 584
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 536
	addi.d	$a1, $sp, 552
	beq	$a0, $a1, .LBB27_406
.LBB27_503:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i675
	ld.d	$a1, $sp, 552
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 504
	addi.d	$a1, $sp, 520
	beq	$a0, $a1, .LBB27_407
.LBB27_504:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i678
	ld.d	$a1, $sp, 520
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 472
	addi.d	$a1, $sp, 488
	beq	$a0, $a1, .LBB27_408
.LBB27_505:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i681
	ld.d	$a1, $sp, 488
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	beq	$a0, $a1, .LBB27_409
.LBB27_506:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i684
	ld.d	$a1, $sp, 456
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 408
	addi.d	$a1, $sp, 424
	beq	$a0, $a1, .LBB27_410
.LBB27_507:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i687
	ld.d	$a1, $sp, 424
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 760
	addi.d	$a1, $sp, 776
	beq	$a0, $a1, .LBB27_411
.LBB27_508:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i690
	ld.d	$a1, $sp, 776
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 728
	addi.d	$a1, $sp, 744
	beq	$a0, $a1, .LBB27_412
.LBB27_509:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i693
	ld.d	$a1, $sp, 744
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 696
	addi.d	$a1, $sp, 712
	beq	$a0, $a1, .LBB27_413
.LBB27_510:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i696
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 664
	addi.d	$a1, $sp, 680
	beq	$a0, $a1, .LBB27_414
.LBB27_511:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i699
	ld.d	$a1, $sp, 680
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB27_415
.LBB27_512:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i702
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB27_416
.LBB27_513:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i705
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 888
	addi.d	$a1, $sp, 904
	beq	$a0, $a1, .LBB27_417
.LBB27_514:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i708
	ld.d	$a1, $sp, 904
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 856
	addi.d	$a1, $sp, 872
	beq	$a0, $a1, .LBB27_418
.LBB27_515:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i711
	ld.d	$a1, $sp, 872
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 824
	addi.d	$a1, $sp, 840
	beq	$a0, $a1, .LBB27_419
.LBB27_516:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i714
	ld.d	$a1, $sp, 840
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 792
	addi.d	$a1, $sp, 808
	beq	$a0, $a1, .LBB27_420
.LBB27_517:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i717
	ld.d	$a1, $sp, 808
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1016
	addi.d	$a1, $sp, 1032
	beq	$a0, $a1, .LBB27_421
.LBB27_518:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i720
	ld.d	$a1, $sp, 1032
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 984
	addi.d	$a1, $sp, 1000
	beq	$a0, $a1, .LBB27_422
.LBB27_519:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i723
	ld.d	$a1, $sp, 1000
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 952
	addi.d	$a1, $sp, 968
	beq	$a0, $a1, .LBB27_423
.LBB27_520:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i726
	ld.d	$a1, $sp, 968
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 920
	addi.d	$a1, $sp, 936
	beq	$a0, $a1, .LBB27_424
.LBB27_521:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i729
	ld.d	$a1, $sp, 936
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1144
	addi.d	$a1, $sp, 1160
	beq	$a0, $a1, .LBB27_425
.LBB27_522:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i732
	ld.d	$a1, $sp, 1160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1112
	addi.d	$a1, $sp, 1128
	beq	$a0, $a1, .LBB27_426
.LBB27_523:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i735
	ld.d	$a1, $sp, 1128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1080
	addi.d	$a1, $sp, 1096
	beq	$a0, $a1, .LBB27_427
.LBB27_524:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i738
	ld.d	$a1, $sp, 1096
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1048
	addi.d	$a1, $sp, 1064
	beq	$a0, $a1, .LBB27_428
.LBB27_525:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i741
	ld.d	$a1, $sp, 1064
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1272
	addi.d	$a1, $sp, 1288
	beq	$a0, $a1, .LBB27_429
.LBB27_526:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i744
	ld.d	$a1, $sp, 1288
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1240
	addi.d	$a1, $sp, 1256
	beq	$a0, $a1, .LBB27_430
.LBB27_527:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i747
	ld.d	$a1, $sp, 1256
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1208
	addi.d	$a1, $sp, 1224
	beq	$a0, $a1, .LBB27_431
.LBB27_528:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i750
	ld.d	$a1, $sp, 1224
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1176
	addi.d	$a1, $sp, 1192
	beq	$a0, $a1, .LBB27_432
.LBB27_529:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i753
	ld.d	$a1, $sp, 1192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1400
	addi.d	$a1, $sp, 1416
	beq	$a0, $a1, .LBB27_433
.LBB27_530:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i756
	ld.d	$a1, $sp, 1416
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1368
	addi.d	$a1, $sp, 1384
	beq	$a0, $a1, .LBB27_434
.LBB27_531:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i759
	ld.d	$a1, $sp, 1384
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1336
	addi.d	$a1, $sp, 1352
	beq	$a0, $a1, .LBB27_435
.LBB27_532:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i762
	ld.d	$a1, $sp, 1352
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1304
	addi.d	$a1, $sp, 1320
	beq	$a0, $a1, .LBB27_436
.LBB27_533:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i765
	ld.d	$a1, $sp, 1320
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1528
	addi.d	$a1, $sp, 1544
	beq	$a0, $a1, .LBB27_437
.LBB27_534:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i768
	ld.d	$a1, $sp, 1544
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1496
	addi.d	$a1, $sp, 1512
	beq	$a0, $a1, .LBB27_438
.LBB27_535:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i771
	ld.d	$a1, $sp, 1512
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1464
	addi.d	$a1, $sp, 1480
	beq	$a0, $a1, .LBB27_439
.LBB27_536:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i774
	ld.d	$a1, $sp, 1480
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1432
	addi.d	$a1, $sp, 1448
	beq	$a0, $a1, .LBB27_440
.LBB27_537:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i777
	ld.d	$a1, $sp, 1448
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1656
	addi.d	$a1, $sp, 1672
	beq	$a0, $a1, .LBB27_441
.LBB27_538:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i780
	ld.d	$a1, $sp, 1672
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1624
	addi.d	$a1, $sp, 1640
	beq	$a0, $a1, .LBB27_442
.LBB27_539:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i783
	ld.d	$a1, $sp, 1640
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1592
	addi.d	$a1, $sp, 1608
	beq	$a0, $a1, .LBB27_443
.LBB27_540:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i786
	ld.d	$a1, $sp, 1608
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1560
	addi.d	$a1, $sp, 1576
	beq	$a0, $a1, .LBB27_444
.LBB27_541:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i789
	ld.d	$a1, $sp, 1576
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1784
	addi.d	$a1, $sp, 1800
	beq	$a0, $a1, .LBB27_445
.LBB27_542:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i792
	ld.d	$a1, $sp, 1800
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1752
	addi.d	$a1, $sp, 1768
	beq	$a0, $a1, .LBB27_446
.LBB27_543:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i795
	ld.d	$a1, $sp, 1768
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1720
	addi.d	$a1, $sp, 1736
	beq	$a0, $a1, .LBB27_447
.LBB27_544:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i798
	ld.d	$a1, $sp, 1736
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1688
	addi.d	$a1, $sp, 1704
	beq	$a0, $a1, .LBB27_448
.LBB27_545:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i801
	ld.d	$a1, $sp, 1704
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1912
	addi.d	$a1, $sp, 1928
	beq	$a0, $a1, .LBB27_449
.LBB27_546:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i804
	ld.d	$a1, $sp, 1928
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1880
	addi.d	$a1, $sp, 1896
	beq	$a0, $a1, .LBB27_450
.LBB27_547:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i807
	ld.d	$a1, $sp, 1896
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1848
	addi.d	$a1, $sp, 1864
	beq	$a0, $a1, .LBB27_451
.LBB27_548:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i810
	ld.d	$a1, $sp, 1864
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1816
	addi.d	$a1, $sp, 1832
	beq	$a0, $a1, .LBB27_452
.LBB27_549:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i813
	ld.d	$a1, $sp, 1832
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 2040
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	beq	$a0, $a1, .LBB27_453
.LBB27_550:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i816
	ori	$a1, $zero, 2056
	add.d	$a1, $sp, $a1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 2008
	addi.d	$a1, $sp, 2024
	beq	$a0, $a1, .LBB27_454
.LBB27_551:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i819
	ld.d	$a1, $sp, 2024
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1976
	addi.d	$a1, $sp, 1992
	beq	$a0, $a1, .LBB27_455
.LBB27_552:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i822
	ld.d	$a1, $sp, 1992
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 1944
	addi.d	$a1, $sp, 1960
	bne	$a0, $a1, .LBB27_456
	b	.LBB27_457
.LBB27_553:
.Ltmp419:                               # EH_LABEL
.LBB27_554:
	move	$s1, $a0
	move	$s2, $zero
	ld.d	$a0, $sp, 1528
	addi.d	$a1, $sp, 1544
	beq	$a0, $a1, .LBB27_437
	b	.LBB27_534
.LBB27_555:
.Ltmp288:                               # EH_LABEL
.LBB27_556:
	move	$s1, $a0
	move	$s2, $zero
	beqz	$s2, .LBB27_486
	b	.LBB27_489
.Lfunc_end27:
	.size	_ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev, .Lfunc_end27-_ZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table27:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp269-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp269
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp269-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp270-.Ltmp269              #   Call between .Ltmp269 and .Ltmp270
	.uleb128 .Ltmp271-.Lfunc_begin12        #     jumps to .Ltmp271
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp270-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Ltmp272-.Ltmp270              #   Call between .Ltmp270 and .Ltmp272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp272-.Lfunc_begin12        # >> Call Site 4 <<
	.uleb128 .Ltmp273-.Ltmp272              #   Call between .Ltmp272 and .Ltmp273
	.uleb128 .Ltmp274-.Lfunc_begin12        #     jumps to .Ltmp274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp273-.Lfunc_begin12        # >> Call Site 5 <<
	.uleb128 .Ltmp275-.Ltmp273              #   Call between .Ltmp273 and .Ltmp275
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp275-.Lfunc_begin12        # >> Call Site 6 <<
	.uleb128 .Ltmp276-.Ltmp275              #   Call between .Ltmp275 and .Ltmp276
	.uleb128 .Ltmp277-.Lfunc_begin12        #     jumps to .Ltmp277
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp276-.Lfunc_begin12        # >> Call Site 7 <<
	.uleb128 .Ltmp278-.Ltmp276              #   Call between .Ltmp276 and .Ltmp278
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp278-.Lfunc_begin12        # >> Call Site 8 <<
	.uleb128 .Ltmp287-.Ltmp278              #   Call between .Ltmp278 and .Ltmp287
	.uleb128 .Ltmp288-.Lfunc_begin12        #     jumps to .Ltmp288
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp289-.Lfunc_begin12        # >> Call Site 9 <<
	.uleb128 .Ltmp290-.Ltmp289              #   Call between .Ltmp289 and .Ltmp290
	.uleb128 .Ltmp291-.Lfunc_begin12        #     jumps to .Ltmp291
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp292-.Lfunc_begin12        # >> Call Site 10 <<
	.uleb128 .Ltmp293-.Ltmp292              #   Call between .Ltmp292 and .Ltmp293
	.uleb128 .Ltmp294-.Lfunc_begin12        #     jumps to .Ltmp294
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp295-.Lfunc_begin12        # >> Call Site 11 <<
	.uleb128 .Ltmp296-.Ltmp295              #   Call between .Ltmp295 and .Ltmp296
	.uleb128 .Ltmp297-.Lfunc_begin12        #     jumps to .Ltmp297
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp298-.Lfunc_begin12        # >> Call Site 12 <<
	.uleb128 .Ltmp299-.Ltmp298              #   Call between .Ltmp298 and .Ltmp299
	.uleb128 .Ltmp300-.Lfunc_begin12        #     jumps to .Ltmp300
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp301-.Lfunc_begin12        # >> Call Site 13 <<
	.uleb128 .Ltmp302-.Ltmp301              #   Call between .Ltmp301 and .Ltmp302
	.uleb128 .Ltmp303-.Lfunc_begin12        #     jumps to .Ltmp303
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp304-.Lfunc_begin12        # >> Call Site 14 <<
	.uleb128 .Ltmp305-.Ltmp304              #   Call between .Ltmp304 and .Ltmp305
	.uleb128 .Ltmp306-.Lfunc_begin12        #     jumps to .Ltmp306
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp307-.Lfunc_begin12        # >> Call Site 15 <<
	.uleb128 .Ltmp308-.Ltmp307              #   Call between .Ltmp307 and .Ltmp308
	.uleb128 .Ltmp309-.Lfunc_begin12        #     jumps to .Ltmp309
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp310-.Lfunc_begin12        # >> Call Site 16 <<
	.uleb128 .Ltmp311-.Ltmp310              #   Call between .Ltmp310 and .Ltmp311
	.uleb128 .Ltmp312-.Lfunc_begin12        #     jumps to .Ltmp312
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp313-.Lfunc_begin12        # >> Call Site 17 <<
	.uleb128 .Ltmp314-.Ltmp313              #   Call between .Ltmp313 and .Ltmp314
	.uleb128 .Ltmp315-.Lfunc_begin12        #     jumps to .Ltmp315
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp316-.Lfunc_begin12        # >> Call Site 18 <<
	.uleb128 .Ltmp317-.Ltmp316              #   Call between .Ltmp316 and .Ltmp317
	.uleb128 .Ltmp318-.Lfunc_begin12        #     jumps to .Ltmp318
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp319-.Lfunc_begin12        # >> Call Site 19 <<
	.uleb128 .Ltmp320-.Ltmp319              #   Call between .Ltmp319 and .Ltmp320
	.uleb128 .Ltmp321-.Lfunc_begin12        #     jumps to .Ltmp321
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp322-.Lfunc_begin12        # >> Call Site 20 <<
	.uleb128 .Ltmp323-.Ltmp322              #   Call between .Ltmp322 and .Ltmp323
	.uleb128 .Ltmp324-.Lfunc_begin12        #     jumps to .Ltmp324
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp325-.Lfunc_begin12        # >> Call Site 21 <<
	.uleb128 .Ltmp326-.Ltmp325              #   Call between .Ltmp325 and .Ltmp326
	.uleb128 .Ltmp327-.Lfunc_begin12        #     jumps to .Ltmp327
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp328-.Lfunc_begin12        # >> Call Site 22 <<
	.uleb128 .Ltmp329-.Ltmp328              #   Call between .Ltmp328 and .Ltmp329
	.uleb128 .Ltmp330-.Lfunc_begin12        #     jumps to .Ltmp330
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp331-.Lfunc_begin12        # >> Call Site 23 <<
	.uleb128 .Ltmp332-.Ltmp331              #   Call between .Ltmp331 and .Ltmp332
	.uleb128 .Ltmp333-.Lfunc_begin12        #     jumps to .Ltmp333
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp334-.Lfunc_begin12        # >> Call Site 24 <<
	.uleb128 .Ltmp335-.Ltmp334              #   Call between .Ltmp334 and .Ltmp335
	.uleb128 .Ltmp336-.Lfunc_begin12        #     jumps to .Ltmp336
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp337-.Lfunc_begin12        # >> Call Site 25 <<
	.uleb128 .Ltmp338-.Ltmp337              #   Call between .Ltmp337 and .Ltmp338
	.uleb128 .Ltmp339-.Lfunc_begin12        #     jumps to .Ltmp339
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp340-.Lfunc_begin12        # >> Call Site 26 <<
	.uleb128 .Ltmp341-.Ltmp340              #   Call between .Ltmp340 and .Ltmp341
	.uleb128 .Ltmp342-.Lfunc_begin12        #     jumps to .Ltmp342
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp343-.Lfunc_begin12        # >> Call Site 27 <<
	.uleb128 .Ltmp344-.Ltmp343              #   Call between .Ltmp343 and .Ltmp344
	.uleb128 .Ltmp345-.Lfunc_begin12        #     jumps to .Ltmp345
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp346-.Lfunc_begin12        # >> Call Site 28 <<
	.uleb128 .Ltmp347-.Ltmp346              #   Call between .Ltmp346 and .Ltmp347
	.uleb128 .Ltmp348-.Lfunc_begin12        #     jumps to .Ltmp348
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp349-.Lfunc_begin12        # >> Call Site 29 <<
	.uleb128 .Ltmp350-.Ltmp349              #   Call between .Ltmp349 and .Ltmp350
	.uleb128 .Ltmp351-.Lfunc_begin12        #     jumps to .Ltmp351
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp352-.Lfunc_begin12        # >> Call Site 30 <<
	.uleb128 .Ltmp353-.Ltmp352              #   Call between .Ltmp352 and .Ltmp353
	.uleb128 .Ltmp354-.Lfunc_begin12        #     jumps to .Ltmp354
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp355-.Lfunc_begin12        # >> Call Site 31 <<
	.uleb128 .Ltmp356-.Ltmp355              #   Call between .Ltmp355 and .Ltmp356
	.uleb128 .Ltmp357-.Lfunc_begin12        #     jumps to .Ltmp357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp358-.Lfunc_begin12        # >> Call Site 32 <<
	.uleb128 .Ltmp359-.Ltmp358              #   Call between .Ltmp358 and .Ltmp359
	.uleb128 .Ltmp360-.Lfunc_begin12        #     jumps to .Ltmp360
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp361-.Lfunc_begin12        # >> Call Site 33 <<
	.uleb128 .Ltmp362-.Ltmp361              #   Call between .Ltmp361 and .Ltmp362
	.uleb128 .Ltmp363-.Lfunc_begin12        #     jumps to .Ltmp363
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp364-.Lfunc_begin12        # >> Call Site 34 <<
	.uleb128 .Ltmp365-.Ltmp364              #   Call between .Ltmp364 and .Ltmp365
	.uleb128 .Ltmp366-.Lfunc_begin12        #     jumps to .Ltmp366
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp367-.Lfunc_begin12        # >> Call Site 35 <<
	.uleb128 .Ltmp368-.Ltmp367              #   Call between .Ltmp367 and .Ltmp368
	.uleb128 .Ltmp369-.Lfunc_begin12        #     jumps to .Ltmp369
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp370-.Lfunc_begin12        # >> Call Site 36 <<
	.uleb128 .Ltmp371-.Ltmp370              #   Call between .Ltmp370 and .Ltmp371
	.uleb128 .Ltmp372-.Lfunc_begin12        #     jumps to .Ltmp372
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp373-.Lfunc_begin12        # >> Call Site 37 <<
	.uleb128 .Ltmp374-.Ltmp373              #   Call between .Ltmp373 and .Ltmp374
	.uleb128 .Ltmp375-.Lfunc_begin12        #     jumps to .Ltmp375
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp376-.Lfunc_begin12        # >> Call Site 38 <<
	.uleb128 .Ltmp377-.Ltmp376              #   Call between .Ltmp376 and .Ltmp377
	.uleb128 .Ltmp378-.Lfunc_begin12        #     jumps to .Ltmp378
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp379-.Lfunc_begin12        # >> Call Site 39 <<
	.uleb128 .Ltmp380-.Ltmp379              #   Call between .Ltmp379 and .Ltmp380
	.uleb128 .Ltmp381-.Lfunc_begin12        #     jumps to .Ltmp381
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp382-.Lfunc_begin12        # >> Call Site 40 <<
	.uleb128 .Ltmp383-.Ltmp382              #   Call between .Ltmp382 and .Ltmp383
	.uleb128 .Ltmp384-.Lfunc_begin12        #     jumps to .Ltmp384
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp385-.Lfunc_begin12        # >> Call Site 41 <<
	.uleb128 .Ltmp386-.Ltmp385              #   Call between .Ltmp385 and .Ltmp386
	.uleb128 .Ltmp387-.Lfunc_begin12        #     jumps to .Ltmp387
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp388-.Lfunc_begin12        # >> Call Site 42 <<
	.uleb128 .Ltmp389-.Ltmp388              #   Call between .Ltmp388 and .Ltmp389
	.uleb128 .Ltmp390-.Lfunc_begin12        #     jumps to .Ltmp390
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp391-.Lfunc_begin12        # >> Call Site 43 <<
	.uleb128 .Ltmp392-.Ltmp391              #   Call between .Ltmp391 and .Ltmp392
	.uleb128 .Ltmp393-.Lfunc_begin12        #     jumps to .Ltmp393
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp394-.Lfunc_begin12        # >> Call Site 44 <<
	.uleb128 .Ltmp395-.Ltmp394              #   Call between .Ltmp394 and .Ltmp395
	.uleb128 .Ltmp396-.Lfunc_begin12        #     jumps to .Ltmp396
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp397-.Lfunc_begin12        # >> Call Site 45 <<
	.uleb128 .Ltmp398-.Ltmp397              #   Call between .Ltmp397 and .Ltmp398
	.uleb128 .Ltmp399-.Lfunc_begin12        #     jumps to .Ltmp399
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp400-.Lfunc_begin12        # >> Call Site 46 <<
	.uleb128 .Ltmp401-.Ltmp400              #   Call between .Ltmp400 and .Ltmp401
	.uleb128 .Ltmp402-.Lfunc_begin12        #     jumps to .Ltmp402
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp403-.Lfunc_begin12        # >> Call Site 47 <<
	.uleb128 .Ltmp404-.Ltmp403              #   Call between .Ltmp403 and .Ltmp404
	.uleb128 .Ltmp405-.Lfunc_begin12        #     jumps to .Ltmp405
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp406-.Lfunc_begin12        # >> Call Site 48 <<
	.uleb128 .Ltmp407-.Ltmp406              #   Call between .Ltmp406 and .Ltmp407
	.uleb128 .Ltmp408-.Lfunc_begin12        #     jumps to .Ltmp408
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp409-.Lfunc_begin12        # >> Call Site 49 <<
	.uleb128 .Ltmp410-.Ltmp409              #   Call between .Ltmp409 and .Ltmp410
	.uleb128 .Ltmp411-.Lfunc_begin12        #     jumps to .Ltmp411
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp412-.Lfunc_begin12        # >> Call Site 50 <<
	.uleb128 .Ltmp413-.Ltmp412              #   Call between .Ltmp412 and .Ltmp413
	.uleb128 .Ltmp414-.Lfunc_begin12        #     jumps to .Ltmp414
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp415-.Lfunc_begin12        # >> Call Site 51 <<
	.uleb128 .Ltmp418-.Ltmp415              #   Call between .Ltmp415 and .Ltmp418
	.uleb128 .Ltmp419-.Lfunc_begin12        #     jumps to .Ltmp419
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp420-.Lfunc_begin12        # >> Call Site 52 <<
	.uleb128 .Ltmp421-.Ltmp420              #   Call between .Ltmp420 and .Ltmp421
	.uleb128 .Ltmp422-.Lfunc_begin12        #     jumps to .Ltmp422
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp423-.Lfunc_begin12        # >> Call Site 53 <<
	.uleb128 .Ltmp424-.Ltmp423              #   Call between .Ltmp423 and .Ltmp424
	.uleb128 .Ltmp425-.Lfunc_begin12        #     jumps to .Ltmp425
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp426-.Lfunc_begin12        # >> Call Site 54 <<
	.uleb128 .Ltmp427-.Ltmp426              #   Call between .Ltmp426 and .Ltmp427
	.uleb128 .Ltmp428-.Lfunc_begin12        #     jumps to .Ltmp428
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp429-.Lfunc_begin12        # >> Call Site 55 <<
	.uleb128 .Ltmp430-.Ltmp429              #   Call between .Ltmp429 and .Ltmp430
	.uleb128 .Ltmp431-.Lfunc_begin12        #     jumps to .Ltmp431
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp432-.Lfunc_begin12        # >> Call Site 56 <<
	.uleb128 .Ltmp433-.Ltmp432              #   Call between .Ltmp432 and .Ltmp433
	.uleb128 .Ltmp434-.Lfunc_begin12        #     jumps to .Ltmp434
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp435-.Lfunc_begin12        # >> Call Site 57 <<
	.uleb128 .Ltmp436-.Ltmp435              #   Call between .Ltmp435 and .Ltmp436
	.uleb128 .Ltmp437-.Lfunc_begin12        #     jumps to .Ltmp437
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp438-.Lfunc_begin12        # >> Call Site 58 <<
	.uleb128 .Ltmp439-.Ltmp438              #   Call between .Ltmp438 and .Ltmp439
	.uleb128 .Ltmp440-.Lfunc_begin12        #     jumps to .Ltmp440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp441-.Lfunc_begin12        # >> Call Site 59 <<
	.uleb128 .Ltmp442-.Ltmp441              #   Call between .Ltmp441 and .Ltmp442
	.uleb128 .Ltmp443-.Lfunc_begin12        #     jumps to .Ltmp443
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp444-.Lfunc_begin12        # >> Call Site 60 <<
	.uleb128 .Ltmp445-.Ltmp444              #   Call between .Ltmp444 and .Ltmp445
	.uleb128 .Ltmp446-.Lfunc_begin12        #     jumps to .Ltmp446
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp447-.Lfunc_begin12        # >> Call Site 61 <<
	.uleb128 .Ltmp448-.Ltmp447              #   Call between .Ltmp447 and .Ltmp448
	.uleb128 .Ltmp449-.Lfunc_begin12        #     jumps to .Ltmp449
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp450-.Lfunc_begin12        # >> Call Site 62 <<
	.uleb128 .Ltmp451-.Ltmp450              #   Call between .Ltmp450 and .Ltmp451
	.uleb128 .Ltmp452-.Lfunc_begin12        #     jumps to .Ltmp452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp453-.Lfunc_begin12        # >> Call Site 63 <<
	.uleb128 .Ltmp454-.Ltmp453              #   Call between .Ltmp453 and .Ltmp454
	.uleb128 .Ltmp455-.Lfunc_begin12        #     jumps to .Ltmp455
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp456-.Lfunc_begin12        # >> Call Site 64 <<
	.uleb128 .Ltmp457-.Ltmp456              #   Call between .Ltmp456 and .Ltmp457
	.uleb128 .Ltmp458-.Lfunc_begin12        #     jumps to .Ltmp458
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp459-.Lfunc_begin12        # >> Call Site 65 <<
	.uleb128 .Ltmp460-.Ltmp459              #   Call between .Ltmp459 and .Ltmp460
	.uleb128 .Ltmp461-.Lfunc_begin12        #     jumps to .Ltmp461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp462-.Lfunc_begin12        # >> Call Site 66 <<
	.uleb128 .Ltmp463-.Ltmp462              #   Call between .Ltmp462 and .Ltmp463
	.uleb128 .Ltmp464-.Lfunc_begin12        #     jumps to .Ltmp464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp465-.Lfunc_begin12        # >> Call Site 67 <<
	.uleb128 .Ltmp466-.Ltmp465              #   Call between .Ltmp465 and .Ltmp466
	.uleb128 .Ltmp467-.Lfunc_begin12        #     jumps to .Ltmp467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp468-.Lfunc_begin12        # >> Call Site 68 <<
	.uleb128 .Ltmp469-.Ltmp468              #   Call between .Ltmp468 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin12        #     jumps to .Ltmp470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp471-.Lfunc_begin12        # >> Call Site 69 <<
	.uleb128 .Ltmp472-.Ltmp471              #   Call between .Ltmp471 and .Ltmp472
	.uleb128 .Ltmp473-.Lfunc_begin12        #     jumps to .Ltmp473
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp474-.Lfunc_begin12        # >> Call Site 70 <<
	.uleb128 .Ltmp475-.Ltmp474              #   Call between .Ltmp474 and .Ltmp475
	.uleb128 .Ltmp476-.Lfunc_begin12        #     jumps to .Ltmp476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp477-.Lfunc_begin12        # >> Call Site 71 <<
	.uleb128 .Ltmp478-.Ltmp477              #   Call between .Ltmp477 and .Ltmp478
	.uleb128 .Ltmp479-.Lfunc_begin12        #     jumps to .Ltmp479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp480-.Lfunc_begin12        # >> Call Site 72 <<
	.uleb128 .Ltmp481-.Ltmp480              #   Call between .Ltmp480 and .Ltmp481
	.uleb128 .Ltmp482-.Lfunc_begin12        #     jumps to .Ltmp482
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp483-.Lfunc_begin12        # >> Call Site 73 <<
	.uleb128 .Ltmp484-.Ltmp483              #   Call between .Ltmp483 and .Ltmp484
	.uleb128 .Ltmp485-.Lfunc_begin12        #     jumps to .Ltmp485
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp486-.Lfunc_begin12        # >> Call Site 74 <<
	.uleb128 .Ltmp487-.Ltmp486              #   Call between .Ltmp486 and .Ltmp487
	.uleb128 .Ltmp488-.Lfunc_begin12        #     jumps to .Ltmp488
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp489-.Lfunc_begin12        # >> Call Site 75 <<
	.uleb128 .Ltmp490-.Ltmp489              #   Call between .Ltmp489 and .Ltmp490
	.uleb128 .Ltmp491-.Lfunc_begin12        #     jumps to .Ltmp491
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp492-.Lfunc_begin12        # >> Call Site 76 <<
	.uleb128 .Ltmp493-.Ltmp492              #   Call between .Ltmp492 and .Ltmp493
	.uleb128 .Ltmp494-.Lfunc_begin12        #     jumps to .Ltmp494
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp495-.Lfunc_begin12        # >> Call Site 77 <<
	.uleb128 .Ltmp496-.Ltmp495              #   Call between .Ltmp495 and .Ltmp496
	.uleb128 .Ltmp497-.Lfunc_begin12        #     jumps to .Ltmp497
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp498-.Lfunc_begin12        # >> Call Site 78 <<
	.uleb128 .Ltmp499-.Ltmp498              #   Call between .Ltmp498 and .Ltmp499
	.uleb128 .Ltmp500-.Lfunc_begin12        #     jumps to .Ltmp500
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp501-.Lfunc_begin12        # >> Call Site 79 <<
	.uleb128 .Ltmp502-.Ltmp501              #   Call between .Ltmp501 and .Ltmp502
	.uleb128 .Ltmp503-.Lfunc_begin12        #     jumps to .Ltmp503
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp504-.Lfunc_begin12        # >> Call Site 80 <<
	.uleb128 .Ltmp505-.Ltmp504              #   Call between .Ltmp504 and .Ltmp505
	.uleb128 .Ltmp506-.Lfunc_begin12        #     jumps to .Ltmp506
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp507-.Lfunc_begin12        # >> Call Site 81 <<
	.uleb128 .Ltmp508-.Ltmp507              #   Call between .Ltmp507 and .Ltmp508
	.uleb128 .Ltmp509-.Lfunc_begin12        #     jumps to .Ltmp509
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp510-.Lfunc_begin12        # >> Call Site 82 <<
	.uleb128 .Ltmp511-.Ltmp510              #   Call between .Ltmp510 and .Ltmp511
	.uleb128 .Ltmp512-.Lfunc_begin12        #     jumps to .Ltmp512
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp513-.Lfunc_begin12        # >> Call Site 83 <<
	.uleb128 .Ltmp514-.Ltmp513              #   Call between .Ltmp513 and .Ltmp514
	.uleb128 .Ltmp515-.Lfunc_begin12        #     jumps to .Ltmp515
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp516-.Lfunc_begin12        # >> Call Site 84 <<
	.uleb128 .Ltmp517-.Ltmp516              #   Call between .Ltmp516 and .Ltmp517
	.uleb128 .Ltmp518-.Lfunc_begin12        #     jumps to .Ltmp518
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp519-.Lfunc_begin12        # >> Call Site 85 <<
	.uleb128 .Ltmp520-.Ltmp519              #   Call between .Ltmp519 and .Ltmp520
	.uleb128 .Ltmp521-.Lfunc_begin12        #     jumps to .Ltmp521
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp522-.Lfunc_begin12        # >> Call Site 86 <<
	.uleb128 .Ltmp523-.Ltmp522              #   Call between .Ltmp522 and .Ltmp523
	.uleb128 .Ltmp524-.Lfunc_begin12        #     jumps to .Ltmp524
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp525-.Lfunc_begin12        # >> Call Site 87 <<
	.uleb128 .Ltmp526-.Ltmp525              #   Call between .Ltmp525 and .Ltmp526
	.uleb128 .Ltmp527-.Lfunc_begin12        #     jumps to .Ltmp527
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp528-.Lfunc_begin12        # >> Call Site 88 <<
	.uleb128 .Ltmp529-.Ltmp528              #   Call between .Ltmp528 and .Ltmp529
	.uleb128 .Ltmp530-.Lfunc_begin12        #     jumps to .Ltmp530
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp531-.Lfunc_begin12        # >> Call Site 89 <<
	.uleb128 .Ltmp532-.Ltmp531              #   Call between .Ltmp531 and .Ltmp532
	.uleb128 .Ltmp533-.Lfunc_begin12        #     jumps to .Ltmp533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp534-.Lfunc_begin12        # >> Call Site 90 <<
	.uleb128 .Ltmp535-.Ltmp534              #   Call between .Ltmp534 and .Ltmp535
	.uleb128 .Ltmp536-.Lfunc_begin12        #     jumps to .Ltmp536
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp537-.Lfunc_begin12        # >> Call Site 91 <<
	.uleb128 .Ltmp538-.Ltmp537              #   Call between .Ltmp537 and .Ltmp538
	.uleb128 .Ltmp539-.Lfunc_begin12        #     jumps to .Ltmp539
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp540-.Lfunc_begin12        # >> Call Site 92 <<
	.uleb128 .Ltmp541-.Ltmp540              #   Call between .Ltmp540 and .Ltmp541
	.uleb128 .Ltmp542-.Lfunc_begin12        #     jumps to .Ltmp542
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp543-.Lfunc_begin12        # >> Call Site 93 <<
	.uleb128 .Ltmp544-.Ltmp543              #   Call between .Ltmp543 and .Ltmp544
	.uleb128 .Ltmp545-.Lfunc_begin12        #     jumps to .Ltmp545
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp546-.Lfunc_begin12        # >> Call Site 94 <<
	.uleb128 .Ltmp547-.Ltmp546              #   Call between .Ltmp546 and .Ltmp547
	.uleb128 .Ltmp548-.Lfunc_begin12        #     jumps to .Ltmp548
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp549-.Lfunc_begin12        # >> Call Site 95 <<
	.uleb128 .Ltmp550-.Ltmp549              #   Call between .Ltmp549 and .Ltmp550
	.uleb128 .Ltmp551-.Lfunc_begin12        #     jumps to .Ltmp551
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp552-.Lfunc_begin12        # >> Call Site 96 <<
	.uleb128 .Ltmp553-.Ltmp552              #   Call between .Ltmp552 and .Ltmp553
	.uleb128 .Ltmp554-.Lfunc_begin12        #     jumps to .Ltmp554
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp555-.Lfunc_begin12        # >> Call Site 97 <<
	.uleb128 .Ltmp556-.Ltmp555              #   Call between .Ltmp555 and .Ltmp556
	.uleb128 .Ltmp557-.Lfunc_begin12        #     jumps to .Ltmp557
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp558-.Lfunc_begin12        # >> Call Site 98 <<
	.uleb128 .Ltmp559-.Ltmp558              #   Call between .Ltmp558 and .Ltmp559
	.uleb128 .Ltmp560-.Lfunc_begin12        #     jumps to .Ltmp560
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp561-.Lfunc_begin12        # >> Call Site 99 <<
	.uleb128 .Ltmp562-.Ltmp561              #   Call between .Ltmp561 and .Ltmp562
	.uleb128 .Ltmp563-.Lfunc_begin12        #     jumps to .Ltmp563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp564-.Lfunc_begin12        # >> Call Site 100 <<
	.uleb128 .Ltmp565-.Ltmp564              #   Call between .Ltmp564 and .Ltmp565
	.uleb128 .Ltmp566-.Lfunc_begin12        #     jumps to .Ltmp566
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp567-.Lfunc_begin12        # >> Call Site 101 <<
	.uleb128 .Ltmp568-.Ltmp567              #   Call between .Ltmp567 and .Ltmp568
	.uleb128 .Ltmp569-.Lfunc_begin12        #     jumps to .Ltmp569
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp570-.Lfunc_begin12        # >> Call Site 102 <<
	.uleb128 .Ltmp571-.Ltmp570              #   Call between .Ltmp570 and .Ltmp571
	.uleb128 .Ltmp572-.Lfunc_begin12        #     jumps to .Ltmp572
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp573-.Lfunc_begin12        # >> Call Site 103 <<
	.uleb128 .Ltmp574-.Ltmp573              #   Call between .Ltmp573 and .Ltmp574
	.uleb128 .Ltmp575-.Lfunc_begin12        #     jumps to .Ltmp575
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp576-.Lfunc_begin12        # >> Call Site 104 <<
	.uleb128 .Ltmp579-.Ltmp576              #   Call between .Ltmp576 and .Ltmp579
	.uleb128 .Ltmp580-.Lfunc_begin12        #     jumps to .Ltmp580
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp581-.Lfunc_begin12        # >> Call Site 105 <<
	.uleb128 .Ltmp582-.Ltmp581              #   Call between .Ltmp581 and .Ltmp582
	.uleb128 .Ltmp583-.Lfunc_begin12        #     jumps to .Ltmp583
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp582-.Lfunc_begin12        # >> Call Site 106 <<
	.uleb128 .Lfunc_end27-.Ltmp582          #   Call between .Ltmp582 and .Lfunc_end27
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	ld.d	$a1, $a1, 8
	ld.d	$s1, $s0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 16
	move	$a0, $s3
	bltu	$a1, $a2, .LBB28_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB28_2:                               # %._crit_edge.i.i
	addi.w	$s4, $zero, -1
	beq	$a1, $s4, .LBB28_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB28_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB28_6
.LBB28_5:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB28_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 16
	st.d	$a0, $fp, 8
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	ld.d	$a1, $s0, 40
	ld.d	$s0, $s0, 32
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 16
	bltu	$a1, $a0, .LBB28_9
# %bb.7:                                # %.noexc.i6
.Ltmp584:                               # EH_LABEL
	addi.d	$s2, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp585:                               # EH_LABEL
# %bb.8:                                # %.noexc
	ld.d	$a1, $sp, 16
	st.d	$a0, $s2, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB28_9:                               # %._crit_edge.i.i5
	beq	$a1, $s4, .LBB28_13
# %bb.10:                               # %._crit_edge.i.i5
	bnez	$a1, .LBB28_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB28_13
.LBB28_12:
	addi.d	$a2, $a1, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB28_13:
	ld.d	$a0, $sp, 16
	st.d	$a0, $fp, 40
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB28_14:
.Ltmp586:                               # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s3, .LBB28_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s3, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB28_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end28:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_, .Lfunc_end28-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,comdat
	.p2align	2, 0x0
GCC_except_table28:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp584-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp584
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp584-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp585-.Ltmp584              #   Call between .Ltmp584 and .Ltmp585
	.uleb128 .Ltmp586-.Lfunc_begin13        #     jumps to .Ltmp586
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp585-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Lfunc_end28-.Ltmp585          #   Call between .Ltmp585 and .Lfunc_end28
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB29_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB29_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB29_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end29:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev, .Lfunc_end29-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _Z14RunOutputTestsiPPc
.LCPI30_0:
	.dword	8                               # 0x8
	.dword	753356163528347424              # 0xa74757074754f20
	.text
	.hidden	_Z14RunOutputTestsiPPc
	.globl	_Z14RunOutputTestsiPPc
	.p2align	5
	.type	_Z14RunOutputTestsiPPc,@function
_Z14RunOutputTestsiPPc:                 # @_Z14RunOutputTestsiPPc
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:
	addi.d	$sp, $sp, -2032
	.cfi_def_cfa_offset 2032
	st.d	$ra, $sp, 2024                  # 8-byte Folded Spill
	st.d	$fp, $sp, 2016                  # 8-byte Folded Spill
	st.d	$s0, $sp, 2008                  # 8-byte Folded Spill
	st.d	$s1, $sp, 2000                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1992                  # 8-byte Folded Spill
	st.d	$s3, $sp, 1984                  # 8-byte Folded Spill
	st.d	$s4, $sp, 1976                  # 8-byte Folded Spill
	st.d	$s5, $sp, 1968                  # 8-byte Folded Spill
	st.d	$s6, $sp, 1960                  # 8-byte Folded Spill
	st.d	$s7, $sp, 1952                  # 8-byte Folded Spill
	st.d	$s8, $sp, 1944                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	addi.d	$sp, $sp, -1072
	.cfi_def_cfa_offset 3104
	ori	$a2, $zero, 3012
	add.d	$a2, $sp, $a2
	st.w	$a0, $a2, 0
	pcalau12i	$a0, %got_pc_hi20(_ZN9benchmark16PrintDefaultHelpEv)
	ld.d	$a2, $a0, %got_pc_lo12(_ZN9benchmark16PrintDefaultHelpEv)
	ori	$a0, $zero, 3012
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark10InitializeEPiPPcPFvvE)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	ori	$s0, $zero, 1
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal16GetOutputOptionsEb)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterC2Ev)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVN9benchmark15ConsoleReporterE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVN9benchmark15ConsoleReporterE)
	addi.d	$s2, $a0, 16
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	st.d	$s2, $a0, 0
	ori	$a0, $zero, 2936
	add.d	$a0, $sp, $a0
	st.w	$fp, $a0, 0
	ori	$a0, $zero, 2944
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 2960
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2960
	add.d	$a1, $sp, $a1
	st.w	$zero, $a1, 0
	ori	$a1, $zero, 2968
	add.d	$a1, $sp, $a1
	st.d	$zero, $a1, 0
	ori	$a1, $zero, 2976
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a1, $zero, 2984
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2992
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	ori	$a0, $zero, 3000
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
.Ltmp587:                               # EH_LABEL
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterC2Ev)
	jirl	$ra, $ra, 0
.Ltmp588:                               # EH_LABEL
# %bb.1:
	pcalau12i	$a0, %got_pc_hi20(_ZTVN9benchmark12JSONReporterE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVN9benchmark12JSONReporterE)
	addi.d	$a0, $a0, 16
	ori	$a1, $zero, 2880
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2904
	add.d	$a0, $sp, $a0
	st.b	$s0, $a0, 0
.Ltmp590:                               # EH_LABEL
	ori	$a0, $zero, 2800
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterC2Ev)
	jirl	$ra, $ra, 0
.Ltmp591:                               # EH_LABEL
# %bb.2:                                # %._crit_edge.i.i
	pcalau12i	$a0, %got_pc_hi20(_ZTVN9benchmark11CSVReporterE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVN9benchmark11CSVReporterE)
	addi.d	$s5, $a0, 16
	ori	$a0, $zero, 2800
	add.d	$a0, $sp, $a0
	st.d	$s5, $a0, 0
	ori	$a0, $zero, 2824
	add.d	$a0, $sp, $a0
	st.b	$zero, $a0, 0
	ori	$a0, $zero, 2840
	add.d	$a0, $sp, $a0
	ori	$a1, $zero, 2840
	add.d	$a1, $sp, $a1
	st.w	$zero, $a1, 0
	ori	$a1, $zero, 2848
	add.d	$a1, $sp, $a1
	st.d	$zero, $a1, 0
	ori	$a1, $zero, 2856
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a1, $zero, 2864
	add.d	$a1, $sp, $a1
	st.d	$a0, $a1, 0
	ori	$a0, $zero, 2872
	add.d	$a0, $sp, $a0
	st.d	$zero, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.35)
	addi.d	$a0, $a0, %pc_lo12(.L.str.35)
	ld.d	$a1, $a0, 0
	ld.d	$a0, $a0, 7
	addi.d	$s4, $sp, 184
	st.d	$s4, $sp, 168
	st.d	$a1, $sp, 184
	st.d	$a0, $sp, 191
	ori	$a0, $zero, 15
	st.d	$a0, $sp, 176
	st.b	$zero, $sp, 199
	pcalau12i	$fp, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	dbar	20
	beqz	$a0, .LBB30_84
.LBB30_3:                               # %_ZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseID.exit
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	dbar	20
	beqz	$a0, .LBB30_86
.LBB30_4:                               # %_ZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseID.exit88
.Ltmp593:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$s1, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a3, $s1, 24
	addi.d	$a0, $sp, 280
	addi.d	$a1, $sp, 168
	ori	$a2, $zero, 2912
	add.d	$a4, $sp, $a2
	addi.d	$s3, $sp, 280
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE)
	jirl	$ra, $ra, 0
.Ltmp594:                               # EH_LABEL
# %bb.5:                                # %._crit_edge.i.i89
	pcalau12i	$a0, %pc_hi20(.L.str.36)
	addi.d	$a0, $a0, %pc_lo12(.L.str.36)
	ld.d	$a1, $a0, 0
	ld.w	$a0, $a0, 8
	addi.d	$s6, $sp, 264
	st.d	$s6, $sp, 248
	st.d	$a1, $sp, 264
	st.w	$a0, $sp, 272
	ori	$a0, $zero, 12
	st.d	$a0, $sp, 256
	st.b	$zero, $sp, 276
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	dbar	20
	beqz	$a0, .LBB30_88
.LBB30_6:                               # %_ZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseID.exit95
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$s3, $sp, 1120
	dbar	20
	beqz	$a0, .LBB30_90
.LBB30_7:                               # %_ZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseID.exit98
.Ltmp596:                               # EH_LABEL
	addi.d	$a2, $s1, 48
	addi.d	$a3, $s1, 72
	addi.d	$a1, $sp, 248
	ori	$a0, $zero, 2880
	add.d	$a4, $sp, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE)
	jirl	$ra, $ra, 0
.Ltmp597:                               # EH_LABEL
# %bb.8:                                # %._crit_edge.i.i99
	pcalau12i	$a0, %pc_hi20(.L.str.37)
	addi.d	$a0, $a0, %pc_lo12(.L.str.37)
	ld.d	$s8, $a0, 0
	ld.w	$s7, $a0, 7
	addi.d	$s0, $sp, 232
	st.d	$s0, $sp, 216
	st.d	$s8, $sp, 232
	st.w	$s7, $sp, 239
	ori	$a0, $zero, 11
	st.d	$a0, $sp, 224
	st.b	$zero, $sp, 243
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	dbar	20
	beqz	$a0, .LBB30_92
.LBB30_9:                               # %_ZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseID.exit105
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$s3, $sp, 1960
	dbar	20
	beqz	$a0, .LBB30_94
.LBB30_10:                              # %_ZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseID.exit108
.Ltmp599:                               # EH_LABEL
	addi.d	$a2, $s1, 96
	addi.d	$a3, $s1, 120
	addi.d	$a1, $sp, 216
	ori	$a0, $zero, 2800
	add.d	$a4, $sp, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE)
	jirl	$ra, $ra, 0
.Ltmp600:                               # EH_LABEL
# %bb.11:
	ld.d	$a0, $sp, 216
	beq	$a0, $s0, .LBB30_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 248
	beq	$a0, $s6, .LBB30_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i109
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit111
	ld.d	$a0, $sp, 168
	beq	$a0, $s4, .LBB30_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i112
	ld.d	$a1, $sp, 184
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_17:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit114
.Ltmp602:                               # EH_LABEL
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.38)
	addi.d	$a1, $a1, %pc_lo12(.L.str.38)
	ori	$a2, $zero, 22
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp603:                               # EH_LABEL
# %bb.18:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
.Ltmp605:                               # EH_LABEL
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp606:                               # EH_LABEL
# %bb.19:
	move	$s1, $a0
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	st.d	$a0, $s1, 0
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	st.d	$a0, $s1, 8
	ori	$a0, $zero, 2800
	add.d	$a0, $sp, $a0
	st.d	$a0, $s1, 16
.Ltmp608:                               # EH_LABEL
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterC2Ev)
	jirl	$ra, $ra, 0
.Ltmp609:                               # EH_LABEL
# %bb.20:                               # %_ZNSt6vectorIPN9benchmark17BenchmarkReporterESaIS2_EED2Ev.exit
	st.d	$s8, $sp, 32                    # 8-byte Folded Spill
	st.d	$s7, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	addi.d	$a0, $s1, 24
	pcalau12i	$a1, %pc_hi20(_ZTVN8internal12_GLOBAL__N_112TestReporterE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN8internal12_GLOBAL__N_112TestReporterE+16)
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	st.d	$a1, $sp, 168
	st.d	$s1, $sp, 192
	st.d	$a0, $sp, 200
	st.d	$a0, $sp, 208
.Ltmp611:                               # EH_LABEL
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN9benchmark22RunSpecifiedBenchmarksEPNS_17BenchmarkReporterE)
	jirl	$ra, $ra, 0
.Ltmp612:                               # EH_LABEL
# %bb.21:
	move	$s6, $zero
	addi.d	$s8, $sp, 152
	addi.d	$s1, $sp, 120
	addi.d	$s3, $sp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.39)
	addi.d	$a0, $a0, %pc_lo12(.L.str.39)
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 96                    # 8-byte Folded Spill
	ld.b	$a0, $a0, 8
	st.d	$a0, $sp, 88                    # 8-byte Folded Spill
	addi.w	$a0, $zero, -10
	lu52i.d	$a0, $a0, 2047
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.LCPI30_0)
	vld	$vr0, $a0, %pc_lo12(.LCPI30_0)
	vst	$vr0, $sp, 64                   # 16-byte Folded Spill
	addi.w	$a0, $zero, -9
	lu52i.d	$a0, $a0, 2047
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s2, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cerr)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cerr)
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.8)
	addi.d	$s4, $a0, %pc_lo12(.L.str.8)
	b	.LBB30_23
	.p2align	4, , 16
.LBB30_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit199
                                        #   in Loop: Header=BB30_23 Depth=1
	addi.d	$s6, $s6, 840
	ori	$a0, $zero, 2520
	beq	$s6, $a0, .LBB30_65
.LBB30_23:                              # %._crit_edge.i.i135
                                        # =>This Inner Loop Header: Depth=1
	add.d	$fp, $s3, $s6
	st.d	$s8, $sp, 136
	ld.d	$a2, $fp, 8
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	st.d	$a0, $s8, 0
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	st.b	$a0, $s8, 8
	ori	$a0, $zero, 9
	st.d	$a0, $sp, 144
	st.b	$zero, $sp, 161
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	bgeu	$a2, $a0, .LBB30_77
# %bb.24:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
                                        #   in Loop: Header=BB30_23 Depth=1
.Ltmp614:                               # EH_LABEL
	ldx.d	$a1, $s6, $s3
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
.Ltmp615:                               # EH_LABEL
# %bb.25:                               # %.noexc141
                                        #   in Loop: Header=BB30_23 Depth=1
	st.d	$s0, $sp, 216
	ld.d	$a1, $a0, 0
	addi.d	$s5, $a0, 16
	beq	$a1, $s5, .LBB30_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i139
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a2, $a0, 16
	st.d	$a2, $sp, 232
	ld.d	$s7, $a0, 8
	st.d	$a1, $sp, 216
	b	.LBB30_28
	.p2align	4, , 16
.LBB30_27:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$s7, $a0, 8
	addi.d	$a2, $s7, 1
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	addi.d	$s3, $sp, 280
.LBB30_28:                              # %._crit_edge.i.i142
                                        #   in Loop: Header=BB30_23 Depth=1
	st.d	$s7, $sp, 224
	st.d	$s5, $a0, 0
	st.d	$zero, $a0, 8
	ld.d	$a1, $sp, 224
	st.b	$zero, $a0, 16
	st.d	$s1, $sp, 104
	vld	$vr0, $sp, 64                   # 16-byte Folded Reload
	vst	$vr0, $sp, 112
	st.b	$zero, $sp, 128
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	bgeu	$a1, $a0, .LBB30_79
# %bb.29:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i146
                                        #   in Loop: Header=BB30_23 Depth=1
.Ltmp617:                               # EH_LABEL
	addi.d	$a0, $sp, 216
	ori	$a2, $zero, 8
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
.Ltmp618:                               # EH_LABEL
	addi.d	$s7, $sp, 264
# %bb.30:                               # %.noexc152
                                        #   in Loop: Header=BB30_23 Depth=1
	st.d	$s7, $sp, 248
	ld.d	$a1, $a0, 0
	addi.d	$s5, $a0, 16
	beq	$a1, $s5, .LBB30_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i13.i
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a2, $s5, 0
	st.d	$a1, $sp, 248
	st.d	$a2, $sp, 264
	b	.LBB30_33
	.p2align	4, , 16
.LBB30_32:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i14.i
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $a0, 8
	addi.d	$a2, $a1, 1
	move	$s3, $a0
	move	$a0, $s7
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	addi.d	$s3, $sp, 280
.LBB30_33:                              # %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_.exit
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $a0, 8
	st.d	$a1, $sp, 256
	st.d	$s5, $a0, 0
	ld.d	$a2, $sp, 104
	st.d	$zero, $a0, 8
	st.b	$zero, $a0, 16
	beq	$a2, $s1, .LBB30_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i153
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 120
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_35:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit155
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 216
	beq	$a0, $s0, .LBB30_37
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i156
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit158
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 136
	beq	$a0, $s8, .LBB30_39
# %bb.38:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i159
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_39:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit161
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 256
	addi.d	$a1, $a0, -1
	st.d	$s0, $sp, 216
.Ltmp620:                               # EH_LABEL
	addi.d	$a0, $sp, 216
	ori	$a2, $zero, 45
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp621:                               # EH_LABEL
# %bb.40:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_.exit
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 216
	ld.d	$a2, $sp, 224
.Ltmp623:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp624:                               # EH_LABEL
# %bb.41:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 248
	ld.d	$a2, $sp, 256
.Ltmp625:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp626:                               # EH_LABEL
# %bb.42:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit165
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 216
	ld.d	$a2, $sp, 224
.Ltmp627:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp628:                               # EH_LABEL
# %bb.43:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit167
                                        #   in Loop: Header=BB30_23 Depth=1
.Ltmp629:                               # EH_LABEL
	ori	$a2, $zero, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp630:                               # EH_LABEL
# %bb.44:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit169
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $fp, 512
	st.d	$s8, $sp, 136
	st.d	$zero, $sp, 144
	st.b	$zero, $sp, 152
	beqz	$a0, .LBB30_47
# %bb.45:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit169
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $fp, 496
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB30_47
# %bb.46:                               #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a3, $fp, 504
	sub.d	$a4, $a0, $a3
.Ltmp631:                               # EH_LABEL
	addi.d	$a0, $sp, 136
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp632:                               # EH_LABEL
	b	.LBB30_48
	.p2align	4, , 16
.LBB30_47:                              #   in Loop: Header=BB30_23 Depth=1
	addi.d	$a1, $fp, 544
.Ltmp633:                               # EH_LABEL
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp634:                               # EH_LABEL
.LBB30_48:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 136
	ld.d	$a2, $sp, 144
.Ltmp636:                               # EH_LABEL
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp637:                               # EH_LABEL
# %bb.49:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit173
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 136
	beq	$a0, $s8, .LBB30_51
# %bb.50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i174
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_51:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $fp, 120
	st.d	$s8, $sp, 136
	st.d	$zero, $sp, 144
	st.b	$zero, $sp, 152
	beqz	$a0, .LBB30_54
# %bb.52:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $fp, 104
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB30_54
# %bb.53:                               #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a3, $fp, 112
	sub.d	$a4, $a0, $a3
.Ltmp639:                               # EH_LABEL
	addi.d	$a0, $sp, 136
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp640:                               # EH_LABEL
	b	.LBB30_55
	.p2align	4, , 16
.LBB30_54:                              #   in Loop: Header=BB30_23 Depth=1
	addi.d	$a1, $fp, 152
.Ltmp641:                               # EH_LABEL
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp642:                               # EH_LABEL
.LBB30_55:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit186
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 136
	ld.d	$a2, $sp, 144
.Ltmp644:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp645:                               # EH_LABEL
# %bb.56:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit188
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 136
	beq	$a0, $s8, .LBB30_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i189
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_58:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit191
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $fp, 40
	addi.d	$a1, $fp, 448
.Ltmp647:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp648:                               # EH_LABEL
# %bb.59:                               #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 56
.Ltmp649:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp650:                               # EH_LABEL
# %bb.60:                               #   in Loop: Header=BB30_23 Depth=1
.Ltmp651:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.8)
	addi.d	$a1, $a0, %pc_lo12(.L.str.8)
	ori	$a2, $zero, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp652:                               # EH_LABEL
# %bb.61:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit193
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 216
	beq	$a0, $s0, .LBB30_63
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i194
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_63:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit196
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a0, $sp, 248
	beq	$a0, $s7, .LBB30_22
# %bb.64:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i197
                                        #   in Loop: Header=BB30_23 Depth=1
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB30_22
.LBB30_65:                              # %._crit_edge.i.i119
	st.d	$s7, $sp, 248
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	st.d	$a0, $sp, 264
	ld.d	$a0, $sp, 1968
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.w	$a1, $sp, 271
	ori	$a1, $zero, 11
	st.d	$a1, $sp, 256
	st.b	$zero, $sp, 275
	bne	$a0, $a1, .LBB30_81
# %bb.66:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
	ld.d	$a0, $sp, 1960
	ori	$a2, $zero, 11
	move	$a1, $s7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB30_81
# %bb.67:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	beqz	$a0, .LBB30_96
.LBB30_68:
	ld.d	$a0, $sp, 248
	beq	$a0, $s7, .LBB30_70
# %bb.69:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i222
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_70:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit224
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	dbar	20
	beqz	$a0, .LBB30_98
.LBB30_71:                              # %_ZN8internal17GetResultsCheckerEv.exit
	addi.d	$a1, $sp, 2016
.Ltmp659:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal17GetResultsCheckerEvE2rc)
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp660:                               # EH_LABEL
# %bb.72:
	ld.d	$a0, $sp, 192
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	st.d	$a1, $sp, 168
	beqz	$a0, .LBB30_74
# %bb.73:
	ld.d	$a1, $sp, 208
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_74:                              # %_ZN8internal12_GLOBAL__N_112TestReporterD2Ev.exit
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 1960
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 1120
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2848
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2800
	add.d	$a0, $sp, $a0
	st.d	$s1, $a0, 0
	ori	$a0, $zero, 2832
	add.d	$a0, $sp, $a0
.Ltmp662:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E)
	jirl	$ra, $ra, 0
.Ltmp663:                               # EH_LABEL
# %bb.75:                               # %_ZN9benchmark11CSVReporterD2Ev.exit
	ori	$a0, $zero, 2800
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2968
	add.d	$a0, $sp, $a0
	ld.d	$a1, $a0, 0
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	st.d	$s0, $a0, 0
	ori	$a0, $zero, 2952
	add.d	$a0, $sp, $a0
.Ltmp665:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp666:                               # EH_LABEL
# %bb.76:                               # %_ZN9benchmark15ConsoleReporterD2Ev.exit
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$sp, $sp, 1072
	ld.d	$s8, $sp, 1944                  # 8-byte Folded Reload
	ld.d	$s7, $sp, 1952                  # 8-byte Folded Reload
	ld.d	$s6, $sp, 1960                  # 8-byte Folded Reload
	ld.d	$s5, $sp, 1968                  # 8-byte Folded Reload
	ld.d	$s4, $sp, 1976                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1984                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1992                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 2000                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 2008                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 2016                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 2024                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 2032
	ret
.LBB30_77:
.Ltmp671:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.275)
	addi.d	$a0, $a0, %pc_lo12(.L.str.275)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp672:                               # EH_LABEL
# %bb.78:                               # %.noexc140
.LBB30_79:
.Ltmp668:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.275)
	addi.d	$a0, $a0, %pc_lo12(.L.str.275)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp669:                               # EH_LABEL
# %bb.80:                               # %.noexc151
.LBB30_81:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread248
.Ltmp654:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.41)
	addi.d	$a1, $a0, %pc_lo12(.L.str.41)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._Z14RunOutputTestsiPPc)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._Z14RunOutputTestsiPPc)
	addi.d	$a0, $sp, 216
	ori	$a4, $zero, 445
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp655:                               # EH_LABEL
# %bb.82:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
.Ltmp656:                               # EH_LABEL
	addi.d	$a0, $sp, 216
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp657:                               # EH_LABEL
# %bb.83:
.LBB30_84:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_3
# %bb.85:                               # %.preheader.preheader.i
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ori	$a2, $zero, 144
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(__cxx_global_array_dtor)
	addi.d	$a0, $a0, %pc_lo12(__cxx_global_array_dtor)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $zero
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_3
.LBB30_86:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_4
# %bb.87:                               # %.preheader.preheader.i87
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ori	$a2, $zero, 144
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(__cxx_global_array_dtor)
	addi.d	$a0, $a0, %pc_lo12(__cxx_global_array_dtor)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $zero
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_4
.LBB30_88:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_6
# %bb.89:                               # %.preheader.preheader.i94
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ori	$a2, $zero, 144
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(__cxx_global_array_dtor)
	addi.d	$a0, $a0, %pc_lo12(__cxx_global_array_dtor)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $zero
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_6
.LBB30_90:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_7
# %bb.91:                               # %.preheader.preheader.i97
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ori	$a2, $zero, 144
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(__cxx_global_array_dtor)
	addi.d	$a0, $a0, %pc_lo12(__cxx_global_array_dtor)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $zero
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_7
.LBB30_92:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_9
# %bb.93:                               # %.preheader.preheader.i104
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ori	$a2, $zero, 144
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(__cxx_global_array_dtor)
	addi.d	$a0, $a0, %pc_lo12(__cxx_global_array_dtor)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $zero
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_9
.LBB30_94:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_10
# %bb.95:                               # %.preheader.preheader.i107
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	ori	$a2, $zero, 144
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(__cxx_global_array_dtor)
	addi.d	$a0, $a0, %pc_lo12(__cxx_global_array_dtor)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $zero
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_10
.LBB30_96:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_68
# %bb.97:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_68
.LBB30_98:
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB30_71
# %bb.99:
	pcalau12i	$a0, %pc_hi20(_ZZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$fp, $a0, %pc_lo12(_ZZN8internal17GetResultsCheckerEvE2rc)
	ori	$a2, $zero, 72
	move	$a0, $fp
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN8internal14ResultsCheckerD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN8internal14ResultsCheckerD2Ev)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN8internal17GetResultsCheckerEvE2rc)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB30_71
.LBB30_100:
.Ltmp667:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB30_101:
.Ltmp664:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB30_102:
.Ltmp661:                               # EH_LABEL
	b	.LBB30_104
.LBB30_103:
.Ltmp613:                               # EH_LABEL
.LBB30_104:
	move	$s2, $a0
	b	.LBB30_147
.LBB30_105:                             # %_ZNSt6vectorIPN9benchmark17BenchmarkReporterESaIS2_EED2Ev.exit134
.Ltmp610:                               # EH_LABEL
	move	$s2, $a0
	ori	$a1, $zero, 24
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB30_148
.LBB30_106:                             # %_ZNSt12_Vector_baseIPN9benchmark17BenchmarkReporterESaIS2_EED2Ev.exit.i
.Ltmp607:                               # EH_LABEL
	move	$s2, $a0
	b	.LBB30_148
.LBB30_107:
.Ltmp604:                               # EH_LABEL
	move	$s2, $a0
	b	.LBB30_148
.LBB30_108:
.Ltmp601:                               # EH_LABEL
	ld.d	$a2, $sp, 216
	move	$s2, $a0
	bne	$a2, $s0, .LBB30_112
# %bb.109:
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	bne	$a0, $a1, .LBB30_114
.LBB30_110:
	ld.d	$a0, $sp, 168
	bne	$a0, $s4, .LBB30_116
.LBB30_111:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit131
	addi.d	$fp, $sp, 280
	bne	$fp, $s3, .LBB30_117
	b	.LBB30_149
.LBB30_112:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i123
	ld.d	$a0, $sp, 232
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB30_110
	b	.LBB30_114
.LBB30_113:
.Ltmp598:                               # EH_LABEL
	move	$s2, $a0
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB30_110
.LBB30_114:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i126
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 168
	beq	$a0, $s4, .LBB30_111
	b	.LBB30_116
.LBB30_115:
.Ltmp595:                               # EH_LABEL
	move	$s2, $a0
	ld.d	$a0, $sp, 168
	beq	$a0, $s4, .LBB30_111
.LBB30_116:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i129
	ld.d	$a1, $sp, 184
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$fp, $sp, 280
	beq	$fp, $s3, .LBB30_149
	.p2align	4, , 16
.LBB30_117:                             # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$s3, $s3, -840
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev)
	jirl	$ra, $ra, 0
	bne	$s3, $fp, .LBB30_117
	b	.LBB30_149
.LBB30_118:
.Ltmp592:                               # EH_LABEL
	move	$s2, $a0
	b	.LBB30_150
.LBB30_119:
.Ltmp589:                               # EH_LABEL
	move	$s2, $a0
	b	.LBB30_151
.LBB30_120:
.Ltmp658:                               # EH_LABEL
	ld.d	$a2, $sp, 248
	move	$s2, $a0
	addi.d	$a0, $sp, 264
	beq	$a2, $a0, .LBB30_147
# %bb.121:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i226
	ld.d	$a0, $sp, 264
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB30_146
.LBB30_122:                             # %.loopexit249
.Ltmp616:                               # EH_LABEL
	move	$s2, $a0
	ld.d	$a0, $sp, 136
	bne	$a0, $s8, .LBB30_139
	b	.LBB30_147
.LBB30_123:                             # %.loopexit250
.Ltmp619:                               # EH_LABEL
	b	.LBB30_133
.LBB30_124:
.Ltmp622:                               # EH_LABEL
	move	$s2, $a0
	b	.LBB30_143
.LBB30_125:
.Ltmp635:                               # EH_LABEL
	b	.LBB30_129
.LBB30_126:
.Ltmp638:                               # EH_LABEL
	b	.LBB30_129
.LBB30_127:
.Ltmp643:                               # EH_LABEL
	b	.LBB30_129
.LBB30_128:
.Ltmp646:                               # EH_LABEL
.LBB30_129:
	ld.d	$a2, $sp, 136
	move	$s2, $a0
	beq	$a2, $s8, .LBB30_131
# %bb.130:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i212
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_131:                             # %.body184
	addi.d	$s7, $sp, 264
	b	.LBB30_141
.LBB30_132:                             # %.loopexit.split-lp251
.Ltmp670:                               # EH_LABEL
.LBB30_133:
	move	$s2, $a0
	ld.d	$a0, $sp, 104
	bne	$a0, $s1, .LBB30_136
# %bb.134:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit202
	ld.d	$a0, $sp, 216
	bne	$a0, $s0, .LBB30_137
.LBB30_135:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit205
	ld.d	$a0, $sp, 136
	bne	$a0, $s8, .LBB30_139
	b	.LBB30_147
.LBB30_136:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i200
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 216
	beq	$a0, $s0, .LBB30_135
.LBB30_137:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i203
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 136
	bne	$a0, $s8, .LBB30_139
	b	.LBB30_147
.LBB30_138:                             # %.loopexit.split-lp
.Ltmp673:                               # EH_LABEL
	move	$s2, $a0
	ld.d	$a0, $sp, 136
	beq	$a0, $s8, .LBB30_147
.LBB30_139:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i206
	ld.d	$a1, $sp, 152
	b	.LBB30_145
.LBB30_140:
.Ltmp653:                               # EH_LABEL
	move	$s2, $a0
.LBB30_141:
	ld.d	$a0, $sp, 216
	beq	$a0, $s0, .LBB30_143
# %bb.142:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i215
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_143:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit217
	ld.d	$a0, $sp, 248
	beq	$a0, $s7, .LBB30_147
# %bb.144:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i218
	ld.d	$a1, $sp, 264
.LBB30_145:
	addi.d	$a1, $a1, 1
.LBB30_146:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB30_147:
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN8internal12_GLOBAL__N_112TestReporterD2Ev)
	jirl	$ra, $ra, 0
.LBB30_148:                             # %.loopexit.loopexit
	addi.d	$a0, $sp, 1960
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 1120
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev)
	jirl	$ra, $ra, 0
.LBB30_149:                             # %.loopexit
	ori	$a0, $zero, 2800
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark11CSVReporterD2Ev)
	jirl	$ra, $ra, 0
.LBB30_150:
	ori	$a0, $zero, 2880
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jirl	$ra, $ra, 0
.LBB30_151:
	ori	$a0, $zero, 2912
	add.d	$a0, $sp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark15ConsoleReporterD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end30:
	.size	_Z14RunOutputTestsiPPc, .Lfunc_end30-_Z14RunOutputTestsiPPc
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table30:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14  # >> Call Site 1 <<
	.uleb128 .Ltmp587-.Lfunc_begin14        #   Call between .Lfunc_begin14 and .Ltmp587
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp587-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp588-.Ltmp587              #   Call between .Ltmp587 and .Ltmp588
	.uleb128 .Ltmp589-.Lfunc_begin14        #     jumps to .Ltmp589
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp590-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Ltmp591-.Ltmp590              #   Call between .Ltmp590 and .Ltmp591
	.uleb128 .Ltmp592-.Lfunc_begin14        #     jumps to .Ltmp592
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp593-.Lfunc_begin14        # >> Call Site 4 <<
	.uleb128 .Ltmp594-.Ltmp593              #   Call between .Ltmp593 and .Ltmp594
	.uleb128 .Ltmp595-.Lfunc_begin14        #     jumps to .Ltmp595
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp596-.Lfunc_begin14        # >> Call Site 5 <<
	.uleb128 .Ltmp597-.Ltmp596              #   Call between .Ltmp596 and .Ltmp597
	.uleb128 .Ltmp598-.Lfunc_begin14        #     jumps to .Ltmp598
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp599-.Lfunc_begin14        # >> Call Site 6 <<
	.uleb128 .Ltmp600-.Ltmp599              #   Call between .Ltmp599 and .Ltmp600
	.uleb128 .Ltmp601-.Lfunc_begin14        #     jumps to .Ltmp601
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp600-.Lfunc_begin14        # >> Call Site 7 <<
	.uleb128 .Ltmp602-.Ltmp600              #   Call between .Ltmp600 and .Ltmp602
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp602-.Lfunc_begin14        # >> Call Site 8 <<
	.uleb128 .Ltmp603-.Ltmp602              #   Call between .Ltmp602 and .Ltmp603
	.uleb128 .Ltmp604-.Lfunc_begin14        #     jumps to .Ltmp604
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp605-.Lfunc_begin14        # >> Call Site 9 <<
	.uleb128 .Ltmp606-.Ltmp605              #   Call between .Ltmp605 and .Ltmp606
	.uleb128 .Ltmp607-.Lfunc_begin14        #     jumps to .Ltmp607
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp608-.Lfunc_begin14        # >> Call Site 10 <<
	.uleb128 .Ltmp609-.Ltmp608              #   Call between .Ltmp608 and .Ltmp609
	.uleb128 .Ltmp610-.Lfunc_begin14        #     jumps to .Ltmp610
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp611-.Lfunc_begin14        # >> Call Site 11 <<
	.uleb128 .Ltmp612-.Ltmp611              #   Call between .Ltmp611 and .Ltmp612
	.uleb128 .Ltmp613-.Lfunc_begin14        #     jumps to .Ltmp613
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp614-.Lfunc_begin14        # >> Call Site 12 <<
	.uleb128 .Ltmp615-.Ltmp614              #   Call between .Ltmp614 and .Ltmp615
	.uleb128 .Ltmp616-.Lfunc_begin14        #     jumps to .Ltmp616
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp615-.Lfunc_begin14        # >> Call Site 13 <<
	.uleb128 .Ltmp617-.Ltmp615              #   Call between .Ltmp615 and .Ltmp617
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp617-.Lfunc_begin14        # >> Call Site 14 <<
	.uleb128 .Ltmp618-.Ltmp617              #   Call between .Ltmp617 and .Ltmp618
	.uleb128 .Ltmp619-.Lfunc_begin14        #     jumps to .Ltmp619
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp618-.Lfunc_begin14        # >> Call Site 15 <<
	.uleb128 .Ltmp620-.Ltmp618              #   Call between .Ltmp618 and .Ltmp620
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp620-.Lfunc_begin14        # >> Call Site 16 <<
	.uleb128 .Ltmp621-.Ltmp620              #   Call between .Ltmp620 and .Ltmp621
	.uleb128 .Ltmp622-.Lfunc_begin14        #     jumps to .Ltmp622
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp623-.Lfunc_begin14        # >> Call Site 17 <<
	.uleb128 .Ltmp630-.Ltmp623              #   Call between .Ltmp623 and .Ltmp630
	.uleb128 .Ltmp653-.Lfunc_begin14        #     jumps to .Ltmp653
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp631-.Lfunc_begin14        # >> Call Site 18 <<
	.uleb128 .Ltmp634-.Ltmp631              #   Call between .Ltmp631 and .Ltmp634
	.uleb128 .Ltmp635-.Lfunc_begin14        #     jumps to .Ltmp635
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp636-.Lfunc_begin14        # >> Call Site 19 <<
	.uleb128 .Ltmp637-.Ltmp636              #   Call between .Ltmp636 and .Ltmp637
	.uleb128 .Ltmp638-.Lfunc_begin14        #     jumps to .Ltmp638
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp637-.Lfunc_begin14        # >> Call Site 20 <<
	.uleb128 .Ltmp639-.Ltmp637              #   Call between .Ltmp637 and .Ltmp639
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp639-.Lfunc_begin14        # >> Call Site 21 <<
	.uleb128 .Ltmp642-.Ltmp639              #   Call between .Ltmp639 and .Ltmp642
	.uleb128 .Ltmp643-.Lfunc_begin14        #     jumps to .Ltmp643
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp644-.Lfunc_begin14        # >> Call Site 22 <<
	.uleb128 .Ltmp645-.Ltmp644              #   Call between .Ltmp644 and .Ltmp645
	.uleb128 .Ltmp646-.Lfunc_begin14        #     jumps to .Ltmp646
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp645-.Lfunc_begin14        # >> Call Site 23 <<
	.uleb128 .Ltmp647-.Ltmp645              #   Call between .Ltmp645 and .Ltmp647
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp647-.Lfunc_begin14        # >> Call Site 24 <<
	.uleb128 .Ltmp652-.Ltmp647              #   Call between .Ltmp647 and .Ltmp652
	.uleb128 .Ltmp653-.Lfunc_begin14        #     jumps to .Ltmp653
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp652-.Lfunc_begin14        # >> Call Site 25 <<
	.uleb128 .Ltmp659-.Ltmp652              #   Call between .Ltmp652 and .Ltmp659
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp659-.Lfunc_begin14        # >> Call Site 26 <<
	.uleb128 .Ltmp660-.Ltmp659              #   Call between .Ltmp659 and .Ltmp660
	.uleb128 .Ltmp661-.Lfunc_begin14        #     jumps to .Ltmp661
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp660-.Lfunc_begin14        # >> Call Site 27 <<
	.uleb128 .Ltmp662-.Ltmp660              #   Call between .Ltmp660 and .Ltmp662
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp662-.Lfunc_begin14        # >> Call Site 28 <<
	.uleb128 .Ltmp663-.Ltmp662              #   Call between .Ltmp662 and .Ltmp663
	.uleb128 .Ltmp664-.Lfunc_begin14        #     jumps to .Ltmp664
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp663-.Lfunc_begin14        # >> Call Site 29 <<
	.uleb128 .Ltmp665-.Ltmp663              #   Call between .Ltmp663 and .Ltmp665
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp665-.Lfunc_begin14        # >> Call Site 30 <<
	.uleb128 .Ltmp666-.Ltmp665              #   Call between .Ltmp665 and .Ltmp666
	.uleb128 .Ltmp667-.Lfunc_begin14        #     jumps to .Ltmp667
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp666-.Lfunc_begin14        # >> Call Site 31 <<
	.uleb128 .Ltmp671-.Ltmp666              #   Call between .Ltmp666 and .Ltmp671
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp671-.Lfunc_begin14        # >> Call Site 32 <<
	.uleb128 .Ltmp672-.Ltmp671              #   Call between .Ltmp671 and .Ltmp672
	.uleb128 .Ltmp673-.Lfunc_begin14        #     jumps to .Ltmp673
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp668-.Lfunc_begin14        # >> Call Site 33 <<
	.uleb128 .Ltmp669-.Ltmp668              #   Call between .Ltmp668 and .Ltmp669
	.uleb128 .Ltmp670-.Lfunc_begin14        #     jumps to .Ltmp670
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp654-.Lfunc_begin14        # >> Call Site 34 <<
	.uleb128 .Ltmp657-.Ltmp654              #   Call between .Ltmp654 and .Ltmp657
	.uleb128 .Ltmp658-.Lfunc_begin14        #     jumps to .Ltmp658
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp657-.Lfunc_begin14        # >> Call Site 35 <<
	.uleb128 .Lfunc_end30-.Ltmp657          #   Call between .Ltmp657 and .Lfunc_end30
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	2                               # -- Begin function _ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE
	.type	_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE,@function
_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE: # @_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	ld.d	$a5, $a1, 8
	ld.d	$s3, $a1, 0
	move	$s0, $a4
	move	$s1, $a3
	move	$s2, $a2
	ori	$a1, $zero, 16
	st.d	$a5, $sp, 16
	move	$a0, $s4
	bltu	$a5, $a1, .LBB31_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a5, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a5, $fp, 16
.LBB31_2:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a5, $a1, .LBB31_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a5, .LBB31_5
# %bb.4:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB31_6
.LBB31_5:
	addi.d	$a2, $a5, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB31_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 16
	st.d	$a0, $fp, 8
	st.d	$s2, $fp, 32
	st.d	$s1, $fp, 40
	st.d	$s0, $fp, 48
	addi.d	$s1, $fp, 56
.Ltmp674:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp675:                               # EH_LABEL
# %bb.7:
	addi.d	$a0, $fp, 448
.Ltmp677:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp678:                               # EH_LABEL
# %bb.8:
	ld.d	$a0, $fp, 48
	addi.d	$a1, $fp, 72
	st.d	$a1, $a0, 8
	addi.d	$a1, $fp, 464
	st.d	$a1, $a0, 16
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB31_9:
.Ltmp679:                               # EH_LABEL
	move	$s0, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	b	.LBB31_11
.LBB31_10:
.Ltmp676:                               # EH_LABEL
	move	$s0, $a0
.LBB31_11:
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB31_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB31_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end31:
	.size	_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE, .Lfunc_end31-_ZZ14RunOutputTestsiPPcEN12ReporterTestC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorI8TestCaseSaISB_EESE_RN9benchmark17BenchmarkReporterE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table31:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15  # >> Call Site 1 <<
	.uleb128 .Ltmp674-.Lfunc_begin15        #   Call between .Lfunc_begin15 and .Ltmp674
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp674-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp675-.Ltmp674              #   Call between .Ltmp674 and .Ltmp675
	.uleb128 .Ltmp676-.Lfunc_begin15        #     jumps to .Ltmp676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp677-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp678-.Ltmp677              #   Call between .Ltmp677 and .Ltmp678
	.uleb128 .Ltmp679-.Lfunc_begin15        #     jumps to .Ltmp679
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp678-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Lfunc_end31-.Ltmp678          #   Call between .Ltmp678 and .Lfunc_end31
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	2                               # -- Begin function _ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev
	.type	_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev,@function
_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev: # @_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	pcalau12i	$a1, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s5, $a1, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s1, $s5, 0
	move	$fp, $a0
	addi.d	$s7, $a0, 448
	st.d	$s1, $a0, 448
	ld.d	$s0, $s5, 64
	ld.d	$a0, $s1, -24
	ld.d	$s2, $s5, 72
	pcalau12i	$a1, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$s0, $s7, $a0
	ld.d	$a0, $fp, 544
	st.d	$s2, $fp, 464
	addi.d	$s3, $a1, 16
	addi.d	$a1, $fp, 560
	st.d	$s3, $fp, 472
	beq	$a0, $a1, .LBB32_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB32_2:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$s6, $a0, 16
	st.d	$s6, $fp, 472
	addi.d	$a0, $fp, 528
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s4, $s5, 16
	st.d	$s4, $fp, 448
	ld.d	$s5, $s5, 24
	ld.d	$a0, $s4, -24
	stx.d	$s5, $s7, $a0
	st.d	$zero, $fp, 456
	addi.d	$a0, $fp, 576
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	st.d	$s1, $fp, 56
	ld.d	$a1, $s1, -24
	addi.d	$s1, $fp, 56
	ld.d	$a0, $fp, 152
	stx.d	$s0, $s1, $a1
	st.d	$s2, $fp, 72
	addi.d	$a1, $fp, 168
	st.d	$s3, $fp, 80
	beq	$a0, $a1, .LBB32_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB32_4:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit3
	st.d	$s6, $fp, 80
	addi.d	$a0, $fp, 136
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	st.d	$s4, $fp, 56
	ld.d	$a0, $s4, -24
	stx.d	$s5, $s1, $a0
	st.d	$zero, $fp, 64
	addi.d	$a0, $fp, 184
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB32_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB32_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end32:
	.size	_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev, .Lfunc_end32-_ZZ14RunOutputTestsiPPcEN12ReporterTestD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.p2align	5
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$a4, $a1, 8
	ld.d	$a3, $a2, 8
	addi.w	$a5, $zero, -2
	lu52i.d	$a5, $a5, 2047
	sub.d	$a4, $a5, $a4
	bltu	$a4, $a3, .LBB33_5
# %bb.1:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit
	move	$fp, $a0
	ld.d	$a2, $a2, 0
	move	$a0, $a1
	move	$a1, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	ld.d	$a1, $s0, 0
	addi.d	$s1, $s0, 16
	beq	$a1, $s1, .LBB33_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $fp, 0
	ld.d	$a0, $s0, 16
	st.d	$a0, $fp, 16
	ld.d	$s2, $s0, 8
	b	.LBB33_4
.LBB33_3:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$s2, $s0, 8
	addi.d	$a2, $s2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB33_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	st.d	$s2, $fp, 8
	st.d	$s1, $s0, 0
	st.d	$zero, $s0, 8
	st.b	$zero, $s0, 16
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB33_5:
	pcalau12i	$a0, %pc_hi20(.L.str.275)
	addi.d	$a0, $a0, %pc_lo12(.L.str.275)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end33:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_, .Lfunc_end33-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	5                               # -- Begin function _ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.type	_ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	addi.d	$sp, $sp, -320
	.cfi_def_cfa_offset 320
	st.d	$ra, $sp, 312                   # 8-byte Folded Spill
	st.d	$fp, $sp, 304                   # 8-byte Folded Spill
	st.d	$s0, $sp, 296                   # 8-byte Folded Spill
	st.d	$s1, $sp, 288                   # 8-byte Folded Spill
	st.d	$s2, $sp, 280                   # 8-byte Folded Spill
	st.d	$s3, $sp, 272                   # 8-byte Folded Spill
	st.d	$s4, $sp, 264                   # 8-byte Folded Spill
	st.d	$s5, $sp, 256                   # 8-byte Folded Spill
	st.d	$s6, $sp, 248                   # 8-byte Folded Spill
	st.d	$s7, $sp, 240                   # 8-byte Folded Spill
	st.d	$s8, $sp, 232                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a0
	ld.d	$a2, $a0, 8
	ld.d	$a0, $a0, 0
	st.d	$zero, $sp, 112
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 96
	beq	$a2, $a0, .LBB34_92
# %bb.1:                                # %.lr.ph
	move	$s0, $a1
	move	$s6, $zero
	lu12i.w	$a1, -285976
	ori	$a1, $a1, 2979
	lu32i.d	$a1, -285976
	lu52i.d	$a1, $a1, 744
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s2, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s5, $a1, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ori	$fp, $zero, 1
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 64                   # 32-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(.L.str.287)
	addi.d	$a1, $a1, %pc_lo12(.L.str.287)
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(.L.str.1)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1)
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	addi.d	$a1, $a1, %pc_lo12(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(.L.str.288)
	addi.d	$a1, $a1, %pc_lo12(.L.str.288)
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(.L.str.289)
	addi.d	$a1, $a1, %pc_lo12(.L.str.289)
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 8                     # 8-byte Folded Spill
	b	.LBB34_4
.LBB34_2:                               #   in Loop: Header=BB34_4 Depth=1
.Ltmp784:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp785:                               # EH_LABEL
	.p2align	4, , 16
.LBB34_3:                               # %_ZNSt6vectorI8TestCaseSaIS0_EE9push_backERKS0_.exit
                                        #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a1, $s3, 8
	ld.d	$a0, $s3, 0
	addi.d	$s6, $s6, 1
	sub.d	$a1, $a1, $a0
	srli.d	$a1, $a1, 3
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	mul.d	$a1, $a1, $a2
	bgeu	$s6, $a1, .LBB34_92
.LBB34_4:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB34_10 Depth 2
                                        #       Child Loop BB34_22 Depth 3
	ori	$a1, $zero, 88
	mul.d	$a1, $s6, $a1
	add.d	$s1, $a0, $a1
	ld.w	$a0, $s1, 32
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB34_8
# %bb.5:                                #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a0, $sp, 104
	ld.d	$a1, $sp, 112
	beq	$a0, $a1, .LBB34_2
# %bb.6:                                #   in Loop: Header=BB34_4 Depth=1
.Ltmp782:                               # EH_LABEL
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN8TestCaseC2ERKS_)
	jirl	$ra, $ra, 0
.Ltmp783:                               # EH_LABEL
# %bb.7:                                # %.noexc
                                        #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a0, $sp, 104
	addi.d	$a0, $a0, 88
	st.d	$a0, $sp, 104
	b	.LBB34_3
	.p2align	4, , 16
.LBB34_8:                               #   in Loop: Header=BB34_4 Depth=1
	addi.d	$a0, $sp, 184
	st.d	$a0, $sp, 168
	st.d	$zero, $sp, 176
	st.b	$zero, $sp, 184
	addi.d	$a0, $sp, 152
	st.d	$a0, $sp, 136
	st.d	$zero, $sp, 144
	st.b	$zero, $sp, 152
	ori	$s4, $zero, 1
	b	.LBB34_10
	.p2align	4, , 16
.LBB34_9:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit132.i
                                        #   in Loop: Header=BB34_10 Depth=2
	move	$s4, $zero
	beq	$s3, $fp, .LBB34_108
.LBB34_10:                              #   Parent Loop BB34_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB34_22 Depth 3
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.wu	$a0, $a0, 32
	andi	$a1, $a0, 2
	bnez	$a1, .LBB34_98
# %bb.11:                               #   in Loop: Header=BB34_10 Depth=2
	bnez	$a0, .LBB34_95
# %bb.12:                               #   in Loop: Header=BB34_10 Depth=2
	ld.b	$a0, $s2, 0
	dbar	20
	beqz	$a0, .LBB34_83
.LBB34_13:                              #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s8, $a0, 240
	beqz	$s8, .LBB34_106
# %bb.14:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.bu	$a0, $s8, 56
	beqz	$a0, .LBB34_16
# %bb.15:                               #   in Loop: Header=BB34_10 Depth=2
	ld.bu	$a0, $s8, 67
	b	.LBB34_18
	.p2align	4, , 16
.LBB34_16:                              #   in Loop: Header=BB34_10 Depth=2
.Ltmp707:                               # EH_LABEL
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp708:                               # EH_LABEL
# %bb.17:                               # %.noexc64.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s8, 0
	ld.d	$a2, $a0, 48
.Ltmp709:                               # EH_LABEL
	ori	$a1, $zero, 10
	move	$a0, $s8
	jirl	$ra, $a2, 0
.Ltmp710:                               # EH_LABEL
.LBB34_18:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.i
                                        #   in Loop: Header=BB34_10 Depth=2
.Ltmp711:                               # EH_LABEL
	ext.w.b	$a2, $a0
	addi.d	$a1, $sp, 136
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_)
	jirl	$ra, $ra, 0
.Ltmp712:                               # EH_LABEL
# %bb.19:                               # %_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit.i
                                        #   in Loop: Header=BB34_10 Depth=2
	andi	$a0, $s4, 1
	beqz	$a0, .LBB34_21
# %bb.20:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp713:                               # EH_LABEL
	addi.d	$a0, $sp, 168
	addi.d	$a1, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp714:                               # EH_LABEL
.LBB34_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$s3, $sp, 96
	ld.d	$s4, $sp, 104
	beq	$s3, $s4, .LBB34_54
	.p2align	4, , 16
.LBB34_22:                              # %.lr.ph.i
                                        #   Parent Loop BB34_4 Depth=1
                                        #     Parent Loop BB34_10 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a1, $s3, 72
	ld.bu	$a0, $a1, 0
	bne	$a0, $fp, .LBB34_29
# %bb.23:                               #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $sp, 136
	ld.d	$a2, $sp, 144
	addi.d	$a3, $a1, 8
	add.d	$a1, $a0, $a2
	xvld	$xr0, $sp, 64                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 200
.Ltmp716:                               # EH_LABEL
	addi.d	$a2, $sp, 200
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb)
	jirl	$ra, $ra, 0
.Ltmp717:                               # EH_LABEL
# %bb.24:                               # %_ZSt12regex_searchIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS4_9sub_matchISA_EEEcNS4_12regex_traitsIcEEEbT_SG_RNS4_13match_resultsISG_T0_EERKNS4_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeE.exit.i.i.i71.i
                                        #   in Loop: Header=BB34_22 Depth=3
	move	$s8, $a0
	ld.d	$a0, $sp, 200
	beqz	$a0, .LBB34_26
# %bb.25:                               #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a1, $sp, 216
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB34_26:                              # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit76.i
                                        #   in Loop: Header=BB34_22 Depth=3
	beqz	$s8, .LBB34_29
# %bb.27:                               #   in Loop: Header=BB34_22 Depth=3
.Ltmp719:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.282)
	addi.d	$a1, $a0, %pc_lo12(.L.str.282)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	addi.d	$a0, $sp, 128
	ori	$a4, $zero, 109
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp720:                               # EH_LABEL
# %bb.28:                               #   in Loop: Header=BB34_22 Depth=3
	ld.d	$s7, $sp, 128
	ori	$s8, $zero, 1
	ld.d	$a0, $s7, 0
	bnez	$a0, .LBB34_31
	b	.LBB34_50
	.p2align	4, , 16
.LBB34_29:                              # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit76.thread.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.b	$a0, $s2, 0
	dbar	20
	beqz	$a0, .LBB34_52
.LBB34_30:                              #   in Loop: Header=BB34_22 Depth=3
	move	$s8, $zero
	move	$s7, $s5
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
.LBB34_31:                              #   in Loop: Header=BB34_22 Depth=3
.Ltmp722:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.283)
	addi.d	$a1, $a1, %pc_lo12(.L.str.283)
	ori	$a2, $zero, 27
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp723:                               # EH_LABEL
# %bb.32:                               # %_ZN9benchmark8internallsIA28_cEERNS0_7LogTypeES4_RKT_.exit.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.33:                               #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a1, $sp, 136
	ld.d	$a2, $sp, 144
.Ltmp724:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp725:                               # EH_LABEL
# %bb.34:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.35:                               #   in Loop: Header=BB34_22 Depth=3
.Ltmp726:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.284)
	addi.d	$a1, $a1, %pc_lo12(.L.str.284)
	ori	$a2, $zero, 20
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp727:                               # EH_LABEL
# %bb.36:                               # %_ZN9benchmark8internallsIA21_cEERNS0_7LogTypeES4_RKT_.exit.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.37:                               #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a1, $s3, 0
	ld.d	$a2, $s3, 8
.Ltmp728:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp729:                               # EH_LABEL
# %bb.38:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit87.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.39:                               #   in Loop: Header=BB34_22 Depth=3
.Ltmp730:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.32)
	addi.d	$a1, $a1, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp731:                               # EH_LABEL
# %bb.40:                               # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.41:                               #   in Loop: Header=BB34_22 Depth=3
.Ltmp732:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.285)
	addi.d	$a1, $a1, %pc_lo12(.L.str.285)
	ori	$a2, $zero, 26
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp733:                               # EH_LABEL
# %bb.42:                               # %_ZN9benchmark8internallsIA27_cEERNS0_7LogTypeES4_RKT_.exit.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.43:                               #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a1, $s1, 40
	ld.d	$a2, $s1, 48
.Ltmp734:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp735:                               # EH_LABEL
# %bb.44:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit94.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.45:                               #   in Loop: Header=BB34_22 Depth=3
.Ltmp736:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.32)
	addi.d	$a1, $a1, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp737:                               # EH_LABEL
# %bb.46:                               # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit97.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.47:                               #   in Loop: Header=BB34_22 Depth=3
.Ltmp738:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.286)
	addi.d	$a1, $a1, %pc_lo12(.L.str.286)
	ori	$a2, $zero, 28
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp739:                               # EH_LABEL
# %bb.48:                               # %_ZN9benchmark8internallsIA29_cEERNS0_7LogTypeES4_RKT_.exit.i
                                        #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a0, $s7, 0
	beqz	$a0, .LBB34_50
# %bb.49:                               #   in Loop: Header=BB34_22 Depth=3
	ld.d	$a1, $sp, 168
	ld.d	$a2, $sp, 176
.Ltmp740:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp741:                               # EH_LABEL
	.p2align	4, , 16
.LBB34_50:                              # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit102.i
                                        #   in Loop: Header=BB34_22 Depth=3
	bnez	$s8, .LBB34_93
# %bb.51:                               #   in Loop: Header=BB34_22 Depth=3
	addi.d	$s3, $s3, 88
	bne	$s3, $s4, .LBB34_22
	b	.LBB34_54
.LBB34_52:                              #   in Loop: Header=BB34_22 Depth=3
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB34_30
# %bb.53:                               #   in Loop: Header=BB34_22 Depth=3
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s7, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $s7, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$s8, $zero
	ld.d	$a0, $s7, 0
	bnez	$a0, .LBB34_31
	b	.LBB34_50
	.p2align	4, , 16
.LBB34_54:                              # %._crit_edge.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a1, $s1, 72
	ld.bu	$a0, $a1, 0
	bne	$a0, $fp, .LBB34_59
# %bb.55:                               #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $sp, 136
	ld.d	$a2, $sp, 144
	addi.d	$a3, $a1, 8
	add.d	$a1, $a0, $a2
	xvld	$xr0, $sp, 64                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 200
.Ltmp746:                               # EH_LABEL
	addi.d	$a2, $sp, 200
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb)
	jirl	$ra, $ra, 0
.Ltmp747:                               # EH_LABEL
# %bb.56:                               # %_ZSt12regex_searchIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS4_9sub_matchISA_EEEcNS4_12regex_traitsIcEEEbT_SG_RNS4_13match_resultsISG_T0_EERKNS4_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeE.exit.i.i.i.i
                                        #   in Loop: Header=BB34_10 Depth=2
	move	$s8, $a0
	ld.d	$a0, $sp, 200
	beqz	$a0, .LBB34_58
# %bb.57:                               #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a1, $sp, 216
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB34_58:                              # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit.i
                                        #   in Loop: Header=BB34_10 Depth=2
	bnez	$s8, .LBB34_87
.LBB34_59:                              # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit.thread.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.w	$s3, $s1, 32
	bne	$s3, $fp, .LBB34_62
# %bb.60:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp749:                               # EH_LABEL
	addi.d	$a0, $sp, 120
	ori	$a4, $zero, 116
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp750:                               # EH_LABEL
# %bb.61:                               #   in Loop: Header=BB34_10 Depth=2
	ld.d	$s4, $sp, 120
	b	.LBB34_63
	.p2align	4, , 16
.LBB34_62:                              #   in Loop: Header=BB34_10 Depth=2
	ld.b	$a0, $s2, 0
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s4, $a1, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	beqz	$a0, .LBB34_85
.LBB34_63:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit104.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.64:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp752:                               # EH_LABEL
	ori	$a2, $zero, 15
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp753:                               # EH_LABEL
# %bb.65:                               # %_ZN9benchmark8internallsIA16_cEERNS0_7LogTypeES4_RKT_.exit.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.66:                               #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a1, $sp, 136
	ld.d	$a2, $sp, 144
.Ltmp754:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp755:                               # EH_LABEL
# %bb.67:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit109.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.68:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp756:                               # EH_LABEL
	ori	$a2, $zero, 18
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp757:                               # EH_LABEL
# %bb.69:                               # %_ZN9benchmark8internallsIA19_cEERNS0_7LogTypeES4_RKT_.exit.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.70:                               #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a1, $s1, 0
	ld.d	$a2, $s1, 8
.Ltmp758:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp759:                               # EH_LABEL
# %bb.71:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit114.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.72:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp760:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.32)
	addi.d	$a1, $a1, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp761:                               # EH_LABEL
# %bb.73:                               # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit117.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.74:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp762:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.285)
	addi.d	$a1, $a1, %pc_lo12(.L.str.285)
	ori	$a2, $zero, 26
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp763:                               # EH_LABEL
# %bb.75:                               # %_ZN9benchmark8internallsIA27_cEERNS0_7LogTypeES4_RKT_.exit120.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.76:                               #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a1, $s1, 40
	ld.d	$a2, $s1, 48
.Ltmp764:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp765:                               # EH_LABEL
# %bb.77:                               # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit123.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.78:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp766:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.32)
	addi.d	$a1, $a1, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp767:                               # EH_LABEL
# %bb.79:                               # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit126.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.80:                               #   in Loop: Header=BB34_10 Depth=2
.Ltmp768:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.286)
	addi.d	$a1, $a1, %pc_lo12(.L.str.286)
	ori	$a2, $zero, 28
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp769:                               # EH_LABEL
# %bb.81:                               # %_ZN9benchmark8internallsIA29_cEERNS0_7LogTypeES4_RKT_.exit129.i
                                        #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a0, $s4, 0
	beqz	$a0, .LBB34_9
# %bb.82:                               #   in Loop: Header=BB34_10 Depth=2
	ld.d	$a1, $sp, 168
	ld.d	$a2, $sp, 176
.Ltmp770:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp771:                               # EH_LABEL
	b	.LBB34_9
.LBB34_83:                              #   in Loop: Header=BB34_10 Depth=2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB34_13
# %bb.84:                               #   in Loop: Header=BB34_10 Depth=2
	st.d	$zero, $s5, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB34_13
.LBB34_85:                              #   in Loop: Header=BB34_10 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB34_63
# %bb.86:                               #   in Loop: Header=BB34_10 Depth=2
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s4, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $s4, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB34_63
	.p2align	4, , 16
.LBB34_87:                              #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB34_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB34_89:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
                                        #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a0, $sp, 168
	addi.d	$a1, $sp, 184
	ld.d	$s3, $sp, 8                     # 8-byte Folded Reload
	beq	$a0, $a1, .LBB34_91
# %bb.90:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i157.i
                                        #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a1, $sp, 184
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB34_91:                              #   in Loop: Header=BB34_4 Depth=1
	ld.d	$a1, $sp, 96
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_)
	jirl	$ra, $ra, 0
	b	.LBB34_3
.LBB34_92:                              # %._crit_edge
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 296                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 304                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 312                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 320
	ret
.LBB34_93:
.Ltmp743:                               # EH_LABEL
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp744:                               # EH_LABEL
# %bb.94:
.LBB34_95:
.Ltmp702:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.281)
	addi.d	$a1, $a0, %pc_lo12(.L.str.281)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	addi.d	$a0, $sp, 200
	ori	$a4, $zero, 102
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp703:                               # EH_LABEL
# %bb.96:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit.i
.Ltmp704:                               # EH_LABEL
	addi.d	$a0, $sp, 200
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp705:                               # EH_LABEL
# %bb.97:
.LBB34_98:
.Ltmp680:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.290)
	addi.d	$a1, $a0, %pc_lo12(.L.str.290)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	addi.d	$a3, $a0, %pc_lo12(.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE)
	addi.d	$a0, $sp, 200
	ori	$a4, $zero, 122
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp681:                               # EH_LABEL
# %bb.99:
	ld.d	$fp, $sp, 200
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB34_104
# %bb.100:
.Ltmp682:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.291)
	addi.d	$a1, $a1, %pc_lo12(.L.str.291)
	ori	$a2, $zero, 46
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp683:                               # EH_LABEL
# %bb.101:                              # %_ZN9benchmark8internallsIA47_cEERNS0_7LogTypeES4_RKT_.exit.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB34_104
# %bb.102:
	ld.d	$a1, $s1, 0
	ld.d	$a2, $s1, 8
.Ltmp684:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp685:                               # EH_LABEL
# %bb.103:                              # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit139.i
	ld.d	$a0, $fp, 0
	bnez	$a0, .LBB34_110
.LBB34_104:                             # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit156.i
.Ltmp699:                               # EH_LABEL
	addi.d	$a0, $sp, 200
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp700:                               # EH_LABEL
# %bb.105:
.LBB34_106:
.Ltmp779:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp780:                               # EH_LABEL
# %bb.107:                              # %.noexc.i
.LBB34_108:
.Ltmp776:                               # EH_LABEL
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp777:                               # EH_LABEL
# %bb.109:
.LBB34_110:
.Ltmp686:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.292)
	addi.d	$a1, $a1, %pc_lo12(.L.str.292)
	ori	$a2, $zero, 11
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp687:                               # EH_LABEL
# %bb.111:                              # %_ZN9benchmark8internallsIA12_cEERNS0_7LogTypeES4_RKT_.exit.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB34_104
# %bb.112:
.Ltmp688:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.285)
	addi.d	$a1, $a1, %pc_lo12(.L.str.285)
	ori	$a2, $zero, 26
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp689:                               # EH_LABEL
# %bb.113:                              # %_ZN9benchmark8internallsIA27_cEERNS0_7LogTypeES4_RKT_.exit144.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB34_104
# %bb.114:
	ld.d	$a1, $s1, 40
	ld.d	$a2, $s1, 48
.Ltmp690:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp691:                               # EH_LABEL
# %bb.115:                              # %_ZN9benchmark8internallsINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNS0_7LogTypeES9_RKT_.exit147.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB34_104
# %bb.116:
.Ltmp692:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.32)
	addi.d	$a1, $a1, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp693:                               # EH_LABEL
# %bb.117:                              # %_ZN9benchmark8internallsIA2_cEERNS0_7LogTypeES4_RKT_.exit150.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB34_104
# %bb.118:
.Ltmp694:                               # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.286)
	addi.d	$a1, $a1, %pc_lo12(.L.str.286)
	ori	$a2, $zero, 28
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp695:                               # EH_LABEL
# %bb.119:                              # %_ZN9benchmark8internallsIA29_cEERNS0_7LogTypeES4_RKT_.exit153.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB34_104
# %bb.120:
	ld.d	$a1, $sp, 168
	ld.d	$a2, $sp, 176
.Ltmp696:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp697:                               # EH_LABEL
	b	.LBB34_104
.LBB34_121:
.Ltmp786:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB34_122:
.Ltmp698:                               # EH_LABEL
	addi.d	$a0, $sp, 200
	b	.LBB34_138
.LBB34_123:                             # %.loopexit330.i
.Ltmp751:                               # EH_LABEL
	b	.LBB34_136
.LBB34_124:
.Ltmp748:                               # EH_LABEL
	b	.LBB34_133
.LBB34_125:
.Ltmp701:                               # EH_LABEL
	b	.LBB34_136
.LBB34_126:                             # %.loopexit.split-lp331.i
.Ltmp778:                               # EH_LABEL
	b	.LBB34_136
.LBB34_127:                             # %.loopexit.split-lp326.i
.Ltmp781:                               # EH_LABEL
	b	.LBB34_136
.LBB34_128:
.Ltmp706:                               # EH_LABEL
	b	.LBB34_136
.LBB34_129:
.Ltmp772:                               # EH_LABEL
	move	$fp, $a0
	ori	$a1, $zero, 1
	addi.d	$a0, $sp, 120
	beq	$s3, $a1, .LBB34_138
	b	.LBB34_140
.LBB34_130:                             # %.loopexit325.i
.Ltmp715:                               # EH_LABEL
	b	.LBB34_136
.LBB34_131:                             # %.loopexit.i
.Ltmp721:                               # EH_LABEL
	b	.LBB34_136
.LBB34_132:
.Ltmp718:                               # EH_LABEL
.LBB34_133:
	ld.d	$a2, $sp, 200
	move	$fp, $a0
	beqz	$a2, .LBB34_140
# %bb.134:
	ld.d	$a0, $sp, 216
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB34_140
.LBB34_135:                             # %.loopexit.split-lp.i
.Ltmp745:                               # EH_LABEL
.LBB34_136:                             # %.body.i
	move	$fp, $a0
	b	.LBB34_140
.LBB34_137:
.Ltmp742:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 128
	beqz	$s8, .LBB34_140
.LBB34_138:                             # %.invoke.i
.Ltmp773:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp774:                               # EH_LABEL
# %bb.139:                              # %.cont.i
.LBB34_140:                             # %.body.i
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	bne	$a0, $a1, .LBB34_143
# %bb.141:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit162.i
	ld.d	$a0, $sp, 168
	addi.d	$a1, $sp, 184
	bne	$a0, $a1, .LBB34_144
.LBB34_142:                             # %.body
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB34_143:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i160.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 168
	addi.d	$a1, $sp, 184
	beq	$a0, $a1, .LBB34_142
.LBB34_144:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i163.i
	ld.d	$a1, $sp, 184
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB34_145:
.Ltmp775:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end34:
	.size	_ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end34-_ZN8internal12_GLOBAL__N_110CheckCasesERKSt6vectorI8TestCaseSaIS2_EERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table34:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Ltmp784-.Lfunc_begin16        # >> Call Site 1 <<
	.uleb128 .Ltmp783-.Ltmp784              #   Call between .Ltmp784 and .Ltmp783
	.uleb128 .Ltmp786-.Lfunc_begin16        #     jumps to .Ltmp786
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp707-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp714-.Ltmp707              #   Call between .Ltmp707 and .Ltmp714
	.uleb128 .Ltmp715-.Lfunc_begin16        #     jumps to .Ltmp715
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp716-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Ltmp717-.Ltmp716              #   Call between .Ltmp716 and .Ltmp717
	.uleb128 .Ltmp718-.Lfunc_begin16        #     jumps to .Ltmp718
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp717-.Lfunc_begin16        # >> Call Site 4 <<
	.uleb128 .Ltmp719-.Ltmp717              #   Call between .Ltmp717 and .Ltmp719
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp719-.Lfunc_begin16        # >> Call Site 5 <<
	.uleb128 .Ltmp720-.Ltmp719              #   Call between .Ltmp719 and .Ltmp720
	.uleb128 .Ltmp721-.Lfunc_begin16        #     jumps to .Ltmp721
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp722-.Lfunc_begin16        # >> Call Site 6 <<
	.uleb128 .Ltmp741-.Ltmp722              #   Call between .Ltmp722 and .Ltmp741
	.uleb128 .Ltmp742-.Lfunc_begin16        #     jumps to .Ltmp742
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp741-.Lfunc_begin16        # >> Call Site 7 <<
	.uleb128 .Ltmp746-.Ltmp741              #   Call between .Ltmp741 and .Ltmp746
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp746-.Lfunc_begin16        # >> Call Site 8 <<
	.uleb128 .Ltmp747-.Ltmp746              #   Call between .Ltmp746 and .Ltmp747
	.uleb128 .Ltmp748-.Lfunc_begin16        #     jumps to .Ltmp748
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp747-.Lfunc_begin16        # >> Call Site 9 <<
	.uleb128 .Ltmp749-.Ltmp747              #   Call between .Ltmp747 and .Ltmp749
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp749-.Lfunc_begin16        # >> Call Site 10 <<
	.uleb128 .Ltmp750-.Ltmp749              #   Call between .Ltmp749 and .Ltmp750
	.uleb128 .Ltmp751-.Lfunc_begin16        #     jumps to .Ltmp751
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp752-.Lfunc_begin16        # >> Call Site 11 <<
	.uleb128 .Ltmp771-.Ltmp752              #   Call between .Ltmp752 and .Ltmp771
	.uleb128 .Ltmp772-.Lfunc_begin16        #     jumps to .Ltmp772
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp771-.Lfunc_begin16        # >> Call Site 12 <<
	.uleb128 .Ltmp743-.Ltmp771              #   Call between .Ltmp771 and .Ltmp743
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp743-.Lfunc_begin16        # >> Call Site 13 <<
	.uleb128 .Ltmp744-.Ltmp743              #   Call between .Ltmp743 and .Ltmp744
	.uleb128 .Ltmp745-.Lfunc_begin16        #     jumps to .Ltmp745
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp702-.Lfunc_begin16        # >> Call Site 14 <<
	.uleb128 .Ltmp705-.Ltmp702              #   Call between .Ltmp702 and .Ltmp705
	.uleb128 .Ltmp706-.Lfunc_begin16        #     jumps to .Ltmp706
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp680-.Lfunc_begin16        # >> Call Site 15 <<
	.uleb128 .Ltmp681-.Ltmp680              #   Call between .Ltmp680 and .Ltmp681
	.uleb128 .Ltmp701-.Lfunc_begin16        #     jumps to .Ltmp701
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp682-.Lfunc_begin16        # >> Call Site 16 <<
	.uleb128 .Ltmp685-.Ltmp682              #   Call between .Ltmp682 and .Ltmp685
	.uleb128 .Ltmp698-.Lfunc_begin16        #     jumps to .Ltmp698
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp699-.Lfunc_begin16        # >> Call Site 17 <<
	.uleb128 .Ltmp700-.Ltmp699              #   Call between .Ltmp699 and .Ltmp700
	.uleb128 .Ltmp701-.Lfunc_begin16        #     jumps to .Ltmp701
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp779-.Lfunc_begin16        # >> Call Site 18 <<
	.uleb128 .Ltmp780-.Ltmp779              #   Call between .Ltmp779 and .Ltmp780
	.uleb128 .Ltmp781-.Lfunc_begin16        #     jumps to .Ltmp781
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp776-.Lfunc_begin16        # >> Call Site 19 <<
	.uleb128 .Ltmp777-.Ltmp776              #   Call between .Ltmp776 and .Ltmp777
	.uleb128 .Ltmp778-.Lfunc_begin16        #     jumps to .Ltmp778
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp686-.Lfunc_begin16        # >> Call Site 20 <<
	.uleb128 .Ltmp697-.Ltmp686              #   Call between .Ltmp686 and .Ltmp697
	.uleb128 .Ltmp698-.Lfunc_begin16        #     jumps to .Ltmp698
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp697-.Lfunc_begin16        # >> Call Site 21 <<
	.uleb128 .Ltmp773-.Ltmp697              #   Call between .Ltmp697 and .Ltmp773
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp773-.Lfunc_begin16        # >> Call Site 22 <<
	.uleb128 .Ltmp774-.Ltmp773              #   Call between .Ltmp773 and .Ltmp774
	.uleb128 .Ltmp775-.Lfunc_begin16        #     jumps to .Ltmp775
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp774-.Lfunc_begin16        # >> Call Site 23 <<
	.uleb128 .Lfunc_end34-.Ltmp774          #   Call between .Ltmp774 and .Lfunc_end34
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	2                               # -- Begin function _ZN8internal12_GLOBAL__N_112TestReporterD2Ev
	.type	_ZN8internal12_GLOBAL__N_112TestReporterD2Ev,@function
_ZN8internal12_GLOBAL__N_112TestReporterD2Ev: # @_ZN8internal12_GLOBAL__N_112TestReporterD2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 24
	pcalau12i	$a1, %pc_hi20(_ZTVN8internal12_GLOBAL__N_112TestReporterE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN8internal12_GLOBAL__N_112TestReporterE+16)
	st.d	$a1, $a0, 0
	beqz	$a2, .LBB35_2
# %bb.1:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$a1, $a0, 40
	sub.d	$a1, $a1, $a2
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB35_2:                               # %_ZNSt6vectorIPN9benchmark17BenchmarkReporterESaIS2_EED2Ev.exit
	pcaddu18i	$t8, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jr	$t8
.Lfunc_end35:
	.size	_ZN8internal12_GLOBAL__N_112TestReporterD2Ev, .Lfunc_end35-_ZN8internal12_GLOBAL__N_112TestReporterD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark11CSVReporterD2Ev,"axG",@progbits,_ZN9benchmark11CSVReporterD2Ev,comdat
	.hidden	_ZN9benchmark11CSVReporterD2Ev  # -- Begin function _ZN9benchmark11CSVReporterD2Ev
	.weak	_ZN9benchmark11CSVReporterD2Ev
	.p2align	2
	.type	_ZN9benchmark11CSVReporterD2Ev,@function
_ZN9benchmark11CSVReporterD2Ev:         # @_ZN9benchmark11CSVReporterD2Ev
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	pcalau12i	$a1, %got_pc_hi20(_ZTVN9benchmark11CSVReporterE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTVN9benchmark11CSVReporterE)
	move	$fp, $a0
	ld.d	$a1, $a0, 48
	addi.d	$a0, $a2, 16
	st.d	$a0, $fp, 0
	addi.d	$a0, $fp, 32
.Ltmp787:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E)
	jirl	$ra, $ra, 0
.Ltmp788:                               # EH_LABEL
# %bb.1:                                # %_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED2Ev.exit
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jr	$t8
.LBB36_2:
.Ltmp789:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end36:
	.size	_ZN9benchmark11CSVReporterD2Ev, .Lfunc_end36-_ZN9benchmark11CSVReporterD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN9benchmark11CSVReporterD2Ev,"aG",@progbits,_ZN9benchmark11CSVReporterD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table36:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Ltmp787-.Lfunc_begin17        # >> Call Site 1 <<
	.uleb128 .Ltmp788-.Ltmp787              #   Call between .Ltmp787 and .Ltmp788
	.uleb128 .Ltmp789-.Lfunc_begin17        #     jumps to .Ltmp789
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp788-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Lfunc_end36-.Ltmp788          #   Call between .Ltmp788 and .Lfunc_end36
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark15ConsoleReporterD2Ev,"axG",@progbits,_ZN9benchmark15ConsoleReporterD2Ev,comdat
	.hidden	_ZN9benchmark15ConsoleReporterD2Ev # -- Begin function _ZN9benchmark15ConsoleReporterD2Ev
	.weak	_ZN9benchmark15ConsoleReporterD2Ev
	.p2align	2
	.type	_ZN9benchmark15ConsoleReporterD2Ev,@function
_ZN9benchmark15ConsoleReporterD2Ev:     # @_ZN9benchmark15ConsoleReporterD2Ev
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	pcalau12i	$a1, %got_pc_hi20(_ZTVN9benchmark15ConsoleReporterE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTVN9benchmark15ConsoleReporterE)
	move	$fp, $a0
	ld.d	$a1, $a0, 56
	addi.d	$a0, $a2, 16
	st.d	$a0, $fp, 0
	addi.d	$a0, $fp, 40
.Ltmp790:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp791:                               # EH_LABEL
# %bb.1:                                # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev.exit
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jr	$t8
.LBB37_2:
.Ltmp792:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end37:
	.size	_ZN9benchmark15ConsoleReporterD2Ev, .Lfunc_end37-_ZN9benchmark15ConsoleReporterD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN9benchmark15ConsoleReporterD2Ev,"aG",@progbits,_ZN9benchmark15ConsoleReporterD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table37:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Ltmp790-.Lfunc_begin18        # >> Call Site 1 <<
	.uleb128 .Ltmp791-.Ltmp790              #   Call between .Ltmp790 and .Ltmp791
	.uleb128 .Ltmp792-.Lfunc_begin18        #     jumps to .Ltmp792
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp791-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Lfunc_end37-.Ltmp791          #   Call between .Ltmp791 and .Lfunc_end37
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ # -- Begin function _Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.globl	_Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.p2align	5
	.type	_Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_,@function
_Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_: # @_Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$a3, $a1, 8
	beqz	$a3, .LBB38_3
# %bb.1:
	move	$fp, $a1
	move	$s0, $a0
	ld.d	$a1, $a1, 0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	move	$s1, $zero
	addi.w	$s2, $zero, -1
	beq	$a0, $s2, .LBB38_4
	.p2align	4, , 16
.LBB38_2:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $fp, 8
	ld.d	$a1, $fp, 0
	addi.w	$s1, $s1, 1
	add.d	$a2, $a3, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	bne	$a0, $s2, .LBB38_2
	b	.LBB38_4
.LBB38_3:
	move	$s1, $zero
.LBB38_4:                               # %.loopexit
	move	$a0, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end38:
	.size	_Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_, .Lfunc_end38-_Z9SubstrCntRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_
	.cfi_endproc
                                        # -- End function
	.hidden	_Z21GetFileReporterOutputB5cxx11iPPc # -- Begin function _Z21GetFileReporterOutputB5cxx11iPPc
	.globl	_Z21GetFileReporterOutputB5cxx11iPPc
	.p2align	5
	.type	_Z21GetFileReporterOutputB5cxx11iPPc,@function
_Z21GetFileReporterOutputB5cxx11iPPc:   # @_Z21GetFileReporterOutputB5cxx11iPPc
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:
	addi.d	$sp, $sp, -2032
	.cfi_def_cfa_offset 2032
	st.d	$ra, $sp, 2024                  # 8-byte Folded Spill
	st.d	$fp, $sp, 2016                  # 8-byte Folded Spill
	st.d	$s0, $sp, 2008                  # 8-byte Folded Spill
	st.d	$s1, $sp, 2000                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1992                  # 8-byte Folded Spill
	st.d	$s3, $sp, 1984                  # 8-byte Folded Spill
	st.d	$s4, $sp, 1976                  # 8-byte Folded Spill
	st.d	$s5, $sp, 1968                  # 8-byte Folded Spill
	st.d	$s6, $sp, 1960                  # 8-byte Folded Spill
	st.d	$s7, $sp, 1952                  # 8-byte Folded Spill
	st.d	$s8, $sp, 1944                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	addi.d	$sp, $sp, -2048
	addi.d	$sp, $sp, -1184
	.cfi_def_cfa_offset 5264
	move	$s1, $a1
	slli.d	$fp, $a1, 3
	addi.w	$a1, $zero, -7
	lu52i.d	$a1, $a1, 2047
	st.w	$s1, $sp, 172
	bgeu	$fp, $a1, .LBB39_71
# %bb.1:                                # %_ZNSt6vectorIPcSaIS0_EE17_S_check_init_lenEmRKS1_.exit.i.i.i
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	beqz	$s1, .LBB39_3
# %bb.2:                                # %.noexc5.i
	move	$s3, $a2
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	add.d	$s2, $a0, $fp
	move	$a1, $s3
	move	$a2, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	move	$fp, $s2
	b	.LBB39_4
.LBB39_3:                               # %_ZNSt12_Vector_baseIPcSaIS0_EE11_M_allocateEm.exit.i.thread.i.i
	move	$s0, $zero
	move	$s2, $zero
.LBB39_4:                               # %_ZNSt6vectorIPcSaIS0_EEC2IPS0_vEET_S5_RKS1_.exit
	st.d	$fp, $sp, 88                    # 8-byte Folded Spill
	st.d	$s0, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	sub.d	$a0, $s2, $s0
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	srai.d	$a0, $a0, 3
	st.d	$s1, $sp, 40                    # 8-byte Folded Spill
	bne	$a0, $s1, .LBB39_72
# %bb.5:
	pcalau12i	$a0, %pc_hi20(.L.str.294)
	addi.d	$a0, $a0, %pc_lo12(.L.str.294)
	ld.d	$a1, $a0, 0
	ld.w	$a2, $a0, 7
	addi.d	$a0, $sp, 152
	st.d	$a0, $sp, 136
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	st.d	$a1, $sp, 152
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	st.w	$a2, $sp, 159
	ori	$a0, $zero, 11
	st.d	$a0, $sp, 144
	st.b	$zero, $sp, 163
	ori	$s1, $zero, 16
	addi.d	$s0, $sp, 136
	ori	$fp, $zero, 37
	pcalau12i	$a0, %pc_hi20(_ZGVZL13RandomHexCharvE2rd)
	addi.d	$s4, $a0, %pc_lo12(_ZGVZL13RandomHexCharvE2rd)
	pcalau12i	$a0, %pc_hi20(_ZZL13RandomHexCharvE2rd)
	addi.d	$s5, $a0, %pc_lo12(_ZZL13RandomHexCharvE2rd)
	addi.d	$a0, $s5, 8
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, 442488
	ori	$a0, $a0, 2405
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(_ZGVZL13RandomHexCharvE5mrand)
	addi.d	$s6, $a0, %pc_lo12(_ZGVZL13RandomHexCharvE5mrand)
	pcalau12i	$a0, %pc_hi20(_ZZL13RandomHexCharvE5mrand)
	addi.d	$s7, $a0, %pc_lo12(_ZZL13RandomHexCharvE5mrand)
	ori	$a0, $zero, 0
	lu32i.d	$a0, 15
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	ori	$s8, $zero, 87
	ori	$s3, $zero, 48
	ori	$s2, $zero, 27
	b	.LBB39_7
	.p2align	4, , 16
.LBB39_6:                               #   in Loop: Header=BB39_7 Depth=1
	addi.d	$s1, $s1, 1
	beq	$s1, $s2, .LBB39_21
.LBB39_7:                               # %.lr.ph.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB39_16 Depth 2
	ldx.bu	$a0, $s1, $s0
	bne	$a0, $fp, .LBB39_6
# %bb.8:                                #   in Loop: Header=BB39_7 Depth=1
	ld.b	$a0, $s4, 0
	dbar	20
	beqz	$a0, .LBB39_12
.LBB39_9:                               #   in Loop: Header=BB39_7 Depth=1
	ld.b	$a0, $s6, 0
	dbar	20
	beqz	$a0, .LBB39_19
.LBB39_10:                              #   in Loop: Header=BB39_7 Depth=1
.Ltmp802:                               # EH_LABEL
	move	$a0, $s7
	move	$a1, $s5
	move	$a2, $s7
	pcaddu18i	$ra, %call36(_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE)
	jirl	$ra, $ra, 0
.Ltmp803:                               # EH_LABEL
# %bb.11:                               #   in Loop: Header=BB39_7 Depth=1
	slti	$a1, $a0, 10
	masknez	$a2, $s8, $a1
	maskeqz	$a1, $s3, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	stx.b	$a0, $s1, $s0
	b	.LBB39_6
.LBB39_12:                              #   in Loop: Header=BB39_7 Depth=1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB39_9
# %bb.13:                               #   in Loop: Header=BB39_7 Depth=1
.Ltmp793:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt13random_deviceC2Ev)
	jirl	$ra, $ra, 0
.Ltmp794:                               # EH_LABEL
# %bb.14:                               #   in Loop: Header=BB39_7 Depth=1
.Ltmp796:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt13random_device9_M_getvalEv)
	jirl	$ra, $ra, 0
.Ltmp797:                               # EH_LABEL
# %bb.15:                               # %_ZNSt13random_deviceclEv.exit.i.i.i
                                        #   in Loop: Header=BB39_7 Depth=1
	bstrpick.d	$a2, $a0, 31, 0
	st.d	$a2, $s5, 0
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 32                    # 8-byte Folded Reload
	ori	$a5, $zero, 624
.LBB39_16:                              #   Parent Loop BB39_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	srli.d	$a3, $a2, 30
	xor	$a2, $a3, $a2
	mul.d	$a2, $a2, $a4
	add.d	$a2, $a0, $a2
	bstrpick.d	$a2, $a2, 31, 0
	st.d	$a2, $a1, 0
	addi.d	$a0, $a0, 1
	addi.d	$a1, $a1, 8
	bne	$a0, $a5, .LBB39_16
# %bb.17:                               #   in Loop: Header=BB39_7 Depth=1
	stptr.d	$a5, $s5, 4992
.Ltmp799:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt13random_device7_M_finiEv)
	jirl	$ra, $ra, 0
.Ltmp800:                               # EH_LABEL
# %bb.18:                               # %_ZNSt13random_deviceD2Ev.exit.i.i.i
                                        #   in Loop: Header=BB39_7 Depth=1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB39_9
.LBB39_19:                              #   in Loop: Header=BB39_7 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB39_10
# %bb.20:                               #   in Loop: Header=BB39_7 Depth=1
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.d	$a0, $s7, 0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB39_10
.LBB39_21:                              # %_ZL17GetRandomFileNameB5cxx11v.exit.i
	ld.d	$a1, $sp, 136
.Ltmp805:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	ori	$a2, $zero, 8
	addi.d	$fp, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode)
	jirl	$ra, $ra, 0
.Ltmp806:                               # EH_LABEL
# %bb.22:
	ld.d	$a0, $sp, 176
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.w	$fp, $a0, 32
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	bnez	$fp, .LBB39_43
# %bb.23:
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB39_25
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9.i
	addi.d	$a0, $sp, 152
	st.d	$a0, $sp, 136
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	st.d	$a1, $a0, 0
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	st.w	$a1, $a0, 7
	ori	$a0, $zero, 11
	st.d	$a0, $sp, 144
	st.b	$zero, $sp, 163
	ori	$fp, $zero, 16
	addi.d	$s0, $sp, 136
	ori	$s1, $zero, 37
	addi.d	$a0, $s5, 8
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	ori	$a0, $zero, 0
	lu32i.d	$a0, 15
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	ori	$s2, $zero, 87
	ori	$s3, $zero, 48
	ori	$s8, $zero, 27
	b	.LBB39_28
	.p2align	4, , 16
.LBB39_26:                              #   in Loop: Header=BB39_28 Depth=1
	slti	$a1, $a0, 10
	masknez	$a2, $s2, $a1
	maskeqz	$a1, $s3, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	stx.b	$a0, $fp, $s0
.LBB39_27:                              #   in Loop: Header=BB39_28 Depth=1
	addi.d	$fp, $fp, 1
	beq	$fp, $s8, .LBB39_41
.LBB39_28:                              # %.lr.ph.i.1.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB39_36 Depth 2
	ldx.bu	$a0, $fp, $s0
	bne	$a0, $s1, .LBB39_27
# %bb.29:                               #   in Loop: Header=BB39_28 Depth=1
	ld.b	$a0, $s4, 0
	dbar	20
	beqz	$a0, .LBB39_32
.LBB39_30:                              #   in Loop: Header=BB39_28 Depth=1
	ld.b	$a0, $s6, 0
	dbar	20
	beqz	$a0, .LBB39_39
.LBB39_31:                              #   in Loop: Header=BB39_28 Depth=1
.Ltmp819:                               # EH_LABEL
	move	$a0, $s7
	move	$a1, $s5
	move	$a2, $s7
	pcaddu18i	$ra, %call36(_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE)
	jirl	$ra, $ra, 0
.Ltmp820:                               # EH_LABEL
	b	.LBB39_26
.LBB39_32:                              #   in Loop: Header=BB39_28 Depth=1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB39_30
# %bb.33:                               #   in Loop: Header=BB39_28 Depth=1
.Ltmp807:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt13random_deviceC2Ev)
	jirl	$ra, $ra, 0
.Ltmp808:                               # EH_LABEL
# %bb.34:                               #   in Loop: Header=BB39_28 Depth=1
.Ltmp810:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt13random_device9_M_getvalEv)
	jirl	$ra, $ra, 0
.Ltmp811:                               # EH_LABEL
# %bb.35:                               # %_ZNSt13random_deviceclEv.exit.i.i.1.i
                                        #   in Loop: Header=BB39_28 Depth=1
	bstrpick.d	$a2, $a0, 31, 0
	st.d	$a2, $s5, 0
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 32                    # 8-byte Folded Reload
	ori	$a5, $zero, 624
.LBB39_36:                              #   Parent Loop BB39_28 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	srli.d	$a3, $a2, 30
	xor	$a2, $a3, $a2
	mul.d	$a2, $a2, $a4
	add.d	$a2, $a0, $a2
	bstrpick.d	$a2, $a2, 31, 0
	st.d	$a2, $a1, 0
	addi.d	$a0, $a0, 1
	addi.d	$a1, $a1, 8
	bne	$a0, $a5, .LBB39_36
# %bb.37:                               #   in Loop: Header=BB39_28 Depth=1
	stptr.d	$a5, $s5, 4992
.Ltmp816:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt13random_device7_M_finiEv)
	jirl	$ra, $ra, 0
.Ltmp817:                               # EH_LABEL
# %bb.38:                               # %_ZNSt13random_deviceD2Ev.exit.i.i.1.i
                                        #   in Loop: Header=BB39_28 Depth=1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB39_30
.LBB39_39:                              #   in Loop: Header=BB39_28 Depth=1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB39_31
# %bb.40:                               #   in Loop: Header=BB39_28 Depth=1
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	st.d	$a0, $s7, 0
	move	$a0, $s6
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB39_31
.LBB39_41:                              # %_ZL17GetRandomFileNameB5cxx11v.exit.1.i
	ld.d	$a1, $sp, 136
.Ltmp822:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	ori	$a2, $zero, 8
	addi.d	$fp, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode)
	jirl	$ra, $ra, 0
.Ltmp823:                               # EH_LABEL
# %bb.42:
	ld.d	$a0, $sp, 176
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.w	$fp, $a0, 32
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	beqz	$fp, .LBB39_77
.LBB39_43:                              # %_ZL15GetTempFileNameB5cxx11v.exit
.Ltmp825:                               # EH_LABEL
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a1, %pc_hi20(.L.str.43)
	addi.d	$a1, $a1, %pc_lo12(.L.str.43)
	ori	$a2, $zero, 36
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp826:                               # EH_LABEL
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 72                    # 8-byte Folded Reload
# %bb.44:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a1, $sp, 136
	ld.d	$a2, $sp, 144
.Ltmp827:                               # EH_LABEL
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp828:                               # EH_LABEL
# %bb.45:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ori	$a1, $zero, 10
	st.b	$a1, $sp, 176
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$a1, $a1, 16
	beqz	$a1, .LBB39_47
# %bb.46:
.Ltmp829:                               # EH_LABEL
	addi.d	$a1, $sp, 176
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp830:                               # EH_LABEL
	b	.LBB39_48
.LBB39_47:
.Ltmp831:                               # EH_LABEL
	ori	$a1, $zero, 10
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp832:                               # EH_LABEL
.LBB39_48:                              # %.noexc.i30
	addi.d	$s4, $sp, 120
	st.d	$s4, $sp, 104
	ori	$a0, $zero, 16
	st.d	$a0, $sp, 176
.Ltmp834:                               # EH_LABEL
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp835:                               # EH_LABEL
# %bb.49:                               # %.noexc31
	ld.d	$a1, $sp, 176
	pcalau12i	$a2, %pc_hi20(.L.str.44)
	vld	$vr0, $a2, %pc_lo12(.L.str.44)
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
	vst	$vr0, $a0, 0
	ld.d	$a0, $sp, 104
	st.d	$a1, $sp, 112
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $sp, 112
	ld.d	$a2, $sp, 144
	addi.w	$a1, $zero, -2
	lu52i.d	$a1, $a1, 2047
	sub.d	$a0, $a1, $a0
	bltu	$a0, $a2, .LBB39_73
# %bb.50:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
.Ltmp837:                               # EH_LABEL
	ld.d	$a1, $sp, 136
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
.Ltmp838:                               # EH_LABEL
# %bb.51:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_.exit
	ld.d	$fp, $sp, 104
	beq	$s1, $s0, .LBB39_53
# %bb.52:
	st.d	$fp, $s1, 0
	move	$s2, $s3
	b	.LBB39_60
.LBB39_53:
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB39_75
# %bb.54:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i
	ori	$s1, $zero, 1
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	sltu	$a0, $s1, $a2
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
	add.d	$a0, $a0, $a2
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s0, $a0, $a1
	slli.d	$a0, $s0, 3
.Ltmp839:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp840:                               # EH_LABEL
# %bb.55:                               # %.noexc37
	move	$s2, $a0
	stx.d	$fp, $a0, $s5
	blt	$s5, $s1, .LBB39_57
# %bb.56:
	move	$a0, $s2
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB39_57:                              # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit.i.i
	beqz	$s3, .LBB39_59
# %bb.58:                               # %_ZNSt12_Vector_baseIPcSaIS0_EE13_M_deallocateEPS0_m.exit.i.i.i
	move	$a0, $s3
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_59:                              # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_appendIJS0_EEEvDpOT_.exit.i
	add.d	$s1, $s2, $s5
	alsl.d	$s0, $s0, $s2, 3
	move	$s3, $s2
.LBB39_60:                              # %_ZNSt6vectorIPcSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_.exit
	sub.d	$a0, $s1, $s2
	addi.d	$a0, $a0, 8
	srli.d	$a0, $a0, 3
	st.w	$a0, $sp, 172
.Ltmp841:                               # EH_LABEL
	pcalau12i	$a0, %got_pc_hi20(_ZN9benchmark16PrintDefaultHelpEv)
	ld.d	$a2, $a0, %got_pc_lo12(_ZN9benchmark16PrintDefaultHelpEv)
	addi.d	$a0, $sp, 172
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN9benchmark10InitializeEPiPPcPFvvE)
	jirl	$ra, $ra, 0
.Ltmp842:                               # EH_LABEL
# %bb.61:
.Ltmp843:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZN9benchmark22RunSpecifiedBenchmarksEv)
	jirl	$ra, $ra, 0
.Ltmp844:                               # EH_LABEL
# %bb.62:
.Ltmp845:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	addi.d	$a1, $sp, 136
	ori	$a2, $zero, 8
	addi.d	$fp, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode)
	jirl	$ra, $ra, 0
.Ltmp846:                               # EH_LABEL
# %bb.63:
	ld.d	$a0, $sp, 176
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$a1, $a0, 232
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	addi.d	$a2, $a0, 16
	st.d	$a2, $a0, 0
	st.d	$zero, $a0, 8
.Ltmp848:                               # EH_LABEL
	addi.w	$a2, $zero, -1
	lu32i.d	$a2, 0
	move	$a3, $zero
	move	$a4, $a2
	move	$a5, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag)
	jirl	$ra, $ra, 0
.Ltmp849:                               # EH_LABEL
# %bb.64:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt19istreambuf_iteratorIcS2_EvEET_S8_RKS3_.exit
	ld.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(remove)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 104
	beq	$a0, $s4, .LBB39_66
# %bb.65:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_66:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB39_68
# %bb.67:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_68:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	beqz	$s3, .LBB39_70
# %bb.69:
	sub.d	$a1, $s0, $s2
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_70:                              # %_ZNSt6vectorIPcSaIS0_EED2Ev.exit
	addi.d	$sp, $sp, 2032
	addi.d	$sp, $sp, 1200
	ld.d	$s8, $sp, 1944                  # 8-byte Folded Reload
	ld.d	$s7, $sp, 1952                  # 8-byte Folded Reload
	ld.d	$s6, $sp, 1960                  # 8-byte Folded Reload
	ld.d	$s5, $sp, 1968                  # 8-byte Folded Reload
	ld.d	$s4, $sp, 1976                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1984                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1992                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 2000                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 2008                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 2016                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 2024                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 2032
	ret
.LBB39_71:                              # %.noexc.i
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a0, $a0, %pc_lo12(.L.str.49)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB39_72:
	pcalau12i	$a0, %pc_hi20(.L.str.42)
	addi.d	$a0, $a0, %pc_lo12(.L.str.42)
	pcalau12i	$a1, %pc_hi20(.L.str.1)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1)
	pcalau12i	$a2, %pc_hi20(.L__PRETTY_FUNCTION__._Z21GetFileReporterOutputB5cxx11iPPc)
	addi.d	$a3, $a2, %pc_lo12(.L__PRETTY_FUNCTION__._Z21GetFileReporterOutputB5cxx11iPPc)
	ori	$a2, $zero, 499
	pcaddu18i	$ra, %call36(__assert_fail)
	jirl	$ra, $ra, 0
.LBB39_73:
.Ltmp854:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.275)
	addi.d	$a0, $a0, %pc_lo12(.L.str.275)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp855:                               # EH_LABEL
# %bb.74:                               # %.noexc32
.LBB39_75:
.Ltmp851:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp852:                               # EH_LABEL
# %bb.76:                               # %.noexc36
.LBB39_77:
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB39_79
# %bb.78:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7.1.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_79:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9.1.i
.Ltmp857:                               # EH_LABEL
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cerr)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cerr)
	pcalau12i	$a1, %pc_hi20(.L.str.293)
	addi.d	$a1, $a1, %pc_lo12(.L.str.293)
	ori	$a2, $zero, 43
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp858:                               # EH_LABEL
# %bb.80:                               # %.noexc
.Ltmp859:                               # EH_LABEL
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cerr)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cerr)
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp860:                               # EH_LABEL
# %bb.81:                               # %.noexc25
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.LBB39_82:                              # %.loopexit.split-lp28.i
.Ltmp818:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB39_83:                              # %.loopexit.split-lp23.i
.Ltmp812:                               # EH_LABEL
	b	.LBB39_87
.LBB39_84:                              # %.loopexit.split-lp.i
.Ltmp809:                               # EH_LABEL
	b	.LBB39_90
.LBB39_85:                              # %.loopexit27.i
.Ltmp801:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB39_86:                              # %.loopexit22.i
.Ltmp798:                               # EH_LABEL
.LBB39_87:
	move	$s1, $a0
.Ltmp813:                               # EH_LABEL
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt13random_device7_M_finiEv)
	jirl	$ra, $ra, 0
.Ltmp814:                               # EH_LABEL
	b	.LBB39_91
.LBB39_88:
.Ltmp815:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB39_89:                              # %.loopexit.i
.Ltmp795:                               # EH_LABEL
.LBB39_90:                              # %_ZNSt13random_deviceD2Ev.exit7.i.i.i
	move	$s1, $a0
.LBB39_91:                              # %_ZNSt13random_deviceD2Ev.exit7.i.i.i
	pcalau12i	$a0, %pc_hi20(_ZGVZL13RandomHexCharvE2rd)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZL13RandomHexCharvE2rd)
	pcaddu18i	$ra, %call36(__cxa_guard_abort)
	jirl	$ra, $ra, 0
	b	.LBB39_108
.LBB39_92:
.Ltmp861:                               # EH_LABEL
	move	$s1, $a0
	b	.LBB39_111
.LBB39_93:
.Ltmp853:                               # EH_LABEL
	b	.LBB39_102
.LBB39_94:
.Ltmp850:                               # EH_LABEL
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	move	$s1, $a0
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	b	.LBB39_103
.LBB39_95:
.Ltmp847:                               # EH_LABEL
	b	.LBB39_101
.LBB39_96:
.Ltmp836:                               # EH_LABEL
	b	.LBB39_107
.LBB39_97:
.Ltmp824:                               # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$s1, $a0
	addi.d	$a0, $sp, 152
	beq	$a2, $a0, .LBB39_111
# %bb.98:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB39_110
.LBB39_99:
.Ltmp833:                               # EH_LABEL
	b	.LBB39_107
.LBB39_100:
.Ltmp856:                               # EH_LABEL
.LBB39_101:
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
.LBB39_102:
	move	$s1, $a0
.LBB39_103:
	ld.d	$a0, $sp, 104
	beq	$a0, $s4, .LBB39_108
# %bb.104:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i44
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB39_108
.LBB39_105:                             # %.loopexit.split-lp33.i
.Ltmp821:                               # EH_LABEL
	b	.LBB39_107
.LBB39_106:                             # %.loopexit32.i
.Ltmp804:                               # EH_LABEL
.LBB39_107:
	move	$s1, $a0
.LBB39_108:
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB39_111
# %bb.109:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
.LBB39_110:                             # %.body23
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_111:                             # %.body23
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	beqz	$a0, .LBB39_113
# %bb.112:
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_113:                             # %.body
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end39:
	.size	_Z21GetFileReporterOutputB5cxx11iPPc, .Lfunc_end39-_Z21GetFileReporterOutputB5cxx11iPPc
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table39:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19  # >> Call Site 1 <<
	.uleb128 .Ltmp802-.Lfunc_begin19        #   Call between .Lfunc_begin19 and .Ltmp802
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp802-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Ltmp803-.Ltmp802              #   Call between .Ltmp802 and .Ltmp803
	.uleb128 .Ltmp804-.Lfunc_begin19        #     jumps to .Ltmp804
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp803-.Lfunc_begin19        # >> Call Site 3 <<
	.uleb128 .Ltmp793-.Ltmp803              #   Call between .Ltmp803 and .Ltmp793
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp793-.Lfunc_begin19        # >> Call Site 4 <<
	.uleb128 .Ltmp794-.Ltmp793              #   Call between .Ltmp793 and .Ltmp794
	.uleb128 .Ltmp795-.Lfunc_begin19        #     jumps to .Ltmp795
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp796-.Lfunc_begin19        # >> Call Site 5 <<
	.uleb128 .Ltmp797-.Ltmp796              #   Call between .Ltmp796 and .Ltmp797
	.uleb128 .Ltmp798-.Lfunc_begin19        #     jumps to .Ltmp798
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp799-.Lfunc_begin19        # >> Call Site 6 <<
	.uleb128 .Ltmp800-.Ltmp799              #   Call between .Ltmp799 and .Ltmp800
	.uleb128 .Ltmp801-.Lfunc_begin19        #     jumps to .Ltmp801
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp800-.Lfunc_begin19        # >> Call Site 7 <<
	.uleb128 .Ltmp805-.Ltmp800              #   Call between .Ltmp800 and .Ltmp805
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp805-.Lfunc_begin19        # >> Call Site 8 <<
	.uleb128 .Ltmp806-.Ltmp805              #   Call between .Ltmp805 and .Ltmp806
	.uleb128 .Ltmp824-.Lfunc_begin19        #     jumps to .Ltmp824
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp806-.Lfunc_begin19        # >> Call Site 9 <<
	.uleb128 .Ltmp819-.Ltmp806              #   Call between .Ltmp806 and .Ltmp819
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp819-.Lfunc_begin19        # >> Call Site 10 <<
	.uleb128 .Ltmp820-.Ltmp819              #   Call between .Ltmp819 and .Ltmp820
	.uleb128 .Ltmp821-.Lfunc_begin19        #     jumps to .Ltmp821
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp820-.Lfunc_begin19        # >> Call Site 11 <<
	.uleb128 .Ltmp807-.Ltmp820              #   Call between .Ltmp820 and .Ltmp807
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp807-.Lfunc_begin19        # >> Call Site 12 <<
	.uleb128 .Ltmp808-.Ltmp807              #   Call between .Ltmp807 and .Ltmp808
	.uleb128 .Ltmp809-.Lfunc_begin19        #     jumps to .Ltmp809
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp810-.Lfunc_begin19        # >> Call Site 13 <<
	.uleb128 .Ltmp811-.Ltmp810              #   Call between .Ltmp810 and .Ltmp811
	.uleb128 .Ltmp812-.Lfunc_begin19        #     jumps to .Ltmp812
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp816-.Lfunc_begin19        # >> Call Site 14 <<
	.uleb128 .Ltmp817-.Ltmp816              #   Call between .Ltmp816 and .Ltmp817
	.uleb128 .Ltmp818-.Lfunc_begin19        #     jumps to .Ltmp818
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp817-.Lfunc_begin19        # >> Call Site 15 <<
	.uleb128 .Ltmp822-.Ltmp817              #   Call between .Ltmp817 and .Ltmp822
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp822-.Lfunc_begin19        # >> Call Site 16 <<
	.uleb128 .Ltmp823-.Ltmp822              #   Call between .Ltmp822 and .Ltmp823
	.uleb128 .Ltmp824-.Lfunc_begin19        #     jumps to .Ltmp824
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp823-.Lfunc_begin19        # >> Call Site 17 <<
	.uleb128 .Ltmp825-.Ltmp823              #   Call between .Ltmp823 and .Ltmp825
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp825-.Lfunc_begin19        # >> Call Site 18 <<
	.uleb128 .Ltmp832-.Ltmp825              #   Call between .Ltmp825 and .Ltmp832
	.uleb128 .Ltmp833-.Lfunc_begin19        #     jumps to .Ltmp833
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp834-.Lfunc_begin19        # >> Call Site 19 <<
	.uleb128 .Ltmp835-.Ltmp834              #   Call between .Ltmp834 and .Ltmp835
	.uleb128 .Ltmp836-.Lfunc_begin19        #     jumps to .Ltmp836
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp837-.Lfunc_begin19        # >> Call Site 20 <<
	.uleb128 .Ltmp838-.Ltmp837              #   Call between .Ltmp837 and .Ltmp838
	.uleb128 .Ltmp856-.Lfunc_begin19        #     jumps to .Ltmp856
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp839-.Lfunc_begin19        # >> Call Site 21 <<
	.uleb128 .Ltmp840-.Ltmp839              #   Call between .Ltmp839 and .Ltmp840
	.uleb128 .Ltmp853-.Lfunc_begin19        #     jumps to .Ltmp853
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp840-.Lfunc_begin19        # >> Call Site 22 <<
	.uleb128 .Ltmp841-.Ltmp840              #   Call between .Ltmp840 and .Ltmp841
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp841-.Lfunc_begin19        # >> Call Site 23 <<
	.uleb128 .Ltmp844-.Ltmp841              #   Call between .Ltmp841 and .Ltmp844
	.uleb128 .Ltmp856-.Lfunc_begin19        #     jumps to .Ltmp856
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp845-.Lfunc_begin19        # >> Call Site 24 <<
	.uleb128 .Ltmp846-.Ltmp845              #   Call between .Ltmp845 and .Ltmp846
	.uleb128 .Ltmp847-.Lfunc_begin19        #     jumps to .Ltmp847
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp848-.Lfunc_begin19        # >> Call Site 25 <<
	.uleb128 .Ltmp849-.Ltmp848              #   Call between .Ltmp848 and .Ltmp849
	.uleb128 .Ltmp850-.Lfunc_begin19        #     jumps to .Ltmp850
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp849-.Lfunc_begin19        # >> Call Site 26 <<
	.uleb128 .Ltmp854-.Ltmp849              #   Call between .Ltmp849 and .Ltmp854
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp854-.Lfunc_begin19        # >> Call Site 27 <<
	.uleb128 .Ltmp855-.Ltmp854              #   Call between .Ltmp854 and .Ltmp855
	.uleb128 .Ltmp856-.Lfunc_begin19        #     jumps to .Ltmp856
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp851-.Lfunc_begin19        # >> Call Site 28 <<
	.uleb128 .Ltmp852-.Ltmp851              #   Call between .Ltmp851 and .Ltmp852
	.uleb128 .Ltmp853-.Lfunc_begin19        #     jumps to .Ltmp853
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp852-.Lfunc_begin19        # >> Call Site 29 <<
	.uleb128 .Ltmp857-.Ltmp852              #   Call between .Ltmp852 and .Ltmp857
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp857-.Lfunc_begin19        # >> Call Site 30 <<
	.uleb128 .Ltmp860-.Ltmp857              #   Call between .Ltmp857 and .Ltmp860
	.uleb128 .Ltmp861-.Lfunc_begin19        #     jumps to .Ltmp861
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp860-.Lfunc_begin19        # >> Call Site 31 <<
	.uleb128 .Ltmp813-.Ltmp860              #   Call between .Ltmp860 and .Ltmp813
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp813-.Lfunc_begin19        # >> Call Site 32 <<
	.uleb128 .Ltmp814-.Ltmp813              #   Call between .Ltmp813 and .Ltmp814
	.uleb128 .Ltmp815-.Lfunc_begin19        #     jumps to .Ltmp815
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp814-.Lfunc_begin19        # >> Call Site 33 <<
	.uleb128 .Lfunc_end39-.Ltmp814          #   Call between .Ltmp814 and .Lfunc_end39
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB40_8
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	b	.LBB40_3
	.p2align	4, , 16
.LBB40_2:                               # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E.exit
                                        #   in Loop: Header=BB40_3 Depth=1
	ori	$a1, $zero, 96
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	beqz	$s1, .LBB40_7
.LBB40_3:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 64
	ld.d	$s1, $s0, 16
	addi.d	$a1, $s0, 80
	beq	$a0, $a1, .LBB40_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB40_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB40_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB40_3 Depth=1
	ld.d	$a0, $s0, 32
	addi.d	$a1, $s0, 48
	beq	$a0, $a1, .LBB40_2
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
                                        #   in Loop: Header=BB40_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB40_2
.LBB40_7:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB40_8:                               # %._crit_edge
	ret
.Lfunc_end40:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, .Lfunc_end40-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8internal14ResultsChecker12PatternAndFnD2Ev,"axG",@progbits,_ZN8internal14ResultsChecker12PatternAndFnD2Ev,comdat
	.hidden	_ZN8internal14ResultsChecker12PatternAndFnD2Ev # -- Begin function _ZN8internal14ResultsChecker12PatternAndFnD2Ev
	.weak	_ZN8internal14ResultsChecker12PatternAndFnD2Ev
	.p2align	2
	.type	_ZN8internal14ResultsChecker12PatternAndFnD2Ev,@function
_ZN8internal14ResultsChecker12PatternAndFnD2Ev: # @_ZN8internal14ResultsChecker12PatternAndFnD2Ev
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a3, $a0, 104
	beqz	$a3, .LBB41_2
# %bb.1:
	addi.d	$a0, $fp, 88
.Ltmp862:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp863:                               # EH_LABEL
.LBB41_2:                               # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $fp, 80
	beqz	$s0, .LBB41_7
# %bb.3:
	ld.d	$a0, $s0, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB41_5
# %bb.4:
	ld.d	$a0, $s0, 0
	st.d	$zero, $s0, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 40
	addi.d	$a1, $fp, 56
	bne	$a0, $a1, .LBB41_8
	b	.LBB41_9
.LBB41_5:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB41_12
# %bb.6:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s0, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB41_13
.LBB41_7:                               # %_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit.i
	ld.d	$a0, $fp, 40
	addi.d	$a1, $fp, 56
	beq	$a0, $a1, .LBB41_9
.LBB41_8:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB41_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB41_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB41_11:                              # %_ZN8TestCaseD2Ev.exit
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB41_12:
	addi.d	$a1, $s0, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB41_7
.LBB41_13:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 40
	addi.d	$a1, $fp, 56
	bne	$a0, $a1, .LBB41_8
	b	.LBB41_9
.LBB41_14:
.Ltmp864:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end41:
	.size	_ZN8internal14ResultsChecker12PatternAndFnD2Ev, .Lfunc_end41-_ZN8internal14ResultsChecker12PatternAndFnD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8internal14ResultsChecker12PatternAndFnD2Ev,"aG",@progbits,_ZN8internal14ResultsChecker12PatternAndFnD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table41:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Ltmp862-.Lfunc_begin20        # >> Call Site 1 <<
	.uleb128 .Ltmp863-.Ltmp862              #   Call between .Ltmp862 and .Ltmp863
	.uleb128 .Ltmp864-.Lfunc_begin20        #     jumps to .Ltmp864
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp863-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Lfunc_end41-.Ltmp863          #   Call between .Ltmp863 and .Lfunc_end41
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark8internal16CallAbortHandlerEv,"axG",@progbits,_ZN9benchmark8internal16CallAbortHandlerEv,comdat
	.hidden	_ZN9benchmark8internal16CallAbortHandlerEv # -- Begin function _ZN9benchmark8internal16CallAbortHandlerEv
	.weak	_ZN9benchmark8internal16CallAbortHandlerEv
	.p2align	5
	.type	_ZN9benchmark8internal16CallAbortHandlerEv,@function
_ZN9benchmark8internal16CallAbortHandlerEv: # @_ZN9benchmark8internal16CallAbortHandlerEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal15GetAbortHandlerEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 0
	jirl	$ra, $a0, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end42:
	.size	_ZN9benchmark8internal16CallAbortHandlerEv, .Lfunc_end42-_ZN9benchmark8internal16CallAbortHandlerEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,"axG",@progbits,_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,comdat
	.weak	_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb # -- Begin function _ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb
	.p2align	5
	.type	_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,@function
_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb: # @_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	st.d	$s5, $sp, 192                   # 8-byte Folded Spill
	st.d	$s6, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s4, $a3
	ld.d	$a3, $a3, 16
	beqz	$a3, .LBB43_10
# %bb.1:
	move	$s1, $a6
	move	$s5, $a5
	move	$s3, $a4
	move	$s2, $a2
	move	$fp, $a1
	move	$s0, $a0
	st.d	$a0, $a2, 24
	ld.d	$a0, $a3, 40
	addi.d	$a0, $a0, 3
	bstrpick.d	$a1, $a0, 31, 0
	st.b	$zero, $sp, 56
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 40
	addi.d	$a2, $sp, 40
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $s4, 1
	andi	$a0, $a0, 4
	bnez	$a0, .LBB43_7
# %bb.2:
	ld.d	$s6, $s4, 16
	ori	$a0, $zero, 1
	bne	$s5, $a0, .LBB43_4
# %bb.3:
	ld.bu	$a0, $s6, 48
	beqz	$a0, .LBB43_7
.LBB43_4:
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 40
	st.d	$s0, $sp, 72
	st.d	$s6, $sp, 96
	st.d	$s2, $sp, 104
	ld.d	$a0, $s6, 64
	ld.d	$a1, $s6, 56
	st.d	$fp, $sp, 80
	st.d	$s4, $sp, 88
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 112
	st.d	$zero, $sp, 128
	beq	$a0, $a1, .LBB43_18
# %bb.5:                                # %_ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_.exit.i.i
	sub.d	$s5, $a0, $a1
	srli.d	$a0, $s5, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mul.d	$s4, $a0, $a1
	slli.d	$a0, $s4, 4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 112
	alsl.d	$a1, $s4, $a0, 4
	ori	$a2, $zero, 96
	st.d	$a1, $sp, 128
	bgeu	$s5, $a2, .LBB43_19
# %bb.6:
	move	$a2, $s4
	move	$a1, $a0
	b	.LBB43_22
.LBB43_7:
	addi.d	$a0, $sp, 40
	move	$a1, $s0
	move	$a2, $fp
	move	$a3, $s2
	move	$a4, $s4
	move	$a5, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 72
	st.d	$a0, $sp, 64
	beqz	$s1, .LBB43_11
# %bb.8:
.Ltmp870:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp871:                               # EH_LABEL
# %bb.9:
	move	$s3, $a0
	b	.LBB43_35
.LBB43_10:
	move	$a0, $zero
	b	.LBB43_58
.LBB43_11:
.Ltmp865:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	ori	$a1, $zero, 1
	ori	$s3, $zero, 1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp866:                               # EH_LABEL
# %bb.12:                               # %.noexc
	bnez	$a0, .LBB43_35
# %bb.13:
	ld.wu	$a0, $sp, 176
	andi	$a1, $a0, 64
	bnez	$a1, .LBB43_34
# %bb.14:
	ori	$a0, $a0, 128
	st.w	$a0, $sp, 176
	.p2align	4, , 16
.LBB43_15:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $sp, 72
	ld.d	$a1, $sp, 80
	xor	$a2, $a0, $a1
	sltu	$s3, $zero, $a2
	beq	$a0, $a1, .LBB43_35
# %bb.16:                               #   in Loop: Header=BB43_15 Depth=1
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 72
	st.d	$a0, $sp, 64
.Ltmp867:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	ori	$a1, $zero, 1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp868:                               # EH_LABEL
# %bb.17:                               # %.noexc65
                                        #   in Loop: Header=BB43_15 Depth=1
	beqz	$a0, .LBB43_15
	b	.LBB43_35
.LBB43_18:
	move	$a1, $zero
	b	.LBB43_23
.LBB43_19:                              # %vector.ph
	bstrpick.d	$a1, $s4, 57, 1
	slli.d	$a3, $a1, 1
	andi	$a2, $s4, 1
	slli.d	$a1, $a1, 5
	add.d	$a1, $a0, $a1
	addi.d	$a0, $a0, 16
	move	$a4, $a3
	.p2align	4, , 16
.LBB43_20:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a0, -16
	st.d	$zero, $a0, 0
	st.w	$zero, $a0, -8
	st.w	$zero, $a0, 8
	addi.d	$a4, $a4, -2
	addi.d	$a0, $a0, 32
	bnez	$a4, .LBB43_20
# %bb.21:                               # %middle.block
	beq	$s4, $a3, .LBB43_23
	.p2align	4, , 16
.LBB43_22:                              # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a1, 0
	st.w	$zero, $a1, 8
	addi.d	$a2, $a2, -1
	addi.d	$a1, $a1, 16
	bnez	$a2, .LBB43_22
.LBB43_23:                              # %.loopexit.i
	st.d	$a1, $sp, 120
	ld.d	$a0, $s6, 32
	st.d	$a0, $sp, 136
	st.d	$zero, $sp, 144
	andi	$a0, $s3, 128
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -6
	lu32i.d	$a1, 0
	and	$a1, $s3, $a1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s3, $a0
	or	$a0, $a0, $a1
	st.w	$a0, $sp, 152
	beqz	$s1, .LBB43_27
# %bb.24:
	st.d	$s0, $sp, 64
	st.b	$zero, $sp, 156
	st.d	$zero, $sp, 144
.Ltmp875:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
.Ltmp876:                               # EH_LABEL
# %bb.25:                               # %.noexc68
	ld.d	$a2, $sp, 136
.Ltmp877:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.Ltmp878:                               # EH_LABEL
# %bb.26:                               # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE8_M_matchEv.exit
	ld.b	$s3, $sp, 156
	ld.d	$a0, $sp, 112
	bnez	$a0, .LBB43_29
	b	.LBB43_30
.LBB43_27:
.Ltmp873:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv)
	jirl	$ra, $ra, 0
.Ltmp874:                               # EH_LABEL
# %bb.28:
	move	$s3, $a0
	ld.d	$a0, $sp, 112
	beqz	$a0, .LBB43_30
.LBB43_29:
	ld.d	$a1, $sp, 128
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_30:                              # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i71
	ld.d	$a0, $sp, 40
	beqz	$a0, .LBB43_32
# %bb.31:
	ld.d	$a1, $sp, 56
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_32:
	andi	$a0, $s3, 1
	bnez	$a0, .LBB43_45
.LBB43_33:
	move	$a0, $s2
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB43_58
.LBB43_34:
	move	$s3, $zero
.LBB43_35:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE8_M_matchEv.exit
	ld.d	$a0, $sp, 160
	beqz	$a0, .LBB43_37
# %bb.36:
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
.LBB43_37:
	ld.d	$s4, $sp, 136
	ld.d	$s5, $sp, 144
	bne	$s4, $s5, .LBB43_48
# %bb.38:                               # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i.i
	beqz	$s4, .LBB43_40
.LBB43_39:
	ld.d	$a0, $sp, 152
	sub.d	$a1, $a0, $s4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_40:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EED2Ev.exit.i
	ld.d	$a0, $sp, 112
	beqz	$a0, .LBB43_42
# %bb.41:
	ld.d	$a1, $sp, 128
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_42:                              # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i
	ld.d	$a0, $sp, 40
	beqz	$a0, .LBB43_44
# %bb.43:
	ld.d	$a1, $sp, 56
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB43_44:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev.exit
	beqz	$s3, .LBB43_33
.LBB43_45:
	ld.d	$a1, $s2, 0
	ld.d	$a0, $s2, 8
	beq	$a1, $a0, .LBB43_53
# %bb.46:
	move	$a2, $a1
	b	.LBB43_51
	.p2align	4, , 16
.LBB43_47:                              # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB43_48 Depth=1
	addi.d	$s4, $s4, 32
	beq	$s4, $s5, .LBB43_55
.LBB43_48:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, 8
	beqz	$a0, .LBB43_47
# %bb.49:                               #   in Loop: Header=BB43_48 Depth=1
	ld.d	$a1, $s4, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB43_47
	.p2align	4, , 16
.LBB43_50:                              #   in Loop: Header=BB43_51 Depth=1
	addi.d	$a2, $a2, 24
	beq	$a2, $a0, .LBB43_53
.LBB43_51:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.bu	$a3, $a2, 16
	bnez	$a3, .LBB43_50
# %bb.52:                               #   in Loop: Header=BB43_51 Depth=1
	st.d	$fp, $a2, 8
	st.d	$fp, $a2, 0
	b	.LBB43_50
.LBB43_53:                              # %._crit_edge
	beqz	$s1, .LBB43_56
# %bb.54:
	st.b	$zero, $a0, -32
	st.d	$s0, $a0, -48
	st.d	$s0, $a0, -40
	st.b	$zero, $a0, -8
	st.d	$fp, $a0, -24
	st.d	$fp, $a0, -16
	b	.LBB43_57
.LBB43_55:                              # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split.i.i.i
	ld.d	$s4, $sp, 136
	bnez	$s4, .LBB43_39
	b	.LBB43_40
.LBB43_56:
	st.d	$s0, $a0, -48
	ld.d	$a2, $a1, 0
	st.d	$a2, $a0, -40
	xor	$a2, $s0, $a2
	sltu	$a2, $zero, $a2
	st.b	$a2, $a0, -32
	ld.d	$a1, $a1, 8
	st.d	$a1, $a0, -24
	st.d	$fp, $a0, -16
	xor	$a1, $a1, $fp
	sltu	$a1, $zero, $a1
	st.b	$a1, $a0, -8
.LBB43_57:
	ori	$a0, $zero, 1
.LBB43_58:
	ld.d	$s6, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB43_59:
.Ltmp879:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB43_60:                              # %.loopexit.split-lp
.Ltmp872:                               # EH_LABEL
	b	.LBB43_62
.LBB43_61:                              # %.loopexit
.Ltmp869:                               # EH_LABEL
.LBB43_62:
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end43:
	.size	_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb, .Lfunc_end43-_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,"aG",@progbits,_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,comdat
	.p2align	2, 0x0
GCC_except_table43:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21  # >> Call Site 1 <<
	.uleb128 .Ltmp870-.Lfunc_begin21        #   Call between .Lfunc_begin21 and .Ltmp870
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp870-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Ltmp866-.Ltmp870              #   Call between .Ltmp870 and .Ltmp866
	.uleb128 .Ltmp872-.Lfunc_begin21        #     jumps to .Ltmp872
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp867-.Lfunc_begin21        # >> Call Site 3 <<
	.uleb128 .Ltmp868-.Ltmp867              #   Call between .Ltmp867 and .Ltmp868
	.uleb128 .Ltmp869-.Lfunc_begin21        #     jumps to .Ltmp869
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp875-.Lfunc_begin21        # >> Call Site 4 <<
	.uleb128 .Ltmp874-.Ltmp875              #   Call between .Ltmp875 and .Ltmp874
	.uleb128 .Ltmp879-.Lfunc_begin21        #     jumps to .Ltmp879
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp874-.Lfunc_begin21        # >> Call Site 5 <<
	.uleb128 .Lfunc_end43-.Ltmp874          #   Call between .Ltmp874 and .Lfunc_end43
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,comdat
	.hidden	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a5
	move	$fp, $a0
	xvrepli.b	$xr0, 0
	xvst	$xr0, $a0, 0
	ld.d	$s2, $a4, 16
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	st.d	$a4, $a0, 48
	st.d	$s2, $a0, 56
	st.d	$a3, $a0, 64
	ld.d	$a0, $s2, 64
	ld.d	$a1, $s2, 56
	lu12i.w	$a2, -349526
	ori	$a2, $a2, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$s3, $a2, -1366
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 72
	st.d	$zero, $fp, 88
	beq	$a0, $a1, .LBB44_4
# %bb.1:                                # %_ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_.exit.i
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	sub.d	$s4, $a0, $a1
	mulh.du	$a0, $s4, $s3
	srli.d	$s1, $a0, 5
	slli.d	$a0, $s1, 4
.Ltmp880:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp881:                               # EH_LABEL
# %bb.2:                                # %.noexc
	st.d	$a0, $fp, 72
	alsl.d	$a1, $s1, $a0, 4
	ori	$a2, $zero, 96
	st.d	$a1, $fp, 88
	bgeu	$s4, $a2, .LBB44_5
# %bb.3:
	move	$a2, $s1
	move	$a1, $a0
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	b	.LBB44_8
.LBB44_4:
	move	$a1, $zero
	b	.LBB44_9
.LBB44_5:                               # %vector.ph
	bstrpick.d	$a1, $s1, 57, 1
	slli.d	$a3, $a1, 1
	andi	$a2, $s1, 1
	slli.d	$a1, $a1, 5
	add.d	$a1, $a0, $a1
	addi.d	$a0, $a0, 16
	move	$a4, $a3
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	.p2align	4, , 16
.LBB44_6:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a0, -16
	st.d	$zero, $a0, 0
	st.w	$zero, $a0, -8
	st.w	$zero, $a0, 8
	addi.d	$a4, $a4, -2
	addi.d	$a0, $a0, 32
	bnez	$a4, .LBB44_6
# %bb.7:                                # %middle.block
	beq	$s1, $a3, .LBB44_9
	.p2align	4, , 16
.LBB44_8:                               # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a1, 0
	st.w	$zero, $a1, 8
	addi.d	$a2, $a2, -1
	addi.d	$a1, $a1, 16
	bnez	$a2, .LBB44_8
.LBB44_9:                               # %.loopexit
	addi.d	$s4, $fp, 72
	ld.d	$a0, $s2, 64
	ld.d	$a2, $s2, 56
	st.d	$a1, $fp, 80
	addi.d	$s1, $fp, 96
	ld.d	$s5, $s2, 32
	sub.d	$a0, $a0, $a2
	srli.d	$a0, $a0, 4
	mul.d	$s2, $a0, $s3
	st.d	$zero, $fp, 112
	vst	$vr0, $fp, 96
.Ltmp883:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
.Ltmp884:                               # EH_LABEL
# %bb.10:
	move	$s3, $a0
	move	$a1, $zero
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s3, $fp, 120
	st.d	$s5, $fp, 128
	andi	$a0, $s0, 128
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -6
	lu32i.d	$a1, 0
	and	$a1, $s0, $a1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s0, $a0
	or	$a0, $a0, $a1
	st.w	$a0, $fp, 136
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB44_11:
.Ltmp882:                               # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB44_14
	b	.LBB44_16
.LBB44_12:                              # %.body
.Ltmp885:                               # EH_LABEL
	move	$s0, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	bnez	$a0, .LBB44_15
# %bb.13:                               # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit
	ld.d	$a0, $fp, 0
	bnez	$a0, .LBB44_16
.LBB44_14:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB44_15:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB44_14
.LBB44_16:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end44:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE, .Lfunc_end44-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,comdat
	.p2align	2, 0x0
GCC_except_table44:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Ltmp880-.Lfunc_begin22        # >> Call Site 1 <<
	.uleb128 .Ltmp881-.Ltmp880              #   Call between .Ltmp880 and .Ltmp881
	.uleb128 .Ltmp882-.Lfunc_begin22        #     jumps to .Ltmp882
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp883-.Lfunc_begin22        # >> Call Site 2 <<
	.uleb128 .Ltmp884-.Ltmp883              #   Call between .Ltmp883 and .Ltmp884
	.uleb128 .Ltmp885-.Lfunc_begin22        #     jumps to .Ltmp885
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp884-.Lfunc_begin22        # >> Call Site 3 <<
	.uleb128 .Lfunc_end44-.Ltmp884          #   Call between .Ltmp884 and .Lfunc_end44
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev,comdat
	.hidden	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 120
	beqz	$a0, .LBB45_2
# %bb.1:
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
.LBB45_2:
	ld.d	$s0, $fp, 96
	ld.d	$s1, $fp, 104
	bne	$s0, $s1, .LBB45_10
# %bb.3:                                # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i
	beqz	$s0, .LBB45_5
.LBB45_4:
	ld.d	$a0, $fp, 112
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB45_5:                               # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EED2Ev.exit
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB45_7
# %bb.6:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB45_7:                               # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB45_13
# %bb.8:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB45_9:                               # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB45_10 Depth=1
	addi.d	$s0, $s0, 32
	beq	$s0, $s1, .LBB45_12
.LBB45_10:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB45_9
# %bb.11:                               #   in Loop: Header=BB45_10 Depth=1
	ld.d	$a1, $s0, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB45_9
.LBB45_12:                              # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$s0, $fp, 96
	bnez	$s0, .LBB45_4
	b	.LBB45_5
.LBB45_13:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end45:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev, .Lfunc_end45-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 32
	ld.d	$a1, $fp, 64
	st.d	$a0, $fp, 24
	st.b	$zero, $fp, 116
	st.d	$zero, $fp, 104
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 96
	ori	$a1, $zero, 1
	ori	$s0, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $fp, 116
	bnez	$a0, .LBB46_6
# %bb.1:
	ld.wu	$a0, $fp, 112
	andi	$a1, $a0, 64
	bnez	$a1, .LBB46_5
# %bb.2:
	ori	$a0, $a0, 128
	st.w	$a0, $fp, 112
	ori	$s1, $zero, 1
	.p2align	4, , 16
.LBB46_3:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 32
	ld.d	$a1, $fp, 40
	xor	$a2, $a0, $a1
	sltu	$s0, $zero, $a2
	beq	$a0, $a1, .LBB46_6
# %bb.4:                                #   in Loop: Header=BB46_3 Depth=1
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 32
	ld.d	$a1, $fp, 64
	st.d	$a0, $fp, 24
	st.b	$zero, $fp, 116
	st.d	$zero, $fp, 104
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 96
	ori	$a1, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $fp, 116
	bne	$a0, $s1, .LBB46_3
	b	.LBB46_6
.LBB46_5:
	move	$s0, $zero
.LBB46_6:                               # %.loopexit
	move	$a0, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end46:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv, .Lfunc_end46-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev,comdat
	.hidden	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB47_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_2:                               # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB47_4
# %bb.3:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB47_4:                               # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end47:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev, .Lfunc_end47-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_,"axG",@progbits,_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_,comdat
	.hidden	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_ # -- Begin function _ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.weak	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.p2align	2
	.type	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_,@function
_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_: # @_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s1, $a0, 0
	ld.d	$a0, $a0, 16
	sub.d	$s2, $a0, $s1
	ori	$a3, $zero, 71
	move	$s0, $a1
	bltu	$a3, $s2, .LBB48_3
# %bb.1:                                # %.lr.ph.i.i.i.i.i.i
	ori	$a0, $zero, 72
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s0, $a0, 0
	st.d	$s0, $a0, 8
	st.b	$zero, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$s0, $a0, 32
	st.b	$zero, $a0, 40
	st.d	$s0, $a0, 48
	st.d	$s0, $a0, 56
	st.b	$zero, $a0, 64
	addi.d	$a1, $a0, 72
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 8
	st.d	$a1, $fp, 16
	beqz	$s1, .LBB48_16
# %bb.2:
	move	$a0, $s1
	move	$a1, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB48_3:
	ld.d	$a0, $fp, 8
	sub.d	$a2, $a0, $s1
	bltu	$a3, $a2, .LBB48_7
# %bb.4:
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a3, $a1, -1366
	mulh.du	$a1, $a2, $a3
	srli.d	$a1, $a1, 4
	beq	$s1, $a0, .LBB48_13
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$a2, $a2, -24
	ori	$a4, $zero, 24
	bgeu	$a2, $a4, .LBB48_9
# %bb.6:
	move	$a2, $s1
	b	.LBB48_12
.LBB48_7:                               # %_ZSt10__fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_ET_SE_T0_RKT1_St26random_access_iterator_tag.exit.i
	st.d	$s0, $s1, 0
	st.d	$s0, $s1, 8
	st.b	$zero, $s1, 16
	st.d	$s0, $s1, 24
	st.d	$s0, $s1, 32
	st.b	$zero, $s1, 40
	st.d	$s0, $s1, 48
	st.d	$s0, $s1, 56
	addi.d	$a1, $s1, 72
	st.b	$zero, $s1, 64
	beq	$a0, $a1, .LBB48_16
# %bb.8:
	st.d	$a1, $fp, 8
	b	.LBB48_16
.LBB48_9:                               # %vector.ph
	mulh.du	$a2, $a2, $a3
	srli.d	$a2, $a2, 4
	addi.d	$a3, $a2, 1
	bstrpick.d	$a2, $a3, 60, 1
	slli.d	$a4, $a2, 1
	slli.d	$a5, $a2, 5
	alsl.d	$a2, $a2, $a5, 4
	add.d	$a2, $s1, $a2
	addi.d	$a5, $s1, 24
	move	$a6, $a4
	.p2align	4, , 16
.LBB48_10:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s0, $a5, -24
	st.d	$s0, $a5, 0
	st.d	$s0, $a5, -16
	st.d	$s0, $a5, 8
	st.b	$zero, $a5, -8
	st.b	$zero, $a5, 16
	addi.d	$a6, $a6, -2
	addi.d	$a5, $a5, 48
	bnez	$a6, .LBB48_10
# %bb.11:                               # %middle.block
	beq	$a3, $a4, .LBB48_13
	.p2align	4, , 16
.LBB48_12:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s0, $a2, 0
	st.d	$s0, $a2, 8
	st.b	$zero, $a2, 16
	addi.d	$a2, $a2, 24
	bne	$a2, $a0, .LBB48_12
.LBB48_13:                              # %_ZSt9__fill_a1IPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESC_EvT_SE_RKT0_.exit.i
	addi.d	$a1, $a1, -3
	.p2align	4, , 16
.LBB48_14:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s0, $a0, 0
	st.d	$s0, $a0, 8
	st.b	$zero, $a0, 16
	addi.d	$a1, $a1, 1
	addi.d	$a0, $a0, 24
	bnez	$a1, .LBB48_14
# %bb.15:                               # %_ZSt24__uninitialized_fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E.exit.i
	st.d	$a0, $fp, 8
.LBB48_16:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_.exit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end48:
	.size	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_, .Lfunc_end48-_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_,"axG",@progbits,_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_,comdat
	.weak	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_ # -- Begin function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_
	.p2align	2
	.type	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_,@function
_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_: # @_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	lu12i.w	$a0, -349526
	ld.d	$a4, $fp, 16
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a3, $a0, -1366
	sub.d	$s3, $a4, $s0
	srli.d	$a0, $s3, 3
	mul.d	$a0, $a0, $a3
	move	$s1, $a2
	move	$s2, $a1
	bgeu	$a0, $a1, .LBB49_6
# %bb.1:
	lu12i.w	$a0, 349525
	ori	$a0, $a0, 1366
	lu32i.d	$a0, 349525
	lu52i.d	$a0, $a0, 85
	bgeu	$s2, $a0, .LBB49_20
# %bb.2:                                # %_ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2EmRKSD_.exit.i
	slli.d	$a0, $s2, 4
	alsl.d	$s4, $s2, $a0, 3
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	.p2align	4, , 16
.LBB49_3:                               # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s1, 16
	vld	$vr0, $s1, 0
	addi.d	$s2, $s2, -1
	st.d	$a2, $a1, 16
	vst	$vr0, $a1, 0
	addi.d	$a1, $a1, 24
	bnez	$s2, .LBB49_3
# %bb.4:                                # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2EmRKSC_RKSD_.exit
	add.d	$a2, $a0, $s4
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 8
	st.d	$a2, $fp, 16
	beqz	$s0, .LBB49_19
# %bb.5:
	move	$a0, $s0
	move	$a1, $s3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB49_6:
	ld.d	$a0, $fp, 8
	sub.d	$a1, $a0, $s0
	mulh.du	$a1, $a1, $a3
	srli.d	$a1, $a1, 4
	bgeu	$a1, $s2, .LBB49_13
# %bb.7:
	beq	$s0, $a0, .LBB49_10
# %bb.8:                                # %.lr.ph.i
	ld.bu	$a2, $s1, 16
	.p2align	4, , 16
.LBB49_9:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $s1, 0
	st.d	$a3, $s0, 0
	ld.d	$a3, $s1, 8
	st.d	$a3, $s0, 8
	st.b	$a2, $s0, 16
	addi.d	$s0, $s0, 24
	bne	$s0, $a0, .LBB49_9
.LBB49_10:                              # %_ZSt9__fill_a1IPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESC_EvT_SE_RKT0_.exit
	sub.d	$a1, $a1, $s2
	.p2align	4, , 16
.LBB49_11:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s1, 16
	st.d	$a2, $a0, 16
	vld	$vr0, $s1, 0
	vst	$vr0, $a0, 0
	addi.d	$a1, $a1, 1
	addi.d	$a0, $a0, 24
	bnez	$a1, .LBB49_11
# %bb.12:                               # %_ZSt24__uninitialized_fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E.exit
	st.d	$a0, $fp, 8
	b	.LBB49_19
.LBB49_13:
	beqz	$s2, .LBB49_17
# %bb.14:                               # %.lr.ph.i18
	ld.bu	$a1, $s1, 16
	slli.d	$a2, $s2, 4
	alsl.d	$a2, $s2, $a2, 3
	add.d	$a2, $s0, $a2
	.p2align	4, , 16
.LBB49_15:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $s1, 0
	st.d	$a3, $s0, 0
	ld.d	$a3, $s1, 8
	st.d	$a3, $s0, 8
	st.b	$a1, $s0, 16
	addi.d	$s0, $s0, 24
	bne	$s0, $a2, .LBB49_15
# %bb.16:
	move	$s0, $a2
.LBB49_17:                              # %_ZSt10__fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_ET_SE_T0_RKT1_St26random_access_iterator_tag.exit
	beq	$a0, $s0, .LBB49_19
# %bb.18:
	st.d	$s0, $fp, 8
.LBB49_19:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB49_20:
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a0, $a0, %pc_lo12(.L.str.49)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end49:
	.size	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_, .Lfunc_end49-_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev,comdat
	.hidden	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev # -- Begin function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.weak	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.p2align	2
	.type	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev,@function
_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev: # @_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	bne	$s0, $s1, .LBB50_4
# %bb.1:                                # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit
	beqz	$s0, .LBB50_7
.LBB50_2:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB50_3:                               # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i
                                        #   in Loop: Header=BB50_4 Depth=1
	addi.d	$s0, $s0, 32
	beq	$s0, $s1, .LBB50_6
.LBB50_4:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB50_3
# %bb.5:                                #   in Loop: Header=BB50_4 Depth=1
	ld.d	$a1, $s0, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB50_3
.LBB50_6:                               # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split
	ld.d	$s0, $fp, 0
	bnez	$s0, .LBB50_2
.LBB50_7:                               # %_ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end50:
	.size	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev, .Lfunc_end50-_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a1
	move	$s0, $a0
	ld.d	$a2, $a0, 128
	ld.d	$s4, $a0, 104
	ld.d	$a1, $a0, 112
	ld.d	$s2, $a0, 64
	addi.d	$a0, $a0, 96
	st.d	$a2, $sp, 48
	vrepli.b	$vr0, 0
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	vst	$vr0, $sp, 32                   # 16-byte Folded Spill
	beq	$s4, $a1, .LBB51_3
# %bb.1:
	st.d	$a2, $s4, 0
	ld.d	$a0, $s2, 8
	ld.d	$a1, $s2, 0
	sub.d	$s3, $a0, $a1
	vst	$vr0, $s4, 8
	st.d	$zero, $s4, 24
	beq	$a0, $a1, .LBB51_4
# %bb.2:                                # %_ZNSt15__new_allocatorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEE8allocateEmPKv.exit.i.i.i.i.i.i.i
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	b	.LBB51_5
.LBB51_3:
	addi.d	$a1, $sp, 48
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
	b	.LBB51_10
.LBB51_4:
	move	$a0, $zero
.LBB51_5:
	st.d	$a0, $s4, 8
	st.d	$a0, $s4, 16
	add.d	$a1, $a0, $s3
	st.d	$a1, $s4, 24
	ld.d	$a1, $s2, 0
	ld.d	$a2, $s2, 8
	beq	$a1, $a2, .LBB51_8
# %bb.6:                                # %.lr.ph.i.i.i.i.i.i.i.preheader
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
	.p2align	4, , 16
.LBB51_7:                               # %.lr.ph.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a1, 16
	st.d	$a3, $a0, 16
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
	addi.d	$a1, $a1, 24
	addi.d	$a0, $a0, 24
	bne	$a1, $a2, .LBB51_7
	b	.LBB51_9
.LBB51_8:
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
.LBB51_9:                               # %_ZNSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEEC2IRlRKSF_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISM_SN_EEEbE4typeELb1EEEOSM_OSN_.exit.i.i
	st.d	$a0, $s4, 16
	ld.d	$a0, $s0, 104
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 104
.LBB51_10:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EE8_M_queueElRKSM_.exit
	move	$s3, $zero
	addi.d	$a0, $fp, -1
	sltui	$s4, $a0, 1
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a0, $a0, -1366
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	b	.LBB51_12
	.p2align	4, , 16
.LBB51_11:                              # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev.exit
                                        #   in Loop: Header=BB51_12 Depth=1
	beq	$s8, $s5, .LBB51_29
.LBB51_12:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB51_16 Depth 2
                                        #     Child Loop BB51_24 Depth 2
	ld.d	$s1, $s0, 96
	ld.d	$s6, $s0, 104
	st.b	$zero, $s0, 140
	beq	$s1, $s6, .LBB51_28
# %bb.13:                               #   in Loop: Header=BB51_12 Depth=1
	ld.d	$a0, $s0, 56
	ld.d	$a1, $a0, 64
	ld.d	$a2, $a0, 56
	beq	$a1, $a2, .LBB51_15
# %bb.14:                               # %.lr.ph.preheader.i
                                        #   in Loop: Header=BB51_12 Depth=1
	ld.d	$a0, $s0, 120
	sub.d	$a1, $a1, $a2
	srli.d	$a1, $a1, 4
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	mul.d	$a2, $a1, $a2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
.LBB51_15:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB51_12 Depth=1
	ld.d	$s7, $s0, 112
	st.d	$s1, $sp, 48
	st.d	$s6, $sp, 56
	st.d	$s7, $sp, 64
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	vst	$vr1, $a0, 0
	st.d	$zero, $a0, 16
	move	$s5, $s1
	.p2align	4, , 16
.LBB51_16:                              # %.lr.ph
                                        #   Parent Loop BB51_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $s5, 24
	vld	$vr0, $s5, 8
	st.d	$zero, $s5, 8
	vst	$vr1, $s5, 16
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s0, 16
	vst	$vr0, $s0, 0
	st.d	$a2, $s0, 16
	beqz	$a0, .LBB51_18
# %bb.17:                               #   in Loop: Header=BB51_16 Depth=2
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB51_18:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
                                        #   in Loop: Header=BB51_16 Depth=2
	ld.d	$a2, $s5, 0
.Ltmp886:                               # EH_LABEL
	move	$a0, $s0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.Ltmp887:                               # EH_LABEL
# %bb.19:                               #   in Loop: Header=BB51_16 Depth=2
	addi.d	$s5, $s5, 32
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
	bne	$s5, $s6, .LBB51_16
# %bb.20:                               # %._crit_edge
                                        #   in Loop: Header=BB51_12 Depth=1
	ld.d	$s8, $s0, 24
	ld.d	$s5, $s0, 40
	beq	$s8, $s5, .LBB51_22
# %bb.21:                               #   in Loop: Header=BB51_12 Depth=1
	addi.d	$a0, $s8, 1
	st.d	$a0, $s0, 24
.LBB51_22:                              # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB51_12 Depth=1
	ld.b	$a0, $s0, 140
	or	$a0, $a0, $s3
	andi	$a0, $a0, 1
	masknez	$a1, $s3, $s4
	maskeqz	$a0, $a0, $s4
	or	$s3, $a0, $a1
	move	$s2, $s1
	b	.LBB51_24
	.p2align	4, , 16
.LBB51_23:                              # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB51_24 Depth=2
	addi.d	$s2, $s2, 32
	beq	$s2, $s6, .LBB51_26
.LBB51_24:                              # %.lr.ph.i.i
                                        #   Parent Loop BB51_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, 8
	beqz	$a0, .LBB51_23
# %bb.25:                               #   in Loop: Header=BB51_24 Depth=2
	ld.d	$a1, $s2, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
	b	.LBB51_23
	.p2align	4, , 16
.LBB51_26:                              # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i
                                        #   in Loop: Header=BB51_12 Depth=1
	beqz	$s1, .LBB51_11
# %bb.27:                               #   in Loop: Header=BB51_12 Depth=1
	sub.d	$a1, $s7, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
	b	.LBB51_11
.LBB51_28:
	move	$s1, $zero
	b	.LBB51_35
.LBB51_29:                              # %split
	ld.d	$s2, $s0, 96
	ld.d	$s4, $s0, 104
	ld.bu	$s1, $s0, 140
	beq	$s4, $s2, .LBB51_35
# %bb.30:                               # %.lr.ph.i.i.i.preheader
	move	$s5, $s2
	b	.LBB51_32
	.p2align	4, , 16
.LBB51_31:                              # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB51_32 Depth=1
	addi.d	$s5, $s5, 32
	beq	$s5, $s4, .LBB51_34
.LBB51_32:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s5, 8
	beqz	$a0, .LBB51_31
# %bb.33:                               #   in Loop: Header=BB51_32 Depth=1
	ld.d	$a1, $s5, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB51_31
.LBB51_34:                              # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i
	st.d	$s2, $s0, 104
.LBB51_35:                              # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE5clearEv.exit
	sltui	$a0, $fp, 1
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s1, $a0
	or	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB51_36:
.Ltmp888:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end51:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE, .Lfunc_end51-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,comdat
	.p2align	2, 0x0
GCC_except_table51:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Lfunc_begin23-.Lfunc_begin23  # >> Call Site 1 <<
	.uleb128 .Ltmp886-.Lfunc_begin23        #   Call between .Lfunc_begin23 and .Ltmp886
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp886-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Ltmp887-.Ltmp886              #   Call between .Ltmp886 and .Ltmp887
	.uleb128 .Ltmp888-.Lfunc_begin23        #     jumps to .Ltmp888
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp887-.Lfunc_begin23        # >> Call Site 3 <<
	.uleb128 .Lfunc_end51-.Ltmp887          #   Call between .Ltmp887 and .Lfunc_end51
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 120
	ldx.bu	$a3, $a0, $a2
	beqz	$a3, .LBB52_2
.LBB52_1:                               # %common.ret
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB52_2:                               # %.lr.ph.lr.ph
	move	$s0, $a1
	add.d	$a0, $a0, $a2
	ori	$s2, $zero, 1
	ori	$s3, $zero, 11
	pcalau12i	$a1, %pc_hi20(.LJTI52_0)
	addi.d	$s4, $a1, %pc_lo12(.LJTI52_0)
	ori	$s5, $zero, 2064
	b	.LBB52_6
.LBB52_3:                               #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a1, $s6, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl)
	jirl	$ra, $ra, 0
.LBB52_4:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_word_boundaryEv.exit
                                        #   in Loop: Header=BB52_6 Depth=1
	ld.bu	$a1, $s6, 24
	beq	$a1, $a0, .LBB52_1
.LBB52_5:                               # %tailrecurse.backedge
                                        #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a2, $s6, 8
	ld.d	$a0, $fp, 120
	ldx.bu	$a1, $a0, $a2
	add.d	$a0, $a0, $a2
	bnez	$a1, .LBB52_1
.LBB52_6:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 56
	ld.d	$a3, $a1, 56
	slli.d	$a4, $a2, 5
	alsl.d	$a4, $a2, $a4, 4
	ldx.w	$a5, $a3, $a4
	addi.d	$a5, $a5, -1
	st.b	$s2, $a0, 0
	bltu	$s3, $a5, .LBB52_1
# %bb.7:                                # %.lr.ph
                                        #   in Loop: Header=BB52_6 Depth=1
	slli.d	$a0, $a5, 2
	ldx.w	$a0, $s4, $a0
	add.d	$a0, $s4, $a0
	add.d	$s6, $a3, $a4
	jr	$a0
.LBB52_8:                               #   in Loop: Header=BB52_6 Depth=1
	ld.wu	$a0, $a1, 24
	ld.d	$a2, $s6, 16
	andi	$s7, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$s1, $fp, 140
	beqz	$s7, .LBB52_48
# %bb.9:                                #   in Loop: Header=BB52_6 Depth=1
	beqz	$s1, .LBB52_5
	b	.LBB52_1
.LBB52_10:                              #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	bne	$a0, $a1, .LBB52_13
# %bb.11:                               #   in Loop: Header=BB52_6 Depth=1
	ld.wu	$a1, $fp, 136
	andi	$a2, $a1, 1
	bnez	$a2, .LBB52_1
# %bb.12:                               #   in Loop: Header=BB52_6 Depth=1
	andi	$a1, $a1, 128
	beqz	$a1, .LBB52_5
.LBB52_13:                              #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s5, .LBB52_1
# %bb.14:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_M_at_beginEv.exit
                                        #   in Loop: Header=BB52_6 Depth=1
	ld.b	$a1, $a0, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB52_5
	b	.LBB52_1
.LBB52_15:                              #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB52_34
# %bb.16:                               #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s5, .LBB52_1
# %bb.17:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE9_M_at_endEv.exit
                                        #   in Loop: Header=BB52_6 Depth=1
	ld.b	$a1, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB52_5
	b	.LBB52_1
.LBB52_18:                              #   in Loop: Header=BB52_6 Depth=1
	ld.bu	$a0, $s6, 24
	bnez	$a0, .LBB52_49
# %bb.19:                               #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a0, $fp, 72
	alsl.d	$s1, $a2, $a0, 4
	ld.w	$s7, $s1, 8
	beqz	$s7, .LBB52_35
# %bb.20:                               #   in Loop: Header=BB52_6 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
	bne	$s8, $a0, .LBB52_36
# %bb.21:                               #   in Loop: Header=BB52_6 Depth=1
	blt	$s2, $s7, .LBB52_5
# %bb.22:                               #   in Loop: Header=BB52_6 Depth=1
	addi.d	$a0, $s7, 1
	st.w	$a0, $s1, 8
	ld.d	$a2, $s6, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 8
	addi.d	$s7, $a0, -1
	b	.LBB52_37
.LBB52_23:                              #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 32
	bne	$a1, $a0, .LBB52_25
# %bb.24:                               #   in Loop: Header=BB52_6 Depth=1
	ld.bu	$a2, $fp, 136
	andi	$a2, $a2, 4
	bnez	$a2, .LBB52_38
.LBB52_25:                              #   in Loop: Header=BB52_6 Depth=1
	ld.d	$a2, $fp, 40
	bne	$a1, $a2, .LBB52_27
# %bb.26:                               #   in Loop: Header=BB52_6 Depth=1
	ld.bu	$a3, $fp, 136
	andi	$a3, $a3, 8
	bnez	$a3, .LBB52_38
.LBB52_27:                              #   in Loop: Header=BB52_6 Depth=1
	bne	$a1, $a0, .LBB52_31
# %bb.28:                               #   in Loop: Header=BB52_6 Depth=1
	ld.bu	$a0, $fp, 136
	andi	$a0, $a0, 128
	bnez	$a0, .LBB52_31
# %bb.29:                               #   in Loop: Header=BB52_6 Depth=1
	move	$s1, $zero
	bne	$a1, $a2, .LBB52_32
.LBB52_30:                              #   in Loop: Header=BB52_6 Depth=1
	move	$a0, $zero
	b	.LBB52_33
.LBB52_31:                              #   in Loop: Header=BB52_6 Depth=1
	ld.b	$a1, $a1, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 24
	ld.d	$a2, $fp, 40
	move	$s1, $a0
	beq	$a1, $a2, .LBB52_30
.LBB52_32:                              #   in Loop: Header=BB52_6 Depth=1
	ld.b	$a1, $a1, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
.LBB52_33:                              #   in Loop: Header=BB52_6 Depth=1
	xor	$a0, $s1, $a0
	sltu	$a0, $zero, $a0
	b	.LBB52_4
.LBB52_34:                              #   in Loop: Header=BB52_6 Depth=1
	ld.bu	$a0, $fp, 136
	andi	$a0, $a0, 2
	beqz	$a0, .LBB52_5
	b	.LBB52_1
.LBB52_35:                              # %._crit_edge
                                        #   in Loop: Header=BB52_6 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
.LBB52_36:                              #   in Loop: Header=BB52_6 Depth=1
	st.d	$a0, $s1, 0
	st.w	$s2, $s1, 8
	ld.d	$a2, $s6, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s8, $s1, 0
.LBB52_37:                              # %tailrecurse.backedge.sink.split
                                        #   in Loop: Header=BB52_6 Depth=1
	st.w	$s7, $s1, 8
	b	.LBB52_5
.LBB52_38:                              #   in Loop: Header=BB52_6 Depth=1
	move	$a0, $zero
	b	.LBB52_4
.LBB52_39:
	ld.d	$a0, $s6, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s2, $a0, $a1
	add.d	$s3, $s1, $s2
	ld.b	$s4, $s3, 16
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s6, 8
	vldx	$vr0, $s1, $s2
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	ori	$a1, $zero, 1
	st.b	$a1, $s3, 16
	st.d	$a0, $s3, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vstx	$vr0, $s1, $s2
	st.b	$s4, $s3, 16
	b	.LBB52_1
.LBB52_40:
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl)
	jr	$t8
.LBB52_41:
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	bne	$a0, $a1, .LBB52_43
# %bb.42:
	ld.bu	$a1, $fp, 136
	andi	$a1, $a1, 32
	bnez	$a1, .LBB52_1
.LBB52_43:
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, -1
	sltu	$a2, $zero, $a2
	xor	$a0, $a0, $a1
	sltu	$a0, $zero, $a0
	and	$a0, $a2, $a0
	bnez	$a0, .LBB52_1
# %bb.44:
	ld.b	$a0, $fp, 140
	andi	$a0, $a0, 1
	bnez	$a0, .LBB52_1
# %bb.45:
	ld.d	$a0, $fp, 64
	ori	$a1, $zero, 1
	st.b	$a1, $fp, 140
	move	$a1, $fp
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jr	$t8
.LBB52_46:
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl)
	jr	$t8
.LBB52_47:
	ld.d	$a0, $s6, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s2, $a0, $a1
	ldx.d	$s3, $s1, $s2
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s6, 8
	stx.d	$a0, $s1, $s2
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	stx.d	$s3, $s1, $s2
	b	.LBB52_1
.LBB52_48:
	ld.d	$a2, $s6, 8
	st.b	$zero, $fp, 140
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.b	$a0, $fp, 140
	or	$a0, $a0, $s1
	st.b	$a0, $fp, 140
	b	.LBB52_1
.LBB52_49:
	ld.bu	$a0, $fp, 140
	bnez	$a0, .LBB52_1
# %bb.50:
	ld.d	$a3, $s6, 8
	move	$a0, $fp
	move	$a1, $s0
	move	$s1, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $fp, 140
	bnez	$a0, .LBB52_1
# %bb.51:
	move	$a2, $s1
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl)
	jr	$t8
.Lfunc_end52:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl, .Lfunc_end52-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,comdat
	.p2align	2, 0x0
.LJTI52_0:
	.word	.LBB52_8-.LJTI52_0
	.word	.LBB52_18-.LJTI52_0
	.word	.LBB52_40-.LJTI52_0
	.word	.LBB52_10-.LJTI52_0
	.word	.LBB52_15-.LJTI52_0
	.word	.LBB52_23-.LJTI52_0
	.word	.LBB52_3-.LJTI52_0
	.word	.LBB52_47-.LJTI52_0
	.word	.LBB52_39-.LJTI52_0
	.word	.LBB52_1-.LJTI52_0
	.word	.LBB52_46-.LJTI52_0
	.word	.LBB52_41-.LJTI52_0
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_ # -- Begin function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,@function
_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_: # @_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s4, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s8, $s4, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s8, $a0, .LBB53_12
# %bb.1:                                # %_ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE12_M_check_lenEmS6_.exit
	move	$s2, $a2
	move	$s3, $a1
	srai.d	$a0, $s8, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 0
	ld.d	$s5, $s2, 8
	ld.d	$s6, $s2, 0
	move	$s2, $a0
	add.d	$s7, $a0, $s8
	stx.d	$a1, $a0, $s8
	sub.d	$s3, $s5, $s6
	st.d	$zero, $s7, 8
	vrepli.b	$vr0, 0
	vst	$vr0, $s7, 16
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	beq	$s5, $s6, .LBB53_6
# %bb.2:                                # %_ZNSt15__new_allocatorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEE8allocateEmPKv.exit.i.i.i.i.i
.Ltmp889:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp890:                               # EH_LABEL
# %bb.3:                                # %.noexc
	st.d	$a0, $s7, 8
	addi.d	$a1, $s7, 16
	st.d	$a0, $s7, 16
	add.d	$a2, $a0, $s3
	st.d	$a2, $s7, 24
	.p2align	4, , 16
.LBB53_4:                               # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s6, 16
	st.d	$a2, $a0, 16
	vld	$vr0, $s6, 0
	vst	$vr0, $a0, 0
	addi.d	$s6, $s6, 24
	addi.d	$a0, $a0, 24
	bne	$s6, $s5, .LBB53_4
# %bb.5:                                # %.loopexit
	st.d	$a0, $a1, 0
	move	$s3, $s2
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	bne	$s0, $s4, .LBB53_7
	b	.LBB53_9
.LBB53_6:                               # %.noexc.thread
	move	$a0, $zero
	addi.d	$a2, $s7, 8
	addi.d	$a1, $s7, 16
	vst	$vr0, $a2, 0
	st.d	$s3, $s7, 24
	st.d	$a0, $a1, 0
	move	$s3, $s2
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	beq	$s0, $s4, .LBB53_9
.LBB53_7:                               # %.lr.ph.i.i.i.preheader
	move	$s3, $s2
	move	$a0, $s0
	.p2align	4, , 16
.LBB53_8:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 0
	vld	$vr0, $a0, 8
	ld.d	$a2, $a0, 24
	st.d	$a1, $s3, 0
	vst	$vr0, $s3, 8
	st.d	$a2, $s3, 24
	vst	$vr1, $a0, 8
	st.d	$zero, $a0, 24
	addi.d	$a0, $a0, 32
	addi.d	$s3, $s3, 32
	bne	$a0, $s4, .LBB53_8
.LBB53_9:                               # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE11_S_relocateEPSG_SJ_SJ_RSH_.exit
	beqz	$s0, .LBB53_11
# %bb.10:                               # %_ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE13_M_deallocateEPSH_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_11:                              # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB53_12:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB53_13:                              # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE12_Guard_allocD2Ev.exit23
.Ltmp891:                               # EH_LABEL
	move	$fp, $a0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end53:
	.size	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_, .Lfunc_end53-_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table53:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24  # >> Call Site 1 <<
	.uleb128 .Ltmp889-.Lfunc_begin24        #   Call between .Lfunc_begin24 and .Ltmp889
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp889-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Ltmp890-.Ltmp889              #   Call between .Ltmp889 and .Ltmp890
	.uleb128 .Ltmp891-.Lfunc_begin24        #     jumps to .Ltmp891
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp890-.Lfunc_begin24        # >> Call Site 3 <<
	.uleb128 .Lfunc_end53-.Ltmp890          #   Call between .Ltmp890 and .Lfunc_end53
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB54_11
# %bb.1:
	ld.d	$a1, $fp, 56
	ld.d	$a1, $a1, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$s0, $a1, $a2
	ld.b	$a0, $a0, 0
	ld.d	$a1, $s0, 32
	st.b	$a0, $sp, 7
	beqz	$a1, .LBB54_12
# %bb.2:                                # %_ZNKSt8__detail6_StateIcE10_M_matchesEc.exit
	ld.d	$a2, $s0, 40
	addi.d	$a0, $s0, 16
	addi.d	$a1, $sp, 7
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB54_11
# %bb.3:
	ld.d	$a0, $s0, 8
	ld.d	$s1, $fp, 104
	ld.d	$a1, $fp, 112
	st.d	$a0, $sp, 8
	beq	$s1, $a1, .LBB54_6
# %bb.4:
	ld.d	$a1, $fp, 8
	ld.d	$a2, $fp, 0
	st.d	$a0, $s1, 0
	sub.d	$s0, $a1, $a2
	vrepli.b	$vr0, 0
	vst	$vr0, $s1, 8
	st.d	$zero, $s1, 24
	beq	$a1, $a2, .LBB54_7
# %bb.5:                                # %_ZNSt15__new_allocatorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEE8allocateEmPKv.exit.i.i.i.i.i.i.i
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	b	.LBB54_8
.LBB54_6:
	addi.d	$a0, $fp, 96
	addi.d	$a1, $sp, 8
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB54_11
.LBB54_7:
	move	$a0, $zero
.LBB54_8:
	st.d	$a0, $s1, 8
	st.d	$a0, $s1, 16
	add.d	$a1, $a0, $s0
	st.d	$a1, $s1, 24
	ld.d	$a1, $fp, 0
	ld.d	$a2, $fp, 8
	beq	$a1, $a2, .LBB54_10
	.p2align	4, , 16
.LBB54_9:                               # %.lr.ph.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a1, 16
	st.d	$a3, $a0, 16
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
	addi.d	$a1, $a1, 24
	addi.d	$a0, $a0, 24
	bne	$a1, $a2, .LBB54_9
.LBB54_10:                              # %_ZNSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEEC2IRlRKSF_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISM_SN_EEEbE4typeELb1EEEOSM_OSN_.exit.i.i
	ld.d	$a1, $fp, 104
	st.d	$a0, $s1, 16
	addi.d	$a0, $a1, 32
	st.d	$a0, $fp, 104
.LBB54_11:
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB54_12:
	pcaddu18i	$ra, %call36(_ZSt25__throw_bad_function_callv)
	jirl	$ra, $ra, 0
.Lfunc_end54:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl, .Lfunc_end54-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 56
	ld.d	$a0, $a0, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$s2, $a0, $a2
	ld.d	$a0, $s2, 16
	ld.d	$a2, $fp, 0
	slli.d	$a3, $a0, 4
	alsl.d	$a0, $a0, $a3, 3
	add.d	$a2, $a2, $a0
	ld.bu	$a0, $a2, 16
	ori	$a3, $zero, 1
	bne	$a0, $a3, .LBB55_13
# %bb.1:
	move	$s0, $a1
	ld.d	$a3, $fp, 24
	ld.d	$a0, $fp, 40
	beq	$a0, $a3, .LBB55_8
# %bb.2:                                # %.lr.ph
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	nor	$a4, $a3, $zero
	add.d	$a4, $a4, $a0
	sub.d	$a5, $a2, $a1
	sltu	$a6, $a4, $a5
	masknez	$a5, $a5, $a6
	maskeqz	$a4, $a4, $a6
	or	$a5, $a4, $a5
	addi.d	$a6, $a5, 1
	ori	$a7, $zero, 3
	move	$a4, $a1
	move	$s1, $a3
	bltu	$a6, $a7, .LBB55_5
# %bb.3:                                # %vector.ph
	bstrins.d	$a5, $zero, 0, 0
	add.d	$a4, $a1, $a5
	add.d	$s1, $a3, $a5
	.p2align	4, , 16
.LBB55_4:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a5, $a5, -2
	bnez	$a5, .LBB55_4
	.p2align	4, , 16
.LBB55_5:                               # %scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	beq	$a4, $a2, .LBB55_9
# %bb.6:                                #   in Loop: Header=BB55_5 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$a4, $a4, 1
	bne	$s1, $a0, .LBB55_5
# %bb.7:
	move	$s1, $a0
	b	.LBB55_9
.LBB55_8:                               # %..critedge_crit_edge
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	move	$s1, $a3
.LBB55_9:                               # %.critedge
	ld.d	$a0, $fp, 48
	ld.d	$a4, $a0, 16
	ld.bu	$a0, $a0, 0
	addi.d	$a4, $a4, 80
	andi	$a0, $a0, 1
	st.b	$a0, $sp, 16
	st.d	$a4, $sp, 24
	addi.d	$a0, $sp, 16
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB55_13
# %bb.10:
	ld.d	$s3, $fp, 24
	beq	$s1, $s3, .LBB55_12
# %bb.11:
	ld.d	$a2, $s2, 8
	st.d	$s1, $fp, 24
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s3, $fp, 24
	b	.LBB55_13
.LBB55_12:
	ld.d	$a2, $s2, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.LBB55_13:
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end55:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl, .Lfunc_end55-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 56
	ld.d	$a4, $a0, 72
	ld.d	$a3, $a3, 56
	alsl.d	$fp, $a2, $a4, 4
	ld.w	$s0, $fp, 8
	slli.d	$a4, $a2, 5
	alsl.d	$a2, $a2, $a4, 4
	add.d	$a2, $a3, $a2
	beqz	$s0, .LBB56_4
# %bb.1:
	ld.d	$s1, $fp, 0
	ld.d	$a3, $a0, 24
	bne	$s1, $a3, .LBB56_5
# %bb.2:
	ori	$a3, $zero, 1
	blt	$a3, $s0, .LBB56_7
# %bb.3:
	addi.d	$a3, $s0, 1
	st.w	$a3, $fp, 8
	ld.d	$a2, $a2, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 8
	addi.d	$s0, $a0, -1
	b	.LBB56_6
.LBB56_4:                               # %._crit_edge
	ld.d	$s1, $fp, 0
	ld.d	$a3, $a0, 24
.LBB56_5:
	st.d	$a3, $fp, 0
	ori	$a3, $zero, 1
	st.w	$a3, $fp, 8
	ld.d	$a2, $a2, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s1, $fp, 0
.LBB56_6:                               # %.sink.split
	st.w	$s0, $fp, 8
.LBB56_7:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end56:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl, .Lfunc_end56-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
	.p2align	2
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	addi.d	$a1, $a0, 80
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB57_7
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s1, 313
	andi	$s4, $s0, 255
	ldx.bu	$s2, $s3, $s4
	beqz	$s2, .LBB57_3
# %bb.2:                                # %_ZNKSt5ctypeIcE6narrowEcc.exit
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	bne	$a1, $a2, .LBB57_5
	b	.LBB57_6
.LBB57_3:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 64
	ori	$a2, $zero, 32
	ori	$s2, $zero, 32
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	beq	$a0, $s2, .LBB57_5
# %bb.4:
	stx.b	$a0, $s3, $s4
	move	$s2, $a0
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	beq	$a1, $a2, .LBB57_6
.LBB57_5:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit.thread
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 16
	ld.bu	$a0, $a0, 24
	bstrpick.d	$a0, $a0, 4, 4
	andi	$a1, $s2, 255
	addi.d	$a1, $a1, -13
	sltui	$a1, $a1, 1
	and	$a0, $a1, $a0
.LBB57_6:
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB57_7:
.Ltmp892:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp893:                               # EH_LABEL
# %bb.8:                                # %.noexc
.LBB57_9:
.Ltmp894:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end57:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc, .Lfunc_end57-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,"aG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,comdat
	.p2align	2, 0x0
GCC_except_table57:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp892-.Lfunc_begin25        #   Call between .Lfunc_begin25 and .Ltmp892
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp892-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Ltmp893-.Ltmp892              #   Call between .Ltmp892 and .Ltmp893
	.uleb128 .Ltmp894-.Lfunc_begin25        #     jumps to .Ltmp894
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp893-.Lfunc_begin25        # >> Call Site 3 <<
	.uleb128 .Lfunc_end57-.Ltmp893          #   Call between .Ltmp893 and .Lfunc_end57
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.p2align	2
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a0, $a0, 48
	ld.d	$fp, $a0, 16
	move	$s0, $a1
	addi.d	$a0, $fp, 80
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s)
	addi.d	$a1, $a1, %pc_lo12(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s)
	addi.d	$a2, $a1, 1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 80
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$fp, $a1, $a0
	beqz	$fp, .LBB58_9
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $fp, 48
	andi	$s0, $s0, 255
	slli.d	$a1, $s0, 1
	ldx.hu	$a0, $a0, $a1
	and	$a1, $s1, $a0
	ori	$a0, $zero, 1
	bnez	$a1, .LBB58_8
# %bb.2:
	lu12i.w	$a0, 16
	and	$a0, $s1, $a0
	bnez	$a0, .LBB58_4
# %bb.3:
	move	$a0, $zero
	b	.LBB58_8
.LBB58_4:
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB58_6
# %bb.5:
	ld.bu	$a0, $fp, 152
	b	.LBB58_7
.LBB58_6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $fp
	jirl	$ra, $a2, 0
.LBB58_7:                               # %_ZNKSt5ctypeIcE5widenEc.exit.i
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
.LBB58_8:                               # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB58_9:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end58:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc, .Lfunc_end58-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,comdat
	.weak	_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b
	.p2align	2
	.type	_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,@function
_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b: # @_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB59_55
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 32
	st.d	$s5, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $sp, 32
	beq	$s1, $s0, .LBB59_18
# %bb.2:                                # %.lr.ph
	addi.d	$s6, $s2, 313
	ori	$s7, $zero, 15
	b	.LBB59_5
	.p2align	4, , 16
.LBB59_3:                               # %.noexc45
                                        #   in Loop: Header=BB59_5 Depth=1
	ld.d	$a0, $sp, 16
.LBB59_4:                               #   in Loop: Header=BB59_5 Depth=1
	stx.b	$s3, $a0, $s4
	ld.d	$a0, $sp, 16
	addi.d	$a1, $s4, 1
	st.d	$a1, $sp, 24
	addi.d	$s1, $s1, 1
	stx.b	$zero, $a0, $a1
	beq	$s1, $s0, .LBB59_13
.LBB59_5:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ld.b	$a1, $s1, 0
	ld.d	$a2, $a0, 32
.Ltmp895:                               # EH_LABEL
	move	$a0, $s2
	jirl	$ra, $a2, 0
	move	$a1, $a0
.Ltmp896:                               # EH_LABEL
# %bb.6:                                # %_ZNKSt5ctypeIcE7tolowerEc.exit
                                        #   in Loop: Header=BB59_5 Depth=1
	andi	$s4, $a1, 255
	ldx.bu	$s3, $s6, $s4
	bnez	$s3, .LBB59_11
# %bb.7:                                #   in Loop: Header=BB59_5 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 64
.Ltmp897:                               # EH_LABEL
	move	$a0, $s2
	move	$a2, $zero
	jirl	$ra, $a3, 0
.Ltmp898:                               # EH_LABEL
# %bb.8:                                # %.noexc
                                        #   in Loop: Header=BB59_5 Depth=1
	move	$s3, $a0
	beqz	$a0, .LBB59_10
# %bb.9:                                #   in Loop: Header=BB59_5 Depth=1
	stx.b	$s3, $s6, $s4
	b	.LBB59_11
.LBB59_10:                              #   in Loop: Header=BB59_5 Depth=1
	move	$s3, $zero
	.p2align	4, , 16
.LBB59_11:                              # %_ZNKSt5ctypeIcE6narrowEcc.exit
                                        #   in Loop: Header=BB59_5 Depth=1
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 32
	ld.d	$s4, $sp, 24
	xor	$a2, $a0, $s5
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s7, $a2
	or	$a1, $a2, $a1
	bltu	$s4, $a1, .LBB59_4
# %bb.12:                               #   in Loop: Header=BB59_5 Depth=1
.Ltmp899:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 1
	move	$a1, $s4
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp900:                               # EH_LABEL
	b	.LBB59_3
.LBB59_13:                              # %.preheader
	ld.d	$s1, $sp, 24
	ld.d	$s0, $sp, 16
	ori	$a0, $zero, 1
	beq	$s1, $a0, .LBB59_31
# %bb.14:                               # %.preheader
	ori	$a0, $zero, 5
	beq	$s1, $a0, .LBB59_19
# %bb.15:                               # %.preheader
	ori	$a0, $zero, 6
	bne	$s1, $a0, .LBB59_34
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.14
	pcalau12i	$a0, %pc_hi20(.L.str.64)
	addi.d	$a1, $a0, %pc_lo12(.L.str.64)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB59_34
# %bb.17:
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11+224)
	addi.d	$a0, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11+224)
	b	.LBB59_48
.LBB59_18:
	move	$s2, $zero
	move	$s1, $zero
	move	$fp, $zero
	b	.LBB59_54
.LBB59_19:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.3
	pcalau12i	$a0, %pc_hi20(.L.str.53)
	addi.d	$a1, $a0, %pc_lo12(.L.str.53)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	addi.d	$s2, $a1, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	beqz	$a0, .LBB59_35
# %bb.20:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.4
	pcalau12i	$a0, %pc_hi20(.L.str.54)
	addi.d	$a1, $a0, %pc_lo12(.L.str.54)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_37
# %bb.21:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.5
	pcalau12i	$a0, %pc_hi20(.L.str.55)
	addi.d	$a1, $a0, %pc_lo12(.L.str.55)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_39
# %bb.22:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.6
	pcalau12i	$a0, %pc_hi20(.L.str.56)
	addi.d	$a1, $a0, %pc_lo12(.L.str.56)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_41
# %bb.23:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.7
	pcalau12i	$a0, %pc_hi20(.L.str.57)
	addi.d	$a1, $a0, %pc_lo12(.L.str.57)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_42
# %bb.24:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.8
	pcalau12i	$a0, %pc_hi20(.L.str.58)
	addi.d	$a1, $a0, %pc_lo12(.L.str.58)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_43
# %bb.25:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.9
	pcalau12i	$a0, %pc_hi20(.L.str.59)
	addi.d	$a1, $a0, %pc_lo12(.L.str.59)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_44
# %bb.26:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.10
	pcalau12i	$a0, %pc_hi20(.L.str.60)
	addi.d	$a1, $a0, %pc_lo12(.L.str.60)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_45
# %bb.27:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.11
	pcalau12i	$a0, %pc_hi20(.L.str.61)
	addi.d	$a1, $a0, %pc_lo12(.L.str.61)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_46
# %bb.28:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.12
	pcalau12i	$a0, %pc_hi20(.L.str.62)
	addi.d	$a1, $a0, %pc_lo12(.L.str.62)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_47
# %bb.29:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.13
	pcalau12i	$a0, %pc_hi20(.L.str.63)
	addi.d	$a1, $a0, %pc_lo12(.L.str.63)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB59_34
# %bb.30:
	addi.d	$a0, $s2, 208
	b	.LBB59_48
.LBB59_31:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	pcalau12i	$a0, %pc_hi20(.L.str.51)
	addi.d	$a1, $a0, %pc_lo12(.L.str.51)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_36
# %bb.32:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.1
	pcalau12i	$a0, %pc_hi20(.L.str.52)
	addi.d	$a1, $a0, %pc_lo12(.L.str.52)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	addi.d	$s2, $a1, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	beqz	$a0, .LBB59_38
# %bb.33:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.2
	pcalau12i	$a0, %pc_hi20(.L.str.27)
	addi.d	$a1, $a0, %pc_lo12(.L.str.27)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB59_40
.LBB59_34:
	move	$fp, $zero
	move	$s1, $zero
	move	$s2, $zero
	b	.LBB59_52
.LBB59_35:
	addi.d	$a0, $s2, 48
	b	.LBB59_48
.LBB59_36:
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	b	.LBB59_48
.LBB59_37:
	addi.d	$a0, $s2, 64
	b	.LBB59_48
.LBB59_38:
	addi.d	$a0, $s2, 16
	b	.LBB59_48
.LBB59_39:
	addi.d	$a0, $s2, 80
	b	.LBB59_48
.LBB59_40:
	addi.d	$a0, $s2, 32
	b	.LBB59_48
.LBB59_41:
	addi.d	$a0, $s2, 96
	b	.LBB59_48
.LBB59_42:
	addi.d	$a0, $s2, 112
	b	.LBB59_48
.LBB59_43:
	addi.d	$a0, $s2, 128
	b	.LBB59_48
.LBB59_44:
	addi.d	$a0, $s2, 144
	b	.LBB59_48
.LBB59_45:
	addi.d	$a0, $s2, 160
	b	.LBB59_48
.LBB59_46:
	addi.d	$a0, $s2, 176
	b	.LBB59_48
.LBB59_47:
	addi.d	$a0, $s2, 192
.LBB59_48:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	beqz	$fp, .LBB59_51
# %bb.49:
	ld.hu	$a1, $a0, 8
	andi	$a1, $a1, 768
	beqz	$a1, .LBB59_51
# %bb.50:
	move	$s1, $zero
	move	$s2, $zero
	ori	$fp, $zero, 1024
	b	.LBB59_52
.LBB59_51:                              # %.critedge
	ld.wu	$a0, $a0, 8
	lu12i.w	$a1, -4096
	lu32i.d	$a1, 0
	and	$s2, $a0, $a1
	lu12i.w	$a1, 4080
	and	$s1, $a0, $a1
	bstrpick.d	$fp, $a0, 15, 0
.LBB59_52:                              # %.critedge44
	beq	$s0, $s5, .LBB59_54
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_54:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	or	$a0, $s1, $fp
	or	$a0, $a0, $s2
	bstrpick.d	$a0, $a0, 31, 0
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB59_55:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB59_56:
.Ltmp901:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s5, .LBB59_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i46
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_58:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end59:
	.size	_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b, .Lfunc_end59-_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,comdat
	.p2align	2, 0x0
GCC_except_table59:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Lfunc_begin26-.Lfunc_begin26  # >> Call Site 1 <<
	.uleb128 .Ltmp895-.Lfunc_begin26        #   Call between .Lfunc_begin26 and .Ltmp895
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp895-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Ltmp900-.Ltmp895              #   Call between .Ltmp895 and .Ltmp900
	.uleb128 .Ltmp901-.Lfunc_begin26        #     jumps to .Ltmp901
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp900-.Lfunc_begin26        # >> Call Site 3 <<
	.uleb128 .Lfunc_end59-.Ltmp900          #   Call between .Ltmp900 and .Lfunc_end59
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	st.d	$s1, $sp, 192                   # 8-byte Folded Spill
	st.d	$s2, $sp, 184                   # 8-byte Folded Spill
	st.d	$s3, $sp, 176                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ld.d	$s2, $a0, 8
	ld.d	$s3, $a0, 0
	move	$fp, $a1
	sub.d	$s1, $s2, $s3
	st.d	$zero, $sp, 152
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 160
	beq	$s2, $s3, .LBB60_3
# %bb.1:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 152
	st.d	$a0, $sp, 160
	add.d	$a1, $a0, $s1
	st.d	$a1, $sp, 168
	.p2align	4, , 16
.LBB60_2:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s3, 16
	st.d	$a1, $a0, 16
	vld	$vr0, $s3, 0
	vst	$vr0, $a0, 0
	addi.d	$s3, $s3, 24
	addi.d	$a0, $a0, 24
	bne	$s3, $s2, .LBB60_2
	b	.LBB60_4
.LBB60_3:                               # %.thread
	move	$a0, $zero
	vst	$vr0, $sp, 152
	st.d	$s1, $sp, 168
.LBB60_4:                               # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSE_.exit
	ld.d	$a1, $s0, 24
	ld.d	$a2, $s0, 40
	ld.d	$a4, $s0, 48
	ld.w	$a5, $s0, 136
	st.d	$a0, $sp, 160
.Ltmp902:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	addi.d	$a3, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE)
	jirl	$ra, $ra, 0
.Ltmp903:                               # EH_LABEL
# %bb.5:
	ld.d	$a0, $sp, 40
	st.d	$fp, $sp, 136
	st.d	$a0, $sp, 32
.Ltmp905:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	ori	$a1, $zero, 1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp906:                               # EH_LABEL
# %bb.6:                                # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE20_M_search_from_firstEv.exit
	move	$fp, $a0
	beqz	$a0, .LBB60_12
# %bb.7:                                # %.preheader
	ld.d	$a0, $sp, 160
	ld.d	$a2, $sp, 152
	beq	$a0, $a2, .LBB60_12
# %bb.8:                                # %.lr.ph
	sub.d	$a0, $a0, $a2
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mulh.du	$a0, $a0, $a1
	srli.d	$a1, $a0, 4
	ld.d	$a3, $s0, 0
	ori	$a0, $zero, 1
	sltu	$a4, $a0, $a1
	maskeqz	$a1, $a1, $a4
	masknez	$a4, $a0, $a4
	or	$a1, $a1, $a4
	addi.d	$a2, $a2, 16
	addi.d	$a3, $a3, 16
	b	.LBB60_10
	.p2align	4, , 16
.LBB60_9:                               #   in Loop: Header=BB60_10 Depth=1
	addi.d	$a1, $a1, -1
	addi.d	$a2, $a2, 24
	addi.d	$a3, $a3, 24
	beqz	$a1, .LBB60_12
.LBB60_10:                              # =>This Inner Loop Header: Depth=1
	ld.bu	$a4, $a2, 0
	bne	$a4, $a0, .LBB60_9
# %bb.11:                               #   in Loop: Header=BB60_10 Depth=1
	ld.d	$a4, $a2, -16
	st.d	$a4, $a3, -16
	ld.d	$a4, $a2, -8
	st.d	$a4, $a3, -8
	st.b	$a0, $a3, 0
	b	.LBB60_9
.LBB60_12:                              # %.loopexit
	ld.d	$a0, $sp, 128
	beqz	$a0, .LBB60_14
# %bb.13:
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
.LBB60_14:
	ld.d	$s0, $sp, 104
	ld.d	$s1, $sp, 112
	bne	$s0, $s1, .LBB60_25
# %bb.15:                               # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i.i
	beqz	$s0, .LBB60_17
.LBB60_16:
	ld.d	$a0, $sp, 120
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_17:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EED2Ev.exit.i
	ld.d	$a0, $sp, 80
	beqz	$a0, .LBB60_19
# %bb.18:
	ld.d	$a1, $sp, 96
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_19:                              # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i
	ld.d	$a0, $sp, 8
	beqz	$a0, .LBB60_21
# %bb.20:
	ld.d	$a1, $sp, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_21:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev.exit
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB60_23
# %bb.22:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_23:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	move	$a0, $fp
	ld.d	$s3, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
	.p2align	4, , 16
.LBB60_24:                              # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB60_25 Depth=1
	addi.d	$s0, $s0, 32
	beq	$s0, $s1, .LBB60_27
.LBB60_25:                              # %.lr.ph.i.i.i.i16
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB60_24
# %bb.26:                               #   in Loop: Header=BB60_25 Depth=1
	ld.d	$a1, $s0, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB60_24
.LBB60_27:                              # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split.i.i.i
	ld.d	$s0, $sp, 104
	bnez	$s0, .LBB60_16
	b	.LBB60_17
.LBB60_28:
.Ltmp907:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB60_30
.LBB60_29:
.Ltmp904:                               # EH_LABEL
	move	$fp, $a0
.LBB60_30:
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB60_32
# %bb.31:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_32:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit19
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end60:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl, .Lfunc_end60-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,comdat
	.p2align	2, 0x0
GCC_except_table60:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Lfunc_begin27-.Lfunc_begin27  # >> Call Site 1 <<
	.uleb128 .Ltmp902-.Lfunc_begin27        #   Call between .Lfunc_begin27 and .Ltmp902
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp902-.Lfunc_begin27        # >> Call Site 2 <<
	.uleb128 .Ltmp903-.Ltmp902              #   Call between .Ltmp902 and .Ltmp903
	.uleb128 .Ltmp904-.Lfunc_begin27        #     jumps to .Ltmp904
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp905-.Lfunc_begin27        # >> Call Site 3 <<
	.uleb128 .Ltmp906-.Ltmp905              #   Call between .Ltmp905 and .Ltmp906
	.uleb128 .Ltmp907-.Lfunc_begin27        #     jumps to .Ltmp907
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp906-.Lfunc_begin27        # >> Call Site 4 <<
	.uleb128 .Lfunc_end60-.Ltmp906          #   Call between .Ltmp906 and .Lfunc_end60
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,"axG",@progbits,_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,comdat
	.hidden	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_ # -- Begin function _ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
	.weak	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
	.p2align	2
	.type	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,@function
_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_: # @_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.bu	$a5, $a0, 0
	move	$s3, $a4
	move	$fp, $a3
	move	$s0, $a2
	move	$s2, $a1
	beqz	$a5, .LBB61_7
# %bb.1:
	ld.d	$a1, $a0, 8
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB61_12
# %bb.2:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	sub.d	$a0, $s0, $s2
	sub.d	$a1, $s3, $fp
	bne	$a0, $a1, .LBB61_10
# %bb.3:
	ori	$a0, $zero, 1
	beq	$s0, $s2, .LBB61_11
# %bb.4:                                # %.lr.ph.i.preheader.i
	addi.d	$a1, $s2, 1
	.p2align	4, , 16
.LBB61_5:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	move	$s4, $a1
	ld.b	$a1, $a1, -1
	ld.b	$s2, $fp, 0
	ld.d	$a2, $a0, 32
	move	$a0, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s1, 0
	ld.d	$a2, $a1, 32
	move	$s3, $a0
	move	$a0, $s1
	move	$a1, $s2
	jirl	$ra, $a2, 0
	move	$a1, $a0
	xor	$a0, $s3, $a0
	sltui	$a0, $a0, 1
	bne	$s3, $a1, .LBB61_11
# %bb.6:                                # %.lr.ph.i.i
                                        #   in Loop: Header=BB61_5 Depth=1
	addi.d	$fp, $fp, 1
	addi.d	$a1, $s4, 1
	bne	$s4, $s0, .LBB61_5
	b	.LBB61_11
.LBB61_7:
	sub.d	$a2, $s0, $s2
	sub.d	$a0, $s3, $fp
	bne	$a2, $a0, .LBB61_10
# %bb.8:
	ori	$a0, $zero, 1
	beq	$s0, $s2, .LBB61_11
# %bb.9:
	move	$a0, $s2
	move	$a1, $fp
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	b	.LBB61_11
.LBB61_10:
	move	$a0, $zero
.LBB61_11:                              # %_ZSt8__equal4IN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESA_EbT_SB_T0_SC_.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB61_12:
.Ltmp908:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp909:                               # EH_LABEL
# %bb.13:                               # %.noexc
.LBB61_14:
.Ltmp910:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end61:
	.size	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_, .Lfunc_end61-_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,"aG",@progbits,_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,comdat
	.p2align	2, 0x0
GCC_except_table61:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28  # >> Call Site 1 <<
	.uleb128 .Ltmp908-.Lfunc_begin28        #   Call between .Lfunc_begin28 and .Ltmp908
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp908-.Lfunc_begin28        # >> Call Site 2 <<
	.uleb128 .Ltmp909-.Ltmp908              #   Call between .Ltmp908 and .Ltmp909
	.uleb128 .Ltmp910-.Lfunc_begin28        #     jumps to .Ltmp910
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp909-.Lfunc_begin28        # >> Call Site 3 <<
	.uleb128 .Lfunc_end61-.Ltmp909          #   Call between .Ltmp909 and .Lfunc_end61
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_,"axG",@progbits,_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_,comdat
	.weak	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_ # -- Begin function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_
	.p2align	2
	.type	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_,@function
_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_: # @_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_
	.cfi_startproc
# %bb.0:
	beq	$a1, $a0, .LBB62_18
# %bb.1:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	ld.d	$s4, $a1, 8
	ld.d	$s1, $a1, 0
	ld.d	$a1, $a0, 16
	ld.d	$s0, $a0, 0
	sub.d	$fp, $s4, $s1
	sub.d	$s2, $a1, $s0
	bgeu	$s2, $fp, .LBB62_7
# %bb.2:                                # %_ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE11_M_allocateEm.exit.i
	move	$s5, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	beq	$s1, $s4, .LBB62_4
# %bb.3:                                # %.lr.ph.preheader.i.i.i.i
	addi.d	$a0, $fp, -24
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mulh.du	$a0, $a0, $a1
	srli.d	$a0, $a0, 4
	alsl.d	$a0, $a0, $a0, 1
	slli.d	$a0, $a0, 3
	addi.d	$a2, $a0, 24
	move	$a0, $s3
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB62_4:                               # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE20_M_allocate_and_copyINS3_IPKSC_SE_EEEEPSC_mT_SK_.exit
	beqz	$s0, .LBB62_6
# %bb.5:
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_6:                               # %_ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE13_M_deallocateEPSC_m.exit
	move	$a0, $s5
	st.d	$s3, $s5, 0
	add.d	$a1, $s3, $fp
	st.d	$a1, $s5, 16
	move	$s0, $s3
	b	.LBB62_17
.LBB62_7:
	ld.d	$a1, $a0, 8
	sub.d	$a2, $a1, $s0
	bgeu	$a2, $fp, .LBB62_14
# %bb.8:
	add.d	$a2, $s1, $a2
	beq	$a1, $s0, .LBB62_11
# %bb.9:                                # %.lr.ph.i.i27.preheader
	move	$a3, $s0
	.p2align	4, , 16
.LBB62_10:                              # %.lr.ph.i.i27
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a4, $s1, 0
	st.d	$a4, $a3, 0
	ld.d	$a4, $s1, 8
	ld.b	$a5, $s1, 16
	st.d	$a4, $a3, 8
	st.b	$a5, $a3, 16
	addi.d	$s1, $s1, 24
	addi.d	$a3, $a3, 24
	bne	$s1, $a2, .LBB62_10
.LBB62_11:                              # %_ZSt4copyIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESD_ET0_T_SF_SE_.exit
	beq	$a2, $s4, .LBB62_17
	.p2align	4, , 16
.LBB62_12:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a2, 16
	st.d	$a3, $a1, 16
	vld	$vr0, $a2, 0
	vst	$vr0, $a1, 0
	addi.d	$a2, $a2, 24
	addi.d	$a1, $a1, 24
	bne	$a2, $s4, .LBB62_12
# %bb.13:                               # %_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx119sub_matchINS1_IPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISC_SaISC_EEEENS1_IPSC_SH_EEET0_T_SM_SL_.exit.loopexit
	ld.d	$s0, $a0, 0
	b	.LBB62_17
.LBB62_14:
	beq	$s1, $s4, .LBB62_17
# %bb.15:                               # %.lr.ph.i.i.preheader
	move	$a1, $zero
	.p2align	4, , 16
.LBB62_16:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ldx.d	$a2, $s1, $a1
	add.d	$a3, $s1, $a1
	stx.d	$a2, $s0, $a1
	ld.d	$a2, $a3, 8
	ld.b	$a4, $a3, 16
	add.d	$a5, $s0, $a1
	st.d	$a2, $a5, 8
	st.b	$a4, $a5, 16
	addi.d	$a2, $a3, 24
	addi.d	$a1, $a1, 24
	bne	$a2, $s4, .LBB62_16
.LBB62_17:                              # %_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx119sub_matchINS1_IPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISC_SaISC_EEEENS1_IPSC_SH_EEET0_T_SM_SL_.exit
	add.d	$a1, $s0, $fp
	st.d	$a1, $a0, 8
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
.LBB62_18:
	ret
.Lfunc_end62:
	.size	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_, .Lfunc_end62-_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	move	$fp, $a0
	ori	$s3, $zero, 11
	pcalau12i	$a0, %pc_hi20(.LJTI63_0)
	addi.d	$s4, $a0, %pc_lo12(.LJTI63_0)
	ori	$s5, $zero, 1
	ori	$s6, $zero, 2064
	b	.LBB63_4
.LBB63_1:                               #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a1, $s2, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl)
	jirl	$ra, $ra, 0
.LBB63_2:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE16_M_word_boundaryEv.exit
                                        #   in Loop: Header=BB63_4 Depth=1
	ld.bu	$a1, $s2, 24
	beq	$a1, $a0, .LBB63_64
.LBB63_3:                               # %tailrecurse.backedge280
                                        #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a2, $s2, 8
.LBB63_4:                               # %tailrecurse
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 56
	ld.d	$a1, $a0, 56
	slli.d	$a3, $a2, 5
	alsl.d	$s7, $a2, $a3, 4
	ldx.w	$a3, $a1, $s7
	addi.d	$a3, $a3, -1
	bltu	$s3, $a3, .LBB63_64
# %bb.5:                                # %tailrecurse
                                        #   in Loop: Header=BB63_4 Depth=1
	slli.d	$a3, $a3, 2
	ldx.w	$a3, $s4, $a3
	add.d	$a3, $s4, $a3
	add.d	$s2, $a1, $s7
	jr	$a3
.LBB63_6:                               #   in Loop: Header=BB63_4 Depth=1
	ld.wu	$a0, $a0, 24
	ld.d	$a2, $s2, 16
	andi	$s7, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$s1, $fp, 116
	beqz	$s7, .LBB63_57
# %bb.7:                                #   in Loop: Header=BB63_4 Depth=1
	beqz	$s1, .LBB63_3
	b	.LBB63_64
.LBB63_8:                               #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	bne	$a0, $a1, .LBB63_11
# %bb.9:                                #   in Loop: Header=BB63_4 Depth=1
	ld.wu	$a1, $fp, 112
	andi	$a2, $a1, 1
	bnez	$a2, .LBB63_64
# %bb.10:                               #   in Loop: Header=BB63_4 Depth=1
	andi	$a1, $a1, 128
	beqz	$a1, .LBB63_3
.LBB63_11:                              #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s6, .LBB63_64
# %bb.12:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE11_M_at_beginEv.exit
                                        #   in Loop: Header=BB63_4 Depth=1
	ld.b	$a1, $a0, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB63_3
	b	.LBB63_64
.LBB63_13:                              #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB63_32
# %bb.14:                               #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s6, .LBB63_64
# %bb.15:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_at_endEv.exit
                                        #   in Loop: Header=BB63_4 Depth=1
	ld.b	$a1, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB63_3
	b	.LBB63_64
.LBB63_16:                              #   in Loop: Header=BB63_4 Depth=1
	ld.bu	$a0, $s2, 24
	bnez	$a0, .LBB63_52
# %bb.17:                               #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a0, $fp, 72
	alsl.d	$s1, $a2, $a0, 4
	ld.w	$s7, $s1, 8
	beqz	$s7, .LBB63_33
# %bb.18:                               #   in Loop: Header=BB63_4 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
	bne	$s8, $a0, .LBB63_34
# %bb.19:                               #   in Loop: Header=BB63_4 Depth=1
	blt	$s5, $s7, .LBB63_36
# %bb.20:                               #   in Loop: Header=BB63_4 Depth=1
	addi.d	$a0, $s7, 1
	st.w	$a0, $s1, 8
	ld.d	$a2, $s2, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 8
	addi.d	$s7, $a0, -1
	b	.LBB63_35
.LBB63_21:                              #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 32
	bne	$a1, $a0, .LBB63_23
# %bb.22:                               #   in Loop: Header=BB63_4 Depth=1
	ld.bu	$a2, $fp, 112
	andi	$a2, $a2, 4
	bnez	$a2, .LBB63_37
.LBB63_23:                              #   in Loop: Header=BB63_4 Depth=1
	ld.d	$a2, $fp, 40
	bne	$a1, $a2, .LBB63_25
# %bb.24:                               #   in Loop: Header=BB63_4 Depth=1
	ld.bu	$a3, $fp, 112
	andi	$a3, $a3, 8
	bnez	$a3, .LBB63_37
.LBB63_25:                              #   in Loop: Header=BB63_4 Depth=1
	bne	$a1, $a0, .LBB63_29
# %bb.26:                               #   in Loop: Header=BB63_4 Depth=1
	ld.bu	$a0, $fp, 112
	andi	$a0, $a0, 128
	bnez	$a0, .LBB63_29
# %bb.27:                               #   in Loop: Header=BB63_4 Depth=1
	move	$s1, $zero
	bne	$a1, $a2, .LBB63_30
.LBB63_28:                              #   in Loop: Header=BB63_4 Depth=1
	move	$a0, $zero
	b	.LBB63_31
.LBB63_29:                              #   in Loop: Header=BB63_4 Depth=1
	ld.b	$a1, $a1, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 24
	ld.d	$a2, $fp, 40
	move	$s1, $a0
	beq	$a1, $a2, .LBB63_28
.LBB63_30:                              #   in Loop: Header=BB63_4 Depth=1
	ld.b	$a1, $a1, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
.LBB63_31:                              #   in Loop: Header=BB63_4 Depth=1
	xor	$a0, $s1, $a0
	sltu	$a0, $zero, $a0
	b	.LBB63_2
.LBB63_32:                              #   in Loop: Header=BB63_4 Depth=1
	ld.bu	$a0, $fp, 112
	andi	$a0, $a0, 2
	beqz	$a0, .LBB63_3
	b	.LBB63_64
.LBB63_33:                              # %._crit_edge
                                        #   in Loop: Header=BB63_4 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
.LBB63_34:                              #   in Loop: Header=BB63_4 Depth=1
	st.d	$a0, $s1, 0
	st.w	$s5, $s1, 8
	ld.d	$a2, $s2, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s8, $s1, 0
.LBB63_35:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE16_M_rep_once_moreENSH_11_Match_modeEl.exit.sink.split
                                        #   in Loop: Header=BB63_4 Depth=1
	st.w	$s7, $s1, 8
.LBB63_36:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE16_M_rep_once_moreENSH_11_Match_modeEl.exit
                                        #   in Loop: Header=BB63_4 Depth=1
	ld.bu	$a0, $fp, 116
	beqz	$a0, .LBB63_3
	b	.LBB63_64
.LBB63_37:                              #   in Loop: Header=BB63_4 Depth=1
	move	$a0, $zero
	b	.LBB63_2
.LBB63_38:
	ld.d	$a0, $s2, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s3, $a0, $a1
	add.d	$s4, $s1, $s3
	ld.b	$s5, $s4, 16
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s2, 8
	vldx	$vr0, $s1, $s3
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	ori	$a1, $zero, 1
	st.b	$a1, $s4, 16
	st.d	$a0, $s4, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vstx	$vr0, $s1, $s3
	st.b	$s5, $s4, 16
	b	.LBB63_64
.LBB63_39:
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl)
	jr	$t8
.LBB63_40:
	ld.d	$a1, $fp, 24
	ld.d	$a3, $fp, 40
	sltu	$a4, $zero, $s0
	ld.d	$a2, $fp, 32
	xor	$a3, $a1, $a3
	sltui	$a3, $a3, 1
	or	$a3, $a4, $a3
	st.b	$a3, $fp, 116
	bne	$a1, $a2, .LBB63_42
# %bb.41:
	ld.bu	$a4, $fp, 112
	andi	$a4, $a4, 32
	bnez	$a4, .LBB63_60
.LBB63_42:
	beqz	$a3, .LBB63_64
# %bb.43:
	ld.bu	$a0, $a0, 24
	andi	$a0, $a0, 16
	bnez	$a0, .LBB63_58
# %bb.44:
	ld.d	$a0, $fp, 104
	beqz	$a0, .LBB63_46
# %bb.45:
	sub.d	$a0, $a0, $a2
	sub.d	$a2, $a1, $a2
	bge	$a0, $a2, .LBB63_64
.LBB63_46:                              # %.critedge.i
	ld.d	$a0, $fp, 64
	st.d	$a1, $fp, 104
	b	.LBB63_59
.LBB63_47:
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB63_64
# %bb.48:
	ld.b	$a0, $a0, 0
	ld.d	$a1, $s2, 32
	st.b	$a0, $sp, 39
	beqz	$a1, .LBB63_65
# %bb.49:                               # %_ZNKSt8__detail6_StateIcE10_M_matchesEc.exit
	ld.d	$a2, $s2, 40
	addi.d	$a0, $s2, 16
	addi.d	$a1, $sp, 39
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB63_64
# %bb.50:
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s2, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 24
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 24
	addi.d	$a0, $a0, -1
	st.d	$a0, $fp, 24
	b	.LBB63_64
.LBB63_51:
	ld.d	$a0, $s2, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s3, $a0, $a1
	ldx.d	$s4, $s1, $s3
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s2, 8
	stx.d	$a0, $s1, $s3
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	stx.d	$s4, $s1, $s3
	b	.LBB63_64
.LBB63_52:
	ld.d	$a3, $s2, 8
	move	$a0, $fp
	move	$a1, $s0
	move	$s1, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a1, $fp, 116
	bnez	$a1, .LBB63_64
# %bb.53:
	ld.d	$a1, $fp, 56
	ld.d	$a2, $fp, 72
	ld.d	$a1, $a1, 56
	alsl.d	$s1, $s1, $a2, 4
	ld.w	$s2, $s1, 8
	add.d	$a0, $a1, $s7
	beqz	$s2, .LBB63_61
# %bb.54:
	ld.d	$s3, $s1, 0
	ld.d	$a1, $fp, 24
	bne	$s3, $a1, .LBB63_62
# %bb.55:
	ori	$a1, $zero, 1
	blt	$a1, $s2, .LBB63_64
# %bb.56:
	addi.d	$a1, $s2, 1
	st.w	$a1, $s1, 8
	ld.d	$a2, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 8
	addi.d	$s2, $a0, -1
	b	.LBB63_63
.LBB63_57:
	ld.d	$a2, $s2, 8
	st.b	$zero, $fp, 116
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.b	$a0, $fp, 116
	or	$a0, $a0, $s1
	st.b	$a0, $fp, 116
	b	.LBB63_64
.LBB63_58:
	ld.d	$a0, $fp, 64
.LBB63_59:
	move	$a1, $fp
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jr	$t8
.LBB63_60:                              # %.thread.i
	st.b	$zero, $fp, 116
	b	.LBB63_64
.LBB63_61:                              # %._crit_edge.i
	ld.d	$s3, $s1, 0
	ld.d	$a1, $fp, 24
.LBB63_62:
	st.d	$a1, $s1, 0
	ori	$a1, $zero, 1
	st.w	$a1, $s1, 8
	ld.d	$a2, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s3, $s1, 0
.LBB63_63:                              # %.sink.split.i
	st.w	$s2, $s1, 8
.LBB63_64:                              # %common.ret
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB63_65:
	pcaddu18i	$ra, %call36(_ZSt25__throw_bad_function_callv)
	jirl	$ra, $ra, 0
.Lfunc_end63:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl, .Lfunc_end63-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,comdat
	.p2align	2, 0x0
.LJTI63_0:
	.word	.LBB63_6-.LJTI63_0
	.word	.LBB63_16-.LJTI63_0
	.word	.LBB63_39-.LJTI63_0
	.word	.LBB63_8-.LJTI63_0
	.word	.LBB63_13-.LJTI63_0
	.word	.LBB63_21-.LJTI63_0
	.word	.LBB63_1-.LJTI63_0
	.word	.LBB63_51-.LJTI63_0
	.word	.LBB63_38-.LJTI63_0
	.word	.LBB63_64-.LJTI63_0
	.word	.LBB63_47-.LJTI63_0
	.word	.LBB63_40-.LJTI63_0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 56
	ld.d	$a0, $a0, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$s2, $a0, $a2
	ld.d	$a0, $s2, 16
	ld.d	$a2, $fp, 0
	slli.d	$a3, $a0, 4
	alsl.d	$a0, $a0, $a3, 3
	add.d	$a2, $a2, $a0
	ld.bu	$a0, $a2, 16
	ori	$a3, $zero, 1
	bne	$a0, $a3, .LBB64_13
# %bb.1:
	move	$s0, $a1
	ld.d	$a3, $fp, 24
	ld.d	$a0, $fp, 40
	beq	$a0, $a3, .LBB64_8
# %bb.2:                                # %.lr.ph
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	nor	$a4, $a3, $zero
	add.d	$a4, $a4, $a0
	sub.d	$a5, $a2, $a1
	sltu	$a6, $a4, $a5
	masknez	$a5, $a5, $a6
	maskeqz	$a4, $a4, $a6
	or	$a5, $a4, $a5
	addi.d	$a6, $a5, 1
	ori	$a7, $zero, 3
	move	$a4, $a1
	move	$s1, $a3
	bltu	$a6, $a7, .LBB64_5
# %bb.3:                                # %vector.ph
	bstrins.d	$a5, $zero, 0, 0
	add.d	$a4, $a1, $a5
	add.d	$s1, $a3, $a5
	.p2align	4, , 16
.LBB64_4:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a5, $a5, -2
	bnez	$a5, .LBB64_4
	.p2align	4, , 16
.LBB64_5:                               # %scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	beq	$a4, $a2, .LBB64_9
# %bb.6:                                #   in Loop: Header=BB64_5 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$a4, $a4, 1
	bne	$s1, $a0, .LBB64_5
# %bb.7:
	move	$s1, $a0
	b	.LBB64_9
.LBB64_8:                               # %..critedge_crit_edge
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	move	$s1, $a3
.LBB64_9:                               # %.critedge
	ld.d	$a0, $fp, 48
	ld.d	$a4, $a0, 16
	ld.bu	$a0, $a0, 0
	addi.d	$a4, $a4, 80
	andi	$a0, $a0, 1
	st.b	$a0, $sp, 16
	st.d	$a4, $sp, 24
	addi.d	$a0, $sp, 16
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB64_13
# %bb.10:
	ld.d	$s3, $fp, 24
	beq	$s1, $s3, .LBB64_12
# %bb.11:
	ld.d	$a2, $s2, 8
	st.d	$s1, $fp, 24
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s3, $fp, 24
	b	.LBB64_13
.LBB64_12:
	ld.d	$a2, $s2, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.LBB64_13:
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end64:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl, .Lfunc_end64-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
	.p2align	2
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	addi.d	$a1, $a0, 80
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB65_7
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s1, 313
	andi	$s4, $s0, 255
	ldx.bu	$s2, $s3, $s4
	beqz	$s2, .LBB65_3
# %bb.2:                                # %_ZNKSt5ctypeIcE6narrowEcc.exit
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	bne	$a1, $a2, .LBB65_5
	b	.LBB65_6
.LBB65_3:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 64
	ori	$a2, $zero, 32
	ori	$s2, $zero, 32
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	beq	$a0, $s2, .LBB65_5
# %bb.4:
	stx.b	$a0, $s3, $s4
	move	$s2, $a0
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	beq	$a1, $a2, .LBB65_6
.LBB65_5:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit.thread
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 16
	ld.bu	$a0, $a0, 24
	bstrpick.d	$a0, $a0, 4, 4
	andi	$a1, $s2, 255
	addi.d	$a1, $a1, -13
	sltui	$a1, $a1, 1
	and	$a0, $a1, $a0
.LBB65_6:
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB65_7:
.Ltmp911:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp912:                               # EH_LABEL
# %bb.8:                                # %.noexc
.LBB65_9:
.Ltmp913:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end65:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc, .Lfunc_end65-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,"aG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,comdat
	.p2align	2, 0x0
GCC_except_table65:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Lfunc_begin29-.Lfunc_begin29  # >> Call Site 1 <<
	.uleb128 .Ltmp911-.Lfunc_begin29        #   Call between .Lfunc_begin29 and .Ltmp911
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp911-.Lfunc_begin29        # >> Call Site 2 <<
	.uleb128 .Ltmp912-.Ltmp911              #   Call between .Ltmp911 and .Ltmp912
	.uleb128 .Ltmp913-.Lfunc_begin29        #     jumps to .Ltmp913
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp912-.Lfunc_begin29        # >> Call Site 3 <<
	.uleb128 .Lfunc_end65-.Ltmp912          #   Call between .Ltmp912 and .Lfunc_end65
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.p2align	2
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a0, $a0, 48
	ld.d	$fp, $a0, 16
	move	$s0, $a1
	addi.d	$a0, $fp, 80
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s)
	addi.d	$a1, $a1, %pc_lo12(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s)
	addi.d	$a2, $a1, 1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 80
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$fp, $a1, $a0
	beqz	$fp, .LBB66_9
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $fp, 48
	andi	$s0, $s0, 255
	slli.d	$a1, $s0, 1
	ldx.hu	$a0, $a0, $a1
	and	$a1, $s1, $a0
	ori	$a0, $zero, 1
	bnez	$a1, .LBB66_8
# %bb.2:
	lu12i.w	$a0, 16
	and	$a0, $s1, $a0
	bnez	$a0, .LBB66_4
# %bb.3:
	move	$a0, $zero
	b	.LBB66_8
.LBB66_4:
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB66_6
# %bb.5:
	ld.bu	$a0, $fp, 152
	b	.LBB66_7
.LBB66_6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $fp
	jirl	$ra, $a2, 0
.LBB66_7:                               # %_ZNKSt5ctypeIcE5widenEc.exit.i
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
.LBB66_8:                               # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB66_9:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end66:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc, .Lfunc_end66-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl
	.p2align	2
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s3, $a0, 8
	ld.d	$s4, $a0, 0
	move	$s0, $a1
	sub.d	$s2, $s3, $s4
	st.d	$zero, $sp, 152
	vrepli.b	$vr1, 0
	vst	$vr1, $sp, 160
	beq	$s3, $s4, .LBB67_4
# %bb.1:
	vst	$vr1, $sp, 16                   # 16-byte Folded Spill
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	move	$a0, $zero
	st.d	$s1, $sp, 152
	st.d	$s1, $sp, 160
	add.d	$a1, $s1, $s2
	st.d	$a1, $sp, 168
	.p2align	4, , 16
.LBB67_2:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	vldx	$vr0, $s4, $a0
	add.d	$a1, $s4, $a0
	vstx	$vr0, $s1, $a0
	ld.d	$a1, $a1, 16
	add.d	$a2, $s1, $a0
	addi.d	$a0, $a0, 24
	add.d	$a3, $s4, $a0
	st.d	$a1, $a2, 16
	bne	$a3, $s3, .LBB67_2
# %bb.3:                                # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSE_.exit.loopexit
	add.d	$a0, $s1, $a0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	b	.LBB67_5
.LBB67_4:                               # %.thread
	move	$s1, $zero
	move	$a0, $zero
	vst	$vr1, $sp, 152
	st.d	$s2, $sp, 168
.LBB67_5:                               # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSE_.exit
	vld	$vr0, $fp, 40
	ld.d	$a1, $fp, 48
	vst	$vr1, $sp, 40
	vst	$vr0, $sp, 72
	ld.d	$a1, $a1, 16
	st.d	$a0, $sp, 160
	ld.d	$s2, $fp, 24
	ld.w	$s3, $fp, 112
	st.d	$a1, $sp, 88
	addi.d	$a0, $sp, 152
	st.d	$a0, $sp, 96
	ld.d	$a0, $a1, 64
	ld.d	$a1, $a1, 56
	st.d	$zero, $sp, 32
	st.d	$s2, $sp, 64
	vst	$vr1, $sp, 104
	st.d	$zero, $sp, 120
	beq	$a0, $a1, .LBB67_9
# %bb.6:                                # %_ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_.exit.i.i
	sub.d	$s5, $a0, $a1
	srli.d	$a0, $s5, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mul.d	$s4, $a0, $a1
	slli.d	$a0, $s4, 4
.Ltmp914:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp915:                               # EH_LABEL
# %bb.7:                                # %.noexc
	st.d	$a0, $sp, 104
	alsl.d	$a1, $s4, $a0, 4
	ori	$a2, $zero, 96
	st.d	$a1, $sp, 120
	bgeu	$s5, $a2, .LBB67_10
# %bb.8:
	move	$a2, $s4
	move	$a1, $a0
	b	.LBB67_13
.LBB67_9:
	move	$a1, $zero
	b	.LBB67_14
.LBB67_10:                              # %vector.ph
	bstrpick.d	$a1, $s4, 57, 1
	slli.d	$a3, $a1, 1
	andi	$a2, $s4, 1
	slli.d	$a1, $a1, 5
	add.d	$a1, $a0, $a1
	addi.d	$a0, $a0, 16
	move	$a4, $a3
	.p2align	4, , 16
.LBB67_11:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a0, -16
	st.d	$zero, $a0, 0
	st.w	$zero, $a0, -8
	st.w	$zero, $a0, 8
	addi.d	$a4, $a4, -2
	addi.d	$a0, $a0, 32
	bnez	$a4, .LBB67_11
# %bb.12:                               # %middle.block
	beq	$s4, $a3, .LBB67_14
	.p2align	4, , 16
.LBB67_13:                              # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a1, 0
	st.w	$zero, $a1, 8
	addi.d	$a2, $a2, -1
	addi.d	$a1, $a1, 16
	bnez	$a2, .LBB67_13
.LBB67_14:                              # %.loopexit.i
	st.d	$a1, $sp, 112
	andi	$a0, $s3, 128
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -6
	lu32i.d	$a1, 0
	and	$a1, $s3, $a1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s3, $a0
	or	$a0, $a0, $a1
	st.w	$a0, $sp, 144
	st.d	$s0, $sp, 128
	st.d	$s2, $sp, 56
	st.b	$zero, $sp, 148
	st.d	$zero, $sp, 136
.Ltmp917:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
.Ltmp918:                               # EH_LABEL
# %bb.15:                               # %.noexc20
	ld.d	$a2, $sp, 128
.Ltmp919:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	ori	$a1, $zero, 1
	ori	$s1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.Ltmp920:                               # EH_LABEL
# %bb.16:
	ld.bu	$s0, $sp, 148
	bne	$s0, $s1, .LBB67_22
# %bb.17:                               # %.preheader
	ld.d	$a0, $sp, 160
	ld.d	$a2, $sp, 152
	beq	$a0, $a2, .LBB67_22
# %bb.18:                               # %.lr.ph
	sub.d	$a0, $a0, $a2
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mulh.du	$a0, $a0, $a1
	srli.d	$a1, $a0, 4
	ld.d	$a3, $fp, 0
	ori	$a0, $zero, 1
	sltu	$a4, $a0, $a1
	maskeqz	$a1, $a1, $a4
	masknez	$a4, $a0, $a4
	or	$a1, $a1, $a4
	addi.d	$a2, $a2, 16
	addi.d	$a3, $a3, 16
	b	.LBB67_20
	.p2align	4, , 16
.LBB67_19:                              #   in Loop: Header=BB67_20 Depth=1
	addi.d	$a1, $a1, -1
	addi.d	$a2, $a2, 24
	addi.d	$a3, $a3, 24
	beqz	$a1, .LBB67_22
.LBB67_20:                              # =>This Inner Loop Header: Depth=1
	ld.bu	$a4, $a2, 0
	bne	$a4, $a0, .LBB67_19
# %bb.21:                               #   in Loop: Header=BB67_20 Depth=1
	ld.d	$a4, $a2, -16
	st.d	$a4, $a3, -16
	ld.d	$a4, $a2, -8
	st.d	$a4, $a3, -8
	st.b	$a0, $a3, 0
	b	.LBB67_19
.LBB67_22:                              # %.loopexit
	ld.d	$a0, $sp, 104
	beqz	$a0, .LBB67_24
# %bb.23:
	ld.d	$a1, $sp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_24:                              # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i
	ld.d	$a0, $sp, 32
	beqz	$a0, .LBB67_26
# %bb.25:
	ld.d	$a1, $sp, 48
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_26:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev.exit
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB67_28
# %bb.27:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_28:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	move	$a0, $s0
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB67_29:
.Ltmp916:                               # EH_LABEL
	move	$fp, $a0
	b	.LBB67_31
.LBB67_30:
.Ltmp921:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 152
.LBB67_31:
	beqz	$s1, .LBB67_33
# %bb.32:
	ld.d	$a0, $sp, 168
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB67_33:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit19
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end67:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl, .Lfunc_end67-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,comdat
	.p2align	2, 0x0
GCC_except_table67:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Lfunc_begin30-.Lfunc_begin30  # >> Call Site 1 <<
	.uleb128 .Ltmp914-.Lfunc_begin30        #   Call between .Lfunc_begin30 and .Ltmp914
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp914-.Lfunc_begin30        # >> Call Site 2 <<
	.uleb128 .Ltmp915-.Ltmp914              #   Call between .Ltmp914 and .Ltmp915
	.uleb128 .Ltmp916-.Lfunc_begin30        #     jumps to .Ltmp916
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp917-.Lfunc_begin30        # >> Call Site 3 <<
	.uleb128 .Ltmp920-.Ltmp917              #   Call between .Ltmp917 and .Ltmp920
	.uleb128 .Ltmp921-.Lfunc_begin30        #     jumps to .Ltmp921
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp920-.Lfunc_begin30        # >> Call Site 4 <<
	.uleb128 .Lfunc_end67-.Ltmp920          #   Call between .Ltmp920 and .Lfunc_end67
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,"axG",@progbits,_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,comdat
	.hidden	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE # -- Begin function _ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
	.weak	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
	.p2align	2
	.type	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,@function
_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE: # @_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:
	addi.d	$sp, $sp, -480
	.cfi_def_cfa_offset 480
	st.d	$ra, $sp, 472                   # 8-byte Folded Spill
	st.d	$fp, $sp, 464                   # 8-byte Folded Spill
	st.d	$s0, $sp, 456                   # 8-byte Folded Spill
	st.d	$s1, $sp, 448                   # 8-byte Folded Spill
	st.d	$s2, $sp, 440                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s2, $a1
	move	$s0, $a0
	addi.d	$s1, $a0, 8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $s0, 16
	ld.d	$a1, $s2, 0
	ld.d	$a0, $s2, 8
	addi.d	$s2, $s0, 16
	add.d	$a2, $a1, $a0
.Ltmp922:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a3, $s1
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE)
	jirl	$ra, $ra, 0
.Ltmp923:                               # EH_LABEL
# %bb.1:                                # %.noexc
	vld	$vr0, $sp, 296
	ld.d	$s1, $s0, 24
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 296
	vst	$vr0, $s0, 16
	beqz	$s1, .LBB68_6
# %bb.2:
	ld.d	$a0, $s1, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB68_4
# %bb.3:
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	b	.LBB68_6
.LBB68_4:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB68_7
# %bb.5:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB68_8
.LBB68_6:
	st.w	$fp, $s0, 0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 440                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 448                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 456                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 464                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 472                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 480
	ret
.LBB68_7:
	addi.d	$a1, $s1, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB68_6
.LBB68_8:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB68_6
.LBB68_9:
.Ltmp924:                               # EH_LABEL
	move	$fp, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end68:
	.size	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE, .Lfunc_end68-_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,"aG",@progbits,_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,comdat
	.p2align	2, 0x0
GCC_except_table68:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Lfunc_begin31-.Lfunc_begin31  # >> Call Site 1 <<
	.uleb128 .Ltmp922-.Lfunc_begin31        #   Call between .Lfunc_begin31 and .Ltmp922
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp922-.Lfunc_begin31        # >> Call Site 2 <<
	.uleb128 .Ltmp923-.Ltmp922              #   Call between .Ltmp922 and .Ltmp923
	.uleb128 .Ltmp924-.Lfunc_begin31        #     jumps to .Ltmp924
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp923-.Lfunc_begin31        # >> Call Site 3 <<
	.uleb128 .Lfunc_end68-.Ltmp923          #   Call between .Ltmp923 and .Lfunc_end68
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.hidden	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.weak	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	2
	.type	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB69_5
# %bb.1:
	ld.d	$a0, $fp, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB69_3
# %bb.2:
	ld.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a1
.LBB69_3:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB69_6
# %bb.4:
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB69_7
.LBB69_5:                               # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB69_6:
	addi.d	$a1, $fp, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB69_5
.LBB69_7:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jr	$t8
.Lfunc_end69:
	.size	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end69-_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s0, $a4
	andi	$a4, $a4, 1008
	ori	$a5, $zero, 127
	move	$s3, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	blt	$a5, $a4, .LBB70_5
# %bb.1:
	addi.d	$a0, $a4, -16
	ori	$a1, $zero, 48
	bltu	$a1, $a0, .LBB70_3
# %bb.2:
	ori	$a1, $zero, 1
	sll.d	$a0, $a1, $a0
	lu12i.w	$a1, 16
	ori	$a1, $a1, 1
	lu32i.d	$a1, 65536
	and	$a0, $a0, $a1
	bnez	$a0, .LBB70_8
.LBB70_3:
	bnez	$a4, .LBB70_46
# %bb.4:
	ori	$s0, $s0, 16
	b	.LBB70_8
.LBB70_5:
	ori	$a0, $zero, 128
	beq	$a4, $a0, .LBB70_8
# %bb.6:
	ori	$a0, $zero, 256
	beq	$a4, $a0, .LBB70_8
# %bb.7:
	ori	$a0, $zero, 512
	bne	$a4, $a0, .LBB70_46
.LBB70_8:                               # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_S_validateENSt15regex_constants18syntax_option_typeE.exit
	st.w	$s0, $fp, 0
	addi.d	$s4, $fp, 8
	addi.d	$a0, $sp, 16
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
.Ltmp925:                               # EH_LABEL
	addi.d	$a4, $sp, 16
	move	$a0, $s4
	move	$a1, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale)
	jirl	$ra, $ra, 0
.Ltmp926:                               # EH_LABEL
# %bb.9:
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $fp, 256
	st.d	$zero, $fp, 256
	addi.d	$a0, $fp, 264
.Ltmp928:                               # EH_LABEL
	addi.d	$a2, $sp, 31
	move	$a1, $s0
	move	$a3, $s3
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_)
	jirl	$ra, $ra, 0
.Ltmp929:                               # EH_LABEL
# %bb.10:
	addi.d	$s1, $fp, 272
	addi.d	$s6, $fp, 288
	st.d	$s6, $fp, 272
	st.d	$zero, $fp, 280
	st.b	$zero, $fp, 288
	addi.d	$s2, $fp, 304
	ori	$a2, $zero, 80
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp931:                               # EH_LABEL
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp932:                               # EH_LABEL
# %bb.11:                               # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEEC2IS8_vEEv.exit
	ld.d	$a0, $fp, 256
	addi.d	$a0, $a0, 80
	st.d	$a0, $fp, 384
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB70_42
# %bb.12:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	ld.d	$s3, $fp, 256
	ld.d	$s7, $s3, 32
	st.d	$a0, $fp, 392
.Ltmp934:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv)
	jirl	$ra, $ra, 0
.Ltmp935:                               # EH_LABEL
# %bb.13:
	move	$s5, $a0
	ld.d	$a0, $s3, 56
	slli.d	$a1, $s7, 5
	alsl.d	$a1, $s7, $a1, 4
	add.d	$a0, $a0, $a1
	st.d	$s5, $a0, 8
.Ltmp936:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
.Ltmp937:                               # EH_LABEL
# %bb.14:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB70_44
# %bb.15:
	addi.d	$a1, $fp, 208
.Ltmp940:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp941:                               # EH_LABEL
# %bb.16:                               # %.noexc18
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB70_23
# %bb.17:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB70_41
# %bb.18:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB70_40
# %bb.19:
	bnez	$a0, .LBB70_21
# %bb.20:
.Ltmp946:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp947:                               # EH_LABEL
.LBB70_21:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB70_24
.LBB70_22:
	ld.d	$s4, $a1, -16
	ld.d	$s7, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB70_25
.LBB70_23:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB70_22
.LBB70_24:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s4, $a1, 488
	ld.d	$s7, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 376
	st.d	$a1, $fp, 360
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 368
	addi.d	$a0, $a1, 480
.LBB70_25:
	st.d	$a0, $fp, 352
	ld.d	$a1, $s3, 56
	slli.d	$a2, $s5, 5
	ld.d	$a0, $fp, 256
	alsl.d	$a2, $s5, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$s4, $a1, 8
.Ltmp948:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv)
	jirl	$ra, $ra, 0
.Ltmp949:                               # EH_LABEL
# %bb.26:
	move	$s4, $a0
	ld.d	$a1, $s3, 56
	slli.d	$a2, $s7, 5
	ld.d	$a0, $s0, 0
	alsl.d	$a2, $s7, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$s4, $a1, 8
.Ltmp950:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv)
	jirl	$ra, $ra, 0
.Ltmp951:                               # EH_LABEL
# %bb.27:
	ld.d	$a1, $s0, 0
	ld.d	$a4, $s3, 56
	ld.d	$a2, $a1, 56
	ld.d	$a3, $a1, 64
	slli.d	$a5, $s4, 5
	alsl.d	$a5, $s4, $a5, 4
	add.d	$a4, $a4, $a5
	st.d	$a0, $a4, 8
	beq	$a2, $a3, .LBB70_39
# %bb.28:                               # %.preheader.i.preheader
	ori	$a0, $zero, 10
	addi.w	$a4, $zero, -1
	ori	$a5, $zero, 7
	ori	$a6, $zero, 1
	b	.LBB70_30
	.p2align	4, , 16
.LBB70_29:                              # %.critedge2.i
                                        #   in Loop: Header=BB70_30 Depth=1
	addi.d	$a2, $a2, 48
	beq	$a2, $a3, .LBB70_39
.LBB70_30:                              # %.preheader.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB70_32 Depth 2
                                        #     Child Loop BB70_37 Depth 2
	ld.d	$t0, $a2, 8
	bltz	$t0, .LBB70_34
# %bb.31:                               # %.lr.ph.i
                                        #   in Loop: Header=BB70_30 Depth=1
	ld.d	$a7, $a1, 56
	.p2align	4, , 16
.LBB70_32:                              #   Parent Loop BB70_30 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	slli.d	$t1, $t0, 5
	alsl.d	$t0, $t0, $t1, 4
	ldx.w	$t1, $a7, $t0
	bne	$t1, $a0, .LBB70_34
# %bb.33:                               #   in Loop: Header=BB70_32 Depth=2
	add.d	$t0, $a7, $t0
	ld.d	$t0, $t0, 8
	st.d	$t0, $a2, 8
	blt	$a4, $t0, .LBB70_32
.LBB70_34:                              # %.critedge.i
                                        #   in Loop: Header=BB70_30 Depth=1
	ld.w	$a7, $a2, 0
	bltu	$a5, $a7, .LBB70_29
# %bb.35:                               # %.critedge.i
                                        #   in Loop: Header=BB70_30 Depth=1
	sll.d	$a7, $a6, $a7
	andi	$a7, $a7, 134
	beqz	$a7, .LBB70_29
# %bb.36:                               # %_ZNKSt8__detail11_State_base10_M_has_altEv.exit.i
                                        #   in Loop: Header=BB70_30 Depth=1
	ld.d	$a7, $a2, 16
	bltz	$a7, .LBB70_29
	.p2align	4, , 16
.LBB70_37:                              # %.lr.ph19.i
                                        #   Parent Loop BB70_30 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$t0, $a1, 56
	slli.d	$t1, $a7, 5
	alsl.d	$a7, $a7, $t1, 4
	ldx.w	$t1, $t0, $a7
	bne	$t1, $a0, .LBB70_29
# %bb.38:                               #   in Loop: Header=BB70_37 Depth=2
	add.d	$a7, $t0, $a7
	ld.d	$a7, $a7, 8
	st.d	$a7, $a2, 16
	blt	$a4, $a7, .LBB70_37
	b	.LBB70_29
.LBB70_39:                              # %_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_eliminate_dummyEv.exit
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB70_40:
.Ltmp942:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp943:                               # EH_LABEL
	b	.LBB70_21
.LBB70_41:
.Ltmp944:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp945:                               # EH_LABEL
	b	.LBB70_21
.LBB70_42:
.Ltmp953:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp954:                               # EH_LABEL
# %bb.43:                               # %.noexc
.LBB70_44:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
.Ltmp938:                               # EH_LABEL
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Ltmp939:                               # EH_LABEL
# %bb.45:
.LBB70_46:
	pcalau12i	$a0, %pc_hi20(.L.str.67)
	addi.d	$a1, $a0, %pc_lo12(.L.str.67)
	ori	$a0, $zero, 14
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB70_47:
.Ltmp955:                               # EH_LABEL
	b	.LBB70_52
.LBB70_48:
.Ltmp933:                               # EH_LABEL
	move	$s3, $a0
	b	.LBB70_53
.LBB70_49:
.Ltmp930:                               # EH_LABEL
	move	$s3, $a0
	b	.LBB70_56
.LBB70_50:
.Ltmp927:                               # EH_LABEL
	move	$s3, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB70_51:
.Ltmp952:                               # EH_LABEL
.LBB70_52:
	move	$s3, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev)
	jirl	$ra, $ra, 0
.LBB70_53:
	ld.d	$a0, $s1, 0
	beq	$a0, $s6, .LBB70_55
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s6, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev)
	jirl	$ra, $ra, 0
.LBB70_56:
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	beq	$a0, $a1, .LBB70_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB70_58:                              # %_ZNSt8__detail8_ScannerIcED2Ev.exit
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end70:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE, .Lfunc_end70-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,comdat
	.p2align	2, 0x0
GCC_except_table70:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Lfunc_begin32-.Lfunc_begin32  # >> Call Site 1 <<
	.uleb128 .Ltmp925-.Lfunc_begin32        #   Call between .Lfunc_begin32 and .Ltmp925
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp925-.Lfunc_begin32        # >> Call Site 2 <<
	.uleb128 .Ltmp926-.Ltmp925              #   Call between .Ltmp925 and .Ltmp926
	.uleb128 .Ltmp927-.Lfunc_begin32        #     jumps to .Ltmp927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp926-.Lfunc_begin32        # >> Call Site 3 <<
	.uleb128 .Ltmp928-.Ltmp926              #   Call between .Ltmp926 and .Ltmp928
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp928-.Lfunc_begin32        # >> Call Site 4 <<
	.uleb128 .Ltmp929-.Ltmp928              #   Call between .Ltmp928 and .Ltmp929
	.uleb128 .Ltmp930-.Lfunc_begin32        #     jumps to .Ltmp930
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp929-.Lfunc_begin32        # >> Call Site 5 <<
	.uleb128 .Ltmp931-.Ltmp929              #   Call between .Ltmp929 and .Ltmp931
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp931-.Lfunc_begin32        # >> Call Site 6 <<
	.uleb128 .Ltmp932-.Ltmp931              #   Call between .Ltmp931 and .Ltmp932
	.uleb128 .Ltmp933-.Lfunc_begin32        #     jumps to .Ltmp933
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp932-.Lfunc_begin32        # >> Call Site 7 <<
	.uleb128 .Ltmp934-.Ltmp932              #   Call between .Ltmp932 and .Ltmp934
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp934-.Lfunc_begin32        # >> Call Site 8 <<
	.uleb128 .Ltmp947-.Ltmp934              #   Call between .Ltmp934 and .Ltmp947
	.uleb128 .Ltmp952-.Lfunc_begin32        #     jumps to .Ltmp952
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp947-.Lfunc_begin32        # >> Call Site 9 <<
	.uleb128 .Ltmp948-.Ltmp947              #   Call between .Ltmp947 and .Ltmp948
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp948-.Lfunc_begin32        # >> Call Site 10 <<
	.uleb128 .Ltmp945-.Ltmp948              #   Call between .Ltmp948 and .Ltmp945
	.uleb128 .Ltmp952-.Lfunc_begin32        #     jumps to .Ltmp952
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp953-.Lfunc_begin32        # >> Call Site 11 <<
	.uleb128 .Ltmp954-.Ltmp953              #   Call between .Ltmp953 and .Ltmp954
	.uleb128 .Ltmp955-.Lfunc_begin32        #     jumps to .Ltmp955
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp938-.Lfunc_begin32        # >> Call Site 12 <<
	.uleb128 .Ltmp939-.Ltmp938              #   Call between .Ltmp938 and .Ltmp939
	.uleb128 .Ltmp952-.Lfunc_begin32        #     jumps to .Ltmp952
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp939-.Lfunc_begin32        # >> Call Site 13 <<
	.uleb128 .Lfunc_end70-.Ltmp939          #   Call between .Ltmp939 and .Lfunc_end70
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev,comdat
	.hidden	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 304
	beqz	$a0, .LBB71_6
# %bb.1:
	ld.d	$s0, $fp, 376
	ld.d	$a1, $fp, 344
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB71_5
# %bb.2:                                # %.lr.ph.i.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB71_3:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB71_3
# %bb.4:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.loopexit.i.i.i
	ld.d	$a0, $fp, 304
.LBB71_5:                               # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i.i.i
	ld.d	$a1, $fp, 312
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_6:                               # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev.exit
	ld.d	$a0, $fp, 272
	addi.d	$a1, $fp, 288
	beq	$a0, $a1, .LBB71_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 264
	beqz	$s0, .LBB71_13
# %bb.9:
	ld.d	$a0, $s0, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB71_11
# %bb.10:
	ld.d	$a0, $s0, 0
	st.d	$zero, $s0, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	bne	$a0, $a1, .LBB71_14
	b	.LBB71_17
.LBB71_11:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB71_15
# %bb.12:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s0, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB71_16
.LBB71_13:                              # %_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	beq	$a0, $a1, .LBB71_17
.LBB71_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB71_15:
	addi.d	$a1, $s0, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB71_13
.LBB71_16:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	bne	$a0, $a1, .LBB71_14
.LBB71_17:                              # %_ZNSt8__detail8_ScannerIcED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end71:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev, .Lfunc_end71-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,"axG",@progbits,_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,comdat
	.weak	_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale # -- Begin function _ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,@function
_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale: # @_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s0, $a4
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 176
	st.d	$s1, $fp, 184
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB72_10
# %bb.1:                                # %_ZSt9use_facetIKSt5ctypeIcEERKT_RKSt6locale.exit
	ld.wu	$a1, $fp, 140
	st.d	$a0, $fp, 192
	addi.d	$s0, $fp, 216
	st.d	$s0, $fp, 200
	andi	$a0, $a1, 16
	sltui	$a0, $a0, 1
	pcalau12i	$a1, %pc_hi20(_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv)
	addi.d	$a1, $a1, %pc_lo12(_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv)
	addi.d	$a2, $a2, %pc_lo12(_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv)
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
	ld.d	$a1, $fp, 176
	ld.d	$a2, $fp, 184
	st.d	$zero, $fp, 208
	st.b	$zero, $fp, 216
	st.d	$a0, $fp, 232
	st.d	$zero, $fp, 240
	beq	$a1, $a2, .LBB72_6
# %bb.2:
	ld.w	$a0, $fp, 136
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB72_8
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB72_7
# %bb.4:
	bnez	$a0, .LBB72_9
# %bb.5:
.Ltmp960:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp961:                               # EH_LABEL
	b	.LBB72_9
.LBB72_6:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 144
	b	.LBB72_9
.LBB72_7:
.Ltmp956:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp957:                               # EH_LABEL
	b	.LBB72_9
.LBB72_8:
.Ltmp958:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp959:                               # EH_LABEL
.LBB72_9:                               # %_ZNSt8__detail8_ScannerIcE10_M_advanceEv.exit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB72_10:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB72_11:
.Ltmp962:                               # EH_LABEL
	ld.d	$a2, $fp, 200
	move	$fp, $a0
	beq	$a2, $s0, .LBB72_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end72:
	.size	_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale, .Lfunc_end72-_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,"aG",@progbits,_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,comdat
	.p2align	2, 0x0
GCC_except_table72:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Lfunc_begin33-.Lfunc_begin33  # >> Call Site 1 <<
	.uleb128 .Ltmp960-.Lfunc_begin33        #   Call between .Lfunc_begin33 and .Ltmp960
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp960-.Lfunc_begin33        # >> Call Site 2 <<
	.uleb128 .Ltmp959-.Ltmp960              #   Call between .Ltmp960 and .Ltmp959
	.uleb128 .Ltmp962-.Lfunc_begin33        #     jumps to .Ltmp962
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp959-.Lfunc_begin33        # >> Call Site 3 <<
	.uleb128 .Lfunc_end72-.Ltmp959          #   Call between .Ltmp959 and .Lfunc_end72
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	st.d	$s4, $sp, 120                   # 8-byte Folded Spill
	st.d	$s5, $sp, 112                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s3, $a0, 40
	ld.d	$a0, $a0, 8
	ld.d	$a1, $fp, 16
	addi.d	$a2, $s3, 1
	st.d	$a2, $fp, 40
	beq	$a0, $a1, .LBB73_2
# %bb.1:
	st.d	$s3, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 8
	b	.LBB73_8
.LBB73_2:
	ld.d	$s0, $fp, 0
	sub.d	$s1, $a0, $s0
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB73_25
# %bb.3:                                # %_ZNKSt6vectorImSaImEE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 3
	ori	$s5, $zero, 1
	sltu	$a1, $s5, $a0
	masknez	$a2, $s5, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.d	$s3, $a0, $s1
	blt	$s1, $s5, .LBB73_5
# %bb.4:
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB73_5:                               # %_ZNSt6vectorImSaImEE11_S_relocateEPmS2_S2_RS0_.exit.i.i
	add.d	$s5, $s2, $s1
	beqz	$s0, .LBB73_7
# %bb.6:                                # %_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB73_7:                               # %_ZNSt6vectorImSaImEE17_M_realloc_appendIJRKmEEEvDpOT_.exit.i
	addi.d	$a0, $s5, 8
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	alsl.d	$a0, $s4, $s2, 3
	st.d	$a0, $fp, 16
.LBB73_8:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	ori	$a0, $zero, 8
	st.w	$a0, $sp, 64
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 72
	st.d	$s3, $sp, 80
	st.d	$a0, $sp, 24
	st.d	$s3, $sp, 32
	ld.d	$a1, $sp, 88
	vld	$vr0, $sp, 96
	ld.d	$a2, $sp, 64
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	st.d	$a2, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB73_13
# %bb.9:
	vld	$vr0, $sp, 96
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 64
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 16
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB73_12
# %bb.10:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 56
	ld.d	$a1, $sp, 48
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB73_12
# %bb.11:
	vld	$vr1, $sp, 80
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 48
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB73_12:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB73_15
.LBB73_13:
.Ltmp963:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp964:                               # EH_LABEL
# %bb.14:                               # %.noexc
	ld.d	$a0, $fp, 64
.LBB73_15:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB73_23
# %bb.16:
	ld.w	$a0, $sp, 16
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB73_19
# %bb.17:
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB73_19
# %bb.18:
	addi.d	$a0, $sp, 32
.Ltmp965:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp966:                               # EH_LABEL
.LBB73_19:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 64
	bne	$a0, $s0, .LBB73_22
# %bb.20:
	ld.d	$a3, $sp, 96
	beqz	$a3, .LBB73_22
# %bb.21:
.Ltmp968:                               # EH_LABEL
	addi.d	$a0, $sp, 80
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp969:                               # EH_LABEL
.LBB73_22:                              # %_ZNSt8__detail6_StateIcED2Ev.exit5
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB73_23:
.Ltmp971:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp972:                               # EH_LABEL
# %bb.24:                               # %.noexc3
.LBB73_25:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB73_26:
.Ltmp970:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB73_27:
.Ltmp967:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB73_28:
.Ltmp973:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end73:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv, .Lfunc_end73-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,comdat
	.p2align	2, 0x0
GCC_except_table73:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp963-.Lfunc_begin34        #   Call between .Lfunc_begin34 and .Ltmp963
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp963-.Lfunc_begin34        # >> Call Site 2 <<
	.uleb128 .Ltmp964-.Ltmp963              #   Call between .Ltmp963 and .Ltmp964
	.uleb128 .Ltmp973-.Lfunc_begin34        #     jumps to .Ltmp973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp965-.Lfunc_begin34        # >> Call Site 3 <<
	.uleb128 .Ltmp966-.Ltmp965              #   Call between .Ltmp965 and .Ltmp966
	.uleb128 .Ltmp967-.Lfunc_begin34        #     jumps to .Ltmp967
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp968-.Lfunc_begin34        # >> Call Site 4 <<
	.uleb128 .Ltmp969-.Ltmp968              #   Call between .Ltmp968 and .Ltmp969
	.uleb128 .Ltmp970-.Lfunc_begin34        #     jumps to .Ltmp970
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp971-.Lfunc_begin34        # >> Call Site 5 <<
	.uleb128 .Ltmp972-.Ltmp971              #   Call between .Ltmp971 and .Ltmp972
	.uleb128 .Ltmp973-.Lfunc_begin34        #     jumps to .Ltmp973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp972-.Lfunc_begin34        # >> Call Site 6 <<
	.uleb128 .Lfunc_end73-.Ltmp972          #   Call between .Ltmp972 and .Lfunc_end73
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 19
	bne	$a0, $a1, .LBB74_19
# %bb.1:                                # %.lr.ph
	addi.d	$a0, $fp, 8
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	addi.d	$s1, $fp, 208
	addi.d	$s2, $fp, 272
	addi.d	$a0, $fp, 304
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	ori	$s3, $zero, 48
	b	.LBB74_3
	.p2align	4, , 16
.LBB74_2:                               #   in Loop: Header=BB74_3 Depth=1
	addi.d	$a1, $sp, 32
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 19
	bne	$a0, $a1, .LBB74_19
.LBB74_3:                               # =>This Inner Loop Header: Depth=1
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB74_8
# %bb.4:                                #   in Loop: Header=BB74_3 Depth=1
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB74_12
# %bb.5:                                #   in Loop: Header=BB74_3 Depth=1
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB74_9
# %bb.6:                                #   in Loop: Header=BB74_3 Depth=1
	bnez	$a0, .LBB74_10
# %bb.7:                                #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB74_11
	b	.LBB74_13
	.p2align	4, , 16
.LBB74_8:                               #   in Loop: Header=BB74_3 Depth=1
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB74_11
	b	.LBB74_13
.LBB74_9:                               #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB74_10:                              #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB74_13
.LBB74_11:                              #   in Loop: Header=BB74_3 Depth=1
	ld.d	$s6, $a1, -24
	ld.d	$s4, $a1, -16
	ld.d	$s7, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB74_14
.LBB74_12:                              #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB74_11
	.p2align	4, , 16
.LBB74_13:                              #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s6, $a1, 480
	ld.d	$s4, $a1, 488
	ld.d	$s7, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 376
	st.d	$a1, $fp, 360
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 368
	addi.d	$a0, $a1, 480
.LBB74_14:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
                                        #   in Loop: Header=BB74_3 Depth=1
	st.d	$a0, $fp, 352
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB74_16
# %bb.15:                               #   in Loop: Header=BB74_3 Depth=1
	ld.d	$s8, $a1, -24
	ld.d	$s5, $a1, -16
	ld.d	$s0, $a1, -8
	addi.d	$a1, $a1, -24
	b	.LBB74_17
	.p2align	4, , 16
.LBB74_16:                              #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s8, $a1, 480
	ld.d	$s5, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 376
	st.d	$a1, $fp, 360
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 368
	addi.d	$a1, $a1, 480
.LBB74_17:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit4
                                        #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a0, $fp, 256
	st.d	$a1, $fp, 352
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s6, 56
	move	$s6, $a0
	mul.d	$a0, $s7, $s3
	add.d	$a0, $a1, $a0
	ld.d	$a1, $s8, 56
	st.d	$s6, $a0, 8
	ld.d	$s7, $fp, 256
	mul.d	$a0, $s0, $s3
	add.d	$a0, $a1, $a0
	st.d	$s6, $a0, 8
	move	$a0, $s7
	move	$a1, $s5
	move	$a2, $s4
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s7, $sp, 32
	st.d	$a0, $sp, 40
	addi.d	$a0, $a2, -24
	st.d	$s6, $sp, 48
	beq	$a1, $a0, .LBB74_2
# %bb.18:                               #   in Loop: Header=BB74_3 Depth=1
	ld.d	$a0, $sp, 48
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 32
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 19
	beq	$a0, $a1, .LBB74_3
.LBB74_19:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.Lfunc_end74:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv, .Lfunc_end74-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$s1, $a0, 152
	move	$fp, $a1
	bne	$a1, $s1, .LBB75_9
# %bb.1:
	move	$s0, $a0
	addi.d	$a1, $a0, 208
	addi.d	$a0, $a0, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 184
	ld.d	$a1, $s0, 192
	beq	$a0, $a1, .LBB75_6
# %bb.2:
	ld.w	$a1, $s0, 144
	ori	$a2, $zero, 2
	addi.d	$a0, $s0, 8
	beq	$a1, $a2, .LBB75_8
# %bb.3:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB75_7
# %bb.4:
	bnez	$a1, .LBB75_9
# %bb.5:
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB75_9
.LBB75_6:
	ori	$a0, $zero, 27
	st.w	$a0, $s0, 152
	b	.LBB75_9
.LBB75_7:
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB75_9
.LBB75_8:
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB75_9:                               # %_ZNSt8__detail8_ScannerIcE10_M_advanceEv.exit
	xor	$a0, $fp, $s1
	sltui	$a0, $a0, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end75:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE, .Lfunc_end75-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 64
	ld.d	$a2, $a0, -8
	ori	$a3, $zero, 9
	st.w	$a3, $sp, 56
	addi.d	$a0, $a0, -8
	st.d	$a2, $sp, 72
	ld.d	$a3, $sp, 80
	st.d	$a0, $fp, 8
	st.d	$a2, $sp, 24
	vld	$vr0, $sp, 88
	st.d	$a3, $sp, 32
	ld.d	$a2, $sp, 56
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 16
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 8
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB76_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 56
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB76_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB76_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB76_4:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB76_7
.LBB76_5:
.Ltmp974:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp975:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB76_7:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB76_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB76_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB76_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp976:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp977:                               # EH_LABEL
.LBB76_11:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB76_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB76_14
# %bb.13:
.Ltmp979:                               # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp980:                               # EH_LABEL
.LBB76_14:                              # %_ZNSt8__detail6_StateIcED2Ev.exit4
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB76_15:
.Ltmp982:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp983:                               # EH_LABEL
# %bb.16:                               # %.noexc2
.LBB76_17:
.Ltmp981:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB76_18:
.Ltmp978:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB76_19:
.Ltmp984:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end76:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv, .Lfunc_end76-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,comdat
	.p2align	2, 0x0
GCC_except_table76:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Ltmp974-.Lfunc_begin35        # >> Call Site 1 <<
	.uleb128 .Ltmp975-.Ltmp974              #   Call between .Ltmp974 and .Ltmp975
	.uleb128 .Ltmp984-.Lfunc_begin35        #     jumps to .Ltmp984
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp976-.Lfunc_begin35        # >> Call Site 2 <<
	.uleb128 .Ltmp977-.Ltmp976              #   Call between .Ltmp976 and .Ltmp977
	.uleb128 .Ltmp978-.Lfunc_begin35        #     jumps to .Ltmp978
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp979-.Lfunc_begin35        # >> Call Site 3 <<
	.uleb128 .Ltmp980-.Ltmp979              #   Call between .Ltmp979 and .Ltmp980
	.uleb128 .Ltmp981-.Lfunc_begin35        #     jumps to .Ltmp981
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp982-.Lfunc_begin35        # >> Call Site 4 <<
	.uleb128 .Ltmp983-.Ltmp982              #   Call between .Ltmp982 and .Ltmp983
	.uleb128 .Ltmp984-.Lfunc_begin35        #     jumps to .Ltmp984
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp983-.Lfunc_begin35        # >> Call Site 5 <<
	.uleb128 .Lfunc_end76-.Ltmp983          #   Call between .Ltmp983 and .Lfunc_end76
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 12
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB77_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 8
	xvst	$xr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB77_4
.LBB77_2:
.Ltmp985:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp986:                               # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB77_4:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB77_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB77_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB77_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp987:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp988:                               # EH_LABEL
.LBB77_8:                               # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB77_9:
.Ltmp990:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp991:                               # EH_LABEL
# %bb.10:                               # %.noexc3
.LBB77_11:
.Ltmp989:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB77_12:
.Ltmp992:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end77:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv, .Lfunc_end77-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,comdat
	.p2align	2, 0x0
GCC_except_table77:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Ltmp985-.Lfunc_begin36        # >> Call Site 1 <<
	.uleb128 .Ltmp986-.Ltmp985              #   Call between .Ltmp985 and .Ltmp986
	.uleb128 .Ltmp992-.Lfunc_begin36        #     jumps to .Ltmp992
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp987-.Lfunc_begin36        # >> Call Site 2 <<
	.uleb128 .Ltmp988-.Ltmp987              #   Call between .Ltmp987 and .Ltmp988
	.uleb128 .Ltmp989-.Lfunc_begin36        #     jumps to .Ltmp989
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp990-.Lfunc_begin36        # >> Call Site 3 <<
	.uleb128 .Ltmp991-.Ltmp990              #   Call between .Ltmp990 and .Ltmp991
	.uleb128 .Ltmp992-.Lfunc_begin36        #     jumps to .Ltmp992
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp991-.Lfunc_begin36        # >> Call Site 4 <<
	.uleb128 .Lfunc_end77-.Ltmp991          #   Call between .Ltmp991 and .Lfunc_end77
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev,"axG",@progbits,_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev,comdat
	.hidden	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev # -- Begin function _ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.weak	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.p2align	2
	.type	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev,@function
_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev: # @_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB78_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB78_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB78_3:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB78_3
# %bb.4:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB78_5:                               # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB78_6:                               # %_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EED2Ev.exit
	ret
.Lfunc_end78:
	.size	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev, .Lfunc_end78-_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.hidden	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.weak	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	2
	.type	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB79_5
# %bb.1:
	ld.d	$a0, $fp, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB79_3
# %bb.2:
	ld.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a1
.LBB79_3:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB79_6
# %bb.4:
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB79_7
.LBB79_5:                               # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB79_6:
	addi.d	$a1, $fp, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB79_5
.LBB79_7:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jr	$t8
.Lfunc_end79:
	.size	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end79-_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,"axG",@progbits,_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,comdat
	.weak	_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc # -- Begin function _ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc
	.p2align	5
	.type	_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,@function
_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc: # @_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(__cxa_allocate_exception)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp993:                               # EH_LABEL
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp994:                               # EH_LABEL
# %bb.1:
	pcalau12i	$a0, %got_pc_hi20(_ZTISt11regex_error)
	ld.d	$a1, $a0, %got_pc_lo12(_ZTISt11regex_error)
	pcalau12i	$a0, %got_pc_hi20(_ZNSt11regex_errorD1Ev)
	ld.d	$a2, $a0, %got_pc_lo12(_ZNSt11regex_errorD1Ev)
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_throw)
	jirl	$ra, $ra, 0
.LBB80_2:
.Ltmp995:                               # EH_LABEL
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_free_exception)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end80:
	.size	_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc, .Lfunc_end80-_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc
	.cfi_endproc
	.section	.gcc_except_table._ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,"aG",@progbits,_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,comdat
	.p2align	2, 0x0
GCC_except_table80:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Lfunc_begin37-.Lfunc_begin37  # >> Call Site 1 <<
	.uleb128 .Ltmp993-.Lfunc_begin37        #   Call between .Lfunc_begin37 and .Ltmp993
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp993-.Lfunc_begin37        # >> Call Site 2 <<
	.uleb128 .Ltmp994-.Ltmp993              #   Call between .Ltmp993 and .Ltmp994
	.uleb128 .Ltmp995-.Lfunc_begin37        #     jumps to .Ltmp995
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp994-.Lfunc_begin37        # >> Call Site 3 <<
	.uleb128 .Lfunc_end80-.Ltmp994          #   Call between .Ltmp994 and .Lfunc_end80
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc,"axG",@progbits,_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc,comdat
	.hidden	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc # -- Begin function _ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.weak	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.p2align	2
	.type	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc,@function
_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc: # @_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	move	$a1, $a2
	pcaddu18i	$ra, %call36(_ZNSt13runtime_errorC2EPKc)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt11regex_error)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt11regex_error)
	addi.d	$a0, $a0, 16
	st.d	$a0, $s0, 0
	st.w	$fp, $s0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end81:
	.size	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc, .Lfunc_end81-_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5, 0x0                          # -- Begin function _ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
.LCPI82_0:
	.byte	48                              # 0x30
	.byte	0                               # 0x0
	.byte	98                              # 0x62
	.byte	8                               # 0x8
	.byte	102                             # 0x66
	.byte	12                              # 0xc
	.byte	110                             # 0x6e
	.byte	10                              # 0xa
	.byte	114                             # 0x72
	.byte	13                              # 0xd
	.byte	116                             # 0x74
	.byte	9                               # 0x9
	.byte	118                             # 0x76
	.byte	11                              # 0xb
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	34                              # 0x22
	.byte	34                              # 0x22
	.byte	47                              # 0x2f
	.byte	47                              # 0x2f
	.byte	92                              # 0x5c
	.byte	92                              # 0x5c
	.byte	97                              # 0x61
	.byte	7                               # 0x7
	.byte	98                              # 0x62
	.byte	8                               # 0x8
	.byte	102                             # 0x66
	.byte	12                              # 0xc
	.byte	110                             # 0x6e
	.byte	10                              # 0xa
	.byte	114                             # 0x72
	.byte	13                              # 0xd
	.section	.text._ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE,"axG",@progbits,_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE,comdat
	.hidden	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.weak	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.p2align	2
	.type	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE,@function
_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE: # @_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.cfi_startproc
# %bb.0:
	ori	$a2, $zero, 94
	st.b	$a2, $a0, 0
	ori	$a2, $zero, 22
	st.w	$a2, $a0, 4
	ori	$a2, $zero, 36
	st.b	$a2, $a0, 8
	ori	$a2, $zero, 23
	st.w	$a2, $a0, 12
	ori	$a2, $zero, 46
	st.b	$a2, $a0, 16
	st.w	$zero, $a0, 20
	ori	$a2, $zero, 42
	st.b	$a2, $a0, 24
	ori	$a2, $zero, 20
	st.w	$a2, $a0, 28
	ori	$a2, $zero, 43
	st.b	$a2, $a0, 32
	ori	$a2, $zero, 21
	st.w	$a2, $a0, 36
	ori	$a2, $zero, 63
	st.b	$a2, $a0, 40
	ori	$a2, $zero, 18
	st.w	$a2, $a0, 44
	ori	$a2, $zero, 124
	st.b	$a2, $a0, 48
	ori	$a2, $zero, 19
	st.w	$a2, $a0, 52
	ori	$a3, $zero, 10
	st.b	$a3, $a0, 56
	st.w	$a2, $a0, 60
	st.b	$zero, $a0, 64
	pcalau12i	$a3, %pc_hi20(.LCPI82_0)
	xvld	$xr0, $a3, %pc_lo12(.LCPI82_0)
	st.w	$a2, $a0, 68
	addi.d	$a5, $a0, 72
	addi.d	$a6, $a0, 88
	xvst	$xr0, $a0, 72
	lu12i.w	$a2, 46944
	ori	$a2, $a2, 2420
	st.w	$a2, $a0, 104
	st.h	$zero, $a0, 108
	pcalau12i	$a2, %pc_hi20(.L.str.68)
	addi.d	$a2, $a2, %pc_lo12(.L.str.68)
	st.d	$a2, $a0, 112
	pcalau12i	$a3, %pc_hi20(.L.str.69)
	addi.d	$a4, $a3, %pc_lo12(.L.str.69)
	st.d	$a4, $a0, 120
	pcalau12i	$a3, %pc_hi20(.L.str.70)
	addi.d	$a3, $a3, %pc_lo12(.L.str.70)
	st.d	$a3, $a0, 128
	st.w	$zero, $a0, 136
	st.w	$a1, $a0, 140
	andi	$a7, $a1, 16
	sltui	$t0, $a7, 1
	masknez	$a5, $a5, $t0
	maskeqz	$a6, $a6, $t0
	or	$a5, $a6, $a5
	st.d	$a5, $a0, 152
	bnez	$a7, .LBB82_6
# %bb.1:
	andi	$a5, $a1, 32
	move	$a2, $a4
	bnez	$a5, .LBB82_6
# %bb.2:
	andi	$a4, $a1, 64
	move	$a2, $a3
	bnez	$a4, .LBB82_6
# %bb.3:
	andi	$a2, $a1, 256
	bnez	$a2, .LBB82_7
# %bb.4:
	andi	$a2, $a1, 512
	bnez	$a2, .LBB82_8
# %bb.5:
	slli.d	$a1, $a1, 56
	srai.d	$a1, $a1, 63
	pcalau12i	$a2, %pc_hi20(.L.str.70)
	addi.d	$a2, $a2, %pc_lo12(.L.str.70)
	and	$a2, $a1, $a2
.LBB82_6:
	st.d	$a2, $a0, 160
	st.b	$zero, $a0, 168
	ret
.LBB82_7:
	pcalau12i	$a1, %pc_hi20(.L.str.71)
	addi.d	$a2, $a1, %pc_lo12(.L.str.71)
	st.d	$a2, $a0, 160
	st.b	$zero, $a0, 168
	ret
.LBB82_8:
	pcalau12i	$a1, %pc_hi20(.L.str.72)
	addi.d	$a2, $a1, %pc_lo12(.L.str.72)
	st.d	$a2, $a0, 160
	st.b	$zero, $a0, 168
	ret
.Lfunc_end82:
	.size	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE, .Lfunc_end82-_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv # -- Begin function _ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,@function
_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv: # @_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB83_44
# %bb.1:
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 192
	ld.bu	$s1, $a0, 0
	addi.d	$s2, $a1, 313
	ldx.bu	$a0, $s2, $s1
	ext.w.b	$s0, $s1
	bnez	$a0, .LBB83_4
# %bb.2:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 64
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB83_16
# %bb.3:
	stx.b	$a0, $s2, $s1
.LBB83_4:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	beqz	$a2, .LBB83_8
.LBB83_5:                               # %.lr.ph.i.preheader
	addi.d	$a1, $a1, 2
	andi	$a0, $a0, 255
	.p2align	4, , 16
.LBB83_6:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	andi	$a2, $a2, 255
	beq	$a2, $a0, .LBB83_12
# %bb.7:                                #   in Loop: Header=BB83_6 Depth=1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 2
	bnez	$a2, .LBB83_6
.LBB83_8:                               # %.loopexit
	addi.d	$a0, $s1, -66
	ori	$a1, $zero, 53
	bltu	$a1, $a0, .LBB83_24
# %bb.9:                                # %.loopexit
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI83_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI83_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB83_10:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 14
.LBB83_11:
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	st.w	$a1, $fp, 144
	move	$a1, $zero
	move	$a4, $s0
	b	.LBB83_23
.LBB83_12:
	ori	$a0, $zero, 98
	bne	$s0, $a0, .LBB83_15
# %bb.13:
	ld.w	$a0, $fp, 136
	ori	$a2, $zero, 2
	beq	$a0, $a2, .LBB83_15
.LBB83_14:                              # %.thread
	ori	$a1, $zero, 24
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 112
	b	.LBB83_21
.LBB83_15:
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	ld.b	$a4, $a1, -1
	b	.LBB83_19
.LBB83_16:
	move	$a0, $zero
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	bnez	$a2, .LBB83_5
	b	.LBB83_8
.LBB83_17:
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB83_45
# %bb.18:
	ori	$a1, $zero, 1
	st.w	$a1, $fp, 144
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.b	$a4, $a0, 0
.LBB83_19:
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	b	.LBB83_22
.LBB83_20:
	ori	$a1, $zero, 24
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 110
.LBB83_21:                              # %.thread
	st.w	$a1, $fp, 144
.LBB83_22:                              # %.thread
	move	$a1, $zero
.LBB83_23:                              # %.thread
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jr	$t8
.LBB83_24:
	ori	$a0, $zero, 120
	beq	$s1, $a0, .LBB83_26
# %bb.25:
	ori	$a0, $zero, 117
	bne	$s1, $a0, .LBB83_33
.LBB83_26:
	addi.d	$a0, $s0, -120
	ld.d	$a1, $fp, 200
	sltui	$s2, $a0, 1
	addi.d	$s0, $fp, 200
	st.d	$zero, $fp, 208
	st.b	$zero, $a1, 0
	ori	$a0, $zero, 4
	masknez	$a0, $a0, $s2
	ori	$a1, $zero, 2
	maskeqz	$a1, $a1, $s2
	or	$s3, $a1, $a0
	addi.d	$s4, $fp, 216
	lu12i.w	$s5, 1
	ori	$s6, $zero, 15
	b	.LBB83_28
	.p2align	4, , 16
.LBB83_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB83_28 Depth=1
	stx.b	$s7, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	addi.w	$s3, $s3, -1
	stx.b	$zero, $a0, $a1
	beqz	$s3, .LBB83_32
.LBB83_28:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB83_43
# %bb.29:                               #   in Loop: Header=BB83_28 Depth=1
	ld.d	$a1, $fp, 192
	ld.bu	$a2, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a2, $a2, 1
	ldx.hu	$a1, $a1, $a2
	and	$a1, $a1, $s5
	beqz	$a1, .LBB83_43
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB83_28 Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s7, $a0, 0
	ld.d	$a0, $s4, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s4
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s6, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB83_27
# %bb.31:                               #   in Loop: Header=BB83_28 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	b	.LBB83_27
.LBB83_32:
	ori	$a0, $zero, 3
	b	.LBB83_42
.LBB83_33:
	ld.d	$a0, $fp, 192
	ld.d	$a0, $a0, 48
	slli.d	$a1, $s1, 1
	ldx.hu	$a0, $a0, $a1
	andi	$a0, $a0, 2048
	bnez	$a0, .LBB83_35
# %bb.34:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 1
	b	.LBB83_11
.LBB83_35:
	ld.d	$a2, $fp, 208
	addi.d	$s1, $fp, 200
	ori	$a3, $zero, 1
	move	$a0, $s1
	move	$a1, $zero
	move	$a4, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB83_41
# %bb.36:                               # %.lr.ph
	addi.d	$s2, $fp, 216
	ori	$s3, $zero, 15
	b	.LBB83_38
.LBB83_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit55
                                        #   in Loop: Header=BB83_38 Depth=1
	stx.b	$s4, $a1, $s0
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s0, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB83_41
.LBB83_38:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 192
	ld.bu	$a2, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a2, $a2, 1
	ldx.hu	$a1, $a1, $a2
	andi	$a1, $a1, 2048
	beqz	$a1, .LBB83_41
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i52
                                        #   in Loop: Header=BB83_38 Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s4, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s0, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s3, $a2
	or	$a0, $a2, $a0
	bltu	$s0, $a0, .LBB83_37
# %bb.40:                               #   in Loop: Header=BB83_38 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	b	.LBB83_37
.LBB83_41:                              # %.critedge
	ori	$a0, $zero, 4
.LBB83_42:
	st.w	$a0, $fp, 144
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB83_43:
	pcalau12i	$a0, %pc_hi20(.L.str.75)
	addi.d	$a0, $a0, %pc_lo12(.L.str.75)
	masknez	$a0, $a0, $s2
	pcalau12i	$a1, %pc_hi20(.L.str.74)
	addi.d	$a1, $a1, %pc_lo12(.L.str.74)
	maskeqz	$a1, $a1, $s2
	or	$a1, $a1, $a0
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB83_44:
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB83_45:
	pcalau12i	$a0, %pc_hi20(.L.str.73)
	addi.d	$a1, $a0, %pc_lo12(.L.str.73)
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end83:
	.size	_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv, .Lfunc_end83-_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,"aG",@progbits,_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,comdat
	.p2align	2, 0x0
.LJTI83_0:
	.word	.LBB83_20-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_10-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_10-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_10-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_14-.LJTI83_0
	.word	.LBB83_17-.LJTI83_0
	.word	.LBB83_10-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_10-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_24-.LJTI83_0
	.word	.LBB83_10-.LJTI83_0
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv # -- Begin function _ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv,@function
_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv: # @_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB84_13
# %bb.1:
	ld.d	$a1, $fp, 192
	ld.bu	$s2, $a0, 0
	addi.d	$s3, $a1, 313
	ldx.bu	$a0, $s3, $s2
	ld.d	$s1, $fp, 160
	ext.w.b	$s0, $s2
	bnez	$a0, .LBB84_4
# %bb.2:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 64
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB84_12
# %bb.3:
	stx.b	$a0, $s3, $s2
.LBB84_4:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strchr)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB84_6
.LBB84_5:
	ld.bu	$a1, $a0, 0
	ori	$a0, $zero, 1
	bnez	$a1, .LBB84_10
.LBB84_6:
	ld.wu	$a0, $fp, 140
	andi	$a1, $a0, 128
	bnez	$a1, .LBB84_11
# %bb.7:
	andi	$a0, $a0, 288
	beqz	$a0, .LBB84_13
# %bb.8:
	ori	$a0, $zero, 48
	beq	$s0, $a0, .LBB84_13
# %bb.9:
	ld.d	$a0, $fp, 192
	ld.d	$a0, $a0, 48
	slli.d	$a1, $s2, 1
	ldx.hu	$a0, $a0, $a1
	andi	$a1, $a0, 2048
	ori	$a0, $zero, 4
	beqz	$a1, .LBB84_13
.LBB84_10:
	ld.d	$a2, $fp, 208
	st.w	$a0, $fp, 144
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	move	$a1, $zero
	move	$a4, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 176
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB84_11:
	move	$a0, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv)
	jr	$t8
.LBB84_12:
	move	$a0, $zero
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strchr)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB84_5
	b	.LBB84_6
.LBB84_13:
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end84:
	.size	_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv, .Lfunc_end84-_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv # -- Begin function _ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv,@function
_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv: # @_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 192
	ld.bu	$s0, $a0, 0
	addi.d	$s2, $a1, 313
	ldx.bu	$a0, $s2, $s0
	ext.w.b	$s1, $s0
	bnez	$a0, .LBB85_3
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 64
	move	$a0, $a1
	move	$a1, $s1
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB85_22
# %bb.2:
	stx.b	$a0, $s2, $s0
.LBB85_3:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	beqz	$a2, .LBB85_7
.LBB85_4:                               # %.lr.ph.i.preheader
	addi.d	$a1, $a1, 2
	andi	$a0, $a0, 255
	.p2align	4, , 16
.LBB85_5:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	andi	$a2, $a2, 255
	beq	$a2, $a0, .LBB85_21
# %bb.6:                                #   in Loop: Header=BB85_5 Depth=1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 2
	bnez	$a2, .LBB85_5
.LBB85_7:                               # %.loopexit
	addi.d	$a0, $s1, -58
	andi	$a0, $a0, 255
	ori	$a1, $zero, 253
	bltu	$a1, $a0, .LBB85_23
# %bb.8:                                # %.loopexit
	ld.d	$a0, $fp, 192
	ld.d	$a0, $a0, 48
	slli.d	$a1, $s0, 1
	ldx.hu	$a0, $a0, $a1
	andi	$a0, $a0, 2048
	beqz	$a0, .LBB85_23
# %bb.9:
	ld.d	$a2, $fp, 208
	addi.d	$s0, $fp, 200
	ori	$a3, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB85_20
# %bb.10:
	ld.bu	$a1, $a0, 0
	andi	$a2, $a1, 254
	ori	$a3, $zero, 56
	beq	$a2, $a3, .LBB85_20
# %bb.11:
	ld.d	$a2, $fp, 192
	ld.d	$a2, $a2, 48
	slli.d	$a1, $a1, 1
	ldx.hu	$a1, $a2, $a1
	andi	$a1, $a1, 2048
	beqz	$a1, .LBB85_20
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
	addi.d	$s2, $fp, 216
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s3, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	ori	$a3, $zero, 15
	maskeqz	$a2, $a3, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB85_14
# %bb.13:
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
.LBB85_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
	stx.b	$s3, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB85_20
# %bb.15:
	ld.bu	$a1, $a0, 0
	andi	$a2, $a1, 254
	ori	$a3, $zero, 56
	beq	$a2, $a3, .LBB85_20
# %bb.16:
	ld.d	$a2, $fp, 192
	ld.d	$a2, $a2, 48
	slli.d	$a1, $a1, 1
	ldx.hu	$a1, $a2, $a1
	andi	$a1, $a1, 2048
	beqz	$a1, .LBB85_20
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s3, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	ori	$a3, $zero, 15
	maskeqz	$a2, $a3, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB85_19
# %bb.18:
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
.LBB85_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit.1
	stx.b	$s3, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
.LBB85_20:                              # %.critedge
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 144
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB85_21:
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	ld.b	$a4, $a1, -1
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	move	$a1, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jr	$t8
.LBB85_22:
	move	$a0, $zero
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	bnez	$a2, .LBB85_4
	b	.LBB85_7
.LBB85_23:
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end85:
	.size	_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv, .Lfunc_end85-_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE14_M_scan_normalEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv # -- Begin function _ZNSt8__detail8_ScannerIcE14_M_scan_normalEv
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv,@function
_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv: # @_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a1, $a0, 176
	addi.d	$a0, $a1, 1
	st.d	$a0, $fp, 176
	ld.d	$a0, $fp, 192
	ld.bu	$s2, $a1, 0
	addi.d	$s3, $a0, 313
	ldx.bu	$s4, $s3, $s2
	ld.d	$s1, $fp, 160
	ext.w.b	$s0, $s2
	bnez	$s4, .LBB86_3
# %bb.1:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 64
	ori	$a2, $zero, 32
	ori	$s4, $zero, 32
	move	$a1, $s0
	jirl	$ra, $a3, 0
	beq	$a0, $s4, .LBB86_3
# %bb.2:
	stx.b	$a0, $s3, $s2
	move	$s4, $a0
.LBB86_3:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ext.w.b	$a1, $s4
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strchr)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB86_14
# %bb.4:
	ori	$a0, $zero, 92
	bne	$s0, $a0, .LBB86_10
# %bb.5:
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB86_55
# %bb.6:
	ld.hu	$a1, $fp, 140
	andi	$a1, $a1, 288
	beqz	$a1, .LBB86_19
# %bb.7:
	ld.bu	$a1, $a0, 0
	addi.d	$a2, $a1, -40
	ori	$a3, $zero, 2
	bltu	$a2, $a3, .LBB86_9
# %bb.8:
	ori	$a2, $zero, 123
	bne	$a1, $a2, .LBB86_19
.LBB86_9:
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.bu	$s0, $a0, 0
.LBB86_10:
	andi	$s1, $s0, 255
	ori	$a0, $zero, 90
	blt	$a0, $s1, .LBB86_16
# %bb.11:
	ori	$a0, $zero, 40
	beq	$s1, $a0, .LBB86_25
# %bb.12:
	ori	$a0, $zero, 41
	bne	$s1, $a0, .LBB86_35
# %bb.13:
	ori	$a0, $zero, 8
	b	.LBB86_51
.LBB86_14:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 1
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	st.w	$a1, $fp, 144
	move	$a1, $zero
	move	$a4, $s0
.LBB86_15:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jr	$t8
.LBB86_16:
	ori	$a0, $zero, 91
	beq	$s1, $a0, .LBB86_22
# %bb.17:
	ori	$a0, $zero, 123
	bne	$s1, $a0, .LBB86_36
# %bb.18:
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 136
	ori	$a0, $zero, 12
	b	.LBB86_51
.LBB86_19:
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 240
	andi	$a2, $a1, 1
	add.d	$a0, $fp, $a0
	beqz	$a2, .LBB86_21
# %bb.20:
	ld.d	$a2, $a0, 0
	add.d	$a1, $a2, $a1
	ld.d	$a1, $a1, -1
.LBB86_21:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a1
.LBB86_22:
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	ori	$a2, $zero, 2
	st.w	$a2, $fp, 136
	ori	$a2, $zero, 1
	st.b	$a2, $fp, 168
	beq	$a0, $a1, .LBB86_34
# %bb.23:
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 94
	bne	$a1, $a2, .LBB86_34
# %bb.24:
	ori	$a1, $zero, 10
	st.w	$a1, $fp, 144
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 176
	b	.LBB86_52
.LBB86_25:
	ld.wu	$a1, $fp, 140
	andi	$a0, $a1, 16
	beqz	$a0, .LBB86_32
# %bb.26:
	ld.d	$a0, $fp, 176
	ld.bu	$a2, $a0, 0
	ori	$a3, $zero, 63
	bne	$a2, $a3, .LBB86_32
# %bb.27:
	ld.d	$a2, $fp, 184
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	beq	$a1, $a2, .LBB86_56
# %bb.28:
	ld.bu	$a1, $a1, 0
	ori	$a2, $zero, 33
	beq	$a1, $a2, .LBB86_44
# %bb.29:
	ori	$a2, $zero, 61
	beq	$a1, $a2, .LBB86_43
# %bb.30:
	ori	$a2, $zero, 58
	bne	$a1, $a2, .LBB86_57
# %bb.31:
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	ori	$a0, $zero, 6
	b	.LBB86_51
.LBB86_32:
	andi	$a0, $a1, 2
	bnez	$a0, .LBB86_42
# %bb.33:
	ori	$a0, $zero, 5
	b	.LBB86_51
.LBB86_34:
	ori	$a0, $zero, 9
	b	.LBB86_51
.LBB86_35:
	beqz	$s1, .LBB86_53
.LBB86_36:
	andi	$a0, $s0, 223
	ori	$a1, $zero, 93
	bne	$a0, $a1, .LBB86_39
# %bb.37:
	ori	$a1, $zero, 1
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ext.w.b	$a4, $s0
	ori	$a3, $zero, 1
.LBB86_38:
	st.w	$a1, $fp, 144
	move	$a1, $zero
	b	.LBB86_15
.LBB86_39:
	ld.d	$a2, $fp, 192
	addi.d	$s2, $a2, 313
	ldx.bu	$a0, $s2, $s1
	bnez	$a0, .LBB86_46
# %bb.40:
	ld.d	$a0, $a2, 0
	ld.d	$a3, $a0, 64
	ext.w.b	$a1, $s0
	move	$a0, $a2
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB86_45
# %bb.41:
	stx.b	$a0, $s2, $s1
	b	.LBB86_46
.LBB86_42:
	ori	$a0, $zero, 6
	b	.LBB86_51
.LBB86_43:
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	ori	$a1, $zero, 7
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 112
	b	.LBB86_38
.LBB86_44:
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	ori	$a1, $zero, 7
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 110
	b	.LBB86_38
.LBB86_45:
	move	$a0, $zero
.LBB86_46:                              # %_ZNKSt5ctypeIcE6narrowEcc.exit40
	ld.bu	$a2, $fp, 0
	beqz	$a2, .LBB86_52
# %bb.47:                               # %.lr.ph.preheader
	addi.d	$a1, $fp, 8
	andi	$a0, $a0, 255
	.p2align	4, , 16
.LBB86_48:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	andi	$a2, $a2, 255
	beq	$a2, $a0, .LBB86_50
# %bb.49:                               #   in Loop: Header=BB86_48 Depth=1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 8
	bnez	$a2, .LBB86_48
	b	.LBB86_52
.LBB86_50:
	ld.w	$a0, $a1, -4
.LBB86_51:                              # %.critedge
	st.w	$a0, $fp, 144
.LBB86_52:                              # %.critedge
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB86_53:
	ld.bu	$a0, $fp, 140
	andi	$a0, $a0, 16
	beqz	$a0, .LBB86_58
# %bb.54:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 1
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	st.w	$a1, $fp, 144
	move	$a1, $zero
	move	$a4, $zero
	b	.LBB86_15
.LBB86_55:
	pcalau12i	$a0, %pc_hi20(.L.str.76)
	addi.d	$a1, $a0, %pc_lo12(.L.str.76)
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB86_56:
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB86_57:
	pcalau12i	$a0, %pc_hi20(.L.str.77)
	addi.d	$a1, $a0, %pc_lo12(.L.str.77)
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB86_58:
	ori	$a0, $zero, 13
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end86:
	.size	_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv, .Lfunc_end86-_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv # -- Begin function _ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv,@function
_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv: # @_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a2, $fp, 184
	beq	$a0, $a2, .LBB87_26
# %bb.1:
	addi.d	$a3, $a0, 1
	st.d	$a3, $fp, 176
	ld.bu	$a1, $a0, 0
	ori	$a4, $zero, 91
	blt	$a4, $a1, .LBB87_9
# %bb.2:
	ori	$a4, $zero, 45
	beq	$a1, $a4, .LBB87_14
# %bb.3:
	ori	$a4, $zero, 91
	bne	$a1, $a4, .LBB87_19
# %bb.4:
	beq	$a3, $a2, .LBB87_27
# %bb.5:
	ld.bu	$a1, $a3, 0
	ori	$a2, $zero, 61
	beq	$a1, $a2, .LBB87_22
# %bb.6:
	ori	$a2, $zero, 58
	beq	$a1, $a2, .LBB87_21
# %bb.7:
	ori	$a2, $zero, 46
	bne	$a1, $a2, .LBB87_25
# %bb.8:
	ori	$a1, $zero, 16
	b	.LBB87_23
.LBB87_9:
	ori	$a0, $zero, 92
	beq	$a1, $a0, .LBB87_15
# %bb.10:
	ori	$a0, $zero, 93
	bne	$a1, $a0, .LBB87_19
# %bb.11:
	ld.bu	$a0, $fp, 140
	andi	$a0, $a0, 16
	bnez	$a0, .LBB87_13
# %bb.12:
	ld.b	$a0, $fp, 168
	andi	$a0, $a0, 1
	bnez	$a0, .LBB87_19
.LBB87_13:
	ori	$a0, $zero, 11
	st.w	$a0, $fp, 144
	st.w	$zero, $fp, 136
	b	.LBB87_24
.LBB87_14:
	ori	$a0, $zero, 28
	st.w	$a0, $fp, 144
	b	.LBB87_24
.LBB87_15:
	ld.bu	$a0, $fp, 140
	andi	$a0, $a0, 144
	beqz	$a0, .LBB87_19
# %bb.16:
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 240
	andi	$a2, $a1, 1
	add.d	$a0, $fp, $a0
	beqz	$a2, .LBB87_18
# %bb.17:
	ld.d	$a2, $a0, 0
	add.d	$a1, $a2, $a1
	ld.d	$a1, $a1, -1
.LBB87_18:
	jirl	$ra, $a1, 0
	b	.LBB87_24
.LBB87_19:
	ext.w.b	$a4, $a1
	ld.d	$a2, $fp, 208
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
.LBB87_20:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	b	.LBB87_24
.LBB87_21:
	ori	$a1, $zero, 15
	b	.LBB87_23
.LBB87_22:
	ori	$a1, $zero, 17
.LBB87_23:
	st.w	$a1, $fp, 144
	addi.d	$a1, $a0, 2
	st.d	$a1, $fp, 176
	ld.b	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE12_M_eat_classEc)
	jirl	$ra, $ra, 0
.LBB87_24:
	st.b	$zero, $fp, 168
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB87_25:
	ld.d	$a2, $fp, 208
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 91
	b	.LBB87_20
.LBB87_26:
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB87_27:
	pcalau12i	$a0, %pc_hi20(.L.str.78)
	addi.d	$a1, $a0, %pc_lo12(.L.str.78)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end87:
	.size	_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv, .Lfunc_end87-_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv # -- Begin function _ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv,@function
_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv: # @_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB88_19
# %bb.1:
	ld.d	$a3, $fp, 192
	addi.d	$a2, $a0, 1
	st.d	$a2, $fp, 176
	ld.bu	$a4, $a0, 0
	ld.d	$a3, $a3, 48
	slli.d	$a5, $a4, 1
	ldx.hu	$a3, $a3, $a5
	andi	$a3, $a3, 2048
	ext.w.b	$a4, $a4
	bnez	$a3, .LBB88_4
# %bb.2:
	ori	$a3, $zero, 44
	bne	$a4, $a3, .LBB88_10
# %bb.3:
	ori	$a0, $zero, 25
	b	.LBB88_17
.LBB88_4:
	ld.d	$a2, $fp, 208
	ori	$a0, $zero, 26
	st.w	$a0, $fp, 144
	addi.d	$s0, $fp, 200
	ori	$a3, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB88_18
# %bb.5:                                # %.lr.ph
	addi.d	$s2, $fp, 216
	ori	$s3, $zero, 15
	b	.LBB88_7
	.p2align	4, , 16
.LBB88_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB88_7 Depth=1
	stx.b	$s4, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB88_18
.LBB88_7:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 192
	ld.bu	$a2, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a2, $a2, 1
	ldx.hu	$a1, $a1, $a2
	andi	$a1, $a1, 2048
	beqz	$a1, .LBB88_18
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB88_7 Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s4, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s3, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB88_6
# %bb.9:                                #   in Loop: Header=BB88_7 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	b	.LBB88_6
.LBB88_10:
	ld.hu	$a3, $fp, 140
	andi	$a3, $a3, 288
	beqz	$a3, .LBB88_15
# %bb.11:
	ori	$a3, $zero, 92
	bne	$a4, $a3, .LBB88_20
# %bb.12:
	beq	$a2, $a1, .LBB88_20
# %bb.13:
	ld.bu	$a1, $a2, 0
	ori	$a2, $zero, 125
	bne	$a1, $a2, .LBB88_20
# %bb.14:
	st.w	$zero, $fp, 136
	ori	$a1, $zero, 13
	st.w	$a1, $fp, 144
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	b	.LBB88_18
.LBB88_15:
	ori	$a0, $zero, 125
	bne	$a4, $a0, .LBB88_20
# %bb.16:
	st.w	$zero, $fp, 136
	ori	$a0, $zero, 13
.LBB88_17:                              # %.critedge
	st.w	$a0, $fp, 144
.LBB88_18:                              # %.critedge
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB88_19:
	ori	$a0, $zero, 6
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB88_20:
	ori	$a0, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end88:
	.size	_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv, .Lfunc_end88-_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE12_M_eat_classEc,"axG",@progbits,_ZNSt8__detail8_ScannerIcE12_M_eat_classEc,comdat
	.weak	_ZNSt8__detail8_ScannerIcE12_M_eat_classEc # -- Begin function _ZNSt8__detail8_ScannerIcE12_M_eat_classEc
	.p2align	2
	.type	_ZNSt8__detail8_ScannerIcE12_M_eat_classEc,@function
_ZNSt8__detail8_ScannerIcE12_M_eat_classEc: # @_ZNSt8__detail8_ScannerIcE12_M_eat_classEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a0, $a0, 200
	st.d	$zero, $fp, 208
	st.b	$zero, $a0, 0
	ld.d	$a0, $fp, 176
	ld.d	$a2, $fp, 184
	andi	$s2, $a1, 255
	beq	$a0, $a2, .LBB89_11
# %bb.1:                                # %.lr.ph
	ld.bu	$a1, $a0, 0
	beq	$a1, $s2, .LBB89_7
# %bb.2:
	addi.d	$s0, $fp, 200
	addi.d	$s3, $fp, 216
	ori	$s4, $zero, 15
	.p2align	4, , 16
.LBB89_3:                               # %.lr.ph25
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s5, $a0, 0
	ld.d	$a0, $s3, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s3
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s4, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB89_5
# %bb.4:                                #   in Loop: Header=BB89_3 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
.LBB89_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB89_3 Depth=1
	stx.b	$s5, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a2, $fp, 184
	beq	$a0, $a2, .LBB89_11
# %bb.6:                                #   in Loop: Header=BB89_3 Depth=1
	ld.bu	$a1, $a0, 0
	bne	$a1, $s2, .LBB89_3
.LBB89_7:                               # %.critedge
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.bu	$a3, $a0, 0
	bne	$a3, $s2, .LBB89_11
# %bb.8:                                # %.critedge
	beq	$a1, $a2, .LBB89_11
# %bb.9:
	addi.d	$a1, $a0, 2
	st.d	$a1, $fp, 176
	ld.bu	$a0, $a0, 1
	ori	$a1, $zero, 93
	bne	$a0, $a1, .LBB89_11
# %bb.10:
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB89_11:                              # %.critedge.thread
	addi.d	$a0, $s2, -58
	sltui	$a0, $a0, 1
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end89:
	.size	_ZNSt8__detail8_ScannerIcE12_M_eat_classEc, .Lfunc_end89-_ZNSt8__detail8_ScannerIcE12_M_eat_classEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,comdat
	.hidden	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_ # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.p2align	2
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s2, $a4
	move	$s3, $a3
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 104
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a0, $zero, 1
	lu32i.d	$a0, 1
	st.d	$a0, $s1, 8
	pcalau12i	$a0, %pc_hi20(_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE+16)
	st.d	$a0, $s1, 0
	addi.d	$s4, $s1, 16
	ld.w	$a0, $s2, 0
	st.d	$zero, $s1, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $s1, 16
	st.w	$a0, $s1, 40
	vst	$vr0, $s1, 48
	st.b	$zero, $s1, 64
	st.d	$zero, $s1, 72
	vst	$vr0, $s1, 80
	addi.d	$s2, $s1, 96
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 8
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6localeaSERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeaSERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	st.d	$s1, $s0, 0
	st.d	$s4, $fp, 0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end90:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_, .Lfunc_end90-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
# %bb.0:
	ori	$a1, $zero, 104
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end91:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end91-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.d	$a0, $a0, 96
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s0, $fp, 72
	ld.d	$s1, $fp, 80
	beq	$s0, $s1, .LBB92_7
# %bb.1:                                # %.lr.ph.i.i.i.i.preheader
	ori	$s2, $zero, 11
	b	.LBB92_3
	.p2align	4, , 16
.LBB92_2:                               # %_ZSt8_DestroyINSt8__detail6_StateIcEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB92_3 Depth=1
	addi.d	$s0, $s0, 48
	beq	$s0, $s1, .LBB92_6
.LBB92_3:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a0, $s0, 0
	bne	$a0, $s2, .LBB92_2
# %bb.4:                                #   in Loop: Header=BB92_3 Depth=1
	ld.d	$a3, $s0, 32
	beqz	$a3, .LBB92_2
# %bb.5:                                #   in Loop: Header=BB92_3 Depth=1
	addi.d	$a0, $s0, 16
.Ltmp996:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp997:                               # EH_LABEL
	b	.LBB92_2
.LBB92_6:                               # %_ZSt8_DestroyIPNSt8__detail6_StateIcEES2_EvT_S4_RSaIT0_E.exitthread-pre-split.i.i.i
	ld.d	$s0, $fp, 72
.LBB92_7:                               # %_ZSt8_DestroyIPNSt8__detail6_StateIcEES2_EvT_S4_RSaIT0_E.exit.i.i.i
	beqz	$s0, .LBB92_9
# %bb.8:
	ld.d	$a0, $fp, 88
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_9:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EED2Ev.exit.i.i
	ld.d	$a0, $fp, 16
	beqz	$a0, .LBB92_11
# %bb.10:
	ld.d	$a1, $fp, 32
	sub.d	$a1, $a1, $a0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB92_11:                              # %_ZSt8_DestroyINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEEEvPT_.exit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB92_12:
.Ltmp998:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end92:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end92-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"aG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.p2align	2, 0x0
GCC_except_table92:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Lfunc_begin38-.Lfunc_begin38  # >> Call Site 1 <<
	.uleb128 .Ltmp996-.Lfunc_begin38        #   Call between .Lfunc_begin38 and .Ltmp996
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp996-.Lfunc_begin38        # >> Call Site 2 <<
	.uleb128 .Ltmp997-.Ltmp996              #   Call between .Ltmp996 and .Ltmp997
	.uleb128 .Ltmp998-.Lfunc_begin38        #     jumps to .Ltmp998
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp997-.Lfunc_begin38        # >> Call Site 3 <<
	.uleb128 .Lfunc_end92-.Ltmp997          #   Call between .Ltmp997 and .Lfunc_end92
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	ori	$a1, $zero, 104
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end93:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end93-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag)
	addi.d	$a2, $a2, %pc_lo12(_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag)
	beq	$a1, $a2, .LBB94_6
# %bb.1:
	ld.d	$a2, $a1, 8
	pcalau12i	$a1, %pc_hi20(_ZTSSt19_Sp_make_shared_tag)
	addi.d	$a1, $a1, %pc_lo12(_ZTSSt19_Sp_make_shared_tag)
	beq	$a2, $a1, .LBB94_6
# %bb.2:
	ld.bu	$a1, $a2, 0
	ori	$a3, $zero, 42
	bne	$a1, $a3, .LBB94_4
# %bb.3:
	move	$a0, $zero
	ret
.LBB94_4:                               # %_ZNKSt9type_infoeqERKS_.exit
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTSSt19_Sp_make_shared_tag)
	addi.d	$a1, $a1, %pc_lo12(_ZTSSt19_Sp_make_shared_tag)
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	beqz	$a1, .LBB94_6
# %bb.5:
	move	$a0, $zero
	ret
.LBB94_6:                               # %_ZNKSt9type_infoeqERKS_.exit.thread
	addi.d	$a0, $a0, 16
	ret
.Lfunc_end94:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end94-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
                                        # -- End function
	.section	.text._ZNSt8__detail6_StateIcED2Ev,"axG",@progbits,_ZNSt8__detail6_StateIcED2Ev,comdat
	.hidden	_ZNSt8__detail6_StateIcED2Ev    # -- Begin function _ZNSt8__detail6_StateIcED2Ev
	.weak	_ZNSt8__detail6_StateIcED2Ev
	.p2align	2
	.type	_ZNSt8__detail6_StateIcED2Ev,@function
_ZNSt8__detail6_StateIcED2Ev:           # @_ZNSt8__detail6_StateIcED2Ev
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.w	$a1, $a0, 0
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB95_3
# %bb.1:
	ld.d	$a3, $a0, 32
	beqz	$a3, .LBB95_3
# %bb.2:
	addi.d	$a0, $a0, 16
.Ltmp999:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1000:                              # EH_LABEL
.LBB95_3:                               # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB95_4:
.Ltmp1001:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end95:
	.size	_ZNSt8__detail6_StateIcED2Ev, .Lfunc_end95-_ZNSt8__detail6_StateIcED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail6_StateIcED2Ev,"aG",@progbits,_ZNSt8__detail6_StateIcED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table95:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Ltmp999-.Lfunc_begin39        # >> Call Site 1 <<
	.uleb128 .Ltmp1000-.Ltmp999             #   Call between .Ltmp999 and .Ltmp1000
	.uleb128 .Ltmp1001-.Lfunc_begin39       #     jumps to .Ltmp1001
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1000-.Lfunc_begin39       # >> Call Site 2 <<
	.uleb128 .Lfunc_end95-.Ltmp1000         #   Call between .Ltmp1000 and .Lfunc_end95
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm
	.p2align	2
	.type	_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a0
	lu12i.w	$a0, 99864
	ori	$a0, $a0, 1561
	lu32i.d	$a0, -499322
	lu52i.d	$a0, $a0, -1951
	mulh.du	$a0, $a1, $a0
	sub.d	$a1, $a1, $a0
	srli.d	$a1, $a1, 1
	add.d	$a0, $a1, $a0
	srli.d	$s1, $a0, 4
	addi.d	$s3, $s1, 1
	ori	$a0, $zero, 5
	sltu	$a1, $a0, $s1
	maskeqz	$a2, $s1, $a1
	masknez	$a0, $a0, $a1
	or	$a0, $a2, $a0
	addi.d	$s2, $a0, 3
	st.d	$s2, $fp, 8
	slli.d	$a0, $s2, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s2, $s3
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s2, $a0, $a1
	alsl.d	$s4, $s3, $s2, 3
	move	$s3, $s2
	.p2align	4, , 16
.LBB96_1:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1002:                              # EH_LABEL
	ori	$a0, $zero, 504
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1003:                              # EH_LABEL
# %bb.2:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB96_1 Depth=1
	st.d	$a0, $s3, 0
	addi.d	$s3, $s3, 8
	bltu	$s3, $s4, .LBB96_1
# %bb.3:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE15_M_create_nodesEPPS5_S9_.exit
	ld.d	$a0, $s2, 0
	st.d	$s2, $fp, 40
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 32
	ld.d	$a1, $s4, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s4, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 504
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	alsl.d	$a0, $s1, $s1, 2
	alsl.d	$a0, $a0, $s1, 2
	sub.d	$a0, $s0, $a0
	ori	$a2, $zero, 24
	mul.d	$a0, $a0, $a2
	add.d	$a0, $a1, $a0
	st.d	$a0, $fp, 48
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB96_4:
.Ltmp1004:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s2, $s3, .LBB96_6
	.p2align	4, , 16
.LBB96_5:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB96_5
.LBB96_6:                               # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i
.Ltmp1005:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1006:                              # EH_LABEL
# %bb.7:
.LBB96_8:
.Ltmp1007:                              # EH_LABEL
	move	$s0, $a0
.Ltmp1008:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1009:                              # EH_LABEL
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp1011:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1012:                              # EH_LABEL
# %bb.10:
.LBB96_11:
.Ltmp1013:                              # EH_LABEL
	move	$fp, $a0
.Ltmp1014:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1015:                              # EH_LABEL
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB96_13:
.Ltmp1016:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB96_14:
.Ltmp1010:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end96:
	.size	_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm, .Lfunc_end96-_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table96:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40  # >> Call Site 1 <<
	.uleb128 .Ltmp1002-.Lfunc_begin40       #   Call between .Lfunc_begin40 and .Ltmp1002
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1002-.Lfunc_begin40       # >> Call Site 2 <<
	.uleb128 .Ltmp1003-.Ltmp1002            #   Call between .Ltmp1002 and .Ltmp1003
	.uleb128 .Ltmp1004-.Lfunc_begin40       #     jumps to .Ltmp1004
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1003-.Lfunc_begin40       # >> Call Site 3 <<
	.uleb128 .Ltmp1005-.Ltmp1003            #   Call between .Ltmp1003 and .Ltmp1005
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1005-.Lfunc_begin40       # >> Call Site 4 <<
	.uleb128 .Ltmp1006-.Ltmp1005            #   Call between .Ltmp1005 and .Ltmp1006
	.uleb128 .Ltmp1007-.Lfunc_begin40       #     jumps to .Ltmp1007
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1008-.Lfunc_begin40       # >> Call Site 5 <<
	.uleb128 .Ltmp1009-.Ltmp1008            #   Call between .Ltmp1008 and .Ltmp1009
	.uleb128 .Ltmp1010-.Lfunc_begin40       #     jumps to .Ltmp1010
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1009-.Lfunc_begin40       # >> Call Site 6 <<
	.uleb128 .Ltmp1011-.Ltmp1009            #   Call between .Ltmp1009 and .Ltmp1011
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1011-.Lfunc_begin40       # >> Call Site 7 <<
	.uleb128 .Ltmp1012-.Ltmp1011            #   Call between .Ltmp1011 and .Ltmp1012
	.uleb128 .Ltmp1013-.Lfunc_begin40       #     jumps to .Ltmp1013
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1014-.Lfunc_begin40       # >> Call Site 8 <<
	.uleb128 .Ltmp1015-.Ltmp1014            #   Call between .Ltmp1014 and .Ltmp1015
	.uleb128 .Ltmp1016-.Lfunc_begin40       #     jumps to .Ltmp1016
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1015-.Lfunc_begin40       # >> Call Site 9 <<
	.uleb128 .Lfunc_end96-.Ltmp1015         #   Call between .Ltmp1015 and .Lfunc_end96
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_,@function
_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_: # @_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s3, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s5, $s3, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB97_13
# %bb.1:                                # %_ZNKSt6vectorINSt8__detail6_StateIcEESaIS2_EE12_M_check_lenEmPKc.exit
	move	$s2, $a1
	srli.d	$a0, $s5, 4
	lu12i.w	$a1, -349526
	ori	$a2, $a1, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$a2, $a2, -1366
	mul.d	$a0, $a0, $a2
	ori	$a2, $zero, 1
	sltu	$a3, $a2, $a0
	maskeqz	$a4, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a2, $a4, $a2
	add.d	$a0, $a2, $a0
	ori	$a1, $a1, 2730
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, 42
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 5
	alsl.d	$a0, $s4, $a0, 4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	vld	$vr0, $s2, 0
	xvld	$xr1, $s2, 16
	add.d	$a0, $a0, $s5
	ld.w	$a1, $s2, 0
	vstx	$vr0, $s1, $s5
	xvst	$xr1, $a0, 16
	ori	$a2, $zero, 11
	vrepli.b	$vr0, 0
	bne	$a1, $a2, .LBB97_4
# %bb.2:
	ld.d	$a2, $s2, 40
	ld.d	$a1, $s2, 32
	st.d	$zero, $a0, 32
	vst	$vr0, $a0, 16
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB97_4
# %bb.3:
	vld	$vr1, $s2, 16
	addi.d	$a2, $a0, 16
	addi.d	$a3, $s2, 32
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB97_4:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	move	$s2, $s1
	beq	$s0, $s3, .LBB97_10
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	ori	$a0, $zero, 11
	move	$s2, $s1
	move	$a1, $s0
	b	.LBB97_7
	.p2align	4, , 16
.LBB97_6:                               # %_ZSt19__relocate_object_aINSt8__detail6_StateIcEES2_SaIS2_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB97_7 Depth=1
	addi.d	$a1, $a1, 48
	addi.d	$s2, $s2, 48
	beq	$a1, $s3, .LBB97_10
.LBB97_7:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr1, $a1, 32
	vst	$vr1, $s2, 32
	xvld	$xr1, $a1, 0
	xvst	$xr1, $s2, 0
	ld.w	$a2, $a1, 0
	bne	$a2, $a0, .LBB97_6
# %bb.8:                                #   in Loop: Header=BB97_7 Depth=1
	ld.d	$a3, $a1, 40
	ld.d	$a2, $a1, 32
	st.d	$zero, $s2, 32
	vst	$vr0, $s2, 16
	st.d	$a3, $s2, 40
	beqz	$a2, .LBB97_6
# %bb.9:                                #   in Loop: Header=BB97_7 Depth=1
	vld	$vr1, $a1, 16
	addi.d	$a3, $s2, 16
	addi.d	$a4, $a1, 32
	vst	$vr1, $a3, 0
	st.d	$a2, $s2, 32
	vst	$vr0, $a4, 0
	b	.LBB97_6
.LBB97_10:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit
	beqz	$s0, .LBB97_12
# %bb.11:                               # %_ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE13_M_deallocateEPS2_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB97_12:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 48
	st.d	$s1, $fp, 0
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 48
	mul.d	$a0, $s4, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB97_13:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end97:
	.size	_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_, .Lfunc_end97-_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB98_3
# %bb.1:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB98_12
	.p2align	4, , 16
.LBB98_2:                               # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB98_2
.LBB98_3:                               # %.loopexit
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB98_5
# %bb.4:
	ld.d	$a0, $a1, -8
	st.d	$a0, $sp, 24
	vld	$vr0, $a1, -24
	addi.d	$a0, $a1, -24
	vst	$vr0, $sp, 8
	b	.LBB98_6
.LBB98_5:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$a2, $a1, 480
	vld	$vr0, $a1, 488
	st.d	$a2, $sp, 8
	vst	$vr0, $sp, 16
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB98_6:                               # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	st.d	$a0, $fp, 352
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a2, $a0, .LBB98_8
# %bb.7:
	ld.d	$s1, $a2, -16
	ld.d	$s0, $a2, -8
	ld.d	$a1, $fp, 368
	addi.d	$a0, $a2, -24
	b	.LBB98_9
.LBB98_8:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s1, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB98_9:                               # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit2
	ld.d	$a2, $sp, 8
	ld.d	$a3, $sp, 24
	st.d	$a0, $fp, 352
	ld.d	$a2, $a2, 56
	slli.d	$a4, $a3, 5
	alsl.d	$a3, $a3, $a4, 4
	add.d	$a2, $a2, $a3
	st.d	$s1, $a2, 8
	addi.d	$a1, $a1, -24
	st.d	$s0, $sp, 24
	beq	$a0, $a1, .LBB98_11
# %bb.10:
	ld.d	$a1, $sp, 24
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a0, 0
	b	.LBB98_14
.LBB98_11:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB98_15
.LBB98_12:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_termEv.exit
	ld.d	$s0, $fp, 256
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 8
	st.d	$a0, $sp, 16
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 24
	beq	$a1, $a2, .LBB98_16
# %bb.13:
	ld.d	$a0, $sp, 24
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a1, 0
.LBB98_14:
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
.LBB98_15:
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB98_16:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB98_15
.Lfunc_end98:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv, .Lfunc_end98-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 10
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB99_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 8
	xvst	$xr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB99_4
.LBB99_2:
.Ltmp1017:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1018:                              # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB99_4:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB99_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB99_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB99_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp1019:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1020:                              # EH_LABEL
.LBB99_8:                               # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB99_9:
.Ltmp1022:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1023:                              # EH_LABEL
# %bb.10:                               # %.noexc2
.LBB99_11:
.Ltmp1021:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB99_12:
.Ltmp1024:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end99:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv, .Lfunc_end99-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,comdat
	.p2align	2, 0x0
GCC_except_table99:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Ltmp1017-.Lfunc_begin41       # >> Call Site 1 <<
	.uleb128 .Ltmp1018-.Ltmp1017            #   Call between .Ltmp1017 and .Ltmp1018
	.uleb128 .Ltmp1024-.Lfunc_begin41       #     jumps to .Ltmp1024
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1019-.Lfunc_begin41       # >> Call Site 2 <<
	.uleb128 .Ltmp1020-.Ltmp1019            #   Call between .Ltmp1019 and .Ltmp1020
	.uleb128 .Ltmp1021-.Lfunc_begin41       #     jumps to .Ltmp1021
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1022-.Lfunc_begin41       # >> Call Site 3 <<
	.uleb128 .Ltmp1023-.Ltmp1022            #   Call between .Ltmp1022 and .Ltmp1023
	.uleb128 .Ltmp1024-.Lfunc_begin41       #     jumps to .Ltmp1024
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1023-.Lfunc_begin41       # >> Call Site 4 <<
	.uleb128 .Lfunc_end99-.Ltmp1023         #   Call between .Ltmp1023 and .Lfunc_end99
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase17:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 1
	st.w	$a0, $sp, 56
	st.d	$a1, $sp, 64
	st.d	$a2, $sp, 72
	st.d	$a1, $sp, 16
	st.d	$a2, $sp, 24
	ld.d	$a1, $sp, 80
	vld	$vr0, $sp, 88
	ld.d	$a2, $sp, 56
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 32
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 8
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB100_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 56
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB100_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB100_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB100_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB100_7
.LBB100_5:
.Ltmp1025:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1026:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB100_7:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB100_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB100_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB100_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp1027:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1028:                              # EH_LABEL
.LBB100_11:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB100_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB100_14
# %bb.13:
.Ltmp1030:                              # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1031:                              # EH_LABEL
.LBB100_14:                             # %_ZNSt8__detail6_StateIcED2Ev.exit6
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB100_15:
.Ltmp1033:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1034:                              # EH_LABEL
# %bb.16:                               # %.noexc4
.LBB100_17:
.Ltmp1032:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB100_18:
.Ltmp1029:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB100_19:
.Ltmp1035:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end100:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb, .Lfunc_end100-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,comdat
	.p2align	2, 0x0
GCC_except_table100:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Ltmp1025-.Lfunc_begin42       # >> Call Site 1 <<
	.uleb128 .Ltmp1026-.Ltmp1025            #   Call between .Ltmp1025 and .Ltmp1026
	.uleb128 .Ltmp1035-.Lfunc_begin42       #     jumps to .Ltmp1035
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1027-.Lfunc_begin42       # >> Call Site 2 <<
	.uleb128 .Ltmp1028-.Ltmp1027            #   Call between .Ltmp1027 and .Ltmp1028
	.uleb128 .Ltmp1029-.Lfunc_begin42       #     jumps to .Ltmp1029
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1030-.Lfunc_begin42       # >> Call Site 3 <<
	.uleb128 .Ltmp1031-.Ltmp1030            #   Call between .Ltmp1030 and .Ltmp1031
	.uleb128 .Ltmp1032-.Lfunc_begin42       #     jumps to .Ltmp1032
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1033-.Lfunc_begin42       # >> Call Site 4 <<
	.uleb128 .Ltmp1034-.Ltmp1033            #   Call between .Ltmp1033 and .Ltmp1034
	.uleb128 .Ltmp1035-.Lfunc_begin42       #     jumps to .Ltmp1035
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1034-.Lfunc_begin42       # >> Call Site 5 <<
	.uleb128 .Lfunc_end100-.Ltmp1034        #   Call between .Ltmp1034 and .Lfunc_end100
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase18:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	addi.d	$a1, $a0, -7
	ori	$a2, $zero, 17
	move	$a0, $zero
	bltu	$a2, $a1, .LBB101_54
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI101_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI101_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	addi.d	$s0, $fp, 8
	jr	$a1
.LBB101_2:
	addi.d	$s1, $fp, 208
	addi.d	$s2, $fp, 272
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB101_23
# %bb.3:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB101_31
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB101_29
# %bb.5:
	bnez	$a0, .LBB101_32
# %bb.6:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB101_32
.LBB101_7:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB101_22
# %bb.8:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB101_27
# %bb.9:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB101_26
# %bb.10:
	bnez	$a0, .LBB101_28
# %bb.11:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB101_28
.LBB101_12:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB101_24
# %bb.13:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB101_39
# %bb.14:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB101_30
# %bb.15:
	bnez	$a0, .LBB101_40
# %bb.16:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB101_40
.LBB101_17:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB101_25
# %bb.18:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB101_42
# %bb.19:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB101_41
# %bb.20:
	bnez	$a0, .LBB101_43
# %bb.21:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB101_43
.LBB101_22:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB101_28
.LBB101_23:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB101_32
.LBB101_24:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB101_40
.LBB101_25:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB101_43
.LBB101_26:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB101_28
.LBB101_27:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB101_28:
	ld.d	$s0, $fp, 256
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv)
	jirl	$ra, $ra, 0
	b	.LBB101_44
.LBB101_29:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB101_32
.LBB101_30:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB101_40
.LBB101_31:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB101_32:
	ld.d	$a0, $fp, 272
	ld.bu	$s3, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB101_55
# %bb.33:
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB101_38
# %bb.34:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB101_49
# %bb.35:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB101_46
# %bb.36:
	bnez	$a0, .LBB101_47
# %bb.37:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB101_48
	b	.LBB101_50
.LBB101_38:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB101_48
	b	.LBB101_50
.LBB101_39:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB101_40:
	ld.d	$s0, $fp, 256
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv)
	jirl	$ra, $ra, 0
	b	.LBB101_44
.LBB101_41:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB101_43
.LBB101_42:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB101_43:
	ld.d	$a0, $fp, 272
	ld.bu	$a0, $a0, 0
	ld.d	$s0, $fp, 256
	addi.d	$a0, $a0, -110
	sltui	$a1, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb)
	jirl	$ra, $ra, 0
.LBB101_44:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 16
	st.d	$a0, $sp, 24
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	beq	$a1, $a2, .LBB101_52
.LBB101_45:
	ld.d	$a0, $sp, 32
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 16
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB101_53
.LBB101_46:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB101_47:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB101_50
.LBB101_48:
	ld.d	$s2, $a1, -24
	ld.d	$s0, $a1, -16
	ld.d	$s4, $a1, -8
	addi.d	$a1, $a1, -24
	b	.LBB101_51
.LBB101_49:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB101_48
.LBB101_50:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s2, $a1, 480
	ld.d	$s0, $a1, 488
	ld.d	$s4, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a1, $a0, 480
.LBB101_51:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	ld.d	$a0, $fp, 256
	addi.d	$a2, $s3, -110
	sltui	$s1, $a2, 1
	st.d	$a1, $fp, 352
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 56
	slli.d	$a2, $s4, 5
	alsl.d	$a2, $s4, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$s2, $fp, 256
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s2, $sp, 16
	st.d	$a0, $sp, 24
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	bne	$a1, $a2, .LBB101_45
.LBB101_52:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB101_53:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit11
	ori	$a0, $zero, 1
.LBB101_54:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit8
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB101_55:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit9
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end101:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv, .Lfunc_end101-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,comdat
	.p2align	2, 0x0
.LJTI101_0:
	.word	.LBB101_2-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_54-.LJTI101_0
	.word	.LBB101_12-.LJTI101_0
	.word	.LBB101_7-.LJTI101_0
	.word	.LBB101_17-.LJTI101_0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	addi.d	$s0, $fp, 8
	beqz	$a0, .LBB102_5
# %bb.1:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB102_10
# %bb.2:
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a1, .LBB102_17
# %bb.3:
	bnez	$a0, .LBB102_20
# %bb.4:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB102_19
# %bb.6:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB102_40
# %bb.7:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB102_39
# %bb.8:
	bnez	$a0, .LBB102_41
# %bb.9:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB102_41
.LBB102_10:
	ld.w	$a0, $fp, 152
	addi.d	$a0, $a0, -4
	ori	$a1, $zero, 10
	bltu	$a1, $a0, .LBB102_37
# %bb.11:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI102_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI102_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB102_12:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB102_57
# %bb.13:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB102_71
# %bb.14:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB102_69
# %bb.15:
	bnez	$a0, .LBB102_72
# %bb.16:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB102_72
.LBB102_17:
	bnez	$a0, .LBB102_21
# %bb.18:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_19:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB102_41
.LBB102_20:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_21:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_22:
	addi.d	$s3, $fp, 208
	addi.d	$s4, $fp, 272
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB102_56
# %bb.23:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB102_61
# %bb.24:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB102_60
# %bb.25:
	bnez	$a0, .LBB102_62
# %bb.26:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB102_62
.LBB102_27:
	addi.d	$s3, $fp, 208
	addi.d	$s4, $fp, 272
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB102_58
# %bb.28:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB102_80
# %bb.29:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB102_70
# %bb.30:
	bnez	$a0, .LBB102_81
# %bb.31:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB102_81
.LBB102_32:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB102_59
# %bb.33:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB102_89
# %bb.34:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB102_88
# %bb.35:
	bnez	$a0, .LBB102_90
# %bb.36:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB102_90
.LBB102_37:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit18
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB102_113
# %bb.38:
	move	$a0, $zero
	b	.LBB102_114
.LBB102_39:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB102_41
.LBB102_40:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB102_41:
	ld.wu	$a0, $fp, 0
	andi	$a2, $a0, 16
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a2, .LBB102_45
# %bb.42:
	bnez	$a1, .LBB102_48
# %bb.43:
	bnez	$a0, .LBB102_52
# %bb.44:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_45:
	bnez	$a1, .LBB102_50
# %bb.46:
	bnez	$a0, .LBB102_53
# %bb.47:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_48:
	bnez	$a0, .LBB102_54
# %bb.49:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_50:
	bnez	$a0, .LBB102_55
# %bb.51:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_52:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_53:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_54:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_55:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_56:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB102_62
.LBB102_57:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB102_72
.LBB102_58:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB102_81
.LBB102_59:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB102_90
.LBB102_60:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB102_62
.LBB102_61:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB102_62:
	ld.d	$s1, $fp, 256
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	st.d	$s1, $sp, 16
	st.d	$a0, $sp, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB102_116
# %bb.63:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB102_68
# %bb.64:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB102_98
# %bb.65:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB102_97
# %bb.66:
	bnez	$a0, .LBB102_99
# %bb.67:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB102_99
.LBB102_68:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB102_99
.LBB102_69:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB102_72
.LBB102_70:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB102_81
.LBB102_71:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB102_72:
	ld.d	$s1, $fp, 280
	ld.d	$s0, $fp, 256
	beqz	$s1, .LBB102_77
# %bb.73:                               # %.lr.ph.i
	ld.d	$s2, $fp, 272
	move	$a0, $zero
	.p2align	4, , 16
.LBB102_74:                             # =>This Inner Loop Header: Depth=1
	addi.w	$a0, $a0, 0
	slli.d	$a1, $a0, 3
	alsl.d	$a2, $a0, $a1, 1
	alsl.w	$a0, $a0, $a1, 1
	bne	$a0, $a2, .LBB102_115
# %bb.75:                               #   in Loop: Header=BB102_74 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	addi.w	$s3, $a2, 0
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a0, $s3, $a0
	addi.w	$a1, $a0, 0
	bne	$a1, $a0, .LBB102_115
# %bb.76:                               #   in Loop: Header=BB102_74 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB102_74
	b	.LBB102_78
.LBB102_77:
	move	$a1, $zero
.LBB102_78:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 16
	st.d	$a0, $sp, 24
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	bne	$a1, $a2, .LBB102_110
# %bb.79:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_80:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB102_81:
	ld.d	$s1, $fp, 256
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	st.d	$s1, $sp, 16
	st.d	$a0, $sp, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB102_116
# %bb.82:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB102_87
# %bb.83:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB102_105
# %bb.84:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB102_104
# %bb.85:
	bnez	$a0, .LBB102_106
# %bb.86:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB102_106
.LBB102_87:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB102_106
.LBB102_88:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB102_90
.LBB102_89:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB102_90:
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a1, .LBB102_93
# %bb.91:
	bnez	$a0, .LBB102_95
# %bb.92:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_93:
	bnez	$a0, .LBB102_96
# %bb.94:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_95:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_96:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB102_113
.LBB102_97:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB102_99
.LBB102_98:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB102_99:
	ld.d	$a2, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a2, $a0, .LBB102_101
# %bb.100:
	ld.d	$s3, $a2, -16
	ld.d	$s0, $a2, -8
	ld.d	$a1, $fp, 368
	addi.d	$a0, $a2, -24
	b	.LBB102_102
.LBB102_101:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s3, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB102_102:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	st.d	$a0, $fp, 352
	ld.d	$a2, $s1, 56
	slli.d	$a3, $s2, 5
	alsl.d	$a3, $s2, $a3, 4
	add.d	$a2, $a2, $a3
	st.d	$s3, $a2, 8
	addi.d	$a1, $a1, -24
	st.d	$s0, $sp, 32
	beq	$a0, $a1, .LBB102_112
# %bb.103:
	ld.d	$a1, $sp, 32
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 16
	vst	$vr0, $a0, 0
	b	.LBB102_111
.LBB102_104:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB102_106
.LBB102_105:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB102_106:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB102_108
# %bb.107:
	ld.d	$s3, $a1, -16
	ld.d	$s0, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB102_109
.LBB102_108:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s3, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB102_109:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit28
	st.d	$a0, $fp, 352
	ld.d	$a0, $s1, 56
	ori	$s4, $zero, 48
	mul.d	$a1, $s2, $s4
	add.d	$a0, $a0, $a1
	st.d	$s3, $a0, 8
	ld.d	$a0, $fp, 256
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 56
	mul.d	$a2, $s0, $s4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	beq	$a1, $a2, .LBB102_112
.LBB102_110:
	ld.d	$a0, $sp, 32
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 16
	vst	$vr0, $a1, 0
.LBB102_111:
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB102_113
.LBB102_112:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB102_113:
	ori	$a0, $zero, 1
.LBB102_114:
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB102_115:
	pcalau12i	$a0, %pc_hi20(.L.str.83)
	addi.d	$a1, $a0, %pc_lo12(.L.str.83)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB102_116:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit17
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end102:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv, .Lfunc_end102-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,comdat
	.p2align	2, 0x0
.LJTI102_0:
	.word	.LBB102_12-.LJTI102_0
	.word	.LBB102_27-.LJTI102_0
	.word	.LBB102_22-.LJTI102_0
	.word	.LBB102_37-.LJTI102_0
	.word	.LBB102_37-.LJTI102_0
	.word	.LBB102_37-.LJTI102_0
	.word	.LBB102_37-.LJTI102_0
	.word	.LBB102_37-.LJTI102_0
	.word	.LBB102_37-.LJTI102_0
	.word	.LBB102_37-.LJTI102_0
	.word	.LBB102_32-.LJTI102_0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	st.d	$s7, $sp, 192                   # 8-byte Folded Spill
	st.d	$s8, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	addi.d	$a1, $a0, -12
	ori	$a2, $zero, 9
	move	$a0, $zero
	bltu	$a2, $a1, .LBB103_168
# %bb.1:
	ld.wu	$a2, $fp, 0
	slli.d	$a1, $a1, 2
	pcalau12i	$a3, %pc_hi20(.LJTI103_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI103_0)
	ldx.w	$a1, $a3, $a1
	andi	$s5, $a2, 16
	add.d	$a1, $a3, $a1
	addi.d	$s8, $fp, 8
	jr	$a1
.LBB103_2:
	addi.d	$s3, $fp, 208
	addi.d	$s4, $fp, 272
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_23
# %bb.3:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_38
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_36
# %bb.5:
	bnez	$a0, .LBB103_39
# %bb.6:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_39
.LBB103_7:
	addi.d	$s2, $fp, 208
	addi.d	$s3, $fp, 272
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_22
# %bb.8:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_27
# %bb.9:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_26
# %bb.10:
	bnez	$a0, .LBB103_28
# %bb.11:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_28
.LBB103_12:
	addi.d	$s2, $fp, 208
	addi.d	$s3, $fp, 272
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_24
# %bb.13:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_47
# %bb.14:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_37
# %bb.15:
	bnez	$a0, .LBB103_48
# %bb.16:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_48
.LBB103_17:
	addi.d	$s2, $fp, 208
	addi.d	$s3, $fp, 272
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_25
# %bb.18:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_57
# %bb.19:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_56
# %bb.20:
	bnez	$a0, .LBB103_58
# %bb.21:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_58
.LBB103_22:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_28
.LBB103_23:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_39
.LBB103_24:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_48
.LBB103_25:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_58
.LBB103_26:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_28
.LBB103_27:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_28:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB103_170
# %bb.29:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s1, $a1, $a0
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB103_96
# %bb.30:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_35
# %bb.31:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_95
# %bb.32:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_94
# %bb.33:
	bnez	$a0, .LBB103_96
# %bb.34:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_96
.LBB103_35:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_96
.LBB103_36:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_39
.LBB103_37:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_48
.LBB103_38:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_39:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB103_170
# %bb.40:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 26
	bne	$a0, $a1, .LBB103_171
# %bb.41:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_46
# %bb.42:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_69
# %bb.43:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_66
# %bb.44:
	bnez	$a0, .LBB103_67
# %bb.45:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB103_68
	b	.LBB103_70
.LBB103_46:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB103_68
	b	.LBB103_70
.LBB103_47:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_48:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB103_170
# %bb.49:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s1, $a1, $a0
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB103_102
# %bb.50:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_55
# %bb.51:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_101
# %bb.52:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_100
# %bb.53:
	bnez	$a0, .LBB103_102
# %bb.54:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_102
.LBB103_55:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_102
.LBB103_56:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_58
.LBB103_57:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_58:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB103_170
# %bb.59:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s1, $a1, $a0
	ori	$a0, $zero, 1
	bne	$s1, $a0, .LBB103_109
# %bb.60:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_65
# %bb.61:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_108
# %bb.62:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_107
# %bb.63:
	bnez	$a0, .LBB103_109
# %bb.64:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_109
.LBB103_65:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_109
.LBB103_66:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB103_67:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB103_70
.LBB103_68:
	ld.d	$a0, $a1, -8
	st.d	$a0, $sp, 176
	vld	$vr0, $a1, -24
	addi.d	$a0, $a1, -24
	vst	$vr0, $sp, 160
	b	.LBB103_71
.LBB103_69:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB103_68
.LBB103_70:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$a2, $a1, 480
	vld	$vr0, $a1, 488
	st.d	$a2, $sp, 160
	vst	$vr0, $sp, 168
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB103_71:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit40
	ld.d	$s1, $fp, 256
	st.d	$a0, $fp, 352
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$s6, $fp, 280
	move	$s2, $a0
	st.d	$s1, $sp, 136
	st.d	$a0, $sp, 144
	st.d	$a0, $sp, 152
	beqz	$s6, .LBB103_76
# %bb.72:                               # %.lr.ph.i
	ld.d	$s0, $fp, 272
	move	$s7, $zero
	.p2align	4, , 16
.LBB103_73:                             # =>This Inner Loop Header: Depth=1
	addi.w	$a0, $s7, 0
	slli.d	$a1, $a0, 3
	alsl.d	$a2, $a0, $a1, 1
	alsl.w	$a0, $a0, $a1, 1
	bne	$a0, $a2, .LBB103_169
# %bb.74:                               #   in Loop: Header=BB103_73 Depth=1
	ld.b	$a1, $s0, 0
	ld.d	$a0, $fp, 384
	addi.w	$s7, $a2, 0
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$s7, $s7, $a0
	addi.w	$a0, $s7, 0
	bne	$a0, $s7, .LBB103_169
# %bb.75:                               #   in Loop: Header=BB103_73 Depth=1
	addi.d	$s6, $s6, -1
	addi.d	$s0, $s0, 1
	bnez	$s6, .LBB103_73
	b	.LBB103_77
.LBB103_76:
	move	$s7, $zero
.LBB103_77:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 25
	addi.w	$s6, $s7, 0
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	st.d	$s4, $sp, 16                    # 8-byte Folded Spill
	bne	$a1, $a0, .LBB103_83
# %bb.78:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_172
# %bb.79:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_91
# %bb.80:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_84
# %bb.81:
	bnez	$a0, .LBB103_85
# %bb.82:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 26
	beq	$a1, $a0, .LBB103_86
	b	.LBB103_92
.LBB103_83:
	move	$s4, $s3
	move	$s8, $zero
	move	$s3, $zero
	b	.LBB103_118
.LBB103_84:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB103_85:
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 26
	bne	$a1, $a0, .LBB103_92
.LBB103_86:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_93
# %bb.87:
	ld.w	$a0, $fp, 144
	move	$s4, $s3
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_116
# %bb.88:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_115
# %bb.89:
	bnez	$a0, .LBB103_117
# %bb.90:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_117
.LBB103_91:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 26
	beq	$a1, $a0, .LBB103_86
.LBB103_92:
	move	$s4, $s3
	move	$s8, $zero
	ori	$s3, $zero, 1
	b	.LBB103_118
.LBB103_93:
	move	$s4, $s3
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_117
.LBB103_94:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_96
.LBB103_95:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_96:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEvENKUlvE_clEv.exit
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB103_98
# %bb.97:
	ld.d	$s3, $a1, -24
	ld.d	$s0, $a1, -16
	ld.d	$s4, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB103_99
.LBB103_98:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s3, $a1, 480
	ld.d	$s0, $a1, 488
	ld.d	$s4, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB103_99:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	ld.d	$s2, $fp, 256
	st.d	$a0, $fp, 352
	addi.w	$a1, $zero, -1
	move	$a0, $s2
	move	$a2, $s0
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	st.d	$s2, $sp, 56
	st.d	$a0, $sp, 64
	ld.d	$a1, $s3, 56
	st.d	$a0, $sp, 72
	slli.d	$a2, $s4, 5
	alsl.d	$a2, $s4, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a1, $fp, 368
	ld.d	$a0, $fp, 352
	addi.d	$a1, $a1, -24
	bne	$a0, $a1, .LBB103_106
	b	.LBB103_114
.LBB103_100:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_102
.LBB103_101:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_102:                            # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEvENKUlvE_clEv.exit32
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB103_104
# %bb.103:
	ld.d	$s4, $a1, -24
	ld.d	$s0, $a1, -16
	ld.d	$s5, $a1, -8
	addi.d	$a1, $a1, -24
	b	.LBB103_105
.LBB103_104:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s4, $a1, 480
	ld.d	$s0, $a1, 488
	ld.d	$s5, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a1, $a0, 480
.LBB103_105:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit34
	ld.d	$a0, $fp, 256
	st.d	$a1, $fp, 352
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$s2, $fp, 256
	move	$s3, $a0
	addi.w	$a1, $zero, -1
	move	$a0, $s2
	move	$a2, $s0
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	st.d	$s2, $sp, 56
	ld.d	$a1, $s4, 56
	st.d	$a0, $sp, 64
	ori	$a2, $zero, 48
	mul.d	$a3, $s5, $a2
	add.d	$a1, $a1, $a3
	st.d	$s3, $a1, 8
	ld.d	$a1, $s2, 56
	mul.d	$a0, $a0, $a2
	add.d	$a0, $a1, $a0
	st.d	$s3, $a0, 8
	ld.d	$a1, $fp, 368
	ld.d	$a0, $fp, 352
	addi.d	$a1, $a1, -24
	st.d	$s3, $sp, 72
	beq	$a0, $a1, .LBB103_114
.LBB103_106:
	ld.d	$a1, $sp, 72
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 56
	b	.LBB103_163
.LBB103_107:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_109
.LBB103_108:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_109:                            # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEvENKUlvE_clEv.exit26
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB103_111
# %bb.110:
	ld.d	$a0, $a1, -8
	st.d	$a0, $sp, 72
	vld	$vr0, $a1, -24
	addi.d	$a1, $a1, -24
	vst	$vr0, $sp, 56
	b	.LBB103_112
.LBB103_111:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$a2, $a1, 480
	vld	$vr0, $a1, 488
	st.d	$a2, $sp, 56
	vst	$vr0, $sp, 64
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a1, $a0, 480
.LBB103_112:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit28
	ld.d	$a0, $fp, 256
	ld.d	$a2, $sp, 64
	st.d	$a1, $fp, 352
	addi.w	$a1, $zero, -1
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	ld.d	$a2, $sp, 72
	ld.d	$a1, $a1, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 72
	beq	$a1, $a2, .LBB103_114
# %bb.113:
	ld.d	$a0, $sp, 72
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a1, 0
	b	.LBB103_164
.LBB103_114:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 56
	b	.LBB103_166
.LBB103_115:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_117
.LBB103_116:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_117:
	ori	$a1, $zero, 10
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi)
	jirl	$ra, $ra, 0
	ld.w	$a1, $fp, 152
	move	$s3, $zero
	sub.d	$s8, $a0, $s6
.LBB103_118:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit41
	ori	$a0, $zero, 13
	bne	$a1, $a0, .LBB103_173
# %bb.119:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_124
# %bb.120:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_126
# %bb.121:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_125
# %bb.122:
	bnez	$a0, .LBB103_127
# %bb.123:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_127
.LBB103_124:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_127
.LBB103_125:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_127
.LBB103_126:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_127:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s5, $a1, $a0
	ori	$s0, $zero, 1
	bne	$s5, $s0, .LBB103_136
# %bb.128:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB103_133
# %bb.129:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB103_135
# %bb.130:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB103_134
# %bb.131:
	bnez	$a0, .LBB103_136
# %bb.132:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB103_136
.LBB103_133:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB103_136
.LBB103_134:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB103_136
.LBB103_135:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB103_136:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit44
	addi.w	$a0, $s7, 0
	blt	$a0, $s0, .LBB103_138
	.p2align	4, , 16
.LBB103_137:                            # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 56
	ld.d	$a1, $sp, 64
	slli.d	$a2, $s2, 5
	alsl.d	$a2, $s2, $a2, 4
	add.d	$a0, $a0, $a2
	st.d	$a1, $a0, 8
	ld.d	$s2, $sp, 72
	addi.d	$s6, $s6, -1
	bnez	$s6, .LBB103_137
.LBB103_138:                            # %._crit_edge
	beqz	$s3, .LBB103_140
# %bb.139:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 256
	ld.d	$a2, $sp, 64
	addi.w	$a1, $zero, -1
	move	$a3, $s5
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	ld.d	$a2, $sp, 72
	ld.d	$a1, $a1, 56
	ori	$a3, $zero, 48
	mul.d	$a2, $a2, $a3
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a1, $s1, 56
	mul.d	$a2, $s2, $a3
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	st.d	$a0, $sp, 152
	b	.LBB103_161
.LBB103_140:
	addi.w	$a0, $zero, -1
	bge	$a0, $s8, .LBB103_171
# %bb.141:
	ld.d	$a0, $fp, 256
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	addi.d	$a0, $sp, 56
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	bnez	$s8, .LBB103_147
# %bb.142:                              # %.._crit_edge96_crit_edge
	ld.d	$a0, $s1, 56
	move	$a1, $s2
.LBB103_143:                            # %._crit_edge96
	alsl.d	$a1, $a1, $a1, 1
	slli.d	$a1, $a1, 4
	add.d	$a0, $a0, $a1
	st.d	$s0, $a0, 8
	ld.d	$a2, $sp, 104
	ld.d	$a1, $sp, 72
	st.d	$s0, $sp, 152
	beq	$a2, $a1, .LBB103_155
# %bb.144:                              # %.lr.ph98
	ld.d	$a0, $sp, 112
	b	.LBB103_153
	.p2align	4, , 16
.LBB103_145:                            #   in Loop: Header=BB103_147 Depth=1
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $sp, 104
.LBB103_146:                            # %_ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit
                                        #   in Loop: Header=BB103_147 Depth=1
	ld.d	$a2, $sp, 24
	ld.d	$a0, $s1, 56
	ld.d	$a1, $sp, 48
	slli.d	$a3, $s2, 5
	alsl.d	$a3, $s2, $a3, 4
	add.d	$a3, $a0, $a3
	addi.d	$s8, $s8, -1
	st.d	$a2, $a3, 8
	move	$s2, $a1
	beqz	$s8, .LBB103_143
.LBB103_147:                            # =>This Inner Loop Header: Depth=1
.Ltmp1036:                              # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv)
	jirl	$ra, $ra, 0
.Ltmp1037:                              # EH_LABEL
# %bb.148:                              #   in Loop: Header=BB103_147 Depth=1
	ld.d	$a0, $fp, 256
	ld.d	$a1, $sp, 40
.Ltmp1039:                              # EH_LABEL
	move	$a2, $s0
	move	$a3, $s5
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
.Ltmp1040:                              # EH_LABEL
# %bb.149:                              #   in Loop: Header=BB103_147 Depth=1
	ld.d	$a2, $sp, 120
	ld.d	$a1, $sp, 104
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 24
	bne	$a1, $a2, .LBB103_145
# %bb.150:                              #   in Loop: Header=BB103_147 Depth=1
.Ltmp1041:                              # EH_LABEL
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1042:                              # EH_LABEL
	b	.LBB103_146
	.p2align	4, , 16
.LBB103_151:                            #   in Loop: Header=BB103_153 Depth=1
	ld.d	$a1, $sp, 128
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	ld.d	$a2, $a3, 56
	slli.d	$a3, $a1, 5
	alsl.d	$a1, $a1, $a3, 4
	add.d	$s0, $a2, $a1
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, -8
	st.d	$a1, $sp, 128
	ld.d	$a0, $a0, -8
	st.d	$a0, $sp, 112
	ld.d	$a1, $sp, 72
	addi.d	$a2, $a0, 512
	st.d	$a2, $sp, 120
	addi.d	$a2, $a0, 504
.LBB103_152:                            # %_ZNSt5stackIlSt5dequeIlSaIlEEE3popEv.exit
                                        #   in Loop: Header=BB103_153 Depth=1
	st.d	$a2, $sp, 104
	ld.d	$a3, $s0, 16
	ld.d	$a4, $s0, 8
	st.d	$a3, $s0, 8
	st.d	$a4, $s0, 16
	beq	$a2, $a1, .LBB103_155
.LBB103_153:                            # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $fp, 256
	beq	$a2, $a0, .LBB103_151
# %bb.154:                              #   in Loop: Header=BB103_153 Depth=1
	ld.d	$a4, $a2, -8
	ld.d	$a3, $a3, 56
	addi.d	$a2, $a2, -8
	slli.d	$a5, $a4, 5
	alsl.d	$a4, $a4, $a5, 4
	add.d	$s0, $a3, $a4
	b	.LBB103_152
.LBB103_155:                            # %._crit_edge99
	ld.d	$a0, $sp, 56
	beqz	$a0, .LBB103_161
# %bb.156:
	ld.d	$s0, $sp, 128
	ld.d	$a1, $sp, 96
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB103_160
# %bb.157:                              # %.lr.ph.i.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB103_158:                            # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB103_158
# %bb.159:                              # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.loopexit.i.i.i
	ld.d	$a0, $sp, 56
.LBB103_160:                            # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i.i.i
	ld.d	$a1, $sp, 64
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB103_161:
	ld.d	$a1, $fp, 368
	ld.d	$a0, $fp, 352
	addi.d	$a1, $a1, -24
	beq	$a0, $a1, .LBB103_165
# %bb.162:
	ld.d	$a1, $sp, 152
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 136
.LBB103_163:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit37
	vst	$vr0, $a0, 0
.LBB103_164:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit37
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB103_167
.LBB103_165:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 136
.LBB103_166:                            # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushERKS5_.exit48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB103_167:                            # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushERKS5_.exit48
	ori	$a0, $zero, 1
.LBB103_168:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit37
	ld.d	$s8, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB103_169:
	pcalau12i	$a0, %pc_hi20(.L.str.83)
	addi.d	$a1, $a0, %pc_lo12(.L.str.83)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB103_170:
	ori	$a0, $zero, 10
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB103_171:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit38
	ori	$a0, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB103_172:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit41.thread
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
.LBB103_173:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit43
	ori	$a0, $zero, 6
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB103_174:
.Ltmp1038:                              # EH_LABEL
	b	.LBB103_176
.LBB103_175:
.Ltmp1043:                              # EH_LABEL
.LBB103_176:
	move	$fp, $a0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end103:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv, .Lfunc_end103-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,comdat
	.p2align	2, 0x0
.LJTI103_0:
	.word	.LBB103_2-.LJTI103_0
	.word	.LBB103_168-.LJTI103_0
	.word	.LBB103_168-.LJTI103_0
	.word	.LBB103_168-.LJTI103_0
	.word	.LBB103_168-.LJTI103_0
	.word	.LBB103_168-.LJTI103_0
	.word	.LBB103_12-.LJTI103_0
	.word	.LBB103_168-.LJTI103_0
	.word	.LBB103_7-.LJTI103_0
	.word	.LBB103_17-.LJTI103_0
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,comdat
	.p2align	2, 0x0
GCC_except_table103:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Lfunc_begin43-.Lfunc_begin43  # >> Call Site 1 <<
	.uleb128 .Ltmp1036-.Lfunc_begin43       #   Call between .Lfunc_begin43 and .Ltmp1036
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1036-.Lfunc_begin43       # >> Call Site 2 <<
	.uleb128 .Ltmp1037-.Ltmp1036            #   Call between .Ltmp1036 and .Ltmp1037
	.uleb128 .Ltmp1038-.Lfunc_begin43       #     jumps to .Ltmp1038
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1039-.Lfunc_begin43       # >> Call Site 3 <<
	.uleb128 .Ltmp1042-.Ltmp1039            #   Call between .Ltmp1039 and .Ltmp1042
	.uleb128 .Ltmp1043-.Lfunc_begin43       #     jumps to .Ltmp1043
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1042-.Lfunc_begin43       # >> Call Site 4 <<
	.uleb128 .Lfunc_end103-.Ltmp1042        #   Call between .Ltmp1042 and .Lfunc_end103
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 4
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB104_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 8
	xvst	$xr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB104_4
.LBB104_2:
.Ltmp1044:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1045:                              # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB104_4:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB104_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB104_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB104_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp1046:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1047:                              # EH_LABEL
.LBB104_8:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB104_9:
.Ltmp1049:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1050:                              # EH_LABEL
# %bb.10:                               # %.noexc2
.LBB104_11:
.Ltmp1048:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB104_12:
.Ltmp1051:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end104:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv, .Lfunc_end104-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,comdat
	.p2align	2, 0x0
GCC_except_table104:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Ltmp1044-.Lfunc_begin44       # >> Call Site 1 <<
	.uleb128 .Ltmp1045-.Ltmp1044            #   Call between .Ltmp1044 and .Ltmp1045
	.uleb128 .Ltmp1051-.Lfunc_begin44       #     jumps to .Ltmp1051
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1046-.Lfunc_begin44       # >> Call Site 2 <<
	.uleb128 .Ltmp1047-.Ltmp1046            #   Call between .Ltmp1046 and .Ltmp1047
	.uleb128 .Ltmp1048-.Lfunc_begin44       #     jumps to .Ltmp1048
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1049-.Lfunc_begin44       # >> Call Site 3 <<
	.uleb128 .Ltmp1050-.Ltmp1049            #   Call between .Ltmp1049 and .Ltmp1050
	.uleb128 .Ltmp1051-.Lfunc_begin44       #     jumps to .Ltmp1051
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1050-.Lfunc_begin44       # >> Call Site 4 <<
	.uleb128 .Lfunc_end104-.Ltmp1050        #   Call between .Ltmp1050 and .Lfunc_end104
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 5
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB105_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 8
	xvst	$xr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB105_4
.LBB105_2:
.Ltmp1052:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1053:                              # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB105_4:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB105_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB105_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB105_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp1054:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1055:                              # EH_LABEL
.LBB105_8:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB105_9:
.Ltmp1057:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1058:                              # EH_LABEL
# %bb.10:                               # %.noexc2
.LBB105_11:
.Ltmp1056:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB105_12:
.Ltmp1059:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end105:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv, .Lfunc_end105-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,comdat
	.p2align	2, 0x0
GCC_except_table105:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Ltmp1052-.Lfunc_begin45       # >> Call Site 1 <<
	.uleb128 .Ltmp1053-.Ltmp1052            #   Call between .Ltmp1052 and .Ltmp1053
	.uleb128 .Ltmp1059-.Lfunc_begin45       #     jumps to .Ltmp1059
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1054-.Lfunc_begin45       # >> Call Site 2 <<
	.uleb128 .Ltmp1055-.Ltmp1054            #   Call between .Ltmp1054 and .Ltmp1055
	.uleb128 .Ltmp1056-.Lfunc_begin45       #     jumps to .Ltmp1056
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1057-.Lfunc_begin45       # >> Call Site 3 <<
	.uleb128 .Ltmp1058-.Ltmp1057            #   Call between .Ltmp1057 and .Ltmp1058
	.uleb128 .Ltmp1059-.Lfunc_begin45       #     jumps to .Ltmp1059
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1058-.Lfunc_begin45       # >> Call Site 4 <<
	.uleb128 .Lfunc_end105-.Ltmp1058        #   Call between .Ltmp1058 and .Lfunc_end105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	addi.w	$a2, $zero, -1
	st.d	$a2, $sp, 64
	st.b	$a1, $sp, 80
	vld	$vr0, $sp, 88
	move	$fp, $a0
	ori	$a0, $zero, 6
	st.w	$a0, $sp, 56
	vst	$vr0, $sp, 40
	ld.d	$a1, $sp, 56
	vld	$vr0, $sp, 72
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a2, $sp, 16
	st.d	$a1, $sp, 8
	vst	$vr0, $sp, 24
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB106_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 56
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB106_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB106_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB106_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB106_7
.LBB106_5:
.Ltmp1060:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1061:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB106_7:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB106_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB106_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB106_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp1062:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1063:                              # EH_LABEL
.LBB106_11:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB106_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB106_14
# %bb.13:
	addi.d	$a0, $sp, 72
.Ltmp1065:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1066:                              # EH_LABEL
.LBB106_14:                             # %_ZNSt8__detail6_StateIcED2Ev.exit5
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB106_15:
.Ltmp1068:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1069:                              # EH_LABEL
# %bb.16:                               # %.noexc3
.LBB106_17:
.Ltmp1067:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB106_18:
.Ltmp1064:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB106_19:
.Ltmp1070:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end106:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb, .Lfunc_end106-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,comdat
	.p2align	2, 0x0
GCC_except_table106:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Ltmp1060-.Lfunc_begin46       # >> Call Site 1 <<
	.uleb128 .Ltmp1061-.Ltmp1060            #   Call between .Ltmp1060 and .Ltmp1061
	.uleb128 .Ltmp1070-.Lfunc_begin46       #     jumps to .Ltmp1070
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1062-.Lfunc_begin46       # >> Call Site 2 <<
	.uleb128 .Ltmp1063-.Ltmp1062            #   Call between .Ltmp1062 and .Ltmp1063
	.uleb128 .Ltmp1064-.Lfunc_begin46       #     jumps to .Ltmp1064
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1065-.Lfunc_begin46       # >> Call Site 3 <<
	.uleb128 .Ltmp1066-.Ltmp1065            #   Call between .Ltmp1065 and .Ltmp1066
	.uleb128 .Ltmp1067-.Lfunc_begin46       #     jumps to .Ltmp1067
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1068-.Lfunc_begin46       # >> Call Site 4 <<
	.uleb128 .Ltmp1069-.Ltmp1068            #   Call between .Ltmp1068 and .Ltmp1069
	.uleb128 .Ltmp1070-.Lfunc_begin46       #     jumps to .Ltmp1070
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1069-.Lfunc_begin46       # >> Call Site 5 <<
	.uleb128 .Lfunc_end106-.Ltmp1069        #   Call between .Ltmp1069 and .Lfunc_end106
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	addi.w	$a3, $zero, -1
	st.d	$a3, $sp, 64
	st.d	$a1, $sp, 72
	st.b	$a2, $sp, 80
	vld	$vr0, $sp, 88
	move	$fp, $a0
	ori	$a0, $zero, 7
	st.w	$a0, $sp, 56
	vst	$vr0, $sp, 40
	ld.d	$a1, $sp, 56
	vld	$vr0, $sp, 72
	ld.d	$a0, $fp, 64
	ld.d	$a2, $fp, 72
	st.d	$a3, $sp, 16
	st.d	$a1, $sp, 8
	vst	$vr0, $sp, 24
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB107_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 56
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB107_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB107_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB107_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB107_7
.LBB107_5:
.Ltmp1071:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1072:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB107_7:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB107_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB107_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB107_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp1073:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1074:                              # EH_LABEL
.LBB107_11:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB107_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB107_14
# %bb.13:
.Ltmp1076:                              # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1077:                              # EH_LABEL
.LBB107_14:                             # %_ZNSt8__detail6_StateIcED2Ev.exit6
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB107_15:
.Ltmp1079:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1080:                              # EH_LABEL
# %bb.16:                               # %.noexc4
.LBB107_17:
.Ltmp1078:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB107_18:
.Ltmp1075:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB107_19:
.Ltmp1081:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end107:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb, .Lfunc_end107-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,comdat
	.p2align	2, 0x0
GCC_except_table107:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Ltmp1071-.Lfunc_begin47       # >> Call Site 1 <<
	.uleb128 .Ltmp1072-.Ltmp1071            #   Call between .Ltmp1071 and .Ltmp1072
	.uleb128 .Ltmp1081-.Lfunc_begin47       #     jumps to .Ltmp1081
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1073-.Lfunc_begin47       # >> Call Site 2 <<
	.uleb128 .Ltmp1074-.Ltmp1073            #   Call between .Ltmp1073 and .Ltmp1074
	.uleb128 .Ltmp1075-.Lfunc_begin47       #     jumps to .Ltmp1075
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1076-.Lfunc_begin47       # >> Call Site 3 <<
	.uleb128 .Ltmp1077-.Ltmp1076            #   Call between .Ltmp1076 and .Ltmp1077
	.uleb128 .Ltmp1078-.Lfunc_begin47       #     jumps to .Ltmp1078
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1079-.Lfunc_begin47       # >> Call Site 4 <<
	.uleb128 .Ltmp1080-.Ltmp1079            #   Call between .Ltmp1079 and .Ltmp1080
	.uleb128 .Ltmp1081-.Lfunc_begin47       #     jumps to .Ltmp1081
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1080-.Lfunc_begin47       # >> Call Site 5 <<
	.uleb128 .Lfunc_end107-.Ltmp1080        #   Call between .Ltmp1080 and .Lfunc_end107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$s0, $a0, 256
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1082:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1083:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB108_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB108_4
.LBB108_3:
	addi.d	$a0, $fp, 304
.Ltmp1084:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1085:                              # EH_LABEL
.LBB108_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB108_6
# %bb.5:
.Ltmp1090:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1091:                              # EH_LABEL
.LBB108_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB108_7:
.Ltmp1092:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB108_8:
.Ltmp1086:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB108_10
# %bb.9:
.Ltmp1087:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1088:                              # EH_LABEL
.LBB108_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB108_11:
.Ltmp1089:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end108:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv, .Lfunc_end108-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table108:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Ltmp1082-.Lfunc_begin48       # >> Call Site 1 <<
	.uleb128 .Ltmp1085-.Ltmp1082            #   Call between .Ltmp1082 and .Ltmp1085
	.uleb128 .Ltmp1086-.Lfunc_begin48       #     jumps to .Ltmp1086
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1090-.Lfunc_begin48       # >> Call Site 2 <<
	.uleb128 .Ltmp1091-.Ltmp1090            #   Call between .Ltmp1090 and .Ltmp1091
	.uleb128 .Ltmp1092-.Lfunc_begin48       #     jumps to .Ltmp1092
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1091-.Lfunc_begin48       # >> Call Site 3 <<
	.uleb128 .Ltmp1087-.Ltmp1091            #   Call between .Ltmp1091 and .Ltmp1087
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1087-.Lfunc_begin48       # >> Call Site 4 <<
	.uleb128 .Ltmp1088-.Ltmp1087            #   Call between .Ltmp1087 and .Ltmp1088
	.uleb128 .Ltmp1089-.Lfunc_begin48       #     jumps to .Ltmp1089
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1088-.Lfunc_begin48       # >> Call Site 5 <<
	.uleb128 .Lfunc_end108-.Ltmp1088        #   Call between .Ltmp1088 and .Lfunc_end108
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end48:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1093:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1094:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB109_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB109_4
.LBB109_3:
	addi.d	$a0, $fp, 304
.Ltmp1095:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1096:                              # EH_LABEL
.LBB109_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB109_6
# %bb.5:
.Ltmp1101:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1102:                              # EH_LABEL
.LBB109_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB109_7:
.Ltmp1103:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB109_8:
.Ltmp1097:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB109_10
# %bb.9:
.Ltmp1098:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1099:                              # EH_LABEL
.LBB109_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB109_11:
.Ltmp1100:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end109:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv, .Lfunc_end109-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table109:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Ltmp1093-.Lfunc_begin49       # >> Call Site 1 <<
	.uleb128 .Ltmp1096-.Ltmp1093            #   Call between .Ltmp1093 and .Ltmp1096
	.uleb128 .Ltmp1097-.Lfunc_begin49       #     jumps to .Ltmp1097
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1101-.Lfunc_begin49       # >> Call Site 2 <<
	.uleb128 .Ltmp1102-.Ltmp1101            #   Call between .Ltmp1101 and .Ltmp1102
	.uleb128 .Ltmp1103-.Lfunc_begin49       #     jumps to .Ltmp1103
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1102-.Lfunc_begin49       # >> Call Site 3 <<
	.uleb128 .Ltmp1098-.Ltmp1102            #   Call between .Ltmp1102 and .Ltmp1098
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1098-.Lfunc_begin49       # >> Call Site 4 <<
	.uleb128 .Ltmp1099-.Ltmp1098            #   Call between .Ltmp1098 and .Ltmp1099
	.uleb128 .Ltmp1100-.Lfunc_begin49       #     jumps to .Ltmp1100
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1099-.Lfunc_begin49       # >> Call Site 5 <<
	.uleb128 .Lfunc_end109-.Ltmp1099        #   Call between .Ltmp1099 and .Lfunc_end109
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end49:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1104:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1105:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB110_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB110_4
.LBB110_3:
	addi.d	$a0, $fp, 304
.Ltmp1106:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1107:                              # EH_LABEL
.LBB110_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB110_6
# %bb.5:
.Ltmp1112:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1113:                              # EH_LABEL
.LBB110_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB110_7:
.Ltmp1114:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB110_8:
.Ltmp1108:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB110_10
# %bb.9:
.Ltmp1109:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1110:                              # EH_LABEL
.LBB110_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB110_11:
.Ltmp1111:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end110:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv, .Lfunc_end110-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table110:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Ltmp1104-.Lfunc_begin50       # >> Call Site 1 <<
	.uleb128 .Ltmp1107-.Ltmp1104            #   Call between .Ltmp1104 and .Ltmp1107
	.uleb128 .Ltmp1108-.Lfunc_begin50       #     jumps to .Ltmp1108
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1112-.Lfunc_begin50       # >> Call Site 2 <<
	.uleb128 .Ltmp1113-.Ltmp1112            #   Call between .Ltmp1112 and .Ltmp1113
	.uleb128 .Ltmp1114-.Lfunc_begin50       #     jumps to .Ltmp1114
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1113-.Lfunc_begin50       # >> Call Site 3 <<
	.uleb128 .Ltmp1109-.Ltmp1113            #   Call between .Ltmp1113 and .Ltmp1109
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1109-.Lfunc_begin50       # >> Call Site 4 <<
	.uleb128 .Ltmp1110-.Ltmp1109            #   Call between .Ltmp1109 and .Ltmp1110
	.uleb128 .Ltmp1111-.Lfunc_begin50       #     jumps to .Ltmp1111
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1110-.Lfunc_begin50       # >> Call Site 5 <<
	.uleb128 .Lfunc_end110-.Ltmp1110        #   Call between .Ltmp1110 and .Lfunc_end110
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1115:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1116:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB111_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB111_4
.LBB111_3:
	addi.d	$a0, $fp, 304
.Ltmp1117:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1118:                              # EH_LABEL
.LBB111_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB111_6
# %bb.5:
.Ltmp1123:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1124:                              # EH_LABEL
.LBB111_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB111_7:
.Ltmp1125:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB111_8:
.Ltmp1119:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB111_10
# %bb.9:
.Ltmp1120:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1121:                              # EH_LABEL
.LBB111_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB111_11:
.Ltmp1122:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end111:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv, .Lfunc_end111-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table111:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase26-.Lttbaseref26
.Lttbaseref26:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Ltmp1115-.Lfunc_begin51       # >> Call Site 1 <<
	.uleb128 .Ltmp1118-.Ltmp1115            #   Call between .Ltmp1115 and .Ltmp1118
	.uleb128 .Ltmp1119-.Lfunc_begin51       #     jumps to .Ltmp1119
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1123-.Lfunc_begin51       # >> Call Site 2 <<
	.uleb128 .Ltmp1124-.Ltmp1123            #   Call between .Ltmp1123 and .Ltmp1124
	.uleb128 .Ltmp1125-.Lfunc_begin51       #     jumps to .Ltmp1125
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1124-.Lfunc_begin51       # >> Call Site 3 <<
	.uleb128 .Ltmp1120-.Ltmp1124            #   Call between .Ltmp1124 and .Ltmp1120
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1120-.Lfunc_begin51       # >> Call Site 4 <<
	.uleb128 .Ltmp1121-.Ltmp1120            #   Call between .Ltmp1120 and .Ltmp1121
	.uleb128 .Ltmp1122-.Lfunc_begin51       #     jumps to .Ltmp1122
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1121-.Lfunc_begin51       # >> Call Site 5 <<
	.uleb128 .Lfunc_end111-.Ltmp1121        #   Call between .Ltmp1121 and .Lfunc_end111
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$s0, $a0, 256
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1126:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1127:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB112_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB112_4
.LBB112_3:
	addi.d	$a0, $fp, 304
.Ltmp1128:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1129:                              # EH_LABEL
.LBB112_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB112_6
# %bb.5:
.Ltmp1134:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1135:                              # EH_LABEL
.LBB112_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB112_7:
.Ltmp1136:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB112_8:
.Ltmp1130:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB112_10
# %bb.9:
.Ltmp1131:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1132:                              # EH_LABEL
.LBB112_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB112_11:
.Ltmp1133:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end112:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv, .Lfunc_end112-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table112:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase27-.Lttbaseref27
.Lttbaseref27:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Ltmp1126-.Lfunc_begin52       # >> Call Site 1 <<
	.uleb128 .Ltmp1129-.Ltmp1126            #   Call between .Ltmp1126 and .Ltmp1129
	.uleb128 .Ltmp1130-.Lfunc_begin52       #     jumps to .Ltmp1130
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1134-.Lfunc_begin52       # >> Call Site 2 <<
	.uleb128 .Ltmp1135-.Ltmp1134            #   Call between .Ltmp1134 and .Ltmp1135
	.uleb128 .Ltmp1136-.Lfunc_begin52       #     jumps to .Ltmp1136
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1135-.Lfunc_begin52       # >> Call Site 3 <<
	.uleb128 .Ltmp1131-.Ltmp1135            #   Call between .Ltmp1135 and .Ltmp1131
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1131-.Lfunc_begin52       # >> Call Site 4 <<
	.uleb128 .Ltmp1132-.Ltmp1131            #   Call between .Ltmp1131 and .Ltmp1132
	.uleb128 .Ltmp1133-.Lfunc_begin52       #     jumps to .Ltmp1133
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1132-.Lfunc_begin52       # >> Call Site 5 <<
	.uleb128 .Lfunc_end112-.Ltmp1132        #   Call between .Ltmp1132 and .Lfunc_end112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase27:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1137:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1138:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB113_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB113_4
.LBB113_3:
	addi.d	$a0, $fp, 304
.Ltmp1139:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1140:                              # EH_LABEL
.LBB113_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB113_6
# %bb.5:
.Ltmp1145:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1146:                              # EH_LABEL
.LBB113_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB113_7:
.Ltmp1147:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB113_8:
.Ltmp1141:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB113_10
# %bb.9:
.Ltmp1142:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1143:                              # EH_LABEL
.LBB113_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB113_11:
.Ltmp1144:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end113:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv, .Lfunc_end113-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table113:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase28-.Lttbaseref28
.Lttbaseref28:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Ltmp1137-.Lfunc_begin53       # >> Call Site 1 <<
	.uleb128 .Ltmp1140-.Ltmp1137            #   Call between .Ltmp1137 and .Ltmp1140
	.uleb128 .Ltmp1141-.Lfunc_begin53       #     jumps to .Ltmp1141
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1145-.Lfunc_begin53       # >> Call Site 2 <<
	.uleb128 .Ltmp1146-.Ltmp1145            #   Call between .Ltmp1145 and .Ltmp1146
	.uleb128 .Ltmp1147-.Lfunc_begin53       #     jumps to .Ltmp1147
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1146-.Lfunc_begin53       # >> Call Site 3 <<
	.uleb128 .Ltmp1142-.Ltmp1146            #   Call between .Ltmp1146 and .Ltmp1142
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1142-.Lfunc_begin53       # >> Call Site 4 <<
	.uleb128 .Ltmp1143-.Ltmp1142            #   Call between .Ltmp1142 and .Ltmp1143
	.uleb128 .Ltmp1144-.Lfunc_begin53       #     jumps to .Ltmp1144
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1143-.Lfunc_begin53       # >> Call Site 5 <<
	.uleb128 .Lfunc_end113-.Ltmp1143        #   Call between .Ltmp1143 and .Lfunc_end113
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1148:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1149:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB114_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB114_4
.LBB114_3:
	addi.d	$a0, $fp, 304
.Ltmp1150:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1151:                              # EH_LABEL
.LBB114_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB114_6
# %bb.5:
.Ltmp1156:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1157:                              # EH_LABEL
.LBB114_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB114_7:
.Ltmp1158:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB114_8:
.Ltmp1152:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB114_10
# %bb.9:
.Ltmp1153:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1154:                              # EH_LABEL
.LBB114_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB114_11:
.Ltmp1155:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end114:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv, .Lfunc_end114-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table114:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase29-.Lttbaseref29
.Lttbaseref29:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Ltmp1148-.Lfunc_begin54       # >> Call Site 1 <<
	.uleb128 .Ltmp1151-.Ltmp1148            #   Call between .Ltmp1148 and .Ltmp1151
	.uleb128 .Ltmp1152-.Lfunc_begin54       #     jumps to .Ltmp1152
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1156-.Lfunc_begin54       # >> Call Site 2 <<
	.uleb128 .Ltmp1157-.Ltmp1156            #   Call between .Ltmp1156 and .Ltmp1157
	.uleb128 .Ltmp1158-.Lfunc_begin54       #     jumps to .Ltmp1158
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1157-.Lfunc_begin54       # >> Call Site 3 <<
	.uleb128 .Ltmp1153-.Ltmp1157            #   Call between .Ltmp1157 and .Ltmp1153
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1153-.Lfunc_begin54       # >> Call Site 4 <<
	.uleb128 .Ltmp1154-.Ltmp1153            #   Call between .Ltmp1153 and .Ltmp1154
	.uleb128 .Ltmp1155-.Lfunc_begin54       #     jumps to .Ltmp1155
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1154-.Lfunc_begin54       # >> Call Site 5 <<
	.uleb128 .Lfunc_end114-.Ltmp1154        #   Call between .Ltmp1154 and .Lfunc_end114
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1159:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1160:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB115_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB115_4
.LBB115_3:
	addi.d	$a0, $fp, 304
.Ltmp1161:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1162:                              # EH_LABEL
.LBB115_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB115_6
# %bb.5:
.Ltmp1167:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1168:                              # EH_LABEL
.LBB115_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB115_7:
.Ltmp1169:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB115_8:
.Ltmp1163:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB115_10
# %bb.9:
.Ltmp1164:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1165:                              # EH_LABEL
.LBB115_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB115_11:
.Ltmp1166:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end115:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv, .Lfunc_end115-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table115:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase30-.Lttbaseref30
.Lttbaseref30:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Ltmp1159-.Lfunc_begin55       # >> Call Site 1 <<
	.uleb128 .Ltmp1162-.Ltmp1159            #   Call between .Ltmp1159 and .Ltmp1162
	.uleb128 .Ltmp1163-.Lfunc_begin55       #     jumps to .Ltmp1163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1167-.Lfunc_begin55       # >> Call Site 2 <<
	.uleb128 .Ltmp1168-.Ltmp1167            #   Call between .Ltmp1167 and .Ltmp1168
	.uleb128 .Ltmp1169-.Lfunc_begin55       #     jumps to .Ltmp1169
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1168-.Lfunc_begin55       # >> Call Site 3 <<
	.uleb128 .Ltmp1164-.Ltmp1168            #   Call between .Ltmp1168 and .Ltmp1164
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1164-.Lfunc_begin55       # >> Call Site 4 <<
	.uleb128 .Ltmp1165-.Ltmp1164            #   Call between .Ltmp1164 and .Ltmp1165
	.uleb128 .Ltmp1166-.Lfunc_begin55       #     jumps to .Ltmp1166
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1165-.Lfunc_begin55       # >> Call Site 5 <<
	.uleb128 .Lfunc_end115-.Ltmp1165        #   Call between .Ltmp1165 and .Lfunc_end115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	ori	$a1, $zero, 1
	addi.d	$s1, $fp, 8
	beq	$a0, $a1, .LBB116_13
# %bb.1:
	ori	$a1, $zero, 3
	beq	$a0, $a1, .LBB116_8
# %bb.2:
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB116_18
# %bb.3:
	addi.d	$a1, $fp, 208
	addi.d	$s0, $fp, 272
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB116_21
# %bb.4:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB116_39
# %bb.5:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB116_31
# %bb.6:
	bnez	$a0, .LBB116_32
# %bb.7:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB116_33
	b	.LBB116_40
.LBB116_8:
	addi.d	$a1, $fp, 208
	addi.d	$s0, $fp, 272
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB116_19
# %bb.9:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB116_28
# %bb.10:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB116_22
# %bb.11:
	bnez	$a0, .LBB116_23
# %bb.12:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB116_24
	b	.LBB116_40
.LBB116_13:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB116_20
# %bb.14:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	ori	$fp, $zero, 1
	beq	$a0, $a1, .LBB116_38
# %bb.15:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB116_29
# %bb.16:
	bnez	$a0, .LBB116_42
# %bb.17:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB116_30
.LBB116_18:
	move	$fp, $zero
	b	.LBB116_42
.LBB116_19:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB116_24
	b	.LBB116_40
.LBB116_20:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB116_30
.LBB116_21:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB116_33
	b	.LBB116_40
.LBB116_22:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB116_23:
	ld.d	$s1, $fp, 280
	beqz	$s1, .LBB116_40
.LBB116_24:                             # %.lr.ph.i3
	ld.d	$s2, $fp, 272
	move	$a3, $zero
	ori	$s3, $zero, 15
	.p2align	4, , 16
.LBB116_25:                             # =>This Inner Loop Header: Depth=1
	addu16i.d	$a0, $a3, -2048
	bstrpick.d	$a0, $a0, 31, 28
	bltu	$a0, $s3, .LBB116_43
# %bb.26:                               #   in Loop: Header=BB116_25 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	slli.w	$s4, $a3, 4
	ori	$a2, $zero, 16
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a3, $s4, $a0
	addi.w	$a0, $a3, 0
	bne	$a0, $a3, .LBB116_43
# %bb.27:                               #   in Loop: Header=BB116_25 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB116_25
	b	.LBB116_37
.LBB116_28:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB116_24
	b	.LBB116_40
.LBB116_29:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB116_30:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit9
	ori	$fp, $zero, 1
	b	.LBB116_42
.LBB116_31:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB116_32:
	ld.d	$s1, $fp, 280
	beqz	$s1, .LBB116_40
.LBB116_33:                             # %.lr.ph.i
	ld.d	$s2, $fp, 272
	move	$a3, $zero
	ori	$s3, $zero, 7
	.p2align	4, , 16
.LBB116_34:                             # =>This Inner Loop Header: Depth=1
	addu16i.d	$a0, $a3, -4096
	bstrpick.d	$a0, $a0, 31, 29
	bltu	$a0, $s3, .LBB116_43
# %bb.35:                               #   in Loop: Header=BB116_34 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	slli.w	$s4, $a3, 3
	ori	$a2, $zero, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a3, $s4, $a0
	addi.w	$a0, $a3, 0
	bne	$a0, $a3, .LBB116_43
# %bb.36:                               #   in Loop: Header=BB116_34 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB116_34
.LBB116_37:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit.loopexit
	ld.d	$a2, $fp, 280
	b	.LBB116_41
.LBB116_38:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	b	.LBB116_42
.LBB116_39:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB116_33
.LBB116_40:
	move	$a2, $zero
	move	$a3, $zero
.LBB116_41:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit
	ext.w.b	$a4, $a3
	ori	$a3, $zero, 1
	ori	$fp, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
.LBB116_42:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit9
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB116_43:
	pcalau12i	$a0, %pc_hi20(.L.str.83)
	addi.d	$a1, $a0, %pc_lo12(.L.str.83)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end116:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv, .Lfunc_end116-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.b	$a0, $a0, 0
	ld.d	$s0, $fp, 256
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
	slli.d	$a0, $a0, 8
	st.h	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1170:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1171:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB117_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB117_4
.LBB117_3:
	addi.d	$a0, $fp, 304
.Ltmp1172:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1173:                              # EH_LABEL
.LBB117_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB117_6
# %bb.5:
.Ltmp1178:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1179:                              # EH_LABEL
.LBB117_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB117_7:
.Ltmp1180:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB117_8:
.Ltmp1174:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB117_10
# %bb.9:
.Ltmp1175:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1176:                              # EH_LABEL
.LBB117_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB117_11:
.Ltmp1177:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end117:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv, .Lfunc_end117-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table117:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase31-.Lttbaseref31
.Lttbaseref31:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Ltmp1170-.Lfunc_begin56       # >> Call Site 1 <<
	.uleb128 .Ltmp1173-.Ltmp1170            #   Call between .Ltmp1170 and .Ltmp1173
	.uleb128 .Ltmp1174-.Lfunc_begin56       #     jumps to .Ltmp1174
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1178-.Lfunc_begin56       # >> Call Site 2 <<
	.uleb128 .Ltmp1179-.Ltmp1178            #   Call between .Ltmp1178 and .Ltmp1179
	.uleb128 .Ltmp1180-.Lfunc_begin56       #     jumps to .Ltmp1180
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1179-.Lfunc_begin56       # >> Call Site 3 <<
	.uleb128 .Ltmp1175-.Ltmp1179            #   Call between .Ltmp1179 and .Ltmp1175
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1175-.Lfunc_begin56       # >> Call Site 4 <<
	.uleb128 .Ltmp1176-.Ltmp1175            #   Call between .Ltmp1175 and .Ltmp1176
	.uleb128 .Ltmp1177-.Lfunc_begin56       #     jumps to .Ltmp1177
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1176-.Lfunc_begin56       # >> Call Site 5 <<
	.uleb128 .Lfunc_end117-.Ltmp1176        #   Call between .Ltmp1176 and .Lfunc_end117
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end56:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.d	$a1, $fp, 384
	ld.b	$a0, $a0, 0
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a1, $sp, 16
	st.b	$a0, $sp, 24
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1181:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1182:                              # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB118_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB118_4
.LBB118_3:
	addi.d	$a0, $fp, 304
.Ltmp1183:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1184:                              # EH_LABEL
.LBB118_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB118_6
# %bb.5:
.Ltmp1189:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1190:                              # EH_LABEL
.LBB118_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB118_7:
.Ltmp1191:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB118_8:
.Ltmp1185:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB118_10
# %bb.9:
.Ltmp1186:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1187:                              # EH_LABEL
.LBB118_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB118_11:
.Ltmp1188:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end118:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv, .Lfunc_end118-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table118:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase32-.Lttbaseref32
.Lttbaseref32:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Ltmp1181-.Lfunc_begin57       # >> Call Site 1 <<
	.uleb128 .Ltmp1184-.Ltmp1181            #   Call between .Ltmp1181 and .Ltmp1184
	.uleb128 .Ltmp1185-.Lfunc_begin57       #     jumps to .Ltmp1185
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1189-.Lfunc_begin57       # >> Call Site 2 <<
	.uleb128 .Ltmp1190-.Ltmp1189            #   Call between .Ltmp1189 and .Ltmp1190
	.uleb128 .Ltmp1191-.Lfunc_begin57       #     jumps to .Ltmp1191
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1190-.Lfunc_begin57       # >> Call Site 3 <<
	.uleb128 .Ltmp1186-.Ltmp1190            #   Call between .Ltmp1190 and .Ltmp1186
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1186-.Lfunc_begin57       # >> Call Site 4 <<
	.uleb128 .Ltmp1187-.Ltmp1186            #   Call between .Ltmp1186 and .Ltmp1187
	.uleb128 .Ltmp1188-.Lfunc_begin57       #     jumps to .Ltmp1188
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1187-.Lfunc_begin57       # >> Call Site 5 <<
	.uleb128 .Lfunc_end118-.Ltmp1187        #   Call between .Ltmp1187 and .Lfunc_end118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end57:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase32:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.d	$s0, $fp, 256
	ld.b	$s1, $a0, 0
	ld.d	$s2, $fp, 384
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB119_8
# %bb.1:                                # %_ZNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2EcRKS3_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s1
	jirl	$ra, $a2, 0
	st.d	$zero, $sp, 24
	st.d	$s2, $sp, 16
	st.b	$a0, $sp, 24
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1192:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1193:                              # EH_LABEL
# %bb.2:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB119_4
# %bb.3:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB119_5
.LBB119_4:
	addi.d	$a0, $fp, 304
.Ltmp1194:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1195:                              # EH_LABEL
.LBB119_5:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB119_7
# %bb.6:
.Ltmp1200:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1201:                              # EH_LABEL
.LBB119_7:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB119_8:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB119_9:
.Ltmp1202:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB119_10:
.Ltmp1196:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB119_12
# %bb.11:
.Ltmp1197:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1198:                              # EH_LABEL
.LBB119_12:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB119_13:
.Ltmp1199:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end119:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv, .Lfunc_end119-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table119:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase33-.Lttbaseref33
.Lttbaseref33:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Lfunc_begin58-.Lfunc_begin58  # >> Call Site 1 <<
	.uleb128 .Ltmp1192-.Lfunc_begin58       #   Call between .Lfunc_begin58 and .Ltmp1192
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1192-.Lfunc_begin58       # >> Call Site 2 <<
	.uleb128 .Ltmp1195-.Ltmp1192            #   Call between .Ltmp1192 and .Ltmp1195
	.uleb128 .Ltmp1196-.Lfunc_begin58       #     jumps to .Ltmp1196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1200-.Lfunc_begin58       # >> Call Site 3 <<
	.uleb128 .Ltmp1201-.Ltmp1200            #   Call between .Ltmp1200 and .Ltmp1201
	.uleb128 .Ltmp1202-.Lfunc_begin58       #     jumps to .Ltmp1202
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1201-.Lfunc_begin58       # >> Call Site 4 <<
	.uleb128 .Ltmp1197-.Ltmp1201            #   Call between .Ltmp1201 and .Ltmp1197
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1197-.Lfunc_begin58       # >> Call Site 5 <<
	.uleb128 .Ltmp1198-.Ltmp1197            #   Call between .Ltmp1197 and .Ltmp1198
	.uleb128 .Ltmp1199-.Lfunc_begin58       #     jumps to .Ltmp1199
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1198-.Lfunc_begin58       # >> Call Site 6 <<
	.uleb128 .Lfunc_end119-.Ltmp1198        #   Call between .Ltmp1198 and .Lfunc_end119
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end58:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase33:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.d	$s0, $fp, 256
	ld.b	$s1, $a0, 0
	ld.d	$s2, $fp, 384
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB120_8
# %bb.1:                                # %_ZNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2EcRKS3_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s1
	jirl	$ra, $a2, 0
	st.d	$zero, $sp, 24
	st.d	$s2, $sp, 16
	st.b	$a0, $sp, 24
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp1203:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1204:                              # EH_LABEL
# %bb.2:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB120_4
# %bb.3:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB120_5
.LBB120_4:
	addi.d	$a0, $fp, 304
.Ltmp1205:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1206:                              # EH_LABEL
.LBB120_5:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB120_7
# %bb.6:
.Ltmp1211:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1212:                              # EH_LABEL
.LBB120_7:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB120_8:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB120_9:
.Ltmp1213:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB120_10:
.Ltmp1207:                              # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB120_12
# %bb.11:
.Ltmp1208:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1209:                              # EH_LABEL
.LBB120_12:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB120_13:
.Ltmp1210:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end120:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv, .Lfunc_end120-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table120:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase34-.Lttbaseref34
.Lttbaseref34:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Lfunc_begin59-.Lfunc_begin59  # >> Call Site 1 <<
	.uleb128 .Ltmp1203-.Lfunc_begin59       #   Call between .Lfunc_begin59 and .Ltmp1203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1203-.Lfunc_begin59       # >> Call Site 2 <<
	.uleb128 .Ltmp1206-.Ltmp1203            #   Call between .Ltmp1203 and .Ltmp1206
	.uleb128 .Ltmp1207-.Lfunc_begin59       #     jumps to .Ltmp1207
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1211-.Lfunc_begin59       # >> Call Site 3 <<
	.uleb128 .Ltmp1212-.Ltmp1211            #   Call between .Ltmp1211 and .Ltmp1212
	.uleb128 .Ltmp1213-.Lfunc_begin59       #     jumps to .Ltmp1213
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1212-.Lfunc_begin59       # >> Call Site 4 <<
	.uleb128 .Ltmp1208-.Ltmp1212            #   Call between .Ltmp1212 and .Ltmp1208
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1208-.Lfunc_begin59       # >> Call Site 5 <<
	.uleb128 .Ltmp1209-.Ltmp1208            #   Call between .Ltmp1208 and .Ltmp1209
	.uleb128 .Ltmp1210-.Lfunc_begin59       #     jumps to .Ltmp1210
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1209-.Lfunc_begin59       # >> Call Site 6 <<
	.uleb128 .Lfunc_end120-.Ltmp1209        #   Call between .Ltmp1209 and .Lfunc_end120
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end59:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase34:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,comdat
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.bu	$a0, $a0, 25
	andi	$a0, $a0, 4
	bnez	$a0, .LBB121_21
# %bb.1:
	ld.d	$a0, $fp, 40
	bgeu	$a1, $a0, .LBB121_22
# %bb.2:
	ld.d	$a0, $fp, 0
	ld.d	$a2, $fp, 8
	beq	$a0, $a2, .LBB121_5
	.p2align	4, , 16
.LBB121_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a0, 0
	beq	$a1, $a3, .LBB121_20
# %bb.4:                                #   in Loop: Header=BB121_3 Depth=1
	addi.d	$a0, $a0, 8
	bne	$a0, $a2, .LBB121_3
.LBB121_5:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 48
	ori	$a0, $zero, 3
	st.w	$a0, $sp, 56
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 72
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 24
	ld.d	$a1, $sp, 80
	vld	$vr0, $sp, 88
	ld.d	$a2, $sp, 56
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 32
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 8
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB121_10
# %bb.6:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 56
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB121_9
# %bb.7:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB121_9
# %bb.8:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB121_9:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB121_12
.LBB121_10:
.Ltmp1214:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1215:                              # EH_LABEL
# %bb.11:                               # %.noexc
	ld.d	$a0, $fp, 64
.LBB121_12:                             # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB121_23
# %bb.13:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB121_16
# %bb.14:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB121_16
# %bb.15:
	addi.d	$a0, $sp, 24
.Ltmp1216:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1217:                              # EH_LABEL
.LBB121_16:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB121_19
# %bb.17:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB121_19
# %bb.18:
.Ltmp1219:                              # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1220:                              # EH_LABEL
.LBB121_19:                             # %_ZNSt8__detail6_StateIcED2Ev.exit11
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB121_20:
	pcalau12i	$a0, %pc_hi20(.L.str.82)
	addi.d	$a1, $a0, %pc_lo12(.L.str.82)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB121_21:
	pcalau12i	$a0, %pc_hi20(.L.str.80)
	addi.d	$a1, $a0, %pc_lo12(.L.str.80)
	ori	$a0, $zero, 11
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB121_22:
	pcalau12i	$a0, %pc_hi20(.L.str.81)
	addi.d	$a1, $a0, %pc_lo12(.L.str.81)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB121_23:
.Ltmp1222:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1223:                              # EH_LABEL
# %bb.24:                               # %.noexc9
.LBB121_25:
.Ltmp1221:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB121_26:
.Ltmp1218:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB121_27:
.Ltmp1224:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end121:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm, .Lfunc_end121-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,comdat
	.p2align	2, 0x0
GCC_except_table121:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase35-.Lttbaseref35
.Lttbaseref35:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Ltmp1214-.Lfunc_begin60       # >> Call Site 1 <<
	.uleb128 .Ltmp1215-.Ltmp1214            #   Call between .Ltmp1214 and .Ltmp1215
	.uleb128 .Ltmp1224-.Lfunc_begin60       #     jumps to .Ltmp1224
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1216-.Lfunc_begin60       # >> Call Site 2 <<
	.uleb128 .Ltmp1217-.Ltmp1216            #   Call between .Ltmp1216 and .Ltmp1217
	.uleb128 .Ltmp1218-.Lfunc_begin60       #     jumps to .Ltmp1218
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1219-.Lfunc_begin60       # >> Call Site 3 <<
	.uleb128 .Ltmp1220-.Ltmp1219            #   Call between .Ltmp1219 and .Ltmp1220
	.uleb128 .Ltmp1221-.Lfunc_begin60       #     jumps to .Ltmp1221
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1220-.Lfunc_begin60       # >> Call Site 4 <<
	.uleb128 .Ltmp1222-.Ltmp1220            #   Call between .Ltmp1220 and .Ltmp1222
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1222-.Lfunc_begin60       # >> Call Site 5 <<
	.uleb128 .Ltmp1223-.Ltmp1222            #   Call between .Ltmp1222 and .Ltmp1223
	.uleb128 .Ltmp1224-.Lfunc_begin60       #     jumps to .Ltmp1224
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1223-.Lfunc_begin60       # >> Call Site 6 <<
	.uleb128 .Lfunc_end121-.Ltmp1223        #   Call between .Ltmp1223 and .Lfunc_end121
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end60:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase35:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$s1, $a0, 280
	beqz	$s1, .LBB122_5
# %bb.1:                                # %.lr.ph
	move	$fp, $a0
	move	$s0, $a1
	ld.d	$s2, $a0, 272
	move	$a0, $zero
	.p2align	4, , 16
.LBB122_2:                              # =>This Inner Loop Header: Depth=1
	addi.w	$a0, $a0, 0
	mul.d	$a0, $a0, $s0
	addi.w	$s3, $a0, 0
	bne	$s3, $a0, .LBB122_7
# %bb.3:                                #   in Loop: Header=BB122_2 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a0, $s3, $a0
	addi.w	$a1, $a0, 0
	bne	$a1, $a0, .LBB122_7
# %bb.4:                                #   in Loop: Header=BB122_2 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB122_2
	b	.LBB122_6
.LBB122_5:
	move	$a0, $zero
.LBB122_6:                              # %._crit_edge
	addi.w	$a0, $a0, 0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB122_7:
	pcalau12i	$a0, %pc_hi20(.L.str.83)
	addi.d	$a1, $a0, %pc_lo12(.L.str.83)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end122:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi, .Lfunc_end122-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$a0, $a0, 1
	ld.d	$s1, $fp, 384
	andi	$s2, $a0, 1
	addi.d	$a0, $sp, 112
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 216
	ld.d	$a0, $fp, 280
	st.b	$s2, $sp, 224
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 232
	add.d	$a2, $s0, $a0
.Ltmp1225:                              # EH_LABEL
	move	$a0, $s1
	move	$a1, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp1226:                              # EH_LABEL
# %bb.1:                                # %.noexc
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB123_25
# %bb.2:
	ld.h	$a1, $sp, 208
	ld.b	$a2, $sp, 210
	srli.d	$a3, $a0, 16
	or	$a0, $a1, $a0
	or	$a1, $a2, $a3
	st.h	$a0, $sp, 208
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $sp, 210
.Ltmp1227:                              # EH_LABEL
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1228:                              # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 56
.Ltmp1229:                              # EH_LABEL
	ori	$a0, $zero, 152
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1230:                              # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 112
	xvld	$xr1, $sp, 128
	vst	$vr0, $a0, 0
	addi.d	$a1, $sp, 208
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 128
	vld	$vr0, $sp, 160
	ld.d	$a2, $sp, 176
	vrepli.b	$vr1, 0
	vst	$vr1, $sp, 112
	vst	$vr0, $a0, 48
	st.d	$a2, $a0, 64
	vld	$vr0, $sp, 184
	ld.d	$a2, $sp, 200
	st.d	$zero, $sp, 176
	vst	$vr1, $sp, 160
	vst	$vr0, $a0, 72
	st.d	$a2, $a0, 88
	vst	$vr1, $sp, 184
	ld.d	$a2, $a1, 48
	vld	$vr0, $a1, 32
	xvld	$xr1, $a1, 0
	st.d	$zero, $sp, 200
	st.d	$a2, $a0, 144
	vst	$vr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 56
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 80
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 72
.Ltmp1232:                              # EH_LABEL
	addi.d	$a1, $sp, 56
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1233:                              # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 88
	st.d	$a0, $sp, 96
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 104
	beq	$a1, $a2, .LBB123_7
# %bb.6:
	ld.d	$a0, $sp, 104
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 88
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB123_8
.LBB123_7:
.Ltmp1234:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1235:                              # EH_LABEL
.LBB123_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 72
	beqz	$a3, .LBB123_10
# %bb.9:
.Ltmp1240:                              # EH_LABEL
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 56
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1241:                              # EH_LABEL
.LBB123_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 184
	beqz	$a0, .LBB123_12
# %bb.11:
	ld.d	$a1, $sp, 200
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB123_12:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 160
	beqz	$a0, .LBB123_14
# %bb.13:
	ld.d	$a1, $sp, 176
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB123_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 136
	ld.d	$fp, $sp, 144
	beq	$a0, $fp, .LBB123_20
# %bb.15:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB123_17
	.p2align	4, , 16
.LBB123_16:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB123_17 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB123_19
.LBB123_17:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB123_16
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB123_17 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB123_16
.LBB123_19:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 136
.LBB123_20:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB123_22
# %bb.21:
	ld.d	$a1, $sp, 152
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB123_22:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 112
	beqz	$a0, .LBB123_24
# %bb.23:
	ld.d	$a1, $sp, 128
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB123_24:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev.exit
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB123_25:
.Ltmp1243:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1244:                              # EH_LABEL
# %bb.26:                               # %.noexc6
.LBB123_27:
.Ltmp1242:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB123_28:
.Ltmp1231:                              # EH_LABEL
	b	.LBB123_33
.LBB123_29:
.Ltmp1236:                              # EH_LABEL
	ld.d	$a3, $sp, 72
	move	$fp, $a0
	beqz	$a3, .LBB123_34
# %bb.30:
.Ltmp1237:                              # EH_LABEL
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 56
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1238:                              # EH_LABEL
	b	.LBB123_34
.LBB123_31:
.Ltmp1239:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB123_32:
.Ltmp1245:                              # EH_LABEL
.LBB123_33:
	move	$fp, $a0
.LBB123_34:
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end123:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv, .Lfunc_end123-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table123:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase36-.Lttbaseref36
.Lttbaseref36:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Lfunc_begin61-.Lfunc_begin61  # >> Call Site 1 <<
	.uleb128 .Ltmp1225-.Lfunc_begin61       #   Call between .Lfunc_begin61 and .Ltmp1225
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1225-.Lfunc_begin61       # >> Call Site 2 <<
	.uleb128 .Ltmp1228-.Ltmp1225            #   Call between .Ltmp1225 and .Ltmp1228
	.uleb128 .Ltmp1245-.Lfunc_begin61       #     jumps to .Ltmp1245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1229-.Lfunc_begin61       # >> Call Site 3 <<
	.uleb128 .Ltmp1230-.Ltmp1229            #   Call between .Ltmp1229 and .Ltmp1230
	.uleb128 .Ltmp1231-.Lfunc_begin61       #     jumps to .Ltmp1231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1232-.Lfunc_begin61       # >> Call Site 4 <<
	.uleb128 .Ltmp1235-.Ltmp1232            #   Call between .Ltmp1232 and .Ltmp1235
	.uleb128 .Ltmp1236-.Lfunc_begin61       #     jumps to .Ltmp1236
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1240-.Lfunc_begin61       # >> Call Site 5 <<
	.uleb128 .Ltmp1241-.Ltmp1240            #   Call between .Ltmp1240 and .Ltmp1241
	.uleb128 .Ltmp1242-.Lfunc_begin61       #     jumps to .Ltmp1242
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1241-.Lfunc_begin61       # >> Call Site 6 <<
	.uleb128 .Ltmp1243-.Ltmp1241            #   Call between .Ltmp1241 and .Ltmp1243
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1243-.Lfunc_begin61       # >> Call Site 7 <<
	.uleb128 .Ltmp1244-.Ltmp1243            #   Call between .Ltmp1243 and .Ltmp1244
	.uleb128 .Ltmp1245-.Lfunc_begin61       #     jumps to .Ltmp1245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1244-.Lfunc_begin61       # >> Call Site 8 <<
	.uleb128 .Ltmp1237-.Ltmp1244            #   Call between .Ltmp1244 and .Ltmp1237
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1237-.Lfunc_begin61       # >> Call Site 9 <<
	.uleb128 .Ltmp1238-.Ltmp1237            #   Call between .Ltmp1237 and .Ltmp1238
	.uleb128 .Ltmp1239-.Lfunc_begin61       #     jumps to .Ltmp1239
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1238-.Lfunc_begin61       # >> Call Site 10 <<
	.uleb128 .Lfunc_end123-.Ltmp1238        #   Call between .Ltmp1238 and .Lfunc_end123
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end61:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase36:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$s2, $a0, 1
	ld.d	$s1, $fp, 384
	addi.d	$a0, $sp, 104
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 208
	andi	$a0, $s2, 1
	st.d	$s1, $sp, 216
	ld.d	$a1, $fp, 280
	st.b	$a0, $sp, 224
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 232
	add.d	$a2, $s0, $a1
.Ltmp1246:                              # EH_LABEL
	move	$a0, $s1
	move	$a1, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp1247:                              # EH_LABEL
# %bb.1:                                # %.noexc
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB124_11
# %bb.2:
	st.h	$a0, $sp, 200
	srli.d	$a0, $a0, 16
	st.b	$a0, $sp, 202
.Ltmp1248:                              # EH_LABEL
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1249:                              # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 48
.Ltmp1250:                              # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1251:                              # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 104
	xvld	$xr1, $sp, 120
	vst	$vr0, $a0, 0
	addi.d	$a1, $sp, 200
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 120
	vld	$vr0, $sp, 152
	vrepli.b	$vr1, 0
	ld.d	$a2, $sp, 168
	vst	$vr1, $sp, 104
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 176
	st.d	$a2, $a0, 64
	st.d	$zero, $sp, 168
	vst	$vr1, $sp, 152
	vst	$vr0, $a0, 72
	ld.d	$a2, $sp, 192
	vst	$vr1, $sp, 176
	xvld	$xr0, $a1, 32
	xvld	$xr1, $a1, 0
	st.d	$a2, $a0, 88
	st.d	$zero, $sp, 192
	xvst	$xr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 48
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 72
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 64
.Ltmp1253:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1254:                              # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 80
	st.d	$a0, $sp, 88
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 96
	beq	$a1, $a2, .LBB124_7
# %bb.6:
	ld.d	$a0, $sp, 96
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 80
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB124_8
.LBB124_7:
.Ltmp1255:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1256:                              # EH_LABEL
.LBB124_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 64
	beqz	$a3, .LBB124_10
# %bb.9:
.Ltmp1261:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1262:                              # EH_LABEL
.LBB124_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB124_11:
.Ltmp1264:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1265:                              # EH_LABEL
# %bb.12:                               # %.noexc6
.LBB124_13:
.Ltmp1263:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB124_14:
.Ltmp1252:                              # EH_LABEL
	b	.LBB124_19
.LBB124_15:
.Ltmp1257:                              # EH_LABEL
	ld.d	$a3, $sp, 64
	move	$fp, $a0
	beqz	$a3, .LBB124_20
# %bb.16:
.Ltmp1258:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1259:                              # EH_LABEL
	b	.LBB124_20
.LBB124_17:
.Ltmp1260:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB124_18:
.Ltmp1266:                              # EH_LABEL
.LBB124_19:
	move	$fp, $a0
.LBB124_20:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end124:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv, .Lfunc_end124-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table124:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase37-.Lttbaseref37
.Lttbaseref37:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Lfunc_begin62-.Lfunc_begin62  # >> Call Site 1 <<
	.uleb128 .Ltmp1246-.Lfunc_begin62       #   Call between .Lfunc_begin62 and .Ltmp1246
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1246-.Lfunc_begin62       # >> Call Site 2 <<
	.uleb128 .Ltmp1249-.Ltmp1246            #   Call between .Ltmp1246 and .Ltmp1249
	.uleb128 .Ltmp1266-.Lfunc_begin62       #     jumps to .Ltmp1266
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1250-.Lfunc_begin62       # >> Call Site 3 <<
	.uleb128 .Ltmp1251-.Ltmp1250            #   Call between .Ltmp1250 and .Ltmp1251
	.uleb128 .Ltmp1252-.Lfunc_begin62       #     jumps to .Ltmp1252
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1253-.Lfunc_begin62       # >> Call Site 4 <<
	.uleb128 .Ltmp1256-.Ltmp1253            #   Call between .Ltmp1253 and .Ltmp1256
	.uleb128 .Ltmp1257-.Lfunc_begin62       #     jumps to .Ltmp1257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1261-.Lfunc_begin62       # >> Call Site 5 <<
	.uleb128 .Ltmp1262-.Ltmp1261            #   Call between .Ltmp1261 and .Ltmp1262
	.uleb128 .Ltmp1263-.Lfunc_begin62       #     jumps to .Ltmp1263
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1262-.Lfunc_begin62       # >> Call Site 6 <<
	.uleb128 .Ltmp1264-.Ltmp1262            #   Call between .Ltmp1262 and .Ltmp1264
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1264-.Lfunc_begin62       # >> Call Site 7 <<
	.uleb128 .Ltmp1265-.Ltmp1264            #   Call between .Ltmp1264 and .Ltmp1265
	.uleb128 .Ltmp1266-.Lfunc_begin62       #     jumps to .Ltmp1266
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1265-.Lfunc_begin62       # >> Call Site 8 <<
	.uleb128 .Ltmp1258-.Ltmp1265            #   Call between .Ltmp1265 and .Ltmp1258
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1258-.Lfunc_begin62       # >> Call Site 9 <<
	.uleb128 .Ltmp1259-.Ltmp1258            #   Call between .Ltmp1258 and .Ltmp1259
	.uleb128 .Ltmp1260-.Lfunc_begin62       #     jumps to .Ltmp1260
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1259-.Lfunc_begin62       # >> Call Site 10 <<
	.uleb128 .Lfunc_end124-.Ltmp1259        #   Call between .Ltmp1259 and .Lfunc_end124
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end62:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$s2, $a0, 1
	ld.d	$s1, $fp, 384
	addi.d	$a0, $sp, 104
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 208
	andi	$a0, $s2, 1
	st.d	$s1, $sp, 216
	ld.d	$a1, $fp, 280
	st.b	$a0, $sp, 224
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 232
	add.d	$a2, $s0, $a1
.Ltmp1267:                              # EH_LABEL
	ori	$a3, $zero, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp1268:                              # EH_LABEL
# %bb.1:                                # %.noexc
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB125_25
# %bb.2:
	ld.h	$a1, $sp, 200
	ld.b	$a2, $sp, 202
	srli.d	$a3, $a0, 16
	or	$a0, $a1, $a0
	or	$a1, $a2, $a3
	st.h	$a0, $sp, 200
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $sp, 202
.Ltmp1269:                              # EH_LABEL
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1270:                              # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 48
.Ltmp1271:                              # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1272:                              # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 104
	xvld	$xr1, $sp, 120
	vst	$vr0, $a0, 0
	addi.d	$a1, $sp, 200
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 120
	vld	$vr0, $sp, 152
	vrepli.b	$vr1, 0
	ld.d	$a2, $sp, 168
	vst	$vr1, $sp, 104
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 176
	st.d	$a2, $a0, 64
	st.d	$zero, $sp, 168
	vst	$vr1, $sp, 152
	vst	$vr0, $a0, 72
	ld.d	$a2, $sp, 192
	vst	$vr1, $sp, 176
	xvld	$xr0, $a1, 32
	xvld	$xr1, $a1, 0
	st.d	$a2, $a0, 88
	st.d	$zero, $sp, 192
	xvst	$xr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 48
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 72
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 64
.Ltmp1274:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1275:                              # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 80
	st.d	$a0, $sp, 88
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 96
	beq	$a1, $a2, .LBB125_7
# %bb.6:
	ld.d	$a0, $sp, 96
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 80
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB125_8
.LBB125_7:
.Ltmp1276:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1277:                              # EH_LABEL
.LBB125_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 64
	beqz	$a3, .LBB125_10
# %bb.9:
.Ltmp1282:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1283:                              # EH_LABEL
.LBB125_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 176
	beqz	$a0, .LBB125_12
# %bb.11:
	ld.d	$a1, $sp, 192
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB125_12:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB125_14
# %bb.13:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB125_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 128
	ld.d	$fp, $sp, 136
	beq	$a0, $fp, .LBB125_20
# %bb.15:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB125_17
	.p2align	4, , 16
.LBB125_16:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB125_17 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB125_19
.LBB125_17:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB125_16
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB125_17 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB125_16
.LBB125_19:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 128
.LBB125_20:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB125_22
# %bb.21:
	ld.d	$a1, $sp, 144
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB125_22:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 104
	beqz	$a0, .LBB125_24
# %bb.23:
	ld.d	$a1, $sp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB125_24:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev.exit
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB125_25:
.Ltmp1285:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1286:                              # EH_LABEL
# %bb.26:                               # %.noexc6
.LBB125_27:
.Ltmp1284:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB125_28:
.Ltmp1273:                              # EH_LABEL
	b	.LBB125_33
.LBB125_29:
.Ltmp1278:                              # EH_LABEL
	ld.d	$a3, $sp, 64
	move	$fp, $a0
	beqz	$a3, .LBB125_34
# %bb.30:
.Ltmp1279:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1280:                              # EH_LABEL
	b	.LBB125_34
.LBB125_31:
.Ltmp1281:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB125_32:
.Ltmp1287:                              # EH_LABEL
.LBB125_33:
	move	$fp, $a0
.LBB125_34:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end125:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv, .Lfunc_end125-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table125:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase38-.Lttbaseref38
.Lttbaseref38:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Lfunc_begin63-.Lfunc_begin63  # >> Call Site 1 <<
	.uleb128 .Ltmp1267-.Lfunc_begin63       #   Call between .Lfunc_begin63 and .Ltmp1267
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1267-.Lfunc_begin63       # >> Call Site 2 <<
	.uleb128 .Ltmp1270-.Ltmp1267            #   Call between .Ltmp1267 and .Ltmp1270
	.uleb128 .Ltmp1287-.Lfunc_begin63       #     jumps to .Ltmp1287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1271-.Lfunc_begin63       # >> Call Site 3 <<
	.uleb128 .Ltmp1272-.Ltmp1271            #   Call between .Ltmp1271 and .Ltmp1272
	.uleb128 .Ltmp1273-.Lfunc_begin63       #     jumps to .Ltmp1273
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1274-.Lfunc_begin63       # >> Call Site 4 <<
	.uleb128 .Ltmp1277-.Ltmp1274            #   Call between .Ltmp1274 and .Ltmp1277
	.uleb128 .Ltmp1278-.Lfunc_begin63       #     jumps to .Ltmp1278
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1282-.Lfunc_begin63       # >> Call Site 5 <<
	.uleb128 .Ltmp1283-.Ltmp1282            #   Call between .Ltmp1282 and .Ltmp1283
	.uleb128 .Ltmp1284-.Lfunc_begin63       #     jumps to .Ltmp1284
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1283-.Lfunc_begin63       # >> Call Site 6 <<
	.uleb128 .Ltmp1285-.Ltmp1283            #   Call between .Ltmp1283 and .Ltmp1285
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1285-.Lfunc_begin63       # >> Call Site 7 <<
	.uleb128 .Ltmp1286-.Ltmp1285            #   Call between .Ltmp1285 and .Ltmp1286
	.uleb128 .Ltmp1287-.Lfunc_begin63       #     jumps to .Ltmp1287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1286-.Lfunc_begin63       # >> Call Site 8 <<
	.uleb128 .Ltmp1279-.Ltmp1286            #   Call between .Ltmp1286 and .Ltmp1279
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1279-.Lfunc_begin63       # >> Call Site 9 <<
	.uleb128 .Ltmp1280-.Ltmp1279            #   Call between .Ltmp1279 and .Ltmp1280
	.uleb128 .Ltmp1281-.Lfunc_begin63       #     jumps to .Ltmp1281
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1280-.Lfunc_begin63       # >> Call Site 10 <<
	.uleb128 .Lfunc_end125-.Ltmp1280        #   Call between .Ltmp1280 and .Lfunc_end125
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end63:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase38:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$s2, $a0, 1
	ld.d	$s1, $fp, 384
	addi.d	$a0, $sp, 104
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 208
	andi	$a0, $s2, 1
	st.d	$s1, $sp, 216
	ld.d	$a1, $fp, 280
	st.b	$a0, $sp, 224
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 232
	add.d	$a2, $s0, $a1
.Ltmp1288:                              # EH_LABEL
	ori	$a3, $zero, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp1289:                              # EH_LABEL
# %bb.1:                                # %.noexc
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB126_11
# %bb.2:
	st.h	$a0, $sp, 200
	srli.d	$a0, $a0, 16
	st.b	$a0, $sp, 202
.Ltmp1290:                              # EH_LABEL
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1291:                              # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 48
.Ltmp1292:                              # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1293:                              # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 104
	xvld	$xr1, $sp, 120
	vst	$vr0, $a0, 0
	addi.d	$a1, $sp, 200
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 120
	vld	$vr0, $sp, 152
	vrepli.b	$vr1, 0
	ld.d	$a2, $sp, 168
	vst	$vr1, $sp, 104
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 176
	st.d	$a2, $a0, 64
	st.d	$zero, $sp, 168
	vst	$vr1, $sp, 152
	vst	$vr0, $a0, 72
	ld.d	$a2, $sp, 192
	vst	$vr1, $sp, 176
	xvld	$xr0, $a1, 32
	xvld	$xr1, $a1, 0
	st.d	$a2, $a0, 88
	st.d	$zero, $sp, 192
	xvst	$xr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 48
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 72
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 64
.Ltmp1295:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1296:                              # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 80
	st.d	$a0, $sp, 88
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 96
	beq	$a1, $a2, .LBB126_7
# %bb.6:
	ld.d	$a0, $sp, 96
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 80
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB126_8
.LBB126_7:
.Ltmp1297:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1298:                              # EH_LABEL
.LBB126_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 64
	beqz	$a3, .LBB126_10
# %bb.9:
.Ltmp1303:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1304:                              # EH_LABEL
.LBB126_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB126_11:
.Ltmp1306:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1307:                              # EH_LABEL
# %bb.12:                               # %.noexc6
.LBB126_13:
.Ltmp1305:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB126_14:
.Ltmp1294:                              # EH_LABEL
	b	.LBB126_19
.LBB126_15:
.Ltmp1299:                              # EH_LABEL
	ld.d	$a3, $sp, 64
	move	$fp, $a0
	beqz	$a3, .LBB126_20
# %bb.16:
.Ltmp1300:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1301:                              # EH_LABEL
	b	.LBB126_20
.LBB126_17:
.Ltmp1302:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB126_18:
.Ltmp1308:                              # EH_LABEL
.LBB126_19:
	move	$fp, $a0
.LBB126_20:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end126:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv, .Lfunc_end126-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table126:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase39-.Lttbaseref39
.Lttbaseref39:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Lfunc_begin64-.Lfunc_begin64  # >> Call Site 1 <<
	.uleb128 .Ltmp1288-.Lfunc_begin64       #   Call between .Lfunc_begin64 and .Ltmp1288
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1288-.Lfunc_begin64       # >> Call Site 2 <<
	.uleb128 .Ltmp1291-.Ltmp1288            #   Call between .Ltmp1288 and .Ltmp1291
	.uleb128 .Ltmp1308-.Lfunc_begin64       #     jumps to .Ltmp1308
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1292-.Lfunc_begin64       # >> Call Site 3 <<
	.uleb128 .Ltmp1293-.Ltmp1292            #   Call between .Ltmp1292 and .Ltmp1293
	.uleb128 .Ltmp1294-.Lfunc_begin64       #     jumps to .Ltmp1294
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1295-.Lfunc_begin64       # >> Call Site 4 <<
	.uleb128 .Ltmp1298-.Ltmp1295            #   Call between .Ltmp1295 and .Ltmp1298
	.uleb128 .Ltmp1299-.Lfunc_begin64       #     jumps to .Ltmp1299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1303-.Lfunc_begin64       # >> Call Site 5 <<
	.uleb128 .Ltmp1304-.Ltmp1303            #   Call between .Ltmp1303 and .Ltmp1304
	.uleb128 .Ltmp1305-.Lfunc_begin64       #     jumps to .Ltmp1305
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1304-.Lfunc_begin64       # >> Call Site 6 <<
	.uleb128 .Ltmp1306-.Ltmp1304            #   Call between .Ltmp1304 and .Ltmp1306
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1306-.Lfunc_begin64       # >> Call Site 7 <<
	.uleb128 .Ltmp1307-.Ltmp1306            #   Call between .Ltmp1306 and .Ltmp1307
	.uleb128 .Ltmp1308-.Lfunc_begin64       #     jumps to .Ltmp1308
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1307-.Lfunc_begin64       # >> Call Site 8 <<
	.uleb128 .Ltmp1300-.Ltmp1307            #   Call between .Ltmp1307 and .Ltmp1300
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1300-.Lfunc_begin64       # >> Call Site 9 <<
	.uleb128 .Ltmp1301-.Ltmp1300            #   Call between .Ltmp1300 and .Ltmp1301
	.uleb128 .Ltmp1302-.Lfunc_begin64       #     jumps to .Ltmp1302
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1301-.Lfunc_begin64       # >> Call Site 10 <<
	.uleb128 .Lfunc_end126-.Ltmp1301        #   Call between .Ltmp1301 and .Lfunc_end126
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end64:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase39:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.w	$s1, $a0, 152
	ori	$a0, $zero, 10
	addi.d	$s0, $fp, 8
	bne	$s1, $a0, .LBB127_6
# %bb.1:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB127_14
# %bb.2:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB127_22
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB127_10
.LBB127_4:
	bnez	$a0, .LBB127_11
# %bb.5:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	beqz	$a1, .LBB127_12
	b	.LBB127_15
.LBB127_6:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a0, $zero, 9
	bne	$s1, $a0, .LBB127_17
# %bb.7:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB127_14
# %bb.8:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB127_22
# %bb.9:
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB127_4
.LBB127_10:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB127_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a1, .LBB127_15
.LBB127_12:
	bnez	$a0, .LBB127_18
# %bb.13:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb)
	jirl	$ra, $ra, 0
	b	.LBB127_20
.LBB127_14:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	beqz	$a1, .LBB127_12
.LBB127_15:
	bnez	$a0, .LBB127_19
# %bb.16:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb)
	jirl	$ra, $ra, 0
	b	.LBB127_20
.LBB127_17:
	move	$a0, $zero
	b	.LBB127_21
.LBB127_18:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb)
	jirl	$ra, $ra, 0
	b	.LBB127_20
.LBB127_19:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb)
	jirl	$ra, $ra, 0
.LBB127_20:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit8
	ori	$a0, $zero, 1
.LBB127_21:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit8
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB127_22:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	beqz	$a1, .LBB127_12
	b	.LBB127_15
.Lfunc_end127:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv, .Lfunc_end127-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ori	$a0, $zero, 11
	st.w	$a0, $sp, 64
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 72
	addi.d	$fp, $sp, 80
	ld.d	$a0, $a1, 16
	ld.d	$a2, $a1, 24
	st.d	$zero, $sp, 128
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 112
	beqz	$a0, .LBB128_2
# %bb.1:
	vld	$vr1, $a1, 0
	addi.d	$a1, $a1, 16
	vst	$vr1, $sp, 112
	vst	$vr0, $a1, 0
.LBB128_2:
	vld	$vr1, $sp, 112
	vld	$vr2, $sp, 64
	vst	$vr1, $fp, 0
	st.d	$a0, $sp, 96
	st.d	$a2, $sp, 104
	vst	$vr2, $sp, 16
	st.d	$zero, $sp, 32
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 56
	beqz	$a0, .LBB128_4
# %bb.3:
	vld	$vr1, $fp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 32
	vst	$vr1, $a2, 0
	st.d	$a0, $sp, 48
	vst	$vr0, $a1, 0
.LBB128_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	ld.d	$a0, $s0, 64
	ld.d	$a1, $s0, 72
	addi.d	$s1, $s0, 56
	beq	$a0, $a1, .LBB128_9
# %bb.5:
	vld	$vr1, $sp, 48
	vst	$vr1, $a0, 32
	xvld	$xr1, $sp, 16
	xvst	$xr1, $a0, 0
	ld.w	$a1, $sp, 16
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB128_8
# %bb.6:
	st.d	$zero, $a0, 32
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 56
	ld.d	$a1, $sp, 48
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB128_8
# %bb.7:
	vld	$vr1, $sp, 32
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 48
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB128_8:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $s0, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $s0, 64
	b	.LBB128_11
.LBB128_9:
.Ltmp1309:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1310:                              # EH_LABEL
# %bb.10:                               # %.noexc
	ld.d	$a0, $s0, 64
.LBB128_11:                             # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s1, 0
	sub.d	$s0, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$s0, $a0, .LBB128_19
# %bb.12:
	ld.w	$a0, $sp, 16
	ori	$s1, $zero, 11
	bne	$a0, $s1, .LBB128_15
# %bb.13:
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB128_15
# %bb.14:
	addi.d	$a0, $sp, 32
.Ltmp1311:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1312:                              # EH_LABEL
.LBB128_15:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 64
	bne	$a0, $s1, .LBB128_18
# %bb.16:
	ld.d	$a3, $sp, 96
	beqz	$a3, .LBB128_18
# %bb.17:
.Ltmp1314:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a0, $fp
	move	$a1, $fp
	jirl	$ra, $a3, 0
.Ltmp1315:                              # EH_LABEL
.LBB128_18:                             # %_ZNSt8__detail6_StateIcED2Ev.exit7
	bstrpick.d	$a0, $s0, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB128_19:
.Ltmp1317:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1318:                              # EH_LABEL
# %bb.20:                               # %.noexc4
.LBB128_21:
.Ltmp1316:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB128_22:
.Ltmp1313:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB128_23:
.Ltmp1319:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end128:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE, .Lfunc_end128-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,comdat
	.p2align	2, 0x0
GCC_except_table128:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase40-.Lttbaseref40
.Lttbaseref40:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Ltmp1309-.Lfunc_begin65       # >> Call Site 1 <<
	.uleb128 .Ltmp1310-.Ltmp1309            #   Call between .Ltmp1309 and .Ltmp1310
	.uleb128 .Ltmp1319-.Lfunc_begin65       #     jumps to .Ltmp1319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1311-.Lfunc_begin65       # >> Call Site 2 <<
	.uleb128 .Ltmp1312-.Ltmp1311            #   Call between .Ltmp1311 and .Ltmp1312
	.uleb128 .Ltmp1313-.Lfunc_begin65       #     jumps to .Ltmp1313
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1314-.Lfunc_begin65       # >> Call Site 3 <<
	.uleb128 .Ltmp1315-.Ltmp1314            #   Call between .Ltmp1314 and .Ltmp1315
	.uleb128 .Ltmp1316-.Lfunc_begin65       #     jumps to .Ltmp1316
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1317-.Lfunc_begin65       # >> Call Site 4 <<
	.uleb128 .Ltmp1318-.Ltmp1317            #   Call between .Ltmp1317 and .Ltmp1318
	.uleb128 .Ltmp1319-.Lfunc_begin65       #     jumps to .Ltmp1319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1318-.Lfunc_begin65       # >> Call Site 5 <<
	.uleb128 .Lfunc_end128-.Ltmp1318        #   Call between .Ltmp1318 and .Lfunc_end128
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end65:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase40:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.bu	$fp, $a1, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	dbar	20
	pcalau12i	$s0, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	beqz	$a0, .LBB129_2
.LBB129_1:                              # %_ZSt10__invoke_rIbRNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.bu	$a0, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB129_2:
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB129_1
# %bb.3:
	st.b	$zero, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB129_1
.Lfunc_end129:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end129-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB130_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB130_4
# %bb.2:
	bnez	$a2, .LBB130_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE)
.LBB130_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB130_5:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
.LBB130_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end130:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end130-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.bu	$fp, $a1, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	dbar	20
	pcalau12i	$s0, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	beqz	$a0, .LBB131_2
.LBB131_1:                              # %_ZSt10__invoke_rIbRNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.bu	$a0, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB131_2:
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB131_1
# %bb.3:
	st.b	$zero, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB131_1
.Lfunc_end131:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end131-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB132_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB132_5
# %bb.2:
	bnez	$a2, .LBB132_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE)
	b	.LBB132_5
.LBB132_4:
	ld.d	$a1, $a1, 0
.LBB132_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB132_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end132:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end132-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc)
	jr	$t8
.Lfunc_end133:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end133-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB134_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB134_5
# %bb.2:
	bnez	$a2, .LBB134_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE)
	b	.LBB134_5
.LBB134_4:
	ld.d	$a1, $a1, 0
.LBB134_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB134_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end134:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end134-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
	.p2align	2
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	move	$fp, $a1
	dbar	20
	beqz	$a2, .LBB135_3
.LBB135_1:
	ld.d	$s0, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB135_6
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	ld.bu	$a1, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	andi	$a0, $a0, 255
	xor	$a0, $a0, $a1
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB135_3:
	pcalau12i	$a1, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB135_1
# %bb.4:
.Ltmp1320:                              # EH_LABEL
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc)
	jirl	$ra, $ra, 0
.Ltmp1321:                              # EH_LABEL
# %bb.5:
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	st.b	$a0, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB135_1
.LBB135_6:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB135_7:
.Ltmp1322:                              # EH_LABEL
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_abort)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end135:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc, .Lfunc_end135-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,"aG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,comdat
	.p2align	2, 0x0
GCC_except_table135:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Lfunc_begin66-.Lfunc_begin66  # >> Call Site 1 <<
	.uleb128 .Ltmp1320-.Lfunc_begin66       #   Call between .Lfunc_begin66 and .Ltmp1320
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1320-.Lfunc_begin66       # >> Call Site 2 <<
	.uleb128 .Ltmp1321-.Ltmp1320            #   Call between .Ltmp1320 and .Ltmp1321
	.uleb128 .Ltmp1322-.Lfunc_begin66       #     jumps to .Ltmp1322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1321-.Lfunc_begin66       # >> Call Site 3 <<
	.uleb128 .Lfunc_end135-.Ltmp1321        #   Call between .Ltmp1321 and .Lfunc_end135
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end66:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.p2align	2
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$s0, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB136_2
# %bb.1:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a2
.LBB136_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end136:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc, .Lfunc_end136-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc)
	jr	$t8
.Lfunc_end137:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end137-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB138_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB138_5
# %bb.2:
	bnez	$a2, .LBB138_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE)
	b	.LBB138_5
.LBB138_4:
	ld.d	$a1, $a1, 0
.LBB138_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB138_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end138:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end138-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
	.p2align	2
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	move	$fp, $a1
	dbar	20
	beqz	$a2, .LBB139_3
.LBB139_1:
	ld.d	$s0, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB139_6
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	ld.bu	$a1, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	andi	$a0, $a0, 255
	xor	$a0, $a0, $a1
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB139_3:
	pcalau12i	$a1, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB139_1
# %bb.4:
.Ltmp1323:                              # EH_LABEL
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc)
	jirl	$ra, $ra, 0
.Ltmp1324:                              # EH_LABEL
# %bb.5:
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	st.b	$a0, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB139_1
.LBB139_6:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB139_7:
.Ltmp1325:                              # EH_LABEL
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_abort)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end139:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc, .Lfunc_end139-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,"aG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,comdat
	.p2align	2, 0x0
GCC_except_table139:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Lfunc_begin67-.Lfunc_begin67  # >> Call Site 1 <<
	.uleb128 .Ltmp1323-.Lfunc_begin67       #   Call between .Lfunc_begin67 and .Ltmp1323
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1323-.Lfunc_begin67       # >> Call Site 2 <<
	.uleb128 .Ltmp1324-.Ltmp1323            #   Call between .Ltmp1323 and .Ltmp1324
	.uleb128 .Ltmp1325-.Lfunc_begin67       #     jumps to .Ltmp1325
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1324-.Lfunc_begin67       # >> Call Site 3 <<
	.uleb128 .Lfunc_end139-.Ltmp1324        #   Call between .Ltmp1324 and .Lfunc_end139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end67:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.p2align	2
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$s0, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB140_2
# %bb.1:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a2
.LBB140_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end140:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc, .Lfunc_end140-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a0, $a1, 0
	addi.d	$a1, $a0, -10
	sltu	$a1, $zero, $a1
	addi.d	$a0, $a0, -13
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ret
.Lfunc_end141:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end141-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB142_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB142_4
# %bb.2:
	bnez	$a2, .LBB142_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE)
.LBB142_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB142_5:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
.LBB142_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end142:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end142-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a0, $a1, 0
	addi.d	$a1, $a0, -10
	sltu	$a1, $zero, $a1
	addi.d	$a0, $a0, -13
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ret
.Lfunc_end143:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end143-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB144_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB144_5
# %bb.2:
	bnez	$a2, .LBB144_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE)
	b	.LBB144_5
.LBB144_4:
	ld.d	$a1, $a1, 0
.LBB144_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB144_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end144:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end144-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	move	$a2, $zero
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE)
	jr	$t8
.Lfunc_end145:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end145-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB146_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB146_5
# %bb.2:
	bnez	$a2, .LBB146_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE)
	b	.LBB146_5
.LBB146_4:
	ld.d	$a1, $a1, 0
.LBB146_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB146_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end146:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end146-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.p2align	2
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ld.d	$s1, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB147_4
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB147_4
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit6
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 10
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$s0, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB147_4
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit8
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 13
	jirl	$ra, $a2, 0
	xor	$a1, $fp, $s0
	sltu	$a1, $zero, $a1
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB147_4:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end147:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE, .Lfunc_end147-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	move	$a2, $zero
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE)
	jr	$t8
.Lfunc_end148:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end148-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB149_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB149_5
# %bb.2:
	bnez	$a2, .LBB149_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE)
	b	.LBB149_5
.LBB149_4:
	ld.d	$a1, $a1, 0
.LBB149_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB149_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end149:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end149-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.p2align	2
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ld.d	$s1, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB150_4
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB150_4
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit6
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 10
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$s0, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB150_4
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit8
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 13
	jirl	$ra, $a2, 0
	xor	$a1, $fp, $s0
	sltu	$a1, $zero, $a1
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB150_4:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end150:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE, .Lfunc_end150-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.bu	$a0, $a0, 1
	xor	$a0, $a0, $a1
	sltui	$a0, $a0, 1
	ret
.Lfunc_end151:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end151-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB152_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB152_4
# %bb.2:
	bnez	$a2, .LBB152_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
.LBB152_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB152_5:
	ld.h	$a1, $a1, 0
	st.h	$a1, $a0, 0
.LBB152_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end152:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end152-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.bu	$a0, $a0, 8
	xor	$a0, $a0, $a1
	sltui	$a0, $a0, 1
	ret
.Lfunc_end153:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end153-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB154_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB154_4
# %bb.2:
	bnez	$a2, .LBB154_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
.LBB154_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB154_5:
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
.LBB154_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end154:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end154-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.b	$fp, $a1, 0
	ld.bu	$s0, $a0, 8
	ld.d	$s1, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB155_2
# %bb.1:                                # %_ZSt10__invoke_rIbRNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB155_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end155:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end155-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB156_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB156_4
# %bb.2:
	bnez	$a2, .LBB156_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
.LBB156_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB156_5:
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
.LBB156_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end156:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end156-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.b	$fp, $a1, 0
	ld.bu	$s0, $a0, 8
	ld.d	$s1, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB157_2
# %bb.1:                                # %_ZSt10__invoke_rIbRNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB157_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end157:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end157-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB158_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB158_4
# %bb.2:
	bnez	$a2, .LBB158_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
.LBB158_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB158_5:
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
.LBB158_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end158:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end158-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE5valueEci,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE5valueEci,comdat
	.weak	_ZNKSt7__cxx1112regex_traitsIcE5valueEci # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE5valueEci
	.p2align	2
	.type	_ZNKSt7__cxx1112regex_traitsIcE5valueEci,@function
_ZNKSt7__cxx1112regex_traitsIcE5valueEci: # @_ZNKSt7__cxx1112regex_traitsIcE5valueEci
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	addi.d	$sp, $sp, -464
	.cfi_def_cfa_offset 464
	st.d	$ra, $sp, 456                   # 8-byte Folded Spill
	st.d	$fp, $sp, 448                   # 8-byte Folded Spill
	st.d	$s0, $sp, 440                   # 8-byte Folded Spill
	st.d	$s1, $sp, 432                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$a2, $a1
	addi.d	$s0, $sp, 32
	st.d	$s0, $sp, 16
.Ltmp1326:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp1327:                              # EH_LABEL
# %bb.1:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_.exit
.Ltmp1329:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode)
	jirl	$ra, $ra, 0
.Ltmp1330:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 16
	beq	$a0, $s0, .LBB159_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB159_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ori	$a0, $zero, 8
	beq	$fp, $a0, .LBB159_7
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ori	$a0, $zero, 16
	bne	$fp, $a0, .LBB159_9
# %bb.6:
	ori	$a0, $zero, 8
	b	.LBB159_8
.LBB159_7:
	ori	$a0, $zero, 64
.LBB159_8:                              # %.sink.split
	ld.d	$a1, $sp, 48
	ld.d	$a1, $a1, -24
	addi.d	$a2, $sp, 48
	add.d	$a1, $a2, $a1
	ld.wu	$a2, $a1, 24
	addi.w	$a3, $zero, -75
	lu32i.d	$a3, 0
	and	$a2, $a2, $a3
	or	$a0, $a2, $a0
	st.w	$a0, $a1, 24
.LBB159_9:
.Ltmp1332:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	addi.d	$fp, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSi10_M_extractIlEERSiRT_)
	jirl	$ra, $ra, 0
.Ltmp1333:                              # EH_LABEL
# %bb.10:                               # %_ZNSirsERl.exit
	ld.d	$a0, $sp, 48
	pcalau12i	$a1, %got_pc_hi20(_ZTTNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s0, $a1, %got_pc_lo12(_ZTTNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, -24
	ld.d	$a1, $s0, 0
	add.d	$a0, $fp, $a0
	st.d	$a1, $sp, 48
	ld.d	$a2, $s0, 24
	ld.d	$a1, $a1, -24
	ld.w	$s1, $a0, 32
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a2, $a1, $fp
	ld.d	$a0, $sp, 136
	ld.w	$fp, $sp, 16
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 152
	st.d	$a1, $sp, 64
	beq	$a0, $a2, .LBB159_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB159_12:                             # %_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	andi	$a0, $s1, 5
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -1
	pcalau12i	$a2, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $fp, $a0
	or	$fp, $a0, $a1
	addi.d	$a0, $a2, 16
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 8
	st.d	$a0, $sp, 48
	ld.d	$a1, $s0, 16
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 48
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 56
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 440                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 448                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 456                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 464
	ret
.LBB159_13:
.Ltmp1334:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB159_14:
.Ltmp1331:                              # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	bne	$a2, $s0, .LBB159_16
# %bb.15:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB159_16:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i11
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB159_17:
.Ltmp1328:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end159:
	.size	_ZNKSt7__cxx1112regex_traitsIcE5valueEci, .Lfunc_end159-_ZNKSt7__cxx1112regex_traitsIcE5valueEci
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE5valueEci,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE5valueEci,comdat
	.p2align	2, 0x0
GCC_except_table159:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Ltmp1326-.Lfunc_begin68       # >> Call Site 1 <<
	.uleb128 .Ltmp1327-.Ltmp1326            #   Call between .Ltmp1326 and .Ltmp1327
	.uleb128 .Ltmp1328-.Lfunc_begin68       #     jumps to .Ltmp1328
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1329-.Lfunc_begin68       # >> Call Site 2 <<
	.uleb128 .Ltmp1330-.Ltmp1329            #   Call between .Ltmp1329 and .Ltmp1330
	.uleb128 .Ltmp1331-.Lfunc_begin68       #     jumps to .Ltmp1331
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1330-.Lfunc_begin68       # >> Call Site 3 <<
	.uleb128 .Ltmp1332-.Ltmp1330            #   Call between .Ltmp1330 and .Ltmp1332
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1332-.Lfunc_begin68       # >> Call Site 4 <<
	.uleb128 .Ltmp1333-.Ltmp1332            #   Call between .Ltmp1332 and .Ltmp1333
	.uleb128 .Ltmp1334-.Lfunc_begin68       #     jumps to .Ltmp1334
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1333-.Lfunc_begin68       # >> Call Site 5 <<
	.uleb128 .Lfunc_end159-.Ltmp1333        #   Call between .Ltmp1333 and .Lfunc_end159
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end68:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$a3, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 104
	move	$s0, $a2
	add.d	$a2, $a3, $a1
	move	$a1, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB160_17
# %bb.1:
	srli.d	$s5, $a0, 16
	beqz	$s0, .LBB160_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB160_5
# %bb.3:
	andi	$a1, $s5, 255
	bstrins.d	$a0, $a1, 63, 16
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB160_16
.LBB160_4:
	ld.hu	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a0, $a1, $a0
	or	$a1, $a2, $s5
	st.h	$a0, $fp, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB160_16
.LBB160_5:
	move	$s6, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB160_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	andi	$a0, $s5, 255
	bstrins.d	$s6, $a0, 63, 16
	stx.w	$s6, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB160_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 60
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB160_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 64
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB160_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 4
	slli.d	$a2, $a0, 4
	slli.d	$a0, $a0, 6
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 32
	addi.d	$a4, $s2, 32
	move	$a5, $a2
	.p2align	4, , 16
.LBB160_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a3, -32
	xvld	$xr1, $a3, 0
	xvst	$xr0, $a4, -32
	xvst	$xr1, $a4, 0
	addi.d	$a3, $a3, 64
	addi.d	$a5, $a5, -16
	addi.d	$a4, $a4, 64
	bnez	$a5, .LBB160_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB160_13
	.p2align	4, , 16
.LBB160_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB160_12
.LBB160_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB160_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB160_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB160_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB160_17:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB160_18:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end160:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end160-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB161_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB161_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB161_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB161_8
# %bb.4:                                #   in Loop: Header=BB161_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB161_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB161_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB161_8
.LBB161_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB161_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 120
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB161_10
	.p2align	4, , 16
.LBB161_9:                              #   in Loop: Header=BB161_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB161_12
.LBB161_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 112
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB161_9
# %bb.11:                               #   in Loop: Header=BB161_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB161_10
.LBB161_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB161_13:                             #   in Loop: Header=BB161_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB161_16
.LBB161_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB161_13
# %bb.15:                               #   in Loop: Header=BB161_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB161_13
.LBB161_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB161_7
	b	.LBB161_8
.Lfunc_end161:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv, .Lfunc_end161-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB162_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB162_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB162_4
# %bb.3:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB162_4:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB162_10
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB162_7
	.p2align	4, , 16
.LBB162_6:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB162_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB162_9
.LBB162_7:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB162_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB162_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB162_6
.LBB162_9:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB162_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB162_12
# %bb.11:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB162_12:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB162_14
# %bb.13:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB162_14:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end162:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev, .Lfunc_end162-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_,"axG",@progbits,_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_,comdat
	.hidden	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ # -- Begin function _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.weak	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.p2align	5
	.type	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_,@function
_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_: # @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	sub.d	$a0, $a1, $a0
	ori	$a3, $zero, 17
	blt	$a0, $a3, .LBB163_35
# %bb.1:                                # %.lr.ph
	move	$s0, $a2
	addi.d	$s2, $fp, 1
	sub.d	$s3, $zero, $fp
	ori	$s4, $zero, 16
	b	.LBB163_3
	.p2align	4, , 16
.LBB163_2:                              # %_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_.exit
                                        #   in Loop: Header=BB163_3 Depth=1
	move	$a0, $s1
	move	$a2, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	add.d	$a0, $s3, $s1
	move	$a1, $s1
	bge	$s4, $a0, .LBB163_35
.LBB163_3:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB163_16 Depth 2
                                        #       Child Loop BB163_17 Depth 3
                                        #       Child Loop BB163_19 Depth 3
	beqz	$s0, .LBB163_22
# %bb.4:                                #   in Loop: Header=BB163_3 Depth=1
	srli.d	$a0, $a0, 1
	ld.b	$a3, $fp, 1
	ldx.b	$a4, $fp, $a0
	ld.b	$a2, $a1, -1
	bge	$a3, $a4, .LBB163_7
# %bb.5:                                #   in Loop: Header=BB163_3 Depth=1
	bge	$a4, $a2, .LBB163_9
# %bb.6:                                #   in Loop: Header=BB163_3 Depth=1
	ld.b	$a2, $fp, 0
	st.b	$a4, $fp, 0
	stx.b	$a2, $fp, $a0
	b	.LBB163_15
	.p2align	4, , 16
.LBB163_7:                              #   in Loop: Header=BB163_3 Depth=1
	bge	$a3, $a2, .LBB163_12
# %bb.8:                                #   in Loop: Header=BB163_3 Depth=1
	ld.b	$a0, $fp, 0
	b	.LBB163_11
	.p2align	4, , 16
.LBB163_9:                              #   in Loop: Header=BB163_3 Depth=1
	ld.bu	$a0, $fp, 0
	bge	$a3, $a2, .LBB163_11
# %bb.10:                               #   in Loop: Header=BB163_3 Depth=1
	st.b	$a2, $fp, 0
	st.b	$a0, $a1, -1
	b	.LBB163_15
	.p2align	4, , 16
.LBB163_11:                             #   in Loop: Header=BB163_3 Depth=1
	st.b	$a3, $fp, 0
	st.b	$a0, $fp, 1
	b	.LBB163_15
	.p2align	4, , 16
.LBB163_12:                             #   in Loop: Header=BB163_3 Depth=1
	ld.bu	$a3, $fp, 0
	bge	$a4, $a2, .LBB163_14
# %bb.13:                               #   in Loop: Header=BB163_3 Depth=1
	st.b	$a2, $fp, 0
	st.b	$a3, $a1, -1
	b	.LBB163_15
.LBB163_14:                             #   in Loop: Header=BB163_3 Depth=1
	st.b	$a4, $fp, 0
	stx.b	$a3, $fp, $a0
	.p2align	4, , 16
.LBB163_15:                             # %_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_.exit.i.preheader
                                        #   in Loop: Header=BB163_3 Depth=1
	addi.d	$s0, $s0, -1
	move	$a2, $a1
	move	$a0, $s2
	.p2align	4, , 16
.LBB163_16:                             # %_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_.exit.i
                                        #   Parent Loop BB163_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB163_17 Depth 3
                                        #       Child Loop BB163_19 Depth 3
	ld.b	$a3, $fp, 0
	addi.d	$s1, $a0, -1
	.p2align	4, , 16
.LBB163_17:                             #   Parent Loop BB163_3 Depth=1
                                        #     Parent Loop BB163_16 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.b	$a4, $a0, 0
	addi.d	$a0, $a0, 1
	addi.d	$s1, $s1, 1
	blt	$a4, $a3, .LBB163_17
# %bb.18:                               # %.preheader.i.i.preheader
                                        #   in Loop: Header=BB163_16 Depth=2
	addi.d	$a5, $a0, -1
	.p2align	4, , 16
.LBB163_19:                             # %.preheader.i.i
                                        #   Parent Loop BB163_3 Depth=1
                                        #     Parent Loop BB163_16 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.b	$a6, $a2, -1
	addi.d	$a2, $a2, -1
	blt	$a3, $a6, .LBB163_19
# %bb.20:                               #   in Loop: Header=BB163_16 Depth=2
	bgeu	$a5, $a2, .LBB163_2
# %bb.21:                               #   in Loop: Header=BB163_16 Depth=2
	st.b	$a6, $a5, 0
	st.b	$a4, $a2, 0
	b	.LBB163_16
.LBB163_22:                             # %.lr.ph.preheader.i.i
	move	$a0, $fp
	move	$s0, $a1
	move	$a2, $a1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3
	ori	$a1, $zero, 1
	b	.LBB163_25
	.p2align	4, , 16
.LBB163_23:                             #   in Loop: Header=BB163_25 Depth=1
	move	$a4, $zero
.LBB163_24:                             # %_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_RT0_.exit.i.i
                                        #   in Loop: Header=BB163_25 Depth=1
	stx.b	$a2, $fp, $a4
	bge	$a1, $a3, .LBB163_35
.LBB163_25:                             # %.lr.ph.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB163_27 Depth 2
                                        #     Child Loop BB163_33 Depth 2
	move	$a4, $s0
	ld.b	$a5, $fp, 0
	ld.b	$a2, $s0, -1
	addi.d	$s0, $s0, -1
	sub.d	$a3, $s0, $fp
	st.b	$a5, $a4, -1
	blt	$a3, $a0, .LBB163_29
# %bb.26:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB163_25 Depth=1
	move	$a5, $zero
	addi.d	$a4, $a3, -1
	srli.d	$a6, $a4, 63
	add.d	$a4, $a4, $a6
	srai.d	$a6, $a4, 1
	.p2align	4, , 16
.LBB163_27:                             # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB163_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	slli.d	$a4, $a5, 1
	addi.d	$a7, $a4, 2
	addi.d	$a4, $a4, 1
	ldx.b	$t0, $fp, $a7
	ldx.b	$t1, $fp, $a4
	slt	$t0, $t0, $t1
	masknez	$a7, $a7, $t0
	maskeqz	$a4, $a4, $t0
	or	$a4, $a4, $a7
	ldx.b	$a7, $fp, $a4
	stx.b	$a7, $fp, $a5
	move	$a5, $a4
	blt	$a4, $a6, .LBB163_27
# %bb.28:                               # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB163_25 Depth=1
	andi	$a5, $a3, 1
	beqz	$a5, .LBB163_30
	b	.LBB163_32
	.p2align	4, , 16
.LBB163_29:                             #   in Loop: Header=BB163_25 Depth=1
	move	$a4, $zero
	andi	$a5, $a3, 1
	bnez	$a5, .LBB163_32
.LBB163_30:                             #   in Loop: Header=BB163_25 Depth=1
	addi.d	$a5, $a3, -2
	srai.d	$a5, $a5, 1
	bne	$a4, $a5, .LBB163_32
# %bb.31:                               # %.thread.i.i.i
                                        #   in Loop: Header=BB163_25 Depth=1
	slli.d	$a5, $a4, 1
	addi.d	$a5, $a5, 1
	ldx.b	$a6, $fp, $a5
	stx.b	$a6, $fp, $a4
	move	$a4, $a5
	b	.LBB163_33
	.p2align	4, , 16
.LBB163_32:                             #   in Loop: Header=BB163_25 Depth=1
	beqz	$a4, .LBB163_23
	.p2align	4, , 16
.LBB163_33:                             # %.lr.ph.i.i.i.i.i
                                        #   Parent Loop BB163_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a5, $a4, -1
	srli.d	$a6, $a5, 1
	ldx.b	$a7, $fp, $a6
	bge	$a7, $a2, .LBB163_24
# %bb.34:                               #   in Loop: Header=BB163_33 Depth=2
	stx.b	$a7, $fp, $a4
	move	$a4, $a6
	bltu	$a1, $a5, .LBB163_33
	b	.LBB163_23
.LBB163_35:                             # %_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_.exit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end163:
	.size	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_, .Lfunc_end163-_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_,"axG",@progbits,_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_,comdat
	.hidden	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ # -- Begin function _ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.weak	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.p2align	5
	.type	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_,@function
_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_: # @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a1
	move	$s0, $a0
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 17
	blt	$a0, $a1, .LBB164_7
# %bb.1:
	addi.d	$s2, $s0, 16
	beqz	$zero, .LBB164_20
.LBB164_2:                              # %_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_.exit
	bne	$fp, $s2, .LBB164_4
	b	.LBB164_19
	.p2align	4, , 16
.LBB164_3:                              # %_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops14_Val_less_iterEEvT_T0_.exit.i
                                        #   in Loop: Header=BB164_4 Depth=1
	addi.d	$s2, $s2, 1
	st.b	$a0, $a1, 0
	beq	$s2, $fp, .LBB164_19
.LBB164_4:                              # %.lr.ph.i10
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB164_6 Depth 2
	ld.b	$a0, $s2, 0
	ld.b	$a2, $s2, -1
	move	$a1, $s2
	bge	$a0, $a2, .LBB164_3
# %bb.5:                                # %.lr.ph.i.i12.preheader
                                        #   in Loop: Header=BB164_4 Depth=1
	move	$a1, $s2
	.p2align	4, , 16
.LBB164_6:                              # %.lr.ph.i.i12
                                        #   Parent Loop BB164_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	st.b	$a2, $a1, 0
	ld.b	$a2, $a1, -2
	addi.d	$a1, $a1, -1
	blt	$a0, $a2, .LBB164_6
	b	.LBB164_3
.LBB164_7:
	beq	$fp, $s0, .LBB164_19
# %bb.8:
	addi.d	$s1, $s0, 1
	beq	$s1, $fp, .LBB164_19
# %bb.9:                                # %.lr.ph.i19.preheader
	ori	$s2, $zero, 2
	ori	$s3, $zero, 1
	move	$a1, $s1
	move	$s4, $s0
	b	.LBB164_11
	.p2align	4, , 16
.LBB164_10:                             # %_ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_.exit.i22
                                        #   in Loop: Header=BB164_11 Depth=1
	addi.d	$a1, $s4, 1
	st.b	$s5, $a0, 0
	beq	$a1, $fp, .LBB164_19
.LBB164_11:                             # %.lr.ph.i19
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB164_16 Depth 2
	move	$a0, $s4
	move	$s4, $a1
	ld.b	$s5, $a1, 0
	ld.b	$a1, $s0, 0
	bge	$s5, $a1, .LBB164_14
# %bb.12:                               # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.i.i32
                                        #   in Loop: Header=BB164_11 Depth=1
	sub.d	$a2, $s4, $s0
	blt	$a2, $s2, .LBB164_17
# %bb.13:                               #   in Loop: Header=BB164_11 Depth=1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB164_10
	.p2align	4, , 16
.LBB164_14:                             #   in Loop: Header=BB164_11 Depth=1
	ld.b	$a1, $a0, 0
	move	$a0, $s4
	bge	$s5, $a1, .LBB164_10
# %bb.15:                               # %.lr.ph.i.i26.preheader
                                        #   in Loop: Header=BB164_11 Depth=1
	move	$a0, $s4
	.p2align	4, , 16
.LBB164_16:                             # %.lr.ph.i.i26
                                        #   Parent Loop BB164_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	st.b	$a1, $a0, 0
	ld.b	$a1, $a0, -2
	addi.d	$a0, $a0, -1
	blt	$s5, $a1, .LBB164_16
	b	.LBB164_10
.LBB164_17:                             # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i33
                                        #   in Loop: Header=BB164_11 Depth=1
	move	$a0, $s0
	bne	$a2, $s3, .LBB164_10
# %bb.18:                               #   in Loop: Header=BB164_11 Depth=1
	st.b	$a1, $s0, 1
	move	$a0, $s0
	b	.LBB164_10
.LBB164_19:                             # %_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB164_20:                             # %.lr.ph.i.preheader
	addi.d	$s1, $s0, 1
	ori	$s3, $zero, 2
	ori	$s4, $zero, 1
	move	$a1, $s1
	move	$s5, $s0
	b	.LBB164_22
	.p2align	4, , 16
.LBB164_21:                             # %_ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_.exit.i
                                        #   in Loop: Header=BB164_22 Depth=1
	addi.d	$a1, $s5, 1
	st.b	$s6, $a0, 0
	beq	$a1, $s2, .LBB164_2
.LBB164_22:                             # %.lr.ph.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB164_27 Depth 2
	move	$a0, $s5
	move	$s5, $a1
	ld.b	$s6, $a1, 0
	ld.b	$a1, $s0, 0
	bge	$s6, $a1, .LBB164_25
# %bb.23:                               # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        #   in Loop: Header=BB164_22 Depth=1
	sub.d	$a2, $s5, $s0
	blt	$a2, $s3, .LBB164_28
# %bb.24:                               #   in Loop: Header=BB164_22 Depth=1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB164_21
	.p2align	4, , 16
.LBB164_25:                             #   in Loop: Header=BB164_22 Depth=1
	ld.b	$a1, $a0, 0
	move	$a0, $s5
	bge	$s6, $a1, .LBB164_21
# %bb.26:                               # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB164_22 Depth=1
	move	$a0, $s5
	.p2align	4, , 16
.LBB164_27:                             # %.lr.ph.i.i
                                        #   Parent Loop BB164_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	st.b	$a1, $a0, 0
	ld.b	$a1, $a0, -2
	addi.d	$a0, $a0, -1
	blt	$s6, $a1, .LBB164_27
	b	.LBB164_21
.LBB164_28:                             # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i
                                        #   in Loop: Header=BB164_22 Depth=1
	move	$a0, $s0
	bne	$a2, $s4, .LBB164_21
# %bb.29:                               #   in Loop: Header=BB164_22 Depth=1
	st.b	$a1, $s0, 1
	move	$a0, $s0
	b	.LBB164_21
.Lfunc_end164:
	.size	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_, .Lfunc_end164-_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_,"axG",@progbits,_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_,comdat
	.hidden	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ # -- Begin function _ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.weak	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.p2align	5
	.type	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_,@function
_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_: # @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	st.b	$a3, $sp, 15
	addi.d	$a2, $sp, 15
	pcaddu18i	$ra, %call36(_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_)
	jirl	$ra, $ra, 0
	bgeu	$s0, $fp, .LBB165_26
# %bb.1:                                # %.lr.ph
	sub.d	$a1, $s0, $s1
	andi	$a0, $a1, 1
	ori	$a2, $zero, 3
	addi.d	$a3, $a1, -2
	blt	$a1, $a2, .LBB165_15
# %bb.2:                                # %.lr.ph.split.us.preheader
	addi.d	$a1, $a1, -1
	srli.d	$a2, $a1, 63
	add.d	$a1, $a1, $a2
	srai.d	$a1, $a1, 1
	srai.d	$a2, $a3, 1
	addi.d	$a3, $a3, 1
	ori	$a4, $zero, 1
	b	.LBB165_6
	.p2align	4, , 16
.LBB165_3:                              #   in Loop: Header=BB165_6 Depth=1
	move	$a6, $zero
.LBB165_4:                              # %_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_RT0_.exit.us
                                        #   in Loop: Header=BB165_6 Depth=1
	stx.b	$a5, $s1, $a6
.LBB165_5:                              #   in Loop: Header=BB165_6 Depth=1
	addi.d	$s0, $s0, 1
	bgeu	$s0, $fp, .LBB165_26
.LBB165_6:                              # %.lr.ph.split.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB165_8 Depth 2
                                        #     Child Loop BB165_13 Depth 2
	ld.b	$a5, $s0, 0
	ld.b	$a7, $s1, 0
	bge	$a5, $a7, .LBB165_5
# %bb.7:                                # %.lr.ph.i.i.preheader.us
                                        #   in Loop: Header=BB165_6 Depth=1
	move	$a6, $zero
	st.b	$a7, $s0, 0
	.p2align	4, , 16
.LBB165_8:                              # %.lr.ph.i.i.us
                                        #   Parent Loop BB165_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a7, $a6
	slli.d	$a6, $a6, 1
	addi.d	$t0, $a6, 2
	addi.d	$a6, $a6, 1
	ldx.b	$t1, $s1, $t0
	ldx.b	$t2, $s1, $a6
	slt	$t1, $t1, $t2
	masknez	$t0, $t0, $t1
	maskeqz	$a6, $a6, $t1
	or	$a6, $a6, $t0
	ldx.b	$t0, $s1, $a6
	stx.b	$t0, $s1, $a7
	blt	$a6, $a1, .LBB165_8
# %bb.9:                                # %._crit_edge.i.i.loopexit.us
                                        #   in Loop: Header=BB165_6 Depth=1
	bnez	$a0, .LBB165_12
# %bb.10:                               # %._crit_edge.i.i.loopexit.us
                                        #   in Loop: Header=BB165_6 Depth=1
	bne	$a6, $a2, .LBB165_12
# %bb.11:                               # %.thread.i.us
                                        #   in Loop: Header=BB165_6 Depth=1
	ldx.b	$a6, $s1, $a3
	stx.b	$a6, $s1, $a2
	move	$a6, $a3
	b	.LBB165_13
	.p2align	4, , 16
.LBB165_12:                             #   in Loop: Header=BB165_6 Depth=1
	beqz	$a6, .LBB165_3
	.p2align	4, , 16
.LBB165_13:                             # %.lr.ph.i.i.i.us
                                        #   Parent Loop BB165_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a7, $a6, -1
	srli.d	$t0, $a7, 1
	ldx.b	$t1, $s1, $t0
	bge	$t1, $a5, .LBB165_4
# %bb.14:                               #   in Loop: Header=BB165_13 Depth=2
	stx.b	$t1, $s1, $a6
	move	$a6, $t0
	bltu	$a4, $a7, .LBB165_13
	b	.LBB165_3
.LBB165_15:                             # %.lr.ph.split
	beqz	$a0, .LBB165_23
# %bb.16:                               # %.lr.ph.split.split.preheader
	ld.bu	$a0, $s1, 0
	b	.LBB165_18
	.p2align	4, , 16
.LBB165_17:                             #   in Loop: Header=BB165_18 Depth=1
	addi.d	$s0, $s0, 1
	bgeu	$s0, $fp, .LBB165_26
.LBB165_18:                             # %.lr.ph.split.split
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a1, $s0, 0
	ext.w.b	$a2, $a0
	bge	$a1, $a2, .LBB165_17
# %bb.19:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB165_18 Depth=1
	st.b	$a0, $s0, 0
	st.b	$a1, $s1, 0
	move	$a0, $a1
	b	.LBB165_17
.LBB165_20:                             # %.thread.i.us14
                                        #   in Loop: Header=BB165_23 Depth=1
	ld.b	$a1, $s1, 1
	st.b	$a1, $s1, 0
	slt	$a1, $a1, $a0
	xori	$a1, $a1, 1
.LBB165_21:                             # %_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_RT0_.exit.us20
                                        #   in Loop: Header=BB165_23 Depth=1
	stx.b	$a0, $s1, $a1
.LBB165_22:                             #   in Loop: Header=BB165_23 Depth=1
	addi.d	$s0, $s0, 1
	bgeu	$s0, $fp, .LBB165_26
.LBB165_23:                             # %.lr.ph.split.split.us
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s0, 0
	ld.b	$a1, $s1, 0
	bge	$a0, $a1, .LBB165_22
# %bb.24:                               # %._crit_edge.i.i.us13
                                        #   in Loop: Header=BB165_23 Depth=1
	st.b	$a1, $s0, 0
	beqz	$a3, .LBB165_20
# %bb.25:                               #   in Loop: Header=BB165_23 Depth=1
	move	$a1, $zero
	b	.LBB165_21
.LBB165_26:                             # %._crit_edge
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end165:
	.size	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_, .Lfunc_end165-_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_,"axG",@progbits,_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_,comdat
	.hidden	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ # -- Begin function _ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.weak	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.p2align	5
	.type	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_,@function
_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_: # @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.cfi_startproc
# %bb.0:
	sub.d	$a1, $a1, $a0
	ori	$a2, $zero, 2
	bge	$a1, $a2, .LBB166_2
.LBB166_1:                              # %.loopexit
	ret
.LBB166_2:
	addi.d	$a3, $a1, -2
	srli.d	$a2, $a3, 1
	addi.d	$a4, $a1, -1
	andi	$a5, $a1, 1
	srli.d	$a1, $a4, 1
	bnez	$a5, .LBB166_16
# %bb.3:                                # %.split.preheader
	addi.d	$a3, $a3, 1
	move	$a5, $a2
	b	.LBB166_6
	.p2align	4, , 16
.LBB166_4:                              #   in Loop: Header=BB166_6 Depth=1
	move	$a7, $a6
.LBB166_5:                              # %_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElcNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_.exit
                                        #   in Loop: Header=BB166_6 Depth=1
	stx.b	$a5, $a0, $a7
	addi.d	$a5, $a4, -1
	beqz	$a4, .LBB166_1
.LBB166_6:                              # %.split
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB166_8 Depth 2
                                        #     Child Loop BB166_12 Depth 2
	move	$a4, $a5
	ldx.b	$a5, $a0, $a5
	move	$a6, $a4
	bge	$a4, $a1, .LBB166_9
# %bb.7:                                # %.lr.ph.i.preheader
                                        #   in Loop: Header=BB166_6 Depth=1
	move	$a7, $a4
	.p2align	4, , 16
.LBB166_8:                              # %.lr.ph.i
                                        #   Parent Loop BB166_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	slli.d	$a6, $a7, 1
	addi.d	$t0, $a6, 2
	addi.d	$a6, $a6, 1
	ldx.b	$t1, $a0, $t0
	ldx.b	$t2, $a0, $a6
	slt	$t1, $t1, $t2
	masknez	$t0, $t0, $t1
	maskeqz	$a6, $a6, $t1
	or	$a6, $a6, $t0
	ldx.b	$t0, $a0, $a6
	stx.b	$t0, $a0, $a7
	move	$a7, $a6
	blt	$a6, $a1, .LBB166_8
.LBB166_9:                              # %._crit_edge.i
                                        #   in Loop: Header=BB166_6 Depth=1
	bne	$a6, $a2, .LBB166_11
# %bb.10:                               #   in Loop: Header=BB166_6 Depth=1
	ldx.b	$a6, $a0, $a3
	stx.b	$a6, $a0, $a2
	move	$a6, $a3
.LBB166_11:                             #   in Loop: Header=BB166_6 Depth=1
	bge	$a4, $a6, .LBB166_4
	.p2align	4, , 16
.LBB166_12:                             # %.lr.ph.i.i
                                        #   Parent Loop BB166_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a7, $a6, -1
	srli.d	$t0, $a7, 63
	add.d	$a7, $a7, $t0
	srai.d	$a7, $a7, 1
	ldx.b	$t0, $a0, $a7
	bge	$t0, $a5, .LBB166_4
# %bb.13:                               #   in Loop: Header=BB166_12 Depth=2
	stx.b	$t0, $a0, $a6
	move	$a6, $a7
	blt	$a4, $a7, .LBB166_12
	b	.LBB166_5
	.p2align	4, , 16
.LBB166_14:                             #   in Loop: Header=BB166_16 Depth=1
	move	$a5, $a4
.LBB166_15:                             # %_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElcNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_.exit.us
                                        #   in Loop: Header=BB166_16 Depth=1
	stx.b	$a2, $a0, $a5
	addi.d	$a2, $a3, -1
	beqz	$a3, .LBB166_1
.LBB166_16:                             # %.split.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB166_18 Depth 2
                                        #     Child Loop BB166_20 Depth 2
	move	$a3, $a2
	ldx.b	$a2, $a0, $a2
	move	$a5, $a3
	bge	$a3, $a1, .LBB166_15
# %bb.17:                               # %.lr.ph.i.us.preheader
                                        #   in Loop: Header=BB166_16 Depth=1
	move	$a4, $a3
	.p2align	4, , 16
.LBB166_18:                             # %.lr.ph.i.us
                                        #   Parent Loop BB166_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a5, $a4
	slli.d	$a4, $a4, 1
	addi.d	$a6, $a4, 2
	addi.d	$a4, $a4, 1
	ldx.b	$a7, $a0, $a6
	ldx.b	$t0, $a0, $a4
	slt	$a7, $a7, $t0
	masknez	$a6, $a6, $a7
	maskeqz	$a4, $a4, $a7
	or	$a4, $a4, $a6
	ldx.b	$a6, $a0, $a4
	stx.b	$a6, $a0, $a5
	blt	$a4, $a1, .LBB166_18
# %bb.19:                               # %._crit_edge.i.us
                                        #   in Loop: Header=BB166_16 Depth=1
	bge	$a3, $a4, .LBB166_14
	.p2align	4, , 16
.LBB166_20:                             # %.lr.ph.i.i.us
                                        #   Parent Loop BB166_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a5, $a4, -1
	srli.d	$a6, $a5, 63
	add.d	$a5, $a5, $a6
	srai.d	$a5, $a5, 1
	ldx.b	$a6, $a0, $a5
	bge	$a6, $a2, .LBB166_14
# %bb.21:                               #   in Loop: Header=BB166_20 Depth=2
	stx.b	$a6, $a0, $a4
	move	$a4, $a5
	blt	$a3, $a5, .LBB166_20
	b	.LBB166_15
.Lfunc_end166:
	.size	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_, .Lfunc_end166-_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	2
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ld.d	$s3, $a0, 0
	ld.d	$a1, $s3, 0
	ld.d	$a0, $s3, 8
	ld.bu	$s4, $s0, 8
	sub.d	$a2, $a0, $a1
	ori	$a3, $zero, 1
	ext.w.b	$s2, $s4
	blt	$a2, $a3, .LBB167_2
	.p2align	4, , 16
.LBB167_1:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a3, $a2, 1
	ldx.b	$a4, $a1, $a3
	add.d	$a5, $a1, $a3
	slt	$a4, $a4, $s2
	addi.d	$a5, $a5, 1
	nor	$a6, $a3, $zero
	add.d	$a2, $a2, $a6
	maskeqz	$a5, $a5, $a4
	masknez	$a1, $a1, $a4
	maskeqz	$a2, $a2, $a4
	masknez	$a3, $a3, $a4
	or	$a2, $a2, $a3
	or	$a1, $a5, $a1
	bgtz	$a2, .LBB167_1
.LBB167_2:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$a1, $a0, .LBB167_4
# %bb.3:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a0, $a1, 0
	ori	$fp, $zero, 1
	bge	$s2, $a0, .LBB167_30
.LBB167_4:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	ld.d	$a0, $s3, 48
	ld.d	$a1, $s3, 56
	bne	$a0, $a1, .LBB167_11
.LBB167_5:                              # %.critedge
	ld.d	$fp, $s3, 104
	ld.w	$s5, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB167_31
# %bb.6:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s1, 48
	slli.d	$a1, $s4, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s5, $a0
	ori	$fp, $zero, 1
	bnez	$a0, .LBB167_30
# %bb.7:
	lu12i.w	$s4, 16
	and	$a0, $s5, $s4
	beqz	$a0, .LBB167_15
# %bb.8:
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB167_14
# %bb.9:
	ld.bu	$a0, $s1, 152
	andi	$a0, $a0, 255
	andi	$a1, $s2, 255
	bne	$a1, $a0, .LBB167_15
	b	.LBB167_30
	.p2align	4, , 16
.LBB167_10:                             #   in Loop: Header=BB167_11 Depth=1
	addi.d	$a0, $a0, 2
	beq	$a0, $a1, .LBB167_5
.LBB167_11:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a2, $a0, 0
	blt	$s2, $a2, .LBB167_10
# %bb.12:                               # %.lr.ph
                                        #   in Loop: Header=BB167_11 Depth=1
	ld.b	$a2, $a0, 1
	blt	$a2, $s2, .LBB167_10
# %bb.13:
	ori	$fp, $zero, 1
	b	.LBB167_30
.LBB167_14:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s1
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	andi	$a1, $s2, 255
	beq	$a1, $a0, .LBB167_30
.LBB167_15:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread60
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	addi.d	$s1, $s0, 8
	beq	$a0, $a1, .LBB167_20
# %bb.16:
	ld.d	$a1, $s3, 104
	addi.d	$a3, $s0, 9
	addi.d	$a0, $sp, 8
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp1335:                              # EH_LABEL
	addi.d	$a2, $sp, 8
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp1336:                              # EH_LABEL
# %bb.17:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$s0, $a0
	ld.d	$a0, $sp, 8
	ld.d	$s2, $s3, 32
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB167_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB167_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $s0, .LBB167_30
.LBB167_20:
	ld.d	$s5, $s3, 72
	ld.d	$s6, $s3, 80
	beq	$s5, $s6, .LBB167_29
# %bb.21:                               # %.lr.ph71.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB167_23
	.p2align	4, , 16
.LBB167_22:                             #   in Loop: Header=BB167_23 Depth=1
	ld.bu	$a0, $s2, 152
	andi	$a0, $a0, 255
	beq	$s7, $a0, .LBB167_25
	b	.LBB167_30
	.p2align	4, , 16
.LBB167_23:                             # %.lr.ph71
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 104
	ld.bu	$s7, $s1, 0
	ld.w	$s8, $s5, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB167_31
# %bb.24:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i42
                                        #   in Loop: Header=BB167_23 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s7, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s8, $a0
	beqz	$a0, .LBB167_26
.LBB167_25:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit49.thread
                                        #   in Loop: Header=BB167_23 Depth=1
	addi.d	$s5, $s5, 4
	bne	$s5, $s6, .LBB167_23
	b	.LBB167_29
	.p2align	4, , 16
.LBB167_26:                             #   in Loop: Header=BB167_23 Depth=1
	and	$a0, $s8, $s4
	beqz	$a0, .LBB167_30
# %bb.27:                               #   in Loop: Header=BB167_23 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB167_22
# %bb.28:                               #   in Loop: Header=BB167_23 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	beq	$s7, $a0, .LBB167_25
	b	.LBB167_30
.LBB167_29:
	move	$fp, $zero
.LBB167_30:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	move	$a0, $fp
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB167_31:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB167_32:
.Ltmp1337:                              # EH_LABEL
	ld.d	$a2, $sp, 8
	addi.d	$a1, $sp, 24
	move	$fp, $a0
	beq	$a2, $a1, .LBB167_34
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB167_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end167:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end167-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table167:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Lfunc_begin69-.Lfunc_begin69  # >> Call Site 1 <<
	.uleb128 .Ltmp1335-.Lfunc_begin69       #   Call between .Lfunc_begin69 and .Ltmp1335
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1335-.Lfunc_begin69       # >> Call Site 2 <<
	.uleb128 .Ltmp1336-.Ltmp1335            #   Call between .Ltmp1335 and .Ltmp1336
	.uleb128 .Ltmp1337-.Lfunc_begin69       #     jumps to .Ltmp1337
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1336-.Lfunc_begin69       # >> Call Site 3 <<
	.uleb128 .Lfunc_end167-.Ltmp1336        #   Call between .Ltmp1336 and .Lfunc_end167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end69:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.hidden	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.weak	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.p2align	2
	.type	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,@function
_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_: # @_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s3, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	st.d	$zero, $a0, 8
	st.b	$zero, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx117collateIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx117collateIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB168_33
# %bb.1:                                # %_ZSt9use_facetINSt7__cxx117collateIcEEERKT_RKSt6locale.exit
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -8
	pcalau12i	$a1, %got_pc_hi20(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a1, 8
	beq	$a0, $a1, .LBB168_4
# %bb.2:
	ld.bu	$a2, $a0, 0
	ori	$a3, $zero, 42
	beq	$a2, $a3, .LBB168_31
# %bb.3:                                # %_ZNKSt9type_infoneERKS_.exit
	ld.bu	$a2, $a1, 0
	addi.d	$a2, $a2, -42
	sltui	$a2, $a2, 1
	add.d	$a1, $a1, $a2
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB168_31
.LBB168_4:                              # %_ZNKSt9type_infoneERKS_.exit.thread38
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB168_35
# %bb.5:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	st.d	$zero, $sp, 56
	sub.d	$s3, $s3, $s1
	ori	$a1, $zero, 16
	st.d	$s3, $sp, 16
	move	$a0, $s5
	bltu	$s3, $a1, .LBB168_8
# %bb.6:                                # %.noexc.i
.Ltmp1338:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1339:                              # EH_LABEL
# %bb.7:                                # %.noexc25
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB168_8:                              # %._crit_edge.i.i
	beqz	$s3, .LBB168_12
# %bb.9:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB168_11
# %bb.10:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB168_12
.LBB168_11:
	move	$a1, $s1
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB168_12:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 56
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $sp, 48
	ld.d	$a1, $sp, 56
	ld.d	$a3, $a0, 40
	add.d	$s3, $s1, $a1
.Ltmp1341:                              # EH_LABEL
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s3
	jirl	$ra, $a3, 0
.Ltmp1342:                              # EH_LABEL
# %bb.13:                               # %_ZNKSt5ctypeIcE7tolowerEPcPKc.exit
	ld.d	$a0, $s0, 0
	ld.d	$a4, $a0, 24
.Ltmp1344:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s1
	move	$a3, $s3
	jirl	$ra, $a4, 0
.Ltmp1345:                              # EH_LABEL
# %bb.14:                               # %_ZNKSt7__cxx117collateIcE9transformEPKcS3_.exit
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB168_18
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 16
	addi.d	$a2, $sp, 32
	beq	$a1, $a2, .LBB168_21
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a3, $s4, 0
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	beqz	$a0, .LBB168_20
.LBB168_17:
	st.d	$a0, $sp, 16
	st.d	$a3, $sp, 32
	b	.LBB168_27
.LBB168_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 16
	addi.d	$a2, $sp, 32
	beq	$a1, $a2, .LBB168_21
# %bb.19:
	move	$a0, $zero
                                        # implicit-def: $r7
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	bnez	$a0, .LBB168_17
.LBB168_20:
	st.d	$a2, $sp, 16
	move	$a0, $a2
	b	.LBB168_27
.LBB168_21:
	addi.d	$a2, $sp, 16
	beq	$a2, $fp, .LBB168_32
# %bb.22:
	ld.d	$a2, $sp, 24
	beqz	$a2, .LBB168_26
# %bb.23:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB168_25
# %bb.24:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB168_26
.LBB168_25:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB168_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 24
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 16
.LBB168_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB168_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB168_29:
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB168_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB168_31:                             # %_ZNKSt9type_infoneERKS_.exit.thread
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB168_32:
	move	$a0, $a1
	b	.LBB168_27
.LBB168_33:
.Ltmp1353:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1354:                              # EH_LABEL
# %bb.34:                               # %.noexc
.LBB168_35:
.Ltmp1350:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1351:                              # EH_LABEL
# %bb.36:                               # %.noexc24
.LBB168_37:
.Ltmp1340:                              # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB168_45
	b	.LBB168_49
.LBB168_38:
.Ltmp1346:                              # EH_LABEL
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	move	$s0, $a0
	bne	$a1, $a2, .LBB168_43
# %bb.39:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
.Ltmp1347:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1348:                              # EH_LABEL
	b	.LBB168_29
.LBB168_40:
.Ltmp1349:                              # EH_LABEL
	b	.LBB168_42
.LBB168_41:
.Ltmp1343:                              # EH_LABEL
.LBB168_42:
	move	$s0, $a0
.LBB168_43:
	ld.d	$a0, $sp, 48
	bne	$a0, $s5, .LBB168_46
# %bb.44:
	ld.d	$a0, $fp, 0
	bne	$a0, $s4, .LBB168_49
.LBB168_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB168_46:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB168_45
	b	.LBB168_49
.LBB168_47:
.Ltmp1352:                              # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB168_45
	b	.LBB168_49
.LBB168_48:
.Ltmp1355:                              # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB168_45
.LBB168_49:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end168:
	.size	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_, .Lfunc_end168-_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.p2align	2, 0x0
GCC_except_table168:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase41-.Lttbaseref41
.Lttbaseref41:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Lfunc_begin70-.Lfunc_begin70  # >> Call Site 1 <<
	.uleb128 .Ltmp1338-.Lfunc_begin70       #   Call between .Lfunc_begin70 and .Ltmp1338
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1338-.Lfunc_begin70       # >> Call Site 2 <<
	.uleb128 .Ltmp1339-.Ltmp1338            #   Call between .Ltmp1338 and .Ltmp1339
	.uleb128 .Ltmp1340-.Lfunc_begin70       #     jumps to .Ltmp1340
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1339-.Lfunc_begin70       # >> Call Site 3 <<
	.uleb128 .Ltmp1341-.Ltmp1339            #   Call between .Ltmp1339 and .Ltmp1341
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1341-.Lfunc_begin70       # >> Call Site 4 <<
	.uleb128 .Ltmp1342-.Ltmp1341            #   Call between .Ltmp1341 and .Ltmp1342
	.uleb128 .Ltmp1343-.Lfunc_begin70       #     jumps to .Ltmp1343
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1344-.Lfunc_begin70       # >> Call Site 5 <<
	.uleb128 .Ltmp1345-.Ltmp1344            #   Call between .Ltmp1344 and .Ltmp1345
	.uleb128 .Ltmp1346-.Lfunc_begin70       #     jumps to .Ltmp1346
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp1345-.Lfunc_begin70       # >> Call Site 6 <<
	.uleb128 .Ltmp1353-.Ltmp1345            #   Call between .Ltmp1345 and .Ltmp1353
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1353-.Lfunc_begin70       # >> Call Site 7 <<
	.uleb128 .Ltmp1354-.Ltmp1353            #   Call between .Ltmp1353 and .Ltmp1354
	.uleb128 .Ltmp1355-.Lfunc_begin70       #     jumps to .Ltmp1355
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1350-.Lfunc_begin70       # >> Call Site 8 <<
	.uleb128 .Ltmp1351-.Ltmp1350            #   Call between .Ltmp1350 and .Ltmp1351
	.uleb128 .Ltmp1352-.Lfunc_begin70       #     jumps to .Ltmp1352
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1351-.Lfunc_begin70       # >> Call Site 9 <<
	.uleb128 .Ltmp1347-.Ltmp1351            #   Call between .Ltmp1351 and .Ltmp1347
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1347-.Lfunc_begin70       # >> Call Site 10 <<
	.uleb128 .Ltmp1348-.Ltmp1347            #   Call between .Ltmp1347 and .Ltmp1348
	.uleb128 .Ltmp1349-.Lfunc_begin70       #     jumps to .Ltmp1349
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1348-.Lfunc_begin70       # >> Call Site 11 <<
	.uleb128 .Lfunc_end168-.Ltmp1348        #   Call between .Ltmp1348 and .Lfunc_end168
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end70:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp1356:                              # TypeInfo 1
	.word	.L_ZTISt9exception.DW.stub-.Ltmp1356
.Lttbase41:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_,"axG",@progbits,_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_,comdat
	.hidden	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_ # -- Begin function _ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.weak	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.p2align	5
	.type	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_,@function
_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_: # @_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s2, $a0
	beq	$a0, $a1, .LBB169_19
# %bb.1:                                # %.lr.ph
	move	$s0, $a2
	move	$fp, $a1
	ld.d	$s1, $a2, 8
	addi.d	$s4, $s2, 64
	move	$s3, $s2
	b	.LBB169_3
	.p2align	4, , 16
.LBB169_2:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5.3
                                        #   in Loop: Header=BB169_3 Depth=1
	addi.d	$a0, $s4, 64
	addi.d	$s4, $s4, 128
	addi.d	$s3, $s3, 128
	beq	$a0, $fp, .LBB169_18
.LBB169_3:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, -56
	bne	$a0, $s1, .LBB169_6
# %bb.4:                                #   in Loop: Header=BB169_3 Depth=1
	beqz	$s1, .LBB169_20
# %bb.5:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit
                                        #   in Loop: Header=BB169_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s4, -64
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB169_21
.LBB169_6:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5
                                        #   in Loop: Header=BB169_3 Depth=1
	addi.d	$s2, $s4, -32
	beq	$s2, $fp, .LBB169_18
# %bb.7:                                #   in Loop: Header=BB169_3 Depth=1
	ld.d	$a0, $s4, -24
	bne	$a0, $s1, .LBB169_10
# %bb.8:                                #   in Loop: Header=BB169_3 Depth=1
	beqz	$s1, .LBB169_19
# %bb.9:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.1
                                        #   in Loop: Header=BB169_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB169_22
.LBB169_10:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5.1
                                        #   in Loop: Header=BB169_3 Depth=1
	beq	$s4, $fp, .LBB169_18
# %bb.11:                               #   in Loop: Header=BB169_3 Depth=1
	ld.d	$a0, $s4, 8
	bne	$a0, $s1, .LBB169_14
# %bb.12:                               #   in Loop: Header=BB169_3 Depth=1
	beqz	$s1, .LBB169_23
# %bb.13:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.2
                                        #   in Loop: Header=BB169_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s4, 0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB169_24
.LBB169_14:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5.2
                                        #   in Loop: Header=BB169_3 Depth=1
	addi.d	$s2, $s4, 32
	beq	$s2, $fp, .LBB169_18
# %bb.15:                               #   in Loop: Header=BB169_3 Depth=1
	ld.d	$a0, $s4, 40
	bne	$a0, $s1, .LBB169_2
# %bb.16:                               #   in Loop: Header=BB169_3 Depth=1
	beqz	$s1, .LBB169_25
# %bb.17:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.3
                                        #   in Loop: Header=BB169_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB169_2
	b	.LBB169_19
.LBB169_18:
	move	$s2, $fp
.LBB169_19:                             # %.critedge
	move	$a0, $s2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB169_20:
	move	$s2, $s3
	b	.LBB169_19
.LBB169_21:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit..critedge.loopexit_crit_edge
	addi.d	$s2, $s4, -64
	b	.LBB169_19
.LBB169_22:
	addi.d	$s2, $s3, 32
	b	.LBB169_19
.LBB169_23:
	addi.d	$s2, $s3, 64
	b	.LBB169_19
.LBB169_24:
	move	$s2, $s4
	b	.LBB169_19
.LBB169_25:
	addi.d	$s2, $s3, 96
	b	.LBB169_19
.Lfunc_end169:
	.size	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_, .Lfunc_end169-_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 120
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end170:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end170-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB171_8
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI171_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI171_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB171_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
	b	.LBB171_7
.LBB171_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 152
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp1357:                              # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1358:                              # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB171_8
.LBB171_5:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
	b	.LBB171_8
.LBB171_6:
	ld.d	$a1, $a1, 0
.LBB171_7:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB171_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB171_9:
.Ltmp1359:                              # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 152
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end171:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end171-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI171_0:
	.word	.LBB171_2-.LJTI171_0
	.word	.LBB171_6-.LJTI171_0
	.word	.LBB171_3-.LJTI171_0
	.word	.LBB171_5-.LJTI171_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table171:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Lfunc_begin71-.Lfunc_begin71  # >> Call Site 1 <<
	.uleb128 .Ltmp1357-.Lfunc_begin71       #   Call between .Lfunc_begin71 and .Ltmp1357
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1357-.Lfunc_begin71       # >> Call Site 2 <<
	.uleb128 .Ltmp1358-.Ltmp1357            #   Call between .Ltmp1357 and .Ltmp1358
	.uleb128 .Ltmp1359-.Lfunc_begin71       #     jumps to .Ltmp1359
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1358-.Lfunc_begin71       # >> Call Site 3 <<
	.uleb128 .Lfunc_end171-.Ltmp1358        #   Call between .Ltmp1358 and .Lfunc_end171
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end71:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,"axG",@progbits,_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,comdat
	.hidden	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE # -- Begin function _ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.weak	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.p2align	2
	.type	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,@function
_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE: # @_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB172_16
# %bb.1:
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB172_3
# %bb.2:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB172_3:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB172_5
# %bb.4:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB172_5:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB172_11
# %bb.6:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB172_8
	.p2align	4, , 16
.LBB172_7:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB172_8 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB172_10
.LBB172_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB172_7
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB172_8 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB172_7
.LBB172_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 24
.LBB172_11:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB172_13
# %bb.12:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB172_13:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB172_15
# %bb.14:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB172_15:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev.exit
	ori	$a1, $zero, 152
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB172_16:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end172:
	.size	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE, .Lfunc_end172-_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
.Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception72
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB173_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB173_3
.LBB173_2:
	move	$s1, $zero
.LBB173_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s2, $a0, .LBB173_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB173_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp1360:                              # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1361:                              # EH_LABEL
# %bb.6:
	ld.d	$a0, $s0, 56
	ld.d	$a1, $s0, 48
	sub.d	$s2, $a0, $a1
	st.d	$zero, $fp, 64
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 48
	beq	$a0, $a1, .LBB173_9
# %bb.7:                                # %_ZNSt15__new_allocatorISt4pairIccEE8allocateEmPKv.exit.i.i.i.i
.Ltmp1363:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1364:                              # EH_LABEL
# %bb.8:
	move	$s3, $a0
	b	.LBB173_10
.LBB173_9:
	move	$s3, $zero
.LBB173_10:                             # %.noexc
	st.d	$s3, $fp, 48
	st.d	$s3, $fp, 56
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 64
	ld.d	$a5, $s0, 48
	ld.d	$a0, $s0, 56
	move	$a1, $s3
	beq	$a5, $a0, .LBB173_18
# %bb.11:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a1, $a0, $a5
	addi.d	$a1, $a1, -2
	ori	$a2, $zero, 62
	bltu	$a1, $a2, .LBB173_16
# %bb.12:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a2, $s3, $a5
	ori	$a3, $zero, 64
	bltu	$a2, $a3, .LBB173_16
# %bb.13:                               # %vector.ph
	srli.d	$a1, $a1, 1
	addi.d	$a3, $a1, 1
	move	$a4, $a3
	bstrins.d	$a4, $zero, 4, 0
	alsl.d	$a2, $a4, $a5, 1
	alsl.d	$a1, $a4, $s3, 1
	addi.d	$a6, $s3, 32
	addi.d	$a5, $a5, 32
	move	$a7, $a4
	.p2align	4, , 16
.LBB173_14:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a5, -32
	xvld	$xr1, $a5, 0
	xvst	$xr0, $a6, -32
	xvst	$xr1, $a6, 0
	addi.d	$a6, $a6, 64
	addi.d	$a7, $a7, -32
	addi.d	$a5, $a5, 64
	bnez	$a7, .LBB173_14
# %bb.15:                               # %middle.block
	bne	$a3, $a4, .LBB173_17
	b	.LBB173_18
.LBB173_16:
	move	$a2, $a5
	move	$a1, $s3
	.p2align	4, , 16
.LBB173_17:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a3, $a2, 0
	st.h	$a3, $a1, 0
	addi.d	$a2, $a2, 2
	addi.d	$a1, $a1, 2
	bne	$a2, $a0, .LBB173_17
.LBB173_18:                             # %.loopexit
	ld.d	$a0, $s0, 80
	ld.d	$a2, $s0, 72
	st.d	$a1, $fp, 56
	sub.d	$s5, $a0, $a2
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	st.d	$zero, $fp, 88
	beq	$a0, $a2, .LBB173_21
# %bb.19:                               # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp1366:                              # EH_LABEL
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1367:                              # EH_LABEL
# %bb.20:
	move	$s4, $a0
	b	.LBB173_22
.LBB173_21:
	move	$s4, $zero
.LBB173_22:                             # %.noexc14
	st.d	$s4, $fp, 72
	st.d	$s4, $fp, 80
	add.d	$a0, $s4, $s5
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s1, $a0, .LBB173_24
# %bb.23:
	move	$a0, $s4
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s4, $s4, $s1
.LBB173_24:
	st.d	$s4, $fp, 80
	ld.d	$a0, $s0, 96
	st.d	$a0, $fp, 96
	vld	$vr0, $s0, 104
	vst	$vr0, $fp, 104
	xvld	$xr0, $s0, 120
	xvst	$xr0, $fp, 120
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB173_25:
.Ltmp1368:                              # EH_LABEL
	move	$s0, $a0
	beqz	$s3, .LBB173_28
# %bb.26:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB173_28
.LBB173_27:
.Ltmp1365:                              # EH_LABEL
	move	$s0, $a0
.LBB173_28:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB173_30
.LBB173_29:
.Ltmp1362:                              # EH_LABEL
	move	$s0, $a0
.LBB173_30:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB173_32
# %bb.31:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB173_32:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end173:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_, .Lfunc_end173-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table173:
.Lexception72:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end72-.Lcst_begin72
.Lcst_begin72:
	.uleb128 .Lfunc_begin72-.Lfunc_begin72  # >> Call Site 1 <<
	.uleb128 .Ltmp1360-.Lfunc_begin72       #   Call between .Lfunc_begin72 and .Ltmp1360
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1360-.Lfunc_begin72       # >> Call Site 2 <<
	.uleb128 .Ltmp1361-.Ltmp1360            #   Call between .Ltmp1360 and .Ltmp1361
	.uleb128 .Ltmp1362-.Lfunc_begin72       #     jumps to .Ltmp1362
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1363-.Lfunc_begin72       # >> Call Site 3 <<
	.uleb128 .Ltmp1364-.Ltmp1363            #   Call between .Ltmp1363 and .Ltmp1364
	.uleb128 .Ltmp1365-.Lfunc_begin72       #     jumps to .Ltmp1365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1366-.Lfunc_begin72       # >> Call Site 4 <<
	.uleb128 .Ltmp1367-.Ltmp1366            #   Call between .Ltmp1366 and .Ltmp1367
	.uleb128 .Ltmp1368-.Lfunc_begin72       #     jumps to .Ltmp1368
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1367-.Lfunc_begin72       # >> Call Site 5 <<
	.uleb128 .Lfunc_end173-.Ltmp1367        #   Call between .Ltmp1367 and .Lfunc_end173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end72:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.hidden	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.p2align	2
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
.Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception73
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s1, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB174_2
# %bb.1:                                # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	b	.LBB174_3
.LBB174_2:
	move	$s0, $zero
.LBB174_3:
	st.d	$s0, $fp, 0
	st.d	$s0, $fp, 8
	add.d	$a0, $s0, $s2
	st.d	$a0, $fp, 16
	ld.d	$s2, $s1, 0
	ld.d	$s3, $s1, 8
	st.d	$s0, $sp, 32
	st.d	$s0, $sp, 16
	addi.d	$a0, $sp, 32
	st.d	$a0, $sp, 24
	beq	$s2, $s3, .LBB174_13
# %bb.4:                                # %.lr.ph.i.i.i.preheader
	ori	$s4, $zero, 16
	addi.w	$s5, $zero, -1
	b	.LBB174_7
	.p2align	4, , 16
.LBB174_5:                              #   in Loop: Header=BB174_7 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB174_6:                              #   in Loop: Header=BB174_7 Depth=1
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 32
	st.d	$a0, $s0, 8
	addi.d	$s2, $s2, 32
	addi.d	$s0, $a1, 32
	st.d	$s0, $sp, 32
	beq	$s2, $s3, .LBB174_13
.LBB174_7:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s2, 8
	ld.d	$s1, $s2, 0
	st.d	$a1, $sp, 40
	bltu	$a1, $s4, .LBB174_10
# %bb.8:                                # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB174_7 Depth=1
.Ltmp1369:                              # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1370:                              # EH_LABEL
# %bb.9:                                # %.noexc.i.i.i
                                        #   in Loop: Header=BB174_7 Depth=1
	ld.d	$a1, $sp, 40
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB174_10:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB174_7 Depth=1
	beq	$a1, $s5, .LBB174_6
# %bb.11:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB174_7 Depth=1
	bnez	$a1, .LBB174_5
# %bb.12:                               #   in Loop: Header=BB174_7 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB174_6
.LBB174_13:                             # %.loopexit
	st.d	$s0, $fp, 8
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB174_14:                             # %.body
.Ltmp1371:                              # EH_LABEL
	move	$s0, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB174_16
# %bb.15:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB174_16:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end174:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_, .Lfunc_end174-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.p2align	2, 0x0
GCC_except_table174:
.Lexception73:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end73-.Lcst_begin73
.Lcst_begin73:
	.uleb128 .Lfunc_begin73-.Lfunc_begin73  # >> Call Site 1 <<
	.uleb128 .Ltmp1369-.Lfunc_begin73       #   Call between .Lfunc_begin73 and .Ltmp1369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1369-.Lfunc_begin73       # >> Call Site 2 <<
	.uleb128 .Ltmp1370-.Ltmp1369            #   Call between .Ltmp1369 and .Ltmp1370
	.uleb128 .Ltmp1371-.Lfunc_begin73       #     jumps to .Ltmp1371
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1370-.Lfunc_begin73       # >> Call Site 3 <<
	.uleb128 .Lfunc_end174-.Ltmp1370        #   Call between .Ltmp1370 and .Lfunc_end174
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end73:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.hidden	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.weak	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.p2align	2
	.type	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,@function
_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev: # @_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
.Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception74
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB175_2
.LBB175_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB175_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp1372:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_)
	jirl	$ra, $ra, 0
.Ltmp1373:                              # EH_LABEL
	b	.LBB175_1
.LBB175_3:
.Ltmp1374:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end175:
	.size	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev, .Lfunc_end175-_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table175:
.Lexception74:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase42-.Lttbaseref42
.Lttbaseref42:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end74-.Lcst_begin74
.Lcst_begin74:
	.uleb128 .Ltmp1372-.Lfunc_begin74       # >> Call Site 1 <<
	.uleb128 .Ltmp1373-.Ltmp1372            #   Call between .Ltmp1372 and .Ltmp1373
	.uleb128 .Ltmp1374-.Lfunc_begin74       #     jumps to .Ltmp1374
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1373-.Lfunc_begin74       # >> Call Site 2 <<
	.uleb128 .Lfunc_end175-.Ltmp1373        #   Call between .Ltmp1373 and .Lfunc_end175
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end74:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase42:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,"axG",@progbits,_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,comdat
	.weak	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ # -- Begin function _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.p2align	5
	.type	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,@function
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_: # @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB176_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	addi.d	$s0, $a0, 16
	b	.LBB176_3
	.p2align	4, , 16
.LBB176_2:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit
                                        #   in Loop: Header=BB176_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB176_5
.LBB176_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB176_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB176_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB176_2
.LBB176_5:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB176_6:                              # %._crit_edge
	ret
.Lfunc_end176:
	.size	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_, .Lfunc_end176-_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$a3, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 112
	move	$s0, $a2
	add.d	$a2, $a3, $a1
	move	$a1, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB177_17
# %bb.1:
	srli.d	$s5, $a0, 16
	beqz	$s0, .LBB177_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB177_5
# %bb.3:
	andi	$a1, $s5, 255
	bstrins.d	$a0, $a1, 63, 16
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB177_16
.LBB177_4:
	ld.hu	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a0, $a1, $a0
	or	$a1, $a2, $s5
	st.h	$a0, $fp, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB177_16
.LBB177_5:
	move	$s6, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB177_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	andi	$a0, $s5, 255
	bstrins.d	$s6, $a0, 63, 16
	stx.w	$s6, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB177_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 60
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB177_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 64
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB177_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 4
	slli.d	$a2, $a0, 4
	slli.d	$a0, $a0, 6
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 32
	addi.d	$a4, $s2, 32
	move	$a5, $a2
	.p2align	4, , 16
.LBB177_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a3, -32
	xvld	$xr1, $a3, 0
	xvst	$xr0, $a4, -32
	xvst	$xr1, $a4, 0
	addi.d	$a3, $a3, 64
	addi.d	$a5, $a5, -16
	addi.d	$a4, $a4, 64
	bnez	$a5, .LBB177_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB177_13
	.p2align	4, , 16
.LBB177_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB177_12
.LBB177_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB177_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB177_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB177_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB177_17:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB177_18:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end177:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end177-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB178_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB178_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB178_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB178_8
# %bb.4:                                #   in Loop: Header=BB178_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB178_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB178_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB178_8
.LBB178_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB178_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 128
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB178_10
	.p2align	4, , 16
.LBB178_9:                              #   in Loop: Header=BB178_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB178_12
.LBB178_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 120
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB178_9
# %bb.11:                               #   in Loop: Header=BB178_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB178_10
.LBB178_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB178_13:                             #   in Loop: Header=BB178_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB178_16
.LBB178_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB178_13
# %bb.15:                               #   in Loop: Header=BB178_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB178_13
.LBB178_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB178_7
	b	.LBB178_8
.Lfunc_end178:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv, .Lfunc_end178-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB179_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB179_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	ld.d	$s0, $fp, 56
	beq	$a0, $s0, .LBB179_10
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 48
	b	.LBB179_5
	.p2align	4, , 16
.LBB179_4:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit.i.i
                                        #   in Loop: Header=BB179_5 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 64
	beq	$a0, $s0, .LBB179_9
.LBB179_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB179_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB179_5 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB179_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i.i
                                        #   in Loop: Header=BB179_5 Depth=1
	ld.d	$a0, $s1, -48
	addi.d	$a1, $s1, -32
	beq	$a1, $a0, .LBB179_4
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i.i
                                        #   in Loop: Header=BB179_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB179_4
.LBB179_9:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 48
.LBB179_10:                             # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exit.i
	beqz	$a0, .LBB179_12
# %bb.11:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB179_12:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB179_18
# %bb.13:                               # %.lr.ph.i.i3.preheader
	addi.d	$s1, $a0, 16
	b	.LBB179_15
	.p2align	4, , 16
.LBB179_14:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB179_15 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB179_17
.LBB179_15:                             # %.lr.ph.i.i3
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB179_14
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB179_15 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB179_14
.LBB179_17:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB179_18:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB179_20
# %bb.19:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB179_20:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB179_22
# %bb.21:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB179_22:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end179:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev, .Lfunc_end179-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev,comdat
	.hidden	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev # -- Begin function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.weak	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.p2align	2
	.type	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev,@function
_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev: # @_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s0, $fp, 8
	beq	$a0, $s0, .LBB180_8
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$s1, $a0, 48
	b	.LBB180_3
	.p2align	4, , 16
.LBB180_2:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit.i
                                        #   in Loop: Header=BB180_3 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 64
	beq	$a0, $s0, .LBB180_7
.LBB180_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB180_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB180_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB180_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB180_3 Depth=1
	ld.d	$a0, $s1, -48
	addi.d	$a1, $s1, -32
	beq	$a1, $a0, .LBB180_2
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
                                        #   in Loop: Header=BB180_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB180_2
.LBB180_7:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exitthread-pre-split
	ld.d	$a0, $fp, 0
.LBB180_8:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exit
	beqz	$a0, .LBB180_10
# %bb.9:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB180_10:                             # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end180:
	.size	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev, .Lfunc_end180-_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_,"axG",@progbits,_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_,comdat
	.weak	_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_ # -- Begin function _ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_
	.p2align	5
	.type	_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_,@function
_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_: # @_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB181_8
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	addi.d	$s0, $a0, 48
	b	.LBB181_3
	.p2align	4, , 16
.LBB181_2:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit
                                        #   in Loop: Header=BB181_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 64
	beq	$a0, $fp, .LBB181_7
.LBB181_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB181_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB181_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB181_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i
                                        #   in Loop: Header=BB181_3 Depth=1
	ld.d	$a0, $s0, -48
	addi.d	$a1, $s0, -32
	beq	$a1, $a0, .LBB181_2
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i
                                        #   in Loop: Header=BB181_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB181_2
.LBB181_7:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB181_8:                              # %._crit_edge
	ret
.Lfunc_end181:
	.size	_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_, .Lfunc_end181-_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	2
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception75
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s3, $a0, 0
	ld.d	$a1, $s3, 0
	ld.d	$a0, $s3, 8
	ld.b	$a2, $fp, 8
	sub.d	$a3, $a0, $a1
	ori	$a4, $zero, 1
	blt	$a3, $a4, .LBB182_2
	.p2align	4, , 16
.LBB182_1:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a4, $a3, 1
	ldx.b	$a5, $a1, $a4
	add.d	$a6, $a1, $a4
	slt	$a5, $a5, $a2
	addi.d	$a6, $a6, 1
	nor	$a7, $a4, $zero
	add.d	$a3, $a3, $a7
	maskeqz	$a6, $a6, $a5
	masknez	$a1, $a1, $a5
	maskeqz	$a3, $a3, $a5
	masknez	$a4, $a4, $a5
	or	$a3, $a3, $a4
	or	$a1, $a6, $a1
	bgtz	$a3, .LBB182_1
.LBB182_2:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$a1, $a0, .LBB182_4
# %bb.3:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a0, $a1, 0
	ori	$s0, $zero, 1
	bge	$a2, $a0, .LBB182_22
.LBB182_4:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	addi.d	$s4, $sp, 56
	st.d	$s4, $sp, 40
	addi.d	$a0, $sp, 40
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 40
	ld.d	$a0, $sp, 48
	ld.d	$a1, $s3, 104
	add.d	$a3, $a2, $a0
.Ltmp1375:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1376:                              # EH_LABEL
# %bb.5:
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB182_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB182_7:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE12_M_transformEc.exit
	ld.d	$s2, $s3, 48
	ld.d	$s5, $s3, 56
	beq	$s2, $s5, .LBB182_18
# %bb.8:                                # %.lr.ph
	ld.d	$s6, $sp, 16
	ld.d	$s1, $sp, 8
	lu12i.w	$s7, -524288
	lu12i.w	$a0, 524287
	ori	$s8, $a0, 4095
	b	.LBB182_12
	.p2align	4, , 16
.LBB182_9:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i9.i
                                        #   in Loop: Header=BB182_12 Depth=1
	sub.d	$a0, $s6, $s0
	slt	$a1, $s7, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
.LBB182_10:                             # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE14_M_match_rangeERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEESB_SB_.exit
                                        #   in Loop: Header=BB182_12 Depth=1
	addi.w	$a0, $a0, 0
	ori	$s0, $zero, 1
	blt	$a0, $s0, .LBB182_20
.LBB182_11:                             # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE14_M_match_rangeERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEESB_SB_.exit.thread
                                        #   in Loop: Header=BB182_12 Depth=1
	addi.d	$s2, $s2, 64
	beq	$s2, $s5, .LBB182_18
.LBB182_12:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s0, $s2, 8
	sltu	$a0, $s6, $s0
	masknez	$a1, $s0, $a0
	maskeqz	$a0, $s6, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB182_15
# %bb.13:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB182_12 Depth=1
	ld.d	$a0, $s2, 0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB182_15
# %bb.14:                               # %_ZStleIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i
                                        #   in Loop: Header=BB182_12 Depth=1
	addi.w	$a0, $a0, 0
	bgtz	$a0, .LBB182_11
	b	.LBB182_16
	.p2align	4, , 16
.LBB182_15:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB182_12 Depth=1
	sub.d	$a0, $s0, $s6
	slt	$a1, $s7, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	bgtz	$a0, .LBB182_11
.LBB182_16:                             #   in Loop: Header=BB182_12 Depth=1
	ld.d	$s0, $s2, 40
	sltu	$a0, $s0, $s6
	masknez	$a1, $s6, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB182_9
# %bb.17:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i6.i
                                        #   in Loop: Header=BB182_12 Depth=1
	ld.d	$a1, $s2, 32
	move	$a0, $s1
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB182_10
	b	.LBB182_9
.LBB182_18:                             # %.critedge
	addi.d	$s1, $fp, 8
	ld.d	$s0, $s3, 112
	ld.bu	$s6, $s1, 0
	ld.w	$s7, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB182_49
# %bb.19:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s6, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s7, $a0
	ori	$s0, $zero, 1
	beqz	$a0, .LBB182_23
.LBB182_20:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB182_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i62
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB182_22:
	move	$a0, $s0
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB182_23:
	lu12i.w	$s5, 16
	and	$a0, $s7, $s5
	beqz	$a0, .LBB182_29
# %bb.24:
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB182_26
# %bb.25:
	ld.bu	$a0, $s2, 152
	b	.LBB182_28
.LBB182_26:
.Ltmp1378:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1379:                              # EH_LABEL
# %bb.27:                               # %.noexc44
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1380:                              # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1381:                              # EH_LABEL
.LBB182_28:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	andi	$a0, $a0, 255
	beq	$s6, $a0, .LBB182_20
.LBB182_29:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread78
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	beq	$a0, $a1, .LBB182_35
# %bb.30:
	ld.d	$a1, $s3, 112
	addi.d	$a3, $fp, 9
.Ltmp1382:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
.Ltmp1383:                              # EH_LABEL
# %bb.31:
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp1385:                              # EH_LABEL
	addi.d	$a2, $sp, 40
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp1386:                              # EH_LABEL
# %bb.32:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	ld.d	$s2, $s3, 32
	beq	$a0, $s4, .LBB182_34
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB182_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $fp, .LBB182_20
.LBB182_35:
	ld.d	$s4, $s3, 72
	ld.d	$s6, $s3, 80
	beq	$s4, $s6, .LBB182_46
# %bb.36:                               # %.lr.ph89.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB182_40
	.p2align	4, , 16
.LBB182_37:                             #   in Loop: Header=BB182_40 Depth=1
	ld.bu	$a0, $s2, 152
.LBB182_38:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61
                                        #   in Loop: Header=BB182_40 Depth=1
	andi	$a0, $a0, 255
	bne	$s7, $a0, .LBB182_20
.LBB182_39:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61.thread
                                        #   in Loop: Header=BB182_40 Depth=1
	addi.d	$s4, $s4, 4
	beq	$s4, $s6, .LBB182_46
.LBB182_40:                             # %.lr.ph89
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 112
	ld.bu	$s7, $s1, 0
	ld.w	$s8, $s4, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB182_47
# %bb.41:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i51
                                        #   in Loop: Header=BB182_40 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s7, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s8, $a0
	bnez	$a0, .LBB182_39
# %bb.42:                               #   in Loop: Header=BB182_40 Depth=1
	and	$a0, $s8, $s5
	beqz	$a0, .LBB182_20
# %bb.43:                               #   in Loop: Header=BB182_40 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB182_37
# %bb.44:                               #   in Loop: Header=BB182_40 Depth=1
.Ltmp1388:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1389:                              # EH_LABEL
# %bb.45:                               # %.noexc59
                                        #   in Loop: Header=BB182_40 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1390:                              # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1391:                              # EH_LABEL
	b	.LBB182_38
.LBB182_46:
	move	$s0, $zero
	b	.LBB182_20
.LBB182_47:
.Ltmp1393:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1394:                              # EH_LABEL
# %bb.48:                               # %.noexc58
.LBB182_49:
.Ltmp1396:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1397:                              # EH_LABEL
# %bb.50:                               # %.noexc
.LBB182_51:
.Ltmp1387:                              # EH_LABEL
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s4, .LBB182_60
# %bb.52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB182_60
.LBB182_53:
.Ltmp1384:                              # EH_LABEL
	b	.LBB182_59
.LBB182_54:                             # %.loopexit
.Ltmp1392:                              # EH_LABEL
	b	.LBB182_59
.LBB182_55:
.Ltmp1398:                              # EH_LABEL
	b	.LBB182_59
.LBB182_56:
.Ltmp1377:                              # EH_LABEL
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s4, .LBB182_63
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB182_62
.LBB182_58:                             # %.loopexit.split-lp
.Ltmp1395:                              # EH_LABEL
.LBB182_59:
	move	$fp, $a0
.LBB182_60:
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB182_63
# %bb.61:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i65
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
.LBB182_62:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB182_63:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end182:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end182-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table182:
.Lexception75:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end75-.Lcst_begin75
.Lcst_begin75:
	.uleb128 .Lfunc_begin75-.Lfunc_begin75  # >> Call Site 1 <<
	.uleb128 .Ltmp1375-.Lfunc_begin75       #   Call between .Lfunc_begin75 and .Ltmp1375
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1375-.Lfunc_begin75       # >> Call Site 2 <<
	.uleb128 .Ltmp1376-.Ltmp1375            #   Call between .Ltmp1375 and .Ltmp1376
	.uleb128 .Ltmp1377-.Lfunc_begin75       #     jumps to .Ltmp1377
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1376-.Lfunc_begin75       # >> Call Site 3 <<
	.uleb128 .Ltmp1378-.Ltmp1376            #   Call between .Ltmp1376 and .Ltmp1378
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1378-.Lfunc_begin75       # >> Call Site 4 <<
	.uleb128 .Ltmp1381-.Ltmp1378            #   Call between .Ltmp1378 and .Ltmp1381
	.uleb128 .Ltmp1398-.Lfunc_begin75       #     jumps to .Ltmp1398
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1382-.Lfunc_begin75       # >> Call Site 5 <<
	.uleb128 .Ltmp1383-.Ltmp1382            #   Call between .Ltmp1382 and .Ltmp1383
	.uleb128 .Ltmp1384-.Lfunc_begin75       #     jumps to .Ltmp1384
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1385-.Lfunc_begin75       # >> Call Site 6 <<
	.uleb128 .Ltmp1386-.Ltmp1385            #   Call between .Ltmp1385 and .Ltmp1386
	.uleb128 .Ltmp1387-.Lfunc_begin75       #     jumps to .Ltmp1387
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1386-.Lfunc_begin75       # >> Call Site 7 <<
	.uleb128 .Ltmp1388-.Ltmp1386            #   Call between .Ltmp1386 and .Ltmp1388
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1388-.Lfunc_begin75       # >> Call Site 8 <<
	.uleb128 .Ltmp1391-.Ltmp1388            #   Call between .Ltmp1388 and .Ltmp1391
	.uleb128 .Ltmp1392-.Lfunc_begin75       #     jumps to .Ltmp1392
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1393-.Lfunc_begin75       # >> Call Site 9 <<
	.uleb128 .Ltmp1394-.Ltmp1393            #   Call between .Ltmp1393 and .Ltmp1394
	.uleb128 .Ltmp1395-.Lfunc_begin75       #     jumps to .Ltmp1395
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1396-.Lfunc_begin75       # >> Call Site 10 <<
	.uleb128 .Ltmp1397-.Ltmp1396            #   Call between .Ltmp1396 and .Ltmp1397
	.uleb128 .Ltmp1398-.Lfunc_begin75       #     jumps to .Ltmp1398
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1397-.Lfunc_begin75       # >> Call Site 11 <<
	.uleb128 .Lfunc_end182-.Ltmp1397        #   Call between .Ltmp1397 and .Lfunc_end182
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end75:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,comdat
	.hidden	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
	.weak	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
	.p2align	2
	.type	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,@function
_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_: # @_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
.Lfunc_begin76:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception76
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s2, $a3
	move	$s1, $a2
	move	$s0, $a1
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx117collateIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx117collateIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB183_11
# %bb.1:                                # %_ZSt9use_facetINSt7__cxx117collateIcEEERKT_RKSt6locale.exit
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	st.d	$zero, $sp, 16
	sub.d	$s2, $s2, $s1
	ori	$a1, $zero, 16
	st.d	$s2, $sp, 40
	move	$a0, $s3
	bltu	$s2, $a1, .LBB183_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB183_3:                              # %._crit_edge.i.i
	beqz	$s2, .LBB183_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB183_6
# %bb.5:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB183_7
.LBB183_6:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB183_7:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	ld.d	$a3, $s0, 0
	stx.b	$zero, $a1, $a0
	ld.d	$a2, $sp, 8
	ld.d	$a0, $sp, 16
	ld.d	$a4, $a3, 24
	add.d	$a3, $a2, $a0
.Ltmp1399:                              # EH_LABEL
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a4, 0
.Ltmp1400:                              # EH_LABEL
# %bb.8:                                # %_ZNKSt7__cxx117collateIcE9transformEPKcS3_.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB183_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB183_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB183_11:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB183_12:
.Ltmp1401:                              # EH_LABEL
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s3, .LBB183_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB183_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end183:
	.size	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_, .Lfunc_end183-_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,comdat
	.p2align	2, 0x0
GCC_except_table183:
.Lexception76:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end76-.Lcst_begin76
.Lcst_begin76:
	.uleb128 .Lfunc_begin76-.Lfunc_begin76  # >> Call Site 1 <<
	.uleb128 .Ltmp1399-.Lfunc_begin76       #   Call between .Lfunc_begin76 and .Ltmp1399
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1399-.Lfunc_begin76       # >> Call Site 2 <<
	.uleb128 .Ltmp1400-.Ltmp1399            #   Call between .Ltmp1399 and .Ltmp1400
	.uleb128 .Ltmp1401-.Lfunc_begin76       #     jumps to .Ltmp1401
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1400-.Lfunc_begin76       # >> Call Site 3 <<
	.uleb128 .Lfunc_end183-.Ltmp1400        #   Call between .Ltmp1400 and .Lfunc_end183
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end76:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 128
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end184:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end184-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin77:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception77
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB185_9
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI185_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI185_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB185_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
	b	.LBB185_8
.LBB185_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp1402:                              # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1403:                              # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB185_9
.LBB185_5:
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB185_9
# %bb.6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB185_9
.LBB185_7:
	ld.d	$a1, $a1, 0
.LBB185_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB185_9:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB185_10:
.Ltmp1404:                              # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end185:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end185-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI185_0:
	.word	.LBB185_2-.LJTI185_0
	.word	.LBB185_7-.LJTI185_0
	.word	.LBB185_3-.LJTI185_0
	.word	.LBB185_5-.LJTI185_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table185:
.Lexception77:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end77-.Lcst_begin77
.Lcst_begin77:
	.uleb128 .Lfunc_begin77-.Lfunc_begin77  # >> Call Site 1 <<
	.uleb128 .Ltmp1402-.Lfunc_begin77       #   Call between .Lfunc_begin77 and .Ltmp1402
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1402-.Lfunc_begin77       # >> Call Site 2 <<
	.uleb128 .Ltmp1403-.Ltmp1402            #   Call between .Ltmp1402 and .Ltmp1403
	.uleb128 .Ltmp1404-.Lfunc_begin77       #     jumps to .Ltmp1404
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1403-.Lfunc_begin77       # >> Call Site 3 <<
	.uleb128 .Lfunc_end185-.Ltmp1403        #   Call between .Ltmp1403 and .Lfunc_end185
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end77:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
.Lfunc_begin78:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception78
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB186_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB186_3
.LBB186_2:
	move	$s1, $zero
.LBB186_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s2, $a0, .LBB186_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB186_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp1405:                              # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1406:                              # EH_LABEL
# %bb.6:
	addi.d	$s3, $fp, 48
	addi.d	$a1, $s0, 48
.Ltmp1408:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_)
	jirl	$ra, $ra, 0
.Ltmp1409:                              # EH_LABEL
# %bb.7:
	ld.d	$a0, $s0, 80
	ld.d	$a1, $s0, 72
	sub.d	$s4, $a0, $a1
	st.d	$zero, $fp, 88
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	beq	$a0, $a1, .LBB186_10
# %bb.8:                                # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp1411:                              # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1412:                              # EH_LABEL
# %bb.9:
	move	$s2, $a0
	b	.LBB186_11
.LBB186_10:
	move	$s2, $zero
.LBB186_11:                             # %.noexc
	st.d	$s2, $fp, 72
	st.d	$s2, $fp, 80
	add.d	$a0, $s2, $s4
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s1, $a0, .LBB186_13
# %bb.12:
	move	$a0, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s2, $s2, $s1
.LBB186_13:
	st.d	$s2, $fp, 80
	xvld	$xr0, $s0, 96
	xvst	$xr0, $fp, 96
	xvld	$xr0, $s0, 128
	xvst	$xr0, $fp, 128
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB186_14:
.Ltmp1413:                              # EH_LABEL
	move	$s0, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB186_16
.LBB186_15:
.Ltmp1410:                              # EH_LABEL
	move	$s0, $a0
.LBB186_16:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB186_18
.LBB186_17:
.Ltmp1407:                              # EH_LABEL
	move	$s0, $a0
.LBB186_18:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB186_20
# %bb.19:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB186_20:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end186:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_, .Lfunc_end186-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table186:
.Lexception78:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end78-.Lcst_begin78
.Lcst_begin78:
	.uleb128 .Lfunc_begin78-.Lfunc_begin78  # >> Call Site 1 <<
	.uleb128 .Ltmp1405-.Lfunc_begin78       #   Call between .Lfunc_begin78 and .Ltmp1405
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1405-.Lfunc_begin78       # >> Call Site 2 <<
	.uleb128 .Ltmp1406-.Ltmp1405            #   Call between .Ltmp1405 and .Ltmp1406
	.uleb128 .Ltmp1407-.Lfunc_begin78       #     jumps to .Ltmp1407
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1408-.Lfunc_begin78       # >> Call Site 3 <<
	.uleb128 .Ltmp1409-.Ltmp1408            #   Call between .Ltmp1408 and .Ltmp1409
	.uleb128 .Ltmp1410-.Lfunc_begin78       #     jumps to .Ltmp1410
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1411-.Lfunc_begin78       # >> Call Site 4 <<
	.uleb128 .Ltmp1412-.Ltmp1411            #   Call between .Ltmp1411 and .Ltmp1412
	.uleb128 .Ltmp1413-.Lfunc_begin78       #     jumps to .Ltmp1413
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1412-.Lfunc_begin78       # >> Call Site 5 <<
	.uleb128 .Lfunc_end186-.Ltmp1412        #   Call between .Ltmp1412 and .Lfunc_end186
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end78:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,"axG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,comdat
	.hidden	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_ # -- Begin function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
	.weak	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
	.p2align	2
	.type	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,@function
_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_: # @_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
.Lfunc_begin79:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception79
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s1, 0
	move	$fp, $a0
	sub.d	$s0, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB187_2
# %bb.1:                                # %_ZNSt15__new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE8allocateEmPKv.exit.i.i.i
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	b	.LBB187_3
.LBB187_2:
	move	$a0, $zero
.LBB187_3:
	st.d	$a0, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a1, $a0, $s0
	st.d	$a1, $fp, 16
	ld.d	$s0, $s1, 0
	ld.d	$s1, $s1, 8
	st.d	$a0, $sp, 24
	st.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	st.d	$a1, $sp, 16
	beq	$s0, $s1, .LBB187_6
	.p2align	4, , 16
.LBB187_4:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1414:                              # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_)
	jirl	$ra, $ra, 0
.Ltmp1415:                              # EH_LABEL
# %bb.5:                                # %_ZSt10_ConstructISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EJRKS7_EEvPT_DpOT0_.exit.i.i.i
                                        #   in Loop: Header=BB187_4 Depth=1
	ld.d	$a0, $sp, 24
	addi.d	$s0, $s0, 64
	addi.d	$a0, $a0, 64
	st.d	$a0, $sp, 24
	bne	$s0, $s1, .LBB187_4
.LBB187_6:                              # %.loopexit
	st.d	$a0, $fp, 8
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB187_7:                              # %.body
.Ltmp1416:                              # EH_LABEL
	move	$s0, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB187_9
# %bb.8:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB187_9:                              # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end187:
	.size	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_, .Lfunc_end187-_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,"aG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,comdat
	.p2align	2, 0x0
GCC_except_table187:
.Lexception79:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end79-.Lcst_begin79
.Lcst_begin79:
	.uleb128 .Lfunc_begin79-.Lfunc_begin79  # >> Call Site 1 <<
	.uleb128 .Ltmp1414-.Lfunc_begin79       #   Call between .Lfunc_begin79 and .Ltmp1414
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1414-.Lfunc_begin79       # >> Call Site 2 <<
	.uleb128 .Ltmp1415-.Ltmp1414            #   Call between .Ltmp1414 and .Ltmp1415
	.uleb128 .Ltmp1416-.Lfunc_begin79       #     jumps to .Ltmp1416
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1415-.Lfunc_begin79       # >> Call Site 3 <<
	.uleb128 .Lfunc_end187-.Ltmp1415        #   Call between .Ltmp1415 and .Lfunc_end187
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end79:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,comdat
	.hidden	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
	.weak	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
	.p2align	2
	.type	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,@function
_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev: # @_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
.Lfunc_begin80:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception80
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB188_2
.LBB188_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB188_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp1417:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_)
	jirl	$ra, $ra, 0
.Ltmp1418:                              # EH_LABEL
	b	.LBB188_1
.LBB188_3:
.Ltmp1419:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end188:
	.size	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev, .Lfunc_end188-_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table188:
.Lexception80:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase43-.Lttbaseref43
.Lttbaseref43:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end80-.Lcst_begin80
.Lcst_begin80:
	.uleb128 .Ltmp1417-.Lfunc_begin80       # >> Call Site 1 <<
	.uleb128 .Ltmp1418-.Ltmp1417            #   Call between .Ltmp1417 and .Ltmp1418
	.uleb128 .Ltmp1419-.Lfunc_begin80       #     jumps to .Ltmp1419
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1418-.Lfunc_begin80       # >> Call Site 2 <<
	.uleb128 .Lfunc_end188-.Ltmp1418        #   Call between .Ltmp1418 and .Lfunc_end188
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end80:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase43:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$a4, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 112
	move	$s0, $a2
	add.d	$a2, $a4, $a1
	ori	$a3, $zero, 1
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB189_17
# %bb.1:
	srli.d	$s5, $a0, 16
	beqz	$s0, .LBB189_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB189_5
# %bb.3:
	andi	$a1, $s5, 255
	bstrins.d	$a0, $a1, 63, 16
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB189_16
.LBB189_4:
	ld.hu	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a0, $a1, $a0
	or	$a1, $a2, $s5
	st.h	$a0, $fp, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB189_16
.LBB189_5:
	move	$s6, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB189_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	andi	$a0, $s5, 255
	bstrins.d	$s6, $a0, 63, 16
	stx.w	$s6, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB189_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 60
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB189_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 64
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB189_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 4
	slli.d	$a2, $a0, 4
	slli.d	$a0, $a0, 6
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 32
	addi.d	$a4, $s2, 32
	move	$a5, $a2
	.p2align	4, , 16
.LBB189_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a3, -32
	xvld	$xr1, $a3, 0
	xvst	$xr0, $a4, -32
	xvst	$xr1, $a4, 0
	addi.d	$a3, $a3, 64
	addi.d	$a5, $a5, -16
	addi.d	$a4, $a4, 64
	bnez	$a5, .LBB189_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB189_13
	.p2align	4, , 16
.LBB189_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB189_12
.LBB189_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB189_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB189_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB189_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB189_17:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB189_18:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end189:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end189-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB190_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB190_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB190_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB190_8
# %bb.4:                                #   in Loop: Header=BB190_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB190_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB190_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB190_8
.LBB190_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB190_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 128
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB190_10
	.p2align	4, , 16
.LBB190_9:                              #   in Loop: Header=BB190_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB190_12
.LBB190_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 120
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB190_9
# %bb.11:                               #   in Loop: Header=BB190_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB190_10
.LBB190_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB190_13:                             #   in Loop: Header=BB190_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB190_16
.LBB190_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB190_13
# %bb.15:                               #   in Loop: Header=BB190_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB190_13
.LBB190_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB190_7
	b	.LBB190_8
.Lfunc_end190:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv, .Lfunc_end190-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB191_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB191_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB191_4
# %bb.3:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB191_4:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB191_10
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB191_7
	.p2align	4, , 16
.LBB191_6:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB191_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB191_9
.LBB191_7:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB191_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB191_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB191_6
.LBB191_9:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB191_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB191_12
# %bb.11:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB191_12:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB191_14
# %bb.13:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB191_14:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end191:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev, .Lfunc_end191-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	2
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin81:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception81
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ld.d	$s3, $a0, 0
	ld.d	$s2, $s3, 0
	ld.d	$s1, $s3, 8
	ld.b	$fp, $a0, 8
	ld.d	$s4, $s3, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s4, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB192_33
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	sub.d	$a1, $s1, $s2
	ori	$a2, $zero, 1
	blt	$a1, $a2, .LBB192_3
	.p2align	4, , 16
.LBB192_2:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a2, $a1, 1
	ldx.b	$a3, $s2, $a2
	add.d	$a4, $s2, $a2
	slt	$a3, $a3, $a0
	addi.d	$a4, $a4, 1
	nor	$a5, $a2, $zero
	add.d	$a1, $a1, $a5
	maskeqz	$a4, $a4, $a3
	masknez	$a5, $s2, $a3
	maskeqz	$a1, $a1, $a3
	masknez	$a2, $a2, $a3
	or	$a1, $a1, $a2
	or	$s2, $a4, $a5
	bgtz	$a1, .LBB192_2
.LBB192_3:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$s2, $s1, .LBB192_5
# %bb.4:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a1, $s2, 0
	ori	$s1, $zero, 1
	bge	$a0, $a1, .LBB192_32
.LBB192_5:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	addi.d	$fp, $s0, 8
	ld.d	$s4, $s3, 48
	ld.d	$s5, $s3, 56
	ld.b	$s1, $fp, 0
	beq	$s4, $s5, .LBB192_10
# %bb.6:
	addi.d	$s2, $s3, 104
	.p2align	4, , 16
.LBB192_7:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a1, $s4, 0
	ld.b	$a2, $s4, 1
	move	$a0, $s2
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB192_15
# %bb.8:                                #   in Loop: Header=BB192_7 Depth=1
	addi.d	$s4, $s4, 2
	bne	$s4, $s5, .LBB192_7
# %bb.9:                                # %.critedge.loopexit
	ld.bu	$s1, $fp, 0
.LBB192_10:                             # %.critedge
	ld.d	$s2, $s3, 112
	ld.w	$s6, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB192_33
# %bb.11:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s2, 48
	andi	$s5, $s1, 255
	slli.d	$a1, $s5, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s6, $a0
	ori	$s1, $zero, 1
	bnez	$a0, .LBB192_32
# %bb.12:
	lu12i.w	$s4, 16
	and	$a0, $s6, $s4
	beqz	$a0, .LBB192_17
# %bb.13:
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB192_16
# %bb.14:
	ld.bu	$a0, $s2, 152
	andi	$a0, $a0, 255
	bne	$s5, $a0, .LBB192_17
	b	.LBB192_32
.LBB192_15:
	ori	$s1, $zero, 1
	b	.LBB192_32
.LBB192_16:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	beq	$s5, $a0, .LBB192_32
.LBB192_17:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread60
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	beq	$a0, $a1, .LBB192_22
# %bb.18:
	ld.d	$a1, $s3, 112
	addi.d	$a3, $s0, 9
	addi.d	$a0, $sp, 8
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp1420:                              # EH_LABEL
	addi.d	$a2, $sp, 8
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp1421:                              # EH_LABEL
# %bb.19:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$s0, $a0
	ld.d	$a0, $sp, 8
	ld.d	$s2, $s3, 32
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB192_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB192_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $s0, .LBB192_32
.LBB192_22:
	ld.d	$s5, $s3, 72
	ld.d	$s6, $s3, 80
	beq	$s5, $s6, .LBB192_31
# %bb.23:                               # %.lr.ph71.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB192_25
	.p2align	4, , 16
.LBB192_24:                             #   in Loop: Header=BB192_25 Depth=1
	ld.bu	$a0, $s2, 152
	andi	$a0, $a0, 255
	beq	$s7, $a0, .LBB192_27
	b	.LBB192_32
	.p2align	4, , 16
.LBB192_25:                             # %.lr.ph71
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 112
	ld.bu	$s7, $fp, 0
	ld.w	$s8, $s5, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB192_33
# %bb.26:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i42
                                        #   in Loop: Header=BB192_25 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s7, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s8, $a0
	beqz	$a0, .LBB192_28
.LBB192_27:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit49.thread
                                        #   in Loop: Header=BB192_25 Depth=1
	addi.d	$s5, $s5, 4
	bne	$s5, $s6, .LBB192_25
	b	.LBB192_31
	.p2align	4, , 16
.LBB192_28:                             #   in Loop: Header=BB192_25 Depth=1
	and	$a0, $s8, $s4
	beqz	$a0, .LBB192_32
# %bb.29:                               #   in Loop: Header=BB192_25 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB192_24
# %bb.30:                               #   in Loop: Header=BB192_25 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	beq	$s7, $a0, .LBB192_27
	b	.LBB192_32
.LBB192_31:
	move	$s1, $zero
.LBB192_32:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	move	$a0, $s1
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB192_33:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB192_34:
.Ltmp1422:                              # EH_LABEL
	ld.d	$a2, $sp, 8
	addi.d	$a1, $sp, 24
	move	$fp, $a0
	beq	$a2, $a1, .LBB192_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB192_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end192:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end192-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table192:
.Lexception81:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end81-.Lcst_begin81
.Lcst_begin81:
	.uleb128 .Lfunc_begin81-.Lfunc_begin81  # >> Call Site 1 <<
	.uleb128 .Ltmp1420-.Lfunc_begin81       #   Call between .Lfunc_begin81 and .Ltmp1420
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1420-.Lfunc_begin81       # >> Call Site 2 <<
	.uleb128 .Ltmp1421-.Ltmp1420            #   Call between .Ltmp1420 and .Ltmp1421
	.uleb128 .Ltmp1422-.Lfunc_begin81       #     jumps to .Ltmp1422
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1421-.Lfunc_begin81       # >> Call Site 3 <<
	.uleb128 .Lfunc_end192-.Ltmp1421        #   Call between .Ltmp1421 and .Lfunc_end192
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end81:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
	.p2align	2
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
.Lfunc_begin82:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception82
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$a4, $a0, 0
	move	$s1, $a3
	move	$fp, $a2
	move	$s0, $a1
	addi.d	$a0, $sp, 8
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB193_5
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 32
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s2, 0
	ld.d	$a2, $a1, 16
	move	$s3, $a0
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	blt	$s3, $s0, .LBB193_3
# %bb.2:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	ori	$a1, $zero, 1
	bge	$fp, $s3, .LBB193_4
.LBB193_3:
	slt	$a1, $a0, $s0
	xori	$a1, $a1, 1
	slt	$a0, $fp, $a0
	xori	$a0, $a0, 1
	and	$a1, $a1, $a0
.LBB193_4:
	move	$a0, $a1
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB193_5:
.Ltmp1423:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1424:                              # EH_LABEL
# %bb.6:                                # %.noexc
.LBB193_7:
.Ltmp1425:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end193:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc, .Lfunc_end193-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,"aG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,comdat
	.p2align	2, 0x0
GCC_except_table193:
.Lexception82:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end82-.Lcst_begin82
.Lcst_begin82:
	.uleb128 .Lfunc_begin82-.Lfunc_begin82  # >> Call Site 1 <<
	.uleb128 .Ltmp1423-.Lfunc_begin82       #   Call between .Lfunc_begin82 and .Ltmp1423
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1423-.Lfunc_begin82       # >> Call Site 2 <<
	.uleb128 .Ltmp1424-.Ltmp1423            #   Call between .Ltmp1423 and .Ltmp1424
	.uleb128 .Ltmp1425-.Lfunc_begin82       #     jumps to .Ltmp1425
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1424-.Lfunc_begin82       # >> Call Site 3 <<
	.uleb128 .Lfunc_end193-.Ltmp1424        #   Call between .Ltmp1424 and .Lfunc_end193
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end82:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 128
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end194:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end194-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin83:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception83
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB195_8
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI195_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI195_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB195_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
	b	.LBB195_7
.LBB195_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp1426:                              # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1427:                              # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB195_8
.LBB195_5:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
	b	.LBB195_8
.LBB195_6:
	ld.d	$a1, $a1, 0
.LBB195_7:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB195_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB195_9:
.Ltmp1428:                              # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end195:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end195-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI195_0:
	.word	.LBB195_2-.LJTI195_0
	.word	.LBB195_6-.LJTI195_0
	.word	.LBB195_3-.LJTI195_0
	.word	.LBB195_5-.LJTI195_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table195:
.Lexception83:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end83-.Lcst_begin83
.Lcst_begin83:
	.uleb128 .Lfunc_begin83-.Lfunc_begin83  # >> Call Site 1 <<
	.uleb128 .Ltmp1426-.Lfunc_begin83       #   Call between .Lfunc_begin83 and .Ltmp1426
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1426-.Lfunc_begin83       # >> Call Site 2 <<
	.uleb128 .Ltmp1427-.Ltmp1426            #   Call between .Ltmp1426 and .Ltmp1427
	.uleb128 .Ltmp1428-.Lfunc_begin83       #     jumps to .Ltmp1428
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1427-.Lfunc_begin83       # >> Call Site 3 <<
	.uleb128 .Lfunc_end195-.Ltmp1427        #   Call between .Ltmp1427 and .Lfunc_end195
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end83:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,"axG",@progbits,_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,comdat
	.hidden	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE # -- Begin function _ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.weak	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.p2align	2
	.type	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,@function
_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE: # @_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB196_16
# %bb.1:
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB196_3
# %bb.2:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_3:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB196_5
# %bb.4:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_5:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB196_11
# %bb.6:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB196_8
	.p2align	4, , 16
.LBB196_7:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB196_8 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB196_10
.LBB196_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB196_7
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB196_8 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB196_7
.LBB196_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 24
.LBB196_11:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB196_13
# %bb.12:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_13:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB196_15
# %bb.14:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_15:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev.exit
	ori	$a1, $zero, 160
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB196_16:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end196:
	.size	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE, .Lfunc_end196-_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
.Lfunc_begin84:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception84
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB197_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB197_3
.LBB197_2:
	move	$s1, $zero
.LBB197_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s2, $a0, .LBB197_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB197_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp1429:                              # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1430:                              # EH_LABEL
# %bb.6:
	ld.d	$a0, $s0, 56
	ld.d	$a1, $s0, 48
	sub.d	$s2, $a0, $a1
	st.d	$zero, $fp, 64
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 48
	beq	$a0, $a1, .LBB197_9
# %bb.7:                                # %_ZNSt15__new_allocatorISt4pairIccEE8allocateEmPKv.exit.i.i.i.i
.Ltmp1432:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1433:                              # EH_LABEL
# %bb.8:
	move	$s3, $a0
	b	.LBB197_10
.LBB197_9:
	move	$s3, $zero
.LBB197_10:                             # %.noexc
	st.d	$s3, $fp, 48
	st.d	$s3, $fp, 56
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 64
	ld.d	$a5, $s0, 48
	ld.d	$a0, $s0, 56
	move	$a1, $s3
	beq	$a5, $a0, .LBB197_18
# %bb.11:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a1, $a0, $a5
	addi.d	$a1, $a1, -2
	ori	$a2, $zero, 62
	bltu	$a1, $a2, .LBB197_16
# %bb.12:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a2, $s3, $a5
	ori	$a3, $zero, 64
	bltu	$a2, $a3, .LBB197_16
# %bb.13:                               # %vector.ph
	srli.d	$a1, $a1, 1
	addi.d	$a3, $a1, 1
	move	$a4, $a3
	bstrins.d	$a4, $zero, 4, 0
	alsl.d	$a2, $a4, $a5, 1
	alsl.d	$a1, $a4, $s3, 1
	addi.d	$a6, $s3, 32
	addi.d	$a5, $a5, 32
	move	$a7, $a4
	.p2align	4, , 16
.LBB197_14:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a5, -32
	xvld	$xr1, $a5, 0
	xvst	$xr0, $a6, -32
	xvst	$xr1, $a6, 0
	addi.d	$a6, $a6, 64
	addi.d	$a7, $a7, -32
	addi.d	$a5, $a5, 64
	bnez	$a7, .LBB197_14
# %bb.15:                               # %middle.block
	bne	$a3, $a4, .LBB197_17
	b	.LBB197_18
.LBB197_16:
	move	$a2, $a5
	move	$a1, $s3
	.p2align	4, , 16
.LBB197_17:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a3, $a2, 0
	st.h	$a3, $a1, 0
	addi.d	$a2, $a2, 2
	addi.d	$a1, $a1, 2
	bne	$a2, $a0, .LBB197_17
.LBB197_18:                             # %.loopexit
	ld.d	$a0, $s0, 80
	ld.d	$a2, $s0, 72
	st.d	$a1, $fp, 56
	sub.d	$s5, $a0, $a2
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	st.d	$zero, $fp, 88
	beq	$a0, $a2, .LBB197_21
# %bb.19:                               # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp1435:                              # EH_LABEL
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1436:                              # EH_LABEL
# %bb.20:
	move	$s4, $a0
	b	.LBB197_22
.LBB197_21:
	move	$s4, $zero
.LBB197_22:                             # %.noexc14
	st.d	$s4, $fp, 72
	st.d	$s4, $fp, 80
	add.d	$a0, $s4, $s5
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s1, $a0, .LBB197_24
# %bb.23:
	move	$a0, $s4
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s4, $s4, $s1
.LBB197_24:
	st.d	$s4, $fp, 80
	xvld	$xr0, $s0, 96
	xvst	$xr0, $fp, 96
	xvld	$xr0, $s0, 128
	xvst	$xr0, $fp, 128
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB197_25:
.Ltmp1437:                              # EH_LABEL
	move	$s0, $a0
	beqz	$s3, .LBB197_28
# %bb.26:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB197_28
.LBB197_27:
.Ltmp1434:                              # EH_LABEL
	move	$s0, $a0
.LBB197_28:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB197_30
.LBB197_29:
.Ltmp1431:                              # EH_LABEL
	move	$s0, $a0
.LBB197_30:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB197_32
# %bb.31:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB197_32:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end197:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_, .Lfunc_end197-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table197:
.Lexception84:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end84-.Lcst_begin84
.Lcst_begin84:
	.uleb128 .Lfunc_begin84-.Lfunc_begin84  # >> Call Site 1 <<
	.uleb128 .Ltmp1429-.Lfunc_begin84       #   Call between .Lfunc_begin84 and .Ltmp1429
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1429-.Lfunc_begin84       # >> Call Site 2 <<
	.uleb128 .Ltmp1430-.Ltmp1429            #   Call between .Ltmp1429 and .Ltmp1430
	.uleb128 .Ltmp1431-.Lfunc_begin84       #     jumps to .Ltmp1431
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1432-.Lfunc_begin84       # >> Call Site 3 <<
	.uleb128 .Ltmp1433-.Ltmp1432            #   Call between .Ltmp1432 and .Ltmp1433
	.uleb128 .Ltmp1434-.Lfunc_begin84       #     jumps to .Ltmp1434
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1435-.Lfunc_begin84       # >> Call Site 4 <<
	.uleb128 .Ltmp1436-.Ltmp1435            #   Call between .Ltmp1435 and .Ltmp1436
	.uleb128 .Ltmp1437-.Lfunc_begin84       #     jumps to .Ltmp1437
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1436-.Lfunc_begin84       # >> Call Site 5 <<
	.uleb128 .Lfunc_end197-.Ltmp1436        #   Call between .Ltmp1436 and .Lfunc_end197
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end84:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$a4, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 112
	move	$s0, $a2
	add.d	$a2, $a4, $a1
	ori	$a3, $zero, 1
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB198_17
# %bb.1:
	srli.d	$s5, $a0, 16
	beqz	$s0, .LBB198_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB198_5
# %bb.3:
	andi	$a1, $s5, 255
	bstrins.d	$a0, $a1, 63, 16
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB198_16
.LBB198_4:
	ld.hu	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a0, $a1, $a0
	or	$a1, $a2, $s5
	st.h	$a0, $fp, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB198_16
.LBB198_5:
	move	$s6, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB198_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	andi	$a0, $s5, 255
	bstrins.d	$s6, $a0, 63, 16
	stx.w	$s6, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB198_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 60
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB198_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 64
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB198_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 4
	slli.d	$a2, $a0, 4
	slli.d	$a0, $a0, 6
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 32
	addi.d	$a4, $s2, 32
	move	$a5, $a2
	.p2align	4, , 16
.LBB198_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a3, -32
	xvld	$xr1, $a3, 0
	xvst	$xr0, $a4, -32
	xvst	$xr1, $a4, 0
	addi.d	$a3, $a3, 64
	addi.d	$a5, $a5, -16
	addi.d	$a4, $a4, 64
	bnez	$a5, .LBB198_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB198_13
	.p2align	4, , 16
.LBB198_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB198_12
.LBB198_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB198_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB198_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB198_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB198_17:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB198_18:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end198:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end198-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB199_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB199_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB199_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB199_8
# %bb.4:                                #   in Loop: Header=BB199_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB199_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB199_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB199_8
.LBB199_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB199_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 128
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB199_10
	.p2align	4, , 16
.LBB199_9:                              #   in Loop: Header=BB199_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB199_12
.LBB199_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 120
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB199_9
# %bb.11:                               #   in Loop: Header=BB199_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB199_10
.LBB199_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB199_13:                             #   in Loop: Header=BB199_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB199_16
.LBB199_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB199_13
# %bb.15:                               #   in Loop: Header=BB199_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB199_13
.LBB199_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB199_7
	b	.LBB199_8
.Lfunc_end199:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv, .Lfunc_end199-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB200_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB200_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	ld.d	$s0, $fp, 56
	beq	$a0, $s0, .LBB200_10
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 48
	b	.LBB200_5
	.p2align	4, , 16
.LBB200_4:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit.i.i
                                        #   in Loop: Header=BB200_5 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 64
	beq	$a0, $s0, .LBB200_9
.LBB200_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB200_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB200_5 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB200_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i.i
                                        #   in Loop: Header=BB200_5 Depth=1
	ld.d	$a0, $s1, -48
	addi.d	$a1, $s1, -32
	beq	$a1, $a0, .LBB200_4
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i.i
                                        #   in Loop: Header=BB200_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB200_4
.LBB200_9:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 48
.LBB200_10:                             # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exit.i
	beqz	$a0, .LBB200_12
# %bb.11:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB200_12:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB200_18
# %bb.13:                               # %.lr.ph.i.i3.preheader
	addi.d	$s1, $a0, 16
	b	.LBB200_15
	.p2align	4, , 16
.LBB200_14:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB200_15 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB200_17
.LBB200_15:                             # %.lr.ph.i.i3
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB200_14
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB200_15 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB200_14
.LBB200_17:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB200_18:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB200_20
# %bb.19:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB200_20:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB200_22
# %bb.21:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB200_22:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end200:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev, .Lfunc_end200-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	2
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin85:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception85
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ld.d	$s3, $a0, 0
	ld.d	$s2, $s3, 0
	ld.d	$s1, $s3, 8
	ld.b	$fp, $a0, 8
	ld.d	$s4, $s3, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s4, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB201_44
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	sub.d	$a1, $s1, $s2
	ori	$a2, $zero, 1
	blt	$a1, $a2, .LBB201_3
	.p2align	4, , 16
.LBB201_2:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a2, $a1, 1
	ldx.b	$a3, $s2, $a2
	add.d	$a4, $s2, $a2
	slt	$a3, $a3, $a0
	addi.d	$a4, $a4, 1
	nor	$a5, $a2, $zero
	add.d	$a1, $a1, $a5
	maskeqz	$a4, $a4, $a3
	masknez	$a5, $s2, $a3
	maskeqz	$a1, $a1, $a3
	masknez	$a2, $a2, $a3
	or	$a1, $a1, $a2
	or	$s2, $a4, $a5
	bgtz	$a1, .LBB201_2
.LBB201_3:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$s2, $s1, .LBB201_5
# %bb.4:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a1, $s2, 0
	ori	$s1, $zero, 1
	bge	$a0, $a1, .LBB201_41
.LBB201_5:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	addi.d	$fp, $s0, 8
	ld.b	$a2, $fp, 0
	addi.d	$s1, $s3, 104
	addi.d	$s4, $sp, 56
	st.d	$s4, $sp, 40
	addi.d	$a0, $sp, 40
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 40
	ld.d	$a0, $sp, 48
	ld.d	$a1, $s1, 0
	add.d	$a3, $a2, $a0
.Ltmp1438:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1439:                              # EH_LABEL
# %bb.6:
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB201_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB201_8:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_transformEc.exit
	ld.d	$s2, $s3, 48
	ld.d	$s5, $s3, 56
	beq	$s2, $s5, .LBB201_12
	.p2align	4, , 16
.LBB201_9:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $s2, 32
	ld.d	$a3, $sp, 8
	ld.b	$a1, $a0, 0
	ld.b	$a2, $a2, 0
	ld.b	$a3, $a3, 0
.Ltmp1441:                              # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc)
	jirl	$ra, $ra, 0
.Ltmp1442:                              # EH_LABEL
# %bb.10:                               # %_ZNKSt8__detail16_RegexTranslatorINSt7__cxx1112regex_traitsIcEELb1ELb1EE14_M_match_rangeERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEESB_SB_.exit
                                        #   in Loop: Header=BB201_9 Depth=1
	bnez	$a0, .LBB201_17
# %bb.11:                               #   in Loop: Header=BB201_9 Depth=1
	addi.d	$s2, $s2, 64
	bne	$s2, $s5, .LBB201_9
.LBB201_12:                             # %.critedge
	ld.d	$s1, $s3, 112
	ld.bu	$s6, $fp, 0
	ld.w	$s7, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB201_45
# %bb.13:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s6, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s7, $a0
	ori	$s1, $zero, 1
	bnez	$a0, .LBB201_39
# %bb.14:
	lu12i.w	$s5, 16
	and	$a0, $s7, $s5
	beqz	$a0, .LBB201_21
# %bb.15:
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB201_18
# %bb.16:
	ld.bu	$a0, $s2, 152
	b	.LBB201_20
.LBB201_17:
	ori	$s1, $zero, 1
	b	.LBB201_39
.LBB201_18:
.Ltmp1444:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1445:                              # EH_LABEL
# %bb.19:                               # %.noexc44
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1446:                              # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1447:                              # EH_LABEL
.LBB201_20:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	andi	$a0, $a0, 255
	beq	$s6, $a0, .LBB201_39
.LBB201_21:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread78
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	beq	$a0, $a1, .LBB201_27
# %bb.22:
	ld.d	$a1, $s3, 112
	addi.d	$a3, $s0, 9
.Ltmp1448:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
.Ltmp1449:                              # EH_LABEL
# %bb.23:
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp1451:                              # EH_LABEL
	addi.d	$a2, $sp, 40
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp1452:                              # EH_LABEL
# %bb.24:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$s0, $a0
	ld.d	$a0, $sp, 40
	ld.d	$s2, $s3, 32
	beq	$a0, $s4, .LBB201_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB201_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $s0, .LBB201_39
.LBB201_27:
	ld.d	$s4, $s3, 72
	ld.d	$s6, $s3, 80
	beq	$s4, $s6, .LBB201_38
# %bb.28:                               # %.lr.ph89.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB201_32
	.p2align	4, , 16
.LBB201_29:                             #   in Loop: Header=BB201_32 Depth=1
	ld.bu	$a0, $s2, 152
.LBB201_30:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61
                                        #   in Loop: Header=BB201_32 Depth=1
	andi	$a0, $a0, 255
	bne	$s7, $a0, .LBB201_39
.LBB201_31:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61.thread
                                        #   in Loop: Header=BB201_32 Depth=1
	addi.d	$s4, $s4, 4
	beq	$s4, $s6, .LBB201_38
.LBB201_32:                             # %.lr.ph89
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 112
	ld.bu	$s7, $fp, 0
	ld.w	$s8, $s4, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB201_42
# %bb.33:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i51
                                        #   in Loop: Header=BB201_32 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s7, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s8, $a0
	bnez	$a0, .LBB201_31
# %bb.34:                               #   in Loop: Header=BB201_32 Depth=1
	and	$a0, $s8, $s5
	beqz	$a0, .LBB201_39
# %bb.35:                               #   in Loop: Header=BB201_32 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB201_29
# %bb.36:                               #   in Loop: Header=BB201_32 Depth=1
.Ltmp1454:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1455:                              # EH_LABEL
# %bb.37:                               # %.noexc59
                                        #   in Loop: Header=BB201_32 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1456:                              # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1457:                              # EH_LABEL
	b	.LBB201_30
.LBB201_38:
	move	$s1, $zero
.LBB201_39:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB201_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i62
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB201_41:
	move	$a0, $s1
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB201_42:
.Ltmp1459:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1460:                              # EH_LABEL
# %bb.43:                               # %.noexc58
.LBB201_44:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB201_45:
.Ltmp1462:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1463:                              # EH_LABEL
# %bb.46:                               # %.noexc
.LBB201_47:
.Ltmp1453:                              # EH_LABEL
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s4, .LBB201_57
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB201_57
.LBB201_49:
.Ltmp1450:                              # EH_LABEL
	b	.LBB201_56
.LBB201_50:                             # %.loopexit
.Ltmp1458:                              # EH_LABEL
	b	.LBB201_56
.LBB201_51:
.Ltmp1464:                              # EH_LABEL
	b	.LBB201_56
.LBB201_52:
.Ltmp1440:                              # EH_LABEL
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s4, .LBB201_60
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB201_59
.LBB201_54:                             # %.loopexit.split-lp
.Ltmp1461:                              # EH_LABEL
	b	.LBB201_56
.LBB201_55:
.Ltmp1443:                              # EH_LABEL
.LBB201_56:
	move	$fp, $a0
.LBB201_57:
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB201_60
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i65
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
.LBB201_59:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB201_60:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end201:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end201-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table201:
.Lexception85:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end85-.Lcst_begin85
.Lcst_begin85:
	.uleb128 .Lfunc_begin85-.Lfunc_begin85  # >> Call Site 1 <<
	.uleb128 .Ltmp1438-.Lfunc_begin85       #   Call between .Lfunc_begin85 and .Ltmp1438
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1438-.Lfunc_begin85       # >> Call Site 2 <<
	.uleb128 .Ltmp1439-.Ltmp1438            #   Call between .Ltmp1438 and .Ltmp1439
	.uleb128 .Ltmp1440-.Lfunc_begin85       #     jumps to .Ltmp1440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1439-.Lfunc_begin85       # >> Call Site 3 <<
	.uleb128 .Ltmp1441-.Ltmp1439            #   Call between .Ltmp1439 and .Ltmp1441
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1441-.Lfunc_begin85       # >> Call Site 4 <<
	.uleb128 .Ltmp1442-.Ltmp1441            #   Call between .Ltmp1441 and .Ltmp1442
	.uleb128 .Ltmp1443-.Lfunc_begin85       #     jumps to .Ltmp1443
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1442-.Lfunc_begin85       # >> Call Site 5 <<
	.uleb128 .Ltmp1444-.Ltmp1442            #   Call between .Ltmp1442 and .Ltmp1444
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1444-.Lfunc_begin85       # >> Call Site 6 <<
	.uleb128 .Ltmp1447-.Ltmp1444            #   Call between .Ltmp1444 and .Ltmp1447
	.uleb128 .Ltmp1464-.Lfunc_begin85       #     jumps to .Ltmp1464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1448-.Lfunc_begin85       # >> Call Site 7 <<
	.uleb128 .Ltmp1449-.Ltmp1448            #   Call between .Ltmp1448 and .Ltmp1449
	.uleb128 .Ltmp1450-.Lfunc_begin85       #     jumps to .Ltmp1450
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1451-.Lfunc_begin85       # >> Call Site 8 <<
	.uleb128 .Ltmp1452-.Ltmp1451            #   Call between .Ltmp1451 and .Ltmp1452
	.uleb128 .Ltmp1453-.Lfunc_begin85       #     jumps to .Ltmp1453
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1452-.Lfunc_begin85       # >> Call Site 9 <<
	.uleb128 .Ltmp1454-.Ltmp1452            #   Call between .Ltmp1452 and .Ltmp1454
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1454-.Lfunc_begin85       # >> Call Site 10 <<
	.uleb128 .Ltmp1457-.Ltmp1454            #   Call between .Ltmp1454 and .Ltmp1457
	.uleb128 .Ltmp1458-.Lfunc_begin85       #     jumps to .Ltmp1458
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1457-.Lfunc_begin85       # >> Call Site 11 <<
	.uleb128 .Ltmp1459-.Ltmp1457            #   Call between .Ltmp1457 and .Ltmp1459
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1459-.Lfunc_begin85       # >> Call Site 12 <<
	.uleb128 .Ltmp1460-.Ltmp1459            #   Call between .Ltmp1459 and .Ltmp1460
	.uleb128 .Ltmp1461-.Lfunc_begin85       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1460-.Lfunc_begin85       # >> Call Site 13 <<
	.uleb128 .Ltmp1462-.Ltmp1460            #   Call between .Ltmp1460 and .Ltmp1462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1462-.Lfunc_begin85       # >> Call Site 14 <<
	.uleb128 .Ltmp1463-.Ltmp1462            #   Call between .Ltmp1462 and .Ltmp1463
	.uleb128 .Ltmp1464-.Lfunc_begin85       #     jumps to .Ltmp1464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1463-.Lfunc_begin85       # >> Call Site 15 <<
	.uleb128 .Lfunc_end201-.Ltmp1463        #   Call between .Ltmp1463 and .Lfunc_end201
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end85:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
	.p2align	2
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
.Lfunc_begin86:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception86
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$a4, $a0, 0
	move	$s1, $a3
	move	$fp, $a2
	move	$s0, $a1
	addi.d	$a0, $sp, 8
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB202_5
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 32
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s2, 0
	ld.d	$a2, $a1, 16
	move	$s3, $a0
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	blt	$s3, $s0, .LBB202_3
# %bb.2:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	ori	$a1, $zero, 1
	bge	$fp, $s3, .LBB202_4
.LBB202_3:
	slt	$a1, $a0, $s0
	xori	$a1, $a1, 1
	slt	$a0, $fp, $a0
	xori	$a0, $a0, 1
	and	$a1, $a1, $a0
.LBB202_4:
	move	$a0, $a1
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB202_5:
.Ltmp1465:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1466:                              # EH_LABEL
# %bb.6:                                # %.noexc
.LBB202_7:
.Ltmp1467:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end202:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc, .Lfunc_end202-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,"aG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,comdat
	.p2align	2, 0x0
GCC_except_table202:
.Lexception86:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end86-.Lcst_begin86
.Lcst_begin86:
	.uleb128 .Lfunc_begin86-.Lfunc_begin86  # >> Call Site 1 <<
	.uleb128 .Ltmp1465-.Lfunc_begin86       #   Call between .Lfunc_begin86 and .Ltmp1465
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1465-.Lfunc_begin86       # >> Call Site 2 <<
	.uleb128 .Ltmp1466-.Ltmp1465            #   Call between .Ltmp1465 and .Ltmp1466
	.uleb128 .Ltmp1467-.Lfunc_begin86       #     jumps to .Ltmp1467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1466-.Lfunc_begin86       # >> Call Site 3 <<
	.uleb128 .Lfunc_end202-.Ltmp1466        #   Call between .Ltmp1466 and .Lfunc_end202
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end86:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 128
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end203:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end203-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	2
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin87:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception87
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB204_9
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI204_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI204_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB204_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
	b	.LBB204_8
.LBB204_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp1468:                              # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1469:                              # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB204_9
.LBB204_5:
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB204_9
# %bb.6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB204_9
.LBB204_7:
	ld.d	$a1, $a1, 0
.LBB204_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB204_9:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB204_10:
.Ltmp1470:                              # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end204:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end204-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI204_0:
	.word	.LBB204_2-.LJTI204_0
	.word	.LBB204_7-.LJTI204_0
	.word	.LBB204_3-.LJTI204_0
	.word	.LBB204_5-.LJTI204_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table204:
.Lexception87:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end87-.Lcst_begin87
.Lcst_begin87:
	.uleb128 .Lfunc_begin87-.Lfunc_begin87  # >> Call Site 1 <<
	.uleb128 .Ltmp1468-.Lfunc_begin87       #   Call between .Lfunc_begin87 and .Ltmp1468
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1468-.Lfunc_begin87       # >> Call Site 2 <<
	.uleb128 .Ltmp1469-.Ltmp1468            #   Call between .Ltmp1468 and .Ltmp1469
	.uleb128 .Ltmp1470-.Lfunc_begin87       #     jumps to .Ltmp1470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1469-.Lfunc_begin87       # >> Call Site 3 <<
	.uleb128 .Lfunc_end204-.Ltmp1469        #   Call between .Ltmp1469 and .Lfunc_end204
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end87:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
.Lfunc_begin88:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception88
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB205_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB205_3
.LBB205_2:
	move	$s1, $zero
.LBB205_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s2, $a0, .LBB205_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB205_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp1471:                              # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp1472:                              # EH_LABEL
# %bb.6:
	addi.d	$s3, $fp, 48
	addi.d	$a1, $s0, 48
.Ltmp1474:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_)
	jirl	$ra, $ra, 0
.Ltmp1475:                              # EH_LABEL
# %bb.7:
	ld.d	$a0, $s0, 80
	ld.d	$a1, $s0, 72
	sub.d	$s4, $a0, $a1
	st.d	$zero, $fp, 88
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	beq	$a0, $a1, .LBB205_10
# %bb.8:                                # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp1477:                              # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1478:                              # EH_LABEL
# %bb.9:
	move	$s2, $a0
	b	.LBB205_11
.LBB205_10:
	move	$s2, $zero
.LBB205_11:                             # %.noexc
	st.d	$s2, $fp, 72
	st.d	$s2, $fp, 80
	add.d	$a0, $s2, $s4
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	ori	$a0, $zero, 1
	blt	$s1, $a0, .LBB205_13
# %bb.12:
	move	$a0, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s2, $s2, $s1
.LBB205_13:
	st.d	$s2, $fp, 80
	xvld	$xr0, $s0, 96
	xvst	$xr0, $fp, 96
	xvld	$xr0, $s0, 128
	xvst	$xr0, $fp, 128
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB205_14:
.Ltmp1479:                              # EH_LABEL
	move	$s0, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB205_16
.LBB205_15:
.Ltmp1476:                              # EH_LABEL
	move	$s0, $a0
.LBB205_16:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB205_18
.LBB205_17:
.Ltmp1473:                              # EH_LABEL
	move	$s0, $a0
.LBB205_18:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB205_20
# %bb.19:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB205_20:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end205:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_, .Lfunc_end205-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table205:
.Lexception88:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end88-.Lcst_begin88
.Lcst_begin88:
	.uleb128 .Lfunc_begin88-.Lfunc_begin88  # >> Call Site 1 <<
	.uleb128 .Ltmp1471-.Lfunc_begin88       #   Call between .Lfunc_begin88 and .Ltmp1471
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1471-.Lfunc_begin88       # >> Call Site 2 <<
	.uleb128 .Ltmp1472-.Ltmp1471            #   Call between .Ltmp1471 and .Ltmp1472
	.uleb128 .Ltmp1473-.Lfunc_begin88       #     jumps to .Ltmp1473
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1474-.Lfunc_begin88       # >> Call Site 3 <<
	.uleb128 .Ltmp1475-.Ltmp1474            #   Call between .Ltmp1474 and .Ltmp1475
	.uleb128 .Ltmp1476-.Lfunc_begin88       #     jumps to .Ltmp1476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1477-.Lfunc_begin88       # >> Call Site 4 <<
	.uleb128 .Ltmp1478-.Ltmp1477            #   Call between .Ltmp1477 and .Ltmp1478
	.uleb128 .Ltmp1479-.Lfunc_begin88       #     jumps to .Ltmp1479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1478-.Lfunc_begin88       # >> Call Site 5 <<
	.uleb128 .Lfunc_end205-.Ltmp1478        #   Call between .Ltmp1478 and .Lfunc_end205
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end88:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb
.Lfunc_begin89:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception89
# %bb.0:
	addi.d	$sp, $sp, -336
	.cfi_def_cfa_offset 336
	st.d	$ra, $sp, 328                   # 8-byte Folded Spill
	st.d	$fp, $sp, 320                   # 8-byte Folded Spill
	st.d	$s0, $sp, 312                   # 8-byte Folded Spill
	st.d	$s1, $sp, 304                   # 8-byte Folded Spill
	st.d	$s2, $sp, 296                   # 8-byte Folded Spill
	st.d	$s3, $sp, 288                   # 8-byte Folded Spill
	st.d	$s4, $sp, 280                   # 8-byte Folded Spill
	st.d	$s5, $sp, 272                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 120
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 224
	st.b	$s0, $sp, 232
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 240
	st.h	$zero, $sp, 118
.Ltmp1480:                              # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp1481:                              # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB206_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB206_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 118
	st.b	$s0, $sp, 119
	b	.LBB206_11
.LBB206_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB206_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp1482:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1483:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB206_46
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB206_48
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB206_47
# %bb.9:
	bnez	$a1, .LBB206_3
# %bb.10:
.Ltmp1488:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp1489:                              # EH_LABEL
	b	.LBB206_3
	.p2align	4, , 16
.LBB206_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1490:                              # EH_LABEL
	addi.d	$a1, $sp, 118
	addi.d	$a2, $sp, 120
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp1491:                              # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB206_11 Depth=1
	bnez	$a0, .LBB206_11
# %bb.13:
	ld.bu	$a0, $sp, 118
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB206_23
# %bb.14:
	ld.d	$s4, $sp, 128
	ld.d	$a0, $sp, 136
	ld.bu	$s5, $sp, 119
	beq	$s4, $a0, .LBB206_16
# %bb.15:
	st.b	$s5, $s4, 0
	ld.d	$a0, $sp, 128
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 128
	b	.LBB206_23
.LBB206_16:
	ld.d	$s0, $sp, 120
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB206_49
# %bb.17:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
.Ltmp1493:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1494:                              # EH_LABEL
# %bb.18:                               # %.noexc11
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB206_20
# %bb.19:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB206_20:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB206_22
# %bb.21:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_22:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $sp, 120
	st.d	$a0, $sp, 128
	add.d	$a0, $s3, $s2
	st.d	$a0, $sp, 136
.LBB206_23:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE11_M_add_charEc.exit
.Ltmp1495:                              # EH_LABEL
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1496:                              # EH_LABEL
# %bb.24:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 56
.Ltmp1497:                              # EH_LABEL
	ori	$a0, $zero, 152
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1498:                              # EH_LABEL
# %bb.25:
	vld	$vr0, $sp, 120
	xvld	$xr1, $sp, 136
	vst	$vr0, $a0, 0
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 136
	vld	$vr0, $sp, 168
	ld.d	$a1, $sp, 184
	vrepli.b	$vr1, 0
	vst	$vr1, $sp, 120
	vst	$vr0, $a0, 48
	st.d	$a1, $a0, 64
	vld	$vr0, $sp, 192
	ld.d	$a1, $sp, 208
	st.d	$zero, $sp, 184
	vst	$vr1, $sp, 168
	vst	$vr0, $a0, 72
	st.d	$a1, $a0, 88
	vst	$vr1, $sp, 192
	ld.d	$a1, $sp, 264
	vld	$vr0, $sp, 248
	xvld	$xr1, $sp, 216
	st.d	$zero, $sp, 208
	st.d	$a1, $a0, 144
	vst	$vr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 56
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 80
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 72
.Ltmp1500:                              # EH_LABEL
	addi.d	$a1, $sp, 56
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1501:                              # EH_LABEL
# %bb.26:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 88
	st.d	$a0, $sp, 96
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 104
	beq	$a1, $a2, .LBB206_28
# %bb.27:
	ld.d	$a0, $sp, 104
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 88
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB206_29
.LBB206_28:
.Ltmp1502:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 88
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1503:                              # EH_LABEL
.LBB206_29:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 72
	beqz	$a3, .LBB206_31
# %bb.30:
.Ltmp1508:                              # EH_LABEL
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 56
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1509:                              # EH_LABEL
.LBB206_31:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 192
	beqz	$a0, .LBB206_33
# %bb.32:
	ld.d	$a1, $sp, 208
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_33:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 168
	beqz	$a0, .LBB206_35
# %bb.34:
	ld.d	$a1, $sp, 184
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_35:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 144
	ld.d	$fp, $sp, 152
	beq	$a0, $fp, .LBB206_41
# %bb.36:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB206_38
	.p2align	4, , 16
.LBB206_37:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB206_38 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB206_40
.LBB206_38:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB206_37
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB206_38 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB206_37
.LBB206_40:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 144
.LBB206_41:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB206_43
# %bb.42:
	ld.d	$a1, $sp, 160
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_43:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 120
	beqz	$a0, .LBB206_45
# %bb.44:
	ld.d	$a1, $sp, 136
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_45:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev.exit
	ld.d	$s5, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 312                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 320                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 328                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 336
	ret
.LBB206_46:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB206_3
.LBB206_47:
.Ltmp1484:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp1485:                              # EH_LABEL
	b	.LBB206_3
.LBB206_48:
.Ltmp1486:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp1487:                              # EH_LABEL
	b	.LBB206_3
.LBB206_49:
.Ltmp1511:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1512:                              # EH_LABEL
# %bb.50:                               # %.noexc10
.LBB206_51:
.Ltmp1510:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB206_52:
.Ltmp1499:                              # EH_LABEL
	b	.LBB206_58
.LBB206_53:
.Ltmp1504:                              # EH_LABEL
	ld.d	$a3, $sp, 72
	move	$fp, $a0
	beqz	$a3, .LBB206_59
# %bb.54:
.Ltmp1505:                              # EH_LABEL
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 56
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1506:                              # EH_LABEL
	b	.LBB206_59
.LBB206_55:
.Ltmp1507:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB206_56:                             # %.loopexit.split-lp
.Ltmp1513:                              # EH_LABEL
	b	.LBB206_58
.LBB206_57:                             # %.loopexit
.Ltmp1492:                              # EH_LABEL
.LBB206_58:
	move	$fp, $a0
.LBB206_59:
	addi.d	$a0, $sp, 120
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end206:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb, .Lfunc_end206-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table206:
.Lexception89:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase44-.Lttbaseref44
.Lttbaseref44:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end89-.Lcst_begin89
.Lcst_begin89:
	.uleb128 .Lfunc_begin89-.Lfunc_begin89  # >> Call Site 1 <<
	.uleb128 .Ltmp1480-.Lfunc_begin89       #   Call between .Lfunc_begin89 and .Ltmp1480
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1480-.Lfunc_begin89       # >> Call Site 2 <<
	.uleb128 .Ltmp1489-.Ltmp1480            #   Call between .Ltmp1480 and .Ltmp1489
	.uleb128 .Ltmp1513-.Lfunc_begin89       #     jumps to .Ltmp1513
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1490-.Lfunc_begin89       # >> Call Site 3 <<
	.uleb128 .Ltmp1491-.Ltmp1490            #   Call between .Ltmp1490 and .Ltmp1491
	.uleb128 .Ltmp1492-.Lfunc_begin89       #     jumps to .Ltmp1492
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1493-.Lfunc_begin89       # >> Call Site 4 <<
	.uleb128 .Ltmp1494-.Ltmp1493            #   Call between .Ltmp1493 and .Ltmp1494
	.uleb128 .Ltmp1513-.Lfunc_begin89       #     jumps to .Ltmp1513
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1494-.Lfunc_begin89       # >> Call Site 5 <<
	.uleb128 .Ltmp1495-.Ltmp1494            #   Call between .Ltmp1494 and .Ltmp1495
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1495-.Lfunc_begin89       # >> Call Site 6 <<
	.uleb128 .Ltmp1496-.Ltmp1495            #   Call between .Ltmp1495 and .Ltmp1496
	.uleb128 .Ltmp1513-.Lfunc_begin89       #     jumps to .Ltmp1513
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1497-.Lfunc_begin89       # >> Call Site 7 <<
	.uleb128 .Ltmp1498-.Ltmp1497            #   Call between .Ltmp1497 and .Ltmp1498
	.uleb128 .Ltmp1499-.Lfunc_begin89       #     jumps to .Ltmp1499
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1500-.Lfunc_begin89       # >> Call Site 8 <<
	.uleb128 .Ltmp1503-.Ltmp1500            #   Call between .Ltmp1500 and .Ltmp1503
	.uleb128 .Ltmp1504-.Lfunc_begin89       #     jumps to .Ltmp1504
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1508-.Lfunc_begin89       # >> Call Site 9 <<
	.uleb128 .Ltmp1509-.Ltmp1508            #   Call between .Ltmp1508 and .Ltmp1509
	.uleb128 .Ltmp1510-.Lfunc_begin89       #     jumps to .Ltmp1510
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1509-.Lfunc_begin89       # >> Call Site 10 <<
	.uleb128 .Ltmp1484-.Ltmp1509            #   Call between .Ltmp1509 and .Ltmp1484
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1484-.Lfunc_begin89       # >> Call Site 11 <<
	.uleb128 .Ltmp1512-.Ltmp1484            #   Call between .Ltmp1484 and .Ltmp1512
	.uleb128 .Ltmp1513-.Lfunc_begin89       #     jumps to .Ltmp1513
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1512-.Lfunc_begin89       # >> Call Site 12 <<
	.uleb128 .Ltmp1505-.Ltmp1512            #   Call between .Ltmp1512 and .Ltmp1505
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1505-.Lfunc_begin89       # >> Call Site 13 <<
	.uleb128 .Ltmp1506-.Ltmp1505            #   Call between .Ltmp1505 and .Ltmp1506
	.uleb128 .Ltmp1507-.Lfunc_begin89       #     jumps to .Ltmp1507
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1506-.Lfunc_begin89       # >> Call Site 14 <<
	.uleb128 .Lfunc_end206-.Ltmp1506        #   Call between .Ltmp1506 and .Lfunc_end206
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end89:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase44:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb
.Lfunc_begin90:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception90
# %bb.0:
	addi.d	$sp, $sp, -336
	.cfi_def_cfa_offset 336
	st.d	$ra, $sp, 328                   # 8-byte Folded Spill
	st.d	$fp, $sp, 320                   # 8-byte Folded Spill
	st.d	$s0, $sp, 312                   # 8-byte Folded Spill
	st.d	$s1, $sp, 304                   # 8-byte Folded Spill
	st.d	$s2, $sp, 296                   # 8-byte Folded Spill
	st.d	$s3, $sp, 288                   # 8-byte Folded Spill
	st.d	$s4, $sp, 280                   # 8-byte Folded Spill
	st.d	$s5, $sp, 272                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 112
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 216
	st.d	$s1, $sp, 224
	st.b	$s0, $sp, 232
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 240
	st.h	$zero, $sp, 110
.Ltmp1514:                              # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp1515:                              # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB207_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB207_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 110
	st.b	$s0, $sp, 111
	b	.LBB207_11
.LBB207_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB207_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp1516:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1517:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB207_32
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB207_34
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB207_33
# %bb.9:
	bnez	$a1, .LBB207_3
# %bb.10:
.Ltmp1522:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp1523:                              # EH_LABEL
	b	.LBB207_3
	.p2align	4, , 16
.LBB207_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1524:                              # EH_LABEL
	addi.d	$a1, $sp, 110
	addi.d	$a2, $sp, 112
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp1525:                              # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB207_11 Depth=1
	bnez	$a0, .LBB207_11
# %bb.13:
	ld.bu	$a0, $sp, 110
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB207_23
# %bb.14:
	ld.d	$s4, $sp, 120
	ld.d	$a0, $sp, 128
	ld.bu	$s5, $sp, 111
	beq	$s4, $a0, .LBB207_16
# %bb.15:
	st.b	$s5, $s4, 0
	ld.d	$a0, $sp, 120
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 120
	b	.LBB207_23
.LBB207_16:
	ld.d	$s0, $sp, 112
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB207_35
# %bb.17:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
.Ltmp1527:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1528:                              # EH_LABEL
# %bb.18:                               # %.noexc11
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB207_20
# %bb.19:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB207_20:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB207_22
# %bb.21:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB207_22:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $sp, 112
	st.d	$a0, $sp, 120
	add.d	$a0, $s3, $s2
	st.d	$a0, $sp, 128
.LBB207_23:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE11_M_add_charEc.exit
.Ltmp1529:                              # EH_LABEL
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1530:                              # EH_LABEL
# %bb.24:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 48
.Ltmp1531:                              # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1532:                              # EH_LABEL
# %bb.25:
	vld	$vr0, $sp, 112
	xvld	$xr1, $sp, 128
	vst	$vr0, $a0, 0
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 128
	vld	$vr0, $sp, 160
	vrepli.b	$vr1, 0
	ld.d	$a1, $sp, 176
	vst	$vr1, $sp, 112
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 184
	st.d	$a1, $a0, 64
	st.d	$zero, $sp, 176
	vst	$vr1, $sp, 160
	vst	$vr0, $a0, 72
	ld.d	$a1, $sp, 200
	vst	$vr1, $sp, 184
	xvld	$xr0, $sp, 240
	xvld	$xr1, $sp, 208
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 200
	xvst	$xr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 48
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 72
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 64
.Ltmp1534:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1535:                              # EH_LABEL
# %bb.26:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 80
	st.d	$a0, $sp, 88
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 96
	beq	$a1, $a2, .LBB207_28
# %bb.27:
	ld.d	$a0, $sp, 96
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 80
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB207_29
.LBB207_28:
.Ltmp1536:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1537:                              # EH_LABEL
.LBB207_29:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 64
	beqz	$a3, .LBB207_31
# %bb.30:
.Ltmp1542:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1543:                              # EH_LABEL
.LBB207_31:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 312                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 320                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 328                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 336
	ret
.LBB207_32:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB207_3
.LBB207_33:
.Ltmp1518:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp1519:                              # EH_LABEL
	b	.LBB207_3
.LBB207_34:
.Ltmp1520:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp1521:                              # EH_LABEL
	b	.LBB207_3
.LBB207_35:
.Ltmp1545:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1546:                              # EH_LABEL
# %bb.36:                               # %.noexc10
.LBB207_37:
.Ltmp1544:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB207_38:
.Ltmp1533:                              # EH_LABEL
	b	.LBB207_44
.LBB207_39:
.Ltmp1538:                              # EH_LABEL
	ld.d	$a3, $sp, 64
	move	$fp, $a0
	beqz	$a3, .LBB207_45
# %bb.40:
.Ltmp1539:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1540:                              # EH_LABEL
	b	.LBB207_45
.LBB207_41:
.Ltmp1541:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB207_42:                             # %.loopexit.split-lp
.Ltmp1547:                              # EH_LABEL
	b	.LBB207_44
.LBB207_43:                             # %.loopexit
.Ltmp1526:                              # EH_LABEL
.LBB207_44:
	move	$fp, $a0
.LBB207_45:
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end207:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb, .Lfunc_end207-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table207:
.Lexception90:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase45-.Lttbaseref45
.Lttbaseref45:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end90-.Lcst_begin90
.Lcst_begin90:
	.uleb128 .Lfunc_begin90-.Lfunc_begin90  # >> Call Site 1 <<
	.uleb128 .Ltmp1514-.Lfunc_begin90       #   Call between .Lfunc_begin90 and .Ltmp1514
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1514-.Lfunc_begin90       # >> Call Site 2 <<
	.uleb128 .Ltmp1523-.Ltmp1514            #   Call between .Ltmp1514 and .Ltmp1523
	.uleb128 .Ltmp1547-.Lfunc_begin90       #     jumps to .Ltmp1547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1524-.Lfunc_begin90       # >> Call Site 3 <<
	.uleb128 .Ltmp1525-.Ltmp1524            #   Call between .Ltmp1524 and .Ltmp1525
	.uleb128 .Ltmp1526-.Lfunc_begin90       #     jumps to .Ltmp1526
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1527-.Lfunc_begin90       # >> Call Site 4 <<
	.uleb128 .Ltmp1528-.Ltmp1527            #   Call between .Ltmp1527 and .Ltmp1528
	.uleb128 .Ltmp1547-.Lfunc_begin90       #     jumps to .Ltmp1547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1528-.Lfunc_begin90       # >> Call Site 5 <<
	.uleb128 .Ltmp1529-.Ltmp1528            #   Call between .Ltmp1528 and .Ltmp1529
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1529-.Lfunc_begin90       # >> Call Site 6 <<
	.uleb128 .Ltmp1530-.Ltmp1529            #   Call between .Ltmp1529 and .Ltmp1530
	.uleb128 .Ltmp1547-.Lfunc_begin90       #     jumps to .Ltmp1547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1531-.Lfunc_begin90       # >> Call Site 7 <<
	.uleb128 .Ltmp1532-.Ltmp1531            #   Call between .Ltmp1531 and .Ltmp1532
	.uleb128 .Ltmp1533-.Lfunc_begin90       #     jumps to .Ltmp1533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1534-.Lfunc_begin90       # >> Call Site 8 <<
	.uleb128 .Ltmp1537-.Ltmp1534            #   Call between .Ltmp1534 and .Ltmp1537
	.uleb128 .Ltmp1538-.Lfunc_begin90       #     jumps to .Ltmp1538
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1542-.Lfunc_begin90       # >> Call Site 9 <<
	.uleb128 .Ltmp1543-.Ltmp1542            #   Call between .Ltmp1542 and .Ltmp1543
	.uleb128 .Ltmp1544-.Lfunc_begin90       #     jumps to .Ltmp1544
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1543-.Lfunc_begin90       # >> Call Site 10 <<
	.uleb128 .Ltmp1518-.Ltmp1543            #   Call between .Ltmp1543 and .Ltmp1518
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1518-.Lfunc_begin90       # >> Call Site 11 <<
	.uleb128 .Ltmp1546-.Ltmp1518            #   Call between .Ltmp1518 and .Ltmp1546
	.uleb128 .Ltmp1547-.Lfunc_begin90       #     jumps to .Ltmp1547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1546-.Lfunc_begin90       # >> Call Site 12 <<
	.uleb128 .Ltmp1539-.Ltmp1546            #   Call between .Ltmp1546 and .Ltmp1539
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1539-.Lfunc_begin90       # >> Call Site 13 <<
	.uleb128 .Ltmp1540-.Ltmp1539            #   Call between .Ltmp1539 and .Ltmp1540
	.uleb128 .Ltmp1541-.Lfunc_begin90       #     jumps to .Ltmp1541
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1540-.Lfunc_begin90       # >> Call Site 14 <<
	.uleb128 .Lfunc_end207-.Ltmp1540        #   Call between .Ltmp1540 and .Lfunc_end207
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end90:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase45:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb
.Lfunc_begin91:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception91
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 112
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 216
	st.d	$s1, $sp, 224
	st.b	$s0, $sp, 232
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 240
	st.h	$zero, $sp, 110
.Ltmp1548:                              # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp1549:                              # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB208_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB208_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 110
	st.b	$s0, $sp, 111
	b	.LBB208_11
.LBB208_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB208_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp1550:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1551:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB208_38
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB208_40
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB208_39
# %bb.9:
	bnez	$a1, .LBB208_3
# %bb.10:
.Ltmp1556:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp1557:                              # EH_LABEL
	b	.LBB208_3
	.p2align	4, , 16
.LBB208_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1558:                              # EH_LABEL
	addi.d	$a1, $sp, 110
	addi.d	$a2, $sp, 112
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp1559:                              # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB208_11 Depth=1
	bnez	$a0, .LBB208_11
# %bb.13:
	ld.bu	$a0, $sp, 110
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB208_15
# %bb.14:
	ld.b	$a1, $sp, 111
.Ltmp1561:                              # EH_LABEL
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp1562:                              # EH_LABEL
.LBB208_15:
.Ltmp1563:                              # EH_LABEL
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1564:                              # EH_LABEL
# %bb.16:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 48
.Ltmp1566:                              # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1567:                              # EH_LABEL
# %bb.17:
	vld	$vr0, $sp, 112
	xvld	$xr1, $sp, 128
	vst	$vr0, $a0, 0
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 128
	vld	$vr0, $sp, 160
	vrepli.b	$vr1, 0
	ld.d	$a1, $sp, 176
	vst	$vr1, $sp, 112
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 184
	st.d	$a1, $a0, 64
	st.d	$zero, $sp, 176
	vst	$vr1, $sp, 160
	vst	$vr0, $a0, 72
	ld.d	$a1, $sp, 200
	vst	$vr1, $sp, 184
	xvld	$xr0, $sp, 240
	xvld	$xr1, $sp, 208
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 200
	xvst	$xr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 48
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 72
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 64
.Ltmp1569:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1570:                              # EH_LABEL
# %bb.18:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 80
	st.d	$a0, $sp, 88
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 96
	beq	$a1, $a2, .LBB208_20
# %bb.19:
	ld.d	$a0, $sp, 96
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 80
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB208_21
.LBB208_20:
.Ltmp1571:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1572:                              # EH_LABEL
.LBB208_21:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 64
	beqz	$a3, .LBB208_23
# %bb.22:
.Ltmp1577:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1578:                              # EH_LABEL
.LBB208_23:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 184
	beqz	$a0, .LBB208_25
# %bb.24:
	ld.d	$a1, $sp, 200
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB208_25:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 160
	beqz	$a0, .LBB208_27
# %bb.26:
	ld.d	$a1, $sp, 176
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB208_27:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 136
	ld.d	$fp, $sp, 144
	beq	$a0, $fp, .LBB208_33
# %bb.28:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB208_30
	.p2align	4, , 16
.LBB208_29:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB208_30 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB208_32
.LBB208_30:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB208_29
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB208_30 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB208_29
.LBB208_32:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 136
.LBB208_33:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB208_35
# %bb.34:
	ld.d	$a1, $sp, 152
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB208_35:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 112
	beqz	$a0, .LBB208_37
# %bb.36:
	ld.d	$a1, $sp, 128
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB208_37:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev.exit
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB208_38:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB208_3
.LBB208_39:
.Ltmp1552:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp1553:                              # EH_LABEL
	b	.LBB208_3
.LBB208_40:
.Ltmp1554:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp1555:                              # EH_LABEL
	b	.LBB208_3
.LBB208_41:
.Ltmp1579:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB208_42:
.Ltmp1568:                              # EH_LABEL
	b	.LBB208_48
.LBB208_43:
.Ltmp1573:                              # EH_LABEL
	ld.d	$a3, $sp, 64
	move	$fp, $a0
	beqz	$a3, .LBB208_49
# %bb.44:
.Ltmp1574:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1575:                              # EH_LABEL
	b	.LBB208_49
.LBB208_45:
.Ltmp1576:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB208_46:                             # %.loopexit.split-lp
.Ltmp1565:                              # EH_LABEL
	b	.LBB208_48
.LBB208_47:                             # %.loopexit
.Ltmp1560:                              # EH_LABEL
.LBB208_48:
	move	$fp, $a0
.LBB208_49:
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end208:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb, .Lfunc_end208-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table208:
.Lexception91:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase46-.Lttbaseref46
.Lttbaseref46:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end91-.Lcst_begin91
.Lcst_begin91:
	.uleb128 .Lfunc_begin91-.Lfunc_begin91  # >> Call Site 1 <<
	.uleb128 .Ltmp1548-.Lfunc_begin91       #   Call between .Lfunc_begin91 and .Ltmp1548
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1548-.Lfunc_begin91       # >> Call Site 2 <<
	.uleb128 .Ltmp1557-.Ltmp1548            #   Call between .Ltmp1548 and .Ltmp1557
	.uleb128 .Ltmp1565-.Lfunc_begin91       #     jumps to .Ltmp1565
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1558-.Lfunc_begin91       # >> Call Site 3 <<
	.uleb128 .Ltmp1559-.Ltmp1558            #   Call between .Ltmp1558 and .Ltmp1559
	.uleb128 .Ltmp1560-.Lfunc_begin91       #     jumps to .Ltmp1560
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1561-.Lfunc_begin91       # >> Call Site 4 <<
	.uleb128 .Ltmp1564-.Ltmp1561            #   Call between .Ltmp1561 and .Ltmp1564
	.uleb128 .Ltmp1565-.Lfunc_begin91       #     jumps to .Ltmp1565
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1566-.Lfunc_begin91       # >> Call Site 5 <<
	.uleb128 .Ltmp1567-.Ltmp1566            #   Call between .Ltmp1566 and .Ltmp1567
	.uleb128 .Ltmp1568-.Lfunc_begin91       #     jumps to .Ltmp1568
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1569-.Lfunc_begin91       # >> Call Site 6 <<
	.uleb128 .Ltmp1572-.Ltmp1569            #   Call between .Ltmp1569 and .Ltmp1572
	.uleb128 .Ltmp1573-.Lfunc_begin91       #     jumps to .Ltmp1573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1577-.Lfunc_begin91       # >> Call Site 7 <<
	.uleb128 .Ltmp1578-.Ltmp1577            #   Call between .Ltmp1577 and .Ltmp1578
	.uleb128 .Ltmp1579-.Lfunc_begin91       #     jumps to .Ltmp1579
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1578-.Lfunc_begin91       # >> Call Site 8 <<
	.uleb128 .Ltmp1552-.Ltmp1578            #   Call between .Ltmp1578 and .Ltmp1552
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1552-.Lfunc_begin91       # >> Call Site 9 <<
	.uleb128 .Ltmp1555-.Ltmp1552            #   Call between .Ltmp1552 and .Ltmp1555
	.uleb128 .Ltmp1565-.Lfunc_begin91       #     jumps to .Ltmp1565
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1555-.Lfunc_begin91       # >> Call Site 10 <<
	.uleb128 .Ltmp1574-.Ltmp1555            #   Call between .Ltmp1555 and .Ltmp1574
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1574-.Lfunc_begin91       # >> Call Site 11 <<
	.uleb128 .Ltmp1575-.Ltmp1574            #   Call between .Ltmp1574 and .Ltmp1575
	.uleb128 .Ltmp1576-.Lfunc_begin91       #     jumps to .Ltmp1576
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1575-.Lfunc_begin91       # >> Call Site 12 <<
	.uleb128 .Lfunc_end208-.Ltmp1575        #   Call between .Ltmp1575 and .Lfunc_end208
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end91:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase46:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb
.Lfunc_begin92:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception92
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 112
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 216
	st.d	$s1, $sp, 224
	st.b	$s0, $sp, 232
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 16                   # 32-byte Folded Spill
	xvst	$xr0, $sp, 240
	st.h	$zero, $sp, 110
.Ltmp1580:                              # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp1581:                              # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB209_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB209_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 110
	st.b	$s0, $sp, 111
	b	.LBB209_11
.LBB209_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB209_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp1582:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1583:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB209_24
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB209_26
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB209_25
# %bb.9:
	bnez	$a1, .LBB209_3
# %bb.10:
.Ltmp1588:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp1589:                              # EH_LABEL
	b	.LBB209_3
	.p2align	4, , 16
.LBB209_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1590:                              # EH_LABEL
	addi.d	$a1, $sp, 110
	addi.d	$a2, $sp, 112
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp1591:                              # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB209_11 Depth=1
	bnez	$a0, .LBB209_11
# %bb.13:
	ld.bu	$a0, $sp, 110
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB209_15
# %bb.14:
	ld.b	$a1, $sp, 111
.Ltmp1593:                              # EH_LABEL
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp1594:                              # EH_LABEL
.LBB209_15:
.Ltmp1595:                              # EH_LABEL
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp1596:                              # EH_LABEL
# %bb.16:
	ld.d	$s0, $fp, 256
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 48
.Ltmp1598:                              # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1599:                              # EH_LABEL
# %bb.17:
	vld	$vr0, $sp, 112
	xvld	$xr1, $sp, 128
	vst	$vr0, $a0, 0
	xvst	$xr1, $a0, 16
	xvld	$xr0, $sp, 16                   # 32-byte Folded Reload
	xvst	$xr0, $sp, 128
	vld	$vr0, $sp, 160
	vrepli.b	$vr1, 0
	ld.d	$a1, $sp, 176
	vst	$vr1, $sp, 112
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 184
	st.d	$a1, $a0, 64
	st.d	$zero, $sp, 176
	vst	$vr1, $sp, 160
	vst	$vr0, $a0, 72
	ld.d	$a1, $sp, 200
	vst	$vr1, $sp, 184
	xvld	$xr0, $sp, 240
	xvld	$xr1, $sp, 208
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 200
	xvst	$xr0, $a0, 128
	xvst	$xr1, $a0, 96
	st.d	$a0, $sp, 48
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 72
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 64
.Ltmp1601:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp1602:                              # EH_LABEL
# %bb.18:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 80
	st.d	$a0, $sp, 88
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 96
	beq	$a1, $a2, .LBB209_20
# %bb.19:
	ld.d	$a0, $sp, 96
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 80
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB209_21
.LBB209_20:
.Ltmp1603:                              # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1604:                              # EH_LABEL
.LBB209_21:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 64
	beqz	$a3, .LBB209_23
# %bb.22:
.Ltmp1609:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1610:                              # EH_LABEL
.LBB209_23:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB209_24:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB209_3
.LBB209_25:
.Ltmp1584:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp1585:                              # EH_LABEL
	b	.LBB209_3
.LBB209_26:
.Ltmp1586:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp1587:                              # EH_LABEL
	b	.LBB209_3
.LBB209_27:
.Ltmp1611:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB209_28:
.Ltmp1600:                              # EH_LABEL
	b	.LBB209_34
.LBB209_29:
.Ltmp1605:                              # EH_LABEL
	ld.d	$a3, $sp, 64
	move	$fp, $a0
	beqz	$a3, .LBB209_35
# %bb.30:
.Ltmp1606:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 48
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1607:                              # EH_LABEL
	b	.LBB209_35
.LBB209_31:
.Ltmp1608:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB209_32:                             # %.loopexit.split-lp
.Ltmp1597:                              # EH_LABEL
	b	.LBB209_34
.LBB209_33:                             # %.loopexit
.Ltmp1592:                              # EH_LABEL
.LBB209_34:
	move	$fp, $a0
.LBB209_35:
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end209:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb, .Lfunc_end209-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table209:
.Lexception92:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase47-.Lttbaseref47
.Lttbaseref47:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end92-.Lcst_begin92
.Lcst_begin92:
	.uleb128 .Lfunc_begin92-.Lfunc_begin92  # >> Call Site 1 <<
	.uleb128 .Ltmp1580-.Lfunc_begin92       #   Call between .Lfunc_begin92 and .Ltmp1580
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1580-.Lfunc_begin92       # >> Call Site 2 <<
	.uleb128 .Ltmp1589-.Ltmp1580            #   Call between .Ltmp1580 and .Ltmp1589
	.uleb128 .Ltmp1597-.Lfunc_begin92       #     jumps to .Ltmp1597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1590-.Lfunc_begin92       # >> Call Site 3 <<
	.uleb128 .Ltmp1591-.Ltmp1590            #   Call between .Ltmp1590 and .Ltmp1591
	.uleb128 .Ltmp1592-.Lfunc_begin92       #     jumps to .Ltmp1592
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1593-.Lfunc_begin92       # >> Call Site 4 <<
	.uleb128 .Ltmp1596-.Ltmp1593            #   Call between .Ltmp1593 and .Ltmp1596
	.uleb128 .Ltmp1597-.Lfunc_begin92       #     jumps to .Ltmp1597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1598-.Lfunc_begin92       # >> Call Site 5 <<
	.uleb128 .Ltmp1599-.Ltmp1598            #   Call between .Ltmp1598 and .Ltmp1599
	.uleb128 .Ltmp1600-.Lfunc_begin92       #     jumps to .Ltmp1600
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1601-.Lfunc_begin92       # >> Call Site 6 <<
	.uleb128 .Ltmp1604-.Ltmp1601            #   Call between .Ltmp1601 and .Ltmp1604
	.uleb128 .Ltmp1605-.Lfunc_begin92       #     jumps to .Ltmp1605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1609-.Lfunc_begin92       # >> Call Site 7 <<
	.uleb128 .Ltmp1610-.Ltmp1609            #   Call between .Ltmp1609 and .Ltmp1610
	.uleb128 .Ltmp1611-.Lfunc_begin92       #     jumps to .Ltmp1611
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1610-.Lfunc_begin92       # >> Call Site 8 <<
	.uleb128 .Ltmp1584-.Ltmp1610            #   Call between .Ltmp1610 and .Ltmp1584
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1584-.Lfunc_begin92       # >> Call Site 9 <<
	.uleb128 .Ltmp1587-.Ltmp1584            #   Call between .Ltmp1584 and .Ltmp1587
	.uleb128 .Ltmp1597-.Lfunc_begin92       #     jumps to .Ltmp1597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1587-.Lfunc_begin92       # >> Call Site 10 <<
	.uleb128 .Ltmp1606-.Ltmp1587            #   Call between .Ltmp1587 and .Ltmp1606
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1606-.Lfunc_begin92       # >> Call Site 11 <<
	.uleb128 .Ltmp1607-.Ltmp1606            #   Call between .Ltmp1606 and .Ltmp1607
	.uleb128 .Ltmp1608-.Lfunc_begin92       #     jumps to .Ltmp1608
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1607-.Lfunc_begin92       # >> Call Site 12 <<
	.uleb128 .Lfunc_end209-.Ltmp1607        #   Call between .Ltmp1607 and .Lfunc_end209
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end92:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase47:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin93:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception93
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a1
	ori	$a1, $zero, 11
	addi.d	$s2, $s1, 8
	bne	$a0, $a1, .LBB210_6
# %bb.1:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB210_14
# %bb.2:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB210_30
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB210_29
# %bb.4:
	bnez	$a0, .LBB210_31
# %bb.5:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB210_103
.LBB210_6:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	move	$fp, $a2
	st.d	$s0, $sp, 64
	st.d	$a2, $sp, 72
	st.d	$s0, $sp, 48
	ori	$a1, $zero, 15
	st.d	$a2, $sp, 56
	beq	$a0, $a1, .LBB210_20
# %bb.7:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 17
	beq	$a0, $a1, .LBB210_15
# %bb.8:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 16
	bne	$a0, $a1, .LBB210_25
# %bb.9:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB210_40
# %bb.10:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB210_69
# %bb.11:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB210_56
# %bb.12:
	bnez	$a0, .LBB210_70
# %bb.13:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB210_70
.LBB210_14:
	move	$a0, $zero
	ori	$a1, $zero, 27
	st.w	$a1, $s1, 152
	b	.LBB210_103
.LBB210_15:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB210_38
# %bb.16:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB210_44
# %bb.17:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB210_43
# %bb.18:
	bnez	$a0, .LBB210_45
# %bb.19:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB210_45
.LBB210_20:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB210_39
# %bb.21:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB210_57
# %bb.22:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB210_55
# %bb.23:
	bnez	$a0, .LBB210_58
# %bb.24:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB210_58
.LBB210_25:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit44
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB210_32
# %bb.26:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $s0, 0
	ld.bu	$s5, $a0, 0
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB210_83
# %bb.27:
	ld.d	$s6, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a1, .LBB210_77
# %bb.28:
	st.b	$s7, $s6, 0
	ld.d	$a1, $fp, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $fp, 8
	b	.LBB210_83
.LBB210_29:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB210_103
.LBB210_30:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB210_31:
	move	$a0, $zero
	b	.LBB210_103
.LBB210_32:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB210_41
# %bb.33:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB210_84
# %bb.34:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB210_105
# %bb.35:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB210_104
# %bb.36:
	bnez	$a0, .LBB210_106
# %bb.37:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB210_106
.LBB210_38:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB210_45
.LBB210_39:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB210_58
.LBB210_40:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB210_70
.LBB210_41:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit63
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB210_119
# %bb.42:
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB210_102
.LBB210_43:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB210_45
.LBB210_44:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB210_45:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB210_54
# %bb.46:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB210_48
# %bb.47:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB210_54
.LBB210_48:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB210_118
# %bb.49:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i36
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB210_51
# %bb.50:
	move	$a0, $s5
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB210_51:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i39
	add.d	$s6, $s5, $s2
	beqz	$s1, .LBB210_53
# %bb.52:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i41
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_53:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i42
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB210_54:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit43
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	move	$a0, $fp
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	b	.LBB210_102
.LBB210_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB210_58
.LBB210_56:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB210_70
.LBB210_57:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB210_58:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB210_67
# %bb.59:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB210_61
# %bb.60:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB210_67
.LBB210_61:
	ld.d	$s2, $fp, 0
	sub.d	$s3, $s6, $s2
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s3, $a0, .LBB210_118
# %bb.62:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i46
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s3
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s3, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s3
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s3
	beq	$s6, $s2, .LBB210_64
# %bb.63:
	move	$a0, $s5
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB210_64:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i49
	add.d	$s6, $s5, $s3
	beqz	$s2, .LBB210_66
# %bb.65:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i51
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_66:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i52
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB210_67:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit53
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $fp, 104
	ori	$a3, $zero, 2
	st.b	$a3, $s0, 0
	add.d	$a2, $a1, $a2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB210_117
# %bb.68:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	srli.d	$a3, $a0, 16
	or	$a0, $a1, $a0
	or	$a1, $a2, $a3
	st.h	$a0, $fp, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB210_102
.LBB210_69:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB210_70:
	addi.d	$a0, $sp, 16
	move	$a1, $fp
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB210_74
# %bb.71:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $s0, 0
	ld.bu	$s5, $a1, 0
	bne	$a2, $a0, .LBB210_92
# %bb.72:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB210_85
# %bb.73:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB210_92
.LBB210_74:
	ld.bu	$a1, $s0, 0
	bne	$a1, $a0, .LBB210_100
# %bb.75:
	ld.d	$s5, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s6, $s0, 1
	beq	$s5, $a0, .LBB210_93
# %bb.76:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB210_100
.LBB210_77:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB210_118
# %bb.78:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i55
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB210_80
# %bb.79:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB210_80:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i58
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB210_82
# %bb.81:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i60
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_82:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i61
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
	ori	$a0, $zero, 1
.LBB210_83:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit62
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	b	.LBB210_103
.LBB210_84:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB210_106
.LBB210_85:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB210_120
# %bb.86:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1614:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1615:                              # EH_LABEL
# %bb.87:                               # %.noexc20
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB210_89
# %bb.88:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB210_89:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB210_91
# %bb.90:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_91:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB210_92:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB210_101
	b	.LBB210_102
.LBB210_93:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB210_120
# %bb.94:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i22
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1612:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1613:                              # EH_LABEL
# %bb.95:                               # %.noexc30
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB210_97
# %bb.96:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB210_97:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i25
	add.d	$s5, $s4, $s2
	beqz	$s1, .LBB210_99
# %bb.98:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i27
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_99:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i28
	addi.d	$a0, $s5, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB210_100:                            # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB210_102
.LBB210_101:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_102:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ori	$a0, $zero, 1
.LBB210_103:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB210_104:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB210_106
.LBB210_105:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB210_106:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB210_108
# %bb.107:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB210_103
.LBB210_108:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB210_112
# %bb.109:
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB210_122
# %bb.110:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB210_123
# %bb.111:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	b	.LBB210_102
.LBB210_112:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB210_114
# %bb.113:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $s0, 1
	ld.b	$a2, $a0, 0
	b	.LBB210_116
.LBB210_114:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB210_124
# %bb.115:
	ld.b	$a1, $s0, 1
	ori	$a2, $zero, 45
.LBB210_116:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $s0, 0
	b	.LBB210_102
.LBB210_117:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB210_118:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB210_119:
	pcalau12i	$a0, %pc_hi20(.L.str.89)
	addi.d	$a1, $a0, %pc_lo12(.L.str.89)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB210_120:                            # %.invoke
.Ltmp1616:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1617:                              # EH_LABEL
# %bb.121:                              # %.cont
.LBB210_122:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB210_123:
	pcalau12i	$a0, %pc_hi20(.L.str.88)
	addi.d	$a1, $a0, %pc_lo12(.L.str.88)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB210_124:
	pcalau12i	$a0, %pc_hi20(.L.str.87)
	addi.d	$a1, $a0, %pc_lo12(.L.str.87)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB210_125:
.Ltmp1618:                              # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB210_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_127:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end210:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end210-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table210:
.Lexception93:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end93-.Lcst_begin93
.Lcst_begin93:
	.uleb128 .Lfunc_begin93-.Lfunc_begin93  # >> Call Site 1 <<
	.uleb128 .Ltmp1614-.Lfunc_begin93       #   Call between .Lfunc_begin93 and .Ltmp1614
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1614-.Lfunc_begin93       # >> Call Site 2 <<
	.uleb128 .Ltmp1615-.Ltmp1614            #   Call between .Ltmp1614 and .Ltmp1615
	.uleb128 .Ltmp1618-.Lfunc_begin93       #     jumps to .Ltmp1618
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1615-.Lfunc_begin93       # >> Call Site 3 <<
	.uleb128 .Ltmp1612-.Ltmp1615            #   Call between .Ltmp1615 and .Ltmp1612
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1612-.Lfunc_begin93       # >> Call Site 4 <<
	.uleb128 .Ltmp1613-.Ltmp1612            #   Call between .Ltmp1612 and .Ltmp1613
	.uleb128 .Ltmp1618-.Lfunc_begin93       #     jumps to .Ltmp1618
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1613-.Lfunc_begin93       # >> Call Site 5 <<
	.uleb128 .Ltmp1616-.Ltmp1613            #   Call between .Ltmp1613 and .Ltmp1616
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1616-.Lfunc_begin93       # >> Call Site 6 <<
	.uleb128 .Ltmp1617-.Ltmp1616            #   Call between .Ltmp1616 and .Ltmp1617
	.uleb128 .Ltmp1618-.Lfunc_begin93       #     jumps to .Ltmp1618
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1617-.Lfunc_begin93       # >> Call Site 7 <<
	.uleb128 .Lfunc_end210-.Ltmp1617        #   Call between .Ltmp1617 and .Lfunc_end210
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end93:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin94:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception94
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 104
	move	$s0, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB211_11
# %bb.1:
	ld.d	$a0, $s0, 0
	ld.d	$s5, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s6, $a0, 0
	beq	$s5, $a1, .LBB211_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB211_10
.LBB211_3:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB211_13
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1619:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1620:                              # EH_LABEL
# %bb.5:                                # %.noexc8
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB211_7
# %bb.6:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB211_7:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s0, $s4, $s2
	beqz	$s1, .LBB211_9
# %bb.8:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB211_9:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s0, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB211_10:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB211_11:
.Ltmp1624:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.90)
	addi.d	$a1, $a0, %pc_lo12(.L.str.90)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1625:                              # EH_LABEL
# %bb.12:
.LBB211_13:
.Ltmp1621:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1622:                              # EH_LABEL
# %bb.14:                               # %.noexc
.LBB211_15:
.Ltmp1623:                              # EH_LABEL
	b	.LBB211_17
.LBB211_16:
.Ltmp1626:                              # EH_LABEL
.LBB211_17:
	move	$fp, $a0
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s0, 16
	beq	$a0, $a1, .LBB211_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB211_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end211:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end211-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table211:
.Lexception94:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end94-.Lcst_begin94
.Lcst_begin94:
	.uleb128 .Lfunc_begin94-.Lfunc_begin94  # >> Call Site 1 <<
	.uleb128 .Ltmp1619-.Lfunc_begin94       #   Call between .Lfunc_begin94 and .Ltmp1619
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1619-.Lfunc_begin94       # >> Call Site 2 <<
	.uleb128 .Ltmp1620-.Ltmp1619            #   Call between .Ltmp1619 and .Ltmp1620
	.uleb128 .Ltmp1623-.Lfunc_begin94       #     jumps to .Ltmp1623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1620-.Lfunc_begin94       # >> Call Site 3 <<
	.uleb128 .Ltmp1624-.Ltmp1620            #   Call between .Ltmp1620 and .Ltmp1624
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1624-.Lfunc_begin94       # >> Call Site 4 <<
	.uleb128 .Ltmp1625-.Ltmp1624            #   Call between .Ltmp1624 and .Ltmp1625
	.uleb128 .Ltmp1626-.Lfunc_begin94       #     jumps to .Ltmp1626
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1621-.Lfunc_begin94       # >> Call Site 5 <<
	.uleb128 .Ltmp1622-.Ltmp1621            #   Call between .Ltmp1621 and .Ltmp1622
	.uleb128 .Ltmp1623-.Lfunc_begin94       #     jumps to .Ltmp1623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1622-.Lfunc_begin94       # >> Call Site 6 <<
	.uleb128 .Lfunc_end211-.Ltmp1622        #   Call between .Ltmp1622 and .Lfunc_end211
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end94:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.p2align	2
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a2, $a0, 0
	ld.bu	$a3, $a2, 0
	ori	$s3, $zero, 1
	bne	$a3, $s3, .LBB212_9
# %bb.1:
	ld.d	$s4, $a0, 8
	ld.d	$s7, $s4, 8
	ld.d	$a3, $s4, 16
	ld.bu	$s8, $a2, 1
	beq	$s7, $a3, .LBB212_3
# %bb.2:
	st.b	$s8, $s7, 0
	ld.d	$a2, $s4, 8
	addi.d	$a2, $a2, 1
	st.d	$a2, $s4, 8
	b	.LBB212_9
.LBB212_3:
	move	$s6, $a0
	ld.d	$fp, $s4, 0
	sub.d	$s0, $s7, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB212_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	move	$s5, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s8, $a0, $s0
	beq	$s7, $fp, .LBB212_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB212_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s7, $s2, $s0
	beqz	$fp, .LBB212_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB212_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s7, 1
	st.d	$s2, $s4, 0
	st.d	$a0, $s4, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s4, 16
	move	$a0, $s6
	move	$a1, $s5
.LBB212_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	st.b	$s3, $a0, 0
	st.b	$a1, $a0, 1
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB212_10:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end212:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc, .Lfunc_end212-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.p2align	2
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	ld.d	$a1, $a0, 0
	ld.bu	$a2, $a1, 0
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB213_9
# %bb.1:
	ld.d	$s3, $a0, 8
	ld.d	$s5, $s3, 8
	ld.d	$a2, $s3, 16
	ld.bu	$s6, $a1, 1
	beq	$s5, $a2, .LBB213_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a1, $s3, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $s3, 8
	b	.LBB213_9
.LBB213_3:
	move	$s4, $a0
	ld.d	$fp, $s3, 0
	sub.d	$s0, $s5, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB213_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s6, $a0, $s0
	beq	$s5, $fp, .LBB213_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB213_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s5, $s2, $s0
	beqz	$fp, .LBB213_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB213_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s5, 1
	st.d	$s2, $s3, 0
	st.d	$a0, $s3, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s3, 16
	move	$a0, $s4
.LBB213_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2
	st.b	$a1, $a0, 0
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB213_10:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end213:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv, .Lfunc_end213-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin95:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception95
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB214_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp1627:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp1628:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB214_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB214_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a3, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB214_8
.LBB214_5:
	st.d	$a0, $sp, 8
	st.d	$a3, $sp, 24
	b	.LBB214_14
.LBB214_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB214_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r7
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB214_5
.LBB214_8:
	st.d	$a2, $sp, 8
	move	$a0, $a2
	b	.LBB214_14
.LBB214_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB214_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB214_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB214_13
.LBB214_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB214_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB214_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB214_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB214_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB214_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB214_20
# %bb.18:                               # %.noexc.i.i
.Ltmp1630:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1631:                              # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB214_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB214_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB214_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB214_28
.LBB214_23:
	addi.d	$a0, $fp, 24
.Ltmp1632:                              # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1633:                              # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB214_26
.LBB214_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB214_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB214_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB214_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB214_25
	b	.LBB214_26
.LBB214_29:
.Ltmp1634:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$a1, $a0, %pc_lo12(.L.str.215)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1635:                              # EH_LABEL
# %bb.30:
.LBB214_31:
.Ltmp1629:                              # EH_LABEL
	b	.LBB214_33
.LBB214_32:
.Ltmp1636:                              # EH_LABEL
.LBB214_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB214_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB214_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end214:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end214-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table214:
.Lexception95:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end95-.Lcst_begin95
.Lcst_begin95:
	.uleb128 .Lfunc_begin95-.Lfunc_begin95  # >> Call Site 1 <<
	.uleb128 .Ltmp1627-.Lfunc_begin95       #   Call between .Lfunc_begin95 and .Ltmp1627
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1627-.Lfunc_begin95       # >> Call Site 2 <<
	.uleb128 .Ltmp1628-.Ltmp1627            #   Call between .Ltmp1627 and .Ltmp1628
	.uleb128 .Ltmp1629-.Lfunc_begin95       #     jumps to .Ltmp1629
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1628-.Lfunc_begin95       # >> Call Site 3 <<
	.uleb128 .Ltmp1630-.Ltmp1628            #   Call between .Ltmp1628 and .Ltmp1630
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1630-.Lfunc_begin95       # >> Call Site 4 <<
	.uleb128 .Ltmp1633-.Ltmp1630            #   Call between .Ltmp1630 and .Ltmp1633
	.uleb128 .Ltmp1636-.Lfunc_begin95       #     jumps to .Ltmp1636
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1633-.Lfunc_begin95       # >> Call Site 5 <<
	.uleb128 .Ltmp1634-.Ltmp1633            #   Call between .Ltmp1633 and .Ltmp1634
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1634-.Lfunc_begin95       # >> Call Site 6 <<
	.uleb128 .Ltmp1635-.Ltmp1634            #   Call between .Ltmp1634 and .Ltmp1635
	.uleb128 .Ltmp1636-.Lfunc_begin95       #     jumps to .Ltmp1636
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1635-.Lfunc_begin95       # >> Call Site 7 <<
	.uleb128 .Lfunc_end214-.Ltmp1635        #   Call between .Ltmp1635 and .Lfunc_end214
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end95:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	blt	$a2, $a1, .LBB215_15
# %bb.1:
	ld.d	$s3, $a0, 56
	ld.d	$a3, $a0, 64
	bstrins.d	$a1, $a2, 63, 8
	beq	$s3, $a3, .LBB215_3
# %bb.2:
	st.h	$a1, $s3, 0
	ld.d	$a1, $a0, 56
	addi.d	$a1, $a1, 2
	st.d	$a1, $a0, 56
	b	.LBB215_14
.LBB215_3:
	move	$s2, $a0
	ld.d	$fp, $a0, 48
	sub.d	$s0, $s3, $fp
	addi.w	$a0, $zero, -2
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB215_16
# %bb.4:                                # %_ZNKSt6vectorISt4pairIccESaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
	move	$s5, $a1
	srai.d	$a0, $s0, 1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 1023
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	stx.h	$s5, $a0, $s0
	move	$s5, $a0
	beq	$fp, $s3, .LBB215_11
# %bb.5:                                # %.lr.ph.i.i.i.i.i.i.preheader
	addi.d	$a1, $s0, -2
	ori	$a2, $zero, 62
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a1, $a2, .LBB215_10
# %bb.6:                                # %.lr.ph.i.i.i.i.i.i.preheader
	sub.d	$a2, $s1, $fp
	ori	$a3, $zero, 64
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a2, $a3, .LBB215_10
# %bb.7:                                # %vector.ph
	srli.d	$a0, $a1, 1
	addi.d	$a1, $a0, 1
	move	$a2, $a1
	bstrins.d	$a2, $zero, 4, 0
	alsl.d	$s5, $a2, $s1, 1
	alsl.d	$a0, $a2, $fp, 1
	addi.d	$a3, $fp, 32
	addi.d	$a4, $s1, 32
	move	$a5, $a2
	.p2align	4, , 16
.LBB215_8:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a3, -32
	xvld	$xr1, $a3, 0
	xvst	$xr0, $a4, -32
	xvst	$xr1, $a4, 0
	addi.d	$a3, $a3, 64
	addi.d	$a5, $a5, -32
	addi.d	$a4, $a4, 64
	bnez	$a5, .LBB215_8
# %bb.9:                                # %middle.block
	beq	$a1, $a2, .LBB215_11
	.p2align	4, , 16
.LBB215_10:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a1, $a0, 0
	st.h	$a1, $s5, 0
	addi.d	$a0, $a0, 2
	addi.d	$s5, $s5, 2
	bne	$a0, $s3, .LBB215_10
.LBB215_11:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit.i.i.i
	beqz	$fp, .LBB215_13
# %bb.12:                               # %_ZNSt12_Vector_baseISt4pairIccESaIS1_EE13_M_deallocateEPS1_m.exit.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_13:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE17_M_realloc_appendIJS1_EEEvDpOT_.exit.i.i
	addi.d	$a0, $s5, 2
	st.d	$s1, $s2, 48
	st.d	$a0, $s2, 56
	alsl.d	$a0, $s4, $s1, 1
	st.d	$a0, $s2, 64
.LBB215_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE9push_backEOS1_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB215_15:
	pcalau12i	$a0, %pc_hi20(.L.str.216)
	addi.d	$a1, $a0, %pc_lo12(.L.str.216)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB215_16:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end215:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc, .Lfunc_end215-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.weak	_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.p2align	2
	.type	_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,@function
_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_: # @_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
.Lfunc_begin96:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception96
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a3
	move	$s2, $a2
	move	$s0, $a1
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB216_29
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 32
	st.d	$s5, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $sp, 32
	move	$s3, $s5
	beq	$s2, $s1, .LBB216_19
# %bb.2:                                # %.lr.ph
	addi.d	$s6, $s0, 313
	ori	$s7, $zero, 15
	b	.LBB216_5
	.p2align	4, , 16
.LBB216_3:                              # %.noexc29
                                        #   in Loop: Header=BB216_5 Depth=1
	ld.d	$a0, $sp, 16
.LBB216_4:                              #   in Loop: Header=BB216_5 Depth=1
	stx.b	$s3, $a0, $s4
	ld.d	$a0, $sp, 16
	addi.d	$a1, $s4, 1
	st.d	$a1, $sp, 24
	addi.d	$s2, $s2, 1
	stx.b	$zero, $a0, $a1
	beq	$s2, $s1, .LBB216_12
.LBB216_5:                              # =>This Inner Loop Header: Depth=1
	ld.bu	$s4, $s2, 0
	ldx.bu	$s3, $s6, $s4
	bnez	$s3, .LBB216_10
# %bb.6:                                #   in Loop: Header=BB216_5 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 64
	ext.w.b	$a1, $s4
.Ltmp1637:                              # EH_LABEL
	move	$a0, $s0
	move	$a2, $zero
	jirl	$ra, $a3, 0
.Ltmp1638:                              # EH_LABEL
# %bb.7:                                # %.noexc
                                        #   in Loop: Header=BB216_5 Depth=1
	move	$s3, $a0
	beqz	$a0, .LBB216_9
# %bb.8:                                #   in Loop: Header=BB216_5 Depth=1
	stx.b	$s3, $s6, $s4
	b	.LBB216_10
.LBB216_9:                              #   in Loop: Header=BB216_5 Depth=1
	move	$s3, $zero
	.p2align	4, , 16
.LBB216_10:                             # %_ZNKSt5ctypeIcE6narrowEcc.exit
                                        #   in Loop: Header=BB216_5 Depth=1
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 32
	ld.d	$s4, $sp, 24
	xor	$a2, $a0, $s5
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s7, $a2
	or	$a1, $a2, $a1
	bltu	$s4, $a1, .LBB216_4
# %bb.11:                               #   in Loop: Header=BB216_5 Depth=1
.Ltmp1639:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 1
	move	$a1, $s4
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1640:                              # EH_LABEL
	b	.LBB216_3
.LBB216_12:                             # %.preheader
	ld.d	$s1, $sp, 24
	ld.d	$s3, $sp, 16
	beqz	$s1, .LBB216_19
# %bb.13:                               # %.preheader.split.preheader
	move	$s4, $zero
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	addi.d	$s6, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	ori	$s7, $zero, 1024
	b	.LBB216_15
	.p2align	4, , 16
.LBB216_14:                             # %.critedge
                                        #   in Loop: Header=BB216_15 Depth=1
	addi.d	$s4, $s4, 8
	beq	$s4, $s7, .LBB216_22
.LBB216_15:                             # %.preheader.split
                                        # =>This Inner Loop Header: Depth=1
	ldx.d	$s2, $s6, $s4
	move	$a0, $s2
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	bne	$s1, $a0, .LBB216_14
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB216_15 Depth=1
	move	$a0, $s3
	move	$a1, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB216_14
.LBB216_17:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.bu	$a0, $s0, 56
	srli.d	$s1, $s4, 3
	beqz	$a0, .LBB216_25
# %bb.18:
	andi	$a0, $s1, 255
	add.d	$a0, $s0, $a0
	ld.bu	$a0, $a0, 57
	b	.LBB216_27
.LBB216_19:                             # %.preheader.split.us.preheader
	move	$s4, $zero
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	addi.d	$a0, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	ori	$a1, $zero, 1024
	.p2align	4, , 16
.LBB216_20:                             # %.preheader.split.us
                                        # =>This Inner Loop Header: Depth=1
	ldx.d	$a2, $a0, $s4
	ld.bu	$a2, $a2, 0
	beqz	$a2, .LBB216_17
# %bb.21:                               # %.critedge.us
                                        #   in Loop: Header=BB216_20 Depth=1
	addi.d	$s4, $s4, 8
	bne	$s4, $a1, .LBB216_20
.LBB216_22:                             # %.critedge28
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	beq	$s3, $s5, .LBB216_24
.LBB216_23:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB216_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB216_25:
.Ltmp1642:                              # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1643:                              # EH_LABEL
# %bb.26:                               # %.noexc32
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp1644:                              # EH_LABEL
	ext.w.b	$a1, $s1
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp1645:                              # EH_LABEL
.LBB216_27:                             # %_ZNKSt5ctypeIcE5widenEc.exit
	addi.d	$a1, $fp, 16
	st.d	$a1, $fp, 0
.Ltmp1647:                              # EH_LABEL
	ext.w.b	$a2, $a0
	ori	$a1, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp1648:                              # EH_LABEL
# %bb.28:                               # %_ZNKSt5ctypeIcE5widenEc.exit._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_.exit_crit_edge
	ld.d	$s3, $sp, 16
	bne	$s3, $s5, .LBB216_23
	b	.LBB216_24
.LBB216_29:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB216_30:
.Ltmp1646:                              # EH_LABEL
	b	.LBB216_33
.LBB216_31:
.Ltmp1649:                              # EH_LABEL
	b	.LBB216_33
.LBB216_32:
.Ltmp1641:                              # EH_LABEL
.LBB216_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 16
	beq	$a0, $s5, .LBB216_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB216_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end216:
	.size	_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_, .Lfunc_end216-_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.p2align	2, 0x0
GCC_except_table216:
.Lexception96:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end96-.Lcst_begin96
.Lcst_begin96:
	.uleb128 .Lfunc_begin96-.Lfunc_begin96  # >> Call Site 1 <<
	.uleb128 .Ltmp1637-.Lfunc_begin96       #   Call between .Lfunc_begin96 and .Ltmp1637
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1637-.Lfunc_begin96       # >> Call Site 2 <<
	.uleb128 .Ltmp1640-.Ltmp1637            #   Call between .Ltmp1637 and .Ltmp1640
	.uleb128 .Ltmp1641-.Lfunc_begin96       #     jumps to .Ltmp1641
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1640-.Lfunc_begin96       # >> Call Site 3 <<
	.uleb128 .Ltmp1642-.Ltmp1640            #   Call between .Ltmp1640 and .Ltmp1642
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1642-.Lfunc_begin96       # >> Call Site 4 <<
	.uleb128 .Ltmp1645-.Ltmp1642            #   Call between .Ltmp1642 and .Ltmp1645
	.uleb128 .Ltmp1646-.Lfunc_begin96       #     jumps to .Ltmp1646
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1647-.Lfunc_begin96       # >> Call Site 5 <<
	.uleb128 .Ltmp1648-.Ltmp1647            #   Call between .Ltmp1647 and .Ltmp1648
	.uleb128 .Ltmp1649-.Lfunc_begin96       #     jumps to .Ltmp1649
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1648-.Lfunc_begin96       # >> Call Site 6 <<
	.uleb128 .Lfunc_end216-.Ltmp1648        #   Call between .Ltmp1648 and .Lfunc_end216
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end96:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,comdat
	.hidden	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
	.weak	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
	.p2align	2
	.type	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,@function
_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_: # @_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
.Lfunc_begin97:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception97
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s3, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	st.d	$zero, $a0, 8
	st.b	$zero, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx117collateIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx117collateIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB217_33
# %bb.1:                                # %_ZSt9use_facetINSt7__cxx117collateIcEEERKT_RKSt6locale.exit
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -8
	pcalau12i	$a1, %got_pc_hi20(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a1, 8
	beq	$a0, $a1, .LBB217_4
# %bb.2:
	ld.bu	$a2, $a0, 0
	ori	$a3, $zero, 42
	beq	$a2, $a3, .LBB217_31
# %bb.3:                                # %_ZNKSt9type_infoneERKS_.exit
	ld.bu	$a2, $a1, 0
	addi.d	$a2, $a2, -42
	sltui	$a2, $a2, 1
	add.d	$a1, $a1, $a2
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB217_31
.LBB217_4:                              # %_ZNKSt9type_infoneERKS_.exit.thread38
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB217_35
# %bb.5:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	st.d	$zero, $sp, 56
	sub.d	$s3, $s3, $s1
	ori	$a1, $zero, 16
	st.d	$s3, $sp, 16
	move	$a0, $s5
	bltu	$s3, $a1, .LBB217_8
# %bb.6:                                # %.noexc.i
.Ltmp1650:                              # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1651:                              # EH_LABEL
# %bb.7:                                # %.noexc25
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB217_8:                              # %._crit_edge.i.i
	beqz	$s3, .LBB217_12
# %bb.9:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB217_11
# %bb.10:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB217_12
.LBB217_11:
	move	$a1, $s1
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB217_12:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 56
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $sp, 48
	ld.d	$a1, $sp, 56
	ld.d	$a3, $a0, 40
	add.d	$s3, $s1, $a1
.Ltmp1653:                              # EH_LABEL
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s3
	jirl	$ra, $a3, 0
.Ltmp1654:                              # EH_LABEL
# %bb.13:                               # %_ZNKSt5ctypeIcE7tolowerEPcPKc.exit
	ld.d	$a0, $s0, 0
	ld.d	$a4, $a0, 24
.Ltmp1656:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s1
	move	$a3, $s3
	jirl	$ra, $a4, 0
.Ltmp1657:                              # EH_LABEL
# %bb.14:                               # %_ZNKSt7__cxx117collateIcE9transformEPKcS3_.exit
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB217_18
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 16
	addi.d	$a2, $sp, 32
	beq	$a1, $a2, .LBB217_21
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a3, $s4, 0
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	beqz	$a0, .LBB217_20
.LBB217_17:
	st.d	$a0, $sp, 16
	st.d	$a3, $sp, 32
	b	.LBB217_27
.LBB217_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 16
	addi.d	$a2, $sp, 32
	beq	$a1, $a2, .LBB217_21
# %bb.19:
	move	$a0, $zero
                                        # implicit-def: $r7
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	bnez	$a0, .LBB217_17
.LBB217_20:
	st.d	$a2, $sp, 16
	move	$a0, $a2
	b	.LBB217_27
.LBB217_21:
	addi.d	$a2, $sp, 16
	beq	$a2, $fp, .LBB217_32
# %bb.22:
	ld.d	$a2, $sp, 24
	beqz	$a2, .LBB217_26
# %bb.23:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB217_25
# %bb.24:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB217_26
.LBB217_25:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB217_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 24
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 16
.LBB217_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB217_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB217_29:
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB217_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB217_31:                             # %_ZNKSt9type_infoneERKS_.exit.thread
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB217_32:
	move	$a0, $a1
	b	.LBB217_27
.LBB217_33:
.Ltmp1665:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1666:                              # EH_LABEL
# %bb.34:                               # %.noexc
.LBB217_35:
.Ltmp1662:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1663:                              # EH_LABEL
# %bb.36:                               # %.noexc24
.LBB217_37:
.Ltmp1652:                              # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB217_45
	b	.LBB217_49
.LBB217_38:
.Ltmp1658:                              # EH_LABEL
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	move	$s0, $a0
	bne	$a1, $a2, .LBB217_43
# %bb.39:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
.Ltmp1659:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1660:                              # EH_LABEL
	b	.LBB217_29
.LBB217_40:
.Ltmp1661:                              # EH_LABEL
	b	.LBB217_42
.LBB217_41:
.Ltmp1655:                              # EH_LABEL
.LBB217_42:
	move	$s0, $a0
.LBB217_43:
	ld.d	$a0, $sp, 48
	bne	$a0, $s5, .LBB217_46
# %bb.44:
	ld.d	$a0, $fp, 0
	bne	$a0, $s4, .LBB217_49
.LBB217_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB217_46:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB217_45
	b	.LBB217_49
.LBB217_47:
.Ltmp1664:                              # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB217_45
	b	.LBB217_49
.LBB217_48:
.Ltmp1667:                              # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB217_45
.LBB217_49:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end217:
	.size	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_, .Lfunc_end217-_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,comdat
	.p2align	2, 0x0
GCC_except_table217:
.Lexception97:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase48-.Lttbaseref48
.Lttbaseref48:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end97-.Lcst_begin97
.Lcst_begin97:
	.uleb128 .Lfunc_begin97-.Lfunc_begin97  # >> Call Site 1 <<
	.uleb128 .Ltmp1650-.Lfunc_begin97       #   Call between .Lfunc_begin97 and .Ltmp1650
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1650-.Lfunc_begin97       # >> Call Site 2 <<
	.uleb128 .Ltmp1651-.Ltmp1650            #   Call between .Ltmp1650 and .Ltmp1651
	.uleb128 .Ltmp1652-.Lfunc_begin97       #     jumps to .Ltmp1652
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1651-.Lfunc_begin97       # >> Call Site 3 <<
	.uleb128 .Ltmp1653-.Ltmp1651            #   Call between .Ltmp1651 and .Ltmp1653
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1653-.Lfunc_begin97       # >> Call Site 4 <<
	.uleb128 .Ltmp1654-.Ltmp1653            #   Call between .Ltmp1653 and .Ltmp1654
	.uleb128 .Ltmp1655-.Lfunc_begin97       #     jumps to .Ltmp1655
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1656-.Lfunc_begin97       # >> Call Site 5 <<
	.uleb128 .Ltmp1657-.Ltmp1656            #   Call between .Ltmp1656 and .Ltmp1657
	.uleb128 .Ltmp1658-.Lfunc_begin97       #     jumps to .Ltmp1658
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp1657-.Lfunc_begin97       # >> Call Site 6 <<
	.uleb128 .Ltmp1665-.Ltmp1657            #   Call between .Ltmp1657 and .Ltmp1665
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1665-.Lfunc_begin97       # >> Call Site 7 <<
	.uleb128 .Ltmp1666-.Ltmp1665            #   Call between .Ltmp1665 and .Ltmp1666
	.uleb128 .Ltmp1667-.Lfunc_begin97       #     jumps to .Ltmp1667
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1662-.Lfunc_begin97       # >> Call Site 8 <<
	.uleb128 .Ltmp1663-.Ltmp1662            #   Call between .Ltmp1662 and .Ltmp1663
	.uleb128 .Ltmp1664-.Lfunc_begin97       #     jumps to .Ltmp1664
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1663-.Lfunc_begin97       # >> Call Site 9 <<
	.uleb128 .Ltmp1659-.Ltmp1663            #   Call between .Ltmp1663 and .Ltmp1659
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1659-.Lfunc_begin97       # >> Call Site 10 <<
	.uleb128 .Ltmp1660-.Ltmp1659            #   Call between .Ltmp1659 and .Ltmp1660
	.uleb128 .Ltmp1661-.Lfunc_begin97       #     jumps to .Ltmp1661
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1660-.Lfunc_begin97       # >> Call Site 11 <<
	.uleb128 .Lfunc_end217-.Ltmp1660        #   Call between .Ltmp1660 and .Lfunc_end217
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end97:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp1668:                              # TypeInfo 1
	.word	.L_ZTISt9exception.DW.stub-.Ltmp1668
.Lttbase48:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
.Lfunc_begin98:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception98
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB218_18
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	move	$s4, $a1
	srai.d	$a0, $s7, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$s6, $zero, -1
	lu52i.d	$a1, $s6, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	add.d	$s3, $a0, $s7
	addi.d	$a0, $s3, 16
	ld.d	$a1, $s4, 8
	ld.d	$s4, $s4, 0
	stx.d	$a0, $s2, $s7
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 16
	bltu	$a1, $a2, .LBB218_4
# %bb.2:                                # %.noexc.i
.Ltmp1669:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1670:                              # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s3, 16
.LBB218_4:                              # %._crit_edge.i.i
	beq	$a1, $s6, .LBB218_7
# %bb.5:                                # %._crit_edge.i.i
	bnez	$a1, .LBB218_11
# %bb.6:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
.LBB218_7:
	ld.d	$a0, $sp, 16
	st.d	$a0, $s3, 8
	move	$s3, $s2
	bne	$s0, $s5, .LBB218_12
.LBB218_8:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	beqz	$s0, .LBB218_10
.LBB218_9:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB218_10:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB218_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 16
	st.d	$a0, $s3, 8
	move	$s3, $s2
	beq	$s0, $s5, .LBB218_8
.LBB218_12:                             # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB218_15
	.p2align	4, , 16
.LBB218_13:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB218_15 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB218_14:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB218_15 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	addi.d	$s4, $s4, 32
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB218_17
.LBB218_15:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	bne	$s3, $a1, .LBB218_13
# %bb.16:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB218_15 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB218_14
.LBB218_17:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	add.d	$s3, $s2, $s4
	bnez	$s0, .LBB218_9
	b	.LBB218_10
.LBB218_18:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB218_19:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22
.Ltmp1671:                              # EH_LABEL
	move	$fp, $a0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end218:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_, .Lfunc_end218-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table218:
.Lexception98:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end98-.Lcst_begin98
.Lcst_begin98:
	.uleb128 .Lfunc_begin98-.Lfunc_begin98  # >> Call Site 1 <<
	.uleb128 .Ltmp1669-.Lfunc_begin98       #   Call between .Lfunc_begin98 and .Ltmp1669
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1669-.Lfunc_begin98       # >> Call Site 2 <<
	.uleb128 .Ltmp1670-.Ltmp1669            #   Call between .Ltmp1669 and .Ltmp1670
	.uleb128 .Ltmp1671-.Lfunc_begin98       #     jumps to .Ltmp1671
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1670-.Lfunc_begin98       # >> Call Site 3 <<
	.uleb128 .Lfunc_end218-.Ltmp1670        #   Call between .Ltmp1670 and .Lfunc_end218
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end98:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin99:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception99
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a1
	ori	$a1, $zero, 11
	addi.d	$s2, $s1, 8
	bne	$a0, $a1, .LBB219_6
# %bb.1:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB219_14
# %bb.2:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB219_30
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB219_29
# %bb.4:
	bnez	$a0, .LBB219_31
# %bb.5:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB219_103
.LBB219_6:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	move	$fp, $a2
	st.d	$s0, $sp, 64
	st.d	$a2, $sp, 72
	st.d	$s0, $sp, 48
	ori	$a1, $zero, 15
	st.d	$a2, $sp, 56
	beq	$a0, $a1, .LBB219_20
# %bb.7:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 17
	beq	$a0, $a1, .LBB219_15
# %bb.8:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 16
	bne	$a0, $a1, .LBB219_25
# %bb.9:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB219_40
# %bb.10:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB219_69
# %bb.11:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB219_56
# %bb.12:
	bnez	$a0, .LBB219_70
# %bb.13:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB219_70
.LBB219_14:
	move	$a0, $zero
	ori	$a1, $zero, 27
	st.w	$a1, $s1, 152
	b	.LBB219_103
.LBB219_15:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB219_38
# %bb.16:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB219_44
# %bb.17:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB219_43
# %bb.18:
	bnez	$a0, .LBB219_45
# %bb.19:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB219_45
.LBB219_20:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB219_39
# %bb.21:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB219_57
# %bb.22:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB219_55
# %bb.23:
	bnez	$a0, .LBB219_58
# %bb.24:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB219_58
.LBB219_25:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit44
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB219_32
# %bb.26:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $s0, 0
	ld.bu	$s5, $a0, 0
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB219_83
# %bb.27:
	ld.d	$s6, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a1, .LBB219_77
# %bb.28:
	st.b	$s7, $s6, 0
	ld.d	$a1, $fp, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $fp, 8
	b	.LBB219_83
.LBB219_29:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB219_103
.LBB219_30:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB219_31:
	move	$a0, $zero
	b	.LBB219_103
.LBB219_32:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB219_41
# %bb.33:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB219_84
# %bb.34:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB219_105
# %bb.35:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB219_104
# %bb.36:
	bnez	$a0, .LBB219_106
# %bb.37:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB219_106
.LBB219_38:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB219_45
.LBB219_39:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB219_58
.LBB219_40:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB219_70
.LBB219_41:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit63
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB219_119
# %bb.42:
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB219_102
.LBB219_43:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB219_45
.LBB219_44:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB219_45:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB219_54
# %bb.46:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB219_48
# %bb.47:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB219_54
.LBB219_48:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB219_118
# %bb.49:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i36
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB219_51
# %bb.50:
	move	$a0, $s5
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB219_51:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i39
	add.d	$s6, $s5, $s2
	beqz	$s1, .LBB219_53
# %bb.52:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i41
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_53:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i42
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB219_54:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit43
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	move	$a0, $fp
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	b	.LBB219_102
.LBB219_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB219_58
.LBB219_56:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB219_70
.LBB219_57:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB219_58:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB219_67
# %bb.59:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB219_61
# %bb.60:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB219_67
.LBB219_61:
	ld.d	$s2, $fp, 0
	sub.d	$s3, $s6, $s2
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s3, $a0, .LBB219_118
# %bb.62:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i46
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s3
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s3, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s3
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s3
	beq	$s6, $s2, .LBB219_64
# %bb.63:
	move	$a0, $s5
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB219_64:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i49
	add.d	$s6, $s5, $s3
	beqz	$s2, .LBB219_66
# %bb.65:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i51
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_66:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i52
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB219_67:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit53
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $fp, 112
	ori	$a3, $zero, 2
	st.b	$a3, $s0, 0
	add.d	$a2, $a1, $a2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB219_117
# %bb.68:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	srli.d	$a3, $a0, 16
	or	$a0, $a1, $a0
	or	$a1, $a2, $a3
	st.h	$a0, $fp, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB219_102
.LBB219_69:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB219_70:
	addi.d	$a0, $sp, 16
	move	$a1, $fp
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB219_74
# %bb.71:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $s0, 0
	ld.bu	$s5, $a1, 0
	bne	$a2, $a0, .LBB219_92
# %bb.72:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB219_85
# %bb.73:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB219_92
.LBB219_74:
	ld.bu	$a1, $s0, 0
	bne	$a1, $a0, .LBB219_100
# %bb.75:
	ld.d	$s5, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s6, $s0, 1
	beq	$s5, $a0, .LBB219_93
# %bb.76:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB219_100
.LBB219_77:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB219_118
# %bb.78:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i55
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB219_80
# %bb.79:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB219_80:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i58
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB219_82
# %bb.81:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i60
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_82:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i61
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
	ori	$a0, $zero, 1
.LBB219_83:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit62
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	b	.LBB219_103
.LBB219_84:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB219_106
.LBB219_85:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB219_120
# %bb.86:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1674:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1675:                              # EH_LABEL
# %bb.87:                               # %.noexc20
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB219_89
# %bb.88:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB219_89:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB219_91
# %bb.90:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_91:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB219_92:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB219_101
	b	.LBB219_102
.LBB219_93:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB219_120
# %bb.94:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i22
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1672:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1673:                              # EH_LABEL
# %bb.95:                               # %.noexc30
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB219_97
# %bb.96:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB219_97:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i25
	add.d	$s5, $s4, $s2
	beqz	$s1, .LBB219_99
# %bb.98:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i27
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_99:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i28
	addi.d	$a0, $s5, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB219_100:                            # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB219_102
.LBB219_101:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_102:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ori	$a0, $zero, 1
.LBB219_103:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB219_104:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB219_106
.LBB219_105:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB219_106:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB219_108
# %bb.107:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB219_103
.LBB219_108:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB219_112
# %bb.109:
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB219_122
# %bb.110:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB219_123
# %bb.111:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	b	.LBB219_102
.LBB219_112:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB219_114
# %bb.113:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $s0, 1
	ld.b	$a2, $a0, 0
	b	.LBB219_116
.LBB219_114:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB219_124
# %bb.115:
	ld.b	$a1, $s0, 1
	ori	$a2, $zero, 45
.LBB219_116:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $s0, 0
	b	.LBB219_102
.LBB219_117:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB219_118:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB219_119:
	pcalau12i	$a0, %pc_hi20(.L.str.89)
	addi.d	$a1, $a0, %pc_lo12(.L.str.89)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB219_120:                            # %.invoke
.Ltmp1676:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1677:                              # EH_LABEL
# %bb.121:                              # %.cont
.LBB219_122:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB219_123:
	pcalau12i	$a0, %pc_hi20(.L.str.88)
	addi.d	$a1, $a0, %pc_lo12(.L.str.88)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB219_124:
	pcalau12i	$a0, %pc_hi20(.L.str.87)
	addi.d	$a1, $a0, %pc_lo12(.L.str.87)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB219_125:
.Ltmp1678:                              # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB219_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_127:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end219:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end219-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table219:
.Lexception99:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end99-.Lcst_begin99
.Lcst_begin99:
	.uleb128 .Lfunc_begin99-.Lfunc_begin99  # >> Call Site 1 <<
	.uleb128 .Ltmp1674-.Lfunc_begin99       #   Call between .Lfunc_begin99 and .Ltmp1674
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1674-.Lfunc_begin99       # >> Call Site 2 <<
	.uleb128 .Ltmp1675-.Ltmp1674            #   Call between .Ltmp1674 and .Ltmp1675
	.uleb128 .Ltmp1678-.Lfunc_begin99       #     jumps to .Ltmp1678
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1675-.Lfunc_begin99       # >> Call Site 3 <<
	.uleb128 .Ltmp1672-.Ltmp1675            #   Call between .Ltmp1675 and .Ltmp1672
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1672-.Lfunc_begin99       # >> Call Site 4 <<
	.uleb128 .Ltmp1673-.Ltmp1672            #   Call between .Ltmp1672 and .Ltmp1673
	.uleb128 .Ltmp1678-.Lfunc_begin99       #     jumps to .Ltmp1678
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1673-.Lfunc_begin99       # >> Call Site 5 <<
	.uleb128 .Ltmp1676-.Ltmp1673            #   Call between .Ltmp1673 and .Ltmp1676
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1676-.Lfunc_begin99       # >> Call Site 6 <<
	.uleb128 .Ltmp1677-.Ltmp1676            #   Call between .Ltmp1676 and .Ltmp1677
	.uleb128 .Ltmp1678-.Lfunc_begin99       #     jumps to .Ltmp1678
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1677-.Lfunc_begin99       # >> Call Site 7 <<
	.uleb128 .Lfunc_end219-.Ltmp1677        #   Call between .Ltmp1677 and .Lfunc_end219
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end99:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin100:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception100
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 112
	move	$s0, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB220_11
# %bb.1:
	ld.d	$a0, $s0, 0
	ld.d	$s5, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s6, $a0, 0
	beq	$s5, $a1, .LBB220_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB220_10
.LBB220_3:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB220_13
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1679:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1680:                              # EH_LABEL
# %bb.5:                                # %.noexc8
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB220_7
# %bb.6:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB220_7:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s0, $s4, $s2
	beqz	$s1, .LBB220_9
# %bb.8:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_9:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s0, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB220_10:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB220_11:
.Ltmp1684:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.90)
	addi.d	$a1, $a0, %pc_lo12(.L.str.90)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1685:                              # EH_LABEL
# %bb.12:
.LBB220_13:
.Ltmp1681:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1682:                              # EH_LABEL
# %bb.14:                               # %.noexc
.LBB220_15:
.Ltmp1683:                              # EH_LABEL
	b	.LBB220_17
.LBB220_16:
.Ltmp1686:                              # EH_LABEL
.LBB220_17:
	move	$fp, $a0
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s0, 16
	beq	$a0, $a1, .LBB220_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end220:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end220-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table220:
.Lexception100:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end100-.Lcst_begin100
.Lcst_begin100:
	.uleb128 .Lfunc_begin100-.Lfunc_begin100 # >> Call Site 1 <<
	.uleb128 .Ltmp1679-.Lfunc_begin100      #   Call between .Lfunc_begin100 and .Ltmp1679
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1679-.Lfunc_begin100      # >> Call Site 2 <<
	.uleb128 .Ltmp1680-.Ltmp1679            #   Call between .Ltmp1679 and .Ltmp1680
	.uleb128 .Ltmp1683-.Lfunc_begin100      #     jumps to .Ltmp1683
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1680-.Lfunc_begin100      # >> Call Site 3 <<
	.uleb128 .Ltmp1684-.Ltmp1680            #   Call between .Ltmp1680 and .Ltmp1684
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1684-.Lfunc_begin100      # >> Call Site 4 <<
	.uleb128 .Ltmp1685-.Ltmp1684            #   Call between .Ltmp1684 and .Ltmp1685
	.uleb128 .Ltmp1686-.Lfunc_begin100      #     jumps to .Ltmp1686
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1681-.Lfunc_begin100      # >> Call Site 5 <<
	.uleb128 .Ltmp1682-.Ltmp1681            #   Call between .Ltmp1681 and .Ltmp1682
	.uleb128 .Ltmp1683-.Lfunc_begin100      #     jumps to .Ltmp1683
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1682-.Lfunc_begin100      # >> Call Site 6 <<
	.uleb128 .Lfunc_end220-.Ltmp1682        #   Call between .Ltmp1682 and .Lfunc_end220
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end100:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.p2align	2
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a2, $a0, 0
	ld.bu	$a3, $a2, 0
	ori	$s3, $zero, 1
	bne	$a3, $s3, .LBB221_9
# %bb.1:
	ld.d	$s4, $a0, 8
	ld.d	$s7, $s4, 8
	ld.d	$a3, $s4, 16
	ld.bu	$s8, $a2, 1
	beq	$s7, $a3, .LBB221_3
# %bb.2:
	st.b	$s8, $s7, 0
	ld.d	$a2, $s4, 8
	addi.d	$a2, $a2, 1
	st.d	$a2, $s4, 8
	b	.LBB221_9
.LBB221_3:
	move	$s6, $a0
	ld.d	$fp, $s4, 0
	sub.d	$s0, $s7, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB221_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	move	$s5, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s8, $a0, $s0
	beq	$s7, $fp, .LBB221_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB221_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s7, $s2, $s0
	beqz	$fp, .LBB221_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB221_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s7, 1
	st.d	$s2, $s4, 0
	st.d	$a0, $s4, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s4, 16
	move	$a0, $s6
	move	$a1, $s5
.LBB221_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	st.b	$s3, $a0, 0
	st.b	$a1, $a0, 1
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB221_10:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end221:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc, .Lfunc_end221-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.p2align	2
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	ld.d	$a1, $a0, 0
	ld.bu	$a2, $a1, 0
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB222_9
# %bb.1:
	ld.d	$s3, $a0, 8
	ld.d	$s5, $s3, 8
	ld.d	$a2, $s3, 16
	ld.bu	$s6, $a1, 1
	beq	$s5, $a2, .LBB222_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a1, $s3, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $s3, 8
	b	.LBB222_9
.LBB222_3:
	move	$s4, $a0
	ld.d	$fp, $s3, 0
	sub.d	$s0, $s5, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB222_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s6, $a0, $s0
	beq	$s5, $fp, .LBB222_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB222_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s5, $s2, $s0
	beqz	$fp, .LBB222_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB222_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s5, 1
	st.d	$s2, $s3, 0
	st.d	$a0, $s3, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s3, 16
	move	$a0, $s4
.LBB222_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2
	st.b	$a1, $a0, 0
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB222_10:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end222:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv, .Lfunc_end222-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin101:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception101
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB223_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
.Ltmp1687:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp1688:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB223_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB223_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a3, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB223_8
.LBB223_5:
	st.d	$a0, $sp, 8
	st.d	$a3, $sp, 24
	b	.LBB223_14
.LBB223_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB223_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r7
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB223_5
.LBB223_8:
	st.d	$a2, $sp, 8
	move	$a0, $a2
	b	.LBB223_14
.LBB223_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB223_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB223_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB223_13
.LBB223_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB223_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB223_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB223_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB223_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB223_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB223_20
# %bb.18:                               # %.noexc.i.i
.Ltmp1690:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1691:                              # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB223_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB223_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB223_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB223_28
.LBB223_23:
	addi.d	$a0, $fp, 24
.Ltmp1692:                              # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1693:                              # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB223_26
.LBB223_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB223_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB223_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB223_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB223_25
	b	.LBB223_26
.LBB223_29:
.Ltmp1694:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$a1, $a0, %pc_lo12(.L.str.215)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1695:                              # EH_LABEL
# %bb.30:
.LBB223_31:
.Ltmp1689:                              # EH_LABEL
	b	.LBB223_33
.LBB223_32:
.Ltmp1696:                              # EH_LABEL
.LBB223_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB223_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB223_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end223:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end223-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table223:
.Lexception101:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end101-.Lcst_begin101
.Lcst_begin101:
	.uleb128 .Lfunc_begin101-.Lfunc_begin101 # >> Call Site 1 <<
	.uleb128 .Ltmp1687-.Lfunc_begin101      #   Call between .Lfunc_begin101 and .Ltmp1687
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1687-.Lfunc_begin101      # >> Call Site 2 <<
	.uleb128 .Ltmp1688-.Ltmp1687            #   Call between .Ltmp1687 and .Ltmp1688
	.uleb128 .Ltmp1689-.Lfunc_begin101      #     jumps to .Ltmp1689
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1688-.Lfunc_begin101      # >> Call Site 3 <<
	.uleb128 .Ltmp1690-.Ltmp1688            #   Call between .Ltmp1688 and .Ltmp1690
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1690-.Lfunc_begin101      # >> Call Site 4 <<
	.uleb128 .Ltmp1693-.Ltmp1690            #   Call between .Ltmp1690 and .Ltmp1693
	.uleb128 .Ltmp1696-.Lfunc_begin101      #     jumps to .Ltmp1696
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1693-.Lfunc_begin101      # >> Call Site 5 <<
	.uleb128 .Ltmp1694-.Ltmp1693            #   Call between .Ltmp1693 and .Ltmp1694
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1694-.Lfunc_begin101      # >> Call Site 6 <<
	.uleb128 .Ltmp1695-.Ltmp1694            #   Call between .Ltmp1694 and .Ltmp1695
	.uleb128 .Ltmp1696-.Lfunc_begin101      #     jumps to .Ltmp1696
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1695-.Lfunc_begin101      # >> Call Site 7 <<
	.uleb128 .Lfunc_end223-.Ltmp1695        #   Call between .Ltmp1695 and .Lfunc_end223
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end101:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
.Lfunc_begin102:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception102
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a2
	blt	$a2, $a1, .LBB224_32
# %bb.1:
	move	$a2, $a1
	move	$fp, $a0
	addi.d	$s1, $sp, 152
	st.d	$s1, $sp, 136
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp1697:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1698:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB224_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_4:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE12_M_transformEc.exit
	st.d	$s1, $sp, 136
.Ltmp1700:                              # EH_LABEL
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp1701:                              # EH_LABEL
# %bb.5:                                # %.noexc
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp1703:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1704:                              # EH_LABEL
# %bb.6:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB224_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i13
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_8:
	ld.d	$a0, $sp, 40
	addi.d	$s1, $sp, 88
	addi.d	$s0, $sp, 56
	st.d	$s1, $sp, 72
	beq	$a0, $s0, .LBB224_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i16
	ld.d	$a1, $sp, 56
	ld.d	$s4, $sp, 48
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
	b	.LBB224_11
.LBB224_10:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
	ld.d	$s4, $sp, 48
	addi.d	$a2, $s4, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB224_11:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i
	st.d	$s4, $sp, 80
	st.d	$s0, $sp, 40
	st.d	$zero, $sp, 48
	ld.d	$a0, $sp, 8
	st.b	$zero, $sp, 56
	addi.d	$s3, $sp, 120
	addi.d	$s2, $sp, 24
	st.d	$s3, $sp, 104
	beq	$a0, $s2, .LBB224_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i3.i.i
	ld.d	$a1, $sp, 24
	ld.d	$s6, $sp, 16
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
	b	.LBB224_14
.LBB224_13:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i4.i.i
	ld.d	$s6, $sp, 16
	addi.d	$a2, $s6, 1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB224_14:
	ld.d	$s5, $fp, 56
	ld.d	$a0, $fp, 64
	st.d	$s6, $sp, 112
	st.d	$s2, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beq	$s5, $a0, .LBB224_17
# %bb.15:
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 72
	beq	$a1, $s1, .LBB224_20
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	st.d	$a1, $s5, 0
	ld.d	$a0, $sp, 88
	st.d	$a0, $s5, 16
	b	.LBB224_21
.LBB224_17:
.Ltmp1706:                              # EH_LABEL
	addi.d	$a0, $fp, 48
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1707:                              # EH_LABEL
# %bb.18:                               # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit
	ld.d	$a0, $sp, 104
	beq	$a0, $s3, .LBB224_25
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i18
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB224_25
.LBB224_20:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i
	addi.d	$a2, $s4, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB224_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i
	st.d	$s4, $s5, 8
	addi.d	$a0, $s5, 48
	st.d	$a0, $s5, 32
	ld.d	$a1, $sp, 104
	st.d	$s1, $sp, 72
	st.d	$zero, $sp, 80
	st.b	$zero, $sp, 88
	beq	$a1, $s3, .LBB224_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i.i.i
	st.d	$a1, $s5, 32
	ld.d	$a0, $sp, 120
	ld.d	$s4, $sp, 112
	st.d	$a0, $s5, 48
	b	.LBB224_24
.LBB224_23:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i.i.i
	ld.d	$s4, $sp, 112
	addi.d	$a2, $s4, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB224_24:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit.thread
	st.d	$s4, $s5, 40
	ld.d	$a0, $fp, 56
	st.d	$s3, $sp, 104
	st.d	$zero, $sp, 112
	st.b	$zero, $sp, 120
	addi.d	$a0, $a0, 64
	st.d	$a0, $fp, 56
.LBB224_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $sp, 72
	beq	$a0, $s1, .LBB224_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_27:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB224_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB224_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_31:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB224_32:
	pcalau12i	$a0, %pc_hi20(.L.str.216)
	addi.d	$a1, $a0, %pc_lo12(.L.str.216)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB224_33:
.Ltmp1708:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB224_39
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	b	.LBB224_37
.LBB224_35:
.Ltmp1705:                              # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB224_39
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i10
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB224_37:                             # %.body
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB224_39
.LBB224_38:
.Ltmp1702:                              # EH_LABEL
	move	$fp, $a0
.LBB224_39:                             # %.body
	ld.d	$a0, $sp, 40
	addi.d	$a1, $sp, 56
	beq	$a0, $a1, .LBB224_44
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	b	.LBB224_43
.LBB224_41:
.Ltmp1699:                              # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB224_44
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB224_43:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_44:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end224:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc, .Lfunc_end224-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,comdat
	.p2align	2, 0x0
GCC_except_table224:
.Lexception102:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end102-.Lcst_begin102
.Lcst_begin102:
	.uleb128 .Lfunc_begin102-.Lfunc_begin102 # >> Call Site 1 <<
	.uleb128 .Ltmp1697-.Lfunc_begin102      #   Call between .Lfunc_begin102 and .Ltmp1697
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1697-.Lfunc_begin102      # >> Call Site 2 <<
	.uleb128 .Ltmp1698-.Ltmp1697            #   Call between .Ltmp1697 and .Ltmp1698
	.uleb128 .Ltmp1699-.Lfunc_begin102      #     jumps to .Ltmp1699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1698-.Lfunc_begin102      # >> Call Site 3 <<
	.uleb128 .Ltmp1700-.Ltmp1698            #   Call between .Ltmp1698 and .Ltmp1700
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1700-.Lfunc_begin102      # >> Call Site 4 <<
	.uleb128 .Ltmp1701-.Ltmp1700            #   Call between .Ltmp1700 and .Ltmp1701
	.uleb128 .Ltmp1702-.Lfunc_begin102      #     jumps to .Ltmp1702
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1703-.Lfunc_begin102      # >> Call Site 5 <<
	.uleb128 .Ltmp1704-.Ltmp1703            #   Call between .Ltmp1703 and .Ltmp1704
	.uleb128 .Ltmp1705-.Lfunc_begin102      #     jumps to .Ltmp1705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1704-.Lfunc_begin102      # >> Call Site 6 <<
	.uleb128 .Ltmp1706-.Ltmp1704            #   Call between .Ltmp1704 and .Ltmp1706
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1706-.Lfunc_begin102      # >> Call Site 7 <<
	.uleb128 .Ltmp1707-.Ltmp1706            #   Call between .Ltmp1706 and .Ltmp1707
	.uleb128 .Ltmp1708-.Lfunc_begin102      #     jumps to .Ltmp1708
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1707-.Lfunc_begin102      # >> Call Site 8 <<
	.uleb128 .Lfunc_end224-.Ltmp1707        #   Call between .Ltmp1707 and .Lfunc_end224
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end102:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin103:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception103
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a2
	move	$fp, $a1
	addi.d	$a0, $a0, -11
	ori	$a1, $zero, 6
	addi.d	$s2, $s1, 8
	bltu	$a1, $a0, .LBB225_23
# %bb.1:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI225_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI225_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB225_2:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB225_34
# %bb.3:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB225_54
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB225_52
# %bb.5:
	bnez	$a0, .LBB225_7
# %bb.6:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.LBB225_7:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$s2, $zero
	b	.LBB225_65
.LBB225_8:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB225_33
# %bb.9:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB225_42
# %bb.10:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB225_41
# %bb.11:
	bnez	$a0, .LBB225_43
# %bb.12:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB225_43
.LBB225_13:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB225_35
# %bb.14:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB225_55
# %bb.15:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB225_53
# %bb.16:
	bnez	$a0, .LBB225_56
# %bb.17:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB225_56
.LBB225_18:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB225_36
# %bb.19:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB225_61
# %bb.20:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB225_60
# %bb.21:
	bnez	$a0, .LBB225_62
# %bb.22:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB225_62
.LBB225_23:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB225_27
# %bb.24:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $fp, 0
	ld.bu	$s1, $a0, 0
	ori	$s2, $zero, 1
	bne	$a1, $s2, .LBB225_26
# %bb.25:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB225_26:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit32
	st.b	$s2, $fp, 0
	st.b	$s1, $fp, 1
	b	.LBB225_65
.LBB225_27:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB225_37
# %bb.28:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB225_66
# %bb.29:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB225_68
# %bb.30:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB225_67
# %bb.31:
	bnez	$a0, .LBB225_69
# %bb.32:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB225_69
.LBB225_33:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB225_43
.LBB225_34:
	move	$s2, $zero
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB225_65
.LBB225_35:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB225_56
.LBB225_36:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB225_62
.LBB225_37:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit33
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB225_83
# %bb.38:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB225_40
# %bb.39:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB225_40:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit39
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ori	$a2, $zero, 2
	st.b	$a2, $fp, 0
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB225_65
.LBB225_41:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB225_43
.LBB225_42:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB225_43:
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB225_47
# %bb.44:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $fp, 0
	ld.bu	$s1, $a1, 0
	bne	$a2, $a0, .LBB225_46
# %bb.45:
	ld.b	$a1, $fp, 1
.Ltmp1711:                              # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp1712:                              # EH_LABEL
.LBB225_46:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 0
	st.b	$s1, $fp, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB225_50
	b	.LBB225_51
.LBB225_47:
	ld.bu	$a1, $fp, 0
	bne	$a1, $a0, .LBB225_49
# %bb.48:
	ld.b	$a1, $fp, 1
.Ltmp1709:                              # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp1710:                              # EH_LABEL
.LBB225_49:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB225_51
.LBB225_50:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB225_51:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	ori	$s2, $zero, 1
	b	.LBB225_65
.LBB225_52:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB225_65
.LBB225_53:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB225_56
.LBB225_54:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB225_65
.LBB225_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB225_56:
	ld.bu	$a0, $fp, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB225_58
# %bb.57:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB225_58:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit30
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $s0, 112
	ori	$a3, $zero, 2
	st.b	$a3, $fp, 0
	add.d	$a2, $a1, $a2
	ori	$a3, $zero, 1
	ori	$s2, $zero, 1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB225_82
# %bb.59:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $s0, 96
	ld.b	$a2, $s0, 98
	srli.d	$a3, $a0, 16
	or	$a0, $a1, $a0
	or	$a1, $a2, $a3
	st.h	$a0, $s0, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $s0, 98
	b	.LBB225_65
.LBB225_60:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB225_62
.LBB225_61:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB225_62:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB225_64
# %bb.63:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB225_64:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit27
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.LBB225_65:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s2
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB225_66:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB225_69
.LBB225_67:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB225_69
.LBB225_68:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB225_69:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	ld.bu	$a1, $fp, 0
	beqz	$a0, .LBB225_73
# %bb.70:
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB225_72
# %bb.71:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB225_72:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit35
	move	$s2, $zero
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	b	.LBB225_65
.LBB225_73:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB225_77
# %bb.74:
	ori	$a0, $zero, 2
	beq	$a1, $a0, .LBB225_84
# %bb.75:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB225_85
# %bb.76:                               # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit37
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB225_65
.LBB225_77:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB225_79
# %bb.78:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $fp, 1
	ld.b	$a2, $a0, 0
	b	.LBB225_81
.LBB225_79:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB225_86
# %bb.80:
	ld.b	$a1, $fp, 1
	ori	$a2, $zero, 45
.LBB225_81:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB225_65
.LBB225_82:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB225_83:
	pcalau12i	$a0, %pc_hi20(.L.str.89)
	addi.d	$a1, $a0, %pc_lo12(.L.str.89)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB225_84:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB225_85:
	pcalau12i	$a0, %pc_hi20(.L.str.88)
	addi.d	$a1, $a0, %pc_lo12(.L.str.88)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB225_86:
	pcalau12i	$a0, %pc_hi20(.L.str.87)
	addi.d	$a1, $a0, %pc_lo12(.L.str.87)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB225_87:
.Ltmp1713:                              # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB225_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB225_89:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end225:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end225-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
.LJTI225_0:
	.word	.LBB225_2-.LJTI225_0
	.word	.LBB225_23-.LJTI225_0
	.word	.LBB225_23-.LJTI225_0
	.word	.LBB225_23-.LJTI225_0
	.word	.LBB225_13-.LJTI225_0
	.word	.LBB225_8-.LJTI225_0
	.word	.LBB225_18-.LJTI225_0
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table225:
.Lexception103:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end103-.Lcst_begin103
.Lcst_begin103:
	.uleb128 .Lfunc_begin103-.Lfunc_begin103 # >> Call Site 1 <<
	.uleb128 .Ltmp1711-.Lfunc_begin103      #   Call between .Lfunc_begin103 and .Ltmp1711
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1711-.Lfunc_begin103      # >> Call Site 2 <<
	.uleb128 .Ltmp1710-.Ltmp1711            #   Call between .Ltmp1711 and .Ltmp1710
	.uleb128 .Ltmp1713-.Lfunc_begin103      #     jumps to .Ltmp1713
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1710-.Lfunc_begin103      # >> Call Site 3 <<
	.uleb128 .Lfunc_end225-.Ltmp1710        #   Call between .Ltmp1710 and .Lfunc_end225
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end103:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 104
	move	$s0, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB226_10
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s0
	jirl	$ra, $a2, 0
	ld.d	$s4, $fp, 8
	ld.d	$a1, $fp, 16
	beq	$s4, $a1, .LBB226_3
# %bb.2:
	st.b	$a0, $s4, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB226_9
.LBB226_3:
	move	$s5, $a0
	ld.d	$s0, $fp, 0
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB226_11
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB226_6
# %bb.5:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB226_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB226_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB226_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 16
.LBB226_9:                              # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB226_10:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB226_11:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end226:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc, .Lfunc_end226-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin104:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception104
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 112
	move	$fp, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 8
	beqz	$a0, .LBB227_13
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.b	$s1, $a0, 0
	ld.d	$s2, $s0, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB227_15
# %bb.2:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit.i
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
.Ltmp1714:                              # EH_LABEL
	move	$a1, $s1
	jirl	$ra, $a2, 0
.Ltmp1715:                              # EH_LABEL
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$s5, $s0, 8
	ld.d	$a1, $s0, 16
	beq	$s5, $a1, .LBB227_5
# %bb.4:
	st.b	$a0, $s5, 0
	ld.d	$a0, $s0, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 8
	b	.LBB227_12
.LBB227_5:
	move	$s6, $a0
	ld.d	$s1, $s0, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB227_17
# %bb.6:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1716:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1717:                              # EH_LABEL
# %bb.7:                                # %.noexc10
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB227_9
# %bb.8:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB227_9:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$fp, $s4, $s2
	beqz	$s1, .LBB227_11
# %bb.10:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB227_11:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $fp, 1
	st.d	$s4, $s0, 0
	st.d	$a0, $s0, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $s0, 16
.LBB227_12:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB227_13:
.Ltmp1723:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.90)
	addi.d	$a1, $a0, %pc_lo12(.L.str.90)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1724:                              # EH_LABEL
# %bb.14:
.LBB227_15:
.Ltmp1720:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1721:                              # EH_LABEL
# %bb.16:                               # %.noexc
.LBB227_17:
.Ltmp1718:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1719:                              # EH_LABEL
# %bb.18:                               # %.noexc9
.LBB227_19:
.Ltmp1725:                              # EH_LABEL
	b	.LBB227_21
.LBB227_20:
.Ltmp1722:                              # EH_LABEL
.LBB227_21:
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB227_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB227_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end227:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end227-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table227:
.Lexception104:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end104-.Lcst_begin104
.Lcst_begin104:
	.uleb128 .Lfunc_begin104-.Lfunc_begin104 # >> Call Site 1 <<
	.uleb128 .Ltmp1714-.Lfunc_begin104      #   Call between .Lfunc_begin104 and .Ltmp1714
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1714-.Lfunc_begin104      # >> Call Site 2 <<
	.uleb128 .Ltmp1717-.Ltmp1714            #   Call between .Ltmp1714 and .Ltmp1717
	.uleb128 .Ltmp1722-.Lfunc_begin104      #     jumps to .Ltmp1722
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1717-.Lfunc_begin104      # >> Call Site 3 <<
	.uleb128 .Ltmp1723-.Ltmp1717            #   Call between .Ltmp1717 and .Ltmp1723
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1723-.Lfunc_begin104      # >> Call Site 4 <<
	.uleb128 .Ltmp1724-.Ltmp1723            #   Call between .Ltmp1723 and .Ltmp1724
	.uleb128 .Ltmp1725-.Lfunc_begin104      #     jumps to .Ltmp1725
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1720-.Lfunc_begin104      # >> Call Site 5 <<
	.uleb128 .Ltmp1719-.Ltmp1720            #   Call between .Ltmp1720 and .Ltmp1719
	.uleb128 .Ltmp1722-.Lfunc_begin104      #     jumps to .Ltmp1722
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1719-.Lfunc_begin104      # >> Call Site 6 <<
	.uleb128 .Lfunc_end227-.Ltmp1719        #   Call between .Ltmp1719 and .Lfunc_end227
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end104:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin105:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception105
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB228_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
.Ltmp1726:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp1727:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB228_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB228_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a3, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB228_8
.LBB228_5:
	st.d	$a0, $sp, 8
	st.d	$a3, $sp, 24
	b	.LBB228_14
.LBB228_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB228_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r7
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB228_5
.LBB228_8:
	st.d	$a2, $sp, 8
	move	$a0, $a2
	b	.LBB228_14
.LBB228_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB228_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB228_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB228_13
.LBB228_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB228_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB228_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB228_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB228_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB228_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB228_20
# %bb.18:                               # %.noexc.i.i
.Ltmp1729:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1730:                              # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB228_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB228_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB228_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB228_28
.LBB228_23:
	addi.d	$a0, $fp, 24
.Ltmp1731:                              # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1732:                              # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB228_26
.LBB228_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB228_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB228_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB228_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB228_25
	b	.LBB228_26
.LBB228_29:
.Ltmp1733:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$a1, $a0, %pc_lo12(.L.str.215)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1734:                              # EH_LABEL
# %bb.30:
.LBB228_31:
.Ltmp1728:                              # EH_LABEL
	b	.LBB228_33
.LBB228_32:
.Ltmp1735:                              # EH_LABEL
.LBB228_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB228_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB228_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end228:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end228-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table228:
.Lexception105:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end105-.Lcst_begin105
.Lcst_begin105:
	.uleb128 .Lfunc_begin105-.Lfunc_begin105 # >> Call Site 1 <<
	.uleb128 .Ltmp1726-.Lfunc_begin105      #   Call between .Lfunc_begin105 and .Ltmp1726
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1726-.Lfunc_begin105      # >> Call Site 2 <<
	.uleb128 .Ltmp1727-.Ltmp1726            #   Call between .Ltmp1726 and .Ltmp1727
	.uleb128 .Ltmp1728-.Lfunc_begin105      #     jumps to .Ltmp1728
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1727-.Lfunc_begin105      # >> Call Site 3 <<
	.uleb128 .Ltmp1729-.Ltmp1727            #   Call between .Ltmp1727 and .Ltmp1729
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1729-.Lfunc_begin105      # >> Call Site 4 <<
	.uleb128 .Ltmp1732-.Ltmp1729            #   Call between .Ltmp1729 and .Ltmp1732
	.uleb128 .Ltmp1735-.Lfunc_begin105      #     jumps to .Ltmp1735
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1732-.Lfunc_begin105      # >> Call Site 5 <<
	.uleb128 .Ltmp1733-.Ltmp1732            #   Call between .Ltmp1732 and .Ltmp1733
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1733-.Lfunc_begin105      # >> Call Site 6 <<
	.uleb128 .Ltmp1734-.Ltmp1733            #   Call between .Ltmp1733 and .Ltmp1734
	.uleb128 .Ltmp1735-.Lfunc_begin105      #     jumps to .Ltmp1735
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1734-.Lfunc_begin105      # >> Call Site 7 <<
	.uleb128 .Lfunc_end228-.Ltmp1734        #   Call between .Ltmp1734 and .Lfunc_end228
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end105:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	blt	$a2, $a1, .LBB229_15
# %bb.1:
	ld.d	$s3, $a0, 56
	ld.d	$a3, $a0, 64
	bstrins.d	$a1, $a2, 63, 8
	beq	$s3, $a3, .LBB229_3
# %bb.2:
	st.h	$a1, $s3, 0
	ld.d	$a1, $a0, 56
	addi.d	$a1, $a1, 2
	st.d	$a1, $a0, 56
	b	.LBB229_14
.LBB229_3:
	move	$s2, $a0
	ld.d	$fp, $a0, 48
	sub.d	$s0, $s3, $fp
	addi.w	$a0, $zero, -2
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB229_16
# %bb.4:                                # %_ZNKSt6vectorISt4pairIccESaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
	move	$s5, $a1
	srai.d	$a0, $s0, 1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 1023
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	stx.h	$s5, $a0, $s0
	move	$s5, $a0
	beq	$fp, $s3, .LBB229_11
# %bb.5:                                # %.lr.ph.i.i.i.i.i.i.preheader
	addi.d	$a1, $s0, -2
	ori	$a2, $zero, 62
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a1, $a2, .LBB229_10
# %bb.6:                                # %.lr.ph.i.i.i.i.i.i.preheader
	sub.d	$a2, $s1, $fp
	ori	$a3, $zero, 64
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a2, $a3, .LBB229_10
# %bb.7:                                # %vector.ph
	srli.d	$a0, $a1, 1
	addi.d	$a1, $a0, 1
	move	$a2, $a1
	bstrins.d	$a2, $zero, 4, 0
	alsl.d	$s5, $a2, $s1, 1
	alsl.d	$a0, $a2, $fp, 1
	addi.d	$a3, $fp, 32
	addi.d	$a4, $s1, 32
	move	$a5, $a2
	.p2align	4, , 16
.LBB229_8:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvld	$xr0, $a3, -32
	xvld	$xr1, $a3, 0
	xvst	$xr0, $a4, -32
	xvst	$xr1, $a4, 0
	addi.d	$a3, $a3, 64
	addi.d	$a5, $a5, -32
	addi.d	$a4, $a4, 64
	bnez	$a5, .LBB229_8
# %bb.9:                                # %middle.block
	beq	$a1, $a2, .LBB229_11
	.p2align	4, , 16
.LBB229_10:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a1, $a0, 0
	st.h	$a1, $s5, 0
	addi.d	$a0, $a0, 2
	addi.d	$s5, $s5, 2
	bne	$a0, $s3, .LBB229_10
.LBB229_11:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit.i.i.i
	beqz	$fp, .LBB229_13
# %bb.12:                               # %_ZNSt12_Vector_baseISt4pairIccESaIS1_EE13_M_deallocateEPS1_m.exit.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB229_13:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE17_M_realloc_appendIJS1_EEEvDpOT_.exit.i.i
	addi.d	$a0, $s5, 2
	st.d	$s1, $s2, 48
	st.d	$a0, $s2, 56
	alsl.d	$a0, $s4, $s1, 1
	st.d	$a0, $s2, 64
.LBB229_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE9push_backEOS1_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB229_15:
	pcalau12i	$a0, %pc_hi20(.L.str.216)
	addi.d	$a1, $a0, %pc_lo12(.L.str.216)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB229_16:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end229:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc, .Lfunc_end229-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	2
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin106:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception106
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a2
	move	$fp, $a1
	addi.d	$a0, $a0, -11
	ori	$a1, $zero, 6
	addi.d	$s2, $s1, 8
	bltu	$a1, $a0, .LBB230_23
# %bb.1:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI230_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI230_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB230_2:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB230_34
# %bb.3:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB230_54
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB230_52
# %bb.5:
	bnez	$a0, .LBB230_7
# %bb.6:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.LBB230_7:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$s2, $zero
	b	.LBB230_65
.LBB230_8:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB230_33
# %bb.9:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB230_42
# %bb.10:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB230_41
# %bb.11:
	bnez	$a0, .LBB230_43
# %bb.12:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB230_43
.LBB230_13:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB230_35
# %bb.14:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB230_55
# %bb.15:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB230_53
# %bb.16:
	bnez	$a0, .LBB230_56
# %bb.17:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB230_56
.LBB230_18:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB230_36
# %bb.19:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB230_61
# %bb.20:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB230_60
# %bb.21:
	bnez	$a0, .LBB230_62
# %bb.22:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB230_62
.LBB230_23:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB230_27
# %bb.24:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $fp, 0
	ld.bu	$s1, $a0, 0
	ori	$s2, $zero, 1
	bne	$a1, $s2, .LBB230_26
# %bb.25:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB230_26:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit32
	st.b	$s2, $fp, 0
	st.b	$s1, $fp, 1
	b	.LBB230_65
.LBB230_27:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB230_37
# %bb.28:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB230_66
# %bb.29:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB230_68
# %bb.30:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB230_67
# %bb.31:
	bnez	$a0, .LBB230_69
# %bb.32:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB230_69
.LBB230_33:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB230_43
.LBB230_34:
	move	$s2, $zero
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB230_65
.LBB230_35:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB230_56
.LBB230_36:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB230_62
.LBB230_37:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit33
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB230_83
# %bb.38:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB230_40
# %bb.39:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB230_40:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit39
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ori	$a2, $zero, 2
	st.b	$a2, $fp, 0
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB230_65
.LBB230_41:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB230_43
.LBB230_42:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB230_43:
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB230_47
# %bb.44:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $fp, 0
	ld.bu	$s1, $a1, 0
	bne	$a2, $a0, .LBB230_46
# %bb.45:
	ld.b	$a1, $fp, 1
.Ltmp1738:                              # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp1739:                              # EH_LABEL
.LBB230_46:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 0
	st.b	$s1, $fp, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB230_50
	b	.LBB230_51
.LBB230_47:
	ld.bu	$a1, $fp, 0
	bne	$a1, $a0, .LBB230_49
# %bb.48:
	ld.b	$a1, $fp, 1
.Ltmp1736:                              # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp1737:                              # EH_LABEL
.LBB230_49:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB230_51
.LBB230_50:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB230_51:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	ori	$s2, $zero, 1
	b	.LBB230_65
.LBB230_52:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB230_65
.LBB230_53:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB230_56
.LBB230_54:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB230_65
.LBB230_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB230_56:
	ld.bu	$a0, $fp, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB230_58
# %bb.57:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB230_58:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit30
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $s0, 112
	ori	$a3, $zero, 2
	st.b	$a3, $fp, 0
	add.d	$a2, $a1, $a2
	ori	$a3, $zero, 1
	ori	$s2, $zero, 1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	bstrpick.d	$a1, $a0, 16, 0
	beqz	$a1, .LBB230_82
# %bb.59:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $s0, 96
	ld.b	$a2, $s0, 98
	srli.d	$a3, $a0, 16
	or	$a0, $a1, $a0
	or	$a1, $a2, $a3
	st.h	$a0, $s0, 96
	bstrpick.d	$a0, $a1, 47, 0
	st.b	$a0, $s0, 98
	b	.LBB230_65
.LBB230_60:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB230_62
.LBB230_61:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB230_62:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB230_64
# %bb.63:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB230_64:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit27
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.LBB230_65:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s2
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB230_66:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB230_69
.LBB230_67:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB230_69
.LBB230_68:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB230_69:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	ld.bu	$a1, $fp, 0
	beqz	$a0, .LBB230_73
# %bb.70:
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB230_72
# %bb.71:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB230_72:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit35
	move	$s2, $zero
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	b	.LBB230_65
.LBB230_73:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB230_77
# %bb.74:
	ori	$a0, $zero, 2
	beq	$a1, $a0, .LBB230_84
# %bb.75:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB230_85
# %bb.76:                               # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit37
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB230_65
.LBB230_77:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB230_79
# %bb.78:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $fp, 1
	ld.b	$a2, $a0, 0
	b	.LBB230_81
.LBB230_79:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB230_86
# %bb.80:
	ld.b	$a1, $fp, 1
	ori	$a2, $zero, 45
.LBB230_81:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB230_65
.LBB230_82:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB230_83:
	pcalau12i	$a0, %pc_hi20(.L.str.89)
	addi.d	$a1, $a0, %pc_lo12(.L.str.89)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB230_84:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB230_85:
	pcalau12i	$a0, %pc_hi20(.L.str.88)
	addi.d	$a1, $a0, %pc_lo12(.L.str.88)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB230_86:
	pcalau12i	$a0, %pc_hi20(.L.str.87)
	addi.d	$a1, $a0, %pc_lo12(.L.str.87)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB230_87:
.Ltmp1740:                              # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB230_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB230_89:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end230:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end230-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
.LJTI230_0:
	.word	.LBB230_2-.LJTI230_0
	.word	.LBB230_23-.LJTI230_0
	.word	.LBB230_23-.LJTI230_0
	.word	.LBB230_23-.LJTI230_0
	.word	.LBB230_13-.LJTI230_0
	.word	.LBB230_8-.LJTI230_0
	.word	.LBB230_18-.LJTI230_0
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table230:
.Lexception106:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end106-.Lcst_begin106
.Lcst_begin106:
	.uleb128 .Lfunc_begin106-.Lfunc_begin106 # >> Call Site 1 <<
	.uleb128 .Ltmp1738-.Lfunc_begin106      #   Call between .Lfunc_begin106 and .Ltmp1738
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1738-.Lfunc_begin106      # >> Call Site 2 <<
	.uleb128 .Ltmp1737-.Ltmp1738            #   Call between .Ltmp1738 and .Ltmp1737
	.uleb128 .Ltmp1740-.Lfunc_begin106      #     jumps to .Ltmp1740
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1737-.Lfunc_begin106      # >> Call Site 3 <<
	.uleb128 .Lfunc_end230-.Ltmp1737        #   Call between .Ltmp1737 and .Lfunc_end230
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end106:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 104
	move	$s0, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB231_10
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s0
	jirl	$ra, $a2, 0
	ld.d	$s4, $fp, 8
	ld.d	$a1, $fp, 16
	beq	$s4, $a1, .LBB231_3
# %bb.2:
	st.b	$a0, $s4, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB231_9
.LBB231_3:
	move	$s5, $a0
	ld.d	$s0, $fp, 0
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB231_11
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB231_6
# %bb.5:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB231_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB231_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB231_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 16
.LBB231_9:                              # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB231_10:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB231_11:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end231:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc, .Lfunc_end231-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin107:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception107
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 112
	move	$fp, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 8
	beqz	$a0, .LBB232_13
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.b	$s1, $a0, 0
	ld.d	$s2, $s0, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB232_15
# %bb.2:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit.i
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
.Ltmp1741:                              # EH_LABEL
	move	$a1, $s1
	jirl	$ra, $a2, 0
.Ltmp1742:                              # EH_LABEL
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$s5, $s0, 8
	ld.d	$a1, $s0, 16
	beq	$s5, $a1, .LBB232_5
# %bb.4:
	st.b	$a0, $s5, 0
	ld.d	$a0, $s0, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 8
	b	.LBB232_12
.LBB232_5:
	move	$s6, $a0
	ld.d	$s1, $s0, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB232_17
# %bb.6:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp1743:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1744:                              # EH_LABEL
# %bb.7:                                # %.noexc10
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB232_9
# %bb.8:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB232_9:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$fp, $s4, $s2
	beqz	$s1, .LBB232_11
# %bb.10:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB232_11:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $fp, 1
	st.d	$s4, $s0, 0
	st.d	$a0, $s0, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $s0, 16
.LBB232_12:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB232_13:
.Ltmp1750:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.90)
	addi.d	$a1, $a0, %pc_lo12(.L.str.90)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1751:                              # EH_LABEL
# %bb.14:
.LBB232_15:
.Ltmp1747:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1748:                              # EH_LABEL
# %bb.16:                               # %.noexc
.LBB232_17:
.Ltmp1745:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1746:                              # EH_LABEL
# %bb.18:                               # %.noexc9
.LBB232_19:
.Ltmp1752:                              # EH_LABEL
	b	.LBB232_21
.LBB232_20:
.Ltmp1749:                              # EH_LABEL
.LBB232_21:
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB232_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB232_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end232:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end232-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table232:
.Lexception107:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end107-.Lcst_begin107
.Lcst_begin107:
	.uleb128 .Lfunc_begin107-.Lfunc_begin107 # >> Call Site 1 <<
	.uleb128 .Ltmp1741-.Lfunc_begin107      #   Call between .Lfunc_begin107 and .Ltmp1741
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1741-.Lfunc_begin107      # >> Call Site 2 <<
	.uleb128 .Ltmp1744-.Ltmp1741            #   Call between .Ltmp1741 and .Ltmp1744
	.uleb128 .Ltmp1749-.Lfunc_begin107      #     jumps to .Ltmp1749
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1744-.Lfunc_begin107      # >> Call Site 3 <<
	.uleb128 .Ltmp1750-.Ltmp1744            #   Call between .Ltmp1744 and .Ltmp1750
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1750-.Lfunc_begin107      # >> Call Site 4 <<
	.uleb128 .Ltmp1751-.Ltmp1750            #   Call between .Ltmp1750 and .Ltmp1751
	.uleb128 .Ltmp1752-.Lfunc_begin107      #     jumps to .Ltmp1752
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1747-.Lfunc_begin107      # >> Call Site 5 <<
	.uleb128 .Ltmp1746-.Ltmp1747            #   Call between .Ltmp1747 and .Ltmp1746
	.uleb128 .Ltmp1749-.Lfunc_begin107      #     jumps to .Ltmp1749
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1746-.Lfunc_begin107      # >> Call Site 6 <<
	.uleb128 .Lfunc_end232-.Ltmp1746        #   Call between .Ltmp1746 and .Lfunc_end232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end107:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin108:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception108
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB233_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
.Ltmp1753:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp1754:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB233_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB233_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a3, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB233_8
.LBB233_5:
	st.d	$a0, $sp, 8
	st.d	$a3, $sp, 24
	b	.LBB233_14
.LBB233_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 8
	addi.d	$a2, $sp, 24
	beq	$a1, $a2, .LBB233_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r7
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB233_5
.LBB233_8:
	st.d	$a2, $sp, 8
	move	$a0, $a2
	b	.LBB233_14
.LBB233_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB233_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB233_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB233_13
.LBB233_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB233_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB233_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB233_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB233_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB233_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB233_20
# %bb.18:                               # %.noexc.i.i
.Ltmp1756:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1757:                              # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB233_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB233_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB233_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB233_28
.LBB233_23:
	addi.d	$a0, $fp, 24
.Ltmp1758:                              # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1759:                              # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB233_26
.LBB233_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB233_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB233_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB233_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB233_25
	b	.LBB233_26
.LBB233_29:
.Ltmp1760:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$a1, $a0, %pc_lo12(.L.str.215)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1761:                              # EH_LABEL
# %bb.30:
.LBB233_31:
.Ltmp1755:                              # EH_LABEL
	b	.LBB233_33
.LBB233_32:
.Ltmp1762:                              # EH_LABEL
.LBB233_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB233_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB233_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end233:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end233-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table233:
.Lexception108:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end108-.Lcst_begin108
.Lcst_begin108:
	.uleb128 .Lfunc_begin108-.Lfunc_begin108 # >> Call Site 1 <<
	.uleb128 .Ltmp1753-.Lfunc_begin108      #   Call between .Lfunc_begin108 and .Ltmp1753
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1753-.Lfunc_begin108      # >> Call Site 2 <<
	.uleb128 .Ltmp1754-.Ltmp1753            #   Call between .Ltmp1753 and .Ltmp1754
	.uleb128 .Ltmp1755-.Lfunc_begin108      #     jumps to .Ltmp1755
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1754-.Lfunc_begin108      # >> Call Site 3 <<
	.uleb128 .Ltmp1756-.Ltmp1754            #   Call between .Ltmp1754 and .Ltmp1756
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1756-.Lfunc_begin108      # >> Call Site 4 <<
	.uleb128 .Ltmp1759-.Ltmp1756            #   Call between .Ltmp1756 and .Ltmp1759
	.uleb128 .Ltmp1762-.Lfunc_begin108      #     jumps to .Ltmp1762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1759-.Lfunc_begin108      # >> Call Site 5 <<
	.uleb128 .Ltmp1760-.Ltmp1759            #   Call between .Ltmp1759 and .Ltmp1760
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1760-.Lfunc_begin108      # >> Call Site 6 <<
	.uleb128 .Ltmp1761-.Ltmp1760            #   Call between .Ltmp1760 and .Ltmp1761
	.uleb128 .Ltmp1762-.Lfunc_begin108      #     jumps to .Ltmp1762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1761-.Lfunc_begin108      # >> Call Site 7 <<
	.uleb128 .Lfunc_end233-.Ltmp1761        #   Call between .Ltmp1761 and .Lfunc_end233
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end108:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
	.p2align	2
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
.Lfunc_begin109:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception109
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a2
	blt	$a2, $a1, .LBB234_32
# %bb.1:
	move	$a2, $a1
	move	$fp, $a0
	addi.d	$s1, $sp, 152
	st.d	$s1, $sp, 136
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp1763:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1764:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB234_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB234_4:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_transformEc.exit
	st.d	$s1, $sp, 136
.Ltmp1766:                              # EH_LABEL
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp1767:                              # EH_LABEL
# %bb.5:                                # %.noexc
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp1769:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1770:                              # EH_LABEL
# %bb.6:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB234_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i13
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB234_8:
	ld.d	$a0, $sp, 40
	addi.d	$s1, $sp, 88
	addi.d	$s0, $sp, 56
	st.d	$s1, $sp, 72
	beq	$a0, $s0, .LBB234_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i16
	ld.d	$a1, $sp, 56
	ld.d	$s4, $sp, 48
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
	b	.LBB234_11
.LBB234_10:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
	ld.d	$s4, $sp, 48
	addi.d	$a2, $s4, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB234_11:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i
	st.d	$s4, $sp, 80
	st.d	$s0, $sp, 40
	st.d	$zero, $sp, 48
	ld.d	$a0, $sp, 8
	st.b	$zero, $sp, 56
	addi.d	$s3, $sp, 120
	addi.d	$s2, $sp, 24
	st.d	$s3, $sp, 104
	beq	$a0, $s2, .LBB234_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i3.i.i
	ld.d	$a1, $sp, 24
	ld.d	$s6, $sp, 16
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
	b	.LBB234_14
.LBB234_13:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i4.i.i
	ld.d	$s6, $sp, 16
	addi.d	$a2, $s6, 1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB234_14:
	ld.d	$s5, $fp, 56
	ld.d	$a0, $fp, 64
	st.d	$s6, $sp, 112
	st.d	$s2, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beq	$s5, $a0, .LBB234_17
# %bb.15:
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 72
	beq	$a1, $s1, .LBB234_20
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	st.d	$a1, $s5, 0
	ld.d	$a0, $sp, 88
	st.d	$a0, $s5, 16
	b	.LBB234_21
.LBB234_17:
.Ltmp1772:                              # EH_LABEL
	addi.d	$a0, $fp, 48
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1773:                              # EH_LABEL
# %bb.18:                               # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit
	ld.d	$a0, $sp, 104
	beq	$a0, $s3, .LBB234_25
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i18
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB234_25
.LBB234_20:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i
	addi.d	$a2, $s4, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB234_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i
	st.d	$s4, $s5, 8
	addi.d	$a0, $s5, 48
	st.d	$a0, $s5, 32
	ld.d	$a1, $sp, 104
	st.d	$s1, $sp, 72
	st.d	$zero, $sp, 80
	st.b	$zero, $sp, 88
	beq	$a1, $s3, .LBB234_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i.i.i
	st.d	$a1, $s5, 32
	ld.d	$a0, $sp, 120
	ld.d	$s4, $sp, 112
	st.d	$a0, $s5, 48
	b	.LBB234_24
.LBB234_23:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i.i.i
	ld.d	$s4, $sp, 112
	addi.d	$a2, $s4, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB234_24:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit.thread
	st.d	$s4, $s5, 40
	ld.d	$a0, $fp, 56
	st.d	$s3, $sp, 104
	st.d	$zero, $sp, 112
	st.b	$zero, $sp, 120
	addi.d	$a0, $a0, 64
	st.d	$a0, $fp, 56
.LBB234_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $sp, 72
	beq	$a0, $s1, .LBB234_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB234_27:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB234_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB234_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB234_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB234_31:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB234_32:
	pcalau12i	$a0, %pc_hi20(.L.str.216)
	addi.d	$a1, $a0, %pc_lo12(.L.str.216)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB234_33:
.Ltmp1774:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB234_39
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	b	.LBB234_37
.LBB234_35:
.Ltmp1771:                              # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB234_39
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i10
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB234_37:                             # %.body
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB234_39
.LBB234_38:
.Ltmp1768:                              # EH_LABEL
	move	$fp, $a0
.LBB234_39:                             # %.body
	ld.d	$a0, $sp, 40
	addi.d	$a1, $sp, 56
	beq	$a0, $a1, .LBB234_44
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	b	.LBB234_43
.LBB234_41:
.Ltmp1765:                              # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB234_44
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB234_43:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB234_44:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end234:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc, .Lfunc_end234-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,comdat
	.p2align	2, 0x0
GCC_except_table234:
.Lexception109:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end109-.Lcst_begin109
.Lcst_begin109:
	.uleb128 .Lfunc_begin109-.Lfunc_begin109 # >> Call Site 1 <<
	.uleb128 .Ltmp1763-.Lfunc_begin109      #   Call between .Lfunc_begin109 and .Ltmp1763
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1763-.Lfunc_begin109      # >> Call Site 2 <<
	.uleb128 .Ltmp1764-.Ltmp1763            #   Call between .Ltmp1763 and .Ltmp1764
	.uleb128 .Ltmp1765-.Lfunc_begin109      #     jumps to .Ltmp1765
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1764-.Lfunc_begin109      # >> Call Site 3 <<
	.uleb128 .Ltmp1766-.Ltmp1764            #   Call between .Ltmp1764 and .Ltmp1766
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1766-.Lfunc_begin109      # >> Call Site 4 <<
	.uleb128 .Ltmp1767-.Ltmp1766            #   Call between .Ltmp1766 and .Ltmp1767
	.uleb128 .Ltmp1768-.Lfunc_begin109      #     jumps to .Ltmp1768
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1769-.Lfunc_begin109      # >> Call Site 5 <<
	.uleb128 .Ltmp1770-.Ltmp1769            #   Call between .Ltmp1769 and .Ltmp1770
	.uleb128 .Ltmp1771-.Lfunc_begin109      #     jumps to .Ltmp1771
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1770-.Lfunc_begin109      # >> Call Site 6 <<
	.uleb128 .Ltmp1772-.Ltmp1770            #   Call between .Ltmp1770 and .Ltmp1772
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1772-.Lfunc_begin109      # >> Call Site 7 <<
	.uleb128 .Ltmp1773-.Ltmp1772            #   Call between .Ltmp1772 and .Ltmp1773
	.uleb128 .Ltmp1774-.Lfunc_begin109      #     jumps to .Ltmp1774
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1773-.Lfunc_begin109      # >> Call Site 8 <<
	.uleb128 .Lfunc_end234-.Ltmp1773        #   Call between .Ltmp1773 and .Lfunc_end234
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end109:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
	.p2align	2
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
.Lfunc_begin110:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception110
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	st.d	$a1, $sp, 64
	st.d	$a2, $sp, 72
	st.b	$a3, $sp, 80
	vld	$vr0, $sp, 88
	move	$fp, $a0
	ori	$a0, $zero, 2
	st.w	$a0, $sp, 56
	vst	$vr0, $sp, 40
	ld.d	$a2, $sp, 56
	vld	$vr0, $sp, 72
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 16
	st.d	$a2, $sp, 8
	vst	$vr0, $sp, 24
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB235_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 56
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB235_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB235_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB235_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB235_7
.LBB235_5:
.Ltmp1775:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1776:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB235_7:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB235_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB235_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB235_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp1777:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1778:                              # EH_LABEL
.LBB235_11:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB235_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB235_14
# %bb.13:
.Ltmp1780:                              # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1781:                              # EH_LABEL
.LBB235_14:                             # %_ZNSt8__detail6_StateIcED2Ev.exit7
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB235_15:
.Ltmp1783:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1784:                              # EH_LABEL
# %bb.16:                               # %.noexc5
.LBB235_17:
.Ltmp1782:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB235_18:
.Ltmp1779:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB235_19:
.Ltmp1785:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end235:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb, .Lfunc_end235-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,comdat
	.p2align	2, 0x0
GCC_except_table235:
.Lexception110:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase49-.Lttbaseref49
.Lttbaseref49:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end110-.Lcst_begin110
.Lcst_begin110:
	.uleb128 .Ltmp1775-.Lfunc_begin110      # >> Call Site 1 <<
	.uleb128 .Ltmp1776-.Ltmp1775            #   Call between .Ltmp1775 and .Ltmp1776
	.uleb128 .Ltmp1785-.Lfunc_begin110      #     jumps to .Ltmp1785
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1777-.Lfunc_begin110      # >> Call Site 2 <<
	.uleb128 .Ltmp1778-.Ltmp1777            #   Call between .Ltmp1777 and .Ltmp1778
	.uleb128 .Ltmp1779-.Lfunc_begin110      #     jumps to .Ltmp1779
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1780-.Lfunc_begin110      # >> Call Site 3 <<
	.uleb128 .Ltmp1781-.Ltmp1780            #   Call between .Ltmp1780 and .Ltmp1781
	.uleb128 .Ltmp1782-.Lfunc_begin110      #     jumps to .Ltmp1782
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1783-.Lfunc_begin110      # >> Call Site 4 <<
	.uleb128 .Ltmp1784-.Ltmp1783            #   Call between .Ltmp1783 and .Ltmp1784
	.uleb128 .Ltmp1785-.Lfunc_begin110      #     jumps to .Ltmp1785
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1784-.Lfunc_begin110      # >> Call Site 5 <<
	.uleb128 .Lfunc_end235-.Ltmp1784        #   Call between .Ltmp1784 and .Lfunc_end235
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end110:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase49:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,"axG",@progbits,_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,comdat
	.weak	_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv # -- Begin function _ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv
	.p2align	2
	.type	_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,@function
_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv: # @_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv
.Lfunc_begin111:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception111
# %bb.0:
	addi.d	$sp, $sp, -416
	.cfi_def_cfa_offset 416
	st.d	$ra, $sp, 408                   # 8-byte Folded Spill
	st.d	$fp, $sp, 400                   # 8-byte Folded Spill
	st.d	$s0, $sp, 392                   # 8-byte Folded Spill
	st.d	$s1, $sp, 384                   # 8-byte Folded Spill
	st.d	$s2, $sp, 376                   # 8-byte Folded Spill
	st.d	$s3, $sp, 368                   # 8-byte Folded Spill
	st.d	$s4, $sp, 360                   # 8-byte Folded Spill
	st.d	$s5, $sp, 352                   # 8-byte Folded Spill
	st.d	$s6, $sp, 344                   # 8-byte Folded Spill
	st.d	$s7, $sp, 336                   # 8-byte Folded Spill
	st.d	$s8, $sp, 328                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s6, $sp, 288
	st.w	$zero, $sp, 288
	st.d	$zero, $sp, 296
	st.d	$s6, $sp, 304
	st.d	$s6, $sp, 312
	st.d	$zero, $sp, 320
	addi.d	$a0, $sp, 200
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp1786:                              # EH_LABEL
	addi.d	$a0, $sp, 200
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1787:                              # EH_LABEL
# %bb.1:                                # %_ZNSt5stackIlSt5dequeIlSaIlEEEC2IS2_vEEv.exit
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	ld.d	$a1, $sp, 264
	ld.d	$a0, $sp, 248
	addi.d	$a1, $a1, -8
	addi.d	$fp, $s0, 8
	st.d	$fp, $sp, 24                    # 8-byte Folded Spill
	beq	$a0, $a1, .LBB236_3
# %bb.2:
	ld.d	$a1, $fp, 0
	st.d	$a1, $a0, 0
	addi.d	$a1, $a0, 8
	st.d	$a1, $sp, 248
	ld.d	$a0, $sp, 216
	bne	$a1, $a0, .LBB236_5
	b	.LBB236_52
.LBB236_3:
.Ltmp1789:                              # EH_LABEL
	addi.d	$a0, $sp, 200
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1790:                              # EH_LABEL
# %bb.4:                                # %._ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit_crit_edge
	ld.d	$a1, $sp, 248
	ld.d	$a0, $sp, 216
	beq	$a1, $a0, .LBB236_52
.LBB236_5:                              # %.lr.ph
	addi.d	$s3, $sp, 112
	ori	$s1, $zero, 11
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 32                   # 32-byte Folded Spill
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 80                   # 16-byte Folded Spill
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	lu12i.w	$a0, -349526
	ori	$fp, $a0, 2731
	addi.w	$s4, $zero, -1
	ori	$s7, $zero, 16
	ori	$s2, $zero, 24
	b	.LBB236_7
	.p2align	4, , 16
.LBB236_6:                              # %_ZNSt8__detail6_StateIcED2Ev.exit55
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a1, $sp, 248
	ld.d	$a0, $sp, 216
	beq	$a1, $a0, .LBB236_52
.LBB236_7:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB236_33 Depth 2
                                        #     Child Loop BB236_43 Depth 2
	ld.d	$a0, $sp, 256
	beq	$a1, $a0, .LBB236_9
# %bb.8:                                #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a0, $a1, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $sp, 192
	b	.LBB236_10
	.p2align	4, , 16
.LBB236_9:                              #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a1, $sp, 272
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	st.d	$a1, $sp, 192
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 272
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $sp, 272
	st.d	$a1, $sp, 256
	ld.d	$a0, $sp, 192
	addi.d	$a2, $a1, 512
	st.d	$a2, $sp, 264
	addi.d	$a1, $a1, 504
.LBB236_10:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE3popEv.exit
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$s8, $s0, 0
	ld.d	$a2, $s8, 56
	st.d	$a1, $sp, 248
	ori	$a1, $zero, 48
	mul.d	$a0, $a0, $a1
	vldx	$vr0, $a2, $a0
	add.d	$s5, $a2, $a0
	vst	$vr0, $sp, 144
	xvld	$xr0, $s5, 16
	xvst	$xr0, $sp, 160
	ldx.w	$a0, $a2, $a0
	bne	$a0, $s1, .LBB236_14
# %bb.11:                               #   in Loop: Header=BB236_7 Depth=1
	addi.d	$a0, $sp, 160
	xvld	$xr0, $sp, 32                   # 32-byte Folded Reload
	xvst	$xr0, $a0, 0
	ld.d	$a3, $s5, 32
	beqz	$a3, .LBB236_14
# %bb.12:                               #   in Loop: Header=BB236_7 Depth=1
	addi.d	$a1, $s5, 16
.Ltmp1791:                              # EH_LABEL
	ori	$a2, $zero, 2
	jirl	$ra, $a3, 0
.Ltmp1792:                              # EH_LABEL
# %bb.13:                               #   in Loop: Header=BB236_7 Depth=1
	vld	$vr0, $s5, 32
	ld.d	$s8, $s0, 0
	vst	$vr0, $sp, 176
.LBB236_14:                             # %_ZNSt8__detail6_StateIcEC2ERKS1_.exit
                                        #   in Loop: Header=BB236_7 Depth=1
	vld	$vr0, $sp, 176
	xvld	$xr1, $sp, 144
	ld.w	$a0, $sp, 144
	vst	$vr0, $sp, 128
	xvst	$xr1, $sp, 96
	bne	$a0, $s1, .LBB236_17
# %bb.15:                               #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a1, $sp, 184
	ld.d	$a0, $sp, 176
	st.d	$zero, $s3, 16
	vld	$vr0, $sp, 80                   # 16-byte Folded Reload
	vst	$vr0, $s3, 0
	st.d	$a1, $sp, 136
	beqz	$a0, .LBB236_17
# %bb.16:                               #   in Loop: Header=BB236_7 Depth=1
	addi.d	$a1, $sp, 160
	vld	$vr0, $a1, 0
	vst	$vr0, $s3, 0
	st.d	$a0, $sp, 128
	addi.d	$a0, $sp, 176
	vld	$vr0, $sp, 80                   # 16-byte Folded Reload
	vst	$vr0, $a0, 0
.LBB236_17:                             # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a0, $s8, 64
	ld.d	$a1, $s8, 72
	addi.d	$s5, $s8, 56
	beq	$a0, $a1, .LBB236_22
# %bb.18:                               #   in Loop: Header=BB236_7 Depth=1
	vld	$vr0, $sp, 128
	vst	$vr0, $a0, 32
	xvld	$xr0, $sp, 96
	xvst	$xr0, $a0, 0
	ld.w	$a1, $sp, 96
	bne	$a1, $s1, .LBB236_21
# %bb.19:                               #   in Loop: Header=BB236_7 Depth=1
	st.d	$zero, $a0, 32
	vld	$vr0, $sp, 80                   # 16-byte Folded Reload
	vst	$vr0, $a0, 16
	ld.d	$a1, $sp, 136
	ld.d	$a2, $sp, 128
	st.d	$a1, $a0, 40
	beqz	$a2, .LBB236_21
# %bb.20:                               #   in Loop: Header=BB236_7 Depth=1
	vld	$vr0, $s3, 0
	addi.d	$a1, $a0, 16
	vst	$vr0, $a1, 0
	ld.d	$a1, $sp, 128
	st.d	$a1, $a0, 32
	addi.d	$a0, $sp, 128
	vld	$vr0, $sp, 80                   # 16-byte Folded Reload
	vst	$vr0, $a0, 0
.LBB236_21:                             # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a0, $s8, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $s8, 64
	ld.d	$a1, $s5, 0
	sub.d	$s5, $a0, $a1
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	bltu	$s5, $a0, .LBB236_24
	b	.LBB236_81
	.p2align	4, , 16
.LBB236_22:                             #   in Loop: Header=BB236_7 Depth=1
.Ltmp1797:                              # EH_LABEL
	addi.d	$a1, $sp, 96
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1798:                              # EH_LABEL
# %bb.23:                               # %.noexc32
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a0, $s8, 64
	ld.d	$a1, $s5, 0
	sub.d	$s5, $a0, $a1
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	bgeu	$s5, $a0, .LBB236_81
.LBB236_24:                             #   in Loop: Header=BB236_7 Depth=1
	ld.w	$a0, $sp, 96
	bne	$a0, $s1, .LBB236_27
# %bb.25:                               #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a3, $sp, 128
	beqz	$a3, .LBB236_27
# %bb.26:                               #   in Loop: Header=BB236_7 Depth=1
.Ltmp1800:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a0, $s3
	move	$a1, $s3
	jirl	$ra, $a3, 0
.Ltmp1801:                              # EH_LABEL
.LBB236_27:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
                                        #   in Loop: Header=BB236_7 Depth=1
.Ltmp1803:                              # EH_LABEL
	addi.d	$a0, $sp, 280
	addi.d	$a1, $sp, 192
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_)
	jirl	$ra, $ra, 0
.Ltmp1804:                              # EH_LABEL
# %bb.28:                               #   in Loop: Header=BB236_7 Depth=1
	bstrpick.d	$a2, $s5, 31, 4
	ld.w	$a1, $sp, 144
	mul.d	$a2, $a2, $fp
	bstrpick.d	$a2, $a2, 31, 0
	addi.d	$a2, $a2, -1
	st.d	$a2, $a0, 0
	ori	$a0, $zero, 7
	bltu	$a0, $a1, .LBB236_39
# %bb.29:                               #   in Loop: Header=BB236_7 Depth=1
	ori	$a0, $zero, 1
	sll.d	$a0, $a0, $a1
	andi	$a0, $a0, 134
	beqz	$a0, .LBB236_39
# %bb.30:                               # %_ZNKSt8__detail11_State_base10_M_has_altEv.exit
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a0, $sp, 160
	beq	$a0, $s4, .LBB236_39
# %bb.31:                               #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a1, $sp, 296
	beqz	$a1, .LBB236_36
# %bb.32:                               # %.lr.ph.i.i.i.preheader
                                        #   in Loop: Header=BB236_7 Depth=1
	move	$a2, $s6
	.p2align	4, , 16
.LBB236_33:                             # %.lr.ph.i.i.i
                                        #   Parent Loop BB236_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a3, $a1, 32
	slt	$a4, $a3, $a0
	masknez	$a3, $a1, $a4
	masknez	$a5, $s7, $a4
	maskeqz	$a6, $s2, $a4
	or	$a5, $a6, $a5
	ldx.d	$a1, $a1, $a5
	maskeqz	$a4, $a2, $a4
	or	$a2, $a4, $a3
	bnez	$a1, .LBB236_33
# %bb.34:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i
                                        #   in Loop: Header=BB236_7 Depth=1
	beq	$a2, $s6, .LBB236_36
# %bb.35:                               # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit
                                        #   in Loop: Header=BB236_7 Depth=1
	or	$a1, $a4, $a3
	ld.d	$a1, $a1, 32
	bge	$a0, $a1, .LBB236_39
.LBB236_36:                             # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit.thread
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a2, $sp, 264
	ld.d	$a1, $sp, 248
	addi.d	$a2, $a2, -8
	beq	$a1, $a2, .LBB236_38
# %bb.37:                               #   in Loop: Header=BB236_7 Depth=1
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $sp, 248
	b	.LBB236_39
.LBB236_38:                             #   in Loop: Header=BB236_7 Depth=1
.Ltmp1805:                              # EH_LABEL
	addi.d	$a0, $sp, 200
	addi.d	$a1, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1806:                              # EH_LABEL
	.p2align	4, , 16
.LBB236_39:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit38
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a0, $sp, 192
	ld.d	$a1, $s0, 16
	beq	$a0, $a1, .LBB236_49
# %bb.40:                               #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a0, $sp, 152
	beq	$a0, $s4, .LBB236_49
# %bb.41:                               #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a1, $sp, 296
	beqz	$a1, .LBB236_46
# %bb.42:                               # %.lr.ph.i.i.i40.preheader
                                        #   in Loop: Header=BB236_7 Depth=1
	move	$a2, $s6
	.p2align	4, , 16
.LBB236_43:                             # %.lr.ph.i.i.i40
                                        #   Parent Loop BB236_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a3, $a1, 32
	slt	$a4, $a3, $a0
	masknez	$a3, $a1, $a4
	masknez	$a5, $s7, $a4
	maskeqz	$a6, $s2, $a4
	or	$a5, $a6, $a5
	ldx.d	$a1, $a1, $a5
	maskeqz	$a4, $a2, $a4
	or	$a2, $a4, $a3
	bnez	$a1, .LBB236_43
# %bb.44:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i48
                                        #   in Loop: Header=BB236_7 Depth=1
	beq	$a2, $s6, .LBB236_46
# %bb.45:                               # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit50
                                        #   in Loop: Header=BB236_7 Depth=1
	or	$a1, $a4, $a3
	ld.d	$a1, $a1, 32
	bge	$a0, $a1, .LBB236_49
.LBB236_46:                             # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit50.thread
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a2, $sp, 264
	ld.d	$a1, $sp, 248
	addi.d	$a2, $a2, -8
	beq	$a1, $a2, .LBB236_48
# %bb.47:                               #   in Loop: Header=BB236_7 Depth=1
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $sp, 248
	b	.LBB236_49
.LBB236_48:                             #   in Loop: Header=BB236_7 Depth=1
.Ltmp1807:                              # EH_LABEL
	addi.d	$a0, $sp, 200
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1808:                              # EH_LABEL
	.p2align	4, , 16
.LBB236_49:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit53
                                        #   in Loop: Header=BB236_7 Depth=1
	ld.w	$a0, $sp, 144
	bne	$a0, $s1, .LBB236_6
# %bb.50:                               #   in Loop: Header=BB236_7 Depth=1
	ld.d	$a3, $sp, 176
	beqz	$a3, .LBB236_6
# %bb.51:                               #   in Loop: Header=BB236_7 Depth=1
.Ltmp1810:                              # EH_LABEL
	ori	$a2, $zero, 3
	addi.d	$a0, $sp, 160
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1811:                              # EH_LABEL
	b	.LBB236_6
.LBB236_52:                             # %._crit_edge
	ld.d	$a0, $sp, 304
	beq	$a0, $s6, .LBB236_71
# %bb.53:
	addi.w	$fp, $zero, -1
	ori	$s1, $zero, 7
	ori	$s2, $zero, 1
	ori	$s3, $zero, 16
	ori	$s4, $zero, 24
	b	.LBB236_56
	.p2align	4, , 16
.LBB236_54:                             # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEE4findERS3_.exit81
                                        #   in Loop: Header=BB236_56 Depth=1
	ld.d	$a2, $a5, 40
	st.d	$a2, $a1, 16
.LBB236_55:                             # %_ZNKSt8__detail11_State_base10_M_has_altEv.exit67
                                        #   in Loop: Header=BB236_56 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	beq	$a0, $s6, .LBB236_71
.LBB236_56:                             # %.lr.ph107
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB236_59 Depth 2
                                        #     Child Loop BB236_68 Depth 2
	ld.d	$a1, $s0, 0
	ld.d	$a2, $a0, 40
	ld.d	$a1, $a1, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$a1, $a1, $a2
	ld.d	$a2, $a1, 8
	beq	$a2, $fp, .LBB236_63
# %bb.57:                               #   in Loop: Header=BB236_56 Depth=1
	ld.d	$a4, $sp, 296
	move	$a5, $s6
	beqz	$a4, .LBB236_62
# %bb.58:                               # %.lr.ph.i.i.i57.preheader
                                        #   in Loop: Header=BB236_56 Depth=1
	move	$a3, $s6
	.p2align	4, , 16
.LBB236_59:                             # %.lr.ph.i.i.i57
                                        #   Parent Loop BB236_56 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a5, $a4, 32
	slt	$a5, $a5, $a2
	masknez	$a6, $a4, $a5
	masknez	$a7, $s3, $a5
	maskeqz	$t0, $s4, $a5
	or	$a7, $t0, $a7
	ldx.d	$a4, $a4, $a7
	maskeqz	$a3, $a3, $a5
	or	$a3, $a3, $a6
	bnez	$a4, .LBB236_59
# %bb.60:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i65
                                        #   in Loop: Header=BB236_56 Depth=1
	move	$a5, $s6
	beq	$a3, $s6, .LBB236_62
# %bb.61:                               #   in Loop: Header=BB236_56 Depth=1
	ld.d	$a4, $a3, 32
	slt	$a2, $a2, $a4
	masknez	$a3, $a3, $a2
	maskeqz	$a2, $s6, $a2
	or	$a5, $a2, $a3
.LBB236_62:                             # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEE4findERS3_.exit
                                        #   in Loop: Header=BB236_56 Depth=1
	ld.d	$a2, $a5, 40
	st.d	$a2, $a1, 8
.LBB236_63:                             #   in Loop: Header=BB236_56 Depth=1
	ld.w	$a2, $a1, 0
	bltu	$s1, $a2, .LBB236_55
# %bb.64:                               #   in Loop: Header=BB236_56 Depth=1
	sll.d	$a2, $s2, $a2
	andi	$a2, $a2, 134
	beqz	$a2, .LBB236_55
# %bb.65:                               #   in Loop: Header=BB236_56 Depth=1
	ld.d	$a2, $a1, 16
	beq	$a2, $fp, .LBB236_55
# %bb.66:                               #   in Loop: Header=BB236_56 Depth=1
	ld.d	$a4, $sp, 296
	move	$a5, $s6
	beqz	$a4, .LBB236_54
# %bb.67:                               # %.lr.ph.i.i.i69.preheader
                                        #   in Loop: Header=BB236_56 Depth=1
	move	$a3, $s6
	.p2align	4, , 16
.LBB236_68:                             # %.lr.ph.i.i.i69
                                        #   Parent Loop BB236_56 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a5, $a4, 32
	slt	$a5, $a5, $a2
	masknez	$a6, $a4, $a5
	masknez	$a7, $s3, $a5
	maskeqz	$t0, $s4, $a5
	or	$a7, $t0, $a7
	ldx.d	$a4, $a4, $a7
	maskeqz	$a3, $a3, $a5
	or	$a3, $a3, $a6
	bnez	$a4, .LBB236_68
# %bb.69:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i77
                                        #   in Loop: Header=BB236_56 Depth=1
	move	$a5, $s6
	beq	$a3, $s6, .LBB236_54
# %bb.70:                               #   in Loop: Header=BB236_56 Depth=1
	ld.d	$a4, $a3, 32
	slt	$a2, $a2, $a4
	masknez	$a3, $a3, $a2
	maskeqz	$a2, $s6, $a2
	or	$a5, $a2, $a3
	b	.LBB236_54
.LBB236_71:                             # %._crit_edge108
	ld.d	$fp, $s0, 0
.Ltmp1816:                              # EH_LABEL
	addi.d	$a0, $sp, 280
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_)
	jirl	$ra, $ra, 0
.Ltmp1817:                              # EH_LABEL
# %bb.72:
	ld.d	$s1, $a0, 0
	addi.d	$a1, $s0, 16
.Ltmp1818:                              # EH_LABEL
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_)
	jirl	$ra, $ra, 0
.Ltmp1819:                              # EH_LABEL
# %bb.73:
	ld.d	$a1, $a0, 0
	ld.d	$a0, $sp, 200
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	st.d	$fp, $a2, 0
	st.d	$s1, $a2, 8
	st.d	$a1, $a2, 16
	beqz	$a0, .LBB236_79
# %bb.74:
	ld.d	$fp, $sp, 272
	ld.d	$a1, $sp, 240
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB236_78
# %bb.75:                               # %.lr.ph.i.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB236_76:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB236_76
# %bb.77:                               # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.loopexit.i.i.i
	ld.d	$a0, $sp, 200
.LBB236_78:                             # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i.i.i
	ld.d	$a1, $sp, 208
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB236_79:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev.exit
	ld.d	$a1, $sp, 296
.Ltmp1821:                              # EH_LABEL
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp1822:                              # EH_LABEL
# %bb.80:                               # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev.exit
	ld.d	$s8, $sp, 328                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 336                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 344                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 352                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 360                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 368                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 376                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 384                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 392                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 400                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 408                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 416
	ret
.LBB236_81:
.Ltmp1813:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1814:                              # EH_LABEL
# %bb.82:                               # %.noexc33
.LBB236_83:
.Ltmp1823:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB236_84:
.Ltmp1788:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB236_85:
.Ltmp1820:                              # EH_LABEL
	move	$fp, $a0
	b	.LBB236_96
.LBB236_86:
.Ltmp1802:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB236_87:
.Ltmp1812:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB236_88:
.Ltmp1793:                              # EH_LABEL
	ld.d	$a3, $sp, 176
	move	$fp, $a0
	beqz	$a3, .LBB236_96
# %bb.89:
.Ltmp1794:                              # EH_LABEL
	ori	$a2, $zero, 3
	addi.d	$a0, $sp, 160
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1795:                              # EH_LABEL
	b	.LBB236_96
.LBB236_90:
.Ltmp1796:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB236_91:                             # %.loopexit
.Ltmp1799:                              # EH_LABEL
	b	.LBB236_93
.LBB236_92:                             # %.loopexit.split-lp
.Ltmp1815:                              # EH_LABEL
.LBB236_93:
	move	$fp, $a0
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB236_95
.LBB236_94:
.Ltmp1809:                              # EH_LABEL
	move	$fp, $a0
.LBB236_95:
	addi.d	$a0, $sp, 144
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
.LBB236_96:
	addi.d	$a0, $sp, 200
	pcaddu18i	$ra, %call36(_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 280
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end236:
	.size	_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv, .Lfunc_end236-_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,"aG",@progbits,_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,comdat
	.p2align	2, 0x0
GCC_except_table236:
.Lexception111:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase50-.Lttbaseref50
.Lttbaseref50:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end111-.Lcst_begin111
.Lcst_begin111:
	.uleb128 .Lfunc_begin111-.Lfunc_begin111 # >> Call Site 1 <<
	.uleb128 .Ltmp1786-.Lfunc_begin111      #   Call between .Lfunc_begin111 and .Ltmp1786
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1786-.Lfunc_begin111      # >> Call Site 2 <<
	.uleb128 .Ltmp1787-.Ltmp1786            #   Call between .Ltmp1786 and .Ltmp1787
	.uleb128 .Ltmp1788-.Lfunc_begin111      #     jumps to .Ltmp1788
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1789-.Lfunc_begin111      # >> Call Site 3 <<
	.uleb128 .Ltmp1790-.Ltmp1789            #   Call between .Ltmp1789 and .Ltmp1790
	.uleb128 .Ltmp1820-.Lfunc_begin111      #     jumps to .Ltmp1820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1790-.Lfunc_begin111      # >> Call Site 4 <<
	.uleb128 .Ltmp1791-.Ltmp1790            #   Call between .Ltmp1790 and .Ltmp1791
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1791-.Lfunc_begin111      # >> Call Site 5 <<
	.uleb128 .Ltmp1792-.Ltmp1791            #   Call between .Ltmp1791 and .Ltmp1792
	.uleb128 .Ltmp1793-.Lfunc_begin111      #     jumps to .Ltmp1793
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1797-.Lfunc_begin111      # >> Call Site 6 <<
	.uleb128 .Ltmp1798-.Ltmp1797            #   Call between .Ltmp1797 and .Ltmp1798
	.uleb128 .Ltmp1799-.Lfunc_begin111      #     jumps to .Ltmp1799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1800-.Lfunc_begin111      # >> Call Site 7 <<
	.uleb128 .Ltmp1801-.Ltmp1800            #   Call between .Ltmp1800 and .Ltmp1801
	.uleb128 .Ltmp1802-.Lfunc_begin111      #     jumps to .Ltmp1802
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1803-.Lfunc_begin111      # >> Call Site 8 <<
	.uleb128 .Ltmp1808-.Ltmp1803            #   Call between .Ltmp1803 and .Ltmp1808
	.uleb128 .Ltmp1809-.Lfunc_begin111      #     jumps to .Ltmp1809
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1810-.Lfunc_begin111      # >> Call Site 9 <<
	.uleb128 .Ltmp1811-.Ltmp1810            #   Call between .Ltmp1810 and .Ltmp1811
	.uleb128 .Ltmp1812-.Lfunc_begin111      #     jumps to .Ltmp1812
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1811-.Lfunc_begin111      # >> Call Site 10 <<
	.uleb128 .Ltmp1816-.Ltmp1811            #   Call between .Ltmp1811 and .Ltmp1816
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1816-.Lfunc_begin111      # >> Call Site 11 <<
	.uleb128 .Ltmp1819-.Ltmp1816            #   Call between .Ltmp1816 and .Ltmp1819
	.uleb128 .Ltmp1820-.Lfunc_begin111      #     jumps to .Ltmp1820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1819-.Lfunc_begin111      # >> Call Site 12 <<
	.uleb128 .Ltmp1821-.Ltmp1819            #   Call between .Ltmp1819 and .Ltmp1821
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1821-.Lfunc_begin111      # >> Call Site 13 <<
	.uleb128 .Ltmp1822-.Ltmp1821            #   Call between .Ltmp1821 and .Ltmp1822
	.uleb128 .Ltmp1823-.Lfunc_begin111      #     jumps to .Ltmp1823
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1813-.Lfunc_begin111      # >> Call Site 14 <<
	.uleb128 .Ltmp1814-.Ltmp1813            #   Call between .Ltmp1813 and .Ltmp1814
	.uleb128 .Ltmp1815-.Lfunc_begin111      #     jumps to .Ltmp1815
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1814-.Lfunc_begin111      # >> Call Site 15 <<
	.uleb128 .Ltmp1794-.Ltmp1814            #   Call between .Ltmp1814 and .Ltmp1794
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1794-.Lfunc_begin111      # >> Call Site 16 <<
	.uleb128 .Ltmp1795-.Ltmp1794            #   Call between .Ltmp1794 and .Ltmp1795
	.uleb128 .Ltmp1796-.Lfunc_begin111      #     jumps to .Ltmp1796
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1795-.Lfunc_begin111      # >> Call Site 17 <<
	.uleb128 .Lfunc_end236-.Ltmp1795        #   Call between .Ltmp1795 and .Lfunc_end236
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end111:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase50:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5stackIlSt5dequeIlSaIlEEED2Ev,"axG",@progbits,_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev,comdat
	.hidden	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev # -- Begin function _ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.weak	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.p2align	2
	.type	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev,@function
_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev:     # @_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB237_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB237_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB237_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB237_3
# %bb.4:                                # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB237_5:                              # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB237_6:                              # %_ZNSt5dequeIlSaIlEED2Ev.exit
	ret
.Lfunc_end237:
	.size	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev, .Lfunc_end237-_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,"axG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,comdat
	.hidden	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_ # -- Begin function _ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
	.weak	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
	.p2align	2
	.type	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,@function
_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_: # @_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
.Lfunc_begin112:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception112
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 16
	ld.d	$s4, $a1, 0
	addi.d	$s1, $fp, 8
	move	$s3, $s1
	beqz	$a0, .LBB238_5
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	ori	$a1, $zero, 16
	ori	$a2, $zero, 24
	move	$s0, $s1
	.p2align	4, , 16
.LBB238_2:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a0, 32
	slt	$a3, $a3, $s4
	masknez	$a4, $a0, $a3
	masknez	$a5, $a1, $a3
	maskeqz	$a6, $a2, $a3
	or	$a5, $a6, $a5
	ldx.d	$a0, $a0, $a5
	maskeqz	$a3, $s0, $a3
	or	$s0, $a3, $a4
	bnez	$a0, .LBB238_2
# %bb.3:                                # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEE11lower_boundERS3_.exit
	move	$s3, $s1
	beq	$s0, $s1, .LBB238_5
# %bb.4:
	ld.d	$a0, $s0, 32
	move	$s3, $s0
	bge	$s4, $a0, .LBB238_12
.LBB238_5:                              # %.critedge
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	addi.d	$s2, $a0, 32
	st.d	$s4, $a0, 32
	st.d	$zero, $a0, 40
.Ltmp1824:                              # EH_LABEL
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_)
	jirl	$ra, $ra, 0
.Ltmp1825:                              # EH_LABEL
# %bb.6:
	move	$a2, $a1
	beqz	$a1, .LBB238_11
# %bb.7:
	ori	$a1, $zero, 1
	bnez	$a0, .LBB238_10
# %bb.8:
	beq	$s1, $a2, .LBB238_10
# %bb.9:
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a2, 32
	slt	$a1, $a0, $a1
.LBB238_10:                             # %.thread.i
	move	$a0, $a1
	move	$a1, $s0
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 40
	b	.LBB238_12
.LBB238_11:
	ori	$a1, $zero, 48
	move	$fp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $fp
.LBB238_12:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_.exit
	addi.d	$a0, $s0, 40
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB238_13:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE10_Auto_nodeD2Ev.exit.i
.Ltmp1826:                              # EH_LABEL
	move	$fp, $a0
	ori	$a1, $zero, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end238:
	.size	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_, .Lfunc_end238-_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,"aG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,comdat
	.p2align	2, 0x0
GCC_except_table238:
.Lexception112:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end112-.Lcst_begin112
.Lcst_begin112:
	.uleb128 .Lfunc_begin112-.Lfunc_begin112 # >> Call Site 1 <<
	.uleb128 .Ltmp1824-.Lfunc_begin112      #   Call between .Lfunc_begin112 and .Ltmp1824
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1824-.Lfunc_begin112      # >> Call Site 2 <<
	.uleb128 .Ltmp1825-.Ltmp1824            #   Call between .Ltmp1824 and .Ltmp1825
	.uleb128 .Ltmp1826-.Lfunc_begin112      #     jumps to .Ltmp1826
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1825-.Lfunc_begin112      # >> Call Site 3 <<
	.uleb128 .Lfunc_end238-.Ltmp1825        #   Call between .Ltmp1825 and .Lfunc_end238
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end112:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,"axG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,comdat
	.hidden	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev # -- Begin function _ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
	.weak	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
	.p2align	2
	.type	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,@function
_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev: # @_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
.Lfunc_begin113:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception113
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 16
.Ltmp1827:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp1828:                              # EH_LABEL
# %bb.1:                                # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EED2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB239_2:
.Ltmp1829:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end239:
	.size	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev, .Lfunc_end239-_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,"aG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table239:
.Lexception113:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase51-.Lttbaseref51
.Lttbaseref51:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end113-.Lcst_begin113
.Lcst_begin113:
	.uleb128 .Ltmp1827-.Lfunc_begin113      # >> Call Site 1 <<
	.uleb128 .Ltmp1828-.Ltmp1827            #   Call between .Ltmp1827 and .Ltmp1828
	.uleb128 .Ltmp1829-.Lfunc_begin113      #     jumps to .Ltmp1829
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1828-.Lfunc_begin113      # >> Call Site 2 <<
	.uleb128 .Lfunc_end239-.Ltmp1828        #   Call between .Ltmp1828 and .Lfunc_end239
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end113:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase51:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,"axG",@progbits,_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,comdat
	.weak	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ # -- Begin function _ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.p2align	2
	.type	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,@function
_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_: # @_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$a3, $a0
	addi.d	$fp, $a0, 8
	beq	$fp, $a1, .LBB240_5
# %bb.1:
	move	$a0, $a1
	ld.d	$s0, $a2, 0
	ld.d	$a1, $a1, 32
	bge	$s0, $a1, .LBB240_8
# %bb.2:
	ld.d	$s1, $a3, 24
	beq	$s1, $a0, .LBB240_20
# %bb.3:
	move	$s3, $a3
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 32
	bge	$a1, $s0, .LBB240_21
# %bb.4:
	ld.d	$a1, $a0, 24
	sltui	$a1, $a1, 1
	move	$a2, $a0
	masknez	$a0, $s2, $a1
	maskeqz	$a1, $a2, $a1
	or	$a1, $a1, $a0
	b	.LBB240_36
.LBB240_5:
	ld.d	$a0, $a3, 40
	beqz	$a0, .LBB240_12
# %bb.6:
	ld.d	$a1, $a3, 32
	ld.d	$a0, $a1, 32
	ld.d	$a4, $a2, 0
	bge	$a0, $a4, .LBB240_12
.LBB240_7:
	move	$a0, $zero
	b	.LBB240_36
.LBB240_8:
	bge	$a1, $s0, .LBB240_19
# %bb.9:
	ld.d	$a1, $a3, 32
	beq	$a1, $a0, .LBB240_26
# %bb.10:
	move	$s1, $a3
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 32
	bge	$s0, $a1, .LBB240_27
# %bb.11:
	ld.d	$a1, $s2, 24
	sltui	$a1, $a1, 1
	maskeqz	$a2, $s2, $a1
	masknez	$a0, $a0, $a1
	or	$a1, $a2, $a0
	b	.LBB240_36
.LBB240_12:
	ld.d	$a5, $a3, 16
	beqz	$a5, .LBB240_16
# %bb.13:                               # %.lr.ph.i
	ld.d	$a1, $a2, 0
	ori	$a0, $zero, 24
	ori	$a6, $zero, 16
	.p2align	4, , 16
.LBB240_14:                             # =>This Inner Loop Header: Depth=1
	move	$fp, $a5
	ld.d	$a4, $a5, 32
	slt	$a5, $a1, $a4
	masknez	$a7, $a0, $a5
	maskeqz	$a5, $a6, $a5
	or	$a5, $a5, $a7
	ldx.d	$a5, $fp, $a5
	bnez	$a5, .LBB240_14
# %bb.15:                               # %._crit_edge.i
	move	$a0, $fp
	bge	$a1, $a4, .LBB240_18
.LBB240_16:                             # %._crit_edge.thread.i
	ld.d	$a0, $a3, 24
	beq	$fp, $a0, .LBB240_35
# %bb.17:
	move	$a0, $fp
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a4, $a0, 32
	ld.d	$a1, $s0, 0
.LBB240_18:
	slt	$a2, $a4, $a1
	b	.LBB240_34
.LBB240_19:
	move	$a1, $zero
	b	.LBB240_36
.LBB240_20:
	move	$a1, $a0
	b	.LBB240_36
.LBB240_21:
	ld.d	$a4, $s3, 16
	move	$a1, $s1
	beqz	$a4, .LBB240_25
# %bb.22:                               # %.lr.ph.i23.preheader
	ori	$a0, $zero, 24
	ori	$a3, $zero, 16
	.p2align	4, , 16
.LBB240_23:                             # %.lr.ph.i23
                                        # =>This Inner Loop Header: Depth=1
	move	$fp, $a4
	ld.d	$a2, $a4, 32
	slt	$a4, $s0, $a2
	masknez	$a5, $a0, $a4
	maskeqz	$a4, $a3, $a4
	or	$a4, $a4, $a5
	ldx.d	$a4, $fp, $a4
	bnez	$a4, .LBB240_23
# %bb.24:                               # %._crit_edge.i29
	move	$a0, $fp
	bge	$s0, $a2, .LBB240_33
.LBB240_25:                             # %._crit_edge.thread.i37
	bne	$fp, $a1, .LBB240_32
	b	.LBB240_7
.LBB240_26:
	move	$a1, $a0
	move	$a0, $zero
	b	.LBB240_36
.LBB240_27:
	move	$a1, $s1
	ld.d	$a4, $s1, 16
	beqz	$a4, .LBB240_31
# %bb.28:                               # %.lr.ph.i42.preheader
	ori	$a0, $zero, 24
	ori	$a3, $zero, 16
	.p2align	4, , 16
.LBB240_29:                             # %.lr.ph.i42
                                        # =>This Inner Loop Header: Depth=1
	move	$fp, $a4
	ld.d	$a2, $a4, 32
	slt	$a4, $s0, $a2
	masknez	$a5, $a0, $a4
	maskeqz	$a4, $a3, $a4
	or	$a4, $a4, $a5
	ldx.d	$a4, $fp, $a4
	bnez	$a4, .LBB240_29
# %bb.30:                               # %._crit_edge.i48
	move	$a0, $fp
	bge	$s0, $a2, .LBB240_33
.LBB240_31:                             # %._crit_edge.thread.i56
	ld.d	$a0, $a1, 24
	beq	$fp, $a0, .LBB240_35
.LBB240_32:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a2, $a0, 32
.LBB240_33:
	slt	$a2, $a2, $s0
.LBB240_34:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE24_M_get_insert_unique_posERS1_.exit
	maskeqz	$a1, $fp, $a2
	masknez	$a0, $a0, $a2
	b	.LBB240_36
.LBB240_35:
	move	$a0, $zero
	move	$a1, $fp
.LBB240_36:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE24_M_get_insert_unique_posERS1_.exit
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end240:
	.size	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_, .Lfunc_end240-_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	2
	.type	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB241_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB241_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ori	$a1, $zero, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB241_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB241_4:                              # %._crit_edge
	ret
.Lfunc_end241:
	.size	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end241-_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm
	.p2align	2
	.type	_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm
.Lfunc_begin114:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception114
# %bb.0:                                # %_ZNSt11_Deque_baseIlSaIlEE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB242_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1830:                              # EH_LABEL
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1831:                              # EH_LABEL
# %bb.2:                                # %_ZNSt11_Deque_baseIlSaIlEE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB242_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB242_1
# %bb.3:                                # %_ZNSt11_Deque_baseIlSaIlEE15_M_create_nodesEPPlS3_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB242_4:
.Ltmp1832:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB242_6
	.p2align	4, , 16
.LBB242_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB242_5
.LBB242_6:                              # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i
.Ltmp1833:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1834:                              # EH_LABEL
# %bb.7:
.LBB242_8:
.Ltmp1835:                              # EH_LABEL
	move	$s0, $a0
.Ltmp1836:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1837:                              # EH_LABEL
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp1839:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1840:                              # EH_LABEL
# %bb.10:
.LBB242_11:
.Ltmp1841:                              # EH_LABEL
	move	$fp, $a0
.Ltmp1842:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1843:                              # EH_LABEL
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB242_13:
.Ltmp1844:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB242_14:
.Ltmp1838:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end242:
	.size	_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm, .Lfunc_end242-_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table242:
.Lexception114:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase52-.Lttbaseref52
.Lttbaseref52:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end114-.Lcst_begin114
.Lcst_begin114:
	.uleb128 .Lfunc_begin114-.Lfunc_begin114 # >> Call Site 1 <<
	.uleb128 .Ltmp1830-.Lfunc_begin114      #   Call between .Lfunc_begin114 and .Ltmp1830
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1830-.Lfunc_begin114      # >> Call Site 2 <<
	.uleb128 .Ltmp1831-.Ltmp1830            #   Call between .Ltmp1830 and .Ltmp1831
	.uleb128 .Ltmp1832-.Lfunc_begin114      #     jumps to .Ltmp1832
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1831-.Lfunc_begin114      # >> Call Site 3 <<
	.uleb128 .Ltmp1833-.Ltmp1831            #   Call between .Ltmp1831 and .Ltmp1833
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1833-.Lfunc_begin114      # >> Call Site 4 <<
	.uleb128 .Ltmp1834-.Ltmp1833            #   Call between .Ltmp1833 and .Ltmp1834
	.uleb128 .Ltmp1835-.Lfunc_begin114      #     jumps to .Ltmp1835
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1836-.Lfunc_begin114      # >> Call Site 5 <<
	.uleb128 .Ltmp1837-.Ltmp1836            #   Call between .Ltmp1836 and .Ltmp1837
	.uleb128 .Ltmp1838-.Lfunc_begin114      #     jumps to .Ltmp1838
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1837-.Lfunc_begin114      # >> Call Site 6 <<
	.uleb128 .Ltmp1839-.Ltmp1837            #   Call between .Ltmp1837 and .Ltmp1839
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1839-.Lfunc_begin114      # >> Call Site 7 <<
	.uleb128 .Ltmp1840-.Ltmp1839            #   Call between .Ltmp1839 and .Ltmp1840
	.uleb128 .Ltmp1841-.Lfunc_begin114      #     jumps to .Ltmp1841
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1842-.Lfunc_begin114      # >> Call Site 8 <<
	.uleb128 .Ltmp1843-.Ltmp1842            #   Call between .Ltmp1842 and .Ltmp1843
	.uleb128 .Ltmp1844-.Lfunc_begin114      #     jumps to .Ltmp1844
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1843-.Lfunc_begin114      # >> Call Site 9 <<
	.uleb128 .Lfunc_end242-.Ltmp1843        #   Call between .Ltmp1843 and .Lfunc_end242
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end114:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase52:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_,"axG",@progbits,_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_,comdat
	.weak	_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_ # -- Begin function _ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_
	.p2align	2
	.type	_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_,@function
_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_: # @_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB243_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB243_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB243_3:                              # %_ZNSt5dequeIlSaIlEE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB243_4:
	pcalau12i	$a0, %pc_hi20(.L.str.217)
	addi.d	$a0, $a0, %pc_lo12(.L.str.217)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end243:
	.size	_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_, .Lfunc_end243-_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	.p2align	2
	.type	_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB244_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB244_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB244_12
# %bb.3:
	move	$a0, $s0
	b	.LBB244_8
.LBB244_4:                              # %_ZNSt11_Deque_baseIlSaIlEE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB244_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB244_6:                              # %_ZSt4copyIPPlS1_ET0_T_S3_S2_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB244_9
.LBB244_7:                              # %_ZSt9__advanceIPPllEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB244_14
.LBB244_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB244_9:                              # %_ZSt4copyIPPlS1_ET0_T_S3_S2_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB244_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB244_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB244_6
.LBB244_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB244_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB244_9
.LBB244_14:                             # %_ZSt9__advanceIPPllEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB244_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB244_9
.Lfunc_end244:
	.size	_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb, .Lfunc_end244-_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # -- Begin function _ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.p2align	2
	.type	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,@function
_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_: # @_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sltu	$a2, $zero, $s1
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	sub.d	$a0, $a0, $a2
	alsl.d	$a2, $a0, $a0, 2
	alsl.d	$a0, $a2, $a0, 2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	lu12i.w	$a3, -349526
	ori	$a3, $a3, 2731
	lu32i.d	$a3, -349526
	ld.d	$a4, $fp, 32
	ld.d	$a5, $fp, 16
	lu52i.d	$a3, $a3, -1366
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a4, $a5
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	lu12i.w	$a2, 349525
	ori	$a2, $a2, 1365
	bstrins.d	$a2, $a2, 58, 32
	beq	$a0, $a2, .LBB245_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB245_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB245_3:                              # %_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 504
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
	ld.d	$a1, $s0, 16
	st.d	$a1, $a0, 16
	vld	$vr0, $s0, 0
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB245_4:
	pcalau12i	$a0, %pc_hi20(.L.str.217)
	addi.d	$a0, $a0, %pc_lo12(.L.str.217)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end245:
	.size	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_, .Lfunc_end245-_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb
	.p2align	2
	.type	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB246_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB246_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB246_12
# %bb.3:
	move	$a0, $s0
	b	.LBB246_8
.LBB246_4:                              # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB246_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB246_6:                              # %_ZSt4copyIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEES7_ET0_T_S9_S8_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB246_9
.LBB246_7:                              # %_ZSt9__advanceIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB246_14
.LBB246_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB246_9:                              # %_ZSt4copyIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEES7_ET0_T_S9_S8_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 504
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB246_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB246_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB246_6
.LBB246_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB246_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB246_9
.LBB246_14:                             # %_ZSt9__advanceIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB246_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB246_9
.Lfunc_end246:
	.size	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb, .Lfunc_end246-_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_ # -- Begin function _ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_
	.p2align	2
	.type	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_,@function
_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_: # @_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sltu	$a2, $zero, $s1
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	sub.d	$a0, $a0, $a2
	alsl.d	$a2, $a0, $a0, 2
	alsl.d	$a0, $a2, $a0, 2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	lu12i.w	$a3, -349526
	ori	$a3, $a3, 2731
	lu32i.d	$a3, -349526
	ld.d	$a4, $fp, 32
	ld.d	$a5, $fp, 16
	lu52i.d	$a3, $a3, -1366
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a4, $a5
	srai.d	$a2, $a2, 3
	mul.d	$a2, $a2, $a3
	add.d	$a0, $a0, $a2
	lu12i.w	$a2, 349525
	ori	$a2, $a2, 1365
	bstrins.d	$a2, $a2, 58, 32
	beq	$a0, $a2, .LBB247_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB247_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB247_3:                              # %_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 504
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
	ld.d	$a1, $s0, 16
	st.d	$a1, $a0, 16
	vld	$vr0, $s0, 0
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB247_4:
	pcalau12i	$a0, %pc_hi20(.L.str.217)
	addi.d	$a0, $a0, %pc_lo12(.L.str.217)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end247:
	.size	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_, .Lfunc_end247-_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,comdat
	.hidden	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.p2align	2
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a0, $a0, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB248_3
# %bb.1:
	ld.w	$a0, $fp, 12
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 12
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB248_4
.LBB248_2:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a1
.LBB248_3:
	addi.d	$a1, $fp, 12
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB248_2
.LBB248_4:                              # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end248:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, .Lfunc_end248-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	5                               # -- Begin function __cxx_global_array_dtor
	.type	__cxx_global_array_dtor,@function
__cxx_global_array_dtor:                # @__cxx_global_array_dtor
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$fp, $a0, %pc_lo12(_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists)
	addi.d	$a0, $fp, 120
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 96
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 72
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 48
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $fp, 24
	pcaddu18i	$ra, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt6vectorI8TestCaseSaIS0_EED2Ev)
	jr	$t8
.Lfunc_end249:
	.size	__cxx_global_array_dtor, .Lfunc_end249-__cxx_global_array_dtor
                                        # -- End function
	.section	.text._ZNSt6vectorI8TestCaseSaIS0_EED2Ev,"axG",@progbits,_ZNSt6vectorI8TestCaseSaIS0_EED2Ev,comdat
	.hidden	_ZNSt6vectorI8TestCaseSaIS0_EED2Ev # -- Begin function _ZNSt6vectorI8TestCaseSaIS0_EED2Ev
	.weak	_ZNSt6vectorI8TestCaseSaIS0_EED2Ev
	.p2align	2
	.type	_ZNSt6vectorI8TestCaseSaIS0_EED2Ev,@function
_ZNSt6vectorI8TestCaseSaIS0_EED2Ev:     # @_ZNSt6vectorI8TestCaseSaIS0_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s2, $a0, 8
	beq	$s0, $s2, .LBB250_15
# %bb.1:                                # %.lr.ph.i.preheader
	ori	$s3, $zero, 1
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$s4, $a0, %got_pc_lo12(__libc_single_threaded)
	ori	$s5, $zero, 1
	lu32i.d	$s5, 1
	addi.w	$s6, $zero, -1
	b	.LBB250_3
	.p2align	4, , 16
.LBB250_2:                              # %_ZSt8_DestroyI8TestCaseEvPT_.exit.i
                                        #   in Loop: Header=BB250_3 Depth=1
	addi.d	$s0, $s0, 88
	beq	$s0, $s2, .LBB250_14
.LBB250_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s1, $s0, 80
	beqz	$s1, .LBB250_8
# %bb.4:                                #   in Loop: Header=BB250_3 Depth=1
	ld.d	$a0, $s1, 8
	dbar	20
	bne	$a0, $s5, .LBB250_6
# %bb.5:                                #   in Loop: Header=BB250_3 Depth=1
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $s0, 56
	bne	$a1, $a0, .LBB250_9
	b	.LBB250_10
	.p2align	4, , 16
.LBB250_6:                              #   in Loop: Header=BB250_3 Depth=1
	ld.bu	$a1, $s4, 0
	beqz	$a1, .LBB250_12
# %bb.7:                                #   in Loop: Header=BB250_3 Depth=1
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	beq	$a0, $s3, .LBB250_13
	.p2align	4, , 16
.LBB250_8:                              # %_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB250_3 Depth=1
	ld.d	$a0, $s0, 40
	addi.d	$a1, $s0, 56
	beq	$a1, $a0, .LBB250_10
.LBB250_9:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB250_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB250_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB250_3 Depth=1
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s0, 16
	beq	$a1, $a0, .LBB250_2
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
                                        #   in Loop: Header=BB250_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB250_2
.LBB250_12:                             #   in Loop: Header=BB250_3 Depth=1
	addi.d	$a1, $s1, 8
	amadd_db.w	$a0, $s6, $a1
	addi.w	$a0, $a0, 0
	bne	$a0, $s3, .LBB250_8
.LBB250_13:                             #   in Loop: Header=BB250_3 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $s0, 56
	bne	$a1, $a0, .LBB250_9
	b	.LBB250_10
.LBB250_14:                             # %_ZSt8_DestroyIP8TestCaseS0_EvT_S2_RSaIT0_E.exitthread-pre-split
	ld.d	$s0, $fp, 0
.LBB250_15:                             # %_ZSt8_DestroyIP8TestCaseS0_EvT_S2_RSaIT0_E.exit
	beqz	$s0, .LBB250_17
# %bb.16:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB250_17:                             # %_ZNSt12_Vector_baseI8TestCaseSaIS0_EED2Ev.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end250:
	.size	_ZNSt6vectorI8TestCaseSaIS0_EED2Ev, .Lfunc_end250-_ZNSt6vectorI8TestCaseSaIS0_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIP8TestCaseEvT_S2_,"axG",@progbits,_ZSt8_DestroyIP8TestCaseEvT_S2_,comdat
	.hidden	_ZSt8_DestroyIP8TestCaseEvT_S2_ # -- Begin function _ZSt8_DestroyIP8TestCaseEvT_S2_
	.weak	_ZSt8_DestroyIP8TestCaseEvT_S2_
	.p2align	5
	.type	_ZSt8_DestroyIP8TestCaseEvT_S2_,@function
_ZSt8_DestroyIP8TestCaseEvT_S2_:        # @_ZSt8_DestroyIP8TestCaseEvT_S2_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB251_15
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a1
	move	$s0, $a0
	ori	$s2, $zero, 1
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$s3, $a0, %got_pc_lo12(__libc_single_threaded)
	ori	$s4, $zero, 1
	lu32i.d	$s4, 1
	addi.w	$s5, $zero, -1
	b	.LBB251_3
	.p2align	4, , 16
.LBB251_2:                              # %_ZSt8_DestroyI8TestCaseEvPT_.exit
                                        #   in Loop: Header=BB251_3 Depth=1
	addi.d	$s0, $s0, 88
	beq	$s0, $fp, .LBB251_14
.LBB251_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s1, $s0, 80
	beqz	$s1, .LBB251_8
# %bb.4:                                #   in Loop: Header=BB251_3 Depth=1
	ld.d	$a0, $s1, 8
	dbar	20
	bne	$a0, $s4, .LBB251_6
# %bb.5:                                #   in Loop: Header=BB251_3 Depth=1
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $s0, 56
	bne	$a1, $a0, .LBB251_9
	b	.LBB251_10
	.p2align	4, , 16
.LBB251_6:                              #   in Loop: Header=BB251_3 Depth=1
	ld.bu	$a1, $s3, 0
	beqz	$a1, .LBB251_12
# %bb.7:                                #   in Loop: Header=BB251_3 Depth=1
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	beq	$a0, $s2, .LBB251_13
	.p2align	4, , 16
.LBB251_8:                              # %_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit.i.i
                                        #   in Loop: Header=BB251_3 Depth=1
	ld.d	$a0, $s0, 40
	addi.d	$a1, $s0, 56
	beq	$a1, $a0, .LBB251_10
.LBB251_9:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB251_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB251_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i
                                        #   in Loop: Header=BB251_3 Depth=1
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s0, 16
	beq	$a1, $a0, .LBB251_2
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i
                                        #   in Loop: Header=BB251_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB251_2
.LBB251_12:                             #   in Loop: Header=BB251_3 Depth=1
	addi.d	$a1, $s1, 8
	amadd_db.w	$a0, $s5, $a1
	addi.w	$a0, $a0, 0
	bne	$a0, $s2, .LBB251_8
.LBB251_13:                             #   in Loop: Header=BB251_3 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $s0, 56
	bne	$a1, $a0, .LBB251_9
	b	.LBB251_10
.LBB251_14:
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
.LBB251_15:                             # %._crit_edge
	ret
.Lfunc_end251:
	.size	_ZSt8_DestroyIP8TestCaseEvT_S2_, .Lfunc_end251-_ZSt8_DestroyIP8TestCaseEvT_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
.Lfunc_begin115:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception115
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 16
	move	$a0, $s4
	bltu	$s2, $a1, .LBB252_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB252_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB252_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB252_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB252_6
.LBB252_5:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB252_6:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 16
	bltu	$s2, $a0, .LBB252_9
# %bb.7:                                # %.noexc.i7
.Ltmp1845:                              # EH_LABEL
	addi.d	$s3, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1846:                              # EH_LABEL
# %bb.8:                                # %.noexc8
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB252_9:                              # %._crit_edge.i.i6
	beqz	$s2, .LBB252_13
# %bb.10:                               # %._crit_edge.i.i6
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB252_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB252_13
.LBB252_12:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB252_13:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 32
	st.d	$a0, $fp, 40
	stx.b	$zero, $a1, $a0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB252_14:
.Ltmp1847:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB252_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB252_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end252:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_, .Lfunc_end252-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA7_KcRA34_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.p2align	2, 0x0
GCC_except_table252:
.Lexception115:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end115-.Lcst_begin115
.Lcst_begin115:
	.uleb128 .Lfunc_begin115-.Lfunc_begin115 # >> Call Site 1 <<
	.uleb128 .Ltmp1845-.Lfunc_begin115      #   Call between .Lfunc_begin115 and .Ltmp1845
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1845-.Lfunc_begin115      # >> Call Site 2 <<
	.uleb128 .Ltmp1846-.Ltmp1845            #   Call between .Ltmp1845 and .Ltmp1846
	.uleb128 .Ltmp1847-.Lfunc_begin115      #     jumps to .Ltmp1847
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1846-.Lfunc_begin115      # >> Call Site 3 <<
	.uleb128 .Lfunc_end252-.Ltmp1846        #   Call between .Ltmp1846 and .Lfunc_end252
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end115:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
.Lfunc_begin116:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception116
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 16
	move	$a0, $s4
	bltu	$s2, $a1, .LBB253_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB253_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB253_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB253_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB253_6
.LBB253_5:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB253_6:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 16
	bltu	$s2, $a0, .LBB253_9
# %bb.7:                                # %.noexc.i7
.Ltmp1848:                              # EH_LABEL
	addi.d	$s3, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1849:                              # EH_LABEL
# %bb.8:                                # %.noexc8
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB253_9:                              # %._crit_edge.i.i6
	beqz	$s2, .LBB253_13
# %bb.10:                               # %._crit_edge.i.i6
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB253_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB253_13
.LBB253_12:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB253_13:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 32
	st.d	$a0, $fp, 40
	stx.b	$zero, $a1, $a0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB253_14:
.Ltmp1850:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB253_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB253_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end253:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_, .Lfunc_end253-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA9_KcRA56_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.p2align	2, 0x0
GCC_except_table253:
.Lexception116:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end116-.Lcst_begin116
.Lcst_begin116:
	.uleb128 .Lfunc_begin116-.Lfunc_begin116 # >> Call Site 1 <<
	.uleb128 .Ltmp1848-.Lfunc_begin116      #   Call between .Lfunc_begin116 and .Ltmp1848
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1848-.Lfunc_begin116      # >> Call Site 2 <<
	.uleb128 .Ltmp1849-.Ltmp1848            #   Call between .Ltmp1848 and .Ltmp1849
	.uleb128 .Ltmp1850-.Lfunc_begin116      #     jumps to .Ltmp1850
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1849-.Lfunc_begin116      # >> Call Site 3 <<
	.uleb128 .Lfunc_end253-.Ltmp1849        #   Call between .Ltmp1849 and .Lfunc_end253
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end116:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_
.Lfunc_begin117:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception117
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 8
	move	$a0, $s3
	bltu	$s2, $a1, .LBB254_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB254_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB254_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB254_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB254_6
.LBB254_5:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB254_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	ld.d	$a1, $s0, 8
	ld.d	$s0, $s0, 0
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a0, .LBB254_9
# %bb.7:                                # %.noexc.i7
.Ltmp1851:                              # EH_LABEL
	addi.d	$s2, $fp, 32
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1852:                              # EH_LABEL
# %bb.8:                                # %.noexc8
	ld.d	$a1, $sp, 8
	st.d	$a0, $s2, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB254_9:                              # %._crit_edge.i.i6
	addi.w	$a0, $zero, -1
	beq	$a1, $a0, .LBB254_13
# %bb.10:                               # %._crit_edge.i.i6
	bnez	$a1, .LBB254_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB254_13
.LBB254_12:
	addi.d	$a2, $a1, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB254_13:
	ld.d	$a0, $sp, 8
	st.d	$a0, $fp, 40
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB254_14:
.Ltmp1853:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s3, .LBB254_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s3, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB254_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end254:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_, .Lfunc_end254-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISD_SE_EEEbE4typeELb1EEEOSD_OSE_,comdat
	.p2align	2, 0x0
GCC_except_table254:
.Lexception117:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end117-.Lcst_begin117
.Lcst_begin117:
	.uleb128 .Lfunc_begin117-.Lfunc_begin117 # >> Call Site 1 <<
	.uleb128 .Ltmp1851-.Lfunc_begin117      #   Call between .Lfunc_begin117 and .Ltmp1851
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1851-.Lfunc_begin117      # >> Call Site 2 <<
	.uleb128 .Ltmp1852-.Ltmp1851            #   Call between .Ltmp1851 and .Ltmp1852
	.uleb128 .Ltmp1853-.Lfunc_begin117      #     jumps to .Ltmp1853
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1852-.Lfunc_begin117      # >> Call Site 3 <<
	.uleb128 .Lfunc_end254-.Ltmp1852        #   Call between .Ltmp1852 and .Lfunc_end254
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end117:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
.Lfunc_begin118:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception118
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 16
	move	$a0, $s4
	bltu	$s2, $a1, .LBB255_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB255_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB255_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB255_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB255_6
.LBB255_5:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB255_6:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 16
	bltu	$s2, $a0, .LBB255_9
# %bb.7:                                # %.noexc.i7
.Ltmp1854:                              # EH_LABEL
	addi.d	$s3, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1855:                              # EH_LABEL
# %bb.8:                                # %.noexc8
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB255_9:                              # %._crit_edge.i.i6
	beqz	$s2, .LBB255_13
# %bb.10:                               # %._crit_edge.i.i6
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB255_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB255_13
.LBB255_12:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB255_13:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 32
	st.d	$a0, $fp, 40
	stx.b	$zero, $a1, $a0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB255_14:
.Ltmp1856:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB255_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB255_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end255:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_, .Lfunc_end255-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcRA11_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.p2align	2, 0x0
GCC_except_table255:
.Lexception118:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end118-.Lcst_begin118
.Lcst_begin118:
	.uleb128 .Lfunc_begin118-.Lfunc_begin118 # >> Call Site 1 <<
	.uleb128 .Ltmp1854-.Lfunc_begin118      #   Call between .Lfunc_begin118 and .Ltmp1854
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1854-.Lfunc_begin118      # >> Call Site 2 <<
	.uleb128 .Ltmp1855-.Ltmp1854            #   Call between .Ltmp1854 and .Ltmp1855
	.uleb128 .Ltmp1856-.Lfunc_begin118      #     jumps to .Ltmp1856
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1855-.Lfunc_begin118      # >> Call Site 3 <<
	.uleb128 .Lfunc_end255-.Ltmp1855        #   Call between .Ltmp1855 and .Lfunc_end255
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end118:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
.Lfunc_begin119:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception119
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 16
	move	$a0, $s4
	bltu	$s2, $a1, .LBB256_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB256_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB256_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB256_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB256_6
.LBB256_5:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB256_6:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 16
	bltu	$s2, $a0, .LBB256_9
# %bb.7:                                # %.noexc.i7
.Ltmp1857:                              # EH_LABEL
	addi.d	$s3, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1858:                              # EH_LABEL
# %bb.8:                                # %.noexc8
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB256_9:                              # %._crit_edge.i.i6
	beqz	$s2, .LBB256_13
# %bb.10:                               # %._crit_edge.i.i6
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB256_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB256_13
.LBB256_12:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB256_13:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 32
	st.d	$a0, $fp, 40
	stx.b	$zero, $a1, $a0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB256_14:
.Ltmp1859:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB256_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB256_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end256:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end256-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA5_KcSA_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.p2align	2, 0x0
GCC_except_table256:
.Lexception119:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end119-.Lcst_begin119
.Lcst_begin119:
	.uleb128 .Lfunc_begin119-.Lfunc_begin119 # >> Call Site 1 <<
	.uleb128 .Ltmp1857-.Lfunc_begin119      #   Call between .Lfunc_begin119 and .Ltmp1857
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1857-.Lfunc_begin119      # >> Call Site 2 <<
	.uleb128 .Ltmp1858-.Ltmp1857            #   Call between .Ltmp1857 and .Ltmp1858
	.uleb128 .Ltmp1859-.Lfunc_begin119      #     jumps to .Ltmp1859
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1858-.Lfunc_begin119      # >> Call Site 3 <<
	.uleb128 .Lfunc_end256-.Ltmp1858        #   Call between .Ltmp1858 and .Lfunc_end256
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end119:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.p2align	5
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 8
	addi.w	$a2, $zero, -2
	lu52i.d	$a2, $a2, 2047
	sub.d	$a1, $a2, $a1
	bltu	$a1, $a0, .LBB257_5
# %bb.1:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
	move	$a2, $a0
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	ld.d	$a1, $s0, 0
	addi.d	$s1, $s0, 16
	beq	$a1, $s1, .LBB257_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $fp, 0
	ld.d	$a0, $s0, 16
	st.d	$a0, $fp, 16
	ld.d	$s2, $s0, 8
	b	.LBB257_4
.LBB257_3:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$s2, $s0, 8
	addi.d	$a2, $s2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB257_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	st.d	$s2, $fp, 8
	st.d	$s1, $s0, 0
	st.d	$zero, $s0, 8
	st.b	$zero, $s0, 16
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB257_5:
	pcalau12i	$a0, %pc_hi20(.L.str.275)
	addi.d	$a0, $a0, %pc_lo12(.L.str.275)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end257:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_, .Lfunc_end257-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.p2align	5
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Lfunc_begin120:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception120
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ld.d	$s0, $s1, 0
	ld.d	$s1, $s1, 8
	addi.d	$s4, $fp, 16
	st.d	$s4, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	add.d	$a1, $s1, $a0
.Ltmp1860:                              # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm)
	jirl	$ra, $ra, 0
.Ltmp1861:                              # EH_LABEL
# %bb.1:
	ld.d	$a0, $fp, 8
	addi.w	$a1, $zero, -2
	lu52i.d	$s5, $a1, 2047
	sub.d	$a0, $s5, $a0
	bltu	$a0, $s3, .LBB258_6
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
.Ltmp1862:                              # EH_LABEL
	move	$a0, $fp
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
.Ltmp1863:                              # EH_LABEL
# %bb.3:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm.exit.i
	ld.d	$a0, $fp, 8
	sub.d	$a0, $s5, $a0
	bltu	$a0, $s1, .LBB258_6
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i10.i
.Ltmp1864:                              # EH_LABEL
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
.Ltmp1865:                              # EH_LABEL
# %bb.5:                                # %_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB258_6:                              # %.invoke.i
.Ltmp1866:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.275)
	addi.d	$a0, $a0, %pc_lo12(.L.str.275)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1867:                              # EH_LABEL
# %bb.7:                                # %.cont.i
.LBB258_8:
.Ltmp1868:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB258_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB258_10:                             # %.body
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end258:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_, .Lfunc_end258-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_endproc
	.section	.gcc_except_table._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"aG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.p2align	2, 0x0
GCC_except_table258:
.Lexception120:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end120-.Lcst_begin120
.Lcst_begin120:
	.uleb128 .Lfunc_begin120-.Lfunc_begin120 # >> Call Site 1 <<
	.uleb128 .Ltmp1860-.Lfunc_begin120      #   Call between .Lfunc_begin120 and .Ltmp1860
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1860-.Lfunc_begin120      # >> Call Site 2 <<
	.uleb128 .Ltmp1867-.Ltmp1860            #   Call between .Ltmp1860 and .Ltmp1867
	.uleb128 .Ltmp1868-.Lfunc_begin120      #     jumps to .Ltmp1868
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1867-.Lfunc_begin120      # >> Call Site 3 <<
	.uleb128 .Lfunc_end258-.Ltmp1867        #   Call between .Ltmp1867 and .Lfunc_end258
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end120:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB259_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB259_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB259_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB259_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB259_6
.LBB259_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB259_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB259_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB259_9
.LBB259_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB259_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end259:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end259-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA6_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB260_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB260_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB260_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB260_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB260_6
.LBB260_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB260_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB260_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB260_9
.LBB260_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB260_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end260:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end260-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA16_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB261_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB261_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB261_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB261_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB261_6
.LBB261_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB261_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB261_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB261_9
.LBB261_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB261_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end261:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end261-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA27_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB262_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB262_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB262_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB262_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB262_6
.LBB262_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB262_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB262_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB262_9
.LBB262_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB262_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end262:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end262-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA19_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB263_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB263_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB263_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB263_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB263_6
.LBB263_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB263_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB263_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB263_9
.LBB263_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB263_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end263:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end263-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA18_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB264_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB264_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB264_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB264_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB264_6
.LBB264_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB264_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB264_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB264_9
.LBB264_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB264_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end264:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end264-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA26_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB265_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB265_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB265_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB265_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB265_6
.LBB265_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB265_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB265_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB265_9
.LBB265_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB265_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end265:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end265-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA29_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
.Lfunc_begin121:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception121
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 16
	move	$a0, $s4
	bltu	$s2, $a1, .LBB266_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB266_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB266_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB266_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB266_6
.LBB266_5:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB266_6:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 16
	bltu	$s2, $a0, .LBB266_9
# %bb.7:                                # %.noexc.i7
.Ltmp1869:                              # EH_LABEL
	addi.d	$s3, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1870:                              # EH_LABEL
# %bb.8:                                # %.noexc8
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB266_9:                              # %._crit_edge.i.i6
	beqz	$s2, .LBB266_13
# %bb.10:                               # %._crit_edge.i.i6
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB266_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB266_13
.LBB266_12:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB266_13:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 32
	st.d	$a0, $fp, 40
	stx.b	$zero, $a1, $a0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB266_14:
.Ltmp1871:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB266_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB266_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end266:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_, .Lfunc_end266-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcRA114_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.p2align	2, 0x0
GCC_except_table266:
.Lexception121:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end121-.Lcst_begin121
.Lcst_begin121:
	.uleb128 .Lfunc_begin121-.Lfunc_begin121 # >> Call Site 1 <<
	.uleb128 .Ltmp1869-.Lfunc_begin121      #   Call between .Lfunc_begin121 and .Ltmp1869
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1869-.Lfunc_begin121      # >> Call Site 2 <<
	.uleb128 .Ltmp1870-.Ltmp1869            #   Call between .Ltmp1869 and .Ltmp1870
	.uleb128 .Ltmp1871-.Lfunc_begin121      #     jumps to .Ltmp1871
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1870-.Lfunc_begin121      # >> Call Site 3 <<
	.uleb128 .Lfunc_end266-.Ltmp1870        #   Call between .Ltmp1870 and .Lfunc_end266
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end121:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB267_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB267_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB267_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB267_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB267_6
.LBB267_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB267_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB267_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB267_9
.LBB267_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB267_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end267:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end267-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA12_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB268_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB268_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB268_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB268_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB268_6
.LBB268_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB268_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB268_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB268_9
.LBB268_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB268_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end268:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end268-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA15_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB269_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB269_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB269_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB269_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB269_6
.LBB269_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB269_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB269_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB269_9
.LBB269_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB269_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end269:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end269-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA14_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 8
	bltu	$s2, $a0, .LBB270_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	move	$s3, $a0
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB270_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB270_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB270_5
# %bb.4:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s3, 0
	b	.LBB270_6
.LBB270_5:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB270_6:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB270_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB270_9
.LBB270_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB270_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end270:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end270-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA24_KcS5_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.p2align	2
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
.Lfunc_begin122:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception122
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 16
	move	$a0, $s4
	bltu	$s2, $a1, .LBB271_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB271_2:                              # %._crit_edge.i.i
	beqz	$s2, .LBB271_6
# %bb.3:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB271_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB271_6
.LBB271_5:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB271_6:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a0, $zero, 16
	st.d	$s2, $sp, 16
	bltu	$s2, $a0, .LBB271_9
# %bb.7:                                # %.noexc.i7
.Ltmp1872:                              # EH_LABEL
	addi.d	$s3, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1873:                              # EH_LABEL
# %bb.8:                                # %.noexc8
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB271_9:                              # %._crit_edge.i.i6
	beqz	$s2, .LBB271_13
# %bb.10:                               # %._crit_edge.i.i6
	ori	$a0, $zero, 1
	bne	$s2, $a0, .LBB271_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB271_13
.LBB271_12:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB271_13:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 32
	st.d	$a0, $fp, 40
	stx.b	$zero, $a1, $a0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB271_14:
.Ltmp1874:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB271_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB271_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end271:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_, .Lfunc_end271-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2IRA22_KcRA3_S8_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISE_SF_EEEbE4typeELb1EEEOSE_OSF_,comdat
	.p2align	2, 0x0
GCC_except_table271:
.Lexception122:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end122-.Lcst_begin122
.Lcst_begin122:
	.uleb128 .Lfunc_begin122-.Lfunc_begin122 # >> Call Site 1 <<
	.uleb128 .Ltmp1872-.Lfunc_begin122      #   Call between .Lfunc_begin122 and .Ltmp1872
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1872-.Lfunc_begin122      # >> Call Site 2 <<
	.uleb128 .Ltmp1873-.Ltmp1872            #   Call between .Ltmp1872 and .Ltmp1873
	.uleb128 .Ltmp1874-.Lfunc_begin122      #     jumps to .Ltmp1874
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1873-.Lfunc_begin122      # >> Call Site 3 <<
	.uleb128 .Lfunc_end271-.Ltmp1873        #   Call between .Ltmp1873 and .Lfunc_end271
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end122:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_,"axG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_,comdat
	.hidden	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_ # -- Begin function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_
	.weak	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_
	.p2align	2
	.type	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_,@function
_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_: # @_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_
.Lfunc_begin123:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception123
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	srli.d	$a0, $a2, 57
	vst	$vr0, $fp, 0
	bnez	$a0, .LBB272_8
# %bb.1:                                # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_S_check_init_lenEmRKS8_.exit.i
	move	$s2, $a2
	beqz	$a2, .LBB272_6
# %bb.2:                                # %_ZNSt15__new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE8allocateEmPKv.exit.i.i
.Ltmp1875:                              # EH_LABEL
	move	$s0, $a1
	slli.d	$s1, $s2, 6
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1876:                              # EH_LABEL
# %bb.3:                                # %.lr.ph.i.i.i.i.preheader
	st.d	$a0, $fp, 0
	slli.d	$a1, $s2, 6
	add.d	$a1, $a0, $a1
	st.d	$a1, $fp, 16
	st.d	$a0, $sp, 32
	st.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	st.d	$a1, $sp, 24
	.p2align	4, , 16
.LBB272_4:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1877:                              # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_)
	jirl	$ra, $ra, 0
.Ltmp1878:                              # EH_LABEL
# %bb.5:                                # %_ZSt10_ConstructISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EJRKS7_EEvPT_DpOT0_.exit.i.i.i.i
                                        #   in Loop: Header=BB272_4 Depth=1
	ld.d	$a0, $sp, 32
	addi.d	$s0, $s0, 64
	addi.d	$a0, $a0, 64
	addi.d	$s1, $s1, -64
	st.d	$a0, $sp, 32
	bnez	$s1, .LBB272_4
	b	.LBB272_7
.LBB272_6:                              # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE11_M_allocateEm.exit.i.thread
	move	$a0, $zero
	slli.d	$a1, $s2, 6
	st.d	$a1, $fp, 16
.LBB272_7:                              # %.loopexit
	st.d	$a0, $fp, 8
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB272_8:
.Ltmp1880:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a0, $a0, %pc_lo12(.L.str.49)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1881:                              # EH_LABEL
# %bb.9:                                # %.noexc
.LBB272_10:
.Ltmp1882:                              # EH_LABEL
	move	$s0, $a0
	b	.LBB272_12
.LBB272_11:
.Ltmp1879:                              # EH_LABEL
	move	$s0, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev)
	jirl	$ra, $ra, 0
.LBB272_12:                             # %.body
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB272_14
# %bb.13:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB272_14:                             # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end272:
	.size	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_, .Lfunc_end272-_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_,"aG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ESt16initializer_listIS7_ERKS8_,comdat
	.p2align	2, 0x0
GCC_except_table272:
.Lexception123:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end123-.Lcst_begin123
.Lcst_begin123:
	.uleb128 .Ltmp1875-.Lfunc_begin123      # >> Call Site 1 <<
	.uleb128 .Ltmp1876-.Ltmp1875            #   Call between .Ltmp1875 and .Ltmp1876
	.uleb128 .Ltmp1882-.Lfunc_begin123      #     jumps to .Ltmp1882
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1877-.Lfunc_begin123      # >> Call Site 2 <<
	.uleb128 .Ltmp1878-.Ltmp1877            #   Call between .Ltmp1877 and .Ltmp1878
	.uleb128 .Ltmp1879-.Lfunc_begin123      #     jumps to .Ltmp1879
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1880-.Lfunc_begin123      # >> Call Site 3 <<
	.uleb128 .Ltmp1881-.Ltmp1880            #   Call between .Ltmp1880 and .Ltmp1881
	.uleb128 .Ltmp1882-.Lfunc_begin123      #     jumps to .Ltmp1882
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1881-.Lfunc_begin123      # >> Call Site 4 <<
	.uleb128 .Lfunc_end272-.Ltmp1881        #   Call between .Ltmp1881 and .Lfunc_end272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end123:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	2                               # -- Begin function _ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE
	.type	_ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE,@function
_ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE: # @_ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE
.Lfunc_begin124:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception124
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$s0, $a0, 24
	ld.d	$s7, $a0, 32
	beq	$s0, $s7, .LBB273_15
# %bb.1:
	move	$fp, $a1
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 0
	move	$a1, $fp
	jirl	$ra, $a2, 0
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	ld.b	$a1, $a1, 0
	move	$s5, $a0
	dbar	20
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$s8, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	beqz	$a1, .LBB273_19
.LBB273_2:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit.peel
	ld.d	$a0, $s8, 0
	beqz	$a0, .LBB273_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(.L.str.280)
	addi.d	$a1, $a1, %pc_lo12(.L.str.280)
	ori	$a2, $zero, 49
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.LBB273_4:                              # %_ZN9benchmark8internallsIA50_cEERNS0_7LogTypeES4_RKT_.exit.peel
	addi.d	$s0, $s0, 8
	beq	$s0, $s7, .LBB273_16
# %bb.5:
	pcalau12i	$a0, %pc_hi20(.L.str.279)
	addi.d	$s1, $a0, %pc_lo12(.L.str.279)
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1)
	pcalau12i	$a0, %pc_hi20(.L__func__._ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE)
	addi.d	$s3, $a0, %pc_lo12(.L__func__._ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE)
	pcalau12i	$a0, %pc_hi20(.L.str.280)
	addi.d	$s4, $a0, %pc_lo12(.L.str.280)
	.p2align	4, , 16
.LBB273_6:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 0
	move	$a1, $fp
	jirl	$ra, $a2, 0
	move	$s6, $a0
	xor	$a0, $s5, $a0
	andi	$s5, $a0, 1
	beqz	$s5, .LBB273_8
# %bb.7:                                #   in Loop: Header=BB273_6 Depth=1
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 152
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $s3
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerC2EPKcS3_S3_i)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 16
	b	.LBB273_9
	.p2align	4, , 16
.LBB273_8:                              #   in Loop: Header=BB273_6 Depth=1
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.b	$a1, $a0, 0
	dbar	20
	move	$a0, $s8
	beqz	$a1, .LBB273_13
.LBB273_9:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
                                        #   in Loop: Header=BB273_6 Depth=1
	ld.d	$a0, $a0, 0
	beqz	$a0, .LBB273_11
# %bb.10:                               #   in Loop: Header=BB273_6 Depth=1
.Ltmp1883:                              # EH_LABEL
	ori	$a2, $zero, 49
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1884:                              # EH_LABEL
.LBB273_11:                             # %_ZN9benchmark8internallsIA50_cEERNS0_7LogTypeES4_RKT_.exit
                                        #   in Loop: Header=BB273_6 Depth=1
	bnez	$s5, .LBB273_18
# %bb.12:                               #   in Loop: Header=BB273_6 Depth=1
	addi.d	$s0, $s0, 8
	move	$s5, $s6
	bne	$s0, $s7, .LBB273_6
	b	.LBB273_17
.LBB273_13:                             #   in Loop: Header=BB273_6 Depth=1
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a1, $a0, 0
	move	$a0, $s8
	beqz	$a1, .LBB273_9
# %bb.14:                               #   in Loop: Header=BB273_6 Depth=1
	st.d	$zero, $s8, 0
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s8
	b	.LBB273_9
.LBB273_15:
	move	$s6, $zero
	b	.LBB273_17
.LBB273_16:
	move	$s6, $s5
.LBB273_17:                             # %._crit_edge
	move	$a0, $s6
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB273_18:                             # %.loopexit34
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.LBB273_19:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB273_2
# %bb.20:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB273_2
.LBB273_21:
.Ltmp1885:                              # EH_LABEL
	beqz	$s5, .LBB273_24
# %bb.22:
.Ltmp1886:                              # EH_LABEL
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal12CheckHandlerD2Ev)
	jirl	$ra, $ra, 0
.Ltmp1887:                              # EH_LABEL
# %bb.23:
.LBB273_24:
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB273_25:
.Ltmp1888:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end273:
	.size	_ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE, .Lfunc_end273-_ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table273:
.Lexception124:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase53-.Lttbaseref53
.Lttbaseref53:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end124-.Lcst_begin124
.Lcst_begin124:
	.uleb128 .Lfunc_begin124-.Lfunc_begin124 # >> Call Site 1 <<
	.uleb128 .Ltmp1883-.Lfunc_begin124      #   Call between .Lfunc_begin124 and .Ltmp1883
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1883-.Lfunc_begin124      # >> Call Site 2 <<
	.uleb128 .Ltmp1884-.Ltmp1883            #   Call between .Ltmp1883 and .Ltmp1884
	.uleb128 .Ltmp1885-.Lfunc_begin124      #     jumps to .Ltmp1885
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1884-.Lfunc_begin124      # >> Call Site 3 <<
	.uleb128 .Ltmp1886-.Ltmp1884            #   Call between .Ltmp1884 and .Ltmp1886
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1886-.Lfunc_begin124      # >> Call Site 4 <<
	.uleb128 .Ltmp1887-.Ltmp1886            #   Call between .Ltmp1886 and .Ltmp1887
	.uleb128 .Ltmp1888-.Lfunc_begin124      #     jumps to .Ltmp1888
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1887-.Lfunc_begin124      # >> Call Site 5 <<
	.uleb128 .Lfunc_end273-.Ltmp1887        #   Call between .Ltmp1887 and .Lfunc_end273
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end124:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase53:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl,"axG",@progbits,_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl,comdat
	.hidden	_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl # -- Begin function _ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl
	.weak	_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl
	.p2align	2
	.type	_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl,@function
_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl: # @_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl
# %bb.0:
	ret
.Lfunc_end274:
	.size	_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl, .Lfunc_end274-_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl
                                        # -- End function
	.text
	.p2align	2                               # -- Begin function _ZN8internal12_GLOBAL__N_112TestReporter10ReportRunsERKSt6vectorIN9benchmark17BenchmarkReporter3RunESaIS5_EE
	.type	_ZN8internal12_GLOBAL__N_112TestReporter10ReportRunsERKSt6vectorIN9benchmark17BenchmarkReporter3RunESaIS5_EE,@function
_ZN8internal12_GLOBAL__N_112TestReporter10ReportRunsERKSt6vectorIN9benchmark17BenchmarkReporter3RunESaIS5_EE: # @_ZN8internal12_GLOBAL__N_112TestReporter10ReportRunsERKSt6vectorIN9benchmark17BenchmarkReporter3RunESaIS5_EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$s0, $a0, 24
	ld.d	$s1, $a0, 32
	beq	$s0, $s1, .LBB275_3
# %bb.1:
	move	$fp, $a1
	.p2align	4, , 16
.LBB275_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 16
	move	$a1, $fp
	jirl	$ra, $a2, 0
	addi.d	$s0, $s0, 8
	bne	$s0, $s1, .LBB275_2
.LBB275_3:                              # %._crit_edge
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end275:
	.size	_ZN8internal12_GLOBAL__N_112TestReporter10ReportRunsERKSt6vectorIN9benchmark17BenchmarkReporter3RunESaIS5_EE, .Lfunc_end275-_ZN8internal12_GLOBAL__N_112TestReporter10ReportRunsERKSt6vectorIN9benchmark17BenchmarkReporter3RunESaIS5_EE
	.cfi_endproc
                                        # -- End function
	.p2align	2                               # -- Begin function _ZN8internal12_GLOBAL__N_112TestReporter8FinalizeEv
	.type	_ZN8internal12_GLOBAL__N_112TestReporter8FinalizeEv,@function
_ZN8internal12_GLOBAL__N_112TestReporter8FinalizeEv: # @_ZN8internal12_GLOBAL__N_112TestReporter8FinalizeEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$fp, $a0, 24
	ld.d	$s0, $a0, 32
	beq	$fp, $s0, .LBB276_2
	.p2align	4, , 16
.LBB276_1:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 24
	jirl	$ra, $a1, 0
	addi.d	$fp, $fp, 8
	bne	$fp, $s0, .LBB276_1
.LBB276_2:                              # %._crit_edge
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end276:
	.size	_ZN8internal12_GLOBAL__N_112TestReporter8FinalizeEv, .Lfunc_end276-_ZN8internal12_GLOBAL__N_112TestReporter8FinalizeEv
	.cfi_endproc
                                        # -- End function
	.p2align	2                               # -- Begin function _ZN8internal12_GLOBAL__N_112TestReporterD0Ev
	.type	_ZN8internal12_GLOBAL__N_112TestReporterD0Ev,@function
_ZN8internal12_GLOBAL__N_112TestReporterD0Ev: # @_ZN8internal12_GLOBAL__N_112TestReporterD0Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 24
	pcalau12i	$a1, %pc_hi20(_ZTVN8internal12_GLOBAL__N_112TestReporterE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN8internal12_GLOBAL__N_112TestReporterE+16)
	st.d	$a1, $fp, 0
	beqz	$a0, .LBB277_2
# %bb.1:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB277_2:                              # %_ZN8internal12_GLOBAL__N_112TestReporterD2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN9benchmark17BenchmarkReporterD2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 48
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end277:
	.size	_ZN8internal12_GLOBAL__N_112TestReporterD0Ev, .Lfunc_end277-_ZN8internal12_GLOBAL__N_112TestReporterD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_,comdat
	.hidden	_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_ # -- Begin function _ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_
	.weak	_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_,@function
_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_: # @_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_
.Lfunc_begin125:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception125
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s4, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s6, $s4, $s0
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB278_15
# %bb.1:                                # %_ZNKSt6vectorI8TestCaseSaIS0_EE12_M_check_lenEmPKc.exit
	move	$s2, $a1
	srli.d	$a0, $s6, 3
	lu12i.w	$a1, -285976
	ori	$a1, $a1, 2979
	lu32i.d	$a1, -285976
	lu52i.d	$a1, $a1, 744
	mul.d	$a0, $a0, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	maskeqz	$a3, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a1, $a3, $a1
	add.d	$a0, $a1, $a0
	lu12i.w	$a1, 285975
	ori	$a1, $a1, 1117
	bstrins.d	$a1, $a1, 56, 30
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s5, $a0, $a1
	ori	$a0, $zero, 88
	mul.d	$s3, $s5, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	add.d	$a0, $a0, $s6
.Ltmp1889:                              # EH_LABEL
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN8TestCaseC2ERKS_)
	jirl	$ra, $ra, 0
.Ltmp1890:                              # EH_LABEL
# %bb.2:                                # %_ZNSt16allocator_traitsISaI8TestCaseEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_.exit
	move	$s2, $s1
	beq	$s0, $s4, .LBB278_12
# %bb.3:                                # %.lr.ph.i.i.i.preheader
	move	$s3, $zero
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	b	.LBB278_6
	.p2align	4, , 16
.LBB278_4:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i5.i.i.i.i.i
                                        #   in Loop: Header=BB278_6 Depth=1
	ld.d	$a2, $s2, 0
	ld.d	$s8, $s7, 48
	st.d	$a1, $s6, 40
	st.d	$a2, $a0, 0
.LBB278_5:                              # %_ZSt19__relocate_object_aI8TestCaseS0_SaIS0_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB278_6 Depth=1
	st.d	$s8, $s6, 48
	vld	$vr0, $s7, 72
	st.d	$s2, $s7, 40
	st.d	$zero, $s7, 48
	st.b	$zero, $s2, 0
	vst	$vr0, $s6, 72
	addi.d	$s3, $s3, 88
	add.d	$a0, $s0, $s3
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $s7, 72
	beq	$a0, $s4, .LBB278_11
.LBB278_6:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s1, $s3
	ldx.d	$a1, $s0, $s3
	add.d	$s7, $s0, $s3
	addi.d	$a0, $s6, 16
	addi.d	$s2, $s7, 16
	stx.d	$a0, $s1, $s3
	beq	$s2, $a1, .LBB278_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB278_6 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
	b	.LBB278_9
	.p2align	4, , 16
.LBB278_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB278_6 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB278_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB278_6 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s2, $s0, $s3
	ld.w	$a0, $s7, 32
	st.d	$zero, $s7, 8
	st.b	$zero, $s2, 0
	ld.d	$a1, $s7, 40
	st.w	$a0, $s6, 32
	addi.d	$a0, $s6, 56
	addi.d	$s2, $s7, 56
	st.d	$a0, $s6, 40
	bne	$s2, $a1, .LBB278_4
# %bb.10:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i6.i.i.i.i.i
                                        #   in Loop: Header=BB278_6 Depth=1
	ld.d	$s8, $s7, 48
	addi.d	$a2, $s8, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB278_5
.LBB278_11:                             # %_ZNSt6vectorI8TestCaseSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit.loopexit
	add.d	$s2, $s1, $s3
.LBB278_12:                             # %_ZNSt6vectorI8TestCaseSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit
	beqz	$s0, .LBB278_14
# %bb.13:                               # %_ZNSt12_Vector_baseI8TestCaseSaIS0_EE13_M_deallocateEPS0_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB278_14:                             # %_ZNSt6vectorI8TestCaseSaIS0_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 88
	st.d	$s1, $fp, 0
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 88
	mul.d	$a0, $s5, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB278_15:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB278_16:                             # %_ZNSt6vectorI8TestCaseSaIS0_EE12_Guard_allocD2Ev.exit22
.Ltmp1891:                              # EH_LABEL
	move	$fp, $a0
	move	$a0, $s1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end278:
	.size	_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_, .Lfunc_end278-_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorI8TestCaseSaIS0_EE17_M_realloc_appendIJRKS0_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table278:
.Lexception125:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end125-.Lcst_begin125
.Lcst_begin125:
	.uleb128 .Lfunc_begin125-.Lfunc_begin125 # >> Call Site 1 <<
	.uleb128 .Ltmp1889-.Lfunc_begin125      #   Call between .Lfunc_begin125 and .Ltmp1889
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1889-.Lfunc_begin125      # >> Call Site 2 <<
	.uleb128 .Ltmp1890-.Ltmp1889            #   Call between .Ltmp1889 and .Ltmp1890
	.uleb128 .Ltmp1891-.Lfunc_begin125      #     jumps to .Ltmp1891
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1890-.Lfunc_begin125      # >> Call Site 3 <<
	.uleb128 .Lfunc_end278-.Ltmp1890        #   Call between .Ltmp1890 and .Lfunc_end278
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end125:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8TestCaseC2ERKS_,"axG",@progbits,_ZN8TestCaseC2ERKS_,comdat
	.hidden	_ZN8TestCaseC2ERKS_             # -- Begin function _ZN8TestCaseC2ERKS_
	.weak	_ZN8TestCaseC2ERKS_
	.p2align	2
	.type	_ZN8TestCaseC2ERKS_,@function
_ZN8TestCaseC2ERKS_:                    # @_ZN8TestCaseC2ERKS_
.Lfunc_begin126:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception126
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	ld.d	$a1, $a1, 8
	ld.d	$s1, $s0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s4
	bltu	$a1, $a2, .LBB279_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB279_2:                              # %._crit_edge.i.i
	addi.w	$s5, $zero, -1
	beq	$a1, $s5, .LBB279_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB279_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB279_6
.LBB279_5:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB279_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 8
	st.d	$a0, $fp, 8
	ld.w	$a0, $s0, 32
	st.w	$a0, $fp, 32
	addi.d	$s1, $fp, 56
	st.d	$s1, $fp, 40
	ld.d	$a1, $s0, 48
	ld.d	$s2, $s0, 40
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a0, .LBB279_9
# %bb.7:                                # %.noexc.i7
.Ltmp1892:                              # EH_LABEL
	addi.d	$s3, $fp, 40
	addi.d	$a1, $sp, 8
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1893:                              # EH_LABEL
# %bb.8:                                # %.noexc
	ld.d	$a1, $sp, 8
	st.d	$a0, $s3, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB279_9:                              # %._crit_edge.i.i6
	beq	$a1, $s5, .LBB279_13
# %bb.10:                               # %._crit_edge.i.i6
	bnez	$a1, .LBB279_12
# %bb.11:
	ld.b	$a0, $s2, 0
	st.b	$a0, $s1, 0
	b	.LBB279_13
.LBB279_12:
	addi.d	$a2, $a1, 1
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB279_13:
	ld.d	$a0, $sp, 8
	st.d	$a0, $fp, 48
	ld.d	$a0, $s0, 80
	vld	$vr0, $s0, 72
	vst	$vr0, $fp, 72
	beqz	$a0, .LBB279_17
# %bb.14:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB279_16
# %bb.15:
	ld.w	$a1, $a0, 8
	addi.d	$a1, $a1, 1
	st.w	$a1, $a0, 8
	b	.LBB279_17
.LBB279_16:
	addi.d	$a0, $a0, 8
	ori	$a1, $zero, 1
	amadd_db.w	$a2, $a1, $a0
.LBB279_17:                             # %_ZNSt10shared_ptrIN9benchmark5RegexEEC2ERKS2_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB279_18:
.Ltmp1894:                              # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s4, .LBB279_20
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s4, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB279_20:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end279:
	.size	_ZN8TestCaseC2ERKS_, .Lfunc_end279-_ZN8TestCaseC2ERKS_
	.cfi_endproc
	.section	.gcc_except_table._ZN8TestCaseC2ERKS_,"aG",@progbits,_ZN8TestCaseC2ERKS_,comdat
	.p2align	2, 0x0
GCC_except_table279:
.Lexception126:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end126-.Lcst_begin126
.Lcst_begin126:
	.uleb128 .Lfunc_begin126-.Lfunc_begin126 # >> Call Site 1 <<
	.uleb128 .Ltmp1892-.Lfunc_begin126      #   Call between .Lfunc_begin126 and .Ltmp1892
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1892-.Lfunc_begin126      # >> Call Site 2 <<
	.uleb128 .Ltmp1893-.Ltmp1892            #   Call between .Ltmp1892 and .Ltmp1893
	.uleb128 .Ltmp1894-.Lfunc_begin126      #     jumps to .Ltmp1894
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1893-.Lfunc_begin126      # >> Call Site 3 <<
	.uleb128 .Lfunc_end279-.Ltmp1893        #   Call between .Ltmp1893 and .Lfunc_end279
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end126:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_,"axG",@progbits,_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_,comdat
	.hidden	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_ # -- Begin function _ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_
	.weak	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_
	.p2align	2
	.type	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_,@function
_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_: # @_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$s2, $a0, 8
	beq	$s2, $a1, .LBB280_15
# %bb.1:                                # %.lr.ph.i.preheader
	move	$fp, $a0
	move	$s0, $a1
	move	$s3, $zero
	ori	$s4, $zero, 1
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$s5, $a0, %got_pc_lo12(__libc_single_threaded)
	ori	$s6, $zero, 1
	lu32i.d	$s6, 1
	addi.w	$s7, $zero, -1
	b	.LBB280_3
	.p2align	4, , 16
.LBB280_2:                              # %_ZSt8_DestroyI8TestCaseEvPT_.exit.i
                                        #   in Loop: Header=BB280_3 Depth=1
	addi.d	$s3, $s3, 88
	add.d	$a0, $s0, $s3
	beq	$a0, $s2, .LBB280_14
.LBB280_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s8, $s0, $s3
	ld.d	$s1, $s8, 80
	beqz	$s1, .LBB280_8
# %bb.4:                                #   in Loop: Header=BB280_3 Depth=1
	ld.d	$a0, $s1, 8
	dbar	20
	bne	$a0, $s6, .LBB280_6
# %bb.5:                                #   in Loop: Header=BB280_3 Depth=1
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s8, 40
	addi.d	$a1, $s8, 56
	bne	$a1, $a0, .LBB280_9
	b	.LBB280_10
	.p2align	4, , 16
.LBB280_6:                              #   in Loop: Header=BB280_3 Depth=1
	ld.bu	$a1, $s5, 0
	beqz	$a1, .LBB280_12
# %bb.7:                                #   in Loop: Header=BB280_3 Depth=1
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	beq	$a0, $s4, .LBB280_13
	.p2align	4, , 16
.LBB280_8:                              # %_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB280_3 Depth=1
	ld.d	$a0, $s8, 40
	addi.d	$a1, $s8, 56
	beq	$a1, $a0, .LBB280_10
.LBB280_9:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB280_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB280_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB280_3 Depth=1
	ldx.d	$a0, $s0, $s3
	addi.d	$a1, $s8, 16
	beq	$a1, $a0, .LBB280_2
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
                                        #   in Loop: Header=BB280_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB280_2
.LBB280_12:                             #   in Loop: Header=BB280_3 Depth=1
	addi.d	$a1, $s1, 8
	amadd_db.w	$a0, $s7, $a1
	addi.w	$a0, $a0, 0
	bne	$a0, $s4, .LBB280_8
.LBB280_13:                             #   in Loop: Header=BB280_3 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s8, 40
	addi.d	$a1, $s8, 56
	bne	$a1, $a0, .LBB280_9
	b	.LBB280_10
.LBB280_14:                             # %_ZSt8_DestroyIP8TestCaseS0_EvT_S2_RSaIT0_E.exit
	st.d	$s0, $fp, 8
.LBB280_15:
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end280:
	.size	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_, .Lfunc_end280-_ZNSt6vectorI8TestCaseSaIS0_EE15_M_erase_at_endEPS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB281_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	b	.LBB281_3
	.p2align	4, , 16
.LBB281_2:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E.exit
                                        #   in Loop: Header=BB281_3 Depth=1
	ori	$a1, $zero, 64
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	beqz	$s1, .LBB281_5
.LBB281_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 32
	ld.d	$s1, $s0, 16
	addi.d	$a1, $s0, 48
	beq	$a0, $a1, .LBB281_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB281_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB281_2
.LBB281_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB281_6:                              # %._crit_edge
	ret
.Lfunc_end281:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E, .Lfunc_end281-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,comdat
	.hidden	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB282_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	b	.LBB282_3
	.p2align	4, , 16
.LBB282_2:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E.exit
                                        #   in Loop: Header=BB282_3 Depth=1
	ori	$a1, $zero, 80
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	beqz	$s1, .LBB282_5
.LBB282_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 32
	ld.d	$s1, $s0, 16
	addi.d	$a1, $s0, 48
	beq	$a0, $a1, .LBB282_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB282_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB282_2
.LBB282_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB282_6:                              # %._crit_edge
	ret
.Lfunc_end282:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E, .Lfunc_end282-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13random_deviceC2Ev,"axG",@progbits,_ZNSt13random_deviceC2Ev,comdat
	.hidden	_ZNSt13random_deviceC2Ev        # -- Begin function _ZNSt13random_deviceC2Ev
	.weak	_ZNSt13random_deviceC2Ev
	.p2align	2
	.type	_ZNSt13random_deviceC2Ev,@function
_ZNSt13random_deviceC2Ev:               # @_ZNSt13random_deviceC2Ev
.Lfunc_begin127:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception127
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a1, %pc_hi20(.L.str.295)
	addi.d	$a1, $a1, %pc_lo12(.L.str.295)
	ld.w	$a2, $a1, 0
	ld.w	$a1, $a1, 3
	addi.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	st.w	$a2, $sp, 24
	st.w	$a1, $sp, 27
	ori	$a1, $zero, 7
	st.d	$a1, $sp, 16
	st.b	$zero, $sp, 31
.Ltmp1895:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1896:                              # EH_LABEL
# %bb.1:
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB283_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB283_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB283_4:
.Ltmp1897:                              # EH_LABEL
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s0, .LBB283_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB283_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end283:
	.size	_ZNSt13random_deviceC2Ev, .Lfunc_end283-_ZNSt13random_deviceC2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt13random_deviceC2Ev,"aG",@progbits,_ZNSt13random_deviceC2Ev,comdat
	.p2align	2, 0x0
GCC_except_table283:
.Lexception127:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end127-.Lcst_begin127
.Lcst_begin127:
	.uleb128 .Ltmp1895-.Lfunc_begin127      # >> Call Site 1 <<
	.uleb128 .Ltmp1896-.Ltmp1895            #   Call between .Ltmp1895 and .Ltmp1896
	.uleb128 .Ltmp1897-.Lfunc_begin127      #     jumps to .Ltmp1897
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1896-.Lfunc_begin127      # >> Call Site 2 <<
	.uleb128 .Lfunc_end283-.Ltmp1896        #   Call between .Ltmp1896 and .Lfunc_end283
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end127:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE,"axG",@progbits,_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE,comdat
	.weak	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE # -- Begin function _ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE
	.p2align	2
	.type	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE,@function
_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE: # @_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 4
	ld.w	$a3, $fp, 0
	sub.d	$s2, $a2, $a3
	addi.w	$a2, $zero, -2
	lu32i.d	$a2, 0
	move	$s0, $a1
	bltu	$a2, $s2, .LBB284_5
# %bb.1:
	addi.w	$s4, $s2, 0
	addi.w	$s3, $s2, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv)
	jirl	$ra, $ra, 0
	bstrpick.d	$s1, $s3, 31, 0
	mul.d	$a0, $a0, $s1
	addi.w	$a1, $a0, 0
	bltu	$s4, $a1, .LBB284_4
# %bb.2:
	nor	$a2, $s2, $zero
	addi.w	$a2, $a2, 0
	mod.wu	$s2, $a2, $s3
	bgeu	$a1, $s2, .LBB284_4
	.p2align	4, , 16
.LBB284_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv)
	jirl	$ra, $ra, 0
	mul.d	$a0, $a0, $s1
	addi.w	$a1, $a0, 0
	bltu	$a1, $s2, .LBB284_3
.LBB284_4:                              # %_ZNSt24uniform_int_distributionIiE5_S_ndImSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEjEET1_RT0_S4_.exit
	srli.d	$a0, $a0, 32
	b	.LBB284_10
.LBB284_5:
	move	$s1, $a0
	addi.w	$a0, $zero, -1
	lu32i.d	$a0, 0
	bne	$s2, $a0, .LBB284_7
# %bb.6:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv)
	jirl	$ra, $ra, 0
	b	.LBB284_10
.LBB284_7:                              # %.preheader
	ori	$s3, $zero, 0
	lu32i.d	$s3, -1
	.p2align	4, , 16
.LBB284_8:                              # =>This Inner Loop Header: Depth=1
	st.d	$s3, $sp, 16
	addi.d	$a2, $sp, 16
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE)
	jirl	$ra, $ra, 0
	slli.d	$s4, $a0, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv)
	jirl	$ra, $ra, 0
	add.d	$a0, $s4, $a0
	bltu	$s2, $a0, .LBB284_8
# %bb.9:                                #   in Loop: Header=BB284_8 Depth=1
	sltu	$a1, $a0, $s4
	bnez	$a1, .LBB284_8
.LBB284_10:                             # %.loopexit
	ld.w	$a1, $fp, 0
	add.w	$a0, $a1, $a0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end284:
	.size	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE, .Lfunc_end284-_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv,"axG",@progbits,_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv,comdat
	.weak	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv # -- Begin function _ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv
	.p2align	2
	.type	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv,@function
_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv: # @_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv
	.cfi_startproc
# %bb.0:
	ldptr.d	$a2, $a0, 4992
	ori	$a1, $zero, 624
	bltu	$a2, $a1, .LBB285_6
# %bb.1:                                # %vector.ph
	ld.d	$a1, $a0, 0
	move	$a4, $zero
	xvinsgr2vr.d	$xr0, $a1, 3
	lu12i.w	$a2, -524288
	xvreplgr2vr.d	$xr1, $a2
	lu12i.w	$a1, 524287
	ori	$a3, $a1, 4094
	xvreplgr2vr.d	$xr2, $a3
	ori	$a5, $zero, 3176
	xvrepli.d	$xr3, 1
	xvrepli.b	$xr4, -1
	lu12i.w	$a1, -421749
	ori	$a1, $a1, 223
	lu32i.d	$a1, 0
	xvreplgr2vr.d	$xr5, $a1
	ori	$a6, $zero, 1792
	.p2align	4, , 16
.LBB285_2:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	xvori.b	$xr6, $xr0, 0
	add.d	$a7, $a0, $a4
	xvld	$xr0, $a7, 8
	xvpickve.d	$xr6, $xr6, 3
	xvinsve0.d	$xr6, $xr6, 0
	xvpickve.d	$xr7, $xr0, 0
	xvinsve0.d	$xr6, $xr7, 1
	xvpickve.d	$xr7, $xr0, 1
	xvinsve0.d	$xr6, $xr7, 2
	xvpickve.d	$xr7, $xr0, 2
	xvinsve0.d	$xr6, $xr7, 3
	xvand.v	$xr6, $xr6, $xr1
	xvldx	$xr7, $a7, $a5
	xvand.v	$xr8, $xr0, $xr2
	xvor.v	$xr6, $xr8, $xr6
	xvsrli.d	$xr6, $xr6, 1
	xvxor.v	$xr6, $xr6, $xr7
	xvand.v	$xr7, $xr0, $xr3
	xvseqi.d	$xr7, $xr7, 0
	xvxor.v	$xr7, $xr7, $xr4
	xvand.v	$xr7, $xr7, $xr5
	xvxor.v	$xr6, $xr6, $xr7
	xvstx	$xr6, $a0, $a4
	addi.d	$a4, $a4, 32
	bne	$a4, $a6, .LBB285_2
# %bb.3:                                # %vector.ph11
	ld.d	$a4, $a0, 1800
	xvpickve2gr.d	$a5, $xr0, 3
	ldptr.d	$a6, $a0, 4968
	and	$a7, $a4, $a3
	bstrins.d	$a5, $a7, 30, 0
	srli.d	$a5, $a5, 1
	xor	$a5, $a5, $a6
	andi	$a6, $a4, 1
	sub.d	$a6, $zero, $a6
	and	$a6, $a6, $a1
	ld.d	$a7, $a0, 1808
	xor	$a5, $a5, $a6
	st.d	$a5, $a0, 1792
	ldptr.d	$a5, $a0, 4976
	and	$a6, $a7, $a3
	bstrins.d	$a4, $a6, 30, 0
	srli.d	$a4, $a4, 1
	xor	$a4, $a4, $a5
	andi	$a5, $a7, 1
	sub.d	$a5, $zero, $a5
	and	$a5, $a5, $a1
	ld.d	$a6, $a0, 1816
	xor	$a4, $a4, $a5
	st.d	$a4, $a0, 1800
	ldptr.d	$a4, $a0, 4984
	and	$a5, $a6, $a3
	bstrins.d	$a7, $a5, 30, 0
	srli.d	$a5, $a7, 1
	xor	$a4, $a5, $a4
	andi	$a5, $a6, 1
	sub.d	$a5, $zero, $a5
	and	$a5, $a5, $a1
	xor	$a4, $a4, $a5
	st.d	$a4, $a0, 1808
	vinsgr2vr.d	$vr5, $a6, 1
	lu12i.w	$a4, -1
	ori	$a4, $a4, 928
	lu12i.w	$a6, 1
	ori	$a5, $a6, 896
	vreplgr2vr.d	$vr0, $a2
	vreplgr2vr.d	$vr1, $a3
	ori	$a2, $zero, 3168
	vrepli.d	$vr2, 1
	vrepli.b	$vr3, -1
	vreplgr2vr.d	$vr4, $a1
	ori	$a3, $a6, 888
	.p2align	4, , 16
.LBB285_4:                              # %vector.body12
                                        # =>This Inner Loop Header: Depth=1
	add.d	$a6, $a0, $a4
	vldx	$vr6, $a6, $a5
	vshuf4i.d	$vr5, $vr6, 9
	vand.v	$vr5, $vr5, $vr0
	vldx	$vr7, $a6, $a2
	vand.v	$vr8, $vr6, $vr1
	vor.v	$vr5, $vr8, $vr5
	vsrli.d	$vr5, $vr5, 1
	vxor.v	$vr5, $vr5, $vr7
	vand.v	$vr7, $vr6, $vr2
	vseqi.d	$vr7, $vr7, 0
	vxor.v	$vr7, $vr7, $vr3
	vand.v	$vr7, $vr7, $vr4
	vxor.v	$vr5, $vr5, $vr7
	addi.d	$a4, $a4, 16
	vstx	$vr5, $a6, $a3
	vori.b	$vr5, $vr6, 0
	bnez	$a4, .LBB285_4
# %bb.5:                                # %_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EE11_M_gen_randEv.exit
	ld.d	$a3, $a0, 0
	move	$a2, $zero
	ldptr.d	$a4, $a0, 4984
	bstrpick.d	$a5, $a3, 30, 1
	ldptr.d	$a6, $a0, 3168
	slli.d	$a5, $a5, 1
	bstrins.d	$a4, $a5, 30, 0
	srli.d	$a4, $a4, 1
	xor	$a4, $a4, $a6
	andi	$a3, $a3, 1
	sub.d	$a3, $zero, $a3
	and	$a1, $a3, $a1
	xor	$a1, $a4, $a1
	stptr.d	$a1, $a0, 4984
.LBB285_6:
	addi.d	$a1, $a2, 1
	stptr.d	$a1, $a0, 4992
	slli.d	$a1, $a2, 3
	ldx.d	$a0, $a0, $a1
	bstrpick.d	$a1, $a0, 42, 11
	xor	$a0, $a1, $a0
	slli.d	$a1, $a0, 7
	lu12i.w	$a2, -404795
	ori	$a2, $a2, 1664
	lu32i.d	$a2, 0
	and	$a1, $a1, $a2
	xor	$a0, $a1, $a0
	slli.d	$a1, $a0, 15
	lu12i.w	$a2, -66464
	lu32i.d	$a2, 0
	and	$a1, $a1, $a2
	xor	$a0, $a1, $a0
	srli.d	$a1, $a0, 18
	xor	$a0, $a1, $a0
	ret
.Lfunc_end285:
	.size	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv, .Lfunc_end285-_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_,"axG",@progbits,_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_,comdat
	.hidden	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_ # -- Begin function _ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_
	.weak	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_,@function
_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_: # @_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_
.Lfunc_begin128:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception128
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s1, $a0, 0
	sub.d	$s7, $s5, $s1
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB286_22
# %bb.1:                                # %_ZNKSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12_M_check_lenEmPKc.exit
	move	$s4, $a2
	move	$s3, $a1
	srli.d	$a0, $s7, 3
	lu12i.w	$a1, -69906
	ori	$a1, $a1, 3823
	lu32i.d	$a1, -69906
	lu52i.d	$a1, $a1, -274
	mul.d	$a0, $a0, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	maskeqz	$a3, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a1, $a3, $a1
	add.d	$a0, $a1, $a0
	lu12i.w	$a1, 69905
	ori	$a1, $a1, 273
	bstrins.d	$a1, $a1, 56, 32
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s6, $a0, $a1
	ori	$a0, $zero, 120
	mul.d	$s2, $s6, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s4, 16
	move	$fp, $a0
	xvrepli.b	$xr0, 0
	xvst	$xr0, $sp, 40
	beqz	$a3, .LBB286_4
# %bb.2:
.Ltmp1898:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	ori	$a2, $zero, 2
	move	$a1, $s4
	jirl	$ra, $a3, 0
.Ltmp1899:                              # EH_LABEL
# %bb.3:
	vld	$vr0, $s4, 16
	vst	$vr0, $sp, 56
.LBB286_4:                              # %.noexc
.Ltmp1904:                              # EH_LABEL
	add.d	$a0, $fp, $s7
	addi.d	$a2, $sp, 40
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE)
	jirl	$ra, $ra, 0
.Ltmp1905:                              # EH_LABEL
# %bb.5:                                # %_ZNSt15__new_allocatorIN8internal14ResultsChecker12PatternAndFnEE9constructIS2_JRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvPT_DpOT0_.exit
	ld.d	$a3, $sp, 56
	beqz	$a3, .LBB286_7
# %bb.6:
.Ltmp1910:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1911:                              # EH_LABEL
.LBB286_7:
	move	$s2, $fp
	beq	$s1, $s5, .LBB286_19
# %bb.8:                                # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	vrepli.b	$vr1, 0
	vst	$vr1, $sp, 16                   # 16-byte Folded Spill
	b	.LBB286_10
	.p2align	4, , 16
.LBB286_9:                              # %_ZSt19__relocate_object_aIN8internal14ResultsChecker12PatternAndFnES2_SaIS2_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB286_10 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN8internal14ResultsChecker12PatternAndFnD2Ev)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	addi.d	$s4, $s4, 120
	add.d	$a0, $s1, $s4
	beq	$a0, $s5, .LBB286_18
.LBB286_10:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s7, $fp, $s4
	ldx.d	$a1, $s1, $s4
	add.d	$s2, $s1, $s4
	addi.d	$a0, $s7, 16
	addi.d	$s3, $s2, 16
	stx.d	$a0, $fp, $s4
	beq	$s3, $a1, .LBB286_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB286_10 Depth=1
	ld.d	$a2, $s3, 0
	ld.d	$s8, $s2, 8
	stx.d	$a1, $fp, $s4
	st.d	$a2, $a0, 0
	b	.LBB286_13
	.p2align	4, , 16
.LBB286_12:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB286_10 Depth=1
	ld.d	$s8, $s2, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
.LBB286_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB286_10 Depth=1
	st.d	$s8, $s7, 8
	stx.d	$s3, $s1, $s4
	ld.w	$a0, $s2, 32
	st.d	$zero, $s2, 8
	st.b	$zero, $s3, 0
	ld.d	$a1, $s2, 40
	st.w	$a0, $s7, 32
	addi.d	$a0, $s7, 56
	addi.d	$s3, $s2, 56
	st.d	$a0, $s7, 40
	beq	$s3, $a1, .LBB286_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i5.i.i.i.i.i.i
                                        #   in Loop: Header=BB286_10 Depth=1
	ld.d	$a2, $s3, 0
	ld.d	$s8, $s2, 48
	st.d	$a1, $s7, 40
	st.d	$a2, $a0, 0
	b	.LBB286_16
	.p2align	4, , 16
.LBB286_15:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i6.i.i.i.i.i.i
                                        #   in Loop: Header=BB286_10 Depth=1
	ld.d	$s8, $s2, 48
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
.LBB286_16:                             # %_ZN8TestCaseC2EOS_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB286_10 Depth=1
	st.d	$s8, $s7, 48
	vld	$vr0, $s2, 72
	st.d	$s3, $s2, 40
	st.d	$zero, $s2, 48
	st.b	$zero, $s3, 0
	vst	$vr0, $s7, 72
	ld.d	$a1, $s2, 112
	ld.d	$a0, $s2, 104
	vst	$vr1, $s2, 72
	st.d	$zero, $s7, 88
	vst	$vr1, $s7, 96
	st.d	$a1, $s7, 112
	beqz	$a0, .LBB286_9
# %bb.17:                               #   in Loop: Header=BB286_10 Depth=1
	vld	$vr0, $s2, 88
	addi.d	$a1, $s7, 88
	addi.d	$a2, $s2, 104
	vst	$vr0, $a1, 0
	st.d	$a0, $s7, 104
	vst	$vr1, $a2, 0
	b	.LBB286_9
.LBB286_18:                             # %_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.loopexit
	add.d	$s2, $fp, $s4
.LBB286_19:                             # %_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit
	beqz	$s1, .LBB286_21
# %bb.20:                               # %_ZNSt12_Vector_baseIN8internal14ResultsChecker12PatternAndFnESaIS2_EE13_M_deallocateEPS2_m.exit.i
	ld.d	$a0, $s0, 16
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB286_21:                             # %_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 120
	st.d	$fp, $s0, 0
	st.d	$a0, $s0, 8
	ori	$a0, $zero, 120
	mul.d	$a0, $s6, $a0
	add.d	$a0, $fp, $a0
	st.d	$a0, $s0, 16
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB286_22:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB286_23:
.Ltmp1912:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB286_24:
.Ltmp1900:                              # EH_LABEL
	ld.d	$a3, $sp, 56
	move	$s0, $a0
	beqz	$a3, .LBB286_29
# %bb.25:
.Ltmp1901:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1902:                              # EH_LABEL
	b	.LBB286_29
.LBB286_26:
.Ltmp1903:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB286_27:
.Ltmp1906:                              # EH_LABEL
	ld.d	$a3, $sp, 56
	move	$s0, $a0
	beqz	$a3, .LBB286_29
# %bb.28:
.Ltmp1907:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp1908:                              # EH_LABEL
.LBB286_29:                             # %_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE12_Guard_allocD2Ev.exit28
	move	$a0, $fp
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB286_30:
.Ltmp1909:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end286:
	.size	_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_, .Lfunc_end286-_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_,"aG",@progbits,_ZNSt6vectorIN8internal14ResultsChecker12PatternAndFnESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt8functionIFvRK7ResultsEEEEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table286:
.Lexception128:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase54-.Lttbaseref54
.Lttbaseref54:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end128-.Lcst_begin128
.Lcst_begin128:
	.uleb128 .Lfunc_begin128-.Lfunc_begin128 # >> Call Site 1 <<
	.uleb128 .Ltmp1898-.Lfunc_begin128      #   Call between .Lfunc_begin128 and .Ltmp1898
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1898-.Lfunc_begin128      # >> Call Site 2 <<
	.uleb128 .Ltmp1899-.Ltmp1898            #   Call between .Ltmp1898 and .Ltmp1899
	.uleb128 .Ltmp1900-.Lfunc_begin128      #     jumps to .Ltmp1900
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1904-.Lfunc_begin128      # >> Call Site 3 <<
	.uleb128 .Ltmp1905-.Ltmp1904            #   Call between .Ltmp1904 and .Ltmp1905
	.uleb128 .Ltmp1906-.Lfunc_begin128      #     jumps to .Ltmp1906
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1910-.Lfunc_begin128      # >> Call Site 4 <<
	.uleb128 .Ltmp1911-.Ltmp1910            #   Call between .Ltmp1910 and .Ltmp1911
	.uleb128 .Ltmp1912-.Lfunc_begin128      #     jumps to .Ltmp1912
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1911-.Lfunc_begin128      # >> Call Site 5 <<
	.uleb128 .Ltmp1901-.Ltmp1911            #   Call between .Ltmp1911 and .Ltmp1901
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1901-.Lfunc_begin128      # >> Call Site 6 <<
	.uleb128 .Ltmp1902-.Ltmp1901            #   Call between .Ltmp1901 and .Ltmp1902
	.uleb128 .Ltmp1903-.Lfunc_begin128      #     jumps to .Ltmp1903
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1902-.Lfunc_begin128      # >> Call Site 7 <<
	.uleb128 .Ltmp1907-.Ltmp1902            #   Call between .Ltmp1902 and .Ltmp1907
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1907-.Lfunc_begin128      # >> Call Site 8 <<
	.uleb128 .Ltmp1908-.Ltmp1907            #   Call between .Ltmp1907 and .Ltmp1908
	.uleb128 .Ltmp1909-.Lfunc_begin128      #     jumps to .Ltmp1909
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1908-.Lfunc_begin128      # >> Call Site 9 <<
	.uleb128 .Lfunc_end286-.Ltmp1908        #   Call between .Ltmp1908 and .Lfunc_end286
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end128:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase54:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE,"axG",@progbits,_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE,comdat
	.hidden	_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE # -- Begin function _ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE
	.weak	_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE
	.p2align	2
	.type	_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE,@function
_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE: # @_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE
.Lfunc_begin129:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception129
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a0
	addi.d	$s2, $sp, 32
	ld.d	$a2, $a1, 8
	ld.d	$s1, $a1, 0
	st.d	$s2, $sp, 16
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 48
	move	$a0, $s2
	bltu	$a2, $a1, .LBB287_2
# %bb.1:                                # %.noexc.i
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a2, $sp, 32
.LBB287_2:                              # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB287_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a2, .LBB287_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB287_6
.LBB287_5:
	addi.d	$a2, $a2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB287_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 24
.Ltmp1913:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi)
	jirl	$ra, $ra, 0
.Ltmp1914:                              # EH_LABEL
# %bb.7:
	ld.d	$a0, $sp, 16
	beq	$a0, $s2, .LBB287_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB287_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	st.d	$zero, $s0, 104
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 88
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 16
	st.d	$a0, $s0, 112
	beqz	$a1, .LBB287_11
# %bb.10:
	vld	$vr1, $fp, 0
	addi.d	$a0, $s0, 88
	vst	$vr1, $a0, 0
	ld.d	$a0, $fp, 16
	addi.d	$a1, $fp, 16
	st.d	$a0, $s0, 104
	vst	$vr0, $a1, 0
.LBB287_11:                             # %_ZNSt8functionIFvRK7ResultsEEC2EOS4_.exit
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB287_12:
.Ltmp1915:                              # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s2, .LBB287_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i3
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB287_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit5
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end287:
	.size	_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE, .Lfunc_end287-_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE,"aG",@progbits,_ZN8internal14ResultsChecker12PatternAndFnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt8functionIFvRK7ResultsEE,comdat
	.p2align	2, 0x0
GCC_except_table287:
.Lexception129:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end129-.Lcst_begin129
.Lcst_begin129:
	.uleb128 .Lfunc_begin129-.Lfunc_begin129 # >> Call Site 1 <<
	.uleb128 .Ltmp1913-.Lfunc_begin129      #   Call between .Lfunc_begin129 and .Ltmp1913
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1913-.Lfunc_begin129      # >> Call Site 2 <<
	.uleb128 .Ltmp1914-.Ltmp1913            #   Call between .Ltmp1913 and .Ltmp1914
	.uleb128 .Ltmp1915-.Lfunc_begin129      #     jumps to .Ltmp1915
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1914-.Lfunc_begin129      # >> Call Site 3 <<
	.uleb128 .Lfunc_end287-.Ltmp1914        #   Call between .Ltmp1914 and .Lfunc_end287
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end129:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_,"axG",@progbits,_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_,comdat
	.hidden	_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_ # -- Begin function _ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_
	.weak	_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_,@function
_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_: # @_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_
.Lfunc_begin130:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception130
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -48
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB288_21
# %bb.1:                                # %_ZNKSt6vectorI7ResultsSaIS0_EE12_M_check_lenEmPKc.exit
	move	$s3, $a1
	srli.d	$a0, $s7, 4
	lu12i.w	$a1, -209716
	ori	$a1, $a1, 3277
	lu32i.d	$a1, -209716
	lu52i.d	$a1, $a1, -820
	mul.d	$a0, $a0, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	maskeqz	$a3, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a1, $a3, $a1
	add.d	$a0, $a1, $a0
	lu12i.w	$a1, -419431
	ori	$a1, $a1, 2457
	lu32i.d	$a1, -419431
	lu52i.d	$a1, $a1, 25
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s6, $a0, $a1
	slli.d	$a0, $s6, 6
	alsl.d	$s4, $s6, $a0, 4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	add.d	$s2, $a0, $s7
	addi.d	$a0, $s2, 16
	ld.d	$a1, $s3, 8
	ld.d	$s3, $s3, 0
	stx.d	$a0, $s1, $s7
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 16
	bltu	$a1, $a2, .LBB288_4
# %bb.2:                                # %.noexc.i.i
.Ltmp1916:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1917:                              # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a1, $sp, 16
	st.d	$a0, $s2, 0
	st.d	$a1, $s2, 16
.LBB288_4:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB288_8
# %bb.5:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB288_7
# %bb.6:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB288_8
.LBB288_7:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB288_8:
	ld.d	$a0, $sp, 16
	st.d	$a0, $s2, 8
	addi.d	$a0, $s2, 40
	st.w	$zero, $s2, 40
	st.d	$zero, $s2, 48
	st.d	$a0, $s2, 56
	st.d	$a0, $s2, 64
	st.d	$zero, $s2, 72
	move	$s2, $s1
	beq	$s0, $s5, .LBB288_18
# %bb.9:                                # %.lr.ph.i.i.i.preheader
	move	$s3, $zero
	b	.LBB288_12
	.p2align	4, , 16
.LBB288_10:                             #   in Loop: Header=BB288_12 Depth=1
	move	$a2, $zero
	move	$a1, $zero
	st.d	$zero, $s4, 48
	move	$a3, $a0
	move	$a4, $a0
.LBB288_11:                             # %_ZSt19__relocate_object_aI7ResultsS0_SaIS0_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB288_12 Depth=1
	st.d	$a3, $s4, 56
	st.d	$a4, $s4, 64
	st.d	$a2, $s4, 72
	addi.d	$s3, $s3, 80
	add.d	$a2, $s0, $s3
	st.w	$a1, $a0, 0
	beq	$a2, $s5, .LBB288_17
.LBB288_12:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s7, $s0, $s3
	ldx.d	$a1, $s0, $s3
	add.d	$s4, $s1, $s3
	addi.d	$a0, $s4, 16
	addi.d	$s2, $s7, 16
	stx.d	$a0, $s1, $s3
	beq	$s2, $a1, .LBB288_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB288_12 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s4, 0
	st.d	$a0, $s4, 16
	b	.LBB288_15
	.p2align	4, , 16
.LBB288_14:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB288_12 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB288_15:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB288_12 Depth=1
	st.d	$s8, $s4, 8
	ld.d	$a2, $s7, 48
	stx.d	$s2, $s0, $s3
	st.d	$zero, $s7, 8
	st.b	$zero, $s2, 0
	addi.d	$a0, $s4, 40
	beqz	$a2, .LBB288_10
# %bb.16:                               #   in Loop: Header=BB288_12 Depth=1
	addi.d	$a5, $s7, 40
	ld.w	$a1, $s7, 40
	st.d	$a2, $s4, 48
	ld.d	$a3, $s7, 56
	ld.d	$a4, $s7, 64
	st.d	$a0, $a2, 8
	ld.d	$a2, $s7, 72
	st.d	$zero, $s7, 48
	st.d	$a5, $s7, 56
	st.d	$a5, $s7, 64
	st.d	$zero, $s7, 72
	b	.LBB288_11
.LBB288_17:                             # %_ZNSt6vectorI7ResultsSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit.loopexit
	add.d	$s2, $s1, $s3
.LBB288_18:                             # %_ZNSt6vectorI7ResultsSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit
	beqz	$s0, .LBB288_20
# %bb.19:                               # %_ZNSt12_Vector_baseI7ResultsSaIS0_EE13_M_deallocateEPS0_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB288_20:                             # %_ZNSt6vectorI7ResultsSaIS0_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 80
	st.d	$s1, $fp, 0
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 80
	mul.d	$a0, $s6, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB288_21:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB288_22:                             # %_ZNSt6vectorI7ResultsSaIS0_EE12_Guard_allocD2Ev.exit22
.Ltmp1918:                              # EH_LABEL
	move	$fp, $a0
	move	$a0, $s1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end288:
	.size	_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_, .Lfunc_end288-_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_,"aG",@progbits,_ZNSt6vectorI7ResultsSaIS0_EE17_M_realloc_appendIJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table288:
.Lexception130:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end130-.Lcst_begin130
.Lcst_begin130:
	.uleb128 .Lfunc_begin130-.Lfunc_begin130 # >> Call Site 1 <<
	.uleb128 .Ltmp1916-.Lfunc_begin130      #   Call between .Lfunc_begin130 and .Ltmp1916
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1916-.Lfunc_begin130      # >> Call Site 2 <<
	.uleb128 .Ltmp1917-.Ltmp1916            #   Call between .Ltmp1916 and .Ltmp1917
	.uleb128 .Ltmp1918-.Lfunc_begin130      #     jumps to .Ltmp1918
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1917-.Lfunc_begin130      # >> Call Site 3 <<
	.uleb128 .Lfunc_end288-.Ltmp1917        #   Call between .Ltmp1917 and .Lfunc_end288
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end130:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_
.Lfunc_begin131:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception131
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s1, $a4
	move	$s2, $a3
	move	$s3, $a2
	move	$s4, $a1
	move	$s0, $a0
	st.d	$a0, $sp, 8
	ori	$a0, $zero, 96
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s3
	move	$a3, $s2
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_)
	jirl	$ra, $ra, 0
	st.d	$fp, $sp, 16
	addi.d	$s2, $fp, 32
.Ltmp1919:                              # EH_LABEL
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_)
	jirl	$ra, $ra, 0
.Ltmp1920:                              # EH_LABEL
# %bb.1:
	move	$a2, $a0
	move	$s1, $a1
	beqz	$a1, .LBB289_9
# %bb.2:
	addi.d	$a3, $s0, 8
	ori	$a0, $zero, 1
	bnez	$a2, .LBB289_8
# %bb.3:
	beq	$a3, $s1, .LBB289_8
# %bb.4:
	ld.d	$s3, $fp, 40
	ld.d	$s4, $s1, 40
	sltu	$a0, $s4, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB289_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s2, 0
	move	$s2, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a3, $s2
	bnez	$a0, .LBB289_7
.LBB289_6:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s3, $s4
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB289_7:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
.LBB289_8:                              # %.thread
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 40
	move	$a0, $fp
	b	.LBB289_14
.LBB289_9:
	move	$s0, $a2
	ld.d	$a0, $fp, 64
	addi.d	$a1, $fp, 80
	beq	$a0, $a1, .LBB289_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB289_11:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB289_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB289_13:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E.exit.i
	ori	$a1, $zero, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
.LBB289_14:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB289_15:
.Ltmp1921:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end289:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_, .Lfunc_end289-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table289:
.Lexception131:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end131-.Lcst_begin131
.Lcst_begin131:
	.uleb128 .Lfunc_begin131-.Lfunc_begin131 # >> Call Site 1 <<
	.uleb128 .Ltmp1919-.Lfunc_begin131      #   Call between .Lfunc_begin131 and .Ltmp1919
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1919-.Lfunc_begin131      # >> Call Site 2 <<
	.uleb128 .Ltmp1920-.Ltmp1919            #   Call between .Ltmp1919 and .Ltmp1920
	.uleb128 .Ltmp1921-.Lfunc_begin131      #     jumps to .Ltmp1921
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1920-.Lfunc_begin131      # >> Call Site 3 <<
	.uleb128 .Lfunc_end289-.Ltmp1920        #   Call between .Ltmp1920 and .Lfunc_end289
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end131:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	addi.d	$a0, $a0, 8
	move	$s0, $a2
	beq	$a0, $a1, .LBB290_4
# %bb.1:
	move	$fp, $a1
	ld.d	$s5, $s0, 8
	ld.d	$s6, $a1, 40
	sltu	$a0, $s6, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s6, $a0
	or	$s2, $a0, $a1
	beqz	$s2, .LBB290_10
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i22
	ld.d	$s3, $fp, 32
	ld.d	$s4, $s0, 0
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB290_11
# %bb.3:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread
	addi.w	$a1, $zero, -1
	bge	$a1, $a0, .LBB290_12
	b	.LBB290_18
.LBB290_4:
	ld.d	$a0, $s1, 40
	beqz	$a0, .LBB290_28
# %bb.5:
	ld.d	$a1, $s1, 32
	ld.d	$fp, $a1, 40
	ld.d	$s2, $s0, 8
	sltu	$a0, $s2, $fp
	masknez	$a2, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a2
	beqz	$a2, .LBB290_7
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a3, $s0, 0
	ld.d	$a0, $a1, 32
	move	$s3, $a1
	move	$a1, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	bnez	$a0, .LBB290_8
.LBB290_7:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $fp, $s2
	lu12i.w	$a2, -524288
	slt	$a3, $a2, $a0
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
	lu12i.w	$a2, 524287
	ori	$a2, $a2, 4095
	slt	$a3, $a0, $a2
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
.LBB290_8:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB290_28
# %bb.9:
	move	$fp, $zero
	b	.LBB290_29
.LBB290_10:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29
	bltu	$s5, $s6, .LBB290_12
	b	.LBB290_19
.LBB290_11:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread81
	bgeu	$s5, $s6, .LBB290_18
.LBB290_12:
	ld.d	$a0, $s1, 24
	beq	$a0, $fp, .LBB290_22
# %bb.13:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s5, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB290_15
# %bb.14:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i31
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB290_16
.LBB290_15:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i34
	sub.d	$a0, $s3, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB290_16:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit38
	addi.w	$a0, $a0, 0
	addi.w	$a1, $zero, -1
	blt	$a1, $a0, .LBB290_28
# %bb.17:
	ld.d	$a0, $s2, 24
	sltui	$a0, $a0, 1
	masknez	$fp, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a1, $a0, $fp
	b	.LBB290_29
.LBB290_18:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i40
	move	$a0, $s3
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB290_20
.LBB290_19:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i43
	sub.d	$a0, $s6, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB290_20:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit47
	addi.w	$a0, $a0, 0
	addi.w	$s3, $zero, -1
	bge	$s3, $a0, .LBB290_23
# %bb.21:
	move	$a1, $zero
	b	.LBB290_29
.LBB290_22:
	move	$a1, $fp
	b	.LBB290_29
.LBB290_23:
	ld.d	$a0, $s1, 32
	beq	$a0, $fp, .LBB290_30
# %bb.24:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s4, $a0, 40
	sltu	$a0, $s4, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB290_26
# %bb.25:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i49
	ld.d	$a1, $s2, 32
	ld.d	$a0, $s0, 0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB290_27
.LBB290_26:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i52
	sub.d	$a0, $s5, $s4
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB290_27:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit56
	addi.w	$a0, $a0, 0
	bge	$s3, $a0, .LBB290_31
.LBB290_28:
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.LBB290_29:
	move	$a0, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB290_30:
	move	$a1, $fp
	move	$fp, $zero
	b	.LBB290_29
.LBB290_31:
	ld.d	$a0, $fp, 24
	sltui	$a0, $a0, 1
	maskeqz	$a1, $fp, $a0
	masknez	$fp, $s2, $a0
	or	$a1, $a1, $fp
	b	.LBB290_29
.Lfunc_end290:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_, .Lfunc_end290-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev,comdat
	.hidden	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB291_6
# %bb.1:
	ld.d	$a0, $fp, 64
	addi.d	$a1, $fp, 80
	beq	$a0, $a1, .LBB291_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB291_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB291_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB291_5:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E.exit
	ori	$a1, $zero, 96
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB291_6:
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end291:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev, .Lfunc_end291-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_,comdat
	.hidden	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_
.Lfunc_begin132:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception132
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$a0, $a3, 0
	move	$fp, $a1
	addi.d	$s0, $a1, 48
	st.d	$s0, $a1, 32
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a0, .LBB292_3
# %bb.1:                                # %.noexc.i.i.i
.Ltmp1922:                              # EH_LABEL
	addi.d	$s2, $fp, 32
	addi.d	$a1, $sp, 0
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1923:                              # EH_LABEL
# %bb.2:                                # %.noexc
	ld.d	$a1, $sp, 0
	st.d	$a0, $s2, 0
	st.d	$a1, $s0, 0
	move	$s0, $a0
.LBB292_3:                              # %._crit_edge.i.i.i.i
	addi.w	$a0, $zero, -1
	beq	$a1, $a0, .LBB292_7
# %bb.4:                                # %._crit_edge.i.i.i.i
	bnez	$a1, .LBB292_6
# %bb.5:
	ld.b	$a0, $s1, 0
	st.b	$a0, $s0, 0
	b	.LBB292_7
.LBB292_6:
	addi.d	$a2, $a1, 1
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB292_7:
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 40
	addi.d	$a0, $fp, 80
	st.d	$a0, $fp, 64
	st.d	$zero, $fp, 72
	st.b	$zero, $fp, 80
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB292_8:
.Ltmp1924:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp1925:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1926:                              # EH_LABEL
# %bb.9:
.LBB292_10:
.Ltmp1927:                              # EH_LABEL
	move	$fp, $a0
.Ltmp1928:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1929:                              # EH_LABEL
# %bb.11:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB292_12:
.Ltmp1930:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end292:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_, .Lfunc_end292-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table292:
.Lexception132:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase55-.Lttbaseref55
.Lttbaseref55:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end132-.Lcst_begin132
.Lcst_begin132:
	.uleb128 .Ltmp1922-.Lfunc_begin132      # >> Call Site 1 <<
	.uleb128 .Ltmp1923-.Ltmp1922            #   Call between .Ltmp1922 and .Ltmp1923
	.uleb128 .Ltmp1924-.Lfunc_begin132      #     jumps to .Ltmp1924
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1923-.Lfunc_begin132      # >> Call Site 2 <<
	.uleb128 .Ltmp1925-.Ltmp1923            #   Call between .Ltmp1923 and .Ltmp1925
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1925-.Lfunc_begin132      # >> Call Site 3 <<
	.uleb128 .Ltmp1926-.Ltmp1925            #   Call between .Ltmp1925 and .Ltmp1926
	.uleb128 .Ltmp1927-.Lfunc_begin132      #     jumps to .Ltmp1927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1928-.Lfunc_begin132      # >> Call Site 4 <<
	.uleb128 .Ltmp1929-.Ltmp1928            #   Call between .Ltmp1928 and .Ltmp1929
	.uleb128 .Ltmp1930-.Lfunc_begin132      #     jumps to .Ltmp1930
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1929-.Lfunc_begin132      # >> Call Site 5 <<
	.uleb128 .Lfunc_end292-.Ltmp1929        #   Call between .Ltmp1929 and .Lfunc_end292
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end132:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase55:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_
	.p2align	2
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	lu12i.w	$s4, -524288
	lu12i.w	$s3, 524287
	beqz	$a0, .LBB293_13
# %bb.1:                                # %.lr.ph
	ld.d	$s5, $s0, 8
	ld.d	$s2, $s0, 0
	ori	$s6, $s3, 4095
	ori	$s7, $zero, 24
	ori	$s8, $zero, 16
	b	.LBB293_4
	.p2align	4, , 16
.LBB293_2:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB293_4 Depth=1
	sub.d	$a0, $s5, $s3
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB293_3:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
                                        #   in Loop: Header=BB293_4 Depth=1
	addi.w	$a1, $a0, 0
	slti	$a0, $a1, 0
	masknez	$a2, $s7, $a0
	maskeqz	$a0, $s8, $a0
	or	$a0, $a0, $a2
	ldx.d	$a0, $fp, $a0
	beqz	$a0, .LBB293_6
.LBB293_4:                              # =>This Inner Loop Header: Depth=1
	move	$fp, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB293_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB293_4 Depth=1
	ld.d	$a1, $fp, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB293_3
	b	.LBB293_2
.LBB293_6:                              # %._crit_edge
	addi.w	$a0, $zero, -1
	move	$s2, $fp
	lu12i.w	$s3, 524287
	blt	$a0, $a1, .LBB293_9
# %bb.7:                                # %._crit_edge.thread
	ld.d	$a0, $s1, 24
	beq	$fp, $a0, .LBB293_14
.LBB293_8:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
.LBB293_9:
	ld.d	$s1, $s2, 40
	ld.d	$s5, $s0, 8
	sltu	$a0, $s5, $s1
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB293_11
# %bb.10:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i6
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB293_12
.LBB293_11:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i9
	sub.d	$a0, $s1, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	ori	$a1, $s3, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB293_12:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit13
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
	srai.d	$a0, $a0, 63
	and	$fp, $a0, $fp
	masknez	$a0, $s2, $a1
	b	.LBB293_15
.LBB293_13:
	addi.d	$fp, $s1, 8
	ld.d	$a0, $s1, 24
	bne	$fp, $a0, .LBB293_8
.LBB293_14:
	move	$a0, $zero
.LBB293_15:
	move	$a1, $fp
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end293:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, .Lfunc_end293-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s6, $s5, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB294_14
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	move	$s3, $a1
	srai.d	$a0, $s6, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$a1, $s3, 0
	add.d	$s7, $a0, $s6
	addi.d	$a0, $s7, 16
	addi.d	$s4, $s3, 16
	stx.d	$a0, $s2, $s6
	beq	$a1, $s4, .LBB294_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a0, $s3, 16
	ld.d	$s6, $s3, 8
	st.d	$a1, $s7, 0
	st.d	$a0, $s7, 16
	b	.LBB294_4
.LBB294_3:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$s6, $s3, 8
	addi.d	$a2, $s6, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB294_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	st.d	$s6, $s7, 8
	st.d	$s4, $s3, 0
	st.d	$zero, $s3, 8
	st.b	$zero, $s3, 16
	move	$s3, $s2
	beq	$s0, $s5, .LBB294_11
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB294_8
	.p2align	4, , 16
.LBB294_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB294_8 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB294_7:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB294_8 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	addi.d	$s4, $s4, 32
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB294_10
.LBB294_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	bne	$s3, $a1, .LBB294_6
# %bb.9:                                # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB294_8 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB294_7
.LBB294_10:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	add.d	$s3, $s2, $s4
.LBB294_11:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	beqz	$s0, .LBB294_13
# %bb.12:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB294_13:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB294_14:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end294:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_, .Lfunc_end294-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.hidden	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	2
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
# %bb.0:
	ret
.Lfunc_end295:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end295-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end296:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end296-_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$fp, $a0, 48
	beqz	$fp, .LBB297_6
# %bb.1:
	ld.d	$a1, $fp, 8
	ori	$a2, $zero, 1
	lu32i.d	$a2, 1
	dbar	20
	bne	$a1, $a2, .LBB297_4
# %bb.2:
	ld.d	$a1, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a1, 16
	move	$s0, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	jirl	$ra, $a1, 0
.LBB297_3:                              # %_ZSt8_DestroyIN9benchmark5RegexEEvPT_.exit
	move	$a0, $s0
	b	.LBB297_6
.LBB297_4:
	pcalau12i	$a2, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a2, $a2, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a2, $a2, 0
	beqz	$a2, .LBB297_7
# %bb.5:
	addi.d	$a2, $a1, -1
	st.w	$a2, $fp, 8
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB297_8
.LBB297_6:                              # %_ZSt8_DestroyIN9benchmark5RegexEEvPT_.exit
	addi.d	$a0, $a0, 32
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZNSt6localeD1Ev)
	jr	$t8
.LBB297_7:
	addi.d	$a2, $fp, 8
	addi.w	$a3, $zero, -1
	amadd_db.w	$a1, $a3, $a2
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB297_6
.LBB297_8:
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB297_3
.Lfunc_end297:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end297-_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end298:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end298-_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	2
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag)
	addi.d	$a2, $a2, %pc_lo12(_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag)
	beq	$a1, $a2, .LBB299_6
# %bb.1:
	ld.d	$a2, $a1, 8
	pcalau12i	$a1, %pc_hi20(_ZTSSt19_Sp_make_shared_tag)
	addi.d	$a1, $a1, %pc_lo12(_ZTSSt19_Sp_make_shared_tag)
	beq	$a2, $a1, .LBB299_6
# %bb.2:
	ld.bu	$a1, $a2, 0
	ori	$a3, $zero, 42
	bne	$a1, $a3, .LBB299_4
# %bb.3:
	move	$a0, $zero
	ret
.LBB299_4:                              # %_ZNKSt9type_infoeqERKS_.exit
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTSSt19_Sp_make_shared_tag)
	addi.d	$a1, $a1, %pc_lo12(_ZTSSt19_Sp_make_shared_tag)
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	beqz	$a1, .LBB299_6
# %bb.5:
	move	$a0, $zero
	ret
.LBB299_6:                              # %_ZNKSt9type_infoeqERKS_.exit.thread
	addi.d	$a0, $a0, 16
	ret
.Lfunc_end299:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end299-_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
                                        # -- End function
	.section	.text._ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag,"axG",@progbits,_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag,comdat
	.hidden	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag # -- Begin function _ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag
	.weak	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag
	.p2align	2
	.type	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag,@function
_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag: # @_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag
.Lfunc_begin133:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception133
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a3, $sp, 40                    # 8-byte Folded Spill
	beq	$a2, $a3, .LBB300_86
# %bb.1:
	move	$s1, $a2
	move	$s0, $a1
	move	$s2, $a0
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	sub.d	$s4, $a0, $a2
	srai.d	$a1, $s4, 3
	lu12i.w	$a0, -285976
	ld.d	$a2, $s2, 16
	ld.d	$s8, $s2, 8
	ori	$a0, $a0, 2979
	lu32i.d	$a0, -285976
	lu52i.d	$a0, $a0, 744
	sub.d	$a2, $a2, $s8
	mul.d	$s6, $a1, $a0
	st.d	$s2, $sp, 32                    # 8-byte Folded Spill
	bgeu	$a2, $s4, .LBB300_12
# %bb.2:
	ld.d	$fp, $s2, 0
	sub.d	$a1, $s8, $fp
	srli.d	$a1, $a1, 3
	mul.d	$a1, $a1, $a0
	lu12i.w	$a0, 285975
	ori	$a0, $a0, 1117
	bstrins.d	$a0, $a0, 56, 30
	sub.d	$a2, $a0, $a1
	bltu	$a2, $s6, .LBB300_102
# %bb.3:                                # %_ZNSt12_Vector_baseI8TestCaseSaIS0_EE11_M_allocateEm.exit
	sltu	$a2, $s6, $a1
	masknez	$a3, $s6, $a2
	maskeqz	$a2, $a1, $a2
	or	$a2, $a2, $a3
	add.d	$a1, $a2, $a1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$a1, $a1, $a0
	ori	$a0, $zero, 88
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	mul.d	$a0, $a1, $a0
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$s7, $a0
	beq	$fp, $s0, .LBB300_22
# %bb.4:                                # %.lr.ph.i.i.i.i91.preheader
	move	$s4, $zero
	b	.LBB300_7
	.p2align	4, , 16
.LBB300_5:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i5.i.i.i.i.i.i96
                                        #   in Loop: Header=BB300_7 Depth=1
	st.d	$a1, $s7, 40
	ld.d	$a1, $s6, 0
	st.d	$a1, $a0, 0
.LBB300_6:                              # %_ZSt10_ConstructI8TestCaseJS0_EEvPT_DpOT0_.exit.i.i.i.i97
                                        #   in Loop: Header=BB300_7 Depth=1
	ld.d	$a0, $s5, 48
	st.d	$a0, $s7, 48
	st.d	$s6, $s5, 40
	vld	$vr0, $s5, 72
	st.d	$zero, $s5, 48
	st.b	$zero, $s6, 0
	st.d	$zero, $s5, 80
	vst	$vr0, $s7, 72
	addi.d	$s4, $s4, 88
	add.d	$a0, $fp, $s4
	st.d	$zero, $s5, 72
	beq	$a0, $s0, .LBB300_21
.LBB300_7:                              # %.lr.ph.i.i.i.i91
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s7, $s3, $s4
	addi.d	$a0, $s7, 16
	stx.d	$a0, $s3, $s4
	ldx.d	$a1, $fp, $s4
	add.d	$s5, $fp, $s4
	addi.d	$s6, $s5, 16
	beq	$s6, $a1, .LBB300_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i94
                                        #   in Loop: Header=BB300_7 Depth=1
	stx.d	$a1, $s3, $s4
	ld.d	$a1, $s6, 0
	st.d	$a1, $a0, 0
	b	.LBB300_10
	.p2align	4, , 16
.LBB300_9:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i.i101
                                        #   in Loop: Header=BB300_7 Depth=1
	ld.d	$a1, $s5, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB300_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i.i95
                                        #   in Loop: Header=BB300_7 Depth=1
	ld.d	$a0, $s5, 8
	st.d	$a0, $s7, 8
	ld.w	$a0, $s5, 32
	stx.d	$s6, $fp, $s4
	st.d	$zero, $s5, 8
	st.b	$zero, $s6, 0
	st.w	$a0, $s7, 32
	addi.d	$a0, $s7, 56
	st.d	$a0, $s7, 40
	ld.d	$a1, $s5, 40
	addi.d	$s6, $s5, 56
	bne	$s6, $a1, .LBB300_5
# %bb.11:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i6.i.i.i.i.i.i100
                                        #   in Loop: Header=BB300_7 Depth=1
	ld.d	$a1, $s5, 48
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB300_6
.LBB300_12:
	sub.d	$s5, $s8, $s0
	srai.d	$a1, $s5, 3
	mul.d	$fp, $a1, $a0
	bgeu	$s6, $fp, .LBB300_52
# %bb.13:
	move	$s6, $zero
	sub.d	$s5, $zero, $s4
	sub.d	$fp, $s8, $s4
	b	.LBB300_16
	.p2align	4, , 16
.LBB300_14:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i5.i.i.i.i.i.i
                                        #   in Loop: Header=BB300_16 Depth=1
	st.d	$a1, $s7, 40
	ld.d	$a1, $s3, 0
	st.d	$a1, $a0, 0
.LBB300_15:                             # %_ZSt10_ConstructI8TestCaseJS0_EEvPT_DpOT0_.exit.i.i.i.i
                                        #   in Loop: Header=BB300_16 Depth=1
	ld.d	$a0, $s2, 48
	st.d	$a0, $s7, 48
	st.d	$s3, $s2, 40
	st.d	$zero, $s2, 48
	st.b	$zero, $s3, 0
	st.d	$zero, $s7, 80
	vld	$vr0, $s2, 72
	st.d	$zero, $s2, 80
	vst	$vr0, $s7, 72
	addi.d	$s6, $s6, 88
	st.d	$zero, $s2, 72
	beq	$s4, $s6, .LBB300_66
.LBB300_16:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s7, $s8, $s6
	addi.d	$a0, $s7, 16
	stx.d	$a0, $s8, $s6
	ldx.d	$a1, $fp, $s6
	add.d	$s2, $fp, $s6
	addi.d	$s3, $s2, 16
	beq	$s3, $a1, .LBB300_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB300_16 Depth=1
	stx.d	$a1, $s8, $s6
	ld.d	$a1, $s3, 0
	st.d	$a1, $a0, 0
	b	.LBB300_19
	.p2align	4, , 16
.LBB300_18:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB300_16 Depth=1
	ld.d	$a1, $s2, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB300_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB300_16 Depth=1
	ld.d	$a0, $s2, 8
	st.d	$a0, $s7, 8
	ld.w	$a0, $s2, 32
	stx.d	$s3, $fp, $s6
	st.d	$zero, $s2, 8
	st.b	$zero, $s3, 0
	st.w	$a0, $s7, 32
	addi.d	$a0, $s7, 56
	st.d	$a0, $s7, 40
	ld.d	$a1, $s2, 40
	addi.d	$s3, $s2, 56
	bne	$s3, $a1, .LBB300_14
# %bb.20:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i6.i.i.i.i.i.i
                                        #   in Loop: Header=BB300_16 Depth=1
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB300_15
.LBB300_21:                             # %_ZSt34__uninitialized_move_if_noexcept_aIP8TestCaseS1_SaIS0_EET0_T_S4_S3_RT1_.exit.loopexit
	add.d	$s7, $s3, $s4
.LBB300_22:                             # %_ZSt34__uninitialized_move_if_noexcept_aIP8TestCaseS1_SaIS0_EET0_T_S4_S3_RT1_.exit
	st.d	$s7, $sp, 64
	st.d	$s7, $sp, 48
	addi.d	$a0, $sp, 64
	st.d	$a0, $sp, 56
	move	$s6, $s7
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	.p2align	4, , 16
.LBB300_23:                             # %.lr.ph.i.i.i103
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1934:                              # EH_LABEL
	move	$a0, $s6
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN8TestCaseC2ERKS_)
	jirl	$ra, $ra, 0
.Ltmp1935:                              # EH_LABEL
# %bb.24:                               # %_ZSt10_ConstructI8TestCaseJRKS0_EEvPT_DpOT0_.exit.i.i.i105
                                        #   in Loop: Header=BB300_23 Depth=1
	ld.d	$s5, $sp, 64
	addi.d	$s1, $s1, 88
	addi.d	$s6, $s5, 88
	st.d	$s6, $sp, 64
	bne	$s1, $s4, .LBB300_23
# %bb.25:
	beq	$s8, $s0, .LBB300_35
# %bb.26:                               # %.lr.ph.i.i.i.i109.preheader
	move	$s2, $zero
	b	.LBB300_29
	.p2align	4, , 16
.LBB300_27:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i6.i.i.i.i.i.i118
                                        #   in Loop: Header=BB300_29 Depth=1
	ld.d	$a1, $s6, 48
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB300_28:                             # %_ZSt10_ConstructI8TestCaseJS0_EEvPT_DpOT0_.exit.i.i.i.i115
                                        #   in Loop: Header=BB300_29 Depth=1
	ld.d	$a0, $s6, 48
	st.d	$a0, $s4, 136
	st.d	$s1, $s6, 40
	st.d	$zero, $s6, 48
	st.b	$zero, $s1, 0
	st.d	$zero, $s4, 168
	vld	$vr0, $s6, 72
	st.d	$zero, $s6, 80
	vst	$vr0, $s4, 160
	addi.d	$s2, $s2, 88
	add.d	$a0, $s0, $s2
	st.d	$zero, $s6, 72
	beq	$a0, $s8, .LBB300_34
.LBB300_29:                             # %.lr.ph.i.i.i.i109
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s4, $s5, $s2
	addi.d	$a0, $s4, 104
	st.d	$a0, $s4, 88
	ldx.d	$a1, $s0, $s2
	add.d	$s6, $s0, $s2
	addi.d	$s1, $s6, 16
	beq	$s1, $a1, .LBB300_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i112
                                        #   in Loop: Header=BB300_29 Depth=1
	st.d	$a1, $s4, 88
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB300_32
	.p2align	4, , 16
.LBB300_31:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i.i119
                                        #   in Loop: Header=BB300_29 Depth=1
	ld.d	$a1, $s6, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB300_32:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i.i113
                                        #   in Loop: Header=BB300_29 Depth=1
	ld.d	$a0, $s6, 8
	st.d	$a0, $s4, 96
	stx.d	$s1, $s0, $s2
	st.d	$zero, $s6, 8
	st.b	$zero, $s1, 0
	ld.w	$a0, $s6, 32
	st.w	$a0, $s4, 120
	addi.d	$a0, $s4, 144
	st.d	$a0, $s4, 128
	ld.d	$a1, $s6, 40
	addi.d	$s1, $s6, 56
	beq	$s1, $a1, .LBB300_27
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i5.i.i.i.i.i.i114
                                        #   in Loop: Header=BB300_29 Depth=1
	st.d	$a1, $s4, 128
	ld.d	$a0, $s1, 0
	st.d	$a0, $s4, 144
	b	.LBB300_28
.LBB300_34:                             # %_ZSt34__uninitialized_move_if_noexcept_aIP8TestCaseS1_SaIS0_EET0_T_S4_S3_RT1_.exit120.loopexit
	add.d	$a0, $s5, $s2
	addi.d	$s6, $a0, 88
.LBB300_35:                             # %_ZSt34__uninitialized_move_if_noexcept_aIP8TestCaseS1_SaIS0_EET0_T_S4_S3_RT1_.exit120
	beq	$fp, $s8, .LBB300_49
# %bb.36:                               # %.lr.ph.i121.preheader
	ori	$s1, $zero, 1
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$s2, $a0, %got_pc_lo12(__libc_single_threaded)
	ori	$s5, $zero, 1
	lu32i.d	$s5, 1
	addi.w	$s7, $zero, -1
	move	$s4, $fp
	b	.LBB300_38
	.p2align	4, , 16
.LBB300_37:                             # %_ZSt8_DestroyI8TestCaseEvPT_.exit.i
                                        #   in Loop: Header=BB300_38 Depth=1
	addi.d	$s4, $s4, 88
	beq	$s4, $s8, .LBB300_49
.LBB300_38:                             # %.lr.ph.i121
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s0, $s4, 80
	beqz	$s0, .LBB300_43
# %bb.39:                               #   in Loop: Header=BB300_38 Depth=1
	ld.d	$a0, $s0, 8
	dbar	20
	bne	$a0, $s5, .LBB300_41
# %bb.40:                               #   in Loop: Header=BB300_38 Depth=1
	ld.d	$a0, $s0, 0
	st.d	$zero, $s0, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $s4, 40
	addi.d	$a1, $s4, 56
	bne	$a1, $a0, .LBB300_44
	b	.LBB300_45
	.p2align	4, , 16
.LBB300_41:                             #   in Loop: Header=BB300_38 Depth=1
	ld.bu	$a1, $s2, 0
	beqz	$a1, .LBB300_47
# %bb.42:                               #   in Loop: Header=BB300_38 Depth=1
	addi.d	$a1, $a0, -1
	st.w	$a1, $s0, 8
	addi.w	$a0, $a0, 0
	beq	$a0, $s1, .LBB300_48
	.p2align	4, , 16
.LBB300_43:                             # %_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB300_38 Depth=1
	ld.d	$a0, $s4, 40
	addi.d	$a1, $s4, 56
	beq	$a1, $a0, .LBB300_45
.LBB300_44:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB300_38 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB300_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB300_38 Depth=1
	ld.d	$a0, $s4, 0
	addi.d	$a1, $s4, 16
	beq	$a1, $a0, .LBB300_37
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
                                        #   in Loop: Header=BB300_38 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB300_37
.LBB300_47:                             #   in Loop: Header=BB300_38 Depth=1
	addi.d	$a1, $s0, 8
	amadd_db.w	$a0, $s7, $a1
	addi.w	$a0, $a0, 0
	bne	$a0, $s1, .LBB300_43
.LBB300_48:                             #   in Loop: Header=BB300_38 Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 40
	addi.d	$a1, $s4, 56
	bne	$a1, $a0, .LBB300_44
	b	.LBB300_45
.LBB300_49:                             # %_ZSt8_DestroyIP8TestCaseEvT_S2_.exit
	ld.d	$s0, $sp, 32                    # 8-byte Folded Reload
	beqz	$fp, .LBB300_51
# %bb.50:
	ld.d	$a0, $s0, 16
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB300_51:                             # %_ZNSt12_Vector_baseI8TestCaseSaIS0_EE13_M_deallocateEPS0_m.exit
	st.d	$s3, $s0, 0
	st.d	$s6, $s0, 8
	ori	$a0, $zero, 88
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	mul.d	$a0, $a1, $a0
	add.d	$a0, $s3, $a0
	st.d	$a0, $s0, 16
	b	.LBB300_86
.LBB300_52:                             # %_ZSt9__advanceIPK8TestCaselEvRT_T0_St26random_access_iterator_tag.exit
	add.d	$s4, $s1, $s5
	st.d	$s8, $sp, 64
	st.d	$s8, $sp, 48
	addi.d	$a0, $sp, 64
	st.d	$a0, $sp, 56
	move	$a0, $s8
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	beq	$s4, $a1, .LBB300_57
# %bb.53:                               # %.lr.ph.i.i.i.preheader
	move	$a0, $s8
	move	$s3, $s4
	.p2align	4, , 16
.LBB300_54:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1931:                              # EH_LABEL
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN8TestCaseC2ERKS_)
	jirl	$ra, $ra, 0
.Ltmp1932:                              # EH_LABEL
# %bb.55:                               # %_ZSt10_ConstructI8TestCaseJRKS0_EEvPT_DpOT0_.exit.i.i.i
                                        #   in Loop: Header=BB300_54 Depth=1
	ld.d	$a0, $sp, 64
	addi.d	$s3, $s3, 88
	addi.d	$a0, $a0, 88
	st.d	$a0, $sp, 64
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	bne	$s3, $a1, .LBB300_54
# %bb.56:                               # %_ZSt22__uninitialized_copy_aIPK8TestCaseS2_PS0_S0_ET1_T_T0_S4_RSaIT2_E.exit.loopexit
	ld.d	$a0, $s2, 8
.LBB300_57:                             # %_ZSt22__uninitialized_copy_aIPK8TestCaseS2_PS0_S0_ET1_T_T0_S4_RSaIT2_E.exit
	sub.d	$a1, $s6, $fp
	ori	$a2, $zero, 88
	mul.d	$a1, $a1, $a2
	add.d	$s3, $a0, $a1
	st.d	$s3, $s2, 8
	beq	$s8, $s0, .LBB300_85
# %bb.58:                               # %.lr.ph.i.i.i.i57.preheader
	move	$fp, $zero
	b	.LBB300_61
	.p2align	4, , 16
.LBB300_59:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i5.i.i.i.i.i.i62
                                        #   in Loop: Header=BB300_61 Depth=1
	st.d	$a1, $s7, 40
	ld.d	$a1, $s2, 0
	st.d	$a1, $a0, 0
.LBB300_60:                             # %_ZSt10_ConstructI8TestCaseJS0_EEvPT_DpOT0_.exit.i.i.i.i63
                                        #   in Loop: Header=BB300_61 Depth=1
	ld.d	$a0, $s6, 48
	st.d	$a0, $s7, 48
	st.d	$s2, $s6, 40
	st.d	$zero, $s6, 48
	st.b	$zero, $s2, 0
	st.d	$zero, $s7, 80
	vld	$vr0, $s6, 72
	st.d	$zero, $s6, 80
	vst	$vr0, $s7, 72
	addi.d	$fp, $fp, 88
	add.d	$a0, $s0, $fp
	st.d	$zero, $s6, 72
	beq	$a0, $s8, .LBB300_84
.LBB300_61:                             # %.lr.ph.i.i.i.i57
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s7, $s3, $fp
	addi.d	$a0, $s7, 16
	stx.d	$a0, $s3, $fp
	ldx.d	$a1, $s0, $fp
	add.d	$s6, $s0, $fp
	addi.d	$s2, $s6, 16
	beq	$s2, $a1, .LBB300_63
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i60
                                        #   in Loop: Header=BB300_61 Depth=1
	stx.d	$a1, $s3, $fp
	ld.d	$a1, $s2, 0
	st.d	$a1, $a0, 0
	b	.LBB300_64
	.p2align	4, , 16
.LBB300_63:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i.i67
                                        #   in Loop: Header=BB300_61 Depth=1
	ld.d	$a1, $s6, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB300_64:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i.i61
                                        #   in Loop: Header=BB300_61 Depth=1
	ld.d	$a0, $s6, 8
	st.d	$a0, $s7, 8
	stx.d	$s2, $s0, $fp
	st.d	$zero, $s6, 8
	st.b	$zero, $s2, 0
	ld.w	$a0, $s6, 32
	st.w	$a0, $s7, 32
	addi.d	$a0, $s7, 56
	st.d	$a0, $s7, 40
	ld.d	$a1, $s6, 40
	addi.d	$s2, $s6, 56
	bne	$s2, $a1, .LBB300_59
# %bb.65:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i6.i.i.i.i.i.i66
                                        #   in Loop: Header=BB300_61 Depth=1
	ld.d	$a1, $s6, 48
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB300_60
.LBB300_66:                             # %_ZSt22__uninitialized_move_aIP8TestCaseS1_SaIS0_EET0_T_S4_S3_RT1_.exit
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a0, $a1, 8
	add.d	$a0, $a0, $s4
	st.d	$a0, $a1, 8
	beq	$fp, $s0, .LBB300_69
# %bb.67:                               # %.lr.ph.i.preheader
	addi.d	$fp, $s8, -88
	.p2align	4, , 16
.LBB300_68:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$a1, $fp, $s5
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN8TestCaseaSEOS_)
	jirl	$ra, $ra, 0
	addi.d	$fp, $fp, -88
	add.d	$a0, $fp, $s5
	addi.d	$a0, $a0, 88
	bne	$a0, $s0, .LBB300_68
.LBB300_69:                             # %.lr.ph.i.i.preheader
	addi.d	$fp, $s0, 40
	ori	$s3, $zero, 1
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$s4, $a0, %got_pc_lo12(__libc_single_threaded)
	ori	$s5, $zero, 1
	lu32i.d	$s5, 1
	addi.w	$s6, $zero, -1
	b	.LBB300_73
.LBB300_70:                             #   in Loop: Header=BB300_73 Depth=1
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
.LBB300_71:                             # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB300_73 Depth=1
	st.d	$s7, $fp, 40
.LBB300_72:                             # %_ZN8TestCaseaSERKS_.exit.i.i
                                        #   in Loop: Header=BB300_73 Depth=1
	addi.d	$s1, $s0, 48
	addi.d	$fp, $fp, 88
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	beq	$s1, $a0, .LBB300_86
.LBB300_73:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $fp, -40
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 32
	st.w	$a0, $fp, -8
	addi.d	$s0, $s1, 40
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	st.d	$a0, $fp, 32
	ld.d	$s7, $s1, 80
	ld.d	$s1, $fp, 40
	beq	$s7, $s1, .LBB300_72
# %bb.74:                               #   in Loop: Header=BB300_73 Depth=1
	beqz	$s7, .LBB300_77
# %bb.75:                               #   in Loop: Header=BB300_73 Depth=1
	ld.bu	$a0, $s4, 0
	beqz	$a0, .LBB300_81
# %bb.76:                               #   in Loop: Header=BB300_73 Depth=1
	ld.w	$a0, $s7, 8
	addi.d	$a0, $a0, 1
	st.w	$a0, $s7, 8
.LBB300_77:                             # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB300_73 Depth=1
	beqz	$s1, .LBB300_71
.LBB300_78:                             #   in Loop: Header=BB300_73 Depth=1
	ld.d	$a0, $s1, 8
	dbar	20
	beq	$a0, $s5, .LBB300_70
# %bb.79:                               #   in Loop: Header=BB300_73 Depth=1
	ld.bu	$a1, $s4, 0
	beqz	$a1, .LBB300_82
# %bb.80:                               #   in Loop: Header=BB300_73 Depth=1
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	bne	$a0, $s3, .LBB300_71
	b	.LBB300_83
.LBB300_81:                             #   in Loop: Header=BB300_73 Depth=1
	addi.d	$a0, $s7, 8
	amadd_db.w	$a1, $s3, $a0
	ld.d	$s1, $fp, 40
	bnez	$s1, .LBB300_78
	b	.LBB300_71
.LBB300_82:                             #   in Loop: Header=BB300_73 Depth=1
	addi.d	$a1, $s1, 8
	amadd_db.w	$a0, $s6, $a1
	addi.w	$a0, $a0, 0
	bne	$a0, $s3, .LBB300_71
.LBB300_83:                             #   in Loop: Header=BB300_73 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB300_71
.LBB300_84:                             # %_ZSt22__uninitialized_move_aIP8TestCaseS1_SaIS0_EET0_T_S4_S3_RT1_.exit68.loopexit
	ld.d	$s2, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s3, $s2, 8
.LBB300_85:                             # %_ZSt22__uninitialized_move_aIP8TestCaseS1_SaIS0_EET0_T_S4_S3_RT1_.exit68
	add.d	$a0, $s3, $s5
	st.d	$a0, $s2, 8
	bne	$s0, $s8, .LBB300_87
.LBB300_86:                             # %_ZSt4copyIPK8TestCaseN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEEET0_T_SB_SA_.exit
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB300_87:                             # %.lr.ph.i.i71.preheader
	addi.d	$fp, $s0, 40
	ori	$s2, $zero, 1
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$s3, $a0, %got_pc_lo12(__libc_single_threaded)
	ori	$s5, $zero, 1
	lu32i.d	$s5, 1
	addi.w	$s6, $zero, -1
	b	.LBB300_91
.LBB300_88:                             #   in Loop: Header=BB300_91 Depth=1
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
.LBB300_89:                             # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv.exit.i.i.i.i.i.i82
                                        #   in Loop: Header=BB300_91 Depth=1
	st.d	$s7, $fp, 40
.LBB300_90:                             # %_ZN8TestCaseaSERKS_.exit.i.i83
                                        #   in Loop: Header=BB300_91 Depth=1
	addi.d	$s1, $s0, 48
	addi.d	$fp, $fp, 88
	beq	$s1, $s4, .LBB300_86
.LBB300_91:                             # %.lr.ph.i.i71
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $fp, -40
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 32
	st.w	$a0, $fp, -8
	addi.d	$s0, $s1, 40
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	st.d	$a0, $fp, 32
	ld.d	$s7, $s1, 80
	ld.d	$s1, $fp, 40
	beq	$s7, $s1, .LBB300_90
# %bb.92:                               #   in Loop: Header=BB300_91 Depth=1
	beqz	$s7, .LBB300_95
# %bb.93:                               #   in Loop: Header=BB300_91 Depth=1
	ld.bu	$a0, $s3, 0
	beqz	$a0, .LBB300_99
# %bb.94:                               #   in Loop: Header=BB300_91 Depth=1
	ld.w	$a0, $s7, 8
	addi.d	$a0, $a0, 1
	st.w	$a0, $s7, 8
.LBB300_95:                             # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv.exit.i.i.i.i.i.i77
                                        #   in Loop: Header=BB300_91 Depth=1
	beqz	$s1, .LBB300_89
.LBB300_96:                             #   in Loop: Header=BB300_91 Depth=1
	ld.d	$a0, $s1, 8
	dbar	20
	beq	$a0, $s5, .LBB300_88
# %bb.97:                               #   in Loop: Header=BB300_91 Depth=1
	ld.bu	$a1, $s3, 0
	beqz	$a1, .LBB300_100
# %bb.98:                               #   in Loop: Header=BB300_91 Depth=1
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	bne	$a0, $s2, .LBB300_89
	b	.LBB300_101
.LBB300_99:                             #   in Loop: Header=BB300_91 Depth=1
	addi.d	$a0, $s7, 8
	amadd_db.w	$a1, $s2, $a0
	ld.d	$s1, $fp, 40
	bnez	$s1, .LBB300_96
	b	.LBB300_89
.LBB300_100:                            #   in Loop: Header=BB300_91 Depth=1
	addi.d	$a1, $s1, 8
	amadd_db.w	$a0, $s6, $a1
	addi.w	$a0, $a0, 0
	bne	$a0, $s2, .LBB300_89
.LBB300_101:                            #   in Loop: Header=BB300_91 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB300_89
.LBB300_102:
	pcalau12i	$a0, %pc_hi20(.L.str.301)
	addi.d	$a0, $a0, %pc_lo12(.L.str.301)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB300_103:
.Ltmp1933:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB300_104:                            # %.body
.Ltmp1936:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
.Ltmp1937:                              # EH_LABEL
	move	$a0, $s3
	move	$a1, $s7
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIP8TestCaseEvT_S2_)
	jirl	$ra, $ra, 0
.Ltmp1938:                              # EH_LABEL
# %bb.105:
	move	$a0, $s3
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp1939:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1940:                              # EH_LABEL
# %bb.106:
.LBB300_107:
.Ltmp1941:                              # EH_LABEL
	move	$fp, $a0
.Ltmp1942:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1943:                              # EH_LABEL
# %bb.108:                              # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB300_109:
.Ltmp1944:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end300:
	.size	_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag, .Lfunc_end300-_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag,"aG",@progbits,_ZNSt6vectorI8TestCaseSaIS0_EE15_M_range_insertIPKS0_EEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EET_SA_St20forward_iterator_tag,comdat
	.p2align	2, 0x0
GCC_except_table300:
.Lexception133:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase56-.Lttbaseref56
.Lttbaseref56:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end133-.Lcst_begin133
.Lcst_begin133:
	.uleb128 .Lfunc_begin133-.Lfunc_begin133 # >> Call Site 1 <<
	.uleb128 .Ltmp1934-.Lfunc_begin133      #   Call between .Lfunc_begin133 and .Ltmp1934
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1934-.Lfunc_begin133      # >> Call Site 2 <<
	.uleb128 .Ltmp1935-.Ltmp1934            #   Call between .Ltmp1934 and .Ltmp1935
	.uleb128 .Ltmp1936-.Lfunc_begin133      #     jumps to .Ltmp1936
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1935-.Lfunc_begin133      # >> Call Site 3 <<
	.uleb128 .Ltmp1931-.Ltmp1935            #   Call between .Ltmp1935 and .Ltmp1931
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1931-.Lfunc_begin133      # >> Call Site 4 <<
	.uleb128 .Ltmp1932-.Ltmp1931            #   Call between .Ltmp1931 and .Ltmp1932
	.uleb128 .Ltmp1933-.Lfunc_begin133      #     jumps to .Ltmp1933
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1932-.Lfunc_begin133      # >> Call Site 5 <<
	.uleb128 .Ltmp1937-.Ltmp1932            #   Call between .Ltmp1932 and .Ltmp1937
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1937-.Lfunc_begin133      # >> Call Site 6 <<
	.uleb128 .Ltmp1938-.Ltmp1937            #   Call between .Ltmp1937 and .Ltmp1938
	.uleb128 .Ltmp1941-.Lfunc_begin133      #     jumps to .Ltmp1941
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1938-.Lfunc_begin133      # >> Call Site 7 <<
	.uleb128 .Ltmp1939-.Ltmp1938            #   Call between .Ltmp1938 and .Ltmp1939
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1939-.Lfunc_begin133      # >> Call Site 8 <<
	.uleb128 .Ltmp1940-.Ltmp1939            #   Call between .Ltmp1939 and .Ltmp1940
	.uleb128 .Ltmp1941-.Lfunc_begin133      #     jumps to .Ltmp1941
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1942-.Lfunc_begin133      # >> Call Site 9 <<
	.uleb128 .Ltmp1943-.Ltmp1942            #   Call between .Ltmp1942 and .Ltmp1943
	.uleb128 .Ltmp1944-.Lfunc_begin133      #     jumps to .Ltmp1944
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1943-.Lfunc_begin133      # >> Call Site 10 <<
	.uleb128 .Lfunc_end300-.Ltmp1943        #   Call between .Ltmp1943 and .Lfunc_end300
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end133:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase56:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev,comdat
	.hidden	_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev
	.weak	_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev
	.p2align	2
	.type	_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev,@function
_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev: # @_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev
.Lfunc_begin134:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception134
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB301_2
.LBB301_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB301_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp1945:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIP8TestCaseEvT_S2_)
	jirl	$ra, $ra, 0
.Ltmp1946:                              # EH_LABEL
	b	.LBB301_1
.LBB301_3:
.Ltmp1947:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end301:
	.size	_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev, .Lfunc_end301-_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIP8TestCasevED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table301:
.Lexception134:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase57-.Lttbaseref57
.Lttbaseref57:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end134-.Lcst_begin134
.Lcst_begin134:
	.uleb128 .Ltmp1945-.Lfunc_begin134      # >> Call Site 1 <<
	.uleb128 .Ltmp1946-.Ltmp1945            #   Call between .Ltmp1945 and .Ltmp1946
	.uleb128 .Ltmp1947-.Lfunc_begin134      #     jumps to .Ltmp1947
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1946-.Lfunc_begin134      # >> Call Site 2 <<
	.uleb128 .Lfunc_end301-.Ltmp1946        #   Call between .Ltmp1946 and .Lfunc_end301
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end134:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase57:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8TestCaseaSEOS_,"axG",@progbits,_ZN8TestCaseaSEOS_,comdat
	.hidden	_ZN8TestCaseaSEOS_              # -- Begin function _ZN8TestCaseaSEOS_
	.weak	_ZN8TestCaseaSEOS_
	.p2align	2
	.type	_ZN8TestCaseaSEOS_,@function
_ZN8TestCaseaSEOS_:                     # @_ZN8TestCaseaSEOS_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$a4, $a0, 0
	addi.d	$a5, $a0, 16
	beq	$a4, $a5, .LBB302_3
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a3, $a1, 0
	addi.d	$a2, $a1, 16
	beq	$a3, $a2, .LBB302_7
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a5, $a5, 0
	b	.LBB302_5
.LBB302_3:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a3, $a1, 0
	addi.d	$a2, $a1, 16
	beq	$a3, $a2, .LBB302_7
# %bb.4:
	move	$a4, $zero
                                        # implicit-def: $r9
.LBB302_5:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i
	ld.d	$a6, $a1, 8
	st.d	$a3, $a0, 0
	st.d	$a6, $a0, 8
	ld.d	$a3, $a1, 16
	st.d	$a3, $a0, 16
	beqz	$a4, .LBB302_11
# %bb.6:
	st.d	$a4, $a1, 0
	st.d	$a5, $a1, 16
	b	.LBB302_14
.LBB302_7:
	beq	$a1, $a0, .LBB302_37
# %bb.8:
	ld.d	$a2, $a1, 8
	beqz	$a2, .LBB302_13
# %bb.9:
	ori	$a5, $zero, 1
	bne	$a2, $a5, .LBB302_12
# %bb.10:
	ld.b	$a2, $a3, 0
	st.b	$a2, $a4, 0
	b	.LBB302_13
.LBB302_11:
	st.d	$a2, $a1, 0
	move	$a4, $a2
	b	.LBB302_14
.LBB302_12:
	move	$fp, $a0
	move	$a0, $a4
	move	$s0, $a1
	move	$a1, $a3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
.LBB302_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a2, $a1, 8
	ld.d	$a3, $a0, 0
	st.d	$a2, $a0, 8
	stx.b	$zero, $a3, $a2
	ld.d	$a4, $a1, 0
.LBB302_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $a1, 8
	st.b	$zero, $a4, 0
	ld.w	$a2, $a1, 32
	ld.d	$a4, $a0, 40
	addi.d	$a5, $a0, 56
	st.w	$a2, $a0, 32
	beq	$a4, $a5, .LBB302_17
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i5
	ld.d	$a3, $a1, 40
	addi.d	$a2, $a1, 56
	beq	$a3, $a2, .LBB302_21
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i6
	ld.d	$a5, $a5, 0
	b	.LBB302_19
.LBB302_17:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i14
	ld.d	$a3, $a1, 40
	addi.d	$a2, $a1, 56
	beq	$a3, $a2, .LBB302_21
# %bb.18:
	move	$a4, $zero
                                        # implicit-def: $r9
.LBB302_19:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i7
	ld.d	$a6, $a1, 48
	st.d	$a3, $a0, 40
	st.d	$a6, $a0, 48
	ld.d	$a3, $a1, 56
	st.d	$a3, $a0, 56
	beqz	$a4, .LBB302_25
# %bb.20:
	st.d	$a4, $a1, 40
	st.d	$a5, $a1, 56
	b	.LBB302_28
.LBB302_21:
	beq	$a1, $a0, .LBB302_38
# %bb.22:
	ld.d	$a2, $a1, 48
	beqz	$a2, .LBB302_27
# %bb.23:
	ori	$a5, $zero, 1
	bne	$a2, $a5, .LBB302_26
# %bb.24:
	ld.b	$a2, $a3, 0
	st.b	$a2, $a4, 0
	b	.LBB302_27
.LBB302_25:
	st.d	$a2, $a1, 40
	move	$a4, $a2
	b	.LBB302_28
.LBB302_26:
	move	$fp, $a0
	move	$a0, $a4
	move	$s0, $a1
	move	$a1, $a3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
.LBB302_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i12
	ld.d	$a2, $a1, 48
	ld.d	$a3, $a0, 40
	st.d	$a2, $a0, 48
	stx.b	$zero, $a3, $a2
	ld.d	$a4, $a1, 40
.LBB302_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit15
	st.d	$zero, $a1, 48
	st.b	$zero, $a4, 0
	vld	$vr0, $a1, 72
	vrepli.b	$vr1, 0
	vst	$vr1, $a1, 72
	ld.d	$fp, $a0, 80
	vst	$vr0, $a0, 72
	beqz	$fp, .LBB302_34
# %bb.29:
	ld.d	$a1, $fp, 8
	ori	$a2, $zero, 1
	lu32i.d	$a2, 1
	dbar	20
	bne	$a1, $a2, .LBB302_32
# %bb.30:
	ld.d	$a1, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a1, 16
	move	$s0, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	jirl	$ra, $a1, 0
.LBB302_31:                             # %_ZNSt10shared_ptrIN9benchmark5RegexEEaSEOS2_.exit
	move	$a0, $s0
	b	.LBB302_34
.LBB302_32:
	pcalau12i	$a2, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a2, $a2, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a2, $a2, 0
	beqz	$a2, .LBB302_35
# %bb.33:
	addi.d	$a2, $a1, -1
	st.w	$a2, $fp, 8
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB302_36
.LBB302_34:                             # %_ZNSt10shared_ptrIN9benchmark5RegexEEaSEOS2_.exit
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB302_35:
	addi.d	$a2, $fp, 8
	addi.w	$a3, $zero, -1
	amadd_db.w	$a1, $a3, $a2
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB302_34
.LBB302_36:
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB302_31
.LBB302_37:
	move	$a4, $a3
	b	.LBB302_14
.LBB302_38:
	move	$a4, $a3
	b	.LBB302_28
.Lfunc_end302:
	.size	_ZN8TestCaseaSEOS_, .Lfunc_end302-_ZN8TestCaseaSEOS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.hidden	_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.weak	_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	2
	.type	_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB303_5
# %bb.1:
	ld.d	$a0, $fp, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB303_3
# %bb.2:
	ld.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a1
.LBB303_3:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB303_6
# %bb.4:
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB303_7
.LBB303_5:                              # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB303_6:
	addi.d	$a1, $fp, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB303_5
.LBB303_7:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jr	$t8
.Lfunc_end303:
	.size	_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end303-_ZNSt12__shared_ptrIN9benchmark5RegexELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_ # -- Begin function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_
	.p2align	2
	.type	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_,@function
_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_: # @_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -64
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB304_20
# %bb.1:                                # %_ZNKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_M_check_lenEmPKc.exit
	move	$s3, $a1
	srai.d	$a0, $s7, 6
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 31
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 6
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$a1, $s3, 0
	add.d	$s6, $a0, $s7
	addi.d	$a0, $s6, 16
	addi.d	$s4, $s3, 16
	stx.d	$a0, $s2, $s7
	beq	$a1, $s4, .LBB304_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s3, 16
	ld.d	$s7, $s3, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
	b	.LBB304_4
.LBB304_3:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	ld.d	$s7, $s3, 8
	addi.d	$a2, $s7, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB304_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	st.d	$s7, $s6, 8
	st.d	$s4, $s3, 0
	st.d	$zero, $s3, 8
	ld.d	$a1, $s3, 32
	st.b	$zero, $s3, 16
	addi.d	$a0, $s6, 48
	addi.d	$s4, $s3, 48
	st.d	$a0, $s6, 32
	beq	$a1, $s4, .LBB304_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i
	ld.d	$a0, $s3, 48
	ld.d	$s7, $s3, 40
	st.d	$a1, $s6, 32
	st.d	$a0, $s6, 48
	b	.LBB304_7
.LBB304_6:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i
	ld.d	$s7, $s3, 40
	addi.d	$a2, $s7, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB304_7:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2EOS6_.exit
	st.d	$s7, $s6, 40
	st.d	$s4, $s3, 32
	st.d	$zero, $s3, 40
	st.b	$zero, $s3, 48
	move	$s3, $s2
	beq	$s0, $s5, .LBB304_17
# %bb.8:                                # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB304_11
	.p2align	4, , 16
.LBB304_9:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i.i.i.i.i
                                        #   in Loop: Header=BB304_11 Depth=1
	ld.d	$a2, $s3, 0
	ld.d	$s8, $s7, 40
	st.d	$a1, $s6, 32
	st.d	$a2, $a0, 0
.LBB304_10:                             # %_ZSt19__relocate_object_aISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_SaIS7_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB304_11 Depth=1
	st.d	$s8, $s6, 40
	st.d	$s3, $s7, 32
	st.d	$zero, $s7, 40
	addi.d	$s4, $s4, 64
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB304_16
.LBB304_11:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	beq	$s3, $a1, .LBB304_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB304_11 Depth=1
	ld.d	$a2, $s3, 0
	ld.d	$s8, $s7, 8
	stx.d	$a1, $s2, $s4
	st.d	$a2, $a0, 0
	b	.LBB304_14
	.p2align	4, , 16
.LBB304_13:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB304_11 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB304_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB304_11 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	ld.d	$a1, $s7, 32
	st.b	$zero, $s3, 0
	addi.d	$a0, $s6, 48
	addi.d	$s3, $s7, 48
	st.d	$a0, $s6, 32
	bne	$s3, $a1, .LBB304_9
# %bb.15:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i.i.i.i.i
                                        #   in Loop: Header=BB304_11 Depth=1
	ld.d	$s8, $s7, 40
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB304_10
.LBB304_16:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE11_S_relocateEPS7_SA_SA_RS8_.exit.loopexit
	add.d	$s3, $s2, $s4
.LBB304_17:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE11_S_relocateEPS7_SA_SA_RS8_.exit
	beqz	$s0, .LBB304_19
# %bb.18:                               # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE13_M_deallocateEPS7_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB304_19:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 64
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB304_20:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a0, $a0, %pc_lo12(.L.str.50)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end304:
	.size	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_, .Lfunc_end304-_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag
	.p2align	2
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag
.Lfunc_begin135:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception135
# %bb.0:                                # %.peel.begin
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a4
	move	$s2, $a3
	move	$s4, $a2
	move	$s1, $a1
	move	$fp, $a0
	move	$a0, $a2
	ori	$a1, $zero, 15
	st.d	$a1, $sp, 16
	beqz	$s1, .LBB305_4
# %bb.1:                                # %.peel.begin
	addi.w	$a1, $s4, 0
	addi.w	$a2, $zero, -1
	bne	$a1, $a2, .LBB305_4
# %bb.2:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_42
# %bb.3:                                # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i.i.i.peel
	ld.bu	$a0, $a0, 0
.LBB305_4:                              # %_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE9_M_at_eofEv.exit.i.i.peel
	addi.d	$s5, $fp, 16
	addi.w	$s7, $zero, -1
	addi.w	$s3, $a0, 0
	st.d	$s5, $sp, 8                     # 8-byte Folded Spill
	beqz	$s2, .LBB305_9
# %bb.5:                                # %_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE9_M_at_eofEv.exit.i.i.peel
	addi.w	$a2, $s0, 0
	addi.w	$a1, $zero, -1
	move	$a0, $s0
	bne	$a2, $a1, .LBB305_10
# %bb.6:
	ld.d	$a0, $s2, 16
	ld.d	$a2, $s2, 24
	bgeu	$a0, $a2, .LBB305_43
# %bb.7:                                # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i6.i.i.peel
	beq	$s3, $a1, .LBB305_11
.LBB305_8:
	move	$s3, $zero
	addi.w	$s8, $s4, 0
	bnez	$s1, .LBB305_35
	b	.LBB305_38
.LBB305_9:
	move	$a0, $s0
.LBB305_10:                             # %_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_.exit.peel
	addi.d	$a1, $s3, 1
	sltui	$a1, $a1, 1
	addi.w	$a0, $a0, 0
	addi.d	$a0, $a0, 1
	sltui	$a0, $a0, 1
	beq	$a1, $a0, .LBB305_8
.LBB305_11:
	beqz	$s1, .LBB305_15
# %bb.12:
	addi.w	$a0, $s4, 0
	addi.w	$a1, $zero, -1
	bne	$a0, $a1, .LBB305_15
# %bb.13:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_97
# %bb.14:                               # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i.peel
	ld.bu	$s4, $a0, 0
.LBB305_15:                             # %_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEEdeEv.exit.peel
	st.b	$s4, $s5, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_98
.LBB305_16:
	addi.d	$a0, $a0, 1
	st.d	$a0, $s1, 16
.LBB305_17:                             # %_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.exit.peel.preheader
	ori	$s4, $zero, 17
	addi.w	$s5, $s0, 0
	ori	$s8, $zero, 15
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_20
	b	.LBB305_25
	.p2align	4, , 16
.LBB305_18:
	move	$s1, $zero
	ori	$a0, $zero, 255
	stx.b	$a0, $fp, $s4
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_32
.LBB305_19:
	addi.d	$a0, $a0, 1
	st.d	$a0, $s1, 16
	addi.d	$s4, $s4, 1
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_25
.LBB305_20:
	move	$s6, $zero
	beqz	$s2, .LBB305_26
.LBB305_21:                             # %_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE9_M_at_eofEv.exit.i.i
	bne	$s5, $s7, .LBB305_26
# %bb.22:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $s2, 24
	bgeu	$a0, $a1, .LBB305_24
# %bb.23:                               # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i6.i.i
	ld.bu	$a0, $a0, 0
	b	.LBB305_27
.LBB305_24:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i5.i.i
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 72
	move	$a0, $s2
	jirl	$ra, $a1, 0
	addi.d	$a1, $a0, 1
	sltui	$a1, $a1, 1
	masknez	$s2, $s2, $a1
	b	.LBB305_27
.LBB305_25:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i.i.i
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
	move	$a0, $s1
	jirl	$ra, $a1, 0
	addi.d	$a0, $a0, 1
	sltui	$s6, $a0, 1
	masknez	$s1, $s1, $s6
	bnez	$s2, .LBB305_21
	.p2align	4, , 16
.LBB305_26:
	move	$a0, $s0
.LBB305_27:                             # %_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_.exit
	addi.w	$a0, $a0, 0
	addi.d	$a0, $a0, 1
	sltui	$a0, $a0, 1
	addi.d	$s3, $s4, -16
	beq	$s6, $a0, .LBB305_34
# %bb.28:                               # %_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_.exit
	bgeu	$s3, $s8, .LBB305_34
# %bb.29:
	beqz	$s1, .LBB305_18
# %bb.30:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_33
# %bb.31:                               # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i
	ld.bu	$a0, $a0, 0
	stx.b	$a0, $fp, $s4
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_19
.LBB305_32:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 80
	move	$a0, $s1
	jirl	$ra, $a1, 0
	addi.d	$s4, $s4, 1
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_20
	b	.LBB305_25
.LBB305_33:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
	move	$a0, $s1
	jirl	$ra, $a1, 0
	addi.d	$a1, $a0, 1
	sltui	$a1, $a1, 1
	masknez	$s1, $s1, $a1
	stx.b	$a0, $fp, $s4
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_19
	b	.LBB305_32
.LBB305_34:                             # %.preheader.loopexit
	move	$s4, $s7
	addi.w	$s8, $s4, 0
	beqz	$s1, .LBB305_38
.LBB305_35:                             # %.preheader
	bne	$s8, $s7, .LBB305_38
# %bb.36:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_44
# %bb.37:                               # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i.i.i29.peel
	ld.bu	$s5, $a0, 0
	bnez	$s2, .LBB305_39
	b	.LBB305_46
.LBB305_38:
	move	$s5, $s4
	beqz	$s2, .LBB305_46
.LBB305_39:                             # %_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE9_M_at_eofEv.exit.i.i21.peel
	addi.w	$a0, $s0, 0
	bne	$a0, $s7, .LBB305_46
# %bb.40:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $s2, 24
	bgeu	$a0, $a1, .LBB305_56
.LBB305_41:                             # %.thr_comm.peel
	addi.w	$a0, $s5, 0
	bne	$a0, $s7, .LBB305_96
	b	.LBB305_47
.LBB305_42:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i.i.i.peel
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
	move	$a0, $s1
	jirl	$ra, $a1, 0
	addi.d	$a1, $a0, 1
	sltui	$a1, $a1, 1
	masknez	$s1, $s1, $a1
	b	.LBB305_4
.LBB305_43:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i5.i.i.peel
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 72
	move	$a0, $s2
	jirl	$ra, $a1, 0
	addi.d	$a1, $a0, 1
	sltui	$a1, $a1, 1
	masknez	$s2, $s2, $a1
	b	.LBB305_10
.LBB305_44:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i.i.i28.peel
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
.Ltmp1948:                              # EH_LABEL
	move	$a0, $s1
	jirl	$ra, $a1, 0
.Ltmp1949:                              # EH_LABEL
# %bb.45:                               # %.noexc.peel
	move	$s5, $a0
	addi.d	$a0, $a0, 1
	sltui	$a0, $a0, 1
	masknez	$s1, $s1, $a0
	bnez	$s2, .LBB305_39
.LBB305_46:
	addi.w	$a0, $s0, 0
	addi.d	$a0, $a0, 1
	sltui	$a0, $a0, 1
	addi.w	$a1, $s5, 0
	addi.d	$a1, $a1, 1
	sltui	$a1, $a1, 1
	xor	$a0, $a0, $a1
	beqz	$a0, .LBB305_96
.LBB305_47:
	ld.d	$a0, $sp, 16
	bne	$s3, $a0, .LBB305_60
.LBB305_48:
	addi.d	$a0, $s3, 1
	st.d	$a0, $sp, 16
.Ltmp1952:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1953:                              # EH_LABEL
# %bb.49:
	move	$s5, $a0
	beqz	$s3, .LBB305_52
# %bb.50:
	ld.d	$a1, $fp, 0
	ori	$a0, $zero, 1
	bne	$s3, $a0, .LBB305_55
# %bb.51:
	ld.b	$a0, $a1, 0
	st.b	$a0, $s5, 0
.LBB305_52:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.peel
	ld.d	$a0, $fp, 0
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	beq	$a0, $a1, .LBB305_54
.LBB305_53:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.peel
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB305_54:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv.exit.peel
	ld.d	$a0, $sp, 16
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 16
	bnez	$s1, .LBB305_61
	b	.LBB305_64
.LBB305_55:
	move	$a0, $s5
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	bne	$a0, $a1, .LBB305_53
	b	.LBB305_54
.LBB305_56:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i5.i.i26.peel
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 72
.Ltmp1950:                              # EH_LABEL
	move	$a0, $s2
	jirl	$ra, $a1, 0
.Ltmp1951:                              # EH_LABEL
# %bb.57:                               # %.noexc30.peel
	bne	$a0, $s7, .LBB305_41
# %bb.58:
	addi.w	$a0, $s5, 0
	beq	$a0, $s7, .LBB305_96
# %bb.59:
	move	$s2, $zero
	ld.d	$a0, $sp, 16
	beq	$s3, $a0, .LBB305_48
.LBB305_60:                             # %._crit_edge
	ld.d	$s5, $fp, 0
	beqz	$s1, .LBB305_64
.LBB305_61:
	bne	$s8, $s7, .LBB305_64
# %bb.62:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_99
# %bb.63:                               # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i36.peel
	ld.bu	$s4, $a0, 0
.LBB305_64:
	stx.b	$s4, $s5, $s3
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_101
.LBB305_65:
	addi.d	$a0, $a0, 1
	st.d	$a0, $s1, 16
.LBB305_66:                             # %_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.exit40.peel.preheader
	addi.d	$s3, $s3, 1
	addi.w	$a0, $s0, 0
	addi.d	$a0, $a0, 1
	sltui	$s5, $a0, 1
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_69
	b	.LBB305_90
	.p2align	4, , 16
.LBB305_67:
	move	$s1, $zero
	ori	$a0, $zero, 255
	stx.b	$a0, $s4, $s3
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_88
.LBB305_68:
	addi.d	$a0, $a0, 1
	st.d	$a0, $s1, 16
	addi.d	$s3, $s3, 1
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_90
.LBB305_69:
	move	$s4, $zero
	beqz	$s2, .LBB305_92
.LBB305_70:                             # %_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE9_M_at_eofEv.exit.i.i21
	addi.w	$a0, $s0, 0
	bne	$a0, $s7, .LBB305_92
# %bb.71:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $s2, 24
	bgeu	$a0, $a1, .LBB305_73
.LBB305_72:                             # %.thr_comm
	bnez	$s4, .LBB305_78
	b	.LBB305_96
.LBB305_73:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i5.i.i26
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 72
.Ltmp1963:                              # EH_LABEL
	move	$a0, $s2
	jirl	$ra, $a1, 0
.Ltmp1964:                              # EH_LABEL
# %bb.74:                               # %.noexc30
	bne	$a0, $s7, .LBB305_72
# %bb.75:
	bnez	$s4, .LBB305_96
# %bb.76:
	move	$s2, $zero
	ld.d	$a0, $sp, 16
	beq	$s3, $a0, .LBB305_79
	.p2align	4, , 16
.LBB305_77:                             # %._crit_edge88
	ld.d	$s4, $fp, 0
	bnez	$s1, .LBB305_86
	b	.LBB305_67
	.p2align	4, , 16
.LBB305_78:
	ld.d	$a0, $sp, 16
	bne	$s3, $a0, .LBB305_77
.LBB305_79:
	addi.d	$a0, $s3, 1
	st.d	$a0, $sp, 16
.Ltmp1965:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1966:                              # EH_LABEL
# %bb.80:
	move	$s4, $a0
	addi.d	$a0, $s3, -1
	beq	$a0, $s7, .LBB305_83
# %bb.81:
	ld.d	$a1, $fp, 0
	bnez	$a0, .LBB305_93
# %bb.82:
	ld.b	$a0, $a1, 0
	st.b	$a0, $s4, 0
.LBB305_83:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit
	ld.d	$a0, $fp, 0
	beq	$a0, $s6, .LBB305_85
.LBB305_84:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $s6, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB305_85:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv.exit
	ld.d	$a0, $sp, 16
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 16
	beqz	$s1, .LBB305_67
.LBB305_86:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bgeu	$a0, $a1, .LBB305_94
# %bb.87:                               # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.thread.i.i36
	ld.bu	$a0, $a0, 0
	stx.b	$a0, $s4, $s3
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_68
.LBB305_88:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 80
.Ltmp1971:                              # EH_LABEL
	move	$a0, $s1
	jirl	$ra, $a1, 0
.Ltmp1972:                              # EH_LABEL
# %bb.89:                               # %_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.exit40.peel.backedge
	addi.d	$s3, $s3, 1
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_69
.LBB305_90:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i.i.i28
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
.Ltmp1961:                              # EH_LABEL
	move	$a0, $s1
	jirl	$ra, $a1, 0
.Ltmp1962:                              # EH_LABEL
# %bb.91:                               # %.noexc
	addi.d	$a0, $a0, 1
	sltui	$s4, $a0, 1
	masknez	$s1, $s1, $s4
	bnez	$s2, .LBB305_70
	.p2align	4, , 16
.LBB305_92:
	bne	$s5, $s4, .LBB305_78
	b	.LBB305_96
	.p2align	4, , 16
.LBB305_93:
	move	$a0, $s4
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	bne	$a0, $s6, .LBB305_84
	b	.LBB305_85
.LBB305_94:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i35
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
.Ltmp1968:                              # EH_LABEL
	move	$a0, $s1
	jirl	$ra, $a1, 0
.Ltmp1969:                              # EH_LABEL
# %bb.95:                               # %.noexc37
	addi.d	$a1, $a0, 1
	sltui	$a1, $a1, 1
	masknez	$s1, $s1, $a1
	stx.b	$a0, $s4, $s3
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_68
	b	.LBB305_88
.LBB305_96:                             # %_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tagEN6_GuardD2Ev.exit
	ld.d	$a0, $fp, 0
	st.d	$s3, $fp, 8
	stx.b	$zero, $a0, $s3
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB305_97:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i.peel
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
	move	$a0, $s1
	jirl	$ra, $a1, 0
	move	$s4, $a0
	addi.d	$a0, $a0, 1
	sltui	$a0, $a0, 1
	masknez	$s1, $s1, $a0
	st.b	$s4, $s5, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_16
.LBB305_98:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 80
	move	$a0, $s1
	jirl	$ra, $a1, 0
	b	.LBB305_17
.LBB305_99:                             # %_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv.exit.i.i35.peel
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 72
.Ltmp1955:                              # EH_LABEL
	move	$a0, $s1
	jirl	$ra, $a1, 0
.Ltmp1956:                              # EH_LABEL
# %bb.100:                              # %.noexc37.peel
	move	$s4, $a0
	addi.d	$a0, $a0, 1
	sltui	$a0, $a0, 1
	masknez	$s1, $s1, $a0
	stx.b	$s4, $s5, $s3
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 24
	bltu	$a0, $a1, .LBB305_65
.LBB305_101:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 80
.Ltmp1958:                              # EH_LABEL
	move	$a0, $s1
	jirl	$ra, $a1, 0
.Ltmp1959:                              # EH_LABEL
	b	.LBB305_66
.LBB305_102:                            # %.loopexit.split-lp84
.Ltmp1957:                              # EH_LABEL
	b	.LBB305_108
.LBB305_103:                            # %.loopexit.split-lp
.Ltmp1960:                              # EH_LABEL
	b	.LBB305_108
.LBB305_104:                            # %.loopexit83
.Ltmp1970:                              # EH_LABEL
	b	.LBB305_108
.LBB305_105:                            # %.loopexit
.Ltmp1973:                              # EH_LABEL
	b	.LBB305_108
.LBB305_106:                            # %.loopexit.split-lp79
.Ltmp1954:                              # EH_LABEL
	b	.LBB305_108
.LBB305_107:                            # %.loopexit78
.Ltmp1967:                              # EH_LABEL
.LBB305_108:
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	beq	$a0, $a1, .LBB305_110
# %bb.109:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB305_110:                            # %_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tagEN6_GuardD2Ev.exit44
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end305:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag, .Lfunc_end305-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag,"aG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt19istreambuf_iteratorIcS2_EEEvT_S8_St18input_iterator_tag,comdat
	.p2align	2, 0x0
GCC_except_table305:
.Lexception135:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end135-.Lcst_begin135
.Lcst_begin135:
	.uleb128 .Lfunc_begin135-.Lfunc_begin135 # >> Call Site 1 <<
	.uleb128 .Ltmp1948-.Lfunc_begin135      #   Call between .Lfunc_begin135 and .Ltmp1948
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1948-.Lfunc_begin135      # >> Call Site 2 <<
	.uleb128 .Ltmp1949-.Ltmp1948            #   Call between .Ltmp1948 and .Ltmp1949
	.uleb128 .Ltmp1960-.Lfunc_begin135      #     jumps to .Ltmp1960
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1952-.Lfunc_begin135      # >> Call Site 3 <<
	.uleb128 .Ltmp1953-.Ltmp1952            #   Call between .Ltmp1952 and .Ltmp1953
	.uleb128 .Ltmp1954-.Lfunc_begin135      #     jumps to .Ltmp1954
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1953-.Lfunc_begin135      # >> Call Site 4 <<
	.uleb128 .Ltmp1950-.Ltmp1953            #   Call between .Ltmp1953 and .Ltmp1950
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1950-.Lfunc_begin135      # >> Call Site 5 <<
	.uleb128 .Ltmp1951-.Ltmp1950            #   Call between .Ltmp1950 and .Ltmp1951
	.uleb128 .Ltmp1960-.Lfunc_begin135      #     jumps to .Ltmp1960
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1963-.Lfunc_begin135      # >> Call Site 6 <<
	.uleb128 .Ltmp1964-.Ltmp1963            #   Call between .Ltmp1963 and .Ltmp1964
	.uleb128 .Ltmp1973-.Lfunc_begin135      #     jumps to .Ltmp1973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1965-.Lfunc_begin135      # >> Call Site 7 <<
	.uleb128 .Ltmp1966-.Ltmp1965            #   Call between .Ltmp1965 and .Ltmp1966
	.uleb128 .Ltmp1967-.Lfunc_begin135      #     jumps to .Ltmp1967
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1966-.Lfunc_begin135      # >> Call Site 8 <<
	.uleb128 .Ltmp1971-.Ltmp1966            #   Call between .Ltmp1966 and .Ltmp1971
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1971-.Lfunc_begin135      # >> Call Site 9 <<
	.uleb128 .Ltmp1962-.Ltmp1971            #   Call between .Ltmp1971 and .Ltmp1962
	.uleb128 .Ltmp1973-.Lfunc_begin135      #     jumps to .Ltmp1973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1962-.Lfunc_begin135      # >> Call Site 10 <<
	.uleb128 .Ltmp1968-.Ltmp1962            #   Call between .Ltmp1962 and .Ltmp1968
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1968-.Lfunc_begin135      # >> Call Site 11 <<
	.uleb128 .Ltmp1969-.Ltmp1968            #   Call between .Ltmp1968 and .Ltmp1969
	.uleb128 .Ltmp1970-.Lfunc_begin135      #     jumps to .Ltmp1970
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1969-.Lfunc_begin135      # >> Call Site 12 <<
	.uleb128 .Ltmp1955-.Ltmp1969            #   Call between .Ltmp1969 and .Ltmp1955
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1955-.Lfunc_begin135      # >> Call Site 13 <<
	.uleb128 .Ltmp1956-.Ltmp1955            #   Call between .Ltmp1955 and .Ltmp1956
	.uleb128 .Ltmp1957-.Lfunc_begin135      #     jumps to .Ltmp1957
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1958-.Lfunc_begin135      # >> Call Site 14 <<
	.uleb128 .Ltmp1959-.Ltmp1958            #   Call between .Ltmp1958 and .Ltmp1959
	.uleb128 .Ltmp1960-.Lfunc_begin135      #     jumps to .Ltmp1960
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1959-.Lfunc_begin135      # >> Call Site 15 <<
	.uleb128 .Lfunc_end305-.Ltmp1959        #   Call between .Ltmp1959 and .Lfunc_end305
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end135:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	5                               # -- Begin function _GLOBAL__sub_I_output_test_helper.cc
	.type	_GLOBAL__sub_I_output_test_helper.cc,@function
_GLOBAL__sub_I_output_test_helper.cc:   # @_GLOBAL__sub_I_output_test_helper.cc
	.cfi_startproc
# %bb.0:
	pcaddu18i	$t8, %call36(_ZN9benchmark8internal17InitializeStreamsEv)
	jr	$t8
.Lfunc_end306:
	.size	_GLOBAL__sub_I_output_test_helper.cc, .Lfunc_end306-_GLOBAL__sub_I_output_test_helper.cc
	.cfi_endproc
                                        # -- End function
	.type	_ZZN8internal17GetResultsCheckerEvE2rc,@object # @_ZZN8internal17GetResultsCheckerEvE2rc
	.local	_ZZN8internal17GetResultsCheckerEvE2rc
	.comm	_ZZN8internal17GetResultsCheckerEvE2rc,72,8
	.type	_ZGVZN8internal17GetResultsCheckerEvE2rc,@object # @_ZGVZN8internal17GetResultsCheckerEvE2rc
	.local	_ZGVZN8internal17GetResultsCheckerEvE2rc
	.comm	_ZGVZN8internal17GetResultsCheckerEvE2rc,8,8
	.hidden	__dso_handle
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"output.good()"
	.size	.L.str, 14

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"/home/tangyan/code/auto-tests/loong-opt-cov-ts/test-suite/llvm-test-suite/MicroBenchmarks/libs/benchmark/test/output_test_helper.cc"
	.size	.L.str.1, 132

	.type	.L__func__._ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@object # @__func__._ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.L__func__._ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE:
	.asciz	"CheckResults"
	.size	.L__func__._ZN8internal14ResultsChecker12CheckResultsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, 13

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"-- LOG("
	.size	.L.str.2, 8

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"): "
	.size	.L.str.3, 4

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"--------------------------------\n"
	.size	.L.str.4, 34

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"checking for benchmarks matching "
	.size	.L.str.5, 34

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"...\n"
	.size	.L.str.6, 5

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	" is not matched by "
	.size	.L.str.7, 20

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"\n"
	.size	.L.str.8, 2

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	" is matched by "
	.size	.L.str.9, 16

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"Checking results of "
	.size	.L.str.10, 21

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	": ... \n"
	.size	.L.str.11, 8

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	": OK.\n"
	.size	.L.str.12, 7

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"!field_names.empty()"
	.size	.L.str.13, 21

	.type	.L__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.L__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"SetValues_"
	.size	.L__func__._ZN8internal14ResultsChecker10SetValues_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 11

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"(vals.size()) == (field_names.size())"
	.size	.L.str.14, 38

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"curr > 0"
	.size	.L.str.15, 9

	.type	.L__func__._ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @__func__._ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.L__func__._ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"SplitCsv_"
	.size	.L__func__._ZN8internal14ResultsChecker9SplitCsv_ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 10

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"/threads:"
	.size	.L.str.16, 10

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"!ss.fail()"
	.size	.L.str.17, 11

	.type	.L__func__._ZNK7Results10NumThreadsEv,@object # @__func__._ZNK7Results10NumThreadsEv
.L__func__._ZNK7Results10NumThreadsEv:
	.asciz	"NumThreads"
	.size	.L__func__._ZNK7Results10NumThreadsEv, 11

	.type	.L.str.18,@object               # @.str.18
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.18:
	.asciz	"iterations"
	.size	.L.str.18, 11

	.type	.L.str.19,@object               # @.str.19
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.19:
	.asciz	"which == kCpuTime || which == kRealTime"
	.size	.L.str.19, 40

	.type	.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE,@object # @__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE
.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE:
	.asciz	"GetTime"
	.size	.L__func__._ZNK7Results7GetTimeENS_13BenchmarkTimeE, 8

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"cpu_time"
	.size	.L.str.20, 9

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"real_time"
	.size	.L.str.21, 10

	.type	.L.str.22,@object               # @.str.22
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.22:
	.asciz	"time_unit"
	.size	.L.str.22, 10

	.type	.L.str.23,@object               # @.str.23
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.23:
	.asciz	"unit"
	.size	.L.str.23, 5

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"ns"
	.size	.L.str.24, 3

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"us"
	.size	.L.str.25, 3

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"ms"
	.size	.L.str.26, 3

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"s"
	.size	.L.str.27, 2

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"1 == 0"
	.size	.L.str.28, 7

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"unknown time unit: "
	.size	.L.str.29, 20

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"err_str.empty()"
	.size	.L.str.30, 16

	.type	.L__func__._ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi,@object # @__func__._ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
.L__func__._ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi:
	.asciz	"TestCase"
	.size	.L__func__._ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi, 9

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	"Could not construct regex \""
	.size	.L.str.31, 28

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"\""
	.size	.L.str.32, 2

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"\n    originally \""
	.size	.L.str.33, 18

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"\n    got error: "
	.size	.L.str.34, 17

	.type	.L.str.35,@object               # @.str.35
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.35:
	.asciz	"ConsoleReporter"
	.size	.L.str.35, 16

	.type	.L.str.36,@object               # @.str.36
	.p2align	3, 0x0
.L.str.36:
	.asciz	"JSONReporter"
	.size	.L.str.36, 13

	.type	.L.str.37,@object               # @.str.37
	.p2align	3, 0x0
.L.str.37:
	.asciz	"CSVReporter"
	.size	.L.str.37, 12

	.type	.L.str.38,@object               # @.str.38
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.38:
	.asciz	"Running benchmarks...\n"
	.size	.L.str.38, 23

	.type	.L.str.39,@object               # @.str.39
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.39:
	.asciz	"\nTesting "
	.size	.L.str.39, 10

	.type	.L.str.41,@object               # @.str.41
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.41:
	.asciz	"csv.name == std::string(\"CSVReporter\")"
	.size	.L.str.41, 39

	.type	.L__func__._Z14RunOutputTestsiPPc,@object # @__func__._Z14RunOutputTestsiPPc
.L__func__._Z14RunOutputTestsiPPc:
	.asciz	"RunOutputTests"
	.size	.L__func__._Z14RunOutputTestsiPPc, 15

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"static_cast<decltype(new_argv)::size_type>(argc) == new_argv.size()"
	.size	.L.str.42, 68

	.type	.L__PRETTY_FUNCTION__._Z21GetFileReporterOutputB5cxx11iPPc,@object # @__PRETTY_FUNCTION__._Z21GetFileReporterOutputB5cxx11iPPc
.L__PRETTY_FUNCTION__._Z21GetFileReporterOutputB5cxx11iPPc:
	.asciz	"std::string GetFileReporterOutput(int, char **)"
	.size	.L__PRETTY_FUNCTION__._Z21GetFileReporterOutputB5cxx11iPPc, 48

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"Will be using this as the tmp file: "
	.size	.L.str.43, 37

	.type	.L.str.44,@object               # @.str.44
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.44:
	.asciz	"--benchmark_out="
	.size	.L.str.44, 17

	.hidden	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log # @_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.type	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log,@object
	.section	.bss._ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log,"awG",@nobits,_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log,comdat
	.weak	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.p2align	3, 0x0
_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log:
	.space	8
	.size	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log, 8

	.hidden	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log # @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.type	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log,@object
	.section	.bss._ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log,"awG",@nobits,_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log,comdat
	.weak	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.p2align	3, 0x0
_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log:
	.dword	0                               # 0x0
	.size	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log, 8

	.type	.L.str.45,@object               # @.str.45
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.45:
	.asciz	":"
	.size	.L.str.45, 2

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	": "
	.size	.L.str.46, 3

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	": Check `"
	.size	.L.str.47, 10

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"' failed. "
	.size	.L.str.48, 11

	.hidden	_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log # @_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log
	.type	_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log,@object
	.section	.bss._ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log,"awG",@nobits,_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log,comdat
	.weak	_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log
	.p2align	3, 0x0
_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log:
	.space	8
	.size	_ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log, 8

	.hidden	_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log # @_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log
	.type	_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log,@object
	.section	.bss._ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log,"awG",@nobits,_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log,comdat
	.weak	_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log
	.p2align	3, 0x0
_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log:
	.dword	0                               # 0x0
	.size	_ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log, 8

	.hidden	_ZZN9benchmark8internal8LogLevelEvE9log_level # @_ZZN9benchmark8internal8LogLevelEvE9log_level
	.type	_ZZN9benchmark8internal8LogLevelEvE9log_level,@object
	.section	.bss._ZZN9benchmark8internal8LogLevelEvE9log_level,"awG",@nobits,_ZZN9benchmark8internal8LogLevelEvE9log_level,comdat
	.weak	_ZZN9benchmark8internal8LogLevelEvE9log_level
	.p2align	2, 0x0
_ZZN9benchmark8internal8LogLevelEvE9log_level:
	.word	0                               # 0x0
	.size	_ZZN9benchmark8internal8LogLevelEvE9log_level, 4

	.type	.L.str.49,@object               # @.str.49
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.49:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.49, 49

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"vector::_M_realloc_append"
	.size	.L.str.50, 26

	.type	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s,@object # @_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s
	.section	.rodata._ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s,"aG",@progbits,_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s,comdat
	.weak	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s
_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s:
	.asciz	"w"
	.size	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s, 2

	.type	_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11,@object # @_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11
	.section	.data.rel.ro._ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11,"awG",@progbits,_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11,comdat
	.weak	_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11
	.p2align	3, 0x0
_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11:
	.dword	.L.str.51
	.half	2048                            # 0x800
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.52
	.half	3072                            # 0xc00
	.byte	1                               # 0x1
	.space	1
	.space	4
	.dword	.L.str.27
	.half	8192                            # 0x2000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.53
	.half	3072                            # 0xc00
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.54
	.half	1024                            # 0x400
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.55
	.half	1                               # 0x1
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.56
	.half	2                               # 0x2
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.57
	.half	2048                            # 0x800
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.58
	.half	3076                            # 0xc04
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.59
	.half	512                             # 0x200
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.60
	.half	16384                           # 0x4000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.61
	.half	4                               # 0x4
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.62
	.half	8192                            # 0x2000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.63
	.half	256                             # 0x100
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.64
	.half	4096                            # 0x1000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.size	_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11, 240

	.type	.L.str.51,@object               # @.str.51
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.51:
	.asciz	"d"
	.size	.L.str.51, 2

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"w"
	.size	.L.str.52, 2

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"alnum"
	.size	.L.str.53, 6

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"alpha"
	.size	.L.str.54, 6

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"blank"
	.size	.L.str.55, 6

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"cntrl"
	.size	.L.str.56, 6

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"digit"
	.size	.L.str.57, 6

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"graph"
	.size	.L.str.58, 6

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"lower"
	.size	.L.str.59, 6

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"print"
	.size	.L.str.60, 6

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"punct"
	.size	.L.str.61, 6

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"space"
	.size	.L.str.62, 6

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"upper"
	.size	.L.str.63, 6

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"xdigit"
	.size	.L.str.64, 7

	.type	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s,@object # @_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s
	.section	.rodata._ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s,"aG",@progbits,_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s,comdat
	.weak	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s
_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s:
	.asciz	"w"
	.size	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s, 2

	.type	.L.str.65,@object               # @.str.65
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.65:
	.asciz	"basic_string::replace"
	.size	.L.str.65, 22

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"%s: __pos (which is %zu) > this->size() (which is %zu)"
	.size	.L.str.66, 55

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"conflicting grammar options"
	.size	.L.str.67, 28

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"^$\\.*+?()[]{}|"
	.size	.L.str.68, 15

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	".[\\*^$"
	.size	.L.str.69, 7

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	".[\\()*+?{|^$"
	.size	.L.str.70, 13

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	".[\\*^$\n"
	.size	.L.str.71, 8

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	".[\\()*+?{|^$\n"
	.size	.L.str.72, 14

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"invalid '\\cX' control character in regular expression"
	.size	.L.str.73, 54

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"Invalid '\\xNN' control character in regular expression"
	.size	.L.str.74, 55

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"Invalid '\\uNNNN' control character in regular expression"
	.size	.L.str.75, 57

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"Invalid escape at end of regular expression"
	.size	.L.str.76, 44

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"Invalid '(?...)' zero-width assertion in regular expression"
	.size	.L.str.77, 60

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"Incomplete '[[' character class in regular expression"
	.size	.L.str.78, 54

	.type	_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.dword	0
	.dword	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE, 113

	.type	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 52

	.type	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 16

	.type	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 47

	.type	_ZTSSt19_Sp_make_shared_tag,@object # @_ZTSSt19_Sp_make_shared_tag
	.section	.rodata._ZTSSt19_Sp_make_shared_tag,"aG",@progbits,_ZTSSt19_Sp_make_shared_tag,comdat
	.weak	_ZTSSt19_Sp_make_shared_tag
_ZTSSt19_Sp_make_shared_tag:
	.asciz	"St19_Sp_make_shared_tag"
	.size	_ZTSSt19_Sp_make_shared_tag, 24

	.type	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,@object # @_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.section	.rodata._ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,"aG",@progbits,_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,comdat
	.weak	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.p2align	3, 0x0
_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag:
	.space	16
	.size	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag, 16

	.type	.L.str.79,@object               # @.str.79
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.79:
	.asciz	"Number of NFA states exceeds limit. Please use shorter regex string, or use smaller brace expression, or make _GLIBCXX_REGEX_STATE_LIMIT larger."
	.size	.L.str.79, 145

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE, 70

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE, 70

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE, 70

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE, 70

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 67

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 67

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 67

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 67

	.type	.L.str.80,@object               # @.str.80
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.80:
	.asciz	"Unexpected back-reference in polynomial mode."
	.size	.L.str.80, 46

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"Back-reference index exceeds current sub-expression count."
	.size	.L.str.81, 59

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"Back-reference referred to an opened sub-expression."
	.size	.L.str.82, 53

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"invalid back reference"
	.size	.L.str.83, 23

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"basic_string: construction from null is not valid"
	.size	.L.str.84, 50

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"Invalid character class."
	.size	.L.str.85, 25

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 70

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 70

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 70

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 70

	.type	.L.str.86,@object               # @.str.86
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.86:
	.asciz	"Invalid start of '[x-x]' range in regular expression"
	.size	.L.str.86, 53

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"Invalid end of '[x-x]' range in regular expression"
	.size	.L.str.87, 51

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	"Invalid location of '-' within '[...]' in POSIX regular expression"
	.size	.L.str.88, 67

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"Unexpected character within '[...]' in regular expression"
	.size	.L.str.89, 58

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"Invalid collate element."
	.size	.L.str.90, 25

	.type	_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames,@object # @_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames
	.section	.data._ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames,"awG",@progbits,_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames,comdat
	.weak	_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames
	.p2align	3, 0x0
_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames:
	.dword	.L.str.91
	.dword	.L.str.92
	.dword	.L.str.93
	.dword	.L.str.94
	.dword	.L.str.95
	.dword	.L.str.96
	.dword	.L.str.97
	.dword	.L.str.98
	.dword	.L.str.99
	.dword	.L.str.100
	.dword	.L.str.101
	.dword	.L.str.102
	.dword	.L.str.103
	.dword	.L.str.104
	.dword	.L.str.105
	.dword	.L.str.106
	.dword	.L.str.107
	.dword	.L.str.108
	.dword	.L.str.109
	.dword	.L.str.110
	.dword	.L.str.111
	.dword	.L.str.112
	.dword	.L.str.113
	.dword	.L.str.114
	.dword	.L.str.115
	.dword	.L.str.116
	.dword	.L.str.117
	.dword	.L.str.118
	.dword	.L.str.119
	.dword	.L.str.120
	.dword	.L.str.121
	.dword	.L.str.122
	.dword	.L.str.62
	.dword	.L.str.123
	.dword	.L.str.124
	.dword	.L.str.125
	.dword	.L.str.126
	.dword	.L.str.127
	.dword	.L.str.128
	.dword	.L.str.129
	.dword	.L.str.130
	.dword	.L.str.131
	.dword	.L.str.132
	.dword	.L.str.133
	.dword	.L.str.134
	.dword	.L.str.135
	.dword	.L.str.136
	.dword	.L.str.137
	.dword	.L.str.138
	.dword	.L.str.139
	.dword	.L.str.140
	.dword	.L.str.141
	.dword	.L.str.142
	.dword	.L.str.143
	.dword	.L.str.144
	.dword	.L.str.145
	.dword	.L.str.146
	.dword	.L.str.147
	.dword	.L.str.148
	.dword	.L.str.149
	.dword	.L.str.150
	.dword	.L.str.151
	.dword	.L.str.152
	.dword	.L.str.153
	.dword	.L.str.154
	.dword	.L.str.155
	.dword	.L.str.156
	.dword	.L.str.157
	.dword	.L.str.158
	.dword	.L.str.159
	.dword	.L.str.160
	.dword	.L.str.161
	.dword	.L.str.162
	.dword	.L.str.163
	.dword	.L.str.164
	.dword	.L.str.165
	.dword	.L.str.166
	.dword	.L.str.167
	.dword	.L.str.168
	.dword	.L.str.169
	.dword	.L.str.170
	.dword	.L.str.171
	.dword	.L.str.172
	.dword	.L.str.173
	.dword	.L.str.174
	.dword	.L.str.175
	.dword	.L.str.176
	.dword	.L.str.177
	.dword	.L.str.178
	.dword	.L.str.179
	.dword	.L.str.180
	.dword	.L.str.181
	.dword	.L.str.182
	.dword	.L.str.183
	.dword	.L.str.184
	.dword	.L.str.185
	.dword	.L.str.186
	.dword	.L.str.187
	.dword	.L.str.188
	.dword	.L.str.189
	.dword	.L.str.51
	.dword	.L.str.190
	.dword	.L.str.191
	.dword	.L.str.192
	.dword	.L.str.193
	.dword	.L.str.194
	.dword	.L.str.195
	.dword	.L.str.196
	.dword	.L.str.197
	.dword	.L.str.198
	.dword	.L.str.199
	.dword	.L.str.200
	.dword	.L.str.201
	.dword	.L.str.202
	.dword	.L.str.203
	.dword	.L.str.27
	.dword	.L.str.204
	.dword	.L.str.205
	.dword	.L.str.206
	.dword	.L.str.52
	.dword	.L.str.207
	.dword	.L.str.208
	.dword	.L.str.209
	.dword	.L.str.210
	.dword	.L.str.211
	.dword	.L.str.212
	.dword	.L.str.213
	.dword	.L.str.214
	.size	_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames, 1024

	.type	.L.str.91,@object               # @.str.91
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.91:
	.asciz	"NUL"
	.size	.L.str.91, 4

	.type	.L.str.92,@object               # @.str.92
.L.str.92:
	.asciz	"SOH"
	.size	.L.str.92, 4

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	"STX"
	.size	.L.str.93, 4

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"ETX"
	.size	.L.str.94, 4

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"EOT"
	.size	.L.str.95, 4

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"ENQ"
	.size	.L.str.96, 4

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	"ACK"
	.size	.L.str.97, 4

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"alert"
	.size	.L.str.98, 6

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	"backspace"
	.size	.L.str.99, 10

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	"tab"
	.size	.L.str.100, 4

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	"newline"
	.size	.L.str.101, 8

	.type	.L.str.102,@object              # @.str.102
.L.str.102:
	.asciz	"vertical-tab"
	.size	.L.str.102, 13

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"form-feed"
	.size	.L.str.103, 10

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	"carriage-return"
	.size	.L.str.104, 16

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	"SO"
	.size	.L.str.105, 3

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	"SI"
	.size	.L.str.106, 3

	.type	.L.str.107,@object              # @.str.107
.L.str.107:
	.asciz	"DLE"
	.size	.L.str.107, 4

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"DC1"
	.size	.L.str.108, 4

	.type	.L.str.109,@object              # @.str.109
.L.str.109:
	.asciz	"DC2"
	.size	.L.str.109, 4

	.type	.L.str.110,@object              # @.str.110
.L.str.110:
	.asciz	"DC3"
	.size	.L.str.110, 4

	.type	.L.str.111,@object              # @.str.111
.L.str.111:
	.asciz	"DC4"
	.size	.L.str.111, 4

	.type	.L.str.112,@object              # @.str.112
.L.str.112:
	.asciz	"NAK"
	.size	.L.str.112, 4

	.type	.L.str.113,@object              # @.str.113
.L.str.113:
	.asciz	"SYN"
	.size	.L.str.113, 4

	.type	.L.str.114,@object              # @.str.114
.L.str.114:
	.asciz	"ETB"
	.size	.L.str.114, 4

	.type	.L.str.115,@object              # @.str.115
.L.str.115:
	.asciz	"CAN"
	.size	.L.str.115, 4

	.type	.L.str.116,@object              # @.str.116
.L.str.116:
	.asciz	"EM"
	.size	.L.str.116, 3

	.type	.L.str.117,@object              # @.str.117
.L.str.117:
	.asciz	"SUB"
	.size	.L.str.117, 4

	.type	.L.str.118,@object              # @.str.118
.L.str.118:
	.asciz	"ESC"
	.size	.L.str.118, 4

	.type	.L.str.119,@object              # @.str.119
.L.str.119:
	.asciz	"IS4"
	.size	.L.str.119, 4

	.type	.L.str.120,@object              # @.str.120
.L.str.120:
	.asciz	"IS3"
	.size	.L.str.120, 4

	.type	.L.str.121,@object              # @.str.121
.L.str.121:
	.asciz	"IS2"
	.size	.L.str.121, 4

	.type	.L.str.122,@object              # @.str.122
.L.str.122:
	.asciz	"IS1"
	.size	.L.str.122, 4

	.type	.L.str.123,@object              # @.str.123
.L.str.123:
	.asciz	"exclamation-mark"
	.size	.L.str.123, 17

	.type	.L.str.124,@object              # @.str.124
.L.str.124:
	.asciz	"quotation-mark"
	.size	.L.str.124, 15

	.type	.L.str.125,@object              # @.str.125
.L.str.125:
	.asciz	"number-sign"
	.size	.L.str.125, 12

	.type	.L.str.126,@object              # @.str.126
.L.str.126:
	.asciz	"dollar-sign"
	.size	.L.str.126, 12

	.type	.L.str.127,@object              # @.str.127
.L.str.127:
	.asciz	"percent-sign"
	.size	.L.str.127, 13

	.type	.L.str.128,@object              # @.str.128
.L.str.128:
	.asciz	"ampersand"
	.size	.L.str.128, 10

	.type	.L.str.129,@object              # @.str.129
.L.str.129:
	.asciz	"apostrophe"
	.size	.L.str.129, 11

	.type	.L.str.130,@object              # @.str.130
.L.str.130:
	.asciz	"left-parenthesis"
	.size	.L.str.130, 17

	.type	.L.str.131,@object              # @.str.131
.L.str.131:
	.asciz	"right-parenthesis"
	.size	.L.str.131, 18

	.type	.L.str.132,@object              # @.str.132
.L.str.132:
	.asciz	"asterisk"
	.size	.L.str.132, 9

	.type	.L.str.133,@object              # @.str.133
.L.str.133:
	.asciz	"plus-sign"
	.size	.L.str.133, 10

	.type	.L.str.134,@object              # @.str.134
.L.str.134:
	.asciz	"comma"
	.size	.L.str.134, 6

	.type	.L.str.135,@object              # @.str.135
.L.str.135:
	.asciz	"hyphen"
	.size	.L.str.135, 7

	.type	.L.str.136,@object              # @.str.136
.L.str.136:
	.asciz	"period"
	.size	.L.str.136, 7

	.type	.L.str.137,@object              # @.str.137
.L.str.137:
	.asciz	"slash"
	.size	.L.str.137, 6

	.type	.L.str.138,@object              # @.str.138
.L.str.138:
	.asciz	"zero"
	.size	.L.str.138, 5

	.type	.L.str.139,@object              # @.str.139
.L.str.139:
	.asciz	"one"
	.size	.L.str.139, 4

	.type	.L.str.140,@object              # @.str.140
.L.str.140:
	.asciz	"two"
	.size	.L.str.140, 4

	.type	.L.str.141,@object              # @.str.141
.L.str.141:
	.asciz	"three"
	.size	.L.str.141, 6

	.type	.L.str.142,@object              # @.str.142
.L.str.142:
	.asciz	"four"
	.size	.L.str.142, 5

	.type	.L.str.143,@object              # @.str.143
.L.str.143:
	.asciz	"five"
	.size	.L.str.143, 5

	.type	.L.str.144,@object              # @.str.144
.L.str.144:
	.asciz	"six"
	.size	.L.str.144, 4

	.type	.L.str.145,@object              # @.str.145
.L.str.145:
	.asciz	"seven"
	.size	.L.str.145, 6

	.type	.L.str.146,@object              # @.str.146
.L.str.146:
	.asciz	"eight"
	.size	.L.str.146, 6

	.type	.L.str.147,@object              # @.str.147
.L.str.147:
	.asciz	"nine"
	.size	.L.str.147, 5

	.type	.L.str.148,@object              # @.str.148
.L.str.148:
	.asciz	"colon"
	.size	.L.str.148, 6

	.type	.L.str.149,@object              # @.str.149
.L.str.149:
	.asciz	"semicolon"
	.size	.L.str.149, 10

	.type	.L.str.150,@object              # @.str.150
.L.str.150:
	.asciz	"less-than-sign"
	.size	.L.str.150, 15

	.type	.L.str.151,@object              # @.str.151
.L.str.151:
	.asciz	"equals-sign"
	.size	.L.str.151, 12

	.type	.L.str.152,@object              # @.str.152
.L.str.152:
	.asciz	"greater-than-sign"
	.size	.L.str.152, 18

	.type	.L.str.153,@object              # @.str.153
.L.str.153:
	.asciz	"question-mark"
	.size	.L.str.153, 14

	.type	.L.str.154,@object              # @.str.154
.L.str.154:
	.asciz	"commercial-at"
	.size	.L.str.154, 14

	.type	.L.str.155,@object              # @.str.155
.L.str.155:
	.asciz	"A"
	.size	.L.str.155, 2

	.type	.L.str.156,@object              # @.str.156
.L.str.156:
	.asciz	"B"
	.size	.L.str.156, 2

	.type	.L.str.157,@object              # @.str.157
.L.str.157:
	.asciz	"C"
	.size	.L.str.157, 2

	.type	.L.str.158,@object              # @.str.158
.L.str.158:
	.asciz	"D"
	.size	.L.str.158, 2

	.type	.L.str.159,@object              # @.str.159
.L.str.159:
	.asciz	"E"
	.size	.L.str.159, 2

	.type	.L.str.160,@object              # @.str.160
.L.str.160:
	.asciz	"F"
	.size	.L.str.160, 2

	.type	.L.str.161,@object              # @.str.161
.L.str.161:
	.asciz	"G"
	.size	.L.str.161, 2

	.type	.L.str.162,@object              # @.str.162
.L.str.162:
	.asciz	"H"
	.size	.L.str.162, 2

	.type	.L.str.163,@object              # @.str.163
.L.str.163:
	.asciz	"I"
	.size	.L.str.163, 2

	.type	.L.str.164,@object              # @.str.164
.L.str.164:
	.asciz	"J"
	.size	.L.str.164, 2

	.type	.L.str.165,@object              # @.str.165
.L.str.165:
	.asciz	"K"
	.size	.L.str.165, 2

	.type	.L.str.166,@object              # @.str.166
.L.str.166:
	.asciz	"L"
	.size	.L.str.166, 2

	.type	.L.str.167,@object              # @.str.167
.L.str.167:
	.asciz	"M"
	.size	.L.str.167, 2

	.type	.L.str.168,@object              # @.str.168
.L.str.168:
	.asciz	"N"
	.size	.L.str.168, 2

	.type	.L.str.169,@object              # @.str.169
.L.str.169:
	.asciz	"O"
	.size	.L.str.169, 2

	.type	.L.str.170,@object              # @.str.170
.L.str.170:
	.asciz	"P"
	.size	.L.str.170, 2

	.type	.L.str.171,@object              # @.str.171
.L.str.171:
	.asciz	"Q"
	.size	.L.str.171, 2

	.type	.L.str.172,@object              # @.str.172
.L.str.172:
	.asciz	"R"
	.size	.L.str.172, 2

	.type	.L.str.173,@object              # @.str.173
.L.str.173:
	.asciz	"S"
	.size	.L.str.173, 2

	.type	.L.str.174,@object              # @.str.174
.L.str.174:
	.asciz	"T"
	.size	.L.str.174, 2

	.type	.L.str.175,@object              # @.str.175
.L.str.175:
	.asciz	"U"
	.size	.L.str.175, 2

	.type	.L.str.176,@object              # @.str.176
.L.str.176:
	.asciz	"V"
	.size	.L.str.176, 2

	.type	.L.str.177,@object              # @.str.177
.L.str.177:
	.asciz	"W"
	.size	.L.str.177, 2

	.type	.L.str.178,@object              # @.str.178
.L.str.178:
	.asciz	"X"
	.size	.L.str.178, 2

	.type	.L.str.179,@object              # @.str.179
.L.str.179:
	.asciz	"Y"
	.size	.L.str.179, 2

	.type	.L.str.180,@object              # @.str.180
.L.str.180:
	.asciz	"Z"
	.size	.L.str.180, 2

	.type	.L.str.181,@object              # @.str.181
.L.str.181:
	.asciz	"left-square-bracket"
	.size	.L.str.181, 20

	.type	.L.str.182,@object              # @.str.182
.L.str.182:
	.asciz	"backslash"
	.size	.L.str.182, 10

	.type	.L.str.183,@object              # @.str.183
.L.str.183:
	.asciz	"right-square-bracket"
	.size	.L.str.183, 21

	.type	.L.str.184,@object              # @.str.184
.L.str.184:
	.asciz	"circumflex"
	.size	.L.str.184, 11

	.type	.L.str.185,@object              # @.str.185
.L.str.185:
	.asciz	"underscore"
	.size	.L.str.185, 11

	.type	.L.str.186,@object              # @.str.186
.L.str.186:
	.asciz	"grave-accent"
	.size	.L.str.186, 13

	.type	.L.str.187,@object              # @.str.187
.L.str.187:
	.asciz	"a"
	.size	.L.str.187, 2

	.type	.L.str.188,@object              # @.str.188
.L.str.188:
	.asciz	"b"
	.size	.L.str.188, 2

	.type	.L.str.189,@object              # @.str.189
.L.str.189:
	.asciz	"c"
	.size	.L.str.189, 2

	.type	.L.str.190,@object              # @.str.190
.L.str.190:
	.asciz	"e"
	.size	.L.str.190, 2

	.type	.L.str.191,@object              # @.str.191
.L.str.191:
	.asciz	"f"
	.size	.L.str.191, 2

	.type	.L.str.192,@object              # @.str.192
.L.str.192:
	.asciz	"g"
	.size	.L.str.192, 2

	.type	.L.str.193,@object              # @.str.193
.L.str.193:
	.asciz	"h"
	.size	.L.str.193, 2

	.type	.L.str.194,@object              # @.str.194
.L.str.194:
	.asciz	"i"
	.size	.L.str.194, 2

	.type	.L.str.195,@object              # @.str.195
.L.str.195:
	.asciz	"j"
	.size	.L.str.195, 2

	.type	.L.str.196,@object              # @.str.196
.L.str.196:
	.asciz	"k"
	.size	.L.str.196, 2

	.type	.L.str.197,@object              # @.str.197
.L.str.197:
	.asciz	"l"
	.size	.L.str.197, 2

	.type	.L.str.198,@object              # @.str.198
.L.str.198:
	.asciz	"m"
	.size	.L.str.198, 2

	.type	.L.str.199,@object              # @.str.199
.L.str.199:
	.asciz	"n"
	.size	.L.str.199, 2

	.type	.L.str.200,@object              # @.str.200
.L.str.200:
	.asciz	"o"
	.size	.L.str.200, 2

	.type	.L.str.201,@object              # @.str.201
.L.str.201:
	.asciz	"p"
	.size	.L.str.201, 2

	.type	.L.str.202,@object              # @.str.202
.L.str.202:
	.asciz	"q"
	.size	.L.str.202, 2

	.type	.L.str.203,@object              # @.str.203
.L.str.203:
	.asciz	"r"
	.size	.L.str.203, 2

	.type	.L.str.204,@object              # @.str.204
.L.str.204:
	.asciz	"t"
	.size	.L.str.204, 2

	.type	.L.str.205,@object              # @.str.205
.L.str.205:
	.asciz	"u"
	.size	.L.str.205, 2

	.type	.L.str.206,@object              # @.str.206
.L.str.206:
	.asciz	"v"
	.size	.L.str.206, 2

	.type	.L.str.207,@object              # @.str.207
.L.str.207:
	.asciz	"x"
	.size	.L.str.207, 2

	.type	.L.str.208,@object              # @.str.208
.L.str.208:
	.asciz	"y"
	.size	.L.str.208, 2

	.type	.L.str.209,@object              # @.str.209
.L.str.209:
	.asciz	"z"
	.size	.L.str.209, 2

	.type	.L.str.210,@object              # @.str.210
.L.str.210:
	.asciz	"left-curly-bracket"
	.size	.L.str.210, 19

	.type	.L.str.211,@object              # @.str.211
.L.str.211:
	.asciz	"vertical-line"
	.size	.L.str.211, 14

	.type	.L.str.212,@object              # @.str.212
.L.str.212:
	.asciz	"right-curly-bracket"
	.size	.L.str.212, 20

	.type	.L.str.213,@object              # @.str.213
.L.str.213:
	.asciz	"tilde"
	.size	.L.str.213, 6

	.type	.L.str.214,@object              # @.str.214
.L.str.214:
	.asciz	"DEL"
	.size	.L.str.214, 4

	.type	.L.str.215,@object              # @.str.215
.L.str.215:
	.asciz	"Invalid equivalence class."
	.size	.L.str.215, 27

	.type	.L.str.216,@object              # @.str.216
.L.str.216:
	.asciz	"Invalid range in bracket expression."
	.size	.L.str.216, 37

	.type	_ZSt19piecewise_construct,@object # @_ZSt19piecewise_construct
	.section	.rodata._ZSt19piecewise_construct,"aG",@progbits,_ZSt19piecewise_construct,comdat
	.weak	_ZSt19piecewise_construct
_ZSt19piecewise_construct:
	.space	1
	.size	_ZSt19piecewise_construct, 1

	.type	.L.str.217,@object              # @.str.217
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.217:
	.asciz	"cannot create std::deque larger than max_size()"
	.size	.L.str.217, 48

	.type	_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists,@object # @_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists
	.local	_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists
	.comm	_ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists,144,8
	.type	_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists,@object # @_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists
	.local	_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists
	.comm	_ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists,8,8
	.type	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11,@object # @_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11
	.local	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11
	.comm	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11,32,8
	.type	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11,@object # @_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11
	.local	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11
	.comm	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11,8,8
	.type	.L.str.218,@object              # @.str.218
.L.str.218:
	.asciz	"[0-9]*[.]?[0-9]+([eE][-+][0-9]+)?"
	.size	.L.str.218, 34

	.type	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11,@object # @_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11
	.local	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11
	.comm	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11,32,8
	.type	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11,@object # @_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11
	.local	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11
	.comm	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11,8,8
	.type	.L.str.219,@object              # @.str.219
.L.str.219:
	.asciz	"([0-9]+[.])?[0-9]+"
	.size	.L.str.219, 19

	.type	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11,@object # @_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11
	.local	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11
	.comm	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11,32,8
	.type	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11,@object # @_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11
	.local	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11
	.comm	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11,8,8
	.type	.L.str.220,@object              # @.str.220
.L.str.220:
	.asciz	"[0-9]+[.][0-9]{2}"
	.size	.L.str.220, 18

	.type	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11,@object # @_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11
	.local	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11
	.comm	_ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11,24,8
	.type	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11,@object # @_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11
	.local	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11
	.comm	_ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11,8,8
	.type	.L.str.221,@object              # @.str.221
.L.str.221:
	.asciz	"%float"
	.size	.L.str.221, 7

	.type	.L.str.222,@object              # @.str.222
.L.str.222:
	.asciz	"%hrfloat"
	.size	.L.str.222, 9

	.type	.L.str.223,@object              # @.str.223
.L.str.223:
	.asciz	"[0-9]*[.]?[0-9]+([eE][-+][0-9]+)?[kKMGTPEZYmunpfazy]?i?"
	.size	.L.str.223, 56

	.type	.L.str.224,@object              # @.str.224
.L.str.224:
	.asciz	"%percentage"
	.size	.L.str.224, 12

	.type	.L.str.225,@object              # @.str.225
.L.str.225:
	.asciz	"%int"
	.size	.L.str.225, 5

	.type	.L.str.226,@object              # @.str.226
.L.str.226:
	.asciz	"[ ]*[0-9]+"
	.size	.L.str.226, 11

	.type	.L.str.227,@object              # @.str.227
.L.str.227:
	.asciz	" %s "
	.size	.L.str.227, 5

	.type	.L.str.228,@object              # @.str.228
.L.str.228:
	.asciz	"[ ]+"
	.size	.L.str.228, 5

	.type	.L.str.229,@object              # @.str.229
.L.str.229:
	.asciz	"%time"
	.size	.L.str.229, 6

	.type	.L.str.230,@object              # @.str.230
.L.str.230:
	.asciz	"[ ]*"
	.size	.L.str.230, 5

	.type	.L.str.231,@object              # @.str.231
.L.str.231:
	.asciz	"[ ]+ns"
	.size	.L.str.231, 7

	.type	.L.str.232,@object              # @.str.232
.L.str.232:
	.asciz	"%console_report"
	.size	.L.str.232, 16

	.type	.L.str.233,@object              # @.str.233
.L.str.233:
	.asciz	"[ ]+ns [ ]*"
	.size	.L.str.233, 12

	.type	.L.str.234,@object              # @.str.234
.L.str.234:
	.asciz	"[ ]+ns [ ]*[0-9]+"
	.size	.L.str.234, 18

	.type	.L.str.235,@object              # @.str.235
.L.str.235:
	.asciz	"%console_percentage_report"
	.size	.L.str.235, 27

	.type	.L.str.236,@object              # @.str.236
.L.str.236:
	.asciz	"[ ]+% [ ]*"
	.size	.L.str.236, 11

	.type	.L.str.237,@object              # @.str.237
.L.str.237:
	.asciz	"[ ]+% [ ]*[0-9]+"
	.size	.L.str.237, 17

	.type	.L.str.238,@object              # @.str.238
.L.str.238:
	.asciz	"%console_us_report"
	.size	.L.str.238, 19

	.type	.L.str.239,@object              # @.str.239
.L.str.239:
	.asciz	"[ ]+us [ ]*"
	.size	.L.str.239, 12

	.type	.L.str.240,@object              # @.str.240
.L.str.240:
	.asciz	"[ ]+us [ ]*[0-9]+"
	.size	.L.str.240, 18

	.type	.L.str.241,@object              # @.str.241
.L.str.241:
	.asciz	"%console_ms_report"
	.size	.L.str.241, 19

	.type	.L.str.242,@object              # @.str.242
.L.str.242:
	.asciz	"[ ]+ms [ ]*"
	.size	.L.str.242, 12

	.type	.L.str.243,@object              # @.str.243
.L.str.243:
	.asciz	"[ ]+ms [ ]*[0-9]+"
	.size	.L.str.243, 18

	.type	.L.str.244,@object              # @.str.244
.L.str.244:
	.asciz	"%console_s_report"
	.size	.L.str.244, 18

	.type	.L.str.245,@object              # @.str.245
.L.str.245:
	.asciz	"[ ]+s [ ]*"
	.size	.L.str.245, 11

	.type	.L.str.246,@object              # @.str.246
.L.str.246:
	.asciz	"[ ]+s [ ]*[0-9]+"
	.size	.L.str.246, 17

	.type	.L.str.247,@object              # @.str.247
.L.str.247:
	.asciz	"%console_time_only_report"
	.size	.L.str.247, 26

	.type	.L.str.248,@object              # @.str.248
.L.str.248:
	.asciz	"%console_us_time_only_report"
	.size	.L.str.248, 29

	.type	.L.str.249,@object              # @.str.249
.L.str.249:
	.asciz	"[ ]+us"
	.size	.L.str.249, 7

	.type	.L.str.250,@object              # @.str.250
.L.str.250:
	.asciz	"%csv_header"
	.size	.L.str.250, 12

	.type	.L.str.251,@object              # @.str.251
.L.str.251:
	.asciz	"name,iterations,real_time,cpu_time,time_unit,bytes_per_second,items_per_second,label,error_occurred,error_message"
	.size	.L.str.251, 114

	.type	.L.str.252,@object              # @.str.252
.L.str.252:
	.asciz	"%csv_report"
	.size	.L.str.252, 12

	.type	.L.str.253,@object              # @.str.253
.L.str.253:
	.asciz	"[0-9]+,"
	.size	.L.str.253, 8

	.type	.L.str.254,@object              # @.str.254
.L.str.254:
	.asciz	","
	.size	.L.str.254, 2

	.type	.L.str.255,@object              # @.str.255
.L.str.255:
	.asciz	",ns,,,,,"
	.size	.L.str.255, 9

	.type	.L.str.256,@object              # @.str.256
.L.str.256:
	.asciz	"%csv_us_report"
	.size	.L.str.256, 15

	.type	.L.str.257,@object              # @.str.257
.L.str.257:
	.asciz	",us,,,,,"
	.size	.L.str.257, 9

	.type	.L.str.258,@object              # @.str.258
.L.str.258:
	.asciz	"%csv_ms_report"
	.size	.L.str.258, 15

	.type	.L.str.259,@object              # @.str.259
.L.str.259:
	.asciz	",ms,,,,,"
	.size	.L.str.259, 9

	.type	.L.str.260,@object              # @.str.260
.L.str.260:
	.asciz	"%csv_s_report"
	.size	.L.str.260, 14

	.type	.L.str.261,@object              # @.str.261
.L.str.261:
	.asciz	",s,,,,,"
	.size	.L.str.261, 8

	.type	.L.str.262,@object              # @.str.262
.L.str.262:
	.asciz	"%csv_cv_report"
	.size	.L.str.262, 15

	.type	.L.str.263,@object              # @.str.263
.L.str.263:
	.asciz	",,,,,,"
	.size	.L.str.263, 7

	.type	.L.str.264,@object              # @.str.264
.L.str.264:
	.asciz	"%csv_bytes_report"
	.size	.L.str.264, 18

	.type	.L.str.265,@object              # @.str.265
.L.str.265:
	.asciz	",ns,"
	.size	.L.str.265, 5

	.type	.L.str.266,@object              # @.str.266
.L.str.266:
	.asciz	",,,,"
	.size	.L.str.266, 5

	.type	.L.str.267,@object              # @.str.267
.L.str.267:
	.asciz	"%csv_items_report"
	.size	.L.str.267, 18

	.type	.L.str.268,@object              # @.str.268
.L.str.268:
	.asciz	",ns,,"
	.size	.L.str.268, 6

	.type	.L.str.269,@object              # @.str.269
.L.str.269:
	.asciz	",,,"
	.size	.L.str.269, 4

	.type	.L.str.270,@object              # @.str.270
.L.str.270:
	.asciz	"%csv_bytes_items_report"
	.size	.L.str.270, 24

	.type	.L.str.271,@object              # @.str.271
.L.str.271:
	.asciz	"%csv_label_report_begin"
	.size	.L.str.271, 24

	.type	.L.str.272,@object              # @.str.272
.L.str.272:
	.asciz	",ns,,,"
	.size	.L.str.272, 7

	.type	.L.str.273,@object              # @.str.273
.L.str.273:
	.asciz	"%csv_label_report_end"
	.size	.L.str.273, 22

	.type	.L.str.274,@object              # @.str.274
.L.str.274:
	.asciz	",,"
	.size	.L.str.274, 3

	.type	.L.str.275,@object              # @.str.275
.L.str.275:
	.asciz	"basic_string::append"
	.size	.L.str.275, 21

	.type	_ZTVN8internal12_GLOBAL__N_112TestReporterE,@object # @_ZTVN8internal12_GLOBAL__N_112TestReporterE
	.section	.data.rel.ro,"aw",@progbits
	.p2align	3, 0x0
_ZTVN8internal12_GLOBAL__N_112TestReporterE:
	.dword	0
	.dword	_ZTIN8internal12_GLOBAL__N_112TestReporterE
	.dword	_ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE
	.dword	_ZN9benchmark17BenchmarkReporter16ReportRunsConfigEdbl
	.dword	_ZN8internal12_GLOBAL__N_112TestReporter10ReportRunsERKSt6vectorIN9benchmark17BenchmarkReporter3RunESaIS5_EE
	.dword	_ZN8internal12_GLOBAL__N_112TestReporter8FinalizeEv
	.dword	_ZN8internal12_GLOBAL__N_112TestReporterD2Ev
	.dword	_ZN8internal12_GLOBAL__N_112TestReporterD0Ev
	.size	_ZTVN8internal12_GLOBAL__N_112TestReporterE, 64

	.type	_ZTIN8internal12_GLOBAL__N_112TestReporterE,@object # @_ZTIN8internal12_GLOBAL__N_112TestReporterE
	.p2align	3, 0x0
_ZTIN8internal12_GLOBAL__N_112TestReporterE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN8internal12_GLOBAL__N_112TestReporterE
	.dword	_ZTIN9benchmark17BenchmarkReporterE
	.size	_ZTIN8internal12_GLOBAL__N_112TestReporterE, 24

	.type	_ZTSN8internal12_GLOBAL__N_112TestReporterE,@object # @_ZTSN8internal12_GLOBAL__N_112TestReporterE
	.section	.rodata,"a",@progbits
_ZTSN8internal12_GLOBAL__N_112TestReporterE:
	.asciz	"N8internal12_GLOBAL__N_112TestReporterE"
	.size	_ZTSN8internal12_GLOBAL__N_112TestReporterE, 40

	.type	.L.str.279,@object              # @.str.279
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.279:
	.asciz	"first || new_ret == last_ret"
	.size	.L.str.279, 29

	.type	.L__func__._ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE,@object # @__func__._ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE
.L__func__._ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE:
	.asciz	"ReportContext"
	.size	.L__func__._ZN8internal12_GLOBAL__N_112TestReporter13ReportContextERKN9benchmark17BenchmarkReporter7ContextE, 14

	.type	.L.str.280,@object              # @.str.280
.L.str.280:
	.asciz	"Reports return different values for ReportContext"
	.size	.L.str.280, 50

	.type	.L.str.281,@object              # @.str.281
.L.str.281:
	.asciz	"remaining_output.good()"
	.size	.L.str.281, 24

	.type	.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE,@object # @__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE
.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE:
	.asciz	"CheckCase"
	.size	.L__func__._ZN8internal12_GLOBAL__N_19CheckCaseERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERK8TestCaseRKSt6vectorIS8_SaIS8_EE, 10

	.type	.L.str.282,@object              # @.str.282
.L.str.282:
	.asciz	"!NC.regex->Match(line)"
	.size	.L.str.282, 23

	.type	.L.str.283,@object              # @.str.283
.L.str.283:
	.asciz	"Unexpected match for line \""
	.size	.L.str.283, 28

	.type	.L.str.284,@object              # @.str.284
.L.str.284:
	.asciz	"\" for MR_Not regex \""
	.size	.L.str.284, 21

	.type	.L.str.285,@object              # @.str.285
.L.str.285:
	.asciz	"\n    actual regex string \""
	.size	.L.str.285, 27

	.type	.L.str.286,@object              # @.str.286
.L.str.286:
	.asciz	"\n    started matching near: "
	.size	.L.str.286, 29

	.type	.L.str.287,@object              # @.str.287
.L.str.287:
	.asciz	"TC.match_rule != MR_Next"
	.size	.L.str.287, 25

	.type	.L.str.288,@object              # @.str.288
.L.str.288:
	.asciz	"Expected line \""
	.size	.L.str.288, 16

	.type	.L.str.289,@object              # @.str.289
.L.str.289:
	.asciz	"\" to match regex \""
	.size	.L.str.289, 19

	.type	.L.str.290,@object              # @.str.290
.L.str.290:
	.asciz	"remaining_output.eof() == false"
	.size	.L.str.290, 32

	.type	.L.str.291,@object              # @.str.291
.L.str.291:
	.asciz	"End of output reached before match for regex \""
	.size	.L.str.291, 47

	.type	.L.str.292,@object              # @.str.292
.L.str.292:
	.asciz	"\" was found"
	.size	.L.str.292, 12

	.type	.L.str.293,@object              # @.str.293
.L.str.293:
	.asciz	"Failed to create unique temporary file name"
	.size	.L.str.293, 44

	.type	.L.str.294,@object              # @.str.294
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.294:
	.asciz	"test.%%%%%%"
	.size	.L.str.294, 12

	.type	_ZZL13RandomHexCharvE2rd,@object # @_ZZL13RandomHexCharvE2rd
	.local	_ZZL13RandomHexCharvE2rd
	.comm	_ZZL13RandomHexCharvE2rd,5000,8
	.type	_ZGVZL13RandomHexCharvE2rd,@object # @_ZGVZL13RandomHexCharvE2rd
	.local	_ZGVZL13RandomHexCharvE2rd
	.comm	_ZGVZL13RandomHexCharvE2rd,8,8
	.type	_ZZL13RandomHexCharvE5mrand,@object # @_ZZL13RandomHexCharvE5mrand
	.local	_ZZL13RandomHexCharvE5mrand
	.comm	_ZZL13RandomHexCharvE5mrand,8,4
	.type	_ZGVZL13RandomHexCharvE5mrand,@object # @_ZGVZL13RandomHexCharvE5mrand
	.local	_ZGVZL13RandomHexCharvE5mrand
	.comm	_ZGVZL13RandomHexCharvE5mrand,8,8
	.type	.L.str.295,@object              # @.str.295
	.p2align	3, 0x0
.L.str.295:
	.asciz	"default"
	.size	.L.str.295, 8

	.type	.L.str.296,@object              # @.str.296
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.296:
	.asciz	"vector::reserve"
	.size	.L.str.296, 16

	.type	.L.str.297,@object              # @.str.297
.L.str.297:
	.asciz	"basic_string::substr"
	.size	.L.str.297, 21

	.type	.L.str.299,@object              # @.str.299
.L.str.299:
	.asciz	"sv != nullptr && !sv->empty()"
	.size	.L.str.299, 30

	.type	.L.str.300,@object              # @.str.300
.L.str.300:
	.asciz	"/home/tangyan/code/auto-tests/loong-opt-cov-ts/test-suite/llvm-test-suite/MicroBenchmarks/libs/benchmark/test/output_test.h"
	.size	.L.str.300, 124

	.type	.L__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.L__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"GetAs"
	.size	.L__func__._ZNK7Results5GetAsIdEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 6

	.hidden	_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.data.rel.ro._ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.dword	0
	.dword	_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.dword	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.dword	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.dword	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.dword	_ZNSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE, 56

	.hidden	_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.data.rel.ro._ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE, 24

	.hidden	_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.rodata._ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE, 82

	.type	.L.str.301,@object              # @.str.301
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.301:
	.asciz	"vector::_M_range_insert"
	.size	.L.str.301, 24

	.section	.init_array,"aw",@init_array
	.p2align	3, 0x0
	.dword	_GLOBAL__sub_I_output_test_helper.cc
	.data
	.p2align	3, 0x0
.L_ZTISt11regex_error.DW.stub:
	.dword	_ZTISt11regex_error
.L_ZTISt9exception.DW.stub:
	.dword	_ZTISt9exception
	.globl	_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
	.type	_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi,@function
	.hidden	_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
_ZN8TestCaseC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi = _ZN8TestCaseC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.dword	__gxx_personality_v0
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _ZN9benchmark16PrintDefaultHelpEv
	.addrsig_sym _ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.addrsig_sym _ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym __cxx_global_array_dtor
	.addrsig_sym _GLOBAL__sub_I_output_test_helper.cc
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZZN8internal17GetResultsCheckerEvE2rc
	.addrsig_sym _ZGVZN8internal17GetResultsCheckerEvE2rc
	.addrsig_sym __dso_handle
	.addrsig_sym _ZSt4cout
	.addrsig_sym _ZSt4cerr
	.addrsig_sym _ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.addrsig_sym _ZZN9benchmark8internal19GetErrorLogInstanceEvE9error_log
	.addrsig_sym _ZGVZN9benchmark8internal19GetErrorLogInstanceEvE9error_log
	.addrsig_sym _ZSt4clog
	.addrsig_sym _ZNSt5ctypeIcE2idE
	.addrsig_sym _ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s
	.addrsig_sym _ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s
	.addrsig_sym _ZTISt11regex_error
	.addrsig_sym _ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt19_Sp_make_shared_tag
	.addrsig_sym _ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZTISt9exception
	.addrsig_sym _ZNSt7__cxx117collateIcE2idE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZSt19piecewise_construct
	.addrsig_sym _ZZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists
	.addrsig_sym _ZGVZN8internal12_GLOBAL__N_115GetTestCaseListE10TestCaseIDE5lists
	.addrsig_sym _ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11
	.addrsig_sym _ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE11safe_dec_reB5cxx11
	.addrsig_sym _ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11
	.addrsig_sym _ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE7time_reB5cxx11
	.addrsig_sym _ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11
	.addrsig_sym _ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE13percentage_reB5cxx11
	.addrsig_sym _ZZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11
	.addrsig_sym _ZGVZN8internal12_GLOBAL__N_116GetSubstitutionsB5cxx11EvE3mapB5cxx11
	.addrsig_sym _ZTIN8internal12_GLOBAL__N_112TestReporterE
	.addrsig_sym _ZTSN8internal12_GLOBAL__N_112TestReporterE
	.addrsig_sym _ZTIN9benchmark17BenchmarkReporterE
	.addrsig_sym _ZZL13RandomHexCharvE2rd
	.addrsig_sym _ZGVZL13RandomHexCharvE2rd
	.addrsig_sym _ZZL13RandomHexCharvE5mrand
	.addrsig_sym _ZGVZL13RandomHexCharvE5mrand
	.addrsig_sym _ZTISt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt23_Sp_counted_ptr_inplaceIN9benchmark5RegexESaIvELN9__gnu_cxx12_Lock_policyE2EE
