	.file	"benchmark_register.cc"
                                        # Start of file scope inline assembly
	.globl	_ZSt21ios_base_library_initv

                                        # End of file scope inline assembly
	.text
	.hidden	_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv # -- Begin function _ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv
	.globl	_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv
	.p2align	5
	.type	_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv,@function
_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv: # @_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv
	.cfi_startproc
# %bb.0:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	dbar	20
	beqz	$a0, .LBB0_2
# %bb.1:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	ret
.LBB0_2:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB0_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a1, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	vrepli.b	$vr0, 0
	vst	$vr0, $a1, 48
	vst	$vr0, $a1, 32
	vst	$vr0, $a1, 16
	vst	$vr0, $a1, 0
	pcalau12i	$a0, %pc_hi20(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	pcalau12i	$a2, %pc_hi20(__dso_handle)
	addi.d	$a2, $a2, %pc_lo12(__dso_handle)
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
.LBB0_4:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	ret
.Lfunc_end0:
	.size	_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv, .Lfunc_end0-_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal17BenchmarkFamiliesD2Ev,"axG",@progbits,_ZN9benchmark8internal17BenchmarkFamiliesD2Ev,comdat
	.hidden	_ZN9benchmark8internal17BenchmarkFamiliesD2Ev # -- Begin function _ZN9benchmark8internal17BenchmarkFamiliesD2Ev
	.weak	_ZN9benchmark8internal17BenchmarkFamiliesD2Ev
	.p2align	5
	.type	_ZN9benchmark8internal17BenchmarkFamiliesD2Ev,@function
_ZN9benchmark8internal17BenchmarkFamiliesD2Ev: # @_ZN9benchmark8internal17BenchmarkFamiliesD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	bne	$s0, $s1, .LBB1_4
# %bb.1:                                # %_ZSt8_DestroyIPSt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EES6_EvT_S8_RSaIT0_E.exit.i
	beqz	$s0, .LBB1_7
.LBB1_2:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB1_3:                                # %_ZSt8_DestroyISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EEEvPT_.exit.i.i
                                        #   in Loop: Header=BB1_4 Depth=1
	st.d	$zero, $s0, 0
	addi.d	$s0, $s0, 8
	beq	$s0, $s1, .LBB1_6
.LBB1_4:                                # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB1_3
# %bb.5:                                # %_ZNKSt14default_deleteIN9benchmark8internal9BenchmarkEEclEPS2_.exit.i.i.i.i
                                        #   in Loop: Header=BB1_4 Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 8
	jirl	$ra, $a1, 0
	b	.LBB1_3
.LBB1_6:                                # %_ZSt8_DestroyIPSt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EES6_EvT_S8_RSaIT0_E.exitthread-pre-split.i
	ld.d	$s0, $fp, 0
	bnez	$s0, .LBB1_2
.LBB1_7:                                # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1:
	.size	_ZN9benchmark8internal17BenchmarkFamiliesD2Ev, .Lfunc_end1-_ZN9benchmark8internal17BenchmarkFamiliesD2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE # -- Begin function _ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE
	.globl	_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE
	.p2align	5
	.type	_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE,@function
_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE: # @_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s5, $a1
	move	$s0, $a0
	addi.d	$fp, $a0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(pthread_mutex_lock)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB2_17
# %bb.1:                                # %_ZN9benchmark9MutexLockC2ERNS_5MutexE.exit
	ld.d	$s6, $s0, 8
	ld.d	$s2, $s0, 0
	ld.d	$a0, $s0, 16
	sub.d	$s3, $s6, $s2
	srai.d	$s1, $s3, 3
	beq	$s6, $a0, .LBB2_3
# %bb.2:
	ld.d	$a0, $s5, 0
	st.d	$a0, $s6, 0
	st.d	$zero, $s5, 0
	addi.d	$a0, $s6, 8
	st.d	$a0, $s0, 8
	b	.LBB2_16
.LBB2_3:
	addi.w	$s8, $zero, -8
	lu52i.d	$a0, $s8, 2047
	beq	$s3, $a0, .LBB2_18
# %bb.4:                                # %_ZNKSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a0, $zero, 1
	sltu	$a1, $a0, $s1
	masknez	$a0, $a0, $a1
	maskeqz	$a1, $s1, $a1
	or	$a0, $a1, $a0
	add.d	$a0, $a0, $s1
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 3
.Ltmp0:                                 # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1:                                 # EH_LABEL
# %bb.5:                                # %.noexc4
	move	$s4, $a0
	ld.d	$a0, $s5, 0
	stx.d	$a0, $s4, $s3
	st.d	$zero, $s5, 0
	move	$s5, $s4
	beq	$s2, $s6, .LBB2_13
# %bb.6:                                # %.lr.ph.i.i.i.i.i.i.preheader
	addi.d	$a1, $s3, -8
	ori	$a2, $zero, 88
	move	$s5, $s4
	move	$a0, $s2
	bltu	$a1, $a2, .LBB2_12
# %bb.7:                                # %vector.memcheck
	and	$a0, $a1, $s8
	addi.d	$a0, $a0, 8
	add.d	$a2, $s2, $a0
	bgeu	$s4, $a2, .LBB2_9
# %bb.8:                                # %vector.memcheck
	add.d	$a2, $s4, $a0
	move	$s5, $s4
	move	$a0, $s2
	bltu	$s2, $a2, .LBB2_12
.LBB2_9:                                # %vector.ph
	srli.d	$a0, $a1, 3
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 61, 2
	slli.d	$a2, $a0, 2
	slli.d	$a0, $a0, 5
	add.d	$s5, $s4, $a0
	add.d	$a0, $s2, $a0
	addi.d	$a3, $s2, 16
	addi.d	$a4, $s4, 16
	vrepli.b	$vr0, 0
	move	$a5, $a2
	.p2align	4, , 16
.LBB2_10:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr1, $a3, -16
	vld	$vr2, $a3, 0
	vst	$vr1, $a4, -16
	vst	$vr2, $a4, 0
	vst	$vr0, $a3, -16
	vst	$vr0, $a3, 0
	addi.d	$a3, $a3, 32
	addi.d	$a5, $a5, -4
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB2_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB2_13
	.p2align	4, , 16
.LBB2_12:                               # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 0
	st.d	$a1, $s5, 0
	st.d	$zero, $a0, 0
	addi.d	$a0, $a0, 8
	addi.d	$s5, $s5, 8
	bne	$a0, $s6, .LBB2_12
.LBB2_13:                               # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EE11_S_relocateEPS6_S9_S9_RS7_.exit.i.i.i
	beqz	$s2, .LBB2_15
# %bb.14:                               # %_ZNSt12_Vector_baseISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EE13_M_deallocateEPS6_m.exit.i.i.i.i
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2_15:                               # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EE17_M_realloc_appendIJS6_EEEvDpOT_.exit.i.i
	addi.d	$a0, $s5, 8
	st.d	$s4, $s0, 0
	st.d	$a0, $s0, 8
	alsl.d	$a0, $s7, $s4, 3
	st.d	$a0, $s0, 16
.LBB2_16:                               # %_ZN9benchmark9MutexLockD2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(pthread_mutex_unlock)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB2_17:
	pcaddu18i	$ra, %call36(_ZSt20__throw_system_errori)
	jirl	$ra, $ra, 0
.LBB2_18:
.Ltmp2:                                 # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp3:                                 # EH_LABEL
# %bb.19:                               # %.noexc
.LBB2_20:                               # %_ZN9benchmark9MutexLockD2Ev.exit6
.Ltmp4:                                 # EH_LABEL
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(pthread_mutex_unlock)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end2:
	.size	_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE, .Lfunc_end2-_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table2:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    # >> Call Site 1 <<
	.uleb128 .Ltmp0-.Lfunc_begin0           #   Call between .Lfunc_begin0 and .Ltmp0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp4-.Lfunc_begin0           #     jumps to .Ltmp4
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Ltmp2-.Ltmp1                  #   Call between .Ltmp1 and .Ltmp2
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2-.Lfunc_begin0           # >> Call Site 4 <<
	.uleb128 .Ltmp3-.Ltmp2                  #   Call between .Ltmp2 and .Ltmp3
	.uleb128 .Ltmp4-.Lfunc_begin0           #     jumps to .Ltmp4
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3-.Lfunc_begin0           # >> Call Site 5 <<
	.uleb128 .Lfunc_end2-.Ltmp3             #   Call between .Ltmp3 and .Lfunc_end2
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv # -- Begin function _ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv
	.globl	_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv
	.p2align	5
	.type	_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv,@function
_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv: # @_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	addi.d	$fp, $a0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(pthread_mutex_lock)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB3_10
# %bb.1:                                # %_ZN9benchmark9MutexLockC2ERNS_5MutexE.exit
	ld.d	$s1, $s0, 0
	ld.d	$s2, $s0, 8
	move	$a0, $s1
	beq	$s2, $s1, .LBB3_7
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s3, $s1
	b	.LBB3_4
	.p2align	4, , 16
.LBB3_3:                                # %_ZSt8_DestroyISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB3_4 Depth=1
	st.d	$zero, $s3, 0
	addi.d	$s3, $s3, 8
	beq	$s3, $s2, .LBB3_6
.LBB3_4:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s3, 0
	beqz	$a0, .LBB3_3
# %bb.5:                                # %_ZNKSt14default_deleteIN9benchmark8internal9BenchmarkEEclEPS2_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB3_4 Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 8
	jirl	$ra, $a1, 0
	b	.LBB3_3
.LBB3_6:                                # %_ZSt8_DestroyIPSt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EES6_EvT_S8_RSaIT0_E.exit.i.i
	ld.d	$a0, $s0, 0
	st.d	$s1, $s0, 8
.LBB3_7:                                # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EE5clearEv.exit
	ld.d	$a1, $s0, 16
	sub.d	$a1, $a1, $a0
	srai.d	$a1, $a1, 3
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	beq	$a1, $a0, .LBB3_9
# %bb.8:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_)
	jirl	$ra, $ra, 0
.LBB3_9:                                # %_ZN9benchmark9MutexLockD2Ev.exit
	move	$a0, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(pthread_mutex_unlock)
	jr	$t8
.LBB3_10:
	pcaddu18i	$ra, %call36(_ZSt20__throw_system_errori)
	jirl	$ra, $ra, 0
.Lfunc_end3:
	.size	_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv, .Lfunc_end3-_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo # -- Begin function _ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo
	.globl	_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo
	.p2align	5
	.type	_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo,@function
_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo: # @_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	addi.d	$sp, $sp, -864
	.cfi_def_cfa_offset 864
	st.d	$ra, $sp, 856                   # 8-byte Folded Spill
	st.d	$fp, $sp, 848                   # 8-byte Folded Spill
	st.d	$s0, $sp, 840                   # 8-byte Folded Spill
	st.d	$s1, $sp, 832                   # 8-byte Folded Spill
	st.d	$s2, $sp, 824                   # 8-byte Folded Spill
	st.d	$s3, $sp, 816                   # 8-byte Folded Spill
	st.d	$s4, $sp, 808                   # 8-byte Folded Spill
	st.d	$s5, $sp, 800                   # 8-byte Folded Spill
	st.d	$s6, $sp, 792                   # 8-byte Folded Spill
	st.d	$s7, $sp, 784                   # 8-byte Folded Spill
	st.d	$s8, $sp, 776                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a3, $sp, 64                    # 8-byte Folded Spill
	move	$s4, $a2
	move	$s0, $a1
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	ld.b	$a0, $a0, 0
	dbar	20
	beqz	$a0, .LBB4_169
.LBB4_1:                                # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	addi.d	$a0, $sp, 728
	st.d	$a0, $sp, 712
	st.d	$zero, $sp, 720
	st.b	$zero, $sp, 728
	st.b	$zero, $sp, 672
	ori	$a0, $zero, 16
	st.w	$a0, $sp, 680
	addi.d	$a0, $sp, 688
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 176                  # 16-byte Folded Spill
	vst	$vr0, $sp, 696
	ld.bu	$s6, $a0, 0
	ori	$a0, $zero, 45
	bne	$s6, $a0, .LBB4_3
# %bb.2:
	ld.d	$a0, $s0, 8
	sltu	$a2, $zero, $a0
.Ltmp5:                                 # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp6:                                 # EH_LABEL
.LBB4_3:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKc.exit
.Ltmp7:                                 # EH_LABEL
	addi.d	$a0, $sp, 672
	addi.d	$a2, $sp, 712
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
.Ltmp8:                                 # EH_LABEL
# %bb.4:
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	beqz	$a0, .LBB4_147
# %bb.5:
.Ltmp24:                                # EH_LABEL
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp25:                                # EH_LABEL
# %bb.6:
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	ori	$a1, $zero, 1
	st.d	$a0, $sp, 120                   # 8-byte Folded Spill
	st.w	$a1, $a0, 0
	addi.d	$a0, $fp, 24
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(pthread_mutex_lock)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB4_171
# %bb.7:                                # %_ZN9benchmark9MutexLockC2ERNS_5MutexE.exit
	ld.d	$s8, $fp, 0
	ld.d	$a0, $fp, 8
	ld.d	$s7, $sp, 120                   # 8-byte Folded Reload
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	beq	$s8, $a0, .LBB4_152
# %bb.8:                                # %.lr.ph220
	st.d	$zero, $sp, 208                 # 8-byte Folded Spill
	addi.d	$a0, $s7, 4
	st.d	$a0, $sp, 96                    # 8-byte Folded Spill
	addi.d	$s5, $sp, 232
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a0, $a0, -1366
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	lu12i.w	$a0, -474827
	ori	$a0, $a0, 541
	lu32i.d	$a0, -19785
	lu52i.d	$a0, $a0, 540
	st.d	$a0, $sp, 152                   # 8-byte Folded Spill
	lu12i.w	$a0, -79138
	ori	$a0, $a0, 772
	lu32i.d	$a0, -178061
	lu52i.d	$a0, $a0, 4
	st.d	$a0, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	b	.LBB4_11
	.p2align	4, , 16
.LBB4_9:                                #   in Loop: Header=BB4_11 Depth=1
	ld.d	$s2, $sp, 208                   # 8-byte Folded Reload
.LBB4_10:                               # %.loopexit184
                                        #   in Loop: Header=BB4_11 Depth=1
	addi.d	$s8, $s8, 8
	st.d	$s2, $sp, 208                   # 8-byte Folded Spill
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	beq	$s8, $a0, .LBB4_152
.LBB4_11:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_43 Depth 2
                                        #       Child Loop BB4_47 Depth 3
                                        #         Child Loop BB4_101 Depth 4
	ld.d	$fp, $s8, 0
	beqz	$fp, .LBB4_9
# %bb.12:                               #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $fp, 72
	ld.d	$a1, $fp, 80
	beq	$a0, $a1, .LBB4_14
# %bb.13:                               #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a2, $a0, 8
	ld.d	$a3, $a0, 0
	ori	$a4, $zero, 3
	ld.d	$s3, $sp, 56                    # 8-byte Folded Reload
	b	.LBB4_15
	.p2align	4, , 16
.LBB4_14:                               #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a3, $fp, 48
	ld.d	$a2, $fp, 56
	ori	$a4, $zero, 5
	ld.d	$s3, $sp, 56                    # 8-byte Folded Reload
	beq	$a3, $a2, .LBB4_16
.LBB4_15:                               # %_ZNK9benchmark8internal9Benchmark7ArgsCntEv.exit
                                        #   in Loop: Header=BB4_11 Depth=1
	sub.d	$a2, $a2, $a3
	sra.d	$a2, $a2, $a4
	addi.w	$a3, $zero, -1
	lu32i.d	$a3, 0
	and	$a2, $a2, $a3
	bne	$a2, $a3, .LBB4_29
.LBB4_16:                               # %_ZNK9benchmark8internal9Benchmark7ArgsCntEv.exit.thread
                                        #   in Loop: Header=BB4_11 Depth=1
	st.d	$zero, $sp, 264
	vld	$vr0, $sp, 176                  # 16-byte Folded Reload
	vst	$vr0, $sp, 248
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.b	$a0, $a0, 0
	dbar	20
	beqz	$a0, .LBB4_145
.LBB4_17:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit.i
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$s2, $fp, 80
	ld.d	$a0, $fp, 88
	beq	$s2, $a0, .LBB4_21
# %bb.18:                               #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $sp, 256
	ld.d	$a1, $sp, 248
	sub.d	$s1, $a0, $a1
	st.d	$zero, $s2, 16
	vld	$vr0, $sp, 176                  # 16-byte Folded Reload
	vst	$vr0, $s2, 0
	beq	$a0, $a1, .LBB4_23
# %bb.19:                               # %_ZNSt15__new_allocatorIlE8allocateEmPKv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB4_11 Depth=1
.Ltmp30:                                # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp31:                                # EH_LABEL
# %bb.20:                               #   in Loop: Header=BB4_11 Depth=1
	move	$s0, $a0
	move	$s7, $fp
	b	.LBB4_24
.LBB4_21:                               #   in Loop: Header=BB4_11 Depth=1
.Ltmp32:                                # EH_LABEL
	addi.d	$a0, $fp, 72
	addi.d	$a1, $sp, 248
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp33:                                # EH_LABEL
# %bb.22:                               # %._ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE.exit_crit_edge
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$fp, $sp, 248
	bnez	$fp, .LBB4_27
	b	.LBB4_28
.LBB4_23:                               #   in Loop: Header=BB4_11 Depth=1
	move	$s7, $fp
	move	$s0, $zero
.LBB4_24:                               # %.noexc74
                                        #   in Loop: Header=BB4_11 Depth=1
	st.d	$s0, $s2, 0
	st.d	$s0, $s2, 8
	ld.d	$fp, $sp, 248
	ld.d	$a0, $sp, 256
	add.d	$a1, $s0, $s1
	sub.d	$s1, $a0, $fp
	st.d	$a1, $s2, 16
	blez	$s1, .LBB4_26
# %bb.25:                               #   in Loop: Header=BB4_11 Depth=1
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s0, $s0, $s1
.LBB4_26:                               # %_ZNSt6vectorIlSaIlEEC2ERKS1_.exit.i.i
                                        #   in Loop: Header=BB4_11 Depth=1
	st.d	$s0, $s2, 8
	ld.d	$a0, $s7, 80
	addi.d	$a0, $a0, 24
	st.d	$a0, $s7, 80
	beqz	$fp, .LBB4_28
.LBB4_27:                               #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $sp, 264
	sub.d	$a1, $a0, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_28:                               # %_ZNSt6vectorIlSaIlEED2Ev.exit
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$fp, $s8, 0
	ld.d	$a1, $fp, 80
	ld.d	$a0, $fp, 72
.LBB4_29:                               # %.cont.cont
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a4, $fp, 184
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	ld.d	$a3, $fp, 192
	xor	$a2, $a4, $a3
	sltui	$a2, $a2, 1
	sub.d	$a0, $a1, $a0
	srli.d	$a0, $a0, 3
	st.d	$a3, $sp, 104                   # 8-byte Folded Spill
	masknez	$a1, $a3, $a2
	ld.d	$a3, $sp, 96                    # 8-byte Folded Reload
	maskeqz	$a3, $a3, $a2
	or	$a1, $a3, $a1
	st.d	$a4, $sp, 112                   # 8-byte Folded Spill
	masknez	$a3, $a4, $a2
	ld.d	$a4, $sp, 120                   # 8-byte Folded Reload
	maskeqz	$a2, $a4, $a2
	or	$a2, $a2, $a3
	sub.d	$a1, $a1, $a2
	srai.d	$a1, $a1, 2
	mul.d	$a0, $a0, $a1
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	mul.d	$fp, $a0, $a1
	ori	$a0, $zero, 101
	bltu	$fp, $a0, .LBB4_35
# %bb.30:                               #   in Loop: Header=BB4_11 Depth=1
.Ltmp35:                                # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.2)
	addi.d	$a1, $a0, %pc_lo12(.L.str.2)
	ori	$a2, $zero, 36
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp36:                                # EH_LABEL
# %bb.31:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit80
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $s8, 0
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a0, 16
.Ltmp37:                                # EH_LABEL
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp38:                                # EH_LABEL
# %bb.32:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit82
                                        #   in Loop: Header=BB4_11 Depth=1
.Ltmp39:                                # EH_LABEL
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.3)
	addi.d	$a1, $a0, %pc_lo12(.L.str.3)
	ori	$a2, $zero, 27
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp40:                                # EH_LABEL
# %bb.33:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit84
                                        #   in Loop: Header=BB4_11 Depth=1
.Ltmp41:                                # EH_LABEL
	move	$a0, $s0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSo9_M_insertImEERSoT_)
	jirl	$ra, $ra, 0
.Ltmp42:                                # EH_LABEL
# %bb.34:                               # %_ZNSolsEm.exit
                                        #   in Loop: Header=BB4_11 Depth=1
.Ltmp43:                                # EH_LABEL
	pcalau12i	$a1, %pc_hi20(.L.str.4)
	addi.d	$a1, $a1, %pc_lo12(.L.str.4)
	ori	$a2, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp44:                                # EH_LABEL
.LBB4_35:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit87
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $s3, 8
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB4_38
# %bb.36:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $s3, 0
	ld.bu	$a0, $a0, 0
	ori	$a1, $zero, 46
	bne	$a0, $a1, .LBB4_38
# %bb.37:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $s4, 8
	ld.d	$a1, $s4, 0
	sub.d	$a0, $a0, $a1
	srli.d	$a0, $a0, 3
	ld.d	$a1, $sp, 152                   # 8-byte Folded Reload
	mul.d	$a0, $a0, $a1
	add.d	$a1, $a0, $fp
.Ltmp45:                                # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm)
	jirl	$ra, $ra, 0
.Ltmp46:                                # EH_LABEL
.LBB4_38:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread175
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $s8, 0
	ld.d	$s3, $a0, 72
	ld.d	$a0, $a0, 80
	st.d	$a0, $sp, 88                    # 8-byte Folded Spill
	beq	$s3, $a0, .LBB4_144
# %bb.39:                               # %.lr.ph215
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	ld.d	$a1, $sp, 104                   # 8-byte Folded Reload
	beq	$a0, $a1, .LBB4_41
# %bb.40:                               # %.lr.ph215.cont
                                        #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a0, $a1, 184
	ld.d	$a1, $a1, 192
	beq	$a0, $a1, .LBB4_144
.LBB4_41:                               # %.lr.ph215.split.preheader
                                        #   in Loop: Header=BB4_11 Depth=1
	move	$fp, $zero
	ld.d	$s2, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 120                   # 8-byte Folded Reload
	st.d	$s8, $sp, 128                   # 8-byte Folded Spill
	b	.LBB4_43
	.p2align	4, , 16
.LBB4_42:                               # %._crit_edge
                                        #   in Loop: Header=BB4_43 Depth=2
	addi.d	$s3, $s3, 24
	ld.d	$s7, $sp, 120                   # 8-byte Folded Reload
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	beq	$s3, $a0, .LBB4_10
.LBB4_43:                               # %.lr.ph215.split
                                        #   Parent Loop BB4_11 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB4_47 Depth 3
                                        #         Child Loop BB4_101 Depth 4
	ld.d	$s0, $sp, 96                    # 8-byte Folded Reload
	ld.d	$a0, $sp, 112                   # 8-byte Folded Reload
	ld.d	$a1, $sp, 104                   # 8-byte Folded Reload
	beq	$a0, $a1, .LBB4_45
# %bb.44:                               # %.lr.ph215.split.cont
                                        #   in Loop: Header=BB4_43 Depth=2
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s7, $a0, 184
	ld.d	$s0, $a0, 192
	beq	$s7, $s0, .LBB4_42
.LBB4_45:                               # %.lr.ph.preheader
                                        #   in Loop: Header=BB4_43 Depth=2
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	b	.LBB4_47
	.p2align	4, , 16
.LBB4_46:                               # %_ZN9benchmark13BenchmarkNameD2Ev.exit
                                        #   in Loop: Header=BB4_47 Depth=3
	addi.d	$s7, $s7, 4
	beq	$s7, $s0, .LBB4_42
.LBB4_47:                               # %.lr.ph
                                        #   Parent Loop BB4_11 Depth=1
                                        #     Parent Loop BB4_43 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB4_101 Depth 4
	ld.w	$a5, $s7, 0
	ld.d	$a1, $s8, 0
.Ltmp48:                                # EH_LABEL
	addi.d	$a0, $sp, 248
	ld.d	$a2, $sp, 208                   # 8-byte Folded Reload
	move	$a3, $fp
	move	$a4, $s3
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal17BenchmarkInstanceC1EPNS0_9BenchmarkEiiRKSt6vectorIlSaIlEEi)
	jirl	$ra, $ra, 0
.Ltmp49:                                # EH_LABEL
# %bb.48:                               #   in Loop: Header=BB4_47 Depth=3
.Ltmp51:                                # EH_LABEL
	addi.d	$a0, $sp, 216
	addi.d	$a1, $sp, 248
	pcaddu18i	$ra, %call36(_ZNK9benchmark13BenchmarkName3strB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp52:                                # EH_LABEL
# %bb.49:                               #   in Loop: Header=BB4_47 Depth=3
	pcalau12i	$a0, %pc_hi20(_ZN9benchmark12_GLOBAL__N_115kDisabledPrefixE)
	addi.d	$a1, $a0, %pc_lo12(_ZN9benchmark12_GLOBAL__N_115kDisabledPrefixE)
	addi.d	$a0, $sp, 216
	ori	$a3, $zero, 9
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcmm)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB4_125
# %bb.50:                               #   in Loop: Header=BB4_47 Depth=3
	ld.bu	$a0, $sp, 672
	ori	$s1, $zero, 1
	beqz	$a0, .LBB4_61
# %bb.51:                               #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 216
	ld.d	$a1, $sp, 224
	add.d	$a1, $a0, $a1
	vld	$vr0, $sp, 176                  # 16-byte Folded Reload
	vst	$vr0, $sp, 760
	vst	$vr0, $sp, 744
.Ltmp54:                                # EH_LABEL
	addi.d	$a2, $sp, 744
	addi.d	$a3, $sp, 680
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb)
	jirl	$ra, $ra, 0
.Ltmp55:                                # EH_LABEL
# %bb.52:                               # %_ZSt12regex_searchIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS4_9sub_matchISA_EEEcNS4_12regex_traitsIcEEEbT_SG_RNS4_13match_resultsISG_T0_EERKNS4_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeE.exit.i.i.i
                                        #   in Loop: Header=BB4_47 Depth=3
	move	$s0, $a0
	ld.d	$a0, $sp, 744
	beqz	$a0, .LBB4_54
# %bb.53:                               #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 760
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_54:                               # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
                                        #   in Loop: Header=BB4_47 Depth=3
	ori	$a0, $zero, 45
	beq	$s6, $a0, .LBB4_56
# %bb.55:                               # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
                                        #   in Loop: Header=BB4_47 Depth=3
	xori	$a0, $s0, 1
	beqz	$a0, .LBB4_63
.LBB4_56:                               # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit.thread
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.bu	$a0, $sp, 672
	beqz	$a0, .LBB4_61
# %bb.57:                               #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 216
	ld.d	$a1, $sp, 224
	add.d	$a1, $a0, $a1
	vld	$vr0, $sp, 176                  # 16-byte Folded Reload
	vst	$vr0, $sp, 760
	vst	$vr0, $sp, 744
.Ltmp57:                                # EH_LABEL
	addi.d	$a2, $sp, 744
	addi.d	$a3, $sp, 680
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb)
	jirl	$ra, $ra, 0
.Ltmp58:                                # EH_LABEL
# %bb.58:                               # %_ZSt12regex_searchIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS4_9sub_matchISA_EEEcNS4_12regex_traitsIcEEEbT_SG_RNS4_13match_resultsISG_T0_EERKNS4_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeE.exit.i.i.i95
                                        #   in Loop: Header=BB4_47 Depth=3
	move	$s0, $a0
	ld.d	$a0, $sp, 744
	beqz	$a0, .LBB4_60
# %bb.59:                               #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 760
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_60:                               # %_ZSt12regex_searchISt11char_traitsIcESaIcEcNSt7__cxx1112regex_traitsIcEEEbRKNS3_12basic_stringIT1_T_T0_EERKNS3_11basic_regexIS7_T2_EENSt15regex_constants15match_flag_typeE.exit.i97
                                        #   in Loop: Header=BB4_47 Depth=3
	xori	$s1, $s0, 1
	.p2align	4, , 16
.LBB4_61:                               # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit100
                                        #   in Loop: Header=BB4_47 Depth=3
	ori	$a0, $zero, 45
	bne	$s6, $a0, .LBB4_66
# %bb.62:                               # %_ZN9benchmark5Regex5MatchERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit100
                                        #   in Loop: Header=BB4_47 Depth=3
	beqz	$s1, .LBB4_66
.LBB4_63:                               #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s5, $s4, 8
	ld.d	$a0, $s4, 16
	beq	$s5, $a0, .LBB4_67
# %bb.64:                               #   in Loop: Header=BB4_47 Depth=3
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 248
	addi.d	$s1, $sp, 264
	beq	$a1, $s1, .LBB4_71
# %bb.65:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i134
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 0
	ld.d	$a0, $sp, 264
	ld.d	$s0, $sp, 256
	st.d	$a0, $s5, 16
	b	.LBB4_72
	.p2align	4, , 16
.LBB4_66:                               #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	b	.LBB4_125
.LBB4_67:                               #   in Loop: Header=BB4_47 Depth=3
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	ld.d	$s2, $s4, 0
	sub.d	$s1, $s5, $s2
	addi.w	$a0, $zero, -352
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB4_167
# %bb.68:                               # %_ZNKSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB4_47 Depth=3
	srli.d	$a0, $s1, 3
	ld.d	$a1, $sp, 152                   # 8-byte Folded Reload
	mul.d	$a0, $a0, $a1
	ori	$a3, $zero, 1
	sltu	$a1, $a3, $a0
	maskeqz	$a2, $a0, $a1
	masknez	$a1, $a3, $a1
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	ld.d	$a2, $sp, 144                   # 8-byte Folded Reload
	sltu	$a1, $a0, $a2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	ori	$a1, $zero, 424
	mul.d	$s0, $a0, $a1
.Ltmp60:                                # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp61:                                # EH_LABEL
# %bb.69:                               # %.noexc133
                                        #   in Loop: Header=BB4_47 Depth=3
	move	$s6, $a0
	add.d	$s3, $a0, $s1
	addi.d	$a1, $sp, 248
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN9benchmark13BenchmarkNameC2EOS0_)
	jirl	$ra, $ra, 0
	addi.d	$a1, $sp, 504
	ld.d	$a0, $a1, 48
	st.d	$a0, $s3, 304
	vld	$vr0, $a1, 32
	vld	$vr1, $a1, 16
	vld	$vr2, $a1, 0
	ld.d	$a2, $sp, 576
	vst	$vr0, $s3, 288
	vst	$vr1, $s3, 272
	vst	$vr2, $s3, 256
	addi.d	$a0, $s3, 320
	beqz	$a2, .LBB4_97
# %bb.70:                               #   in Loop: Header=BB4_47 Depth=3
	ld.w	$a1, $sp, 568
	st.d	$a2, $s3, 328
	ld.d	$a4, $sp, 584
	ld.d	$a3, $sp, 592
	st.d	$a0, $a2, 8
	ld.d	$a2, $sp, 600
	st.d	$zero, $sp, 576
	addi.d	$a0, $sp, 568
	st.d	$a0, $sp, 584
	st.d	$a0, $sp, 592
	st.d	$zero, $sp, 600
	move	$a0, $a4
	b	.LBB4_98
.LBB4_71:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 256
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_72:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 8
	addi.d	$a0, $s5, 48
	st.d	$a0, $s5, 32
	ld.d	$a1, $sp, 280
	st.d	$s1, $sp, 248
	st.d	$zero, $sp, 256
	st.b	$zero, $sp, 264
	addi.d	$s1, $sp, 296
	beq	$a1, $s1, .LBB4_74
# %bb.73:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i9.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 32
	ld.d	$a0, $sp, 296
	ld.d	$s0, $sp, 288
	st.d	$a0, $s5, 48
	b	.LBB4_75
.LBB4_74:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i10.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 288
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_75:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit11.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 40
	addi.d	$a0, $s5, 80
	st.d	$a0, $s5, 64
	ld.d	$a1, $sp, 312
	st.d	$s1, $sp, 280
	st.d	$zero, $sp, 288
	st.b	$zero, $sp, 296
	addi.d	$s1, $sp, 328
	beq	$a1, $s1, .LBB4_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i12.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 64
	ld.d	$a0, $sp, 328
	ld.d	$s0, $sp, 320
	st.d	$a0, $s5, 80
	b	.LBB4_78
.LBB4_77:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i13.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 320
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_78:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit14.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 72
	addi.d	$a0, $s5, 112
	st.d	$a0, $s5, 96
	ld.d	$a1, $sp, 344
	st.d	$s1, $sp, 312
	st.d	$zero, $sp, 320
	st.b	$zero, $sp, 328
	addi.d	$s1, $sp, 360
	beq	$a1, $s1, .LBB4_80
# %bb.79:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i15.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 96
	ld.d	$a0, $sp, 360
	ld.d	$s0, $sp, 352
	st.d	$a0, $s5, 112
	b	.LBB4_81
.LBB4_80:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i16.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 352
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_81:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit17.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 104
	addi.d	$a0, $s5, 144
	st.d	$a0, $s5, 128
	ld.d	$a1, $sp, 376
	st.d	$s1, $sp, 344
	st.d	$zero, $sp, 352
	st.b	$zero, $sp, 360
	addi.d	$s1, $sp, 392
	beq	$a1, $s1, .LBB4_83
# %bb.82:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i18.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 128
	ld.d	$a0, $sp, 392
	ld.d	$s0, $sp, 384
	st.d	$a0, $s5, 144
	b	.LBB4_84
.LBB4_83:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i19.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 384
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_84:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit20.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 136
	addi.d	$a0, $s5, 176
	st.d	$a0, $s5, 160
	ld.d	$a1, $sp, 408
	st.d	$s1, $sp, 376
	st.d	$zero, $sp, 384
	st.b	$zero, $sp, 392
	addi.d	$s1, $sp, 424
	beq	$a1, $s1, .LBB4_86
# %bb.85:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i21.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 160
	ld.d	$a0, $sp, 424
	ld.d	$s0, $sp, 416
	st.d	$a0, $s5, 176
	b	.LBB4_87
.LBB4_86:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i22.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 416
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_87:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit23.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 168
	addi.d	$a0, $s5, 208
	st.d	$a0, $s5, 192
	ld.d	$a1, $sp, 440
	st.d	$s1, $sp, 408
	st.d	$zero, $sp, 416
	st.b	$zero, $sp, 424
	addi.d	$s1, $sp, 456
	beq	$a1, $s1, .LBB4_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i24.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 192
	ld.d	$a0, $sp, 456
	ld.d	$s0, $sp, 448
	st.d	$a0, $s5, 208
	b	.LBB4_90
.LBB4_89:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i25.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 448
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_90:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit26.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 200
	addi.d	$a0, $s5, 240
	st.d	$a0, $s5, 224
	ld.d	$a1, $sp, 472
	st.d	$s1, $sp, 440
	st.d	$zero, $sp, 448
	st.b	$zero, $sp, 456
	addi.d	$s1, $sp, 488
	beq	$a1, $s1, .LBB4_92
# %bb.91:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i27.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a1, $s5, 224
	ld.d	$a0, $sp, 488
	ld.d	$s0, $sp, 480
	st.d	$a0, $s5, 240
	b	.LBB4_93
.LBB4_92:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i28.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 480
	addi.d	$a2, $s0, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB4_93:                               # %_ZN9benchmark13BenchmarkNameC2EOS0_.exit
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$s0, $s5, 232
	addi.d	$a0, $sp, 504
	vld	$vr0, $a0, 40
	vst	$vr0, $s5, 296
	vld	$vr0, $a0, 24
	vst	$vr0, $s5, 280
	vld	$vr0, $a0, 8
	vst	$vr0, $s5, 264
	ld.d	$a0, $a0, 0
	st.d	$a0, $s5, 256
	ld.d	$a2, $sp, 576
	st.d	$s1, $sp, 472
	st.d	$zero, $sp, 480
	st.b	$zero, $sp, 488
	addi.d	$a0, $s5, 320
	beqz	$a2, .LBB4_95
# %bb.94:                               #   in Loop: Header=BB4_47 Depth=3
	st.d	$a2, $s5, 328
	vld	$vr0, $sp, 584
	ld.w	$a1, $sp, 568
	vst	$vr0, $s5, 336
	st.d	$a0, $a2, 8
	ld.d	$a0, $sp, 600
	st.d	$a0, $s5, 352
	st.d	$zero, $sp, 576
	addi.d	$a0, $sp, 568
	st.d	$a0, $sp, 584
	st.d	$a0, $sp, 592
	st.d	$zero, $sp, 600
	b	.LBB4_96
.LBB4_95:                               #   in Loop: Header=BB4_47 Depth=3
	move	$a1, $zero
	st.d	$zero, $s5, 328
	st.d	$a0, $s5, 336
	st.d	$a0, $s5, 344
	st.d	$zero, $s5, 352
.LBB4_96:                               # %_ZN9benchmark8internal17BenchmarkInstanceC2EOS1_.exit.i.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	st.w	$a1, $s5, 320
	addi.d	$a0, $sp, 608
	vld	$vr0, $a0, 0
	vst	$vr0, $s5, 360
	vld	$vr0, $a0, 16
	vst	$vr0, $s5, 376
	vld	$vr0, $a0, 32
	vst	$vr0, $s5, 392
	vld	$vr0, $a0, 48
	vst	$vr0, $s5, 408
	ld.d	$a0, $s4, 8
	addi.d	$a0, $a0, 424
	st.d	$a0, $s4, 8
	addi.d	$s5, $sp, 232
	b	.LBB4_124
.LBB4_97:                               #   in Loop: Header=BB4_47 Depth=3
	move	$a2, $zero
	move	$a1, $zero
	st.d	$zero, $s3, 328
	move	$a3, $a0
.LBB4_98:                               # %_ZN9benchmark8internal17BenchmarkInstanceC2EOS1_.exit.i
                                        #   in Loop: Header=BB4_47 Depth=3
	st.d	$a0, $s3, 336
	st.d	$a3, $s3, 344
	st.d	$a2, $s3, 352
	st.w	$a1, $s3, 320
	addi.d	$a0, $sp, 608
	vld	$vr0, $a0, 0
	vld	$vr1, $a0, 16
	vld	$vr2, $a0, 32
	vld	$vr3, $a0, 48
	vst	$vr0, $s3, 360
	vst	$vr1, $s3, 376
	vst	$vr2, $s3, 392
	vst	$vr3, $s3, 408
	move	$s1, $s6
	beq	$s2, $s5, .LBB4_121
# %bb.99:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB4_47 Depth=3
	move	$s8, $zero
	b	.LBB4_101
	.p2align	4, , 16
.LBB4_100:                              # %_ZN9benchmark13BenchmarkNameD2Ev.exit158
                                        #   in Loop: Header=BB4_101 Depth=4
	addi.d	$s8, $s8, 424
	add.d	$a0, $s2, $s8
	beq	$a0, $s5, .LBB4_120
.LBB4_101:                              # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB4_11 Depth=1
                                        #     Parent Loop BB4_43 Depth=2
                                        #       Parent Loop BB4_47 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	add.d	$s1, $s6, $s8
	add.d	$s3, $s2, $s8
	move	$a0, $s1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN9benchmark13BenchmarkNameC2EOS0_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 304
	st.d	$a0, $s1, 304
	vld	$vr0, $s3, 288
	vst	$vr0, $s1, 288
	vld	$vr0, $s3, 272
	vst	$vr0, $s1, 272
	vld	$vr0, $s3, 256
	vst	$vr0, $s1, 256
	ld.d	$a2, $s3, 328
	addi.d	$a0, $s1, 320
	beqz	$a2, .LBB4_103
# %bb.102:                              #   in Loop: Header=BB4_101 Depth=4
	addi.d	$a5, $s3, 320
	ld.w	$a1, $s3, 320
	st.d	$a2, $s1, 328
	ld.d	$a3, $s3, 336
	ld.d	$a4, $s3, 344
	st.d	$a0, $a2, 8
	ld.d	$a2, $s3, 352
	st.d	$zero, $s3, 328
	st.d	$a5, $s3, 336
	st.d	$a5, $s3, 344
	st.d	$zero, $s3, 352
	b	.LBB4_104
	.p2align	4, , 16
.LBB4_103:                              #   in Loop: Header=BB4_101 Depth=4
	move	$a2, $zero
	move	$a1, $zero
	st.d	$zero, $s1, 328
	move	$a3, $a0
	move	$a4, $a0
.LBB4_104:                              # %_ZSt19__relocate_object_aIN9benchmark8internal17BenchmarkInstanceES2_SaIS2_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB4_101 Depth=4
	st.d	$a3, $s1, 336
	st.d	$a4, $s1, 344
	st.d	$a2, $s1, 352
	st.w	$a1, $a0, 0
	vld	$vr0, $s3, 408
	vst	$vr0, $s1, 408
	vld	$vr0, $s3, 392
	vst	$vr0, $s1, 392
	vld	$vr0, $s3, 376
	vst	$vr0, $s1, 376
	vld	$vr0, $s3, 360
	vst	$vr0, $s1, 360
	ld.d	$a0, $s3, 224
	addi.d	$a1, $s3, 240
	beq	$a1, $a0, .LBB4_106
# %bb.105:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i135
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_106:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i136
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a0, $s3, 192
	addi.d	$a1, $s3, 208
	beq	$a1, $a0, .LBB4_108
# %bb.107:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i137
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_108:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i138
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a0, $s3, 160
	addi.d	$a1, $s3, 176
	beq	$a1, $a0, .LBB4_110
# %bb.109:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i139
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_110:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6.i140
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a0, $s3, 128
	addi.d	$a1, $s3, 144
	beq	$a1, $a0, .LBB4_112
# %bb.111:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7.i141
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_112:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9.i142
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a0, $s3, 96
	addi.d	$a1, $s3, 112
	beq	$a1, $a0, .LBB4_114
# %bb.113:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10.i143
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_114:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12.i144
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a0, $s3, 64
	addi.d	$a1, $s3, 80
	beq	$a1, $a0, .LBB4_116
# %bb.115:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13.i145
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_116:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15.i146
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a0, $s3, 32
	addi.d	$a1, $s3, 48
	beq	$a1, $a0, .LBB4_118
# %bb.117:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i16.i147
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_118:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit18.i148
                                        #   in Loop: Header=BB4_101 Depth=4
	ldx.d	$a0, $s2, $s8
	addi.d	$a1, $s3, 16
	beq	$a1, $a0, .LBB4_100
# %bb.119:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i19.i149
                                        #   in Loop: Header=BB4_101 Depth=4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB4_100
.LBB4_120:                              # %_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.loopexit
                                        #   in Loop: Header=BB4_47 Depth=3
	add.d	$s1, $s6, $s8
	ld.d	$s8, $sp, 128                   # 8-byte Folded Reload
.LBB4_121:                              # %_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i
                                        #   in Loop: Header=BB4_47 Depth=3
	beqz	$s2, .LBB4_123
# %bb.122:                              # %_ZNSt12_Vector_baseIN9benchmark8internal17BenchmarkInstanceESaIS2_EE13_M_deallocateEPS2_m.exit.i.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $s4, 16
	sub.d	$a1, $a0, $s2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_123:                              # %.noexc102
                                        #   in Loop: Header=BB4_47 Depth=3
	addi.d	$a0, $s1, 424
	st.d	$s6, $s4, 0
	st.d	$a0, $s4, 8
	add.d	$a0, $s6, $s0
	st.d	$a0, $s4, 16
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	addi.d	$s5, $sp, 232
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
.LBB4_124:                              # %_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE9push_backEOS2_.exit
                                        #   in Loop: Header=BB4_47 Depth=3
	addi.w	$fp, $fp, 1
	ld.d	$a0, $sp, 208                   # 8-byte Folded Reload
	xor	$a0, $s2, $a0
	sltui	$a0, $a0, 1
	add.w	$s2, $s2, $a0
.LBB4_125:                              #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 216
	beq	$a0, $s5, .LBB4_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i103
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_127:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit105
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 576
.Ltmp66:                                # EH_LABEL
	addi.d	$a0, $sp, 560
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp67:                                # EH_LABEL
# %bb.128:                              # %_ZN9benchmark8internal17BenchmarkInstanceD2Ev.exit
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 472
	addi.d	$a1, $sp, 488
	beq	$a0, $a1, .LBB4_130
# %bb.129:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 488
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_130:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	beq	$a0, $a1, .LBB4_132
# %bb.131:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 456
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_132:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 408
	addi.d	$a1, $sp, 424
	beq	$a0, $a1, .LBB4_134
# %bb.133:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 424
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_134:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB4_136
# %bb.135:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 392
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_136:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 344
	addi.d	$a1, $sp, 360
	beq	$a0, $a1, .LBB4_138
# %bb.137:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_138:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 328
	beq	$a0, $a1, .LBB4_140
# %bb.139:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_140:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 280
	addi.d	$a1, $sp, 296
	beq	$a0, $a1, .LBB4_142
# %bb.141:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i16.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_142:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit18.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB4_46
# %bb.143:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i19.i
                                        #   in Loop: Header=BB4_47 Depth=3
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB4_46
	.p2align	4, , 16
.LBB4_144:                              #   in Loop: Header=BB4_11 Depth=1
	ld.d	$s2, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 120                   # 8-byte Folded Reload
	b	.LBB4_10
.LBB4_145:                              #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_17
# %bb.146:                              #   in Loop: Header=BB4_11 Depth=1
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_17
.LBB4_147:
.Ltmp9:                                 # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1)
	ori	$a2, $zero, 32
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp10:                                # EH_LABEL
# %bb.148:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a1, $sp, 712
	ld.d	$a2, $sp, 720
.Ltmp11:                                # EH_LABEL
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp12:                                # EH_LABEL
# %bb.149:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB4_173
# %bb.150:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB4_153
# %bb.151:
	ld.bu	$a0, $s0, 67
	b	.LBB4_155
.LBB4_152:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(pthread_mutex_unlock)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 4
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB4_157
.LBB4_153:
.Ltmp13:                                # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp14:                                # EH_LABEL
# %bb.154:                              # %.noexc125
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp15:                                # EH_LABEL
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp16:                                # EH_LABEL
.LBB4_155:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp17:                                # EH_LABEL
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp18:                                # EH_LABEL
# %bb.156:                              # %.noexc127
.Ltmp19:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp20:                                # EH_LABEL
.LBB4_157:                              # %_ZNSolsEPFRSoS_E.exit
	ld.d	$fp, $sp, 704
	beqz	$fp, .LBB4_162
# %bb.158:
	ld.d	$a0, $fp, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB4_160
# %bb.159:
	ld.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	jirl	$ra, $a1, 0
	b	.LBB4_162
.LBB4_160:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB4_165
# %bb.161:
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB4_166
.LBB4_162:                              # %_ZN9benchmark5RegexD2Ev.exit
	addi.d	$a0, $sp, 688
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 712
	addi.d	$a1, $sp, 728
	beq	$a0, $a1, .LBB4_164
# %bb.163:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i112
	ld.d	$a1, $sp, 728
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_164:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit114
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 776                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 784                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 792                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 800                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 808                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 816                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 824                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 832                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 840                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 848                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 856                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 864
	ret
.LBB4_165:
	addi.d	$a1, $fp, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB4_162
.LBB4_166:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB4_162
.LBB4_167:
.Ltmp63:                                # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	addi.d	$s5, $sp, 232
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp64:                                # EH_LABEL
# %bb.168:                              # %.noexc132
.LBB4_169:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB4_1
# %bb.170:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB4_1
.LBB4_171:
.Ltmp27:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt20__throw_system_errori)
	jirl	$ra, $ra, 0
.Ltmp28:                                # EH_LABEL
# %bb.172:                              # %.noexc
.LBB4_173:
.Ltmp21:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp22:                                # EH_LABEL
# %bb.174:                              # %.noexc124
.LBB4_175:
.Ltmp29:                                # EH_LABEL
	move	$fp, $a0
	b	.LBB4_196
.LBB4_176:                              # %.body
.Ltmp26:                                # EH_LABEL
	b	.LBB4_180
.LBB4_177:
.Ltmp34:                                # EH_LABEL
	ld.d	$a2, $sp, 248
	move	$fp, $a0
	beqz	$a2, .LBB4_195
# %bb.178:
	ld.d	$a0, $sp, 264
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB4_195
.LBB4_179:
.Ltmp23:                                # EH_LABEL
.LBB4_180:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit110
	move	$fp, $a0
	b	.LBB4_197
.LBB4_181:
.Ltmp47:                                # EH_LABEL
	b	.LBB4_192
.LBB4_182:
.Ltmp59:                                # EH_LABEL
	b	.LBB4_186
.LBB4_183:                              # %.loopexit
.Ltmp62:                                # EH_LABEL
	move	$fp, $a0
	addi.d	$s5, $sp, 232
	b	.LBB4_188
.LBB4_184:                              # %.loopexit.split-lp
.Ltmp65:                                # EH_LABEL
	move	$fp, $a0
	b	.LBB4_188
.LBB4_185:
.Ltmp56:                                # EH_LABEL
.LBB4_186:
	ld.d	$a2, $sp, 744
	move	$fp, $a0
	beqz	$a2, .LBB4_188
# %bb.187:
	ld.d	$a0, $sp, 760
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_188:                              # %.body90
	ld.d	$a0, $sp, 216
	beq	$a0, $s5, .LBB4_194
# %bb.189:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB4_194
.LBB4_190:
.Ltmp68:                                # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB4_191:
.Ltmp50:                                # EH_LABEL
.LBB4_192:                              # %_ZN9benchmark9MutexLockD2Ev.exit107
	move	$fp, $a0
	b	.LBB4_195
.LBB4_193:
.Ltmp53:                                # EH_LABEL
	move	$fp, $a0
.LBB4_194:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addi.d	$a0, $sp, 248
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal17BenchmarkInstanceD2Ev)
	jirl	$ra, $ra, 0
.LBB4_195:                              # %_ZN9benchmark9MutexLockD2Ev.exit107
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(pthread_mutex_unlock)
	jirl	$ra, $ra, 0
.LBB4_196:
	ori	$a1, $zero, 4
	ld.d	$a0, $sp, 120                   # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_197:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit110
	ld.d	$s0, $sp, 704
	beqz	$s0, .LBB4_204
# %bb.198:
	ld.d	$a0, $s0, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB4_200
# %bb.199:
	ld.d	$a0, $s0, 0
	st.d	$zero, $s0, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s0
	jirl	$ra, $a1, 0
	b	.LBB4_204
.LBB4_200:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	bnez	$a1, .LBB4_202
# %bb.201:
	addi.d	$a1, $s0, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	b	.LBB4_203
.LBB4_202:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s0, 8
.LBB4_203:                              # %_ZN9__gnu_cxx27__exchange_and_add_dispatchEPii.exit.i.i.i.i.i117
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB4_207
.LBB4_204:                              # %_ZN9benchmark5RegexD2Ev.exit119
	addi.d	$a0, $sp, 688
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 712
	addi.d	$a1, $sp, 728
	beq	$a0, $a1, .LBB4_206
# %bb.205:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i120
	ld.d	$a1, $sp, 728
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_206:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit122
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB4_207:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB4_204
.Lfunc_end4:
	.size	_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo, .Lfunc_end4-_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table4:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin1-.Lfunc_begin1    # >> Call Site 1 <<
	.uleb128 .Ltmp5-.Lfunc_begin1           #   Call between .Lfunc_begin1 and .Ltmp5
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp5-.Lfunc_begin1           # >> Call Site 2 <<
	.uleb128 .Ltmp8-.Ltmp5                  #   Call between .Ltmp5 and .Ltmp8
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp24-.Lfunc_begin1          # >> Call Site 3 <<
	.uleb128 .Ltmp25-.Ltmp24                #   Call between .Ltmp24 and .Ltmp25
	.uleb128 .Ltmp26-.Lfunc_begin1          #     jumps to .Ltmp26
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp25-.Lfunc_begin1          # >> Call Site 4 <<
	.uleb128 .Ltmp30-.Ltmp25                #   Call between .Ltmp25 and .Ltmp30
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp30-.Lfunc_begin1          # >> Call Site 5 <<
	.uleb128 .Ltmp33-.Ltmp30                #   Call between .Ltmp30 and .Ltmp33
	.uleb128 .Ltmp34-.Lfunc_begin1          #     jumps to .Ltmp34
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp33-.Lfunc_begin1          # >> Call Site 6 <<
	.uleb128 .Ltmp35-.Ltmp33                #   Call between .Ltmp33 and .Ltmp35
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp35-.Lfunc_begin1          # >> Call Site 7 <<
	.uleb128 .Ltmp46-.Ltmp35                #   Call between .Ltmp35 and .Ltmp46
	.uleb128 .Ltmp47-.Lfunc_begin1          #     jumps to .Ltmp47
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp48-.Lfunc_begin1          # >> Call Site 8 <<
	.uleb128 .Ltmp49-.Ltmp48                #   Call between .Ltmp48 and .Ltmp49
	.uleb128 .Ltmp50-.Lfunc_begin1          #     jumps to .Ltmp50
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp51-.Lfunc_begin1          # >> Call Site 9 <<
	.uleb128 .Ltmp52-.Ltmp51                #   Call between .Ltmp51 and .Ltmp52
	.uleb128 .Ltmp53-.Lfunc_begin1          #     jumps to .Ltmp53
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp52-.Lfunc_begin1          # >> Call Site 10 <<
	.uleb128 .Ltmp54-.Ltmp52                #   Call between .Ltmp52 and .Ltmp54
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp54-.Lfunc_begin1          # >> Call Site 11 <<
	.uleb128 .Ltmp55-.Ltmp54                #   Call between .Ltmp54 and .Ltmp55
	.uleb128 .Ltmp56-.Lfunc_begin1          #     jumps to .Ltmp56
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp55-.Lfunc_begin1          # >> Call Site 12 <<
	.uleb128 .Ltmp57-.Ltmp55                #   Call between .Ltmp55 and .Ltmp57
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp57-.Lfunc_begin1          # >> Call Site 13 <<
	.uleb128 .Ltmp58-.Ltmp57                #   Call between .Ltmp57 and .Ltmp58
	.uleb128 .Ltmp59-.Lfunc_begin1          #     jumps to .Ltmp59
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp58-.Lfunc_begin1          # >> Call Site 14 <<
	.uleb128 .Ltmp60-.Ltmp58                #   Call between .Ltmp58 and .Ltmp60
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp60-.Lfunc_begin1          # >> Call Site 15 <<
	.uleb128 .Ltmp61-.Ltmp60                #   Call between .Ltmp60 and .Ltmp61
	.uleb128 .Ltmp62-.Lfunc_begin1          #     jumps to .Ltmp62
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp61-.Lfunc_begin1          # >> Call Site 16 <<
	.uleb128 .Ltmp66-.Ltmp61                #   Call between .Ltmp61 and .Ltmp66
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp66-.Lfunc_begin1          # >> Call Site 17 <<
	.uleb128 .Ltmp67-.Ltmp66                #   Call between .Ltmp66 and .Ltmp67
	.uleb128 .Ltmp68-.Lfunc_begin1          #     jumps to .Ltmp68
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp67-.Lfunc_begin1          # >> Call Site 18 <<
	.uleb128 .Ltmp9-.Ltmp67                 #   Call between .Ltmp67 and .Ltmp9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp9-.Lfunc_begin1           # >> Call Site 19 <<
	.uleb128 .Ltmp12-.Ltmp9                 #   Call between .Ltmp9 and .Ltmp12
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp12-.Lfunc_begin1          # >> Call Site 20 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp13-.Lfunc_begin1          # >> Call Site 21 <<
	.uleb128 .Ltmp20-.Ltmp13                #   Call between .Ltmp13 and .Ltmp20
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp20-.Lfunc_begin1          # >> Call Site 22 <<
	.uleb128 .Ltmp63-.Ltmp20                #   Call between .Ltmp20 and .Ltmp63
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp63-.Lfunc_begin1          # >> Call Site 23 <<
	.uleb128 .Ltmp64-.Ltmp63                #   Call between .Ltmp63 and .Ltmp64
	.uleb128 .Ltmp65-.Lfunc_begin1          #     jumps to .Ltmp65
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp64-.Lfunc_begin1          # >> Call Site 24 <<
	.uleb128 .Ltmp27-.Ltmp64                #   Call between .Ltmp64 and .Ltmp27
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp27-.Lfunc_begin1          # >> Call Site 25 <<
	.uleb128 .Ltmp28-.Ltmp27                #   Call between .Ltmp27 and .Ltmp28
	.uleb128 .Ltmp29-.Lfunc_begin1          #     jumps to .Ltmp29
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp21-.Lfunc_begin1          # >> Call Site 26 <<
	.uleb128 .Ltmp22-.Ltmp21                #   Call between .Ltmp21 and .Ltmp22
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp22-.Lfunc_begin1          # >> Call Site 27 <<
	.uleb128 .Lfunc_end4-.Ltmp22            #   Call between .Ltmp22 and .Lfunc_end4
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,"axG",@progbits,_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,comdat
	.hidden	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_ # -- Begin function _ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
	.weak	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
	.p2align	5
	.type	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,@function
_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_: # @_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a2
	move	$fp, $a0
.Ltmp69:                                # EH_LABEL
	addi.d	$a0, $sp, 16
	ori	$a2, $zero, 64
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE)
	jirl	$ra, $ra, 0
.Ltmp70:                                # EH_LABEL
# %bb.1:
	ld.w	$a0, $sp, 16
	st.w	$a0, $fp, 8
	addi.d	$a0, $fp, 16
	addi.d	$s0, $sp, 24
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt6localeaSERKS_)
	jirl	$ra, $ra, 0
	vld	$vr0, $sp, 32
	ld.d	$s1, $fp, 32
	vrepli.b	$vr1, 0
	vst	$vr1, $sp, 32
	vst	$vr0, $fp, 24
	beqz	$s1, .LBB5_6
# %bb.2:
	ld.d	$a0, $s1, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB5_4
# %bb.3:
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$s1, $sp, 40
	bnez	$s1, .LBB5_7
	b	.LBB5_14
.LBB5_4:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB5_11
# %bb.5:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB5_12
.LBB5_6:                                # %_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEaSEOS3_.exit
	ld.d	$s1, $sp, 40
	beqz	$s1, .LBB5_14
.LBB5_7:
	ld.d	$a0, $s1, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB5_9
# %bb.8:
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	b	.LBB5_14
.LBB5_9:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB5_13
# %bb.10:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB5_14
	b	.LBB5_16
.LBB5_11:
	addi.d	$a1, $s1, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB5_6
.LBB5_12:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 40
	bnez	$s1, .LBB5_7
	b	.LBB5_14
.LBB5_13:
	addi.d	$a1, $s1, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB5_16
.LBB5_14:                               # %_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 0
.LBB5_15:
	andi	$a0, $a0, 1
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB5_16:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB5_14
.LBB5_17:
.Ltmp71:                                # EH_LABEL
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	move	$s1, $a0
	bne	$a1, $a2, .LBB5_22
# %bb.18:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	beqz	$s0, .LBB5_20
# %bb.19:
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 16
	jirl	$ra, $a1, 0
	move	$a1, $a0
.Ltmp72:                                # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc)
	jirl	$ra, $ra, 0
.Ltmp73:                                # EH_LABEL
.LBB5_20:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
	ld.b	$a0, $fp, 0
	b	.LBB5_15
.LBB5_21:
.Ltmp74:                                # EH_LABEL
	move	$s1, $a0
.Ltmp75:                                # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp76:                                # EH_LABEL
.LBB5_22:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB5_23:
.Ltmp77:                                # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end5:
	.size	_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_, .Lfunc_end5-_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_
	.cfi_endproc
	.section	.gcc_except_table._ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,"aG",@progbits,_ZN9benchmark5Regex4InitERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_,comdat
	.p2align	2, 0x0
GCC_except_table5:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Ltmp69-.Lfunc_begin2          # >> Call Site 1 <<
	.uleb128 .Ltmp70-.Ltmp69                #   Call between .Ltmp69 and .Ltmp70
	.uleb128 .Ltmp71-.Lfunc_begin2          #     jumps to .Ltmp71
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp70-.Lfunc_begin2          # >> Call Site 2 <<
	.uleb128 .Ltmp72-.Ltmp70                #   Call between .Ltmp70 and .Ltmp72
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp72-.Lfunc_begin2          # >> Call Site 3 <<
	.uleb128 .Ltmp73-.Ltmp72                #   Call between .Ltmp72 and .Ltmp73
	.uleb128 .Ltmp74-.Lfunc_begin2          #     jumps to .Ltmp74
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp73-.Lfunc_begin2          # >> Call Site 4 <<
	.uleb128 .Ltmp75-.Ltmp73                #   Call between .Ltmp73 and .Ltmp75
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp75-.Lfunc_begin2          # >> Call Site 5 <<
	.uleb128 .Ltmp76-.Ltmp75                #   Call between .Ltmp75 and .Ltmp76
	.uleb128 .Ltmp77-.Lfunc_begin2          #     jumps to .Ltmp77
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp76-.Lfunc_begin2          # >> Call Site 6 <<
	.uleb128 .Lfunc_end5-.Ltmp76            #   Call between .Ltmp76 and .Lfunc_end5
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.byte	2                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 2
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 2
.Ltmp78:                                # TypeInfo 1
	.word	.L_ZTISt11regex_error.DW.stub-.Ltmp78
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZNK9benchmark8internal9Benchmark7ArgsCntEv # -- Begin function _ZNK9benchmark8internal9Benchmark7ArgsCntEv
	.globl	_ZNK9benchmark8internal9Benchmark7ArgsCntEv
	.p2align	5
	.type	_ZNK9benchmark8internal9Benchmark7ArgsCntEv,@function
_ZNK9benchmark8internal9Benchmark7ArgsCntEv: # @_ZNK9benchmark8internal9Benchmark7ArgsCntEv
# %bb.0:
	ld.d	$a1, $a0, 72
	ld.d	$a2, $a0, 80
	beq	$a1, $a2, .LBB6_2
# %bb.1:
	ld.d	$a0, $a1, 8
	ld.d	$a1, $a1, 0
	ori	$a2, $zero, 3
	sub.d	$a0, $a0, $a1
	sra.d	$a0, $a0, $a2
	addi.w	$a0, $a0, 0
	ret
.LBB6_2:
	ld.d	$a1, $a0, 48
	ld.d	$a0, $a0, 56
	ori	$a2, $zero, 5
	beq	$a1, $a0, .LBB6_4
# %bb.3:                                # %.sink.split
	sub.d	$a0, $a0, $a1
	sra.d	$a0, $a0, $a2
	addi.w	$a0, $a0, 0
	ret
.LBB6_4:
	addi.d	$a0, $zero, -1
	addi.w	$a0, $a0, 0
	ret
.Lfunc_end6:
	.size	_ZNK9benchmark8internal9Benchmark7ArgsCntEv, .Lfunc_end6-_ZNK9benchmark8internal9Benchmark7ArgsCntEv
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE # -- Begin function _ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE
	.globl	_ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE,@function
_ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE: # @_ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	dbar	20
	beqz	$a2, .LBB7_10
.LBB7_1:                                # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.d	$s2, $fp, 80
	ld.d	$a0, $fp, 88
	beq	$s2, $a0, .LBB7_4
# %bb.2:
	ld.d	$a0, $a1, 8
	ld.d	$a2, $a1, 0
	sub.d	$s1, $a0, $a2
	st.d	$zero, $s2, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $s2, 0
	beq	$a0, $a2, .LBB7_5
# %bb.3:                                # %_ZNSt15__new_allocatorIlE8allocateEmPKv.exit.i.i.i.i.i
	move	$a0, $s1
	move	$s0, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$s0, $a0
	b	.LBB7_6
.LBB7_4:
	addi.d	$a0, $fp, 72
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB7_9
.LBB7_5:
	move	$s0, $zero
.LBB7_6:
	st.d	$s0, $s2, 0
	st.d	$s0, $s2, 8
	add.d	$a0, $s0, $s1
	st.d	$a0, $s2, 16
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	sub.d	$s1, $a0, $a2
	blez	$s1, .LBB7_8
# %bb.7:
	move	$a0, $s0
	move	$a1, $a2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s0, $s0, $s1
.LBB7_8:                                # %_ZNSt6vectorIlSaIlEEC2ERKS1_.exit.i
	ld.d	$a0, $fp, 80
	st.d	$s0, $s2, 8
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 80
.LBB7_9:                                # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE9push_backERKS1_.exit
	move	$a0, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB7_10:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB7_1
# %bb.11:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	b	.LBB7_1
.Lfunc_end7:
	.size	_ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE, .Lfunc_end7-_ZN9benchmark8internal9Benchmark4ArgsERKSt6vectorIlSaIlEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm,"axG",@progbits,_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm,comdat
	.hidden	_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm # -- Begin function _ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm
	.weak	_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm
	.p2align	5
	.type	_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm,@function
_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm: # @_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	lu12i.w	$a2, -79138
	ori	$a2, $a2, 773
	lu32i.d	$a2, -178061
	lu52i.d	$a2, $a2, 4
	bgeu	$a1, $a2, .LBB8_13
# %bb.1:
	move	$s0, $a1
	move	$fp, $a0
	ld.d	$a0, $a0, 16
	ld.d	$s4, $fp, 0
	sub.d	$a0, $a0, $s4
	srli.d	$a0, $a0, 3
	lu12i.w	$a1, -474827
	ori	$a1, $a1, 541
	lu32i.d	$a1, -19785
	lu52i.d	$a1, $a1, 540
	mul.d	$a0, $a0, $a1
	bgeu	$a0, $s0, .LBB8_12
# %bb.2:                                # %_ZNSt12_Vector_baseIN9benchmark8internal17BenchmarkInstanceESaIS2_EE11_M_allocateEm.exit
	ld.d	$s5, $fp, 8
	ori	$a0, $zero, 424
	mul.d	$a0, $s0, $a0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	move	$a0, $s4
	beq	$s5, $s4, .LBB8_9
# %bb.3:                                # %.lr.ph.i.i.i.preheader
	move	$s6, $zero
	b	.LBB8_6
	.p2align	4, , 16
.LBB8_4:                                #   in Loop: Header=BB8_6 Depth=1
	move	$a2, $zero
	move	$a1, $zero
	st.d	$zero, $s3, 328
	move	$a3, $a0
	move	$a4, $a0
.LBB8_5:                                # %_ZSt19__relocate_object_aIN9benchmark8internal17BenchmarkInstanceES2_SaIS2_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB8_6 Depth=1
	st.d	$a3, $s3, 336
	st.d	$a4, $s3, 344
	st.d	$a2, $s3, 352
	st.w	$a1, $a0, 0
	vld	$vr0, $s2, 360
	vst	$vr0, $s3, 360
	vld	$vr0, $s2, 376
	vst	$vr0, $s3, 376
	vld	$vr0, $s2, 392
	vst	$vr0, $s3, 392
	vld	$vr0, $s2, 408
	vst	$vr0, $s3, 408
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN9benchmark13BenchmarkNameD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s6, $s6, 424
	add.d	$a0, $s4, $s6
	beq	$a0, $s5, .LBB8_8
.LBB8_6:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s3, $s1, $s6
	add.d	$s2, $s4, $s6
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN9benchmark13BenchmarkNameC2EOS0_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 304
	st.d	$a0, $s3, 304
	vld	$vr0, $s2, 288
	vst	$vr0, $s3, 288
	vld	$vr0, $s2, 272
	vst	$vr0, $s3, 272
	vld	$vr0, $s2, 256
	vst	$vr0, $s3, 256
	ld.d	$a2, $s2, 328
	addi.d	$a0, $s3, 320
	beqz	$a2, .LBB8_4
# %bb.7:                                #   in Loop: Header=BB8_6 Depth=1
	addi.d	$a5, $s2, 320
	ld.w	$a1, $s2, 320
	st.d	$a2, $s3, 328
	ld.d	$a3, $s2, 336
	ld.d	$a4, $s2, 344
	st.d	$a0, $a2, 8
	ld.d	$a2, $s2, 352
	st.d	$zero, $s2, 328
	st.d	$a5, $s2, 336
	st.d	$a5, $s2, 344
	st.d	$zero, $s2, 352
	b	.LBB8_5
.LBB8_8:                                # %_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.loopexit
	ld.d	$a0, $fp, 0
.LBB8_9:                                # %_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit
	sub.d	$s2, $s5, $s4
	beqz	$a0, .LBB8_11
# %bb.10:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB8_11:                               # %_ZNSt12_Vector_baseIN9benchmark8internal17BenchmarkInstanceESaIS2_EE13_M_deallocateEPS2_m.exit
	st.d	$s1, $fp, 0
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 424
	mul.d	$a0, $s0, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
.LBB8_12:
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB8_13:
	pcalau12i	$a0, %pc_hi20(.L.str.181)
	addi.d	$a0, $a0, %pc_lo12(.L.str.181)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end8:
	.size	_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm, .Lfunc_end8-_ZNSt6vectorIN9benchmark8internal17BenchmarkInstanceESaIS2_EE7reserveEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal17BenchmarkInstanceD2Ev,"axG",@progbits,_ZN9benchmark8internal17BenchmarkInstanceD2Ev,comdat
	.hidden	_ZN9benchmark8internal17BenchmarkInstanceD2Ev # -- Begin function _ZN9benchmark8internal17BenchmarkInstanceD2Ev
	.weak	_ZN9benchmark8internal17BenchmarkInstanceD2Ev
	.p2align	5
	.type	_ZN9benchmark8internal17BenchmarkInstanceD2Ev,@function
_ZN9benchmark8internal17BenchmarkInstanceD2Ev: # @_ZN9benchmark8internal17BenchmarkInstanceD2Ev
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a1, $a0, 328
	addi.d	$a0, $a0, 312
.Ltmp79:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
.Ltmp80:                                # EH_LABEL
# %bb.1:                                # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN9benchmark7CounterESt4lessIS5_ESaISt4pairIKS5_S7_EEED2Ev.exit
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZN9benchmark13BenchmarkNameD2Ev)
	jr	$t8
.LBB9_2:
.Ltmp81:                                # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end9:
	.size	_ZN9benchmark8internal17BenchmarkInstanceD2Ev, .Lfunc_end9-_ZN9benchmark8internal17BenchmarkInstanceD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN9benchmark8internal17BenchmarkInstanceD2Ev,"aG",@progbits,_ZN9benchmark8internal17BenchmarkInstanceD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table9:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp79-.Lfunc_begin3          # >> Call Site 1 <<
	.uleb128 .Ltmp80-.Ltmp79                #   Call between .Ltmp79 and .Ltmp80
	.uleb128 .Ltmp81-.Lfunc_begin3          #     jumps to .Ltmp81
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp80-.Lfunc_begin3          # >> Call Site 2 <<
	.uleb128 .Lfunc_end9-.Ltmp80            #   Call between .Ltmp80 and .Lfunc_end9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE # -- Begin function _ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE
	.globl	_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE
	.p2align	5
	.type	_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE,@function
_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE: # @_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	ld.b	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	move	$fp, $a0
	dbar	20
	beqz	$a1, .LBB10_5
.LBB10_1:                               # %_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv.exit
	st.d	$fp, $sp, 8
.Ltmp82:                                # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal17BenchmarkFamilies12AddBenchmarkESt10unique_ptrINS0_9BenchmarkESt14default_deleteIS3_EE)
	jirl	$ra, $ra, 0
.Ltmp83:                                # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 8
	beqz	$a0, .LBB10_4
# %bb.3:                                # %_ZNKSt14default_deleteIN9benchmark8internal9BenchmarkEEclEPS2_.exit.i
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 8
	jirl	$ra, $a1, 0
.LBB10_4:                               # %_ZNSt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS2_EED2Ev.exit9
	move	$a0, $fp
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB10_5:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB10_1
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a1, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	vrepli.b	$vr0, 0
	vst	$vr0, $a1, 48
	vst	$vr0, $a1, 32
	vst	$vr0, $a1, 16
	vst	$vr0, $a1, 0
	pcalau12i	$a0, %pc_hi20(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	pcalau12i	$a2, %pc_hi20(__dso_handle)
	addi.d	$a2, $a2, %pc_lo12(__dso_handle)
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB10_1
.LBB10_7:
.Ltmp84:                                # EH_LABEL
	ld.d	$a1, $sp, 8
	move	$fp, $a0
	beqz	$a1, .LBB10_9
# %bb.8:                                # %_ZNKSt14default_deleteIN9benchmark8internal9BenchmarkEEclEPS2_.exit.i11
	ld.d	$a0, $a1, 0
	ld.d	$a2, $a0, 8
	move	$a0, $a1
	jirl	$ra, $a2, 0
.LBB10_9:                               # %_ZNSt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS2_EED2Ev.exit12
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end10:
	.size	_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE, .Lfunc_end10-_ZN9benchmark8internal25RegisterBenchmarkInternalEPNS0_9BenchmarkE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table10:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Ltmp82-.Lfunc_begin4          # >> Call Site 1 <<
	.uleb128 .Ltmp83-.Ltmp82                #   Call between .Ltmp82 and .Ltmp83
	.uleb128 .Ltmp84-.Lfunc_begin4          #     jumps to .Ltmp84
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp83-.Lfunc_begin4          # >> Call Site 2 <<
	.uleb128 .Lfunc_end10-.Ltmp83           #   Call between .Ltmp83 and .Lfunc_end10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo # -- Begin function _ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo
	.globl	_ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo
	.p2align	5
	.type	_ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo,@function
_ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo: # @_ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	pcalau12i	$a3, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	ld.b	$a3, $a3, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	move	$fp, $a2
	move	$s0, $a1
	dbar	20
	beqz	$a3, .LBB11_11
.LBB11_1:                               # %_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv.exit
	addi.d	$s2, $sp, 32
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	st.d	$s2, $sp, 16
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 48
	move	$a0, $s2
	bltu	$a1, $a2, .LBB11_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB11_3:                               # %._crit_edge.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB11_7
# %bb.4:                                # %._crit_edge.i.i
	bnez	$a1, .LBB11_6
# %bb.5:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB11_7
.LBB11_6:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB11_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 24
.Ltmp85:                                # EH_LABEL
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a1, $sp, 16
	move	$a2, $s0
	move	$a3, $fp
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaIS9_EEPSo)
	jirl	$ra, $ra, 0
.Ltmp86:                                # EH_LABEL
# %bb.8:
	ld.d	$a2, $sp, 16
	beq	$a2, $s2, .LBB11_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
.LBB11_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB11_11:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	move	$s1, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB11_1
# %bb.12:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a1, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	vrepli.b	$vr0, 0
	vst	$vr0, $a1, 48
	vst	$vr0, $a1, 32
	vst	$vr0, $a1, 16
	vst	$vr0, $a1, 0
	pcalau12i	$a0, %pc_hi20(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	pcalau12i	$a2, %pc_hi20(__dso_handle)
	addi.d	$a2, $a2, %pc_lo12(__dso_handle)
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	b	.LBB11_1
.LBB11_13:
.Ltmp87:                                # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s2, .LBB11_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB11_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end11:
	.size	_ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo, .Lfunc_end11-_ZN9benchmark8internal22FindBenchmarksInternalERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_17BenchmarkInstanceESaISA_EEPSo
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table11:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp85-.Lfunc_begin5          #   Call between .Lfunc_begin5 and .Ltmp85
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp85-.Lfunc_begin5          # >> Call Site 2 <<
	.uleb128 .Ltmp86-.Ltmp85                #   Call between .Ltmp85 and .Ltmp86
	.uleb128 .Ltmp87-.Lfunc_begin5          #     jumps to .Ltmp87
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp86-.Lfunc_begin5          # >> Call Site 3 <<
	.uleb128 .Lfunc_end11-.Ltmp86           #   Call between .Ltmp86 and .Lfunc_end11
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN9benchmark8internal9BenchmarkE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN9benchmark8internal9BenchmarkE+16)
	st.d	$a0, $fp, 0
	addi.d	$s3, $fp, 24
	st.d	$s3, $fp, 8
	ld.d	$a2, $a1, 8
	ld.d	$s1, $a1, 0
	addi.d	$s0, $fp, 8
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 40
	move	$a0, $s3
	bltu	$a2, $a1, .LBB12_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 40
	st.d	$a0, $s0, 0
	st.d	$a2, $s3, 0
.LBB12_2:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB12_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a2, .LBB12_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB12_6
.LBB12_5:
	addi.d	$a2, $a2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB12_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 40
	st.d	$a0, $fp, 16
	st.w	$zero, $fp, 40
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 48
	vst	$vr0, $fp, 64
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $fp, 80
.Ltmp88:                                # EH_LABEL
	pcaddu18i	$ra, %call36(_ZN9benchmark18GetDefaultTimeUnitEv)
	jirl	$ra, $ra, 0
.Ltmp89:                                # EH_LABEL
# %bb.7:
	st.w	$a0, $fp, 96
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 100
	ori	$a0, $zero, 8
	st.w	$a0, $fp, 104
	st.w	$zero, $fp, 144
	addi.d	$a0, $fp, 152
	addi.d	$s1, $fp, 160
	st.d	$zero, $fp, 112
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 120
	st.d	$zero, $fp, 135
	ori	$a2, $zero, 72
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	addi.d	$s4, $sp, 56
	st.d	$s4, $sp, 40
	lu12i.w	$a0, 452118
	ori	$a0, $a0, 1389
	st.w	$a0, $sp, 56
	ori	$a0, $zero, 4
	st.d	$a0, $sp, 48
	st.b	$zero, $sp, 60
	pcalau12i	$a0, %got_pc_hi20(_ZN9benchmark14StatisticsMeanERKSt6vectorIdSaIdEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZN9benchmark14StatisticsMeanERKSt6vectorIdSaIdEE)
	st.d	$a0, $sp, 80
	st.w	$zero, $sp, 76
.Ltmp91:                                # EH_LABEL
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 80
	addi.d	$a3, $sp, 76
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp92:                                # EH_LABEL
# %bb.8:
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB12_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB12_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	st.d	$s4, $sp, 40
	pcalau12i	$a0, %pc_hi20(.L.str.7)
	addi.d	$a0, $a0, %pc_lo12(.L.str.7)
	ld.w	$a1, $a0, 0
	ld.h	$a0, $a0, 4
	st.w	$a1, $sp, 56
	st.h	$a0, $sp, 60
	ori	$a1, $zero, 6
	st.d	$a1, $sp, 48
	st.b	$zero, $sp, 62
	pcalau12i	$a0, %got_pc_hi20(_ZN9benchmark16StatisticsMedianERKSt6vectorIdSaIdEE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZN9benchmark16StatisticsMedianERKSt6vectorIdSaIdEE)
	ld.d	$a3, $fp, 168
	ld.d	$a0, $fp, 176
	st.d	$a2, $sp, 80
	st.w	$zero, $sp, 76
	beq	$a3, $a0, .LBB12_20
# %bb.11:                               # %_ZN9benchmark8internal10StatisticsC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE.exit.i.i28
	addi.d	$a0, $a3, 16
	st.d	$a0, $a3, 0
	ld.d	$a0, $sp, 40
	ld.w	$a4, $a0, 0
	st.w	$a4, $a3, 16
	ld.w	$a4, $a0, 3
	st.w	$a4, $a3, 19
	st.d	$a1, $a3, 8
	st.d	$a2, $a3, 32
	st.w	$zero, $a3, 40
	ld.d	$a1, $fp, 168
	addi.d	$a1, $a1, 48
	st.d	$a1, $fp, 168
	beq	$a0, $s4, .LBB12_13
.LBB12_12:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB12_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	st.d	$s4, $sp, 40
	pcalau12i	$a0, %pc_hi20(.L.str.8)
	addi.d	$a0, $a0, %pc_lo12(.L.str.8)
	ld.w	$a1, $a0, 0
	ld.h	$a0, $a0, 4
	st.w	$a1, $sp, 56
	st.h	$a0, $sp, 60
	ori	$a1, $zero, 6
	st.d	$a1, $sp, 48
	st.b	$zero, $sp, 62
	pcalau12i	$a0, %got_pc_hi20(_ZN9benchmark16StatisticsStdDevERKSt6vectorIdSaIdEE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZN9benchmark16StatisticsStdDevERKSt6vectorIdSaIdEE)
	ld.d	$a3, $fp, 168
	ld.d	$a0, $fp, 176
	st.d	$a2, $sp, 80
	st.w	$zero, $sp, 76
	beq	$a3, $a0, .LBB12_22
# %bb.14:                               # %_ZN9benchmark8internal10StatisticsC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE.exit.i.i42
	addi.d	$a0, $a3, 16
	st.d	$a0, $a3, 0
	ld.d	$a0, $sp, 40
	ld.w	$a4, $a0, 0
	st.w	$a4, $a3, 16
	ld.w	$a4, $a0, 3
	st.w	$a4, $a3, 19
	st.d	$a1, $a3, 8
	st.d	$a2, $a3, 32
	st.w	$zero, $a3, 40
	ld.d	$a1, $fp, 168
	addi.d	$a1, $a1, 48
	st.d	$a1, $fp, 168
	beq	$a0, $s4, .LBB12_16
.LBB12_15:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB12_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit49
	st.d	$s4, $sp, 40
	lu12i.w	$a0, 7
	ori	$a0, $a0, 1635
	st.h	$a0, $sp, 56
	ori	$a1, $zero, 2
	st.d	$a1, $sp, 48
	st.b	$zero, $sp, 58
	pcalau12i	$a0, %got_pc_hi20(_ZN9benchmark12StatisticsCVERKSt6vectorIdSaIdEE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZN9benchmark12StatisticsCVERKSt6vectorIdSaIdEE)
	ld.d	$a3, $fp, 168
	ld.d	$a0, $fp, 176
	st.d	$a2, $sp, 80
	ori	$a4, $zero, 1
	st.w	$a4, $sp, 76
	beq	$a3, $a0, .LBB12_24
# %bb.17:                               # %_ZN9benchmark8internal10StatisticsC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE.exit.i.i56
	addi.d	$a0, $a3, 16
	st.d	$a0, $a3, 0
	ld.d	$a0, $sp, 40
	ld.h	$a5, $a0, 0
	st.h	$a5, $a3, 16
	ld.b	$a5, $a0, 2
	st.b	$a5, $a3, 18
	st.d	$a1, $a3, 8
	st.d	$a2, $a3, 32
	st.w	$a4, $a3, 40
	ld.d	$a1, $fp, 168
	addi.d	$a1, $a1, 48
	st.d	$a1, $fp, 168
	beq	$a0, $s4, .LBB12_19
.LBB12_18:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i61
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB12_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit63
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB12_20:
.Ltmp94:                                # EH_LABEL
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 80
	addi.d	$a3, $sp, 76
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp95:                                # EH_LABEL
# %bb.21:                               # %._crit_edge82
	ld.d	$a0, $sp, 40
	bne	$a0, $s4, .LBB12_12
	b	.LBB12_13
.LBB12_22:
.Ltmp97:                                # EH_LABEL
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 80
	addi.d	$a3, $sp, 76
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp98:                                # EH_LABEL
# %bb.23:                               # %._crit_edge84
	ld.d	$a0, $sp, 40
	bne	$a0, $s4, .LBB12_15
	b	.LBB12_16
.LBB12_24:
.Ltmp100:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 80
	addi.d	$a3, $sp, 76
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp101:                               # EH_LABEL
# %bb.25:                               # %._crit_edge86
	ld.d	$a0, $sp, 40
	bne	$a0, $s4, .LBB12_18
	b	.LBB12_19
.LBB12_26:
.Ltmp102:                               # EH_LABEL
	b	.LBB12_30
.LBB12_27:
.Ltmp99:                                # EH_LABEL
	b	.LBB12_30
.LBB12_28:
.Ltmp96:                                # EH_LABEL
	b	.LBB12_30
.LBB12_29:
.Ltmp93:                                # EH_LABEL
.LBB12_30:
	ld.d	$a2, $sp, 40
	move	$s2, $a0
	beq	$a2, $s4, .LBB12_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i73
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB12_32:
	ld.d	$a0, $fp, 184
	beqz	$a0, .LBB12_34
# %bb.33:
	ld.d	$a1, $fp, 200
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB12_34:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB12_36
.LBB12_35:
.Ltmp90:                                # EH_LABEL
	move	$s2, $a0
.LBB12_36:
	addi.d	$s1, $fp, 48
	addi.d	$a0, $fp, 72
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	beq	$a0, $s3, .LBB12_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i76
	ld.d	$a1, $s3, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB12_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit78
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end12:
	.size	_ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end12-_ZN9benchmark8internal9BenchmarkC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table12:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin6-.Lfunc_begin6    # >> Call Site 1 <<
	.uleb128 .Ltmp88-.Lfunc_begin6          #   Call between .Lfunc_begin6 and .Ltmp88
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp88-.Lfunc_begin6          # >> Call Site 2 <<
	.uleb128 .Ltmp89-.Ltmp88                #   Call between .Ltmp88 and .Ltmp89
	.uleb128 .Ltmp90-.Lfunc_begin6          #     jumps to .Ltmp90
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp89-.Lfunc_begin6          # >> Call Site 3 <<
	.uleb128 .Ltmp91-.Ltmp89                #   Call between .Ltmp89 and .Ltmp91
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp91-.Lfunc_begin6          # >> Call Site 4 <<
	.uleb128 .Ltmp92-.Ltmp91                #   Call between .Ltmp91 and .Ltmp92
	.uleb128 .Ltmp93-.Lfunc_begin6          #     jumps to .Ltmp93
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp92-.Lfunc_begin6          # >> Call Site 5 <<
	.uleb128 .Ltmp94-.Ltmp92                #   Call between .Ltmp92 and .Ltmp94
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp94-.Lfunc_begin6          # >> Call Site 6 <<
	.uleb128 .Ltmp95-.Ltmp94                #   Call between .Ltmp94 and .Ltmp95
	.uleb128 .Ltmp96-.Lfunc_begin6          #     jumps to .Ltmp96
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp97-.Lfunc_begin6          # >> Call Site 7 <<
	.uleb128 .Ltmp98-.Ltmp97                #   Call between .Ltmp97 and .Ltmp98
	.uleb128 .Ltmp99-.Lfunc_begin6          #     jumps to .Ltmp99
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp100-.Lfunc_begin6         # >> Call Site 8 <<
	.uleb128 .Ltmp101-.Ltmp100              #   Call between .Ltmp100 and .Ltmp101
	.uleb128 .Ltmp102-.Lfunc_begin6         #     jumps to .Ltmp102
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp101-.Lfunc_begin6         # >> Call Site 9 <<
	.uleb128 .Lfunc_end12-.Ltmp101          #   Call between .Ltmp101 and .Lfunc_end12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE # -- Begin function _ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE
	.globl	_ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE,@function
_ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE: # @_ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$s0, $a0, 168
	ld.d	$a0, $a0, 176
	st.d	$a2, $sp, 16
	st.w	$a3, $sp, 12
	beq	$s0, $a0, .LBB13_6
# %bb.1:
	move	$s1, $a3
	move	$s2, $a2
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a2, $a1, 8
	ld.d	$s3, $a1, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 24
	bltu	$a2, $a1, .LBB13_3
# %bb.2:                                # %.noexc.i.i.i
	addi.d	$a1, $sp, 24
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 24
	st.d	$a0, $s0, 0
	st.d	$a2, $s0, 16
.LBB13_3:                               # %._crit_edge.i.i.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB13_8
# %bb.4:                                # %._crit_edge.i.i.i.i
	bnez	$a2, .LBB13_7
# %bb.5:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB13_8
.LBB13_6:
	addi.d	$a0, $fp, 160
	addi.d	$a2, $sp, 16
	addi.d	$a3, $sp, 12
	pcaddu18i	$ra, %call36(_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB13_9
.LBB13_7:
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB13_8:                               # %_ZN9benchmark8internal10StatisticsC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE.exit.i
	ld.d	$a0, $sp, 24
	ld.d	$a1, $fp, 168
	st.d	$a0, $s0, 8
	st.d	$s2, $s0, 32
	st.w	$s1, $s0, 40
	addi.d	$a0, $a1, 48
	st.d	$a0, $fp, 168
.LBB13_9:                               # %_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE12emplace_backIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEERS2_DpOT_.exit
	move	$a0, $fp
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end13:
	.size	_ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE, .Lfunc_end13-_ZN9benchmark8internal9Benchmark17ComputeStatisticsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFdRKSt6vectorIdSaIdEEENS_13StatisticUnitE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev,"axG",@progbits,_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev,comdat
	.hidden	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev # -- Begin function _ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev
	.weak	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev,@function
_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev: # @_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s0, $fp, 8
	beq	$a0, $s0, .LBB14_6
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB14_3
	.p2align	4, , 16
.LBB14_2:                               # %_ZSt8_DestroyIN9benchmark8internal10StatisticsEEvPT_.exit.i
                                        #   in Loop: Header=BB14_3 Depth=1
	addi.d	$a0, $s1, 32
	addi.d	$s1, $s1, 48
	beq	$a0, $s0, .LBB14_5
.LBB14_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB14_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB14_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB14_2
.LBB14_5:                               # %_ZSt8_DestroyIPN9benchmark8internal10StatisticsES2_EvT_S4_RSaIT0_E.exitthread-pre-split
	ld.d	$a0, $fp, 0
.LBB14_6:                               # %_ZSt8_DestroyIPN9benchmark8internal10StatisticsES2_EvT_S4_RSaIT0_E.exit
	beqz	$a0, .LBB14_8
# %bb.7:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB14_8:                               # %_ZNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end14:
	.size	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev, .Lfunc_end14-_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev,comdat
	.hidden	_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev
	.weak	_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev,@function
_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev:    # @_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	bne	$s0, $s1, .LBB15_4
# %bb.1:                                # %_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E.exit
	beqz	$s0, .LBB15_7
.LBB15_2:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB15_3:                               # %_ZSt8_DestroyISt6vectorIlSaIlEEEvPT_.exit.i
                                        #   in Loop: Header=BB15_4 Depth=1
	addi.d	$s0, $s0, 24
	beq	$s0, $s1, .LBB15_6
.LBB15_4:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB15_3
# %bb.5:                                #   in Loop: Header=BB15_4 Depth=1
	ld.d	$a1, $s0, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB15_3
.LBB15_6:                               # %_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E.exitthread-pre-split
	ld.d	$s0, $fp, 0
	bnez	$s0, .LBB15_2
.LBB15_7:                               # %_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end15:
	.size	_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev, .Lfunc_end15-_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.hidden	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s0, $fp, 8
	beq	$a0, $s0, .LBB16_6
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB16_3
	.p2align	4, , 16
.LBB16_2:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB16_3 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB16_5
.LBB16_3:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB16_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB16_2
.LBB16_5:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split
	ld.d	$a0, $fp, 0
.LBB16_6:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit
	beqz	$a0, .LBB16_8
# %bb.7:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB16_8:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end16:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end16-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text.unlikely.,"ax",@progbits
	.hidden	_ZN9benchmark8internal9BenchmarkD0Ev # -- Begin function _ZN9benchmark8internal9BenchmarkD0Ev
	.globl	_ZN9benchmark8internal9BenchmarkD0Ev
	.p2align	5
	.type	_ZN9benchmark8internal9BenchmarkD0Ev,@function
_ZN9benchmark8internal9BenchmarkD0Ev:   # @_ZN9benchmark8internal9BenchmarkD0Ev
# %bb.0:
	amswap.w	$zero, $ra, $zero
.Lfunc_end17:
	.size	_ZN9benchmark8internal9BenchmarkD0Ev, .Lfunc_end17-_ZN9benchmark8internal9BenchmarkD0Ev
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	addi.d	$a0, $a0, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end18:
	.size	_ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end18-_ZN9benchmark8internal9Benchmark4NameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	addi.d	$a0, $a0, 8
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jr	$t8
.Lfunc_end19:
	.size	_ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end19-_ZN9benchmark8internal9Benchmark7SetNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark3ArgEl # -- Begin function _ZN9benchmark8internal9Benchmark3ArgEl
	.globl	_ZN9benchmark8internal9Benchmark3ArgEl
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark3ArgEl,@function
_ZN9benchmark8internal9Benchmark3ArgEl: # @_ZN9benchmark8internal9Benchmark3ArgEl
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a1
	move	$fp, $a0
	dbar	20
	beqz	$a2, .LBB20_12
.LBB20_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	move	$s1, $a0
	addi.d	$s5, $a0, 8
	st.d	$s0, $a0, 0
	beq	$s3, $a1, .LBB20_3
# %bb.2:
	st.d	$s1, $s3, 0
	st.d	$s5, $s3, 8
	st.d	$s5, $s3, 16
	addi.d	$a0, $s3, 24
	st.d	$a0, $fp, 80
	b	.LBB20_11
.LBB20_3:
	ld.d	$s0, $fp, 72
	sub.d	$s6, $s3, $s0
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB20_14
# %bb.4:                                # %_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc.exit.i
	srli.d	$a0, $s6, 3
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mul.d	$a0, $a0, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	maskeqz	$a3, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a1, $a3, $a1
	add.d	$a0, $a1, $a0
	lu12i.w	$a1, 349525
	ori	$a1, $a1, 1365
	bstrins.d	$a1, $a1, 58, 32
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 4
	alsl.d	$a0, $s4, $a0, 3
.Ltmp103:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp104:                               # EH_LABEL
# %bb.5:                                # %.noexc11
	move	$s2, $a0
	add.d	$a0, $a0, $s6
	stx.d	$s1, $s2, $s6
	st.d	$s5, $a0, 8
	st.d	$s5, $a0, 16
	move	$s1, $s2
	beq	$s0, $s3, .LBB20_8
# %bb.6:                                # %.lr.ph.i.i.i.i.preheader
	vrepli.b	$vr0, 0
	move	$s1, $s2
	move	$a0, $s0
	.p2align	4, , 16
.LBB20_7:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr1, $a0, 0
	ld.d	$a1, $a0, 16
	vst	$vr1, $s1, 0
	st.d	$a1, $s1, 16
	st.d	$zero, $a0, 16
	vst	$vr0, $a0, 0
	addi.d	$a0, $a0, 24
	addi.d	$s1, $s1, 24
	bne	$a0, $s3, .LBB20_7
.LBB20_8:                               # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit.i
	beqz	$s0, .LBB20_10
# %bb.9:                                # %_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m.exit.i.i
	ld.d	$a0, $fp, 88
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_10:                              # %.noexc
	addi.d	$a0, $s1, 24
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	ori	$a0, $zero, 24
	mul.d	$a0, $s4, $a0
	add.d	$a0, $s2, $a0
	st.d	$a0, $fp, 88
.LBB20_11:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit
	move	$a0, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB20_12:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB20_1
# %bb.13:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB20_1
.LBB20_14:
.Ltmp105:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp106:                               # EH_LABEL
# %bb.15:                               # %.noexc10
.LBB20_16:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit8
.Ltmp107:                               # EH_LABEL
	move	$fp, $a0
	ori	$a1, $zero, 8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end20:
	.size	_ZN9benchmark8internal9Benchmark3ArgEl, .Lfunc_end20-_ZN9benchmark8internal9Benchmark3ArgEl
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table20:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7    # >> Call Site 1 <<
	.uleb128 .Ltmp103-.Lfunc_begin7         #   Call between .Lfunc_begin7 and .Ltmp103
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp103-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Ltmp104-.Ltmp103              #   Call between .Ltmp103 and .Ltmp104
	.uleb128 .Ltmp107-.Lfunc_begin7         #     jumps to .Ltmp107
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp104-.Lfunc_begin7         # >> Call Site 3 <<
	.uleb128 .Ltmp105-.Ltmp104              #   Call between .Ltmp104 and .Ltmp105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp105-.Lfunc_begin7         # >> Call Site 4 <<
	.uleb128 .Ltmp106-.Ltmp105              #   Call between .Ltmp105 and .Ltmp106
	.uleb128 .Ltmp107-.Lfunc_begin7         #     jumps to .Ltmp107
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp106-.Lfunc_begin7         # >> Call Site 5 <<
	.uleb128 .Lfunc_end20-.Ltmp106          #   Call between .Ltmp106 and .Lfunc_end20
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE # -- Begin function _ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE
	.globl	_ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE,@function
_ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE: # @_ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE
# %bb.0:
	st.w	$a1, $a0, 96
	st.b	$zero, $a0, 100
	ret
.Lfunc_end21:
	.size	_ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE, .Lfunc_end21-_ZN9benchmark8internal9Benchmark4UnitENS_8TimeUnitE
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark5RangeEll # -- Begin function _ZN9benchmark8internal9Benchmark5RangeEll
	.globl	_ZN9benchmark8internal9Benchmark5RangeEll
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark5RangeEll,@function
_ZN9benchmark8internal9Benchmark5RangeEll: # @_ZN9benchmark8internal9Benchmark5RangeEll
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$a3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a3, $a3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	dbar	20
	beqz	$a3, .LBB22_21
.LBB22_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.w	$a3, $fp, 104
	st.d	$zero, $sp, 64
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 32                   # 16-byte Folded Spill
	vst	$vr0, $sp, 48
.Ltmp108:                               # EH_LABEL
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp109:                               # EH_LABEL
# %bb.2:
	ld.d	$s0, $sp, 48
	ld.d	$s4, $sp, 56
	beq	$s0, $s4, .LBB22_16
# %bb.3:
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a0, $a0, -1366
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	lu12i.w	$a0, 349525
	ori	$a0, $a0, 1365
	bstrins.d	$a0, $a0, 58, 32
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	b	.LBB22_5
	.p2align	4, , 16
.LBB22_4:                               #   in Loop: Header=BB22_5 Depth=1
	st.d	$s1, $s5, 0
	st.d	$s6, $s5, 8
	st.d	$s6, $s5, 16
	addi.d	$a0, $s5, 24
	st.d	$a0, $fp, 80
	addi.d	$s0, $s0, 8
	beq	$s0, $s4, .LBB22_15
.LBB22_5:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB22_11 Depth 2
	ld.d	$s2, $s0, 0
.Ltmp111:                               # EH_LABEL
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp112:                               # EH_LABEL
# %bb.6:                                #   in Loop: Header=BB22_5 Depth=1
	move	$s1, $a0
	ld.d	$s5, $fp, 80
	ld.d	$a0, $fp, 88
	addi.d	$s6, $s1, 8
	st.d	$s2, $s1, 0
	bne	$s5, $a0, .LBB22_4
# %bb.7:                                #   in Loop: Header=BB22_5 Depth=1
	ld.d	$s2, $fp, 72
	sub.d	$s8, $s5, $s2
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	beq	$s8, $a0, .LBB22_19
# %bb.8:                                # %_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB22_5 Depth=1
	srli.d	$a0, $s8, 3
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	mul.d	$a0, $a0, $a1
	ori	$a3, $zero, 1
	sltu	$a1, $a3, $a0
	maskeqz	$a2, $a0, $a1
	masknez	$a1, $a3, $a1
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	sltu	$a1, $a0, $a2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 4
	alsl.d	$a0, $s7, $a0, 3
.Ltmp114:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp115:                               # EH_LABEL
# %bb.9:                                # %.noexc23
                                        #   in Loop: Header=BB22_5 Depth=1
	move	$s3, $a0
	add.d	$a0, $a0, $s8
	stx.d	$s1, $s3, $s8
	st.d	$s6, $a0, 8
	st.d	$s6, $a0, 16
	move	$s1, $s3
	vld	$vr1, $sp, 32                   # 16-byte Folded Reload
	beq	$s2, $s5, .LBB22_12
# %bb.10:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB22_5 Depth=1
	move	$s1, $s3
	move	$a0, $s2
	.p2align	4, , 16
.LBB22_11:                              # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB22_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	vld	$vr0, $a0, 0
	ld.d	$a1, $a0, 16
	vst	$vr0, $s1, 0
	st.d	$a1, $s1, 16
	st.d	$zero, $a0, 16
	vst	$vr1, $a0, 0
	addi.d	$a0, $a0, 24
	addi.d	$s1, $s1, 24
	bne	$a0, $s5, .LBB22_11
.LBB22_12:                              # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit.i
                                        #   in Loop: Header=BB22_5 Depth=1
	beqz	$s2, .LBB22_14
# %bb.13:                               # %_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m.exit.i.i
                                        #   in Loop: Header=BB22_5 Depth=1
	ld.d	$a0, $fp, 88
	sub.d	$a1, $a0, $s2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_14:                              # %.noexc
                                        #   in Loop: Header=BB22_5 Depth=1
	addi.d	$a0, $s1, 24
	st.d	$s3, $fp, 72
	st.d	$a0, $fp, 80
	ori	$a0, $zero, 24
	mul.d	$a0, $s7, $a0
	add.d	$a0, $s3, $a0
	st.d	$a0, $fp, 88
	addi.d	$s0, $s0, 8
	bne	$s0, $s4, .LBB22_5
.LBB22_15:                              # %._crit_edge.loopexit
	ld.d	$s0, $sp, 48
.LBB22_16:                              # %._crit_edge
	beqz	$s0, .LBB22_18
# %bb.17:
	ld.d	$a0, $sp, 64
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_18:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit
	move	$a0, $fp
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB22_19:
.Ltmp117:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp118:                               # EH_LABEL
# %bb.20:                               # %.noexc22
.LBB22_21:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB22_1
# %bb.22:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s0
	b	.LBB22_1
.LBB22_23:
.Ltmp110:                               # EH_LABEL
	b	.LBB22_28
.LBB22_24:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit17.loopexit
.Ltmp116:                               # EH_LABEL
	b	.LBB22_26
.LBB22_25:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit17.loopexit.split-lp
.Ltmp119:                               # EH_LABEL
.LBB22_26:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit17
	move	$fp, $a0
	ori	$a1, $zero, 8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB22_29
.LBB22_27:                              # %_ZNSt12_Vector_baseIlSaIlEED2Ev.exit.i
.Ltmp113:                               # EH_LABEL
.LBB22_28:                              # %.body
	move	$fp, $a0
.LBB22_29:                              # %.body
	ld.d	$a0, $sp, 48
	beqz	$a0, .LBB22_31
# %bb.30:
	ld.d	$a1, $sp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB22_31:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit20
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end22:
	.size	_ZN9benchmark8internal9Benchmark5RangeEll, .Lfunc_end22-_ZN9benchmark8internal9Benchmark5RangeEll
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table22:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Ltmp108-.Lfunc_begin8         # >> Call Site 1 <<
	.uleb128 .Ltmp109-.Ltmp108              #   Call between .Ltmp108 and .Ltmp109
	.uleb128 .Ltmp110-.Lfunc_begin8         #     jumps to .Ltmp110
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp111-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Ltmp112-.Ltmp111              #   Call between .Ltmp111 and .Ltmp112
	.uleb128 .Ltmp113-.Lfunc_begin8         #     jumps to .Ltmp113
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp114-.Lfunc_begin8         # >> Call Site 3 <<
	.uleb128 .Ltmp115-.Ltmp114              #   Call between .Ltmp114 and .Ltmp115
	.uleb128 .Ltmp116-.Lfunc_begin8         #     jumps to .Ltmp116
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp115-.Lfunc_begin8         # >> Call Site 4 <<
	.uleb128 .Ltmp117-.Ltmp115              #   Call between .Ltmp115 and .Ltmp117
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp117-.Lfunc_begin8         # >> Call Site 5 <<
	.uleb128 .Ltmp118-.Ltmp117              #   Call between .Ltmp117 and .Ltmp118
	.uleb128 .Ltmp119-.Lfunc_begin8         #     jumps to .Ltmp119
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp118-.Lfunc_begin8         # >> Call Site 6 <<
	.uleb128 .Lfunc_end22-.Ltmp118          #   Call between .Ltmp118 and .Lfunc_end22
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i,"axG",@progbits,_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i,comdat
	.hidden	_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i # -- Begin function _ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.weak	_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.p2align	5
	.type	_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i,@function
_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i: # @_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$s3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s1, $a3
	move	$s0, $a2
	move	$s2, $a1
	move	$fp, $a0
	dbar	20
	beqz	$a4, .LBB23_37
.LBB23_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB23_39
.LBB23_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit12
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$a1, $a0, .LBB23_4
# %bb.3:
	st.d	$s2, $a1, 0
	addi.d	$a1, $a1, 8
	st.d	$a1, $fp, 8
	bne	$s2, $s0, .LBB23_10
	b	.LBB23_30
.LBB23_4:
	ld.d	$s3, $fp, 0
	sub.d	$s4, $a1, $s3
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s4, $a0, .LBB23_41
# %bb.5:                                # %_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s4, 3
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s6, $a0, $a1
	slli.d	$a0, $s6, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.d	$s2, $a0, $s4
	blez	$s4, .LBB23_7
# %bb.6:
	move	$a0, $s5
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB23_7:                               # %_ZNSt6vectorIlSaIlEE11_S_relocateEPlS2_S2_RS0_.exit.i.i
	add.d	$s7, $s5, $s4
	beqz	$s3, .LBB23_9
# %bb.8:                                # %_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm.exit.i.i.i
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB23_9:                               # %_ZNSt6vectorIlSaIlEE17_M_realloc_appendIJRKlEEEvDpOT_.exit.i
	addi.d	$a1, $s7, 8
	st.d	$s5, $fp, 0
	st.d	$a1, $fp, 8
	alsl.d	$a0, $s6, $s5, 3
	st.d	$a0, $fp, 16
	beq	$s2, $s0, .LBB23_30
.LBB23_10:
	addi.d	$s3, $s2, 1
	bne	$s3, $s0, .LBB23_13
# %bb.11:
	beq	$a1, $a0, .LBB23_24
# %bb.12:
	st.d	$s0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $fp, 8
	b	.LBB23_30
.LBB23_13:
	addi.w	$a0, $zero, -2
	addi.d	$s4, $s0, -1
	blt	$a0, $s2, .LBB23_15
# %bb.14:
	slti	$a0, $s4, -1
	addi.w	$a1, $zero, -1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	move	$a0, $fp
	move	$a1, $s3
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i)
	jirl	$ra, $ra, 0
.LBB23_15:
	bgez	$s2, .LBB23_19
# %bb.16:
	bltz	$s0, .LBB23_19
# %bb.17:
	ld.d	$a0, $fp, 8
	ld.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB23_31
# %bb.18:
	st.d	$zero, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 8
.LBB23_19:                              # %_ZNSt6vectorIlSaIlEE9push_backEOl.exit
	ori	$a0, $zero, 2
	blt	$s0, $a0, .LBB23_21
.LBB23_20:
	ori	$a0, $zero, 1
	slt	$a1, $a0, $s3
	masknez	$a0, $a0, $a1
	maskeqz	$a1, $s3, $a1
	or	$a1, $a1, $a0
	move	$a0, $fp
	move	$a2, $s4
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i)
	jirl	$ra, $ra, 0
.LBB23_21:
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, -8
	beq	$s0, $a1, .LBB23_30
# %bb.22:
	ld.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB23_24
# %bb.23:
	st.d	$s0, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 8
	b	.LBB23_30
.LBB23_24:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $a0, $s1
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB23_41
# %bb.25:                               # %_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc.exit.i.i24
	srai.d	$a0, $s2, 3
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	stx.d	$s0, $a0, $s2
	blez	$s2, .LBB23_27
# %bb.26:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB23_27:                              # %_ZNSt6vectorIlSaIlEE11_S_relocateEPlS2_S2_RS0_.exit.i.i26
	add.d	$s0, $s3, $s2
	beqz	$s1, .LBB23_29
# %bb.28:                               # %_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm.exit.i.i.i28
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB23_29:                              # %_ZNSt6vectorIlSaIlEE17_M_realloc_appendIJRKlEEEvDpOT_.exit.i29
	addi.d	$a0, $s0, 8
	st.d	$s3, $fp, 0
	st.d	$a0, $fp, 8
	alsl.d	$a0, $s4, $s3, 3
	st.d	$a0, $fp, 16
.LBB23_30:                              # %_ZNSt6vectorIlSaIlEE9push_backERKl.exit21
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB23_31:
	ld.d	$s2, $fp, 0
	sub.d	$s5, $a0, $s2
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB23_41
# %bb.32:                               # %_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc.exit.i.i.i
	srai.d	$a0, $s5, 3
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s6, $a0
	stx.d	$zero, $a0, $s5
	blez	$s5, .LBB23_34
# %bb.33:
	move	$a0, $s6
	move	$a1, $s2
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB23_34:                              # %_ZNSt6vectorIlSaIlEE11_S_relocateEPlS2_S2_RS0_.exit.i.i.i
	add.d	$s8, $s6, $s5
	beqz	$s2, .LBB23_36
# %bb.35:                               # %_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm.exit.i.i.i.i
	move	$a0, $s2
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB23_36:                              # %_ZNSt6vectorIlSaIlEE17_M_realloc_appendIJlEEEvDpOT_.exit.i.i
	addi.d	$a0, $s8, 8
	st.d	$s6, $fp, 0
	st.d	$a0, $fp, 8
	alsl.d	$a0, $s7, $s6, 3
	st.d	$a0, $fp, 16
	ori	$a0, $zero, 2
	bge	$s0, $a0, .LBB23_20
	b	.LBB23_21
.LBB23_37:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB23_1
# %bb.38:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB23_1
.LBB23_39:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB23_2
# %bb.40:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB23_2
.LBB23_41:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end23:
	.size	_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i, .Lfunc_end23-_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_endproc
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE # -- Begin function _ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE
	.globl	_ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE,@function
_ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE: # @_ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s1, $a1
	move	$fp, $a0
	dbar	20
	beqz	$a2, .LBB24_17
.LBB24_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.d	$a1, $s1, 8
	ld.d	$s4, $s1, 0
	sub.d	$a0, $a1, $s4
	srai.d	$a0, $a0, 4
	lu12i.w	$a2, 349525
	ori	$a2, $a2, 1366
	lu32i.d	$a2, 349525
	lu52i.d	$a2, $a2, 85
	bgeu	$a0, $a2, .LBB24_19
# %bb.2:                                # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_S_check_init_lenEmRKS2_.exit.i
	beq	$a1, $s4, .LBB24_7
# %bb.3:                                # %.lr.ph
	slli.d	$a1, $a0, 4
	alsl.d	$s2, $a0, $a1, 3
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	st.d	$a0, $sp, 16
	add.d	$s3, $a0, $s2
	move	$a1, $zero
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$s5, $zero
	move	$s6, $zero
	st.d	$s3, $sp, 32
	st.d	$s3, $sp, 24
	move	$s2, $s0
	.p2align	4, , 16
.LBB24_4:                               # =>This Inner Loop Header: Depth=1
	add.d	$a0, $s4, $s5
	ldx.d	$a1, $s4, $s5
	ld.d	$a2, $a0, 8
	ld.w	$a3, $fp, 104
.Ltmp120:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp121:                               # EH_LABEL
# %bb.5:                                #   in Loop: Header=BB24_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$s4, $s1, 0
	addi.d	$s6, $s6, 1
	sub.d	$a0, $a0, $s4
	srai.d	$a0, $a0, 4
	addi.d	$s2, $s2, 24
	addi.d	$s5, $s5, 16
	bltu	$s6, $a0, .LBB24_4
# %bb.6:                                # %._crit_edge.loopexit
	move	$s1, $s3
	b	.LBB24_8
.LBB24_7:                               # %.thread
	move	$s3, $zero
	move	$s1, $zero
	move	$s0, $zero
	st.d	$zero, $sp, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
.LBB24_8:                               # %._crit_edge
.Ltmp123:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE)
	jirl	$ra, $ra, 0
.Ltmp124:                               # EH_LABEL
# %bb.9:
	beq	$s0, $s3, .LBB24_14
# %bb.10:                               # %.lr.ph.i.i.preheader
	move	$s2, $s0
	b	.LBB24_12
	.p2align	4, , 16
.LBB24_11:                              # %_ZSt8_DestroyISt6vectorIlSaIlEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB24_12 Depth=1
	addi.d	$s2, $s2, 24
	beq	$s2, $s3, .LBB24_14
.LBB24_12:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	beqz	$a0, .LBB24_11
# %bb.13:                               #   in Loop: Header=BB24_12 Depth=1
	ld.d	$a1, $s2, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB24_11
.LBB24_14:                              # %_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E.exit.i
	beqz	$s0, .LBB24_16
# %bb.15:
	sub.d	$a1, $s1, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB24_16:                              # %_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev.exit
	move	$a0, $fp
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB24_17:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB24_1
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB24_1
.LBB24_19:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.178)
	addi.d	$a0, $a0, %pc_lo12(.L.str.178)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB24_20:
.Ltmp125:                               # EH_LABEL
	b	.LBB24_22
.LBB24_21:
.Ltmp122:                               # EH_LABEL
.LBB24_22:
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end24:
	.size	_ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE, .Lfunc_end24-_ZN9benchmark8internal9Benchmark6RangesERKSt6vectorISt4pairIllESaIS4_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table24:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin9-.Lfunc_begin9    # >> Call Site 1 <<
	.uleb128 .Ltmp120-.Lfunc_begin9         #   Call between .Lfunc_begin9 and .Ltmp120
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp120-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp121-.Ltmp120              #   Call between .Ltmp120 and .Ltmp121
	.uleb128 .Ltmp122-.Lfunc_begin9         #     jumps to .Ltmp122
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp123-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Ltmp124-.Ltmp123              #   Call between .Ltmp123 and .Ltmp124
	.uleb128 .Ltmp125-.Lfunc_begin9         #     jumps to .Ltmp125
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp124-.Lfunc_begin9         # >> Call Site 4 <<
	.uleb128 .Lfunc_end24-.Ltmp124          #   Call between .Ltmp124 and .Lfunc_end24
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE # -- Begin function _ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE
	.globl	_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE,@function
_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE: # @_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s6, $a1
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	dbar	20
	beqz	$a2, .LBB25_48
.LBB25_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.d	$s5, $s6, 8
	ld.d	$s7, $s6, 0
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$s1, $a0, -1366
	vrepli.b	$vr0, 0
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	vst	$vr0, $sp, 32                   # 16-byte Folded Spill
	beq	$s5, $s7, .LBB25_11
# %bb.2:                                # %.noexc
	move	$a1, $s1
	sub.d	$s1, $s5, $s7
	srli.d	$a0, $s1, 3
	mul.d	$fp, $a0, $a1
	slli.d	$s2, $fp, 3
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	ori	$s3, $zero, 24
	st.d	$zero, $a0, 0
	beq	$s1, $s3, .LBB25_4
# %bb.3:                                # %.lr.ph.i.preheader.i.i.i.i.i
	addi.d	$a0, $s0, 8
	addi.d	$a2, $s2, -8
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.LBB25_4:                               # %.lr.ph.i.preheader
	addi.d	$a1, $s1, -24
	ori	$s8, $zero, 1
	move	$a0, $s7
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	bltu	$a1, $s3, .LBB25_8
# %bb.5:                                # %vector.ph
	mulh.du	$a0, $a1, $s1
	srli.d	$a0, $a0, 4
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 60, 1
	slli.d	$a2, $a0, 1
	slli.d	$a3, $a0, 5
	alsl.d	$a0, $a0, $a3, 4
	add.d	$a0, $s7, $a0
	addi.d	$a4, $s7, 32
	ori	$a3, $zero, 1
	move	$a5, $a2
	ori	$a6, $zero, 1
	.p2align	4, , 16
.LBB25_6:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a7, $a4, -32
	ld.d	$t0, $a4, -8
	ld.d	$t1, $a4, -24
	ld.d	$t2, $a4, 0
	sub.d	$a7, $t1, $a7
	sub.d	$t0, $t2, $t0
	srai.d	$a7, $a7, 3
	srai.d	$t0, $t0, 3
	mul.d	$a3, $a7, $a3
	mul.d	$a6, $t0, $a6
	addi.d	$a5, $a5, -2
	addi.d	$a4, $a4, 48
	bnez	$a5, .LBB25_6
# %bb.7:                                # %middle.block
	mul.d	$s8, $a6, $a3
	beq	$a1, $a2, .LBB25_9
	.p2align	4, , 16
.LBB25_8:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 3
	addi.d	$a0, $a0, 24
	mul.d	$s8, $a1, $s8
	bne	$a0, $s5, .LBB25_8
.LBB25_9:                               # %_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm.exit.i
	alsl.d	$a0, $fp, $s0, 3
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	st.d	$zero, $sp, 112
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $sp, 96
.Ltmp126:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp127:                               # EH_LABEL
# %bb.10:                               # %_ZNSt6vectorIlSaIlEE7reserveEm.exit
	move	$s3, $a0
	st.d	$a0, $sp, 96
	st.d	$a0, $sp, 104
	alsl.d	$a0, $fp, $a0, 3
	st.d	$a0, $sp, 112
	bnez	$s8, .LBB25_12
	b	.LBB25_42
.LBB25_11:                              # %_ZNSt6vectorIlSaIlEE7reserveEm.exit.thread
	move	$s3, $zero
	move	$s0, $zero
	st.d	$zero, $sp, 16                  # 8-byte Folded Spill
	st.d	$zero, $sp, 112
	vst	$vr0, $sp, 96
	ori	$s8, $zero, 1
.LBB25_12:                              # %.preheader.lr.ph
	move	$a1, $zero
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	addi.d	$a0, $a0, 72
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	move	$a0, $s3
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	b	.LBB25_14
	.p2align	4, , 16
.LBB25_13:                              # %.critedge
                                        #   in Loop: Header=BB25_14 Depth=1
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
	addi.d	$a1, $a1, 1
	beq	$a1, $s8, .LBB25_41
.LBB25_14:                              # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB25_18 Depth 2
                                        #     Child Loop BB25_39 Depth 2
	st.d	$a1, $sp, 72                    # 8-byte Folded Spill
	beq	$s5, $s7, .LBB25_26
# %bb.15:                               # %.lr.ph.preheader
                                        #   in Loop: Header=BB25_14 Depth=1
	ld.d	$a1, $sp, 112
	move	$s8, $zero
	move	$s2, $zero
	move	$fp, $s0
	b	.LBB25_18
	.p2align	4, , 16
.LBB25_16:                              #   in Loop: Header=BB25_18 Depth=2
	ld.d	$a2, $s6, 0
	st.d	$a2, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $sp, 104
	move	$s4, $s3
.LBB25_17:                              # %_ZNSt6vectorIlSaIlEE9push_backERKl.exit
                                        #   in Loop: Header=BB25_18 Depth=2
	addi.d	$s2, $s2, 1
	sub.d	$a2, $s5, $s7
	srli.d	$a2, $a2, 3
	mul.d	$a2, $a2, $s1
	addi.d	$s8, $s8, 24
	addi.d	$fp, $fp, 8
	bgeu	$s2, $a2, .LBB25_27
.LBB25_18:                              # %.lr.ph
                                        #   Parent Loop BB25_14 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $fp, 0
	ldx.d	$a3, $s7, $s8
	alsl.d	$s6, $a2, $a3, 3
	bne	$a0, $a1, .LBB25_16
# %bb.19:                               #   in Loop: Header=BB25_18 Depth=2
	sub.d	$s5, $a1, $s3
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB25_46
# %bb.20:                               # %_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc.exit.i.i
                                        #   in Loop: Header=BB25_18 Depth=2
	srai.d	$a0, $s5, 3
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s1, $a0, $a1
	slli.d	$a0, $s1, 3
.Ltmp129:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp130:                               # EH_LABEL
# %bb.21:                               # %.noexc46
                                        #   in Loop: Header=BB25_18 Depth=2
	move	$s4, $a0
	ld.d	$a0, $s6, 0
	stx.d	$a0, $s4, $s5
	blez	$s5, .LBB25_23
# %bb.22:                               #   in Loop: Header=BB25_18 Depth=2
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_23:                              # %_ZNSt6vectorIlSaIlEE11_S_relocateEPlS2_S2_RS0_.exit.i.i
                                        #   in Loop: Header=BB25_18 Depth=2
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	beqz	$s3, .LBB25_25
# %bb.24:                               # %_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm.exit.i.i.i
                                        #   in Loop: Header=BB25_18 Depth=2
	move	$a0, $s3
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$s7, $s6, 0
.LBB25_25:                              # %_ZNSt6vectorIlSaIlEE17_M_realloc_appendIJRKlEEEvDpOT_.exit.i
                                        #   in Loop: Header=BB25_18 Depth=2
	add.d	$a0, $s4, $s5
	addi.d	$a0, $a0, 8
	st.d	$s4, $sp, 96
	ld.d	$s5, $s6, 8
	st.d	$a0, $sp, 104
	alsl.d	$a1, $s1, $s4, 3
	st.d	$a1, $sp, 112
	move	$s3, $s4
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	b	.LBB25_17
	.p2align	4, , 16
.LBB25_26:                              #   in Loop: Header=BB25_14 Depth=1
	move	$s4, $s3
.LBB25_27:                              # %._crit_edge
                                        #   in Loop: Header=BB25_14 Depth=1
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$fp, $a1, 80
	ld.d	$a1, $a1, 88
	beq	$fp, $a1, .LBB25_31
# %bb.28:                               #   in Loop: Header=BB25_14 Depth=1
	sub.d	$s5, $a0, $s4
	st.d	$zero, $fp, 16
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $fp, 0
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	beq	$a0, $s4, .LBB25_33
# %bb.29:                               # %_ZNSt15__new_allocatorIlE8allocateEmPKv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB25_14 Depth=1
.Ltmp135:                               # EH_LABEL
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp136:                               # EH_LABEL
# %bb.30:                               #   in Loop: Header=BB25_14 Depth=1
	move	$s4, $a0
	b	.LBB25_34
	.p2align	4, , 16
.LBB25_31:                              #   in Loop: Header=BB25_14 Depth=1
.Ltmp137:                               # EH_LABEL
	addi.d	$a1, $sp, 96
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp138:                               # EH_LABEL
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
# %bb.32:                               # %._ZNSt6vectorIS_IlSaIlEESaIS1_EE9push_backERKS1_.exit_crit_edge
                                        #   in Loop: Header=BB25_14 Depth=1
	ld.d	$s3, $sp, 96
	ld.d	$a0, $sp, 104
	bne	$a0, $s3, .LBB25_37
	b	.LBB25_38
	.p2align	4, , 16
.LBB25_33:                              #   in Loop: Header=BB25_14 Depth=1
	move	$s4, $zero
.LBB25_34:                              # %.noexc41
                                        #   in Loop: Header=BB25_14 Depth=1
	st.d	$s4, $fp, 0
	st.d	$s4, $fp, 8
	ld.d	$s3, $sp, 96
	ld.d	$a0, $sp, 104
	add.d	$a1, $s4, $s5
	sub.d	$s5, $a0, $s3
	st.d	$a1, $fp, 16
	blez	$s5, .LBB25_36
# %bb.35:                               #   in Loop: Header=BB25_14 Depth=1
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s4, $s4, $s5
.LBB25_36:                              # %_ZNSt6vectorIlSaIlEEC2ERKS1_.exit.i
                                        #   in Loop: Header=BB25_14 Depth=1
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a0, $a1, 80
	st.d	$s4, $fp, 8
	addi.d	$a0, $a0, 24
	st.d	$a0, $a1, 80
	ld.d	$a0, $sp, 104
	beq	$a0, $s3, .LBB25_38
.LBB25_37:                              #   in Loop: Header=BB25_14 Depth=1
	st.d	$s3, $sp, 104
	move	$a0, $s3
.LBB25_38:                              # %_ZNSt6vectorIlSaIlEE5clearEv.exit
                                        #   in Loop: Header=BB25_14 Depth=1
	ld.d	$s7, $s6, 0
	ld.d	$s5, $s6, 8
	move	$a1, $zero
	sub.d	$a2, $s5, $s7
	mulh.du	$a2, $a2, $s1
	srli.d	$a2, $a2, 4
	ori	$a4, $zero, 1
	sltu	$a3, $a4, $a2
	maskeqz	$a2, $a2, $a3
	masknez	$a3, $a4, $a3
	or	$a3, $a2, $a3
	addi.d	$a2, $s7, 8
	slli.d	$a3, $a3, 3
	.p2align	4, , 16
.LBB25_39:                              #   Parent Loop BB25_14 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ldx.d	$a4, $s0, $a1
	ld.d	$a5, $a2, 0
	ld.d	$a6, $a2, -8
	addi.d	$a4, $a4, 1
	sub.d	$a5, $a5, $a6
	srai.d	$a5, $a5, 3
	mod.du	$a4, $a4, $a5
	stx.d	$a4, $s0, $a1
	bnez	$a4, .LBB25_13
# %bb.40:                               #   in Loop: Header=BB25_39 Depth=2
	addi.d	$a1, $a1, 8
	addi.d	$a2, $a2, 24
	bne	$a3, $a1, .LBB25_39
	b	.LBB25_13
.LBB25_41:                              # %._crit_edge63
	beqz	$s3, .LBB25_43
.LBB25_42:                              # %._crit_edge63.thread
	ld.d	$a0, $sp, 112
	sub.d	$a1, $a0, $s3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_43:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit
	beqz	$s0, .LBB25_45
# %bb.44:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_45:                              # %_ZNSt6vectorImSaImEED2Ev.exit
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB25_46:
.Ltmp132:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp133:                               # EH_LABEL
# %bb.47:                               # %.noexc45
.LBB25_48:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB25_1
# %bb.49:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB25_1
.LBB25_50:
.Ltmp128:                               # EH_LABEL
	move	$fp, $a0
	move	$a0, $zero
	b	.LBB25_55
.LBB25_51:
.Ltmp139:                               # EH_LABEL
	b	.LBB25_54
.LBB25_52:                              # %.loopexit
.Ltmp131:                               # EH_LABEL
	b	.LBB25_54
.LBB25_53:                              # %.loopexit.split-lp
.Ltmp134:                               # EH_LABEL
.LBB25_54:                              # %thread-pre-split
	move	$fp, $a0
	ld.d	$a0, $sp, 96
.LBB25_55:
	bnez	$a0, .LBB25_58
# %bb.56:                               # %_ZNSt6vectorIlSaIlEED2Ev.exit48
	bnez	$s0, .LBB25_59
.LBB25_57:                              # %_ZNSt6vectorImSaImEED2Ev.exit50
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB25_58:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	beqz	$s0, .LBB25_57
.LBB25_59:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end25:
	.size	_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE, .Lfunc_end25-_ZN9benchmark8internal9Benchmark11ArgsProductERKSt6vectorIS2_IlSaIlEESaIS4_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table25:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Lfunc_begin10-.Lfunc_begin10  # >> Call Site 1 <<
	.uleb128 .Ltmp126-.Lfunc_begin10        #   Call between .Lfunc_begin10 and .Ltmp126
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp126-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Ltmp127-.Ltmp126              #   Call between .Ltmp126 and .Ltmp127
	.uleb128 .Ltmp128-.Lfunc_begin10        #     jumps to .Ltmp128
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp129-.Lfunc_begin10        # >> Call Site 3 <<
	.uleb128 .Ltmp130-.Ltmp129              #   Call between .Ltmp129 and .Ltmp130
	.uleb128 .Ltmp131-.Lfunc_begin10        #     jumps to .Ltmp131
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp130-.Lfunc_begin10        # >> Call Site 4 <<
	.uleb128 .Ltmp135-.Ltmp130              #   Call between .Ltmp130 and .Ltmp135
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp135-.Lfunc_begin10        # >> Call Site 5 <<
	.uleb128 .Ltmp138-.Ltmp135              #   Call between .Ltmp135 and .Ltmp138
	.uleb128 .Ltmp139-.Lfunc_begin10        #     jumps to .Ltmp139
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp138-.Lfunc_begin10        # >> Call Site 6 <<
	.uleb128 .Ltmp132-.Ltmp138              #   Call between .Ltmp138 and .Ltmp132
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp132-.Lfunc_begin10        # >> Call Site 7 <<
	.uleb128 .Ltmp133-.Ltmp132              #   Call between .Ltmp132 and .Ltmp133
	.uleb128 .Ltmp134-.Lfunc_begin10        #     jumps to .Ltmp134
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp133-.Lfunc_begin10        # >> Call Site 8 <<
	.uleb128 .Lfunc_end25-.Ltmp133          #   Call between .Ltmp133 and .Lfunc_end25
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.globl	_ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	dbar	20
	beqz	$a2, .LBB26_11
.LBB26_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	addi.d	$a0, $sp, 32
	ld.d	$a2, $a1, 8
	ld.d	$s0, $a1, 0
	st.d	$a0, $sp, 16
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 48
	bltu	$a2, $a1, .LBB26_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a2, $sp, 32
.LBB26_3:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB26_7
# %bb.4:                                # %._crit_edge.i.i
	bnez	$a2, .LBB26_6
# %bb.5:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB26_7
.LBB26_6:
	addi.d	$a2, $a2, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB26_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 24
	addi.d	$a0, $fp, 48
	addi.d	$a2, $sp, 48
.Ltmp140:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag)
	jirl	$ra, $ra, 0
.Ltmp141:                               # EH_LABEL
# %bb.8:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSESt16initializer_listIS5_E.exit.preheader
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB26_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB26_11:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB26_1
# %bb.12:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	b	.LBB26_1
.LBB26_13:
.Ltmp142:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB26_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB26_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end26:
	.size	_ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end26-_ZN9benchmark8internal9Benchmark7ArgNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table26:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Lfunc_begin11-.Lfunc_begin11  # >> Call Site 1 <<
	.uleb128 .Ltmp140-.Lfunc_begin11        #   Call between .Lfunc_begin11 and .Ltmp140
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp140-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp141-.Ltmp140              #   Call between .Ltmp140 and .Ltmp141
	.uleb128 .Ltmp142-.Lfunc_begin11        #     jumps to .Ltmp142
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp141-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Lfunc_end26-.Ltmp141          #   Call between .Ltmp141 and .Lfunc_end26
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE # -- Begin function _ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE
	.globl	_ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE,@function
_ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE: # @_ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB27_2
.LBB27_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	addi.d	$a2, $a0, 48
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB27_2:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $a0
	move	$a0, $fp
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB27_1
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
	b	.LBB27_1
.Lfunc_end27:
	.size	_ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE, .Lfunc_end27-_ZN9benchmark8internal9Benchmark8ArgNamesERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	beq	$a1, $a0, .LBB28_17
# %bb.1:
	ld.d	$s1, $a1, 8
	ld.d	$s2, $a1, 0
	ld.d	$a0, $fp, 16
	ld.d	$s3, $fp, 0
	sub.d	$s4, $s1, $s2
	srai.d	$a2, $s4, 5
	sub.d	$a0, $a0, $s3
	srai.d	$a0, $a0, 5
	bgeu	$a0, $a2, .LBB28_7
# %bb.2:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $s2
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 0
	ld.d	$s1, $fp, 8
	move	$s0, $a0
	beq	$a2, $s1, .LBB28_13
# %bb.3:                                # %.lr.ph.i.preheader
	addi.d	$s2, $a2, 16
	b	.LBB28_5
	.p2align	4, , 16
.LBB28_4:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB28_5 Depth=1
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB28_12
.LBB28_5:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB28_4
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB28_5 Depth=1
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB28_4
.LBB28_7:
	ld.d	$s0, $fp, 8
	sub.d	$s5, $s0, $s3
	srai.d	$a0, $s5, 5
	bgeu	$a0, $a2, .LBB28_18
# %bb.8:
	beq	$s0, $s3, .LBB28_22
# %bb.9:                                # %.lr.ph.i.i33.preheader
	move	$s0, $a1
	.p2align	4, , 16
.LBB28_10:                              # %.lr.ph.i.i33
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 32
	addi.d	$s5, $s5, -32
	addi.d	$s2, $s2, 32
	bnez	$s5, .LBB28_10
# %bb.11:                               # %_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_.exit.loopexit
	move	$a0, $s0
	ld.d	$s2, $s0, 0
	ld.d	$s0, $fp, 8
	ld.d	$a1, $fp, 0
	ld.d	$s1, $a0, 8
	sub.d	$a0, $s0, $a1
	b	.LBB28_23
.LBB28_12:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exitthread-pre-split
	ld.d	$a2, $fp, 0
.LBB28_13:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exit
	beqz	$a2, .LBB28_15
# %bb.14:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB28_15:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit
	st.d	$s0, $fp, 0
	add.d	$a0, $s0, $s4
	st.d	$a0, $fp, 16
.LBB28_16:                              # %_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEEvT_SD_.exit
	ld.d	$a0, $fp, 0
	add.d	$a0, $a0, $s4
	st.d	$a0, $fp, 8
.LBB28_17:
	move	$a0, $fp
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB28_18:
	beq	$s2, $s1, .LBB28_33
# %bb.19:                               # %.lr.ph.i.i.preheader
	move	$s5, $s3
	.p2align	4, , 16
.LBB28_20:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 32
	addi.d	$s2, $s2, 32
	addi.d	$s5, $s5, 32
	bne	$s2, $s1, .LBB28_20
# %bb.21:                               # %_ZSt14__copy_move_a2ILb0EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_PS5_ET2_T0_T1_S9_.exit.loopexit.i
	ld.d	$s0, $fp, 8
	beq	$s5, $s0, .LBB28_16
	b	.LBB28_34
.LBB28_22:
	move	$a0, $zero
.LBB28_23:                              # %_ZSt4copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_.exit
	add.d	$s3, $s2, $a0
	st.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
	addi.d	$a0, $sp, 24
	st.d	$a0, $sp, 16
	beq	$s3, $s1, .LBB28_16
# %bb.24:                               # %.lr.ph.i.i.i.preheader
	ori	$s5, $zero, 16
	addi.w	$s6, $zero, -1
	b	.LBB28_27
	.p2align	4, , 16
.LBB28_25:                              #   in Loop: Header=BB28_27 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB28_26:                              #   in Loop: Header=BB28_27 Depth=1
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 24
	st.d	$a0, $s0, 8
	addi.d	$s3, $s3, 32
	addi.d	$s0, $a1, 32
	st.d	$s0, $sp, 24
	beq	$s3, $s1, .LBB28_16
.LBB28_27:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s3, 8
	ld.d	$s2, $s3, 0
	st.d	$a1, $sp, 32
	bltu	$a1, $s5, .LBB28_30
# %bb.28:                               # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB28_27 Depth=1
.Ltmp143:                               # EH_LABEL
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp144:                               # EH_LABEL
# %bb.29:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB28_27 Depth=1
	ld.d	$a1, $sp, 32
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB28_30:                              # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB28_27 Depth=1
	beq	$a1, $s6, .LBB28_26
# %bb.31:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB28_27 Depth=1
	beqz	$a1, .LBB28_25
# %bb.32:                               #   in Loop: Header=BB28_27 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB28_26
.LBB28_33:
	move	$s5, $s3
	beq	$s5, $s0, .LBB28_16
.LBB28_34:                              # %.lr.ph.preheader.i
	addi.d	$s1, $s5, 16
	b	.LBB28_36
	.p2align	4, , 16
.LBB28_35:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i29
                                        #   in Loop: Header=BB28_36 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB28_16
.LBB28_36:                              # %.lr.ph.i27
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB28_35
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i28
                                        #   in Loop: Header=BB28_36 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB28_35
.LBB28_38:
.Ltmp145:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end28:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_, .Lfunc_end28-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_,comdat
	.p2align	2, 0x0
GCC_except_table28:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp143-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp143
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp143-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp144-.Ltmp143              #   Call between .Ltmp143 and .Ltmp144
	.uleb128 .Ltmp145-.Lfunc_begin12        #     jumps to .Ltmp145
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp144-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Lfunc_end28-.Ltmp144          #   Call between .Ltmp144 and .Lfunc_end28
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark10DenseRangeElli # -- Begin function _ZN9benchmark8internal9Benchmark10DenseRangeElli
	.globl	_ZN9benchmark8internal9Benchmark10DenseRangeElli
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark10DenseRangeElli,@function
_ZN9benchmark8internal9Benchmark10DenseRangeElli: # @_ZN9benchmark8internal9Benchmark10DenseRangeElli
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$fp, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s1, $a3
	move	$s5, $a2
	move	$s2, $a1
	move	$s6, $a0
	dbar	20
	beqz	$a4, .LBB29_17
.LBB29_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB29_19
.LBB29_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit12
	blt	$s5, $s2, .LBB29_14
# %bb.3:                                # %.lr.ph
	ld.d	$s4, $s6, 80
	ld.d	$s8, $s6, 88
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a0, $a0, -1366
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	lu12i.w	$a0, 349525
	ori	$a0, $a0, 1365
	bstrins.d	$a0, $a0, 58, 32
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	vrepli.b	$vr1, 0
	st.d	$s5, $sp, 40                    # 8-byte Folded Spill
	vst	$vr1, $sp, 16                   # 16-byte Folded Spill
	b	.LBB29_5
	.p2align	4, , 16
.LBB29_4:                               #   in Loop: Header=BB29_5 Depth=1
	st.d	$s3, $s4, 0
	st.d	$fp, $s4, 8
	st.d	$fp, $s4, 16
	addi.d	$s4, $s4, 24
	st.d	$s4, $s6, 80
	add.d	$s2, $s2, $s1
	blt	$s5, $s2, .LBB29_14
.LBB29_5:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB29_10 Depth 2
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	addi.d	$fp, $a0, 8
	st.d	$s2, $a0, 0
	bne	$s4, $s8, .LBB29_4
# %bb.6:                                #   in Loop: Header=BB29_5 Depth=1
	ld.d	$s4, $s6, 72
	sub.d	$s0, $s8, $s4
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	beq	$s0, $a0, .LBB29_15
# %bb.7:                                # %_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB29_5 Depth=1
	srli.d	$a0, $s0, 3
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	mul.d	$a0, $a0, $a1
	ori	$a3, $zero, 1
	sltu	$a1, $a3, $a0
	maskeqz	$a2, $a0, $a1
	masknez	$a1, $a3, $a1
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	ld.d	$a2, $sp, 48                    # 8-byte Folded Reload
	sltu	$a1, $a0, $a2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 4
	alsl.d	$a0, $s7, $a0, 3
.Ltmp146:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp147:                               # EH_LABEL
# %bb.8:                                # %.noexc19
                                        #   in Loop: Header=BB29_5 Depth=1
	move	$s5, $a0
	add.d	$a0, $a0, $s0
	stx.d	$s3, $s5, $s0
	st.d	$fp, $a0, 8
	st.d	$fp, $a0, 16
	move	$fp, $s5
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	beq	$s4, $s8, .LBB29_11
# %bb.9:                                # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB29_5 Depth=1
	move	$fp, $s5
	move	$a0, $s4
	.p2align	4, , 16
.LBB29_10:                              # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB29_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	vld	$vr0, $a0, 0
	ld.d	$a1, $a0, 16
	vst	$vr0, $fp, 0
	st.d	$a1, $fp, 16
	st.d	$zero, $a0, 16
	vst	$vr1, $a0, 0
	addi.d	$a0, $a0, 24
	addi.d	$fp, $fp, 24
	bne	$a0, $s8, .LBB29_10
.LBB29_11:                              # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit.i
                                        #   in Loop: Header=BB29_5 Depth=1
	beqz	$s4, .LBB29_13
# %bb.12:                               # %_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m.exit.i.i
                                        #   in Loop: Header=BB29_5 Depth=1
	ld.d	$a0, $s6, 88
	sub.d	$a1, $a0, $s4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_13:                              # %.noexc
                                        #   in Loop: Header=BB29_5 Depth=1
	addi.d	$s4, $fp, 24
	st.d	$s5, $s6, 72
	st.d	$s4, $s6, 80
	ori	$a0, $zero, 24
	mul.d	$a0, $s7, $a0
	add.d	$s8, $s5, $a0
	st.d	$s8, $s6, 88
	ld.d	$s5, $sp, 40                    # 8-byte Folded Reload
	add.d	$s2, $s2, $s1
	bge	$s5, $s2, .LBB29_5
.LBB29_14:                              # %._crit_edge
	move	$a0, $s6
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB29_15:
.Ltmp149:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp150:                               # EH_LABEL
# %bb.16:                               # %.noexc18
.LBB29_17:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB29_1
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB29_1
.LBB29_19:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB29_2
# %bb.20:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB29_2
.LBB29_21:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit16.loopexit
.Ltmp148:                               # EH_LABEL
	b	.LBB29_23
.LBB29_22:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit16.loopexit.split-lp
.Ltmp151:                               # EH_LABEL
.LBB29_23:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit16
	move	$fp, $a0
	ori	$a1, $zero, 8
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end29:
	.size	_ZN9benchmark8internal9Benchmark10DenseRangeElli, .Lfunc_end29-_ZN9benchmark8internal9Benchmark10DenseRangeElli
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table29:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp146-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp146
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp146-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp147-.Ltmp146              #   Call between .Ltmp146 and .Ltmp147
	.uleb128 .Ltmp148-.Lfunc_begin13        #     jumps to .Ltmp148
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp147-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Ltmp149-.Ltmp147              #   Call between .Ltmp147 and .Ltmp149
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp149-.Lfunc_begin13        # >> Call Site 4 <<
	.uleb128 .Ltmp150-.Ltmp149              #   Call between .Ltmp149 and .Ltmp150
	.uleb128 .Ltmp151-.Lfunc_begin13        #     jumps to .Ltmp151
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp150-.Lfunc_begin13        # >> Call Site 5 <<
	.uleb128 .Lfunc_end29-.Ltmp150          #   Call between .Ltmp150 and .Lfunc_end29
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E # -- Begin function _ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E
	.globl	_ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E,@function
_ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E: # @_ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	jirl	$ra, $a1, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end30:
	.size	_ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E, .Lfunc_end30-_ZN9benchmark8internal9Benchmark5ApplyEPFvPS1_E
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE # -- Begin function _ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE
	.globl	_ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE,@function
_ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE: # @_ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE
	.cfi_startproc
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB31_2
# %bb.1:                                # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	st.d	$a1, $a0, 208
	ret
.LBB31_2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $a0
	move	$a0, $fp
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB31_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
.LBB31_4:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	st.d	$a1, $a0, 208
	ret
.Lfunc_end31:
	.size	_ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE, .Lfunc_end31-_ZN9benchmark8internal9Benchmark5SetupEPFvRKNS_5StateEE
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE # -- Begin function _ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE
	.globl	_ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE,@function
_ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE: # @_ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE
	.cfi_startproc
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB32_2
# %bb.1:                                # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	st.d	$a1, $a0, 216
	ret
.LBB32_2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $a0
	move	$a0, $fp
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB32_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
.LBB32_4:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	st.d	$a1, $a0, 216
	ret
.Lfunc_end32:
	.size	_ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE, .Lfunc_end32-_ZN9benchmark8internal9Benchmark8TeardownEPFvRKNS_5StateEE
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark15RangeMultiplierEi # -- Begin function _ZN9benchmark8internal9Benchmark15RangeMultiplierEi
	.globl	_ZN9benchmark8internal9Benchmark15RangeMultiplierEi
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark15RangeMultiplierEi,@function
_ZN9benchmark8internal9Benchmark15RangeMultiplierEi: # @_ZN9benchmark8internal9Benchmark15RangeMultiplierEi
	.cfi_startproc
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB33_2
# %bb.1:                                # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	st.w	$a1, $a0, 104
	ret
.LBB33_2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $a0
	move	$a0, $fp
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB33_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
.LBB33_4:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	st.w	$a1, $a0, 104
	ret
.Lfunc_end33:
	.size	_ZN9benchmark8internal9Benchmark15RangeMultiplierEi, .Lfunc_end33-_ZN9benchmark8internal9Benchmark15RangeMultiplierEi
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark7MinTimeEd # -- Begin function _ZN9benchmark8internal9Benchmark7MinTimeEd
	.globl	_ZN9benchmark8internal9Benchmark7MinTimeEd
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark7MinTimeEd,@function
_ZN9benchmark8internal9Benchmark7MinTimeEd: # @_ZN9benchmark8internal9Benchmark7MinTimeEd
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	fst.d	$fs0, $sp, 0                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 56, -32
	pcalau12i	$fp, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a1, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a1, .LBB34_3
.LBB34_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a1, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a1, .LBB34_5
.LBB34_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit3
	fst.d	$fa0, $a0, 112
	fld.d	$fs0, $sp, 0                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB34_3:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a1
	fmov.d	$fs0, $fa0
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB34_1
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a0, $s0
	b	.LBB34_1
.LBB34_5:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a1
	fmov.d	$fs0, $fa0
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a1, $a0
	move	$a0, $fp
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB34_2
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a0, $fp
	b	.LBB34_2
.Lfunc_end34:
	.size	_ZN9benchmark8internal9Benchmark7MinTimeEd, .Lfunc_end34-_ZN9benchmark8internal9Benchmark7MinTimeEd
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd # -- Begin function _ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd
	.globl	_ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd,@function
_ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd: # @_ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	fst.d	$fs0, $sp, 0                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 56, -32
	pcalau12i	$fp, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a1, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a1, .LBB35_3
.LBB35_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a1, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a1, .LBB35_5
.LBB35_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit3
	fst.d	$fa0, $a0, 120
	fld.d	$fs0, $sp, 0                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB35_3:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a1
	fmov.d	$fs0, $fa0
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB35_1
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a0, $s0
	b	.LBB35_1
.LBB35_5:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a1
	fmov.d	$fs0, $fa0
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a1, $a0
	move	$a0, $fp
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB35_2
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	fmov.d	$fa0, $fs0
	move	$a0, $fp
	b	.LBB35_2
.Lfunc_end35:
	.size	_ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd, .Lfunc_end35-_ZN9benchmark8internal9Benchmark13MinWarmUpTimeEd
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark10IterationsEl # -- Begin function _ZN9benchmark8internal9Benchmark10IterationsEl
	.globl	_ZN9benchmark8internal9Benchmark10IterationsEl
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark10IterationsEl,@function
_ZN9benchmark8internal9Benchmark10IterationsEl: # @_ZN9benchmark8internal9Benchmark10IterationsEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	pcalau12i	$fp, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB36_4
.LBB36_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a2, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB36_6
.LBB36_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit2
	ld.b	$a2, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB36_8
.LBB36_3:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit4
	st.d	$a1, $a0, 128
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB36_4:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $a0
	move	$a0, $s0
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB36_1
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a0, $s0
	b	.LBB36_1
.LBB36_6:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $a0
	move	$a0, $s0
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB36_2
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a0, $s0
	b	.LBB36_2
.LBB36_8:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $a0
	move	$a0, $fp
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB36_3
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
	b	.LBB36_3
.Lfunc_end36:
	.size	_ZN9benchmark8internal9Benchmark10IterationsEl, .Lfunc_end36-_ZN9benchmark8internal9Benchmark10IterationsEl
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark11RepetitionsEi # -- Begin function _ZN9benchmark8internal9Benchmark11RepetitionsEi
	.globl	_ZN9benchmark8internal9Benchmark11RepetitionsEi
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark11RepetitionsEi,@function
_ZN9benchmark8internal9Benchmark11RepetitionsEi: # @_ZN9benchmark8internal9Benchmark11RepetitionsEi
	.cfi_startproc
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB37_2
# %bb.1:                                # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	st.w	$a1, $a0, 136
	ret
.LBB37_2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $a0
	move	$a0, $fp
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB37_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a0, $fp
.LBB37_4:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	st.w	$a1, $a0, 136
	ret
.Lfunc_end37:
	.size	_ZN9benchmark8internal9Benchmark11RepetitionsEi, .Lfunc_end37-_ZN9benchmark8internal9Benchmark11RepetitionsEi
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb # -- Begin function _ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb
	.globl	_ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb,@function
_ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb: # @_ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb
# %bb.0:
	ori	$a2, $zero, 1
	masknez	$a2, $a2, $a1
	ori	$a3, $zero, 6
	maskeqz	$a1, $a3, $a1
	or	$a1, $a1, $a2
	st.w	$a1, $a0, 40
	ret
.Lfunc_end38:
	.size	_ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb, .Lfunc_end38-_ZN9benchmark8internal9Benchmark20ReportAggregatesOnlyEb
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb # -- Begin function _ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb
	.globl	_ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb,@function
_ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb: # @_ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb
# %bb.0:
	ld.wu	$a2, $a0, 40
	addi.w	$a3, $zero, -6
	lu32i.d	$a3, 0
	and	$a3, $a2, $a3
	addi.d	$a3, $a3, 1
	ori	$a2, $a2, 5
	maskeqz	$a2, $a2, $a1
	masknez	$a1, $a3, $a1
	or	$a1, $a2, $a1
	st.w	$a1, $a0, 40
	ret
.Lfunc_end39:
	.size	_ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb, .Lfunc_end39-_ZN9benchmark8internal9Benchmark21DisplayAggregatesOnlyEb
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv # -- Begin function _ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv
	.globl	_ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv,@function
_ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv: # @_ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv
# %bb.0:
	ori	$a1, $zero, 1
	st.b	$a1, $a0, 140
	ret
.Lfunc_end40:
	.size	_ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv, .Lfunc_end40-_ZN9benchmark8internal9Benchmark21MeasureProcessCPUTimeEv
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark11UseRealTimeEv # -- Begin function _ZN9benchmark8internal9Benchmark11UseRealTimeEv
	.globl	_ZN9benchmark8internal9Benchmark11UseRealTimeEv
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark11UseRealTimeEv,@function
_ZN9benchmark8internal9Benchmark11UseRealTimeEv: # @_ZN9benchmark8internal9Benchmark11UseRealTimeEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	pcalau12i	$fp, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	beqz	$a1, .LBB41_4
.LBB41_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.d	$a3, $fp, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	beqz	$a3, .LBB41_3
# %bb.2:
	pcalau12i	$a1, %pc_hi20(.L.str.10)
	addi.d	$a1, $a1, %pc_lo12(.L.str.10)
	ori	$a2, $zero, 56
	move	$fp, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $fp
.LBB41_3:                               # %_ZN9benchmark8internallsIA57_cEERNS0_7LogTypeES4_RKT_.exit
	ori	$a1, $zero, 1
	st.b	$a1, $a0, 141
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB41_4:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB41_1
# %bb.5:
	st.d	$zero, $fp, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB41_1
.Lfunc_end41:
	.size	_ZN9benchmark8internal9Benchmark11UseRealTimeEv, .Lfunc_end41-_ZN9benchmark8internal9Benchmark11UseRealTimeEv
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark13UseManualTimeEv # -- Begin function _ZN9benchmark8internal9Benchmark13UseManualTimeEv
	.globl	_ZN9benchmark8internal9Benchmark13UseManualTimeEv
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark13UseManualTimeEv,@function
_ZN9benchmark8internal9Benchmark13UseManualTimeEv: # @_ZN9benchmark8internal9Benchmark13UseManualTimeEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	pcalau12i	$fp, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	beqz	$a1, .LBB42_4
.LBB42_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.d	$a3, $fp, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	beqz	$a3, .LBB42_3
# %bb.2:
	pcalau12i	$a1, %pc_hi20(.L.str.10)
	addi.d	$a1, $a1, %pc_lo12(.L.str.10)
	ori	$a2, $zero, 56
	move	$fp, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $fp
.LBB42_3:                               # %_ZN9benchmark8internallsIA57_cEERNS0_7LogTypeES4_RKT_.exit
	ori	$a1, $zero, 1
	st.b	$a1, $a0, 142
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB42_4:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB42_1
# %bb.5:
	st.d	$zero, $fp, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB42_1
.Lfunc_end42:
	.size	_ZN9benchmark8internal9Benchmark13UseManualTimeEv, .Lfunc_end42-_ZN9benchmark8internal9Benchmark13UseManualTimeEv
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE # -- Begin function _ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE
	.globl	_ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE,@function
_ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE: # @_ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE
# %bb.0:
	st.w	$a1, $a0, 144
	ret
.Lfunc_end43:
	.size	_ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE, .Lfunc_end43-_ZN9benchmark8internal9Benchmark10ComplexityENS_4BigOE
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark10ComplexityEPFdlE # -- Begin function _ZN9benchmark8internal9Benchmark10ComplexityEPFdlE
	.globl	_ZN9benchmark8internal9Benchmark10ComplexityEPFdlE
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark10ComplexityEPFdlE,@function
_ZN9benchmark8internal9Benchmark10ComplexityEPFdlE: # @_ZN9benchmark8internal9Benchmark10ComplexityEPFdlE
# %bb.0:
	st.d	$a1, $a0, 152
	ori	$a1, $zero, 8
	st.w	$a1, $a0, 144
	ret
.Lfunc_end44:
	.size	_ZN9benchmark8internal9Benchmark10ComplexityEPFdlE, .Lfunc_end44-_ZN9benchmark8internal9Benchmark10ComplexityEPFdlE
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark7ThreadsEi # -- Begin function _ZN9benchmark8internal9Benchmark7ThreadsEi
	.globl	_ZN9benchmark8internal9Benchmark7ThreadsEi
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark7ThreadsEi,@function
_ZN9benchmark8internal9Benchmark7ThreadsEi: # @_ZN9benchmark8internal9Benchmark7ThreadsEi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a1
	dbar	20
	beqz	$a2, .LBB45_10
.LBB45_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.d	$a1, $a0, 192
	ld.d	$a2, $a0, 200
	beq	$a1, $a2, .LBB45_3
# %bb.2:
	st.w	$fp, $a1, 0
	addi.d	$a1, $a1, 4
	st.d	$a1, $a0, 192
	b	.LBB45_9
.LBB45_3:
	move	$s3, $a0
	ld.d	$s0, $a0, 184
	sub.d	$s1, $a1, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB45_12
# %bb.4:                                # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.w	$fp, $a0, $s1
	blez	$s1, .LBB45_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB45_6:                               # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i
	add.d	$fp, $s2, $s1
	beqz	$s0, .LBB45_8
# %bb.7:                                # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB45_8:                               # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i
	addi.d	$a1, $fp, 4
	move	$a0, $s3
	st.d	$s2, $s3, 184
	st.d	$a1, $s3, 192
	alsl.d	$a1, $s4, $s2, 2
	st.d	$a1, $s3, 200
.LBB45_9:                               # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB45_10:
	pcalau12i	$a1, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB45_1
# %bb.11:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB45_1
.LBB45_12:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end45:
	.size	_ZN9benchmark8internal9Benchmark7ThreadsEi, .Lfunc_end45-_ZN9benchmark8internal9Benchmark7ThreadsEi
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark11ThreadRangeEii # -- Begin function _ZN9benchmark8internal9Benchmark11ThreadRangeEii
	.globl	_ZN9benchmark8internal9Benchmark11ThreadRangeEii
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark11ThreadRangeEii,@function
_ZN9benchmark8internal9Benchmark11ThreadRangeEii: # @_ZN9benchmark8internal9Benchmark11ThreadRangeEii
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	pcalau12i	$fp, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a3, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a3, .LBB46_3
.LBB46_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a3, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a3, .LBB46_5
.LBB46_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit3
	addi.d	$a4, $a0, 184
	ori	$a3, $zero, 2
	move	$fp, $a0
	move	$a0, $a4
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB46_3:
	pcalau12i	$a3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a3, $a3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a3
	move	$s1, $a2
	move	$s2, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s2
	move	$a2, $s1
	move	$a3, $a0
	move	$a0, $s0
	addi.w	$a3, $a3, 0
	beqz	$a3, .LBB46_1
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s2
	move	$a2, $s1
	move	$a0, $s0
	b	.LBB46_1
.LBB46_5:
	pcalau12i	$a3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a3, $a3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a3
	move	$s0, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s0
	move	$a3, $a0
	move	$a0, $fp
	addi.w	$a3, $a3, 0
	beqz	$a3, .LBB46_2
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s0
	move	$a0, $fp
	b	.LBB46_2
.Lfunc_end46:
	.size	_ZN9benchmark8internal9Benchmark11ThreadRangeEii, .Lfunc_end46-_ZN9benchmark8internal9Benchmark11ThreadRangeEii
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i,"axG",@progbits,_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i,comdat
	.hidden	_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i # -- Begin function _ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.weak	_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.p2align	5
	.type	_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i,@function
_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i: # @_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$s3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s1, $a3
	move	$s0, $a2
	move	$s2, $a1
	move	$fp, $a0
	dbar	20
	beqz	$a4, .LBB47_37
.LBB47_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB47_39
.LBB47_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit12
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$a1, $a0, .LBB47_4
# %bb.3:
	st.w	$s2, $a1, 0
	addi.d	$a1, $a1, 4
	st.d	$a1, $fp, 8
	bne	$s2, $s0, .LBB47_10
	b	.LBB47_30
.LBB47_4:
	ld.d	$s3, $fp, 0
	sub.d	$s4, $a1, $s3
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s4, $a0, .LBB47_41
# %bb.5:                                # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s4, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s6, $a0, $a1
	slli.d	$a0, $s6, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.w	$s2, $a0, $s4
	blez	$s4, .LBB47_7
# %bb.6:
	move	$a0, $s5
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB47_7:                               # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i
	add.d	$s7, $s5, $s4
	beqz	$s3, .LBB47_9
# %bb.8:                                # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_9:                               # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i
	addi.d	$a1, $s7, 4
	st.d	$s5, $fp, 0
	st.d	$a1, $fp, 8
	alsl.d	$a0, $s6, $s5, 2
	st.d	$a0, $fp, 16
	beq	$s2, $s0, .LBB47_30
.LBB47_10:
	addi.w	$s3, $s2, 1
	bne	$s3, $s0, .LBB47_13
# %bb.11:
	beq	$a1, $a0, .LBB47_24
# %bb.12:
	st.w	$s0, $a1, 0
	addi.d	$a0, $a1, 4
	st.d	$a0, $fp, 8
	b	.LBB47_30
.LBB47_13:
	addi.w	$a0, $zero, -2
	addi.w	$s4, $s0, -1
	blt	$a0, $s2, .LBB47_15
# %bb.14:
	slti	$a0, $s4, -1
	addi.w	$a1, $zero, -1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	move	$a0, $fp
	move	$a1, $s3
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i)
	jirl	$ra, $ra, 0
.LBB47_15:
	bgez	$s2, .LBB47_19
# %bb.16:
	bltz	$s0, .LBB47_19
# %bb.17:
	ld.d	$a0, $fp, 8
	ld.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB47_31
# %bb.18:
	st.w	$zero, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 8
.LBB47_19:                              # %_ZNSt6vectorIiSaIiEE9push_backEOi.exit
	ori	$a0, $zero, 2
	blt	$s0, $a0, .LBB47_21
.LBB47_20:
	ori	$a0, $zero, 1
	slt	$a1, $a0, $s3
	masknez	$a0, $a0, $a1
	maskeqz	$a1, $s3, $a1
	or	$a1, $a1, $a0
	move	$a0, $fp
	move	$a2, $s4
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i)
	jirl	$ra, $ra, 0
.LBB47_21:
	ld.d	$a0, $fp, 8
	ld.w	$a1, $a0, -4
	beq	$s0, $a1, .LBB47_30
# %bb.22:
	ld.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB47_24
# %bb.23:
	st.w	$s0, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 8
	b	.LBB47_30
.LBB47_24:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $a0, $s1
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB47_41
# %bb.25:                               # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i24
	srai.d	$a0, $s2, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	stx.w	$s0, $a0, $s2
	blez	$s2, .LBB47_27
# %bb.26:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB47_27:                              # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i26
	add.d	$s0, $s3, $s2
	beqz	$s1, .LBB47_29
# %bb.28:                               # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i28
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_29:                              # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i29
	addi.d	$a0, $s0, 4
	st.d	$s3, $fp, 0
	st.d	$a0, $fp, 8
	alsl.d	$a0, $s4, $s3, 2
	st.d	$a0, $fp, 16
.LBB47_30:                              # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit21
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB47_31:
	ld.d	$s2, $fp, 0
	sub.d	$s5, $a0, $s2
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB47_41
# %bb.32:                               # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i
	srai.d	$a0, $s5, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s6, $a0
	stx.w	$zero, $a0, $s5
	blez	$s5, .LBB47_34
# %bb.33:
	move	$a0, $s6
	move	$a1, $s2
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB47_34:                              # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i.i
	add.d	$s8, $s6, $s5
	beqz	$s2, .LBB47_36
# %bb.35:                               # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i.i
	move	$a0, $s2
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_36:                              # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJiEEEvDpOT_.exit.i.i
	addi.d	$a0, $s8, 4
	st.d	$s6, $fp, 0
	st.d	$a0, $fp, 8
	alsl.d	$a0, $s7, $s6, 2
	st.d	$a0, $fp, 16
	ori	$a0, $zero, 2
	bge	$s0, $a0, .LBB47_20
	b	.LBB47_21
.LBB47_37:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB47_1
# %bb.38:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB47_1
.LBB47_39:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB47_2
# %bb.40:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB47_2
.LBB47_41:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end47:
	.size	_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i, .Lfunc_end47-_ZN9benchmark8internal8AddRangeIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_endproc
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii # -- Begin function _ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii
	.globl	_ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii,@function
_ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii: # @_ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$s3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s1, $a3
	move	$s0, $a2
	move	$s2, $a1
	move	$fp, $a0
	dbar	20
	beqz	$a4, .LBB48_24
.LBB48_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB48_26
.LBB48_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit3
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB48_28
.LBB48_3:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit5
	bge	$s2, $s0, .LBB48_15
# %bb.4:                                # %.lr.ph
	ld.d	$a0, $fp, 192
	ld.d	$a1, $fp, 200
	addi.w	$a2, $zero, -4
	lu52i.d	$s6, $a2, 2047
	addi.w	$a2, $zero, -1
	lu52i.d	$s8, $a2, 511
	b	.LBB48_6
	.p2align	4, , 16
.LBB48_5:                               #   in Loop: Header=BB48_6 Depth=1
	st.w	$s2, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 192
	add.w	$s2, $s2, $s1
	bge	$s2, $s0, .LBB48_13
.LBB48_6:                               # =>This Inner Loop Header: Depth=1
	bne	$a0, $a1, .LBB48_5
# %bb.7:                                #   in Loop: Header=BB48_6 Depth=1
	ld.d	$s4, $fp, 184
	sub.d	$s3, $a1, $s4
	beq	$s3, $s6, .LBB48_23
# %bb.8:                                # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i8
                                        #   in Loop: Header=BB48_6 Depth=1
	srai.d	$a0, $s3, 2
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	sltu	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.w	$s2, $a0, $s3
	blez	$s3, .LBB48_10
# %bb.9:                                #   in Loop: Header=BB48_6 Depth=1
	move	$a0, $s5
	move	$a1, $s4
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB48_10:                              # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i10
                                        #   in Loop: Header=BB48_6 Depth=1
	beqz	$s4, .LBB48_12
# %bb.11:                               # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i12
                                        #   in Loop: Header=BB48_6 Depth=1
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_12:                              # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i13
                                        #   in Loop: Header=BB48_6 Depth=1
	add.d	$a0, $s5, $s3
	addi.d	$a0, $a0, 4
	st.d	$s5, $fp, 184
	st.d	$a0, $fp, 192
	alsl.d	$a1, $s7, $s5, 2
	st.d	$a1, $fp, 200
	add.w	$s2, $s2, $s1
	blt	$s2, $s0, .LBB48_6
.LBB48_13:                              # %._crit_edge
	beq	$a0, $a1, .LBB48_16
.LBB48_14:
	st.w	$s0, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 192
	b	.LBB48_22
.LBB48_15:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit5.._crit_edge_crit_edge
	ld.d	$a0, $fp, 192
	ld.d	$a1, $fp, 200
	bne	$a0, $a1, .LBB48_14
.LBB48_16:
	ld.d	$s1, $fp, 184
	sub.d	$s2, $a1, $s1
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB48_23
# %bb.17:                               # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s2, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	stx.w	$s0, $a0, $s2
	blez	$s2, .LBB48_19
# %bb.18:
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB48_19:                              # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i
	add.d	$s0, $s3, $s2
	beqz	$s1, .LBB48_21
# %bb.20:                               # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_21:                              # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i
	addi.d	$a0, $s0, 4
	st.d	$s3, $fp, 184
	st.d	$a0, $fp, 192
	alsl.d	$a0, $s4, $s3, 2
	st.d	$a0, $fp, 200
.LBB48_22:                              # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit
	move	$a0, $fp
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB48_23:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB48_24:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB48_1
# %bb.25:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB48_1
.LBB48_26:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB48_2
# %bb.27:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB48_2
.LBB48_28:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB48_3
# %bb.29:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB48_3
.Lfunc_end48:
	.size	_ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii, .Lfunc_end48-_ZN9benchmark8internal9Benchmark16DenseThreadRangeEiii
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal9Benchmark12ThreadPerCpuEv # -- Begin function _ZN9benchmark8internal9Benchmark12ThreadPerCpuEv
	.globl	_ZN9benchmark8internal9Benchmark12ThreadPerCpuEv
	.p2align	5
	.type	_ZN9benchmark8internal9Benchmark12ThreadPerCpuEv,@function
_ZN9benchmark8internal9Benchmark12ThreadPerCpuEv: # @_ZN9benchmark8internal9Benchmark12ThreadPerCpuEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark7CPUInfo3GetEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 192
	ld.d	$a2, $fp, 200
	beq	$a1, $a2, .LBB49_2
# %bb.1:
	ld.w	$a0, $a0, 0
	st.w	$a0, $a1, 0
	addi.d	$a0, $a1, 4
	st.d	$a0, $fp, 192
	b	.LBB49_8
.LBB49_2:
	move	$s2, $a0
	ld.d	$s0, $fp, 184
	sub.d	$s1, $a1, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB49_9
# %bb.3:                                # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s3, $a0, $a1
	slli.d	$a0, $s3, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s2, 0
	move	$s2, $a0
	stx.w	$a1, $a0, $s1
	blez	$s1, .LBB49_5
# %bb.4:
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB49_5:                               # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i
	add.d	$s4, $s2, $s1
	beqz	$s0, .LBB49_7
# %bb.6:                                # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB49_7:                               # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i
	addi.d	$a0, $s4, 4
	st.d	$s2, $fp, 184
	st.d	$a0, $fp, 192
	alsl.d	$a0, $s3, $s2, 2
	st.d	$a0, $fp, 200
.LBB49_8:                               # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB49_9:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end49:
	.size	_ZN9benchmark8internal9Benchmark12ThreadPerCpuEv, .Lfunc_end49-_ZN9benchmark8internal9Benchmark12ThreadPerCpuEv
	.cfi_endproc
                                        # -- End function
	.hidden	_ZNK9benchmark8internal9Benchmark7GetNameEv # -- Begin function _ZNK9benchmark8internal9Benchmark7GetNameEv
	.globl	_ZNK9benchmark8internal9Benchmark7GetNameEv
	.p2align	5
	.type	_ZNK9benchmark8internal9Benchmark7GetNameEv,@function
_ZNK9benchmark8internal9Benchmark7GetNameEv: # @_ZNK9benchmark8internal9Benchmark7GetNameEv
# %bb.0:
	ld.d	$a0, $a0, 8
	ret
.Lfunc_end50:
	.size	_ZNK9benchmark8internal9Benchmark7GetNameEv, .Lfunc_end50-_ZNK9benchmark8internal9Benchmark7GetNameEv
                                        # -- End function
	.hidden	_ZNK9benchmark8internal9Benchmark10GetArgNameEi # -- Begin function _ZNK9benchmark8internal9Benchmark10GetArgNameEi
	.globl	_ZNK9benchmark8internal9Benchmark10GetArgNameEi
	.p2align	5
	.type	_ZNK9benchmark8internal9Benchmark10GetArgNameEi,@function
_ZNK9benchmark8internal9Benchmark10GetArgNameEi: # @_ZNK9benchmark8internal9Benchmark10GetArgNameEi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	pcalau12i	$fp, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a2, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB51_3
.LBB51_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a2, $fp, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a2, .LBB51_5
.LBB51_2:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit3
	ld.d	$a0, $a0, 48
	slli.d	$a1, $a1, 5
	ldx.d	$a0, $a0, $a1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB51_3:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a0
	move	$a0, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $a0
	move	$a0, $s0
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB51_1
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	b	.LBB51_1
.LBB51_5:
	pcalau12i	$a2, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a2, $a2, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	move	$a0, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $a0
	move	$a0, $fp
	addi.w	$a2, $a2, 0
	beqz	$a2, .LBB51_2
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	move	$a1, $s0
	b	.LBB51_2
.Lfunc_end51:
	.size	_ZNK9benchmark8internal9Benchmark10GetArgNameEi, .Lfunc_end51-_ZNK9benchmark8internal9Benchmark10GetArgNameEi
	.cfi_endproc
                                        # -- End function
	.hidden	_ZNK9benchmark8internal9Benchmark11GetTimeUnitEv # -- Begin function _ZNK9benchmark8internal9Benchmark11GetTimeUnitEv
	.globl	_ZNK9benchmark8internal9Benchmark11GetTimeUnitEv
	.p2align	5
	.type	_ZNK9benchmark8internal9Benchmark11GetTimeUnitEv,@function
_ZNK9benchmark8internal9Benchmark11GetTimeUnitEv: # @_ZNK9benchmark8internal9Benchmark11GetTimeUnitEv
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a0, 100
	beqz	$a1, .LBB52_2
# %bb.1:
	pcaddu18i	$t8, %call36(_ZN9benchmark18GetDefaultTimeUnitEv)
	jr	$t8
.LBB52_2:
	ld.w	$a0, $a0, 96
	ret
.Lfunc_end52:
	.size	_ZNK9benchmark8internal9Benchmark11GetTimeUnitEv, .Lfunc_end52-_ZNK9benchmark8internal9Benchmark11GetTimeUnitEv
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE # -- Begin function _ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE
	.globl	_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE
	.p2align	5
	.type	_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE,@function
_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE: # @_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 224
	move	$a0, $a1
	jr	$a2
.Lfunc_end53:
	.size	_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE, .Lfunc_end53-_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark25ClearRegisteredBenchmarksEv # -- Begin function _ZN9benchmark25ClearRegisteredBenchmarksEv
	.globl	_ZN9benchmark25ClearRegisteredBenchmarksEv
	.p2align	5
	.type	_ZN9benchmark25ClearRegisteredBenchmarksEv,@function
_ZN9benchmark25ClearRegisteredBenchmarksEv: # @_ZN9benchmark25ClearRegisteredBenchmarksEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	dbar	20
	pcalau12i	$a1, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$fp, $a1, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	beqz	$a0, .LBB54_11
.LBB54_1:                               # %_ZN9benchmark8internal17BenchmarkFamilies11GetInstanceEv.exit
	addi.d	$s0, $fp, 24
	move	$a0, $s0
	pcaddu18i	$ra, %call36(pthread_mutex_lock)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB54_13
# %bb.2:                                # %_ZN9benchmark9MutexLockC2ERNS_5MutexE.exit.i
	ld.d	$s1, $fp, 0
	ld.d	$s2, $fp, 8
	move	$a0, $s1
	beq	$s2, $s1, .LBB54_8
# %bb.3:                                # %.lr.ph.i.i.i.i.preheader
	move	$s3, $s1
	b	.LBB54_5
	.p2align	4, , 16
.LBB54_4:                               # %_ZSt8_DestroyISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB54_5 Depth=1
	st.d	$zero, $s3, 0
	addi.d	$s3, $s3, 8
	beq	$s3, $s2, .LBB54_7
.LBB54_5:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s3, 0
	beqz	$a0, .LBB54_4
# %bb.6:                                # %_ZNKSt14default_deleteIN9benchmark8internal9BenchmarkEEclEPS2_.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB54_5 Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 8
	jirl	$ra, $a1, 0
	b	.LBB54_4
.LBB54_7:                               # %_ZSt8_DestroyIPSt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EES6_EvT_S8_RSaIT0_E.exit.i.i.i
	ld.d	$a0, $fp, 0
	st.d	$s1, $fp, 8
.LBB54_8:                               # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EE5clearEv.exit.i
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	srai.d	$a1, $a1, 3
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	beq	$a1, $a0, .LBB54_10
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_)
	jirl	$ra, $ra, 0
.LBB54_10:                              # %_ZN9benchmark8internal17BenchmarkFamilies15ClearBenchmarksEv.exit
	move	$a0, $s0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(pthread_mutex_unlock)
	jr	$t8
.LBB54_11:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB54_1
# %bb.12:
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 48
	vst	$vr0, $fp, 32
	vst	$vr0, $fp, 16
	vst	$vr0, $fp, 0
	pcalau12i	$a0, %pc_hi20(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN9benchmark8internal17BenchmarkFamiliesD2Ev)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB54_1
.LBB54_13:
	pcaddu18i	$ra, %call36(_ZSt20__throw_system_errori)
	jirl	$ra, $ra, 0
.Lfunc_end54:
	.size	_ZN9benchmark25ClearRegisteredBenchmarksEv, .Lfunc_end54-_ZN9benchmark25ClearRegisteredBenchmarksEv
	.cfi_endproc
                                        # -- End function
	.hidden	_ZN9benchmark11CreateRangeElli  # -- Begin function _ZN9benchmark11CreateRangeElli
	.globl	_ZN9benchmark11CreateRangeElli
	.p2align	5
	.type	_ZN9benchmark11CreateRangeElli,@function
_ZN9benchmark11CreateRangeElli:         # @_ZN9benchmark11CreateRangeElli
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
.Ltmp152:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal8AddRangeIlEEvPSt6vectorIT_SaIS3_EES3_S3_i)
	jirl	$ra, $ra, 0
.Ltmp153:                               # EH_LABEL
# %bb.1:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB55_2:
.Ltmp154:                               # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$s0, $a0
	beqz	$a2, .LBB55_4
# %bb.3:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB55_4:                               # %_ZNSt6vectorIlSaIlEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end55:
	.size	_ZN9benchmark11CreateRangeElli, .Lfunc_end55-_ZN9benchmark11CreateRangeElli
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table55:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Ltmp152-.Lfunc_begin14        # >> Call Site 1 <<
	.uleb128 .Ltmp153-.Ltmp152              #   Call between .Ltmp152 and .Ltmp153
	.uleb128 .Ltmp154-.Lfunc_begin14        #     jumps to .Ltmp154
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp153-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Lfunc_end55-.Ltmp153          #   Call between .Ltmp153 and .Lfunc_end55
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark16CreateDenseRangeElli # -- Begin function _ZN9benchmark16CreateDenseRangeElli
	.globl	_ZN9benchmark16CreateDenseRangeElli
	.p2align	5
	.type	_ZN9benchmark16CreateDenseRangeElli,@function
_ZN9benchmark16CreateDenseRangeElli:    # @_ZN9benchmark16CreateDenseRangeElli
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$a4, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $a4, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s0, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	dbar	20
	beqz	$a4, .LBB56_15
.LBB56_1:                               # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	move	$s5, $zero
	st.d	$zero, $fp, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
	blt	$s1, $s2, .LBB56_12
# %bb.2:                                # %.lr.ph
	move	$a0, $zero
	move	$a1, $zero
	move	$s3, $zero
	addi.w	$a2, $zero, -8
	lu52i.d	$s6, $a2, 2047
	addi.w	$a2, $zero, -1
	lu52i.d	$s8, $a2, 255
	b	.LBB56_4
	.p2align	4, , 16
.LBB56_3:                               #   in Loop: Header=BB56_4 Depth=1
	st.d	$s2, $a1, 0
	addi.d	$a1, $a1, 8
	st.d	$a1, $fp, 8
	move	$s5, $s3
	add.d	$s2, $s2, $s0
	blt	$s1, $s2, .LBB56_12
.LBB56_4:                               # =>This Inner Loop Header: Depth=1
	bne	$a1, $a0, .LBB56_3
# %bb.5:                                #   in Loop: Header=BB56_4 Depth=1
	sub.d	$s4, $a0, $s3
	beq	$s4, $s6, .LBB56_13
# %bb.6:                                # %_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc.exit.i.i
                                        #   in Loop: Header=BB56_4 Depth=1
	srai.d	$a0, $s4, 3
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	sltu	$a1, $a0, $s8
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 3
.Ltmp155:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp156:                               # EH_LABEL
# %bb.7:                                # %.noexc6
                                        #   in Loop: Header=BB56_4 Depth=1
	move	$s5, $a0
	stx.d	$s2, $a0, $s4
	blez	$s4, .LBB56_9
# %bb.8:                                #   in Loop: Header=BB56_4 Depth=1
	move	$a0, $s5
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_9:                               # %_ZNSt6vectorIlSaIlEE11_S_relocateEPlS2_S2_RS0_.exit.i.i
                                        #   in Loop: Header=BB56_4 Depth=1
	beqz	$s3, .LBB56_11
# %bb.10:                               # %_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm.exit.i.i.i
                                        #   in Loop: Header=BB56_4 Depth=1
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_11:                              # %_ZNSt6vectorIlSaIlEE17_M_realloc_appendIJRKlEEEvDpOT_.exit.i
                                        #   in Loop: Header=BB56_4 Depth=1
	add.d	$a0, $s5, $s4
	addi.d	$a1, $a0, 8
	st.d	$a1, $fp, 8
	alsl.d	$a0, $s7, $s5, 3
	st.d	$a0, $fp, 16
	move	$s3, $s5
	add.d	$s2, $s2, $s0
	bge	$s1, $s2, .LBB56_4
.LBB56_12:                              # %._crit_edge
	st.d	$s5, $fp, 0
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB56_13:
	st.d	$s3, $fp, 0
.Ltmp158:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp159:                               # EH_LABEL
# %bb.14:                               # %.noexc
.LBB56_15:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB56_1
# %bb.16:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB56_1
.LBB56_17:                              # %.loopexit
.Ltmp157:                               # EH_LABEL
	move	$s0, $a0
	st.d	$s3, $fp, 0
	b	.LBB56_19
.LBB56_18:                              # %.loopexit.split-lp
.Ltmp160:                               # EH_LABEL
	move	$s0, $a0
.LBB56_19:
	beqz	$s3, .LBB56_21
# %bb.20:
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_21:                              # %_ZNSt6vectorIlSaIlEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end56:
	.size	_ZN9benchmark16CreateDenseRangeElli, .Lfunc_end56-_ZN9benchmark16CreateDenseRangeElli
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table56:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Ltmp155-.Lfunc_begin15        # >> Call Site 1 <<
	.uleb128 .Ltmp156-.Ltmp155              #   Call between .Ltmp155 and .Ltmp156
	.uleb128 .Ltmp157-.Lfunc_begin15        #     jumps to .Ltmp157
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp156-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp158-.Ltmp156              #   Call between .Ltmp156 and .Ltmp158
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp158-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp159-.Ltmp158              #   Call between .Ltmp158 and .Ltmp159
	.uleb128 .Ltmp160-.Lfunc_begin15        #     jumps to .Ltmp160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp159-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Lfunc_end56-.Ltmp159          #   Call between .Ltmp159 and .Lfunc_end56
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.hidden	_ZN9benchmark8internal9BenchmarkD2Ev # -- Begin function _ZN9benchmark8internal9BenchmarkD2Ev
	.globl	_ZN9benchmark8internal9BenchmarkD2Ev
	.p2align	5
	.type	_ZN9benchmark8internal9BenchmarkD2Ev,@function
_ZN9benchmark8internal9BenchmarkD2Ev:   # @_ZN9benchmark8internal9BenchmarkD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN9benchmark8internal9BenchmarkE+16)
	addi.d	$a1, $a0, %pc_lo12(_ZTVN9benchmark8internal9BenchmarkE+16)
	ld.d	$a0, $fp, 184
	st.d	$a1, $fp, 0
	beqz	$a0, .LBB57_2
# %bb.1:
	ld.d	$a1, $fp, 200
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_2:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $fp, 160
	ld.d	$s0, $fp, 168
	beq	$a0, $s0, .LBB57_8
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB57_5
	.p2align	4, , 16
.LBB57_4:                               # %_ZSt8_DestroyIN9benchmark8internal10StatisticsEEvPT_.exit.i.i
                                        #   in Loop: Header=BB57_5 Depth=1
	addi.d	$a0, $s1, 32
	addi.d	$s1, $s1, 48
	beq	$a0, $s0, .LBB57_7
.LBB57_5:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB57_4
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB57_5 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB57_4
.LBB57_7:                               # %_ZSt8_DestroyIPN9benchmark8internal10StatisticsES2_EvT_S4_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 160
.LBB57_8:                               # %_ZSt8_DestroyIPN9benchmark8internal10StatisticsES2_EvT_S4_RSaIT0_E.exit.i
	beqz	$a0, .LBB57_10
# %bb.9:
	ld.d	$a1, $fp, 176
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_10:                              # %_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EED2Ev.exit
	ld.d	$s0, $fp, 72
	ld.d	$s1, $fp, 80
	bne	$s0, $s1, .LBB57_16
# %bb.11:                               # %_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E.exit.i
	beqz	$s0, .LBB57_13
.LBB57_12:
	ld.d	$a0, $fp, 88
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_13:                              # %_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev.exit
	ld.d	$a0, $fp, 48
	ld.d	$s0, $fp, 56
	beq	$a0, $s0, .LBB57_23
# %bb.14:                               # %.lr.ph.i.i9.preheader
	addi.d	$s1, $a0, 16
	b	.LBB57_19
	.p2align	4, , 16
.LBB57_15:                              # %_ZSt8_DestroyISt6vectorIlSaIlEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB57_16 Depth=1
	addi.d	$s0, $s0, 24
	beq	$s0, $s1, .LBB57_21
.LBB57_16:                              # %.lr.ph.i.i3
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB57_15
# %bb.17:                               #   in Loop: Header=BB57_16 Depth=1
	ld.d	$a1, $s0, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB57_15
	.p2align	4, , 16
.LBB57_18:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB57_19 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB57_22
.LBB57_19:                              # %.lr.ph.i.i9
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB57_18
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB57_19 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB57_18
.LBB57_21:                              # %_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E.exitthread-pre-split.i
	ld.d	$s0, $fp, 72
	bnez	$s0, .LBB57_12
	b	.LBB57_13
.LBB57_22:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 48
.LBB57_23:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB57_25
# %bb.24:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_25:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $fp, 24
	beq	$a0, $a1, .LBB57_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB57_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end57:
	.size	_ZN9benchmark8internal9BenchmarkD2Ev, .Lfunc_end57-_ZN9benchmark8internal9BenchmarkD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal17FunctionBenchmarkD0Ev,"axG",@progbits,_ZN9benchmark8internal17FunctionBenchmarkD0Ev,comdat
	.hidden	_ZN9benchmark8internal17FunctionBenchmarkD0Ev # -- Begin function _ZN9benchmark8internal17FunctionBenchmarkD0Ev
	.weak	_ZN9benchmark8internal17FunctionBenchmarkD0Ev
	.p2align	5
	.type	_ZN9benchmark8internal17FunctionBenchmarkD0Ev,@function
_ZN9benchmark8internal17FunctionBenchmarkD0Ev: # @_ZN9benchmark8internal17FunctionBenchmarkD0Ev
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal9BenchmarkD2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 232
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end58:
	.size	_ZN9benchmark8internal17FunctionBenchmarkD0Ev, .Lfunc_end58-_ZN9benchmark8internal17FunctionBenchmarkD0Ev
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	5
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZSt9terminatev)
	jirl	$ra, $ra, 0
.Lfunc_end59:
	.size	__clang_call_terminate, .Lfunc_end59-__clang_call_terminate
                                        # -- End function
	.section	.text._ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,"axG",@progbits,_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,comdat
	.hidden	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE # -- Begin function _ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
	.weak	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
	.p2align	5
	.type	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,@function
_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE: # @_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	addi.d	$sp, $sp, -480
	.cfi_def_cfa_offset 480
	st.d	$ra, $sp, 472                   # 8-byte Folded Spill
	st.d	$fp, $sp, 464                   # 8-byte Folded Spill
	st.d	$s0, $sp, 456                   # 8-byte Folded Spill
	st.d	$s1, $sp, 448                   # 8-byte Folded Spill
	st.d	$s2, $sp, 440                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s2, $a1
	move	$s0, $a0
	addi.d	$s1, $a0, 8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $s0, 16
	ld.d	$a1, $s2, 0
	ld.d	$a0, $s2, 8
	addi.d	$s2, $s0, 16
	add.d	$a2, $a1, $a0
.Ltmp161:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a3, $s1
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE)
	jirl	$ra, $ra, 0
.Ltmp162:                               # EH_LABEL
# %bb.1:                                # %.noexc
	vld	$vr0, $sp, 296
	ld.d	$s1, $s0, 24
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 296
	vst	$vr0, $s0, 16
	beqz	$s1, .LBB60_6
# %bb.2:
	ld.d	$a0, $s1, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB60_4
# %bb.3:
	ld.d	$a0, $s1, 0
	st.d	$zero, $s1, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s1
	jirl	$ra, $a1, 0
	b	.LBB60_6
.LBB60_4:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB60_7
# %bb.5:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s1, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB60_8
.LBB60_6:
	st.w	$fp, $s0, 0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 440                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 448                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 456                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 464                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 472                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 480
	ret
.LBB60_7:
	addi.d	$a1, $s1, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB60_6
.LBB60_8:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	b	.LBB60_6
.LBB60_9:
.Ltmp163:                               # EH_LABEL
	move	$fp, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end60:
	.size	_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE, .Lfunc_end60-_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,"aG",@progbits,_ZNSt7__cxx1111basic_regexIcNS_12regex_traitsIcEEEC2ISt11char_traitsIcESaIcEEERKNS_12basic_stringIcT_T0_EENSt15regex_constants18syntax_option_typeE,comdat
	.p2align	2, 0x0
GCC_except_table60:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin16-.Lfunc_begin16  # >> Call Site 1 <<
	.uleb128 .Ltmp161-.Lfunc_begin16        #   Call between .Lfunc_begin16 and .Ltmp161
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp161-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp162-.Ltmp161              #   Call between .Ltmp161 and .Ltmp162
	.uleb128 .Ltmp163-.Lfunc_begin16        #     jumps to .Ltmp163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp162-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Lfunc_end60-.Ltmp162          #   Call between .Ltmp162 and .Lfunc_end60
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.hidden	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.weak	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	5
	.type	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB61_5
# %bb.1:
	ld.d	$a0, $fp, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB61_3
# %bb.2:
	ld.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a1
.LBB61_3:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB61_6
# %bb.4:
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB61_7
.LBB61_5:                               # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB61_6:
	addi.d	$a1, $fp, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB61_5
.LBB61_7:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jr	$t8
.Lfunc_end61:
	.size	_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end61-_ZNSt12__shared_ptrIKNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s0, $a4
	andi	$a4, $a4, 1008
	ori	$a5, $zero, 127
	move	$s3, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	blt	$a5, $a4, .LBB62_5
# %bb.1:
	addi.d	$a0, $a4, -16
	ori	$a1, $zero, 48
	bltu	$a1, $a0, .LBB62_3
# %bb.2:
	ori	$a1, $zero, 1
	sll.d	$a0, $a1, $a0
	lu12i.w	$a1, 16
	ori	$a1, $a1, 1
	lu32i.d	$a1, 65536
	and	$a0, $a0, $a1
	bnez	$a0, .LBB62_8
.LBB62_3:
	bnez	$a4, .LBB62_46
# %bb.4:
	ori	$s0, $s0, 16
	b	.LBB62_8
.LBB62_5:
	ori	$a0, $zero, 128
	beq	$a4, $a0, .LBB62_8
# %bb.6:
	ori	$a0, $zero, 256
	beq	$a4, $a0, .LBB62_8
# %bb.7:
	ori	$a0, $zero, 512
	bne	$a4, $a0, .LBB62_46
.LBB62_8:                               # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_S_validateENSt15regex_constants18syntax_option_typeE.exit
	st.w	$s0, $fp, 0
	addi.d	$s4, $fp, 8
	addi.d	$a0, $sp, 16
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
.Ltmp164:                               # EH_LABEL
	addi.d	$a4, $sp, 16
	move	$a0, $s4
	move	$a1, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale)
	jirl	$ra, $ra, 0
.Ltmp165:                               # EH_LABEL
# %bb.9:
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $fp, 256
	st.d	$zero, $fp, 256
	addi.d	$a0, $fp, 264
.Ltmp167:                               # EH_LABEL
	addi.d	$a2, $sp, 31
	move	$a1, $s0
	move	$a3, $s3
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_)
	jirl	$ra, $ra, 0
.Ltmp168:                               # EH_LABEL
# %bb.10:
	addi.d	$s1, $fp, 272
	addi.d	$s6, $fp, 288
	st.d	$s6, $fp, 272
	st.d	$zero, $fp, 280
	st.b	$zero, $fp, 288
	addi.d	$s2, $fp, 304
	ori	$a2, $zero, 80
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp170:                               # EH_LABEL
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp171:                               # EH_LABEL
# %bb.11:                               # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEEC2IS8_vEEv.exit
	ld.d	$a0, $fp, 256
	addi.d	$a0, $a0, 80
	st.d	$a0, $fp, 384
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB62_42
# %bb.12:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	ld.d	$s3, $fp, 256
	ld.d	$s7, $s3, 32
	st.d	$a0, $fp, 392
.Ltmp173:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv)
	jirl	$ra, $ra, 0
.Ltmp174:                               # EH_LABEL
# %bb.13:
	move	$s5, $a0
	ld.d	$a0, $s3, 56
	slli.d	$a1, $s7, 5
	alsl.d	$a1, $s7, $a1, 4
	add.d	$a0, $a0, $a1
	st.d	$s5, $a0, 8
.Ltmp175:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
.Ltmp176:                               # EH_LABEL
# %bb.14:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB62_44
# %bb.15:
	addi.d	$a1, $fp, 208
.Ltmp179:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp180:                               # EH_LABEL
# %bb.16:                               # %.noexc18
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB62_23
# %bb.17:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB62_41
# %bb.18:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB62_40
# %bb.19:
	bnez	$a0, .LBB62_21
# %bb.20:
.Ltmp185:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp186:                               # EH_LABEL
.LBB62_21:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB62_24
.LBB62_22:
	ld.d	$s4, $a1, -16
	ld.d	$s7, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB62_25
.LBB62_23:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB62_22
.LBB62_24:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s4, $a1, 488
	ld.d	$s7, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 376
	st.d	$a1, $fp, 360
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 368
	addi.d	$a0, $a1, 480
.LBB62_25:
	st.d	$a0, $fp, 352
	ld.d	$a1, $s3, 56
	slli.d	$a2, $s5, 5
	ld.d	$a0, $fp, 256
	alsl.d	$a2, $s5, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$s4, $a1, 8
.Ltmp187:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv)
	jirl	$ra, $ra, 0
.Ltmp188:                               # EH_LABEL
# %bb.26:
	move	$s4, $a0
	ld.d	$a1, $s3, 56
	slli.d	$a2, $s7, 5
	ld.d	$a0, $s0, 0
	alsl.d	$a2, $s7, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$s4, $a1, 8
.Ltmp189:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv)
	jirl	$ra, $ra, 0
.Ltmp190:                               # EH_LABEL
# %bb.27:
	ld.d	$a1, $s0, 0
	ld.d	$a4, $s3, 56
	ld.d	$a2, $a1, 56
	ld.d	$a3, $a1, 64
	slli.d	$a5, $s4, 5
	alsl.d	$a5, $s4, $a5, 4
	add.d	$a4, $a4, $a5
	st.d	$a0, $a4, 8
	beq	$a2, $a3, .LBB62_39
# %bb.28:                               # %.preheader.i.preheader
	ori	$a0, $zero, 10
	ori	$a4, $zero, 7
	ori	$a5, $zero, 1
	b	.LBB62_30
	.p2align	4, , 16
.LBB62_29:                              # %.critedge2.i
                                        #   in Loop: Header=BB62_30 Depth=1
	addi.d	$a2, $a2, 48
	beq	$a2, $a3, .LBB62_39
.LBB62_30:                              # %.preheader.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB62_32 Depth 2
                                        #     Child Loop BB62_37 Depth 2
	ld.d	$a7, $a2, 8
	bltz	$a7, .LBB62_34
# %bb.31:                               # %.lr.ph.i
                                        #   in Loop: Header=BB62_30 Depth=1
	ld.d	$a6, $a1, 56
	.p2align	4, , 16
.LBB62_32:                              #   Parent Loop BB62_30 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	slli.d	$t0, $a7, 5
	alsl.d	$a7, $a7, $t0, 4
	ldx.w	$t0, $a6, $a7
	bne	$t0, $a0, .LBB62_34
# %bb.33:                               #   in Loop: Header=BB62_32 Depth=2
	add.d	$a7, $a6, $a7
	ld.d	$a7, $a7, 8
	st.d	$a7, $a2, 8
	bgez	$a7, .LBB62_32
.LBB62_34:                              # %.critedge.i
                                        #   in Loop: Header=BB62_30 Depth=1
	ld.w	$a6, $a2, 0
	bltu	$a4, $a6, .LBB62_29
# %bb.35:                               # %.critedge.i
                                        #   in Loop: Header=BB62_30 Depth=1
	sll.d	$a6, $a5, $a6
	andi	$a6, $a6, 134
	beqz	$a6, .LBB62_29
# %bb.36:                               # %_ZNKSt8__detail11_State_base10_M_has_altEv.exit.i
                                        #   in Loop: Header=BB62_30 Depth=1
	ld.d	$a6, $a2, 16
	bltz	$a6, .LBB62_29
	.p2align	4, , 16
.LBB62_37:                              # %.lr.ph19.i
                                        #   Parent Loop BB62_30 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a7, $a1, 56
	slli.d	$t0, $a6, 5
	alsl.d	$a6, $a6, $t0, 4
	ldx.w	$t0, $a7, $a6
	bne	$t0, $a0, .LBB62_29
# %bb.38:                               #   in Loop: Header=BB62_37 Depth=2
	add.d	$a6, $a7, $a6
	ld.d	$a6, $a6, 8
	st.d	$a6, $a2, 16
	bgez	$a6, .LBB62_37
	b	.LBB62_29
.LBB62_39:                              # %_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_eliminate_dummyEv.exit
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB62_40:
.Ltmp181:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp182:                               # EH_LABEL
	b	.LBB62_21
.LBB62_41:
.Ltmp183:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp184:                               # EH_LABEL
	b	.LBB62_21
.LBB62_42:
.Ltmp192:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp193:                               # EH_LABEL
# %bb.43:                               # %.noexc
.LBB62_44:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
.Ltmp177:                               # EH_LABEL
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Ltmp178:                               # EH_LABEL
# %bb.45:
.LBB62_46:
	pcalau12i	$a0, %pc_hi20(.L.str.11)
	addi.d	$a1, $a0, %pc_lo12(.L.str.11)
	ori	$a0, $zero, 14
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB62_47:
.Ltmp194:                               # EH_LABEL
	b	.LBB62_52
.LBB62_48:
.Ltmp172:                               # EH_LABEL
	move	$s3, $a0
	b	.LBB62_53
.LBB62_49:
.Ltmp169:                               # EH_LABEL
	move	$s3, $a0
	b	.LBB62_56
.LBB62_50:
.Ltmp166:                               # EH_LABEL
	move	$s3, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB62_51:
.Ltmp191:                               # EH_LABEL
.LBB62_52:
	move	$s3, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev)
	jirl	$ra, $ra, 0
.LBB62_53:
	ld.d	$a0, $s1, 0
	beq	$a0, $s6, .LBB62_55
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s6, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev)
	jirl	$ra, $ra, 0
.LBB62_56:
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	beq	$a0, $a1, .LBB62_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_58:                              # %_ZNSt8__detail8_ScannerIcED2Ev.exit
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end62:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE, .Lfunc_end62-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEEC2EPKcS6_RKSt6localeNSt15regex_constants18syntax_option_typeE,comdat
	.p2align	2, 0x0
GCC_except_table62:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17  # >> Call Site 1 <<
	.uleb128 .Ltmp164-.Lfunc_begin17        #   Call between .Lfunc_begin17 and .Ltmp164
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp164-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Ltmp165-.Ltmp164              #   Call between .Ltmp164 and .Ltmp165
	.uleb128 .Ltmp166-.Lfunc_begin17        #     jumps to .Ltmp166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp165-.Lfunc_begin17        # >> Call Site 3 <<
	.uleb128 .Ltmp167-.Ltmp165              #   Call between .Ltmp165 and .Ltmp167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp167-.Lfunc_begin17        # >> Call Site 4 <<
	.uleb128 .Ltmp168-.Ltmp167              #   Call between .Ltmp167 and .Ltmp168
	.uleb128 .Ltmp169-.Lfunc_begin17        #     jumps to .Ltmp169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp168-.Lfunc_begin17        # >> Call Site 5 <<
	.uleb128 .Ltmp170-.Ltmp168              #   Call between .Ltmp168 and .Ltmp170
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp170-.Lfunc_begin17        # >> Call Site 6 <<
	.uleb128 .Ltmp171-.Ltmp170              #   Call between .Ltmp170 and .Ltmp171
	.uleb128 .Ltmp172-.Lfunc_begin17        #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp171-.Lfunc_begin17        # >> Call Site 7 <<
	.uleb128 .Ltmp173-.Ltmp171              #   Call between .Ltmp171 and .Ltmp173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp173-.Lfunc_begin17        # >> Call Site 8 <<
	.uleb128 .Ltmp186-.Ltmp173              #   Call between .Ltmp173 and .Ltmp186
	.uleb128 .Ltmp191-.Lfunc_begin17        #     jumps to .Ltmp191
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp186-.Lfunc_begin17        # >> Call Site 9 <<
	.uleb128 .Ltmp187-.Ltmp186              #   Call between .Ltmp186 and .Ltmp187
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp187-.Lfunc_begin17        # >> Call Site 10 <<
	.uleb128 .Ltmp184-.Ltmp187              #   Call between .Ltmp187 and .Ltmp184
	.uleb128 .Ltmp191-.Lfunc_begin17        #     jumps to .Ltmp191
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp192-.Lfunc_begin17        # >> Call Site 11 <<
	.uleb128 .Ltmp193-.Ltmp192              #   Call between .Ltmp192 and .Ltmp193
	.uleb128 .Ltmp194-.Lfunc_begin17        #     jumps to .Ltmp194
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp177-.Lfunc_begin17        # >> Call Site 12 <<
	.uleb128 .Ltmp178-.Ltmp177              #   Call between .Ltmp177 and .Ltmp178
	.uleb128 .Ltmp191-.Lfunc_begin17        #     jumps to .Ltmp191
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp178-.Lfunc_begin17        # >> Call Site 13 <<
	.uleb128 .Lfunc_end62-.Ltmp178          #   Call between .Ltmp178 and .Lfunc_end62
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev,comdat
	.hidden	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 304
	beqz	$a0, .LBB63_6
# %bb.1:
	ld.d	$s0, $fp, 376
	ld.d	$a1, $fp, 344
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB63_5
# %bb.2:                                # %.lr.ph.i.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB63_3:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB63_3
# %bb.4:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.loopexit.i.i.i
	ld.d	$a0, $fp, 304
.LBB63_5:                               # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i.i.i
	ld.d	$a1, $fp, 312
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_6:                               # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev.exit
	ld.d	$a0, $fp, 272
	addi.d	$a1, $fp, 288
	beq	$a0, $a1, .LBB63_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 264
	beqz	$s0, .LBB63_13
# %bb.9:
	ld.d	$a0, $s0, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB63_11
# %bb.10:
	ld.d	$a0, $s0, 0
	st.d	$zero, $s0, 8
	ld.d	$a1, $a0, 16
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 24
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	bne	$a0, $a1, .LBB63_14
	b	.LBB63_17
.LBB63_11:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB63_15
# %bb.12:
	addi.d	$a1, $a0, -1
	st.w	$a1, $s0, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB63_16
.LBB63_13:                              # %_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	beq	$a0, $a1, .LBB63_17
.LBB63_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB63_15:
	addi.d	$a1, $s0, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB63_13
.LBB63_16:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 208
	addi.d	$a1, $fp, 224
	bne	$a0, $a1, .LBB63_14
.LBB63_17:                              # %_ZNSt8__detail8_ScannerIcED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end63:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev, .Lfunc_end63-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,"axG",@progbits,_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,comdat
	.weak	_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale # -- Begin function _ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,@function
_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale: # @_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s0, $a4
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 176
	st.d	$s1, $fp, 184
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB64_10
# %bb.1:                                # %_ZSt9use_facetIKSt5ctypeIcEERKT_RKSt6locale.exit
	st.d	$a0, $fp, 192
	addi.d	$s0, $fp, 216
	ld.wu	$a0, $fp, 140
	st.d	$s0, $fp, 200
	st.d	$zero, $fp, 208
	st.b	$zero, $fp, 216
	andi	$a0, $a0, 16
	sltui	$a0, $a0, 1
	pcalau12i	$a1, %pc_hi20(_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv)
	addi.d	$a1, $a1, %pc_lo12(_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv)
	addi.d	$a2, $a2, %pc_lo12(_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv)
	ld.d	$a3, $fp, 176
	ld.d	$a4, $fp, 184
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
	st.d	$a0, $fp, 232
	st.d	$zero, $fp, 240
	beq	$a3, $a4, .LBB64_6
# %bb.2:
	ld.w	$a0, $fp, 136
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB64_8
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB64_7
# %bb.4:
	bnez	$a0, .LBB64_9
# %bb.5:
.Ltmp199:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp200:                               # EH_LABEL
	b	.LBB64_9
.LBB64_6:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 144
	b	.LBB64_9
.LBB64_7:
.Ltmp195:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp196:                               # EH_LABEL
	b	.LBB64_9
.LBB64_8:
.Ltmp197:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp198:                               # EH_LABEL
.LBB64_9:                               # %_ZNSt8__detail8_ScannerIcE10_M_advanceEv.exit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB64_10:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB64_11:
.Ltmp201:                               # EH_LABEL
	ld.d	$a2, $fp, 200
	move	$fp, $a0
	beq	$a2, $s0, .LBB64_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s0, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB64_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end64:
	.size	_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale, .Lfunc_end64-_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,"aG",@progbits,_ZNSt8__detail8_ScannerIcEC2EPKcS3_NSt15regex_constants18syntax_option_typeESt6locale,comdat
	.p2align	2, 0x0
GCC_except_table64:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Lfunc_begin18-.Lfunc_begin18  # >> Call Site 1 <<
	.uleb128 .Ltmp199-.Lfunc_begin18        #   Call between .Lfunc_begin18 and .Ltmp199
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp199-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Ltmp198-.Ltmp199              #   Call between .Ltmp199 and .Ltmp198
	.uleb128 .Ltmp201-.Lfunc_begin18        #     jumps to .Ltmp201
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp198-.Lfunc_begin18        # >> Call Site 3 <<
	.uleb128 .Lfunc_end64-.Ltmp198          #   Call between .Ltmp198 and .Lfunc_end64
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	st.d	$s4, $sp, 120                   # 8-byte Folded Spill
	st.d	$s5, $sp, 112                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s3, $a0, 40
	ld.d	$a0, $a0, 8
	ld.d	$a1, $fp, 16
	addi.d	$a2, $s3, 1
	st.d	$a2, $fp, 40
	beq	$a0, $a1, .LBB65_2
# %bb.1:
	st.d	$s3, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 8
	b	.LBB65_8
.LBB65_2:
	ld.d	$s0, $fp, 0
	sub.d	$s1, $a0, $s0
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB65_25
# %bb.3:                                # %_ZNKSt6vectorImSaImEE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 3
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 255
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.d	$s3, $a0, $s1
	blez	$s1, .LBB65_5
# %bb.4:
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB65_5:                               # %_ZNSt6vectorImSaImEE11_S_relocateEPmS2_S2_RS0_.exit.i.i
	add.d	$s5, $s2, $s1
	beqz	$s0, .LBB65_7
# %bb.6:                                # %_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmm.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_7:                               # %_ZNSt6vectorImSaImEE17_M_realloc_appendIJRKmEEEvDpOT_.exit.i
	addi.d	$a0, $s5, 8
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	alsl.d	$a0, $s4, $s2, 3
	st.d	$a0, $fp, 16
.LBB65_8:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	ori	$a0, $zero, 8
	st.w	$a0, $sp, 64
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 72
	st.d	$s3, $sp, 80
	st.d	$a0, $sp, 24
	st.d	$s3, $sp, 32
	ld.d	$a1, $sp, 88
	vld	$vr0, $sp, 96
	ld.d	$a2, $sp, 64
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	st.d	$a2, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB65_13
# %bb.9:
	vld	$vr0, $sp, 96
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 80
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 64
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 16
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB65_12
# %bb.10:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 56
	ld.d	$a1, $sp, 48
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB65_12
# %bb.11:
	vld	$vr1, $sp, 80
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 48
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB65_12:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB65_15
.LBB65_13:
.Ltmp202:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp203:                               # EH_LABEL
# %bb.14:                               # %.noexc
	ld.d	$a0, $fp, 64
.LBB65_15:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB65_23
# %bb.16:
	ld.w	$a0, $sp, 16
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB65_19
# %bb.17:
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB65_19
# %bb.18:
	addi.d	$a0, $sp, 32
.Ltmp204:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp205:                               # EH_LABEL
.LBB65_19:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 64
	bne	$a0, $s0, .LBB65_22
# %bb.20:
	ld.d	$a3, $sp, 96
	beqz	$a3, .LBB65_22
# %bb.21:
.Ltmp207:                               # EH_LABEL
	addi.d	$a0, $sp, 80
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp208:                               # EH_LABEL
.LBB65_22:                              # %_ZNSt8__detail6_StateIcED2Ev.exit5
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB65_23:
.Ltmp210:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp211:                               # EH_LABEL
# %bb.24:                               # %.noexc3
.LBB65_25:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB65_26:
.Ltmp209:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB65_27:
.Ltmp206:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB65_28:
.Ltmp212:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end65:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv, .Lfunc_end65-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv,comdat
	.p2align	2, 0x0
GCC_except_table65:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19  # >> Call Site 1 <<
	.uleb128 .Ltmp202-.Lfunc_begin19        #   Call between .Lfunc_begin19 and .Ltmp202
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp202-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Ltmp203-.Ltmp202              #   Call between .Ltmp202 and .Ltmp203
	.uleb128 .Ltmp212-.Lfunc_begin19        #     jumps to .Ltmp212
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp204-.Lfunc_begin19        # >> Call Site 3 <<
	.uleb128 .Ltmp205-.Ltmp204              #   Call between .Ltmp204 and .Ltmp205
	.uleb128 .Ltmp206-.Lfunc_begin19        #     jumps to .Ltmp206
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp207-.Lfunc_begin19        # >> Call Site 4 <<
	.uleb128 .Ltmp208-.Ltmp207              #   Call between .Ltmp207 and .Ltmp208
	.uleb128 .Ltmp209-.Lfunc_begin19        #     jumps to .Ltmp209
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp210-.Lfunc_begin19        # >> Call Site 5 <<
	.uleb128 .Ltmp211-.Ltmp210              #   Call between .Ltmp210 and .Ltmp211
	.uleb128 .Ltmp212-.Lfunc_begin19        #     jumps to .Ltmp212
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp211-.Lfunc_begin19        # >> Call Site 6 <<
	.uleb128 .Lfunc_end65-.Ltmp211          #   Call between .Ltmp211 and .Lfunc_end65
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$s8, $zero, 19
	bne	$a0, $s8, .LBB66_19
# %bb.1:                                # %.lr.ph
	addi.d	$s2, $fp, 272
	ori	$s3, $zero, 48
	b	.LBB66_3
	.p2align	4, , 16
.LBB66_2:                               #   in Loop: Header=BB66_3 Depth=1
	addi.d	$a1, $sp, 16
	addi.d	$a0, $fp, 304
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	bne	$a0, $s8, .LBB66_19
.LBB66_3:                               # =>This Inner Loop Header: Depth=1
	move	$a0, $s2
	addi.d	$a1, $fp, 208
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB66_8
# %bb.4:                                #   in Loop: Header=BB66_3 Depth=1
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB66_12
# %bb.5:                                #   in Loop: Header=BB66_3 Depth=1
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB66_9
# %bb.6:                                #   in Loop: Header=BB66_3 Depth=1
	bnez	$a0, .LBB66_10
# %bb.7:                                #   in Loop: Header=BB66_3 Depth=1
	addi.d	$a0, $fp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB66_11
	b	.LBB66_13
	.p2align	4, , 16
.LBB66_8:                               #   in Loop: Header=BB66_3 Depth=1
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB66_11
	b	.LBB66_13
.LBB66_9:                               #   in Loop: Header=BB66_3 Depth=1
	addi.d	$a0, $fp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB66_10:                              #   in Loop: Header=BB66_3 Depth=1
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB66_13
.LBB66_11:                              #   in Loop: Header=BB66_3 Depth=1
	ld.d	$s6, $a1, -24
	ld.d	$s4, $a1, -16
	ld.d	$s7, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB66_14
.LBB66_12:                              #   in Loop: Header=BB66_3 Depth=1
	addi.d	$a0, $fp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB66_11
	.p2align	4, , 16
.LBB66_13:                              #   in Loop: Header=BB66_3 Depth=1
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s6, $a1, 480
	ld.d	$s4, $a1, 488
	ld.d	$s7, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 376
	st.d	$a1, $fp, 360
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 368
	addi.d	$a0, $a1, 480
.LBB66_14:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
                                        #   in Loop: Header=BB66_3 Depth=1
	st.d	$a0, $fp, 352
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB66_16
# %bb.15:                               #   in Loop: Header=BB66_3 Depth=1
	ld.d	$s1, $a1, -24
	ld.d	$s5, $a1, -16
	ld.d	$s0, $a1, -8
	addi.d	$a1, $a1, -24
	b	.LBB66_17
	.p2align	4, , 16
.LBB66_16:                              #   in Loop: Header=BB66_3 Depth=1
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s1, $a1, 480
	ld.d	$s5, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 376
	st.d	$a1, $fp, 360
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 368
	addi.d	$a1, $a1, 480
.LBB66_17:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit4
                                        #   in Loop: Header=BB66_3 Depth=1
	ld.d	$a0, $fp, 256
	st.d	$a1, $fp, 352
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s6, 56
	move	$s6, $a0
	mul.d	$a0, $s7, $s3
	add.d	$a0, $a1, $a0
	ld.d	$a1, $s1, 56
	st.d	$s6, $a0, 8
	ld.d	$s7, $fp, 256
	mul.d	$a0, $s0, $s3
	add.d	$a0, $a1, $a0
	st.d	$s6, $a0, 8
	move	$a0, $s7
	move	$a1, $s5
	move	$a2, $s4
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s7, $sp, 16
	st.d	$a0, $sp, 24
	addi.d	$a0, $a2, -24
	st.d	$s6, $sp, 32
	beq	$a1, $a0, .LBB66_2
# %bb.18:                               #   in Loop: Header=BB66_3 Depth=1
	ld.d	$a0, $sp, 32
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 16
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	ld.w	$a0, $fp, 152
	beq	$a0, $s8, .LBB66_3
.LBB66_19:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end66:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv, .Lfunc_end66-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$s1, $a0, 152
	move	$fp, $a1
	bne	$a1, $s1, .LBB67_9
# %bb.1:
	move	$s0, $a0
	addi.d	$a1, $a0, 208
	addi.d	$a0, $a0, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 184
	ld.d	$a1, $s0, 192
	beq	$a0, $a1, .LBB67_6
# %bb.2:
	ld.w	$a1, $s0, 144
	ori	$a2, $zero, 2
	addi.d	$a0, $s0, 8
	beq	$a1, $a2, .LBB67_8
# %bb.3:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB67_7
# %bb.4:
	bnez	$a1, .LBB67_9
# %bb.5:
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB67_9
.LBB67_6:
	ori	$a0, $zero, 27
	st.w	$a0, $s0, 152
	b	.LBB67_9
.LBB67_7:
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB67_9
.LBB67_8:
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB67_9:                               # %_ZNSt8__detail8_ScannerIcE10_M_advanceEv.exit
	xor	$a0, $fp, $s1
	sltui	$a0, $a0, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end67:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE, .Lfunc_end67-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 64
	ld.d	$a2, $a0, -8
	ori	$a3, $zero, 9
	st.w	$a3, $sp, 56
	addi.d	$a0, $a0, -8
	st.d	$a2, $sp, 72
	ld.d	$a3, $sp, 80
	st.d	$a0, $fp, 8
	st.d	$a2, $sp, 24
	vld	$vr0, $sp, 88
	st.d	$a3, $sp, 32
	ld.d	$a2, $sp, 56
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 16
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 8
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB68_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 72
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB68_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB68_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB68_4:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB68_7
.LBB68_5:
.Ltmp213:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp214:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB68_7:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB68_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB68_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB68_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp215:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp216:                               # EH_LABEL
.LBB68_11:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB68_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB68_14
# %bb.13:
.Ltmp218:                               # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp219:                               # EH_LABEL
.LBB68_14:                              # %_ZNSt8__detail6_StateIcED2Ev.exit4
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB68_15:
.Ltmp221:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp222:                               # EH_LABEL
# %bb.16:                               # %.noexc2
.LBB68_17:
.Ltmp220:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB68_18:
.Ltmp217:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB68_19:
.Ltmp223:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end68:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv, .Lfunc_end68-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv,comdat
	.p2align	2, 0x0
GCC_except_table68:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Ltmp213-.Lfunc_begin20        # >> Call Site 1 <<
	.uleb128 .Ltmp214-.Ltmp213              #   Call between .Ltmp213 and .Ltmp214
	.uleb128 .Ltmp223-.Lfunc_begin20        #     jumps to .Ltmp223
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp215-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Ltmp216-.Ltmp215              #   Call between .Ltmp215 and .Ltmp216
	.uleb128 .Ltmp217-.Lfunc_begin20        #     jumps to .Ltmp217
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp218-.Lfunc_begin20        # >> Call Site 3 <<
	.uleb128 .Ltmp219-.Ltmp218              #   Call between .Ltmp218 and .Ltmp219
	.uleb128 .Ltmp220-.Lfunc_begin20        #     jumps to .Ltmp220
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp221-.Lfunc_begin20        # >> Call Site 4 <<
	.uleb128 .Ltmp222-.Ltmp221              #   Call between .Ltmp221 and .Ltmp222
	.uleb128 .Ltmp223-.Lfunc_begin20        #     jumps to .Ltmp223
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp222-.Lfunc_begin20        # >> Call Site 5 <<
	.uleb128 .Lfunc_end68-.Ltmp222          #   Call between .Ltmp222 and .Lfunc_end68
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 12
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB69_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 24
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB69_4
.LBB69_2:
.Ltmp224:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp225:                               # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB69_4:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB69_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB69_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB69_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp226:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp227:                               # EH_LABEL
.LBB69_8:                               # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB69_9:
.Ltmp229:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp230:                               # EH_LABEL
# %bb.10:                               # %.noexc3
.LBB69_11:
.Ltmp228:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB69_12:
.Ltmp231:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end69:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv, .Lfunc_end69-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv,comdat
	.p2align	2, 0x0
GCC_except_table69:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Ltmp224-.Lfunc_begin21        # >> Call Site 1 <<
	.uleb128 .Ltmp225-.Ltmp224              #   Call between .Ltmp224 and .Ltmp225
	.uleb128 .Ltmp231-.Lfunc_begin21        #     jumps to .Ltmp231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp226-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Ltmp227-.Ltmp226              #   Call between .Ltmp226 and .Ltmp227
	.uleb128 .Ltmp228-.Lfunc_begin21        #     jumps to .Ltmp228
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp229-.Lfunc_begin21        # >> Call Site 3 <<
	.uleb128 .Ltmp230-.Ltmp229              #   Call between .Ltmp229 and .Ltmp230
	.uleb128 .Ltmp231-.Lfunc_begin21        #     jumps to .Ltmp231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp230-.Lfunc_begin21        # >> Call Site 4 <<
	.uleb128 .Lfunc_end69-.Ltmp230          #   Call between .Ltmp230 and .Lfunc_end69
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev,"axG",@progbits,_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev,comdat
	.hidden	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev # -- Begin function _ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.weak	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev,@function
_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev: # @_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB70_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB70_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB70_3:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB70_3
# %bb.4:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB70_5:                               # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB70_6:                               # %_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EED2Ev.exit
	ret
.Lfunc_end70:
	.size	_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev, .Lfunc_end70-_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.hidden	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.weak	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	5
	.type	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB71_5
# %bb.1:
	ld.d	$a0, $fp, 8
	ori	$a1, $zero, 1
	lu32i.d	$a1, 1
	dbar	20
	bne	$a0, $a1, .LBB71_3
# %bb.2:
	ld.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a1
.LBB71_3:
	pcalau12i	$a1, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a1, $a1, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB71_6
# %bb.4:
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 8
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB71_7
.LBB71_5:                               # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB71_6:
	addi.d	$a1, $fp, 8
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	addi.w	$a0, $a0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB71_5
.LBB71_7:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv)
	jr	$t8
.Lfunc_end71:
	.size	_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end71-_ZNSt12__shared_ptrINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,"axG",@progbits,_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,comdat
	.weak	_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc # -- Begin function _ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc
	.p2align	5
	.type	_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,@function
_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc: # @_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(__cxa_allocate_exception)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp232:                               # EH_LABEL
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp233:                               # EH_LABEL
# %bb.1:
	pcalau12i	$a0, %got_pc_hi20(_ZTISt11regex_error)
	ld.d	$a1, $a0, %got_pc_lo12(_ZTISt11regex_error)
	pcalau12i	$a0, %got_pc_hi20(_ZNSt11regex_errorD1Ev)
	ld.d	$a2, $a0, %got_pc_lo12(_ZNSt11regex_errorD1Ev)
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_throw)
	jirl	$ra, $ra, 0
.LBB72_2:
.Ltmp234:                               # EH_LABEL
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(__cxa_free_exception)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end72:
	.size	_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc, .Lfunc_end72-_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc
	.cfi_endproc
	.section	.gcc_except_table._ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,"aG",@progbits,_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc,comdat
	.p2align	2, 0x0
GCC_except_table72:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Lfunc_begin22-.Lfunc_begin22  # >> Call Site 1 <<
	.uleb128 .Ltmp232-.Lfunc_begin22        #   Call between .Lfunc_begin22 and .Ltmp232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp232-.Lfunc_begin22        # >> Call Site 2 <<
	.uleb128 .Ltmp233-.Ltmp232              #   Call between .Ltmp232 and .Ltmp233
	.uleb128 .Ltmp234-.Lfunc_begin22        #     jumps to .Ltmp234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp233-.Lfunc_begin22        # >> Call Site 3 <<
	.uleb128 .Lfunc_end72-.Ltmp233          #   Call between .Ltmp233 and .Lfunc_end72
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc,"axG",@progbits,_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc,comdat
	.hidden	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc # -- Begin function _ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.weak	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.p2align	5
	.type	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc,@function
_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc: # @_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	move	$a1, $a2
	pcaddu18i	$ra, %call36(_ZNSt13runtime_errorC2EPKc)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt11regex_error)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt11regex_error)
	addi.d	$a0, $a0, 16
	st.d	$a0, $s0, 0
	st.w	$fp, $s0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end73:
	.size	_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc, .Lfunc_end73-_ZNSt11regex_errorC2ENSt15regex_constants10error_typeEPKc
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
.LCPI74_0:
	.byte	48                              # 0x30
	.byte	0                               # 0x0
	.byte	98                              # 0x62
	.byte	8                               # 0x8
	.byte	102                             # 0x66
	.byte	12                              # 0xc
	.byte	110                             # 0x6e
	.byte	10                              # 0xa
	.byte	114                             # 0x72
	.byte	13                              # 0xd
	.byte	116                             # 0x74
	.byte	9                               # 0x9
	.byte	118                             # 0x76
	.byte	11                              # 0xb
	.byte	0                               # 0x0
	.byte	0                               # 0x0
.LCPI74_1:
	.byte	34                              # 0x22
	.byte	34                              # 0x22
	.byte	47                              # 0x2f
	.byte	47                              # 0x2f
	.byte	92                              # 0x5c
	.byte	92                              # 0x5c
	.byte	97                              # 0x61
	.byte	7                               # 0x7
	.byte	98                              # 0x62
	.byte	8                               # 0x8
	.byte	102                             # 0x66
	.byte	12                              # 0xc
	.byte	110                             # 0x6e
	.byte	10                              # 0xa
	.byte	114                             # 0x72
	.byte	13                              # 0xd
	.section	.text._ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE,"axG",@progbits,_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE,comdat
	.hidden	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.weak	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.p2align	5
	.type	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE,@function
_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE: # @_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.cfi_startproc
# %bb.0:
	ori	$a2, $zero, 94
	st.b	$a2, $a0, 0
	ori	$a2, $zero, 22
	st.w	$a2, $a0, 4
	ori	$a2, $zero, 36
	st.b	$a2, $a0, 8
	ori	$a2, $zero, 23
	st.w	$a2, $a0, 12
	ori	$a2, $zero, 46
	st.b	$a2, $a0, 16
	st.w	$zero, $a0, 20
	ori	$a2, $zero, 42
	st.b	$a2, $a0, 24
	ori	$a2, $zero, 20
	st.w	$a2, $a0, 28
	ori	$a2, $zero, 43
	st.b	$a2, $a0, 32
	ori	$a2, $zero, 21
	st.w	$a2, $a0, 36
	ori	$a2, $zero, 63
	st.b	$a2, $a0, 40
	ori	$a2, $zero, 18
	st.w	$a2, $a0, 44
	ori	$a2, $zero, 124
	st.b	$a2, $a0, 48
	ori	$a2, $zero, 19
	st.w	$a2, $a0, 52
	ori	$a3, $zero, 10
	pcalau12i	$a4, %pc_hi20(.LCPI74_0)
	vld	$vr0, $a4, %pc_lo12(.LCPI74_0)
	st.b	$a3, $a0, 56
	st.w	$a2, $a0, 60
	st.b	$zero, $a0, 64
	vst	$vr0, $a0, 72
	pcalau12i	$a3, %pc_hi20(.LCPI74_1)
	vld	$vr0, $a3, %pc_lo12(.LCPI74_1)
	st.w	$a2, $a0, 68
	addi.d	$a5, $a0, 72
	addi.d	$a6, $a0, 88
	vst	$vr0, $a0, 88
	lu12i.w	$a2, 46944
	ori	$a2, $a2, 2420
	st.w	$a2, $a0, 104
	st.h	$zero, $a0, 108
	pcalau12i	$a2, %pc_hi20(.L.str.12)
	addi.d	$a2, $a2, %pc_lo12(.L.str.12)
	st.d	$a2, $a0, 112
	pcalau12i	$a3, %pc_hi20(.L.str.13)
	addi.d	$a4, $a3, %pc_lo12(.L.str.13)
	st.d	$a4, $a0, 120
	pcalau12i	$a3, %pc_hi20(.L.str.14)
	addi.d	$a3, $a3, %pc_lo12(.L.str.14)
	st.d	$a3, $a0, 128
	st.w	$zero, $a0, 136
	st.w	$a1, $a0, 140
	andi	$a7, $a1, 16
	sltui	$t0, $a7, 1
	masknez	$a5, $a5, $t0
	maskeqz	$a6, $a6, $t0
	or	$a5, $a6, $a5
	st.d	$a5, $a0, 152
	bnez	$a7, .LBB74_6
# %bb.1:
	andi	$a5, $a1, 32
	move	$a2, $a4
	bnez	$a5, .LBB74_6
# %bb.2:
	andi	$a4, $a1, 64
	move	$a2, $a3
	bnez	$a4, .LBB74_6
# %bb.3:
	andi	$a2, $a1, 256
	bnez	$a2, .LBB74_7
# %bb.4:
	andi	$a2, $a1, 512
	bnez	$a2, .LBB74_8
# %bb.5:
	slli.d	$a1, $a1, 56
	srai.d	$a1, $a1, 63
	pcalau12i	$a2, %pc_hi20(.L.str.14)
	addi.d	$a2, $a2, %pc_lo12(.L.str.14)
	and	$a2, $a1, $a2
.LBB74_6:
	st.d	$a2, $a0, 160
	st.b	$zero, $a0, 168
	ret
.LBB74_7:
	pcalau12i	$a1, %pc_hi20(.L.str.15)
	addi.d	$a2, $a1, %pc_lo12(.L.str.15)
	st.d	$a2, $a0, 160
	st.b	$zero, $a0, 168
	ret
.LBB74_8:
	pcalau12i	$a1, %pc_hi20(.L.str.16)
	addi.d	$a2, $a1, %pc_lo12(.L.str.16)
	st.d	$a2, $a0, 160
	st.b	$zero, $a0, 168
	ret
.Lfunc_end74:
	.size	_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE, .Lfunc_end74-_ZNSt8__detail12_ScannerBaseC2ENSt15regex_constants18syntax_option_typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv # -- Begin function _ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,@function
_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv: # @_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB75_44
# %bb.1:
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 192
	ld.bu	$s1, $a0, 0
	addi.d	$s2, $a1, 313
	ldx.bu	$a0, $s2, $s1
	ext.w.b	$s0, $s1
	bnez	$a0, .LBB75_4
# %bb.2:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 64
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB75_16
# %bb.3:
	stx.b	$a0, $s2, $s1
.LBB75_4:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	beqz	$a2, .LBB75_8
.LBB75_5:                               # %.lr.ph.i.preheader
	addi.d	$a1, $a1, 2
	andi	$a0, $a0, 255
	.p2align	4, , 16
.LBB75_6:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	andi	$a2, $a2, 255
	beq	$a2, $a0, .LBB75_12
# %bb.7:                                #   in Loop: Header=BB75_6 Depth=1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 2
	bnez	$a2, .LBB75_6
.LBB75_8:                               # %.loopexit
	addi.d	$a0, $s1, -66
	ori	$a1, $zero, 53
	bltu	$a1, $a0, .LBB75_24
# %bb.9:                                # %.loopexit
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI75_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI75_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB75_10:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 14
.LBB75_11:
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	st.w	$a1, $fp, 144
	move	$a1, $zero
	move	$a4, $s0
	b	.LBB75_23
.LBB75_12:
	ori	$a0, $zero, 98
	bne	$s0, $a0, .LBB75_15
# %bb.13:
	ld.w	$a0, $fp, 136
	ori	$a2, $zero, 2
	beq	$a0, $a2, .LBB75_15
.LBB75_14:                              # %.thread
	ori	$a1, $zero, 24
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 112
	b	.LBB75_21
.LBB75_15:
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	ld.b	$a4, $a1, -1
	b	.LBB75_19
.LBB75_16:
	move	$a0, $zero
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	bnez	$a2, .LBB75_5
	b	.LBB75_8
.LBB75_17:
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB75_45
# %bb.18:
	ori	$a1, $zero, 1
	st.w	$a1, $fp, 144
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.b	$a4, $a0, 0
.LBB75_19:
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	b	.LBB75_22
.LBB75_20:
	ori	$a1, $zero, 24
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 110
.LBB75_21:                              # %.thread
	st.w	$a1, $fp, 144
.LBB75_22:                              # %.thread
	move	$a1, $zero
.LBB75_23:                              # %.thread
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jr	$t8
.LBB75_24:
	ori	$a0, $zero, 120
	beq	$s1, $a0, .LBB75_26
# %bb.25:
	ori	$a0, $zero, 117
	bne	$s1, $a0, .LBB75_33
.LBB75_26:
	addi.d	$a0, $s0, -120
	ld.d	$a1, $fp, 200
	sltui	$s2, $a0, 1
	addi.d	$s0, $fp, 200
	st.d	$zero, $fp, 208
	st.b	$zero, $a1, 0
	ori	$a0, $zero, 4
	masknez	$a0, $a0, $s2
	ori	$a1, $zero, 2
	maskeqz	$a1, $a1, $s2
	or	$s3, $a1, $a0
	addi.d	$s4, $fp, 216
	ori	$s5, $zero, 15
	b	.LBB75_28
	.p2align	4, , 16
.LBB75_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB75_28 Depth=1
	stx.b	$s6, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	addi.w	$s3, $s3, -1
	stx.b	$zero, $a0, $a1
	beqz	$s3, .LBB75_32
.LBB75_28:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB75_43
# %bb.29:                               #   in Loop: Header=BB75_28 Depth=1
	ld.d	$a1, $fp, 192
	ld.bu	$a2, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a2, $a2, 1
	ldx.hu	$a1, $a1, $a2
	slli.d	$a1, $a1, 51
	bgez	$a1, .LBB75_43
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB75_28 Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s6, $a0, 0
	ld.d	$a0, $s4, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s4
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s5, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB75_27
# %bb.31:                               #   in Loop: Header=BB75_28 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	b	.LBB75_27
.LBB75_32:
	ori	$a0, $zero, 3
	b	.LBB75_42
.LBB75_33:
	ld.d	$a0, $fp, 192
	ld.d	$a0, $a0, 48
	slli.d	$a1, $s1, 1
	ldx.hu	$a0, $a0, $a1
	slli.d	$a0, $a0, 52
	bltz	$a0, .LBB75_35
# %bb.34:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 1
	b	.LBB75_11
.LBB75_35:
	ld.d	$a2, $fp, 208
	addi.d	$s1, $fp, 200
	ori	$a3, $zero, 1
	move	$a0, $s1
	move	$a1, $zero
	move	$a4, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB75_41
# %bb.36:                               # %.lr.ph
	addi.d	$s2, $fp, 216
	ori	$s3, $zero, 15
	b	.LBB75_38
.LBB75_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit55
                                        #   in Loop: Header=BB75_38 Depth=1
	stx.b	$s4, $a1, $s0
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s0, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB75_41
.LBB75_38:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 192
	ld.bu	$a2, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a2, $a2, 1
	ldx.hu	$a1, $a1, $a2
	slli.d	$a1, $a1, 52
	bgez	$a1, .LBB75_41
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i52
                                        #   in Loop: Header=BB75_38 Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s4, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s0, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s3, $a2
	or	$a0, $a2, $a0
	bltu	$s0, $a0, .LBB75_37
# %bb.40:                               #   in Loop: Header=BB75_38 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	b	.LBB75_37
.LBB75_41:                              # %.critedge
	ori	$a0, $zero, 4
.LBB75_42:
	st.w	$a0, $fp, 144
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB75_43:
	pcalau12i	$a0, %pc_hi20(.L.str.19)
	addi.d	$a0, $a0, %pc_lo12(.L.str.19)
	masknez	$a0, $a0, $s2
	pcalau12i	$a1, %pc_hi20(.L.str.18)
	addi.d	$a1, $a1, %pc_lo12(.L.str.18)
	maskeqz	$a1, $a1, $s2
	or	$a1, $a1, $a0
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB75_44:
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB75_45:
	pcalau12i	$a0, %pc_hi20(.L.str.17)
	addi.d	$a1, $a0, %pc_lo12(.L.str.17)
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end75:
	.size	_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv, .Lfunc_end75-_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,"aG",@progbits,_ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv,comdat
	.p2align	2, 0x0
.LJTI75_0:
	.word	.LBB75_20-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_10-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_10-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_10-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_14-.LJTI75_0
	.word	.LBB75_17-.LJTI75_0
	.word	.LBB75_10-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_10-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_24-.LJTI75_0
	.word	.LBB75_10-.LJTI75_0
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv # -- Begin function _ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv,@function
_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv: # @_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB76_13
# %bb.1:
	ld.d	$a1, $fp, 192
	ld.bu	$s2, $a0, 0
	addi.d	$s3, $a1, 313
	ldx.bu	$a0, $s3, $s2
	ld.d	$s1, $fp, 160
	ext.w.b	$s0, $s2
	bnez	$a0, .LBB76_4
# %bb.2:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 64
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB76_12
# %bb.3:
	stx.b	$a0, $s3, $s2
.LBB76_4:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strchr)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB76_6
.LBB76_5:
	ld.bu	$a1, $a0, 0
	ori	$a0, $zero, 1
	bnez	$a1, .LBB76_10
.LBB76_6:
	ld.wu	$a0, $fp, 140
	andi	$a1, $a0, 128
	bnez	$a1, .LBB76_11
# %bb.7:
	andi	$a0, $a0, 288
	beqz	$a0, .LBB76_13
# %bb.8:
	ori	$a0, $zero, 48
	beq	$s0, $a0, .LBB76_13
# %bb.9:
	ld.d	$a0, $fp, 192
	ld.d	$a0, $a0, 48
	slli.d	$a1, $s2, 1
	ldx.hu	$a0, $a0, $a1
	andi	$a1, $a0, 2048
	ori	$a0, $zero, 4
	beqz	$a1, .LBB76_13
.LBB76_10:
	ld.d	$a2, $fp, 208
	st.w	$a0, $fp, 144
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	move	$a1, $zero
	move	$a4, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 176
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB76_11:
	move	$a0, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv)
	jr	$t8
.LBB76_12:
	move	$a0, $zero
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strchr)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB76_5
	b	.LBB76_6
.LBB76_13:
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end76:
	.size	_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv, .Lfunc_end76-_ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv # -- Begin function _ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv,@function
_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv: # @_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 192
	ld.bu	$s0, $a0, 0
	addi.d	$s2, $a1, 313
	ldx.bu	$a0, $s2, $s0
	ext.w.b	$s1, $s0
	bnez	$a0, .LBB77_3
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 64
	move	$a0, $a1
	move	$a1, $s1
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB77_22
# %bb.2:
	stx.b	$a0, $s2, $s0
.LBB77_3:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	beqz	$a2, .LBB77_7
.LBB77_4:                               # %.lr.ph.i.preheader
	addi.d	$a1, $a1, 2
	andi	$a0, $a0, 255
	.p2align	4, , 16
.LBB77_5:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	andi	$a2, $a2, 255
	beq	$a2, $a0, .LBB77_21
# %bb.6:                                #   in Loop: Header=BB77_5 Depth=1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 2
	bnez	$a2, .LBB77_5
.LBB77_7:                               # %.loopexit
	addi.d	$a0, $s1, -58
	andi	$a0, $a0, 255
	ori	$a1, $zero, 253
	bltu	$a1, $a0, .LBB77_23
# %bb.8:                                # %.loopexit
	ld.d	$a0, $fp, 192
	ld.d	$a0, $a0, 48
	slli.d	$a1, $s0, 1
	ldx.hu	$a0, $a0, $a1
	andi	$a0, $a0, 2048
	beqz	$a0, .LBB77_23
# %bb.9:
	ld.d	$a2, $fp, 208
	addi.d	$s0, $fp, 200
	ori	$a3, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB77_20
# %bb.10:
	ld.bu	$a1, $a0, 0
	andi	$a2, $a1, 254
	ori	$a3, $zero, 56
	beq	$a2, $a3, .LBB77_20
# %bb.11:
	ld.d	$a2, $fp, 192
	ld.d	$a2, $a2, 48
	slli.d	$a1, $a1, 1
	ldx.hu	$a1, $a2, $a1
	andi	$a1, $a1, 2048
	beqz	$a1, .LBB77_20
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
	addi.d	$s2, $fp, 216
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s3, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	ori	$a3, $zero, 15
	maskeqz	$a2, $a3, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB77_14
# %bb.13:
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
.LBB77_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
	stx.b	$s3, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB77_20
# %bb.15:
	ld.bu	$a1, $a0, 0
	andi	$a2, $a1, 254
	ori	$a3, $zero, 56
	beq	$a2, $a3, .LBB77_20
# %bb.16:
	ld.d	$a2, $fp, 192
	ld.d	$a2, $a2, 48
	slli.d	$a1, $a1, 1
	ldx.hu	$a1, $a2, $a1
	andi	$a1, $a1, 2048
	beqz	$a1, .LBB77_20
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s3, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	ori	$a3, $zero, 15
	maskeqz	$a2, $a3, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB77_19
# %bb.18:
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
.LBB77_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit.1
	stx.b	$s3, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
.LBB77_20:                              # %.critedge
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 144
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB77_21:
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	ld.b	$a4, $a1, -1
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	move	$a1, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jr	$t8
.LBB77_22:
	move	$a0, $zero
	ld.d	$a1, $fp, 152
	ld.bu	$a2, $a1, 0
	bnez	$a2, .LBB77_4
	b	.LBB77_7
.LBB77_23:
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end77:
	.size	_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv, .Lfunc_end77-_ZNSt8__detail8_ScannerIcE17_M_eat_escape_awkEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE14_M_scan_normalEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv # -- Begin function _ZNSt8__detail8_ScannerIcE14_M_scan_normalEv
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv,@function
_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv: # @_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a1, $a0, 176
	addi.d	$a0, $a1, 1
	st.d	$a0, $fp, 176
	ld.d	$a0, $fp, 192
	ld.bu	$s2, $a1, 0
	addi.d	$s3, $a0, 313
	ldx.bu	$s4, $s3, $s2
	ld.d	$s1, $fp, 160
	ext.w.b	$s0, $s2
	bnez	$s4, .LBB78_3
# %bb.1:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 64
	ori	$a2, $zero, 32
	ori	$s4, $zero, 32
	move	$a1, $s0
	jirl	$ra, $a3, 0
	beq	$a0, $s4, .LBB78_3
# %bb.2:
	stx.b	$a0, $s3, $s2
	move	$s4, $a0
.LBB78_3:                               # %_ZNKSt5ctypeIcE6narrowEcc.exit
	ext.w.b	$a1, $s4
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strchr)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB78_14
# %bb.4:
	ori	$a0, $zero, 92
	bne	$s0, $a0, .LBB78_10
# %bb.5:
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB78_55
# %bb.6:
	ld.hu	$a1, $fp, 140
	andi	$a1, $a1, 288
	beqz	$a1, .LBB78_19
# %bb.7:
	ld.bu	$a1, $a0, 0
	addi.d	$a2, $a1, -40
	ori	$a3, $zero, 2
	bltu	$a2, $a3, .LBB78_9
# %bb.8:
	ori	$a2, $zero, 123
	bne	$a1, $a2, .LBB78_19
.LBB78_9:
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.bu	$s0, $a0, 0
.LBB78_10:
	andi	$s1, $s0, 255
	ori	$a0, $zero, 90
	blt	$a0, $s1, .LBB78_16
# %bb.11:
	ori	$a0, $zero, 40
	beq	$s1, $a0, .LBB78_25
# %bb.12:
	ori	$a0, $zero, 41
	bne	$s1, $a0, .LBB78_35
# %bb.13:
	ori	$a0, $zero, 8
	b	.LBB78_51
.LBB78_14:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 1
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	st.w	$a1, $fp, 144
	move	$a1, $zero
	move	$a4, $s0
.LBB78_15:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jr	$t8
.LBB78_16:
	ori	$a0, $zero, 91
	beq	$s1, $a0, .LBB78_22
# %bb.17:
	ori	$a0, $zero, 123
	bne	$s1, $a0, .LBB78_36
# %bb.18:
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 136
	ori	$a0, $zero, 12
	b	.LBB78_51
.LBB78_19:
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 240
	andi	$a2, $a1, 1
	add.d	$a0, $fp, $a0
	beqz	$a2, .LBB78_21
# %bb.20:
	ld.d	$a2, $a0, 0
	add.d	$a1, $a2, $a1
	ld.d	$a1, $a1, -1
.LBB78_21:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a1
.LBB78_22:
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	ori	$a2, $zero, 2
	st.w	$a2, $fp, 136
	ori	$a2, $zero, 1
	st.b	$a2, $fp, 168
	beq	$a0, $a1, .LBB78_34
# %bb.23:
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 94
	bne	$a1, $a2, .LBB78_34
# %bb.24:
	ori	$a1, $zero, 10
	st.w	$a1, $fp, 144
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 176
	b	.LBB78_52
.LBB78_25:
	ld.wu	$a1, $fp, 140
	andi	$a0, $a1, 16
	beqz	$a0, .LBB78_32
# %bb.26:
	ld.d	$a0, $fp, 176
	ld.bu	$a2, $a0, 0
	ori	$a3, $zero, 63
	bne	$a2, $a3, .LBB78_32
# %bb.27:
	ld.d	$a2, $fp, 184
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	beq	$a1, $a2, .LBB78_56
# %bb.28:
	ld.bu	$a1, $a1, 0
	ori	$a2, $zero, 33
	beq	$a1, $a2, .LBB78_44
# %bb.29:
	ori	$a2, $zero, 61
	beq	$a1, $a2, .LBB78_43
# %bb.30:
	ori	$a2, $zero, 58
	bne	$a1, $a2, .LBB78_57
# %bb.31:
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	ori	$a0, $zero, 6
	b	.LBB78_51
.LBB78_32:
	andi	$a0, $a1, 2
	bnez	$a0, .LBB78_42
# %bb.33:
	ori	$a0, $zero, 5
	b	.LBB78_51
.LBB78_34:
	ori	$a0, $zero, 9
	b	.LBB78_51
.LBB78_35:
	beqz	$s1, .LBB78_53
.LBB78_36:
	andi	$a0, $s0, 223
	ori	$a1, $zero, 93
	bne	$a0, $a1, .LBB78_39
# %bb.37:
	ori	$a1, $zero, 1
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ext.w.b	$a4, $s0
	ori	$a3, $zero, 1
.LBB78_38:
	st.w	$a1, $fp, 144
	move	$a1, $zero
	b	.LBB78_15
.LBB78_39:
	ld.d	$a2, $fp, 192
	addi.d	$s2, $a2, 313
	ldx.bu	$a0, $s2, $s1
	bnez	$a0, .LBB78_46
# %bb.40:
	ld.d	$a0, $a2, 0
	ld.d	$a3, $a0, 64
	ext.w.b	$a1, $s0
	move	$a0, $a2
	move	$a2, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB78_45
# %bb.41:
	stx.b	$a0, $s2, $s1
	b	.LBB78_46
.LBB78_42:
	ori	$a0, $zero, 6
	b	.LBB78_51
.LBB78_43:
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	ori	$a1, $zero, 7
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 112
	b	.LBB78_38
.LBB78_44:
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	ori	$a1, $zero, 7
	ld.d	$a2, $fp, 208
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 110
	b	.LBB78_38
.LBB78_45:
	move	$a0, $zero
.LBB78_46:                              # %_ZNKSt5ctypeIcE6narrowEcc.exit40
	ld.bu	$a2, $fp, 0
	beqz	$a2, .LBB78_52
# %bb.47:                               # %.lr.ph.preheader
	addi.d	$a1, $fp, 8
	andi	$a0, $a0, 255
	.p2align	4, , 16
.LBB78_48:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	andi	$a2, $a2, 255
	beq	$a2, $a0, .LBB78_50
# %bb.49:                               #   in Loop: Header=BB78_48 Depth=1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 8
	bnez	$a2, .LBB78_48
	b	.LBB78_52
.LBB78_50:
	ld.w	$a0, $a1, -4
.LBB78_51:                              # %.critedge
	st.w	$a0, $fp, 144
.LBB78_52:                              # %.critedge
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB78_53:
	ld.bu	$a0, $fp, 140
	andi	$a0, $a0, 16
	beqz	$a0, .LBB78_58
# %bb.54:
	ld.d	$a2, $fp, 208
	ori	$a1, $zero, 1
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	st.w	$a1, $fp, 144
	move	$a1, $zero
	move	$a4, $zero
	b	.LBB78_15
.LBB78_55:
	pcalau12i	$a0, %pc_hi20(.L.str.20)
	addi.d	$a1, $a0, %pc_lo12(.L.str.20)
	ori	$a0, $zero, 2
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB78_56:
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB78_57:
	pcalau12i	$a0, %pc_hi20(.L.str.21)
	addi.d	$a1, $a0, %pc_lo12(.L.str.21)
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB78_58:
	ori	$a0, $zero, 13
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end78:
	.size	_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv, .Lfunc_end78-_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv # -- Begin function _ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv,@function
_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv: # @_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a2, $fp, 184
	beq	$a0, $a2, .LBB79_26
# %bb.1:
	addi.d	$a3, $a0, 1
	st.d	$a3, $fp, 176
	ld.bu	$a1, $a0, 0
	ori	$a4, $zero, 91
	blt	$a4, $a1, .LBB79_9
# %bb.2:
	ori	$a4, $zero, 45
	beq	$a1, $a4, .LBB79_14
# %bb.3:
	ori	$a4, $zero, 91
	bne	$a1, $a4, .LBB79_19
# %bb.4:
	beq	$a3, $a2, .LBB79_27
# %bb.5:
	ld.bu	$a1, $a3, 0
	ori	$a2, $zero, 61
	beq	$a1, $a2, .LBB79_22
# %bb.6:
	ori	$a2, $zero, 58
	beq	$a1, $a2, .LBB79_21
# %bb.7:
	ori	$a2, $zero, 46
	bne	$a1, $a2, .LBB79_25
# %bb.8:
	ori	$a1, $zero, 16
	b	.LBB79_23
.LBB79_9:
	ori	$a0, $zero, 92
	beq	$a1, $a0, .LBB79_15
# %bb.10:
	ori	$a0, $zero, 93
	bne	$a1, $a0, .LBB79_19
# %bb.11:
	ld.bu	$a0, $fp, 140
	andi	$a0, $a0, 16
	bnez	$a0, .LBB79_13
# %bb.12:
	ld.b	$a0, $fp, 168
	andi	$a0, $a0, 1
	bnez	$a0, .LBB79_19
.LBB79_13:
	ori	$a0, $zero, 11
	st.w	$a0, $fp, 144
	st.w	$zero, $fp, 136
	b	.LBB79_24
.LBB79_14:
	ori	$a0, $zero, 28
	st.w	$a0, $fp, 144
	b	.LBB79_24
.LBB79_15:
	ld.bu	$a0, $fp, 140
	andi	$a0, $a0, 144
	beqz	$a0, .LBB79_19
# %bb.16:
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 240
	andi	$a2, $a1, 1
	add.d	$a0, $fp, $a0
	beqz	$a2, .LBB79_18
# %bb.17:
	ld.d	$a2, $a0, 0
	add.d	$a1, $a2, $a1
	ld.d	$a1, $a1, -1
.LBB79_18:
	jirl	$ra, $a1, 0
	b	.LBB79_24
.LBB79_19:
	ext.w.b	$a4, $a1
	ld.d	$a2, $fp, 208
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
.LBB79_20:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	b	.LBB79_24
.LBB79_21:
	ori	$a1, $zero, 15
	b	.LBB79_23
.LBB79_22:
	ori	$a1, $zero, 17
.LBB79_23:
	st.w	$a1, $fp, 144
	addi.d	$a1, $a0, 2
	st.d	$a1, $fp, 176
	ld.b	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE12_M_eat_classEc)
	jirl	$ra, $ra, 0
.LBB79_24:
	st.b	$zero, $fp, 168
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB79_25:
	ld.d	$a2, $fp, 208
	ori	$a0, $zero, 1
	st.w	$a0, $fp, 144
	addi.d	$a0, $fp, 200
	ori	$a3, $zero, 1
	ori	$a4, $zero, 91
	b	.LBB79_20
.LBB79_26:
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB79_27:
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end79:
	.size	_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv, .Lfunc_end79-_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv,"axG",@progbits,_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv,comdat
	.weak	_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv # -- Begin function _ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv,@function
_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv: # @_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB80_19
# %bb.1:
	ld.d	$a3, $fp, 192
	addi.d	$a2, $a0, 1
	st.d	$a2, $fp, 176
	ld.bu	$a4, $a0, 0
	ld.d	$a3, $a3, 48
	slli.d	$a5, $a4, 1
	ldx.hu	$a3, $a3, $a5
	slli.d	$a3, $a3, 52
	ext.w.b	$a4, $a4
	bltz	$a3, .LBB80_4
# %bb.2:
	ori	$a3, $zero, 44
	bne	$a4, $a3, .LBB80_10
# %bb.3:
	ori	$a0, $zero, 25
	b	.LBB80_17
.LBB80_4:
	ld.d	$a2, $fp, 208
	ori	$a0, $zero, 26
	st.w	$a0, $fp, 144
	addi.d	$s0, $fp, 200
	ori	$a3, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB80_18
# %bb.5:                                # %.lr.ph
	addi.d	$s2, $fp, 216
	ori	$s3, $zero, 15
	b	.LBB80_7
	.p2align	4, , 16
.LBB80_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB80_7 Depth=1
	stx.b	$s4, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a1, $fp, 184
	beq	$a0, $a1, .LBB80_18
.LBB80_7:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 192
	ld.bu	$a2, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a2, $a2, 1
	ldx.hu	$a1, $a1, $a2
	slli.d	$a1, $a1, 52
	bgez	$a1, .LBB80_18
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB80_7 Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s4, $a0, 0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s3, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB80_6
# %bb.9:                                #   in Loop: Header=BB80_7 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	b	.LBB80_6
.LBB80_10:
	ld.hu	$a3, $fp, 140
	andi	$a3, $a3, 288
	beqz	$a3, .LBB80_15
# %bb.11:
	ori	$a3, $zero, 92
	bne	$a4, $a3, .LBB80_20
# %bb.12:
	beq	$a2, $a1, .LBB80_20
# %bb.13:
	ld.bu	$a1, $a2, 0
	ori	$a2, $zero, 125
	bne	$a1, $a2, .LBB80_20
# %bb.14:
	st.w	$zero, $fp, 136
	ori	$a1, $zero, 13
	st.w	$a1, $fp, 144
	addi.d	$a0, $a0, 2
	st.d	$a0, $fp, 176
	b	.LBB80_18
.LBB80_15:
	ori	$a0, $zero, 125
	bne	$a4, $a0, .LBB80_20
# %bb.16:
	st.w	$zero, $fp, 136
	ori	$a0, $zero, 13
.LBB80_17:                              # %.critedge
	st.w	$a0, $fp, 144
.LBB80_18:                              # %.critedge
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB80_19:
	ori	$a0, $zero, 6
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB80_20:
	ori	$a0, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end80:
	.size	_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv, .Lfunc_end80-_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail8_ScannerIcE12_M_eat_classEc,"axG",@progbits,_ZNSt8__detail8_ScannerIcE12_M_eat_classEc,comdat
	.weak	_ZNSt8__detail8_ScannerIcE12_M_eat_classEc # -- Begin function _ZNSt8__detail8_ScannerIcE12_M_eat_classEc
	.p2align	5
	.type	_ZNSt8__detail8_ScannerIcE12_M_eat_classEc,@function
_ZNSt8__detail8_ScannerIcE12_M_eat_classEc: # @_ZNSt8__detail8_ScannerIcE12_M_eat_classEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a0, $a0, 200
	st.d	$zero, $fp, 208
	st.b	$zero, $a0, 0
	ld.d	$a0, $fp, 176
	ld.d	$a2, $fp, 184
	andi	$s2, $a1, 255
	beq	$a0, $a2, .LBB81_11
# %bb.1:                                # %.lr.ph
	ld.bu	$a1, $a0, 0
	beq	$a1, $s2, .LBB81_7
# %bb.2:
	addi.d	$s0, $fp, 200
	addi.d	$s3, $fp, 216
	ori	$s4, $zero, 15
	.p2align	4, , 16
.LBB81_3:                               # %.lr.ph31
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.d	$a1, $fp, 200
	ld.bu	$s5, $a0, 0
	ld.d	$a0, $s3, 0
	ld.d	$s1, $fp, 208
	xor	$a2, $a1, $s3
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	maskeqz	$a2, $s4, $a2
	or	$a0, $a2, $a0
	bltu	$s1, $a0, .LBB81_5
# %bb.4:                                #   in Loop: Header=BB81_3 Depth=1
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
.LBB81_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB81_3 Depth=1
	stx.b	$s5, $a1, $s1
	ld.d	$a0, $fp, 200
	addi.d	$a1, $s1, 1
	st.d	$a1, $fp, 208
	stx.b	$zero, $a0, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a2, $fp, 184
	beq	$a0, $a2, .LBB81_11
# %bb.6:                                #   in Loop: Header=BB81_3 Depth=1
	ld.bu	$a1, $a0, 0
	bne	$a1, $s2, .LBB81_3
.LBB81_7:                               # %.critedge
	addi.d	$a1, $a0, 1
	st.d	$a1, $fp, 176
	ld.bu	$a3, $a0, 0
	bne	$a3, $s2, .LBB81_11
# %bb.8:                                # %.critedge
	beq	$a1, $a2, .LBB81_11
# %bb.9:
	addi.d	$a1, $a0, 2
	st.d	$a1, $fp, 176
	ld.bu	$a0, $a0, 1
	ori	$a1, $zero, 93
	bne	$a0, $a1, .LBB81_11
# %bb.10:
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB81_11:                              # %.critedge.thread
	addi.d	$a0, $s2, -58
	sltui	$a0, $a0, 1
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end81:
	.size	_ZNSt8__detail8_ScannerIcE12_M_eat_classEc, .Lfunc_end81-_ZNSt8__detail8_ScannerIcE12_M_eat_classEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,comdat
	.hidden	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_ # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.p2align	5
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s2, $a4
	move	$s3, $a3
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 104
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a0, $zero, 1
	lu32i.d	$a0, 1
	st.d	$a0, $s1, 8
	pcalau12i	$a0, %pc_hi20(_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE+16)
	st.d	$a0, $s1, 0
	addi.d	$s4, $s1, 16
	ld.w	$a0, $s2, 0
	st.d	$zero, $s1, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $s1, 16
	st.w	$a0, $s1, 40
	vst	$vr0, $s1, 48
	st.b	$zero, $s1, 64
	st.d	$zero, $s1, 72
	vst	$vr0, $s1, 80
	addi.d	$s2, $s1, 96
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6localeC1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 8
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6localeaSERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeaSERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	st.d	$s1, $s0, 0
	st.d	$s4, $fp, 0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end82:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_, .Lfunc_end82-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2INSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvEJRKSt6localeRNSt15regex_constants18syntax_option_typeEEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.hidden	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	5
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
# %bb.0:
	ret
.Lfunc_end83:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end83-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	5
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
# %bb.0:
	ori	$a1, $zero, 104
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end84:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end84-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	5
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	addi.d	$a0, $a0, 96
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s0, $fp, 72
	ld.d	$s1, $fp, 80
	beq	$s0, $s1, .LBB85_7
# %bb.1:                                # %.lr.ph.i.i.i.i.preheader
	ori	$s2, $zero, 11
	b	.LBB85_3
	.p2align	4, , 16
.LBB85_2:                               # %_ZSt8_DestroyINSt8__detail6_StateIcEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB85_3 Depth=1
	addi.d	$s0, $s0, 48
	beq	$s0, $s1, .LBB85_6
.LBB85_3:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a0, $s0, 0
	bne	$a0, $s2, .LBB85_2
# %bb.4:                                #   in Loop: Header=BB85_3 Depth=1
	ld.d	$a3, $s0, 32
	beqz	$a3, .LBB85_2
# %bb.5:                                #   in Loop: Header=BB85_3 Depth=1
	addi.d	$a0, $s0, 16
.Ltmp235:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp236:                               # EH_LABEL
	b	.LBB85_2
.LBB85_6:                               # %_ZSt8_DestroyIPNSt8__detail6_StateIcEES2_EvT_S4_RSaIT0_E.exitthread-pre-split.i.i.i
	ld.d	$s0, $fp, 72
.LBB85_7:                               # %_ZSt8_DestroyIPNSt8__detail6_StateIcEES2_EvT_S4_RSaIT0_E.exit.i.i.i
	beqz	$s0, .LBB85_9
# %bb.8:
	ld.d	$a0, $fp, 88
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_9:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EED2Ev.exit.i.i
	ld.d	$a0, $fp, 16
	beqz	$a0, .LBB85_11
# %bb.10:
	ld.d	$a1, $fp, 32
	sub.d	$a1, $a1, $a0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB85_11:                              # %_ZSt8_DestroyINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEEEvPT_.exit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB85_12:
.Ltmp237:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end85:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end85-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"aG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.p2align	2, 0x0
GCC_except_table85:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Lfunc_begin23-.Lfunc_begin23  # >> Call Site 1 <<
	.uleb128 .Ltmp235-.Lfunc_begin23        #   Call between .Lfunc_begin23 and .Ltmp235
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp235-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Ltmp236-.Ltmp235              #   Call between .Ltmp235 and .Ltmp236
	.uleb128 .Ltmp237-.Lfunc_begin23        #     jumps to .Ltmp237
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp236-.Lfunc_begin23        # >> Call Site 3 <<
	.uleb128 .Lfunc_end85-.Ltmp236          #   Call between .Ltmp236 and .Lfunc_end85
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	5
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	ori	$a1, $zero, 104
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end86:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end86-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.hidden	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.weak	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	5
	.type	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag)
	addi.d	$a2, $a2, %pc_lo12(_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag)
	beq	$a1, $a2, .LBB87_6
# %bb.1:
	ld.d	$a2, $a1, 8
	pcalau12i	$a1, %pc_hi20(_ZTSSt19_Sp_make_shared_tag)
	addi.d	$a1, $a1, %pc_lo12(_ZTSSt19_Sp_make_shared_tag)
	beq	$a2, $a1, .LBB87_6
# %bb.2:
	ld.bu	$a1, $a2, 0
	ori	$a3, $zero, 42
	bne	$a1, $a3, .LBB87_4
# %bb.3:
	move	$a0, $zero
	ret
.LBB87_4:                               # %_ZNKSt9type_infoeqERKS_.exit
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTSSt19_Sp_make_shared_tag)
	addi.d	$a1, $a1, %pc_lo12(_ZTSSt19_Sp_make_shared_tag)
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	beqz	$a1, .LBB87_6
# %bb.5:
	move	$a0, $zero
	ret
.LBB87_6:                               # %_ZNKSt9type_infoeqERKS_.exit.thread
	addi.d	$a0, $a0, 16
	ret
.Lfunc_end87:
	.size	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end87-_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
                                        # -- End function
	.section	.text._ZNSt8__detail6_StateIcED2Ev,"axG",@progbits,_ZNSt8__detail6_StateIcED2Ev,comdat
	.hidden	_ZNSt8__detail6_StateIcED2Ev    # -- Begin function _ZNSt8__detail6_StateIcED2Ev
	.weak	_ZNSt8__detail6_StateIcED2Ev
	.p2align	5
	.type	_ZNSt8__detail6_StateIcED2Ev,@function
_ZNSt8__detail6_StateIcED2Ev:           # @_ZNSt8__detail6_StateIcED2Ev
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.w	$a1, $a0, 0
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB88_3
# %bb.1:
	ld.d	$a3, $a0, 32
	beqz	$a3, .LBB88_3
# %bb.2:
	addi.d	$a0, $a0, 16
.Ltmp238:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp239:                               # EH_LABEL
.LBB88_3:                               # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB88_4:
.Ltmp240:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end88:
	.size	_ZNSt8__detail6_StateIcED2Ev, .Lfunc_end88-_ZNSt8__detail6_StateIcED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail6_StateIcED2Ev,"aG",@progbits,_ZNSt8__detail6_StateIcED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table88:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Ltmp238-.Lfunc_begin24        # >> Call Site 1 <<
	.uleb128 .Ltmp239-.Ltmp238              #   Call between .Ltmp238 and .Ltmp239
	.uleb128 .Ltmp240-.Lfunc_begin24        #     jumps to .Ltmp240
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp239-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Lfunc_end88-.Ltmp239          #   Call between .Ltmp239 and .Lfunc_end88
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a0
	lu12i.w	$a0, 99864
	ori	$a0, $a0, 1561
	lu32i.d	$a0, -499322
	lu52i.d	$a0, $a0, -1951
	mulh.du	$a0, $a1, $a0
	sub.d	$a1, $a1, $a0
	srli.d	$a1, $a1, 1
	add.d	$a0, $a1, $a0
	srli.d	$s1, $a0, 4
	addi.d	$s3, $s1, 1
	ori	$a0, $zero, 5
	sltu	$a1, $a0, $s1
	maskeqz	$a2, $s1, $a1
	masknez	$a0, $a0, $a1
	or	$a0, $a2, $a0
	addi.d	$s2, $a0, 3
	st.d	$s2, $fp, 8
	slli.d	$a0, $s2, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s2, $s3
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s2, $a0, $a1
	alsl.d	$s4, $s3, $s2, 3
	move	$s3, $s2
	.p2align	4, , 16
.LBB89_1:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp241:                               # EH_LABEL
	ori	$a0, $zero, 504
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp242:                               # EH_LABEL
# %bb.2:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB89_1 Depth=1
	st.d	$a0, $s3, 0
	addi.d	$s3, $s3, 8
	bltu	$s3, $s4, .LBB89_1
# %bb.3:                                # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE15_M_create_nodesEPPS5_S9_.exit
	ld.d	$a0, $s2, 0
	st.d	$s2, $fp, 40
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 32
	ld.d	$a1, $s4, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s4, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 504
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	alsl.d	$a0, $s1, $s1, 2
	alsl.d	$a0, $a0, $s1, 2
	sub.d	$a0, $s0, $a0
	ori	$a2, $zero, 24
	mul.d	$a0, $a0, $a2
	add.d	$a0, $a1, $a0
	st.d	$a0, $fp, 48
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB89_4:
.Ltmp243:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s2, $s3, .LBB89_6
	.p2align	4, , 16
.LBB89_5:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB89_5
.LBB89_6:                               # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_destroy_nodesEPPS5_S9_.exit.i
.Ltmp244:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp245:                               # EH_LABEL
# %bb.7:
.LBB89_8:
.Ltmp246:                               # EH_LABEL
	move	$s0, $a0
.Ltmp247:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp248:                               # EH_LABEL
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp250:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp251:                               # EH_LABEL
# %bb.10:
.LBB89_11:
.Ltmp252:                               # EH_LABEL
	move	$fp, $a0
.Ltmp253:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp254:                               # EH_LABEL
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB89_13:
.Ltmp255:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB89_14:
.Ltmp249:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end89:
	.size	_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm, .Lfunc_end89-_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table89:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp241-.Lfunc_begin25        #   Call between .Lfunc_begin25 and .Ltmp241
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp241-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Ltmp242-.Ltmp241              #   Call between .Ltmp241 and .Ltmp242
	.uleb128 .Ltmp243-.Lfunc_begin25        #     jumps to .Ltmp243
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp242-.Lfunc_begin25        # >> Call Site 3 <<
	.uleb128 .Ltmp244-.Ltmp242              #   Call between .Ltmp242 and .Ltmp244
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp244-.Lfunc_begin25        # >> Call Site 4 <<
	.uleb128 .Ltmp245-.Ltmp244              #   Call between .Ltmp244 and .Ltmp245
	.uleb128 .Ltmp246-.Lfunc_begin25        #     jumps to .Ltmp246
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp247-.Lfunc_begin25        # >> Call Site 5 <<
	.uleb128 .Ltmp248-.Ltmp247              #   Call between .Ltmp247 and .Ltmp248
	.uleb128 .Ltmp249-.Lfunc_begin25        #     jumps to .Ltmp249
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp248-.Lfunc_begin25        # >> Call Site 6 <<
	.uleb128 .Ltmp250-.Ltmp248              #   Call between .Ltmp248 and .Ltmp250
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp250-.Lfunc_begin25        # >> Call Site 7 <<
	.uleb128 .Ltmp251-.Ltmp250              #   Call between .Ltmp250 and .Ltmp251
	.uleb128 .Ltmp252-.Lfunc_begin25        #     jumps to .Ltmp252
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp253-.Lfunc_begin25        # >> Call Site 8 <<
	.uleb128 .Ltmp254-.Ltmp253              #   Call between .Ltmp253 and .Ltmp254
	.uleb128 .Ltmp255-.Lfunc_begin25        #     jumps to .Ltmp255
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp254-.Lfunc_begin25        # >> Call Site 9 <<
	.uleb128 .Lfunc_end89-.Ltmp254          #   Call between .Ltmp254 and .Lfunc_end89
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_,@function
_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_: # @_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s3, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s5, $s3, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s5, $a0, .LBB90_13
# %bb.1:                                # %_ZNKSt6vectorINSt8__detail6_StateIcEESaIS2_EE12_M_check_lenEmPKc.exit
	move	$s2, $a1
	srli.d	$a0, $s5, 4
	lu12i.w	$a1, -349526
	ori	$a2, $a1, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$a2, $a2, -1366
	mul.d	$a0, $a0, $a2
	ori	$a2, $zero, 1
	sltu	$a3, $a2, $a0
	maskeqz	$a4, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a2, $a4, $a2
	add.d	$a0, $a2, $a0
	ori	$a1, $a1, 2730
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, 42
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 5
	alsl.d	$a0, $s4, $a0, 4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	vld	$vr0, $s2, 0
	add.d	$a0, $a0, $s5
	vld	$vr1, $s2, 16
	vld	$vr2, $s2, 32
	vstx	$vr0, $s1, $s5
	ld.w	$a1, $s2, 0
	vst	$vr1, $a0, 16
	vst	$vr2, $a0, 32
	ori	$a2, $zero, 11
	vrepli.b	$vr0, 0
	bne	$a1, $a2, .LBB90_4
# %bb.2:
	ld.d	$a2, $s2, 40
	ld.d	$a1, $s2, 32
	st.d	$zero, $a0, 32
	vst	$vr0, $a0, 16
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB90_4
# %bb.3:
	vld	$vr1, $s2, 16
	addi.d	$a2, $a0, 16
	addi.d	$a3, $s2, 32
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB90_4:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	move	$s2, $s1
	beq	$s0, $s3, .LBB90_10
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	ori	$a0, $zero, 11
	move	$s2, $s1
	move	$a1, $s0
	b	.LBB90_7
	.p2align	4, , 16
.LBB90_6:                               # %_ZSt19__relocate_object_aINSt8__detail6_StateIcEES2_SaIS2_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB90_7 Depth=1
	addi.d	$a1, $a1, 48
	addi.d	$s2, $s2, 48
	beq	$a1, $s3, .LBB90_10
.LBB90_7:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr1, $a1, 32
	vst	$vr1, $s2, 32
	vld	$vr1, $a1, 16
	vst	$vr1, $s2, 16
	vld	$vr1, $a1, 0
	vst	$vr1, $s2, 0
	ld.w	$a2, $a1, 0
	bne	$a2, $a0, .LBB90_6
# %bb.8:                                #   in Loop: Header=BB90_7 Depth=1
	ld.d	$a3, $a1, 40
	ld.d	$a2, $a1, 32
	st.d	$zero, $s2, 32
	vst	$vr0, $s2, 16
	st.d	$a3, $s2, 40
	beqz	$a2, .LBB90_6
# %bb.9:                                #   in Loop: Header=BB90_7 Depth=1
	vld	$vr1, $a1, 16
	addi.d	$a3, $s2, 16
	addi.d	$a4, $a1, 32
	vst	$vr1, $a3, 0
	st.d	$a2, $s2, 32
	vst	$vr0, $a4, 0
	b	.LBB90_6
.LBB90_10:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit
	beqz	$s0, .LBB90_12
# %bb.11:                               # %_ZNSt12_Vector_baseINSt8__detail6_StateIcEESaIS2_EE13_M_deallocateEPS2_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB90_12:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 48
	st.d	$s1, $fp, 0
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 48
	mul.d	$a0, $s4, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB90_13:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end90:
	.size	_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_, .Lfunc_end90-_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB91_3
# %bb.1:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB91_12
	.p2align	4, , 16
.LBB91_2:                               # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB91_2
.LBB91_3:                               # %.loopexit
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB91_5
# %bb.4:
	ld.d	$a0, $a1, -8
	st.d	$a0, $sp, 24
	vld	$vr0, $a1, -24
	addi.d	$a0, $a1, -24
	vst	$vr0, $sp, 8
	b	.LBB91_6
.LBB91_5:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$a2, $a1, 480
	vld	$vr0, $a1, 488
	st.d	$a2, $sp, 8
	vst	$vr0, $sp, 16
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB91_6:                               # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	st.d	$a0, $fp, 352
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a2, $a0, .LBB91_8
# %bb.7:
	ld.d	$s1, $a2, -16
	ld.d	$s0, $a2, -8
	ld.d	$a1, $fp, 368
	addi.d	$a0, $a2, -24
	b	.LBB91_9
.LBB91_8:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s1, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB91_9:                               # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit2
	ld.d	$a2, $sp, 8
	ld.d	$a3, $sp, 24
	st.d	$a0, $fp, 352
	ld.d	$a2, $a2, 56
	slli.d	$a4, $a3, 5
	alsl.d	$a3, $a3, $a4, 4
	add.d	$a2, $a2, $a3
	st.d	$s1, $a2, 8
	addi.d	$a1, $a1, -24
	st.d	$s0, $sp, 24
	beq	$a0, $a1, .LBB91_11
# %bb.10:
	ld.d	$a1, $sp, 24
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a0, 0
	b	.LBB91_14
.LBB91_11:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB91_15
.LBB91_12:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_termEv.exit
	ld.d	$s0, $fp, 256
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 8
	st.d	$a0, $sp, 16
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 24
	beq	$a1, $a2, .LBB91_16
# %bb.13:
	ld.d	$a0, $sp, 24
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a1, 0
.LBB91_14:
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
.LBB91_15:
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB91_16:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB91_15
.Lfunc_end91:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv, .Lfunc_end91-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_alternativeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 10
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB92_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 24
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB92_4
.LBB92_2:
.Ltmp256:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp257:                               # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB92_4:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB92_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB92_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB92_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp258:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp259:                               # EH_LABEL
.LBB92_8:                               # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB92_9:
.Ltmp261:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp262:                               # EH_LABEL
# %bb.10:                               # %.noexc2
.LBB92_11:
.Ltmp260:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB92_12:
.Ltmp263:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end92:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv, .Lfunc_end92-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv,comdat
	.p2align	2, 0x0
GCC_except_table92:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Ltmp256-.Lfunc_begin26        # >> Call Site 1 <<
	.uleb128 .Ltmp257-.Ltmp256              #   Call between .Ltmp256 and .Ltmp257
	.uleb128 .Ltmp263-.Lfunc_begin26        #     jumps to .Ltmp263
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp258-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Ltmp259-.Ltmp258              #   Call between .Ltmp258 and .Ltmp259
	.uleb128 .Ltmp260-.Lfunc_begin26        #     jumps to .Ltmp260
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp261-.Lfunc_begin26        # >> Call Site 3 <<
	.uleb128 .Ltmp262-.Ltmp261              #   Call between .Ltmp261 and .Ltmp262
	.uleb128 .Ltmp263-.Lfunc_begin26        #     jumps to .Ltmp263
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp262-.Lfunc_begin26        # >> Call Site 4 <<
	.uleb128 .Lfunc_end92-.Ltmp262          #   Call between .Ltmp262 and .Lfunc_end92
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 1
	st.w	$a0, $sp, 56
	st.d	$a1, $sp, 64
	st.d	$a2, $sp, 72
	st.d	$a1, $sp, 16
	st.d	$a2, $sp, 24
	ld.d	$a1, $sp, 80
	vld	$vr0, $sp, 88
	ld.d	$a2, $sp, 56
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 32
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 8
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB93_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 72
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB93_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB93_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB93_4:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB93_7
.LBB93_5:
.Ltmp264:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp265:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB93_7:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB93_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB93_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB93_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp266:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp267:                               # EH_LABEL
.LBB93_11:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB93_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB93_14
# %bb.13:
.Ltmp269:                               # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp270:                               # EH_LABEL
.LBB93_14:                              # %_ZNSt8__detail6_StateIcED2Ev.exit6
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB93_15:
.Ltmp272:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp273:                               # EH_LABEL
# %bb.16:                               # %.noexc4
.LBB93_17:
.Ltmp271:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB93_18:
.Ltmp268:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB93_19:
.Ltmp274:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end93:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb, .Lfunc_end93-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE13_M_insert_altEllb,comdat
	.p2align	2, 0x0
GCC_except_table93:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Ltmp264-.Lfunc_begin27        # >> Call Site 1 <<
	.uleb128 .Ltmp265-.Ltmp264              #   Call between .Ltmp264 and .Ltmp265
	.uleb128 .Ltmp274-.Lfunc_begin27        #     jumps to .Ltmp274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp266-.Lfunc_begin27        # >> Call Site 2 <<
	.uleb128 .Ltmp267-.Ltmp266              #   Call between .Ltmp266 and .Ltmp267
	.uleb128 .Ltmp268-.Lfunc_begin27        #     jumps to .Ltmp268
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp269-.Lfunc_begin27        # >> Call Site 3 <<
	.uleb128 .Ltmp270-.Ltmp269              #   Call between .Ltmp269 and .Ltmp270
	.uleb128 .Ltmp271-.Lfunc_begin27        #     jumps to .Ltmp271
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp272-.Lfunc_begin27        # >> Call Site 4 <<
	.uleb128 .Ltmp273-.Ltmp272              #   Call between .Ltmp272 and .Ltmp273
	.uleb128 .Ltmp274-.Lfunc_begin27        #     jumps to .Ltmp274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp273-.Lfunc_begin27        # >> Call Site 5 <<
	.uleb128 .Lfunc_end93-.Ltmp273          #   Call between .Ltmp273 and .Lfunc_end93
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	addi.d	$a1, $a0, -7
	ori	$a2, $zero, 17
	move	$a0, $zero
	bltu	$a2, $a1, .LBB94_54
# %bb.1:
	addi.d	$s0, $fp, 8
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI94_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI94_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB94_2:
	addi.d	$s1, $fp, 208
	addi.d	$s2, $fp, 272
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB94_23
# %bb.3:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB94_31
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB94_29
# %bb.5:
	bnez	$a0, .LBB94_32
# %bb.6:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB94_32
.LBB94_7:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB94_22
# %bb.8:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB94_27
# %bb.9:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB94_26
# %bb.10:
	bnez	$a0, .LBB94_28
# %bb.11:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB94_28
.LBB94_12:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB94_24
# %bb.13:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB94_39
# %bb.14:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB94_30
# %bb.15:
	bnez	$a0, .LBB94_40
# %bb.16:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB94_40
.LBB94_17:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB94_25
# %bb.18:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB94_42
# %bb.19:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB94_41
# %bb.20:
	bnez	$a0, .LBB94_43
# %bb.21:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB94_43
.LBB94_22:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB94_28
.LBB94_23:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB94_32
.LBB94_24:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB94_40
.LBB94_25:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB94_43
.LBB94_26:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB94_28
.LBB94_27:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB94_28:
	ld.d	$s0, $fp, 256
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv)
	jirl	$ra, $ra, 0
	b	.LBB94_44
.LBB94_29:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB94_32
.LBB94_30:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB94_40
.LBB94_31:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB94_32:
	ld.d	$a0, $fp, 272
	ld.bu	$s3, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB94_55
# %bb.33:
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB94_38
# %bb.34:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB94_49
# %bb.35:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB94_46
# %bb.36:
	bnez	$a0, .LBB94_47
# %bb.37:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB94_48
	b	.LBB94_50
.LBB94_38:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB94_48
	b	.LBB94_50
.LBB94_39:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB94_40:
	ld.d	$s0, $fp, 256
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv)
	jirl	$ra, $ra, 0
	b	.LBB94_44
.LBB94_41:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB94_43
.LBB94_42:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB94_43:
	ld.d	$a0, $fp, 272
	ld.bu	$a0, $a0, 0
	ld.d	$s0, $fp, 256
	addi.d	$a0, $a0, -110
	sltui	$a1, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb)
	jirl	$ra, $ra, 0
.LBB94_44:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 16
	st.d	$a0, $sp, 24
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	beq	$a1, $a2, .LBB94_52
.LBB94_45:
	ld.d	$a0, $sp, 32
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 16
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB94_53
.LBB94_46:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB94_47:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB94_50
.LBB94_48:
	ld.d	$s2, $a1, -24
	ld.d	$s0, $a1, -16
	ld.d	$s4, $a1, -8
	addi.d	$a1, $a1, -24
	b	.LBB94_51
.LBB94_49:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB94_48
.LBB94_50:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s2, $a1, 480
	ld.d	$s0, $a1, 488
	ld.d	$s4, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a1, $a0, 480
.LBB94_51:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	ld.d	$a0, $fp, 256
	addi.d	$a2, $s3, -110
	sltui	$s1, $a2, 1
	st.d	$a1, $fp, 352
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_acceptEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 56
	slli.d	$a2, $s4, 5
	alsl.d	$a2, $s4, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$s2, $fp, 256
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s2, $sp, 16
	st.d	$a0, $sp, 24
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	bne	$a1, $a2, .LBB94_45
.LBB94_52:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB94_53:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit11
	ori	$a0, $zero, 1
.LBB94_54:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit8
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB94_55:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit9
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end94:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv, .Lfunc_end94-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE12_M_assertionEv,comdat
	.p2align	2, 0x0
.LJTI94_0:
	.word	.LBB94_2-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_54-.LJTI94_0
	.word	.LBB94_12-.LJTI94_0
	.word	.LBB94_7-.LJTI94_0
	.word	.LBB94_17-.LJTI94_0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	addi.d	$s0, $fp, 8
	beqz	$a0, .LBB95_5
# %bb.1:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB95_10
# %bb.2:
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a1, .LBB95_17
# %bb.3:
	bnez	$a0, .LBB95_20
# %bb.4:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB95_19
# %bb.6:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB95_40
# %bb.7:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB95_39
# %bb.8:
	bnez	$a0, .LBB95_41
# %bb.9:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB95_41
.LBB95_10:
	ld.w	$a0, $fp, 152
	addi.d	$a0, $a0, -4
	ori	$a1, $zero, 10
	bltu	$a1, $a0, .LBB95_37
# %bb.11:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI95_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI95_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB95_12:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB95_57
# %bb.13:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB95_71
# %bb.14:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB95_69
# %bb.15:
	bnez	$a0, .LBB95_72
# %bb.16:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB95_72
.LBB95_17:
	bnez	$a0, .LBB95_21
# %bb.18:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_19:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB95_41
.LBB95_20:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_21:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_22:
	addi.d	$s3, $fp, 208
	addi.d	$s4, $fp, 272
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB95_56
# %bb.23:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB95_61
# %bb.24:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB95_60
# %bb.25:
	bnez	$a0, .LBB95_62
# %bb.26:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB95_62
.LBB95_27:
	addi.d	$s3, $fp, 208
	addi.d	$s4, $fp, 272
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB95_58
# %bb.28:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB95_80
# %bb.29:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB95_70
# %bb.30:
	bnez	$a0, .LBB95_81
# %bb.31:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB95_81
.LBB95_32:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB95_59
# %bb.33:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB95_89
# %bb.34:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB95_88
# %bb.35:
	bnez	$a0, .LBB95_90
# %bb.36:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB95_90
.LBB95_37:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit18
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB95_113
# %bb.38:
	move	$a0, $zero
	b	.LBB95_114
.LBB95_39:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB95_41
.LBB95_40:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB95_41:
	ld.wu	$a0, $fp, 0
	andi	$a2, $a0, 16
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a2, .LBB95_45
# %bb.42:
	bnez	$a1, .LBB95_48
# %bb.43:
	bnez	$a0, .LBB95_52
# %bb.44:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_45:
	bnez	$a1, .LBB95_50
# %bb.46:
	bnez	$a0, .LBB95_53
# %bb.47:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_48:
	bnez	$a0, .LBB95_54
# %bb.49:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_50:
	bnez	$a0, .LBB95_55
# %bb.51:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_52:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_53:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_54:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_55:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_56:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB95_62
.LBB95_57:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB95_72
.LBB95_58:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB95_81
.LBB95_59:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB95_90
.LBB95_60:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB95_62
.LBB95_61:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB95_62:
	ld.d	$s1, $fp, 256
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	st.d	$s1, $sp, 16
	st.d	$a0, $sp, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB95_116
# %bb.63:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB95_68
# %bb.64:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB95_98
# %bb.65:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB95_97
# %bb.66:
	bnez	$a0, .LBB95_99
# %bb.67:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB95_99
.LBB95_68:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB95_99
.LBB95_69:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB95_72
.LBB95_70:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB95_81
.LBB95_71:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB95_72:
	ld.d	$s1, $fp, 280
	ld.d	$s0, $fp, 256
	beqz	$s1, .LBB95_77
# %bb.73:                               # %.lr.ph.i
	ld.d	$s2, $fp, 272
	move	$a0, $zero
	.p2align	4, , 16
.LBB95_74:                              # =>This Inner Loop Header: Depth=1
	addi.w	$a0, $a0, 0
	slli.d	$a1, $a0, 3
	alsl.d	$a2, $a0, $a1, 1
	alsl.w	$a0, $a0, $a1, 1
	bne	$a0, $a2, .LBB95_115
# %bb.75:                               #   in Loop: Header=BB95_74 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	addi.w	$s3, $a2, 0
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a0, $s3, $a0
	addi.w	$a1, $a0, 0
	bne	$a1, $a0, .LBB95_115
# %bb.76:                               #   in Loop: Header=BB95_74 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB95_74
	b	.LBB95_78
.LBB95_77:
	move	$a1, $zero
.LBB95_78:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 16
	st.d	$a0, $sp, 24
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	bne	$a1, $a2, .LBB95_110
# %bb.79:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_80:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB95_81:
	ld.d	$s1, $fp, 256
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE23_M_insert_subexpr_beginEv)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	st.d	$s1, $sp, 16
	st.d	$a0, $sp, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_disjunctionEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB95_116
# %bb.82:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB95_87
# %bb.83:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB95_105
# %bb.84:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB95_104
# %bb.85:
	bnez	$a0, .LBB95_106
# %bb.86:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB95_106
.LBB95_87:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB95_106
.LBB95_88:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB95_90
.LBB95_89:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB95_90:
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a1, .LBB95_93
# %bb.91:
	bnez	$a0, .LBB95_95
# %bb.92:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_93:
	bnez	$a0, .LBB95_96
# %bb.94:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_95:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_96:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv)
	jirl	$ra, $ra, 0
	b	.LBB95_113
.LBB95_97:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB95_99
.LBB95_98:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB95_99:
	ld.d	$a2, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a2, $a0, .LBB95_101
# %bb.100:
	ld.d	$s3, $a2, -16
	ld.d	$s0, $a2, -8
	ld.d	$a1, $fp, 368
	addi.d	$a0, $a2, -24
	b	.LBB95_102
.LBB95_101:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s3, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB95_102:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	st.d	$a0, $fp, 352
	ld.d	$a2, $s1, 56
	slli.d	$a3, $s2, 5
	alsl.d	$a3, $s2, $a3, 4
	add.d	$a2, $a2, $a3
	st.d	$s3, $a2, 8
	addi.d	$a1, $a1, -24
	st.d	$s0, $sp, 32
	beq	$a0, $a1, .LBB95_112
# %bb.103:
	ld.d	$a1, $sp, 32
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 16
	vst	$vr0, $a0, 0
	b	.LBB95_111
.LBB95_104:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB95_106
.LBB95_105:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB95_106:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB95_108
# %bb.107:
	ld.d	$s3, $a1, -16
	ld.d	$s0, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB95_109
.LBB95_108:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s3, $a1, 488
	ld.d	$s0, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB95_109:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit34
	st.d	$a0, $fp, 352
	ld.d	$a0, $s1, 56
	ori	$s4, $zero, 48
	mul.d	$a1, $s2, $s4
	add.d	$a0, $a0, $a1
	st.d	$s3, $a0, 8
	ld.d	$a0, $fp, 256
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE21_M_insert_subexpr_endEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 56
	mul.d	$a2, $s0, $s4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 32
	beq	$a1, $a2, .LBB95_112
.LBB95_110:
	ld.d	$a0, $sp, 32
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 16
	vst	$vr0, $a1, 0
.LBB95_111:
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB95_113
.LBB95_112:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB95_113:
	ori	$a0, $zero, 1
.LBB95_114:
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB95_115:
	pcalau12i	$a0, %pc_hi20(.L.str.28)
	addi.d	$a1, $a0, %pc_lo12(.L.str.28)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB95_116:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit17
	ori	$a0, $zero, 5
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.Lfunc_end95:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv, .Lfunc_end95-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE7_M_atomEv,comdat
	.p2align	2, 0x0
.LJTI95_0:
	.word	.LBB95_12-.LJTI95_0
	.word	.LBB95_27-.LJTI95_0
	.word	.LBB95_22-.LJTI95_0
	.word	.LBB95_37-.LJTI95_0
	.word	.LBB95_37-.LJTI95_0
	.word	.LBB95_37-.LJTI95_0
	.word	.LBB95_37-.LJTI95_0
	.word	.LBB95_37-.LJTI95_0
	.word	.LBB95_37-.LJTI95_0
	.word	.LBB95_37-.LJTI95_0
	.word	.LBB95_32-.LJTI95_0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	st.d	$s7, $sp, 192                   # 8-byte Folded Spill
	st.d	$s8, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	addi.d	$a1, $a0, -12
	ori	$a2, $zero, 9
	move	$a0, $zero
	bltu	$a2, $a1, .LBB96_168
# %bb.1:
	ld.wu	$a2, $fp, 0
	andi	$s5, $a2, 16
	addi.d	$s8, $fp, 8
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI96_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI96_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB96_2:
	addi.d	$s3, $fp, 208
	addi.d	$s4, $fp, 272
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_23
# %bb.3:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_38
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_36
# %bb.5:
	bnez	$a0, .LBB96_39
# %bb.6:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_39
.LBB96_7:
	addi.d	$s2, $fp, 208
	addi.d	$s3, $fp, 272
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_22
# %bb.8:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_27
# %bb.9:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_26
# %bb.10:
	bnez	$a0, .LBB96_28
# %bb.11:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_28
.LBB96_12:
	addi.d	$s2, $fp, 208
	addi.d	$s3, $fp, 272
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_24
# %bb.13:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_47
# %bb.14:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_37
# %bb.15:
	bnez	$a0, .LBB96_48
# %bb.16:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_48
.LBB96_17:
	addi.d	$s2, $fp, 208
	addi.d	$s3, $fp, 272
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_25
# %bb.18:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_57
# %bb.19:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_56
# %bb.20:
	bnez	$a0, .LBB96_58
# %bb.21:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_58
.LBB96_22:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_28
.LBB96_23:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_39
.LBB96_24:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_48
.LBB96_25:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_58
.LBB96_26:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_28
.LBB96_27:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_28:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB96_170
# %bb.29:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s1, $a1, $a0
	beqz	$s1, .LBB96_96
# %bb.30:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_35
# %bb.31:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_95
# %bb.32:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_94
# %bb.33:
	bnez	$a0, .LBB96_96
# %bb.34:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_96
.LBB96_35:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_96
.LBB96_36:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_39
.LBB96_37:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_48
.LBB96_38:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_39:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB96_170
# %bb.40:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 26
	bne	$a0, $a1, .LBB96_171
# %bb.41:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_46
# %bb.42:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_69
# %bb.43:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_66
# %bb.44:
	bnez	$a0, .LBB96_67
# %bb.45:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB96_68
	b	.LBB96_70
.LBB96_46:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB96_68
	b	.LBB96_70
.LBB96_47:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_48:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB96_170
# %bb.49:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s1, $a1, $a0
	beqz	$s1, .LBB96_102
# %bb.50:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_55
# %bb.51:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_101
# %bb.52:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_100
# %bb.53:
	bnez	$a0, .LBB96_102
# %bb.54:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_102
.LBB96_55:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_102
.LBB96_56:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_58
.LBB96_57:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_58:
	ld.d	$a0, $fp, 352
	ld.d	$a1, $fp, 320
	beq	$a0, $a1, .LBB96_170
# %bb.59:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s1, $a1, $a0
	beqz	$s1, .LBB96_109
# %bb.60:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_65
# %bb.61:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_108
# %bb.62:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_107
# %bb.63:
	bnez	$a0, .LBB96_109
# %bb.64:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_109
.LBB96_65:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_109
.LBB96_66:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB96_67:
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB96_70
.LBB96_68:
	ld.d	$a0, $a1, -8
	st.d	$a0, $sp, 176
	vld	$vr0, $a1, -24
	addi.d	$a0, $a1, -24
	vst	$vr0, $sp, 160
	b	.LBB96_71
.LBB96_69:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	bne	$a1, $a0, .LBB96_68
.LBB96_70:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$a2, $a1, 480
	vld	$vr0, $a1, 488
	st.d	$a2, $sp, 160
	vst	$vr0, $sp, 168
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB96_71:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit40
	ld.d	$s1, $fp, 256
	st.d	$a0, $fp, 352
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$s0, $fp, 280
	move	$s2, $a0
	st.d	$s1, $sp, 136
	st.d	$a0, $sp, 144
	st.d	$a0, $sp, 152
	beqz	$s0, .LBB96_82
# %bb.72:                               # %.lr.ph.i
	ld.d	$s6, $fp, 272
	move	$s7, $zero
	.p2align	4, , 16
.LBB96_73:                              # =>This Inner Loop Header: Depth=1
	addi.w	$a0, $s7, 0
	slli.d	$a1, $a0, 3
	alsl.d	$a2, $a0, $a1, 1
	alsl.w	$a0, $a0, $a1, 1
	bne	$a0, $a2, .LBB96_169
# %bb.74:                               #   in Loop: Header=BB96_73 Depth=1
	ld.b	$a1, $s6, 0
	ld.d	$a0, $fp, 384
	addi.w	$s7, $a2, 0
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$s7, $s7, $a0
	addi.w	$a0, $s7, 0
	bne	$a0, $s7, .LBB96_169
# %bb.75:                               #   in Loop: Header=BB96_73 Depth=1
	addi.d	$s0, $s0, -1
	addi.d	$s6, $s6, 1
	bnez	$s0, .LBB96_73
# %bb.76:                               # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 25
	addi.w	$s6, $s7, 0
	bne	$a1, $a0, .LBB96_83
.LBB96_77:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_172
# %bb.78:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_91
# %bb.79:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_84
# %bb.80:
	bnez	$a0, .LBB96_85
# %bb.81:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 26
	beq	$a1, $a0, .LBB96_86
	b	.LBB96_92
.LBB96_82:
	move	$s7, $zero
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 25
	addi.w	$s6, $s7, 0
	beq	$a1, $a0, .LBB96_77
.LBB96_83:
	move	$s0, $s8
	move	$s8, $zero
	st.d	$zero, $sp, 16                  # 8-byte Folded Spill
	b	.LBB96_118
.LBB96_84:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB96_85:
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 26
	bne	$a1, $a0, .LBB96_92
.LBB96_86:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_93
# %bb.87:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_116
# %bb.88:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_115
# %bb.89:
	bnez	$a0, .LBB96_117
# %bb.90:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_117
.LBB96_91:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.w	$a1, $fp, 152
	ori	$a0, $zero, 26
	beq	$a1, $a0, .LBB96_86
.LBB96_92:
	move	$s0, $s8
	move	$s8, $zero
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	b	.LBB96_118
.LBB96_93:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_117
.LBB96_94:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_96
.LBB96_95:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_96:                              # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEvENKUlvE_clEv.exit
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB96_98
# %bb.97:
	ld.d	$s3, $a1, -24
	ld.d	$s0, $a1, -16
	ld.d	$s4, $a1, -8
	addi.d	$a0, $a1, -24
	b	.LBB96_99
.LBB96_98:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s3, $a1, 480
	ld.d	$s0, $a1, 488
	ld.d	$s4, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a0, $a0, 480
.LBB96_99:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit
	ld.d	$s2, $fp, 256
	st.d	$a0, $fp, 352
	addi.w	$a1, $zero, -1
	move	$a0, $s2
	move	$a2, $s0
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	st.d	$s2, $sp, 56
	st.d	$a0, $sp, 64
	ld.d	$a1, $s3, 56
	st.d	$a0, $sp, 72
	slli.d	$a2, $s4, 5
	alsl.d	$a2, $s4, $a2, 4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a1, $fp, 368
	ld.d	$a0, $fp, 352
	addi.d	$a1, $a1, -24
	bne	$a0, $a1, .LBB96_106
	b	.LBB96_114
.LBB96_100:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_102
.LBB96_101:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_102:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEvENKUlvE_clEv.exit32
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB96_104
# %bb.103:
	ld.d	$s4, $a1, -24
	ld.d	$s0, $a1, -16
	ld.d	$s5, $a1, -8
	addi.d	$a1, $a1, -24
	b	.LBB96_105
.LBB96_104:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$s4, $a1, 480
	ld.d	$s0, $a1, 488
	ld.d	$s5, $a1, 496
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a1, $a0, 480
.LBB96_105:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit34
	ld.d	$a0, $fp, 256
	st.d	$a1, $fp, 352
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	ld.d	$s2, $fp, 256
	move	$s3, $a0
	addi.w	$a1, $zero, -1
	move	$a0, $s2
	move	$a2, $s0
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	st.d	$s2, $sp, 56
	ld.d	$a1, $s4, 56
	st.d	$a0, $sp, 64
	ori	$a2, $zero, 48
	mul.d	$a3, $s5, $a2
	add.d	$a1, $a1, $a3
	st.d	$s3, $a1, 8
	ld.d	$a1, $s2, 56
	mul.d	$a0, $a0, $a2
	add.d	$a0, $a1, $a0
	st.d	$s3, $a0, 8
	ld.d	$a1, $fp, 368
	ld.d	$a0, $fp, 352
	addi.d	$a1, $a1, -24
	st.d	$s3, $sp, 72
	beq	$a0, $a1, .LBB96_114
.LBB96_106:
	ld.d	$a1, $sp, 72
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 56
	b	.LBB96_163
.LBB96_107:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_109
.LBB96_108:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_109:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEvENKUlvE_clEv.exit26
	ld.d	$a1, $fp, 352
	ld.d	$a0, $fp, 360
	beq	$a1, $a0, .LBB96_111
# %bb.110:
	ld.d	$a0, $a1, -8
	st.d	$a0, $sp, 72
	vld	$vr0, $a1, -24
	addi.d	$a1, $a1, -24
	vst	$vr0, $sp, 56
	b	.LBB96_112
.LBB96_111:
	ld.d	$a1, $fp, 376
	ld.d	$a1, $a1, -8
	ld.d	$a2, $a1, 480
	vld	$vr0, $a1, 488
	st.d	$a2, $sp, 56
	vst	$vr0, $sp, 64
	ori	$a1, $zero, 504
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 376
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 376
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 360
	addi.d	$a1, $a0, 504
	st.d	$a1, $fp, 368
	addi.d	$a1, $a0, 480
.LBB96_112:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE6_M_popEv.exit28
	ld.d	$a0, $fp, 256
	ld.d	$a2, $sp, 64
	st.d	$a1, $fp, 352
	addi.w	$a1, $zero, -1
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	ld.d	$a2, $sp, 72
	ld.d	$a1, $a1, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 72
	beq	$a1, $a2, .LBB96_114
# %bb.113:
	ld.d	$a0, $sp, 72
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a1, 0
	b	.LBB96_164
.LBB96_114:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 56
	b	.LBB96_166
.LBB96_115:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_117
.LBB96_116:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_117:
	move	$s0, $s8
	ori	$a1, $zero, 10
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi)
	jirl	$ra, $ra, 0
	ld.w	$a1, $fp, 152
	st.d	$zero, $sp, 16                  # 8-byte Folded Spill
	sub.d	$s8, $a0, $s6
.LBB96_118:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit41
	ori	$a0, $zero, 13
	bne	$a1, $a0, .LBB96_173
# %bb.119:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_124
# %bb.120:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_126
# %bb.121:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_125
# %bb.122:
	bnez	$a0, .LBB96_127
# %bb.123:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_127
.LBB96_124:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_127
.LBB96_125:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_127
.LBB96_126:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_127:
	ld.w	$a0, $fp, 152
	sltu	$a1, $zero, $s5
	addi.d	$a0, $a0, -18
	sltui	$a0, $a0, 1
	and	$s5, $a1, $a0
	beqz	$s5, .LBB96_136
# %bb.128:
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB96_133
# %bb.129:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB96_135
# %bb.130:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB96_134
# %bb.131:
	bnez	$a0, .LBB96_136
# %bb.132:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB96_136
.LBB96_133:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB96_136
.LBB96_134:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB96_136
.LBB96_135:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB96_136:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit44
	addi.w	$a0, $s7, 0
	blez	$a0, .LBB96_138
	.p2align	4, , 16
.LBB96_137:                             # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 56
	ld.d	$a1, $sp, 64
	slli.d	$a2, $s2, 5
	alsl.d	$a2, $s2, $a2, 4
	add.d	$a0, $a0, $a2
	st.d	$a1, $a0, 8
	ld.d	$s2, $sp, 72
	addi.d	$s6, $s6, -1
	bnez	$s6, .LBB96_137
.LBB96_138:                             # %._crit_edge
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	beqz	$a0, .LBB96_140
# %bb.139:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 256
	ld.d	$a2, $sp, 64
	addi.w	$a1, $zero, -1
	move	$a3, $s5
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	ld.d	$a2, $sp, 72
	ld.d	$a1, $a1, 56
	ori	$a3, $zero, 48
	mul.d	$a2, $a2, $a3
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	ld.d	$a1, $s1, 56
	mul.d	$a2, $s2, $a3
	add.d	$a1, $a1, $a2
	st.d	$a0, $a1, 8
	st.d	$a0, $sp, 152
	b	.LBB96_161
.LBB96_140:
	bltz	$s8, .LBB96_171
# %bb.141:
	ld.d	$a0, $fp, 256
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE15_M_insert_dummyEv)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	addi.d	$a0, $sp, 56
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	bnez	$s8, .LBB96_147
# %bb.142:                              # %.._crit_edge96_crit_edge
	ld.d	$a0, $s1, 56
	move	$a1, $s2
.LBB96_143:                             # %._crit_edge96
	alsl.d	$a1, $a1, $a1, 1
	slli.d	$a1, $a1, 4
	add.d	$a0, $a0, $a1
	st.d	$s0, $a0, 8
	ld.d	$a2, $sp, 104
	ld.d	$a1, $sp, 72
	st.d	$s0, $sp, 152
	beq	$a2, $a1, .LBB96_155
# %bb.144:                              # %.lr.ph98
	ld.d	$a0, $sp, 112
	b	.LBB96_153
	.p2align	4, , 16
.LBB96_145:                             #   in Loop: Header=BB96_147 Depth=1
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $sp, 104
.LBB96_146:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit
                                        #   in Loop: Header=BB96_147 Depth=1
	ld.d	$a2, $sp, 24
	ld.d	$a0, $s1, 56
	ld.d	$a1, $sp, 48
	slli.d	$a3, $s2, 5
	alsl.d	$a3, $s2, $a3, 4
	add.d	$a3, $a0, $a3
	addi.d	$s8, $s8, -1
	st.d	$a2, $a3, 8
	move	$s2, $a1
	beqz	$s8, .LBB96_143
.LBB96_147:                             # =>This Inner Loop Header: Depth=1
.Ltmp275:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv)
	jirl	$ra, $ra, 0
.Ltmp276:                               # EH_LABEL
# %bb.148:                              #   in Loop: Header=BB96_147 Depth=1
	ld.d	$a0, $fp, 256
	ld.d	$a1, $sp, 40
.Ltmp278:                               # EH_LABEL
	move	$a2, $s0
	move	$a3, $s5
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb)
	jirl	$ra, $ra, 0
.Ltmp279:                               # EH_LABEL
# %bb.149:                              #   in Loop: Header=BB96_147 Depth=1
	ld.d	$a2, $sp, 120
	ld.d	$a1, $sp, 104
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 24
	bne	$a1, $a2, .LBB96_145
# %bb.150:                              #   in Loop: Header=BB96_147 Depth=1
.Ltmp280:                               # EH_LABEL
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp281:                               # EH_LABEL
	b	.LBB96_146
	.p2align	4, , 16
.LBB96_151:                             #   in Loop: Header=BB96_153 Depth=1
	ld.d	$a1, $sp, 128
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	ld.d	$a2, $a3, 56
	slli.d	$a3, $a1, 5
	alsl.d	$a1, $a1, $a3, 4
	add.d	$s0, $a2, $a1
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, -8
	st.d	$a1, $sp, 128
	ld.d	$a0, $a0, -8
	st.d	$a0, $sp, 112
	ld.d	$a1, $sp, 72
	addi.d	$a2, $a0, 512
	st.d	$a2, $sp, 120
	addi.d	$a2, $a0, 504
.LBB96_152:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE3popEv.exit
                                        #   in Loop: Header=BB96_153 Depth=1
	st.d	$a2, $sp, 104
	ld.d	$a3, $s0, 16
	ld.d	$a4, $s0, 8
	st.d	$a3, $s0, 8
	st.d	$a4, $s0, 16
	beq	$a2, $a1, .LBB96_155
.LBB96_153:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $fp, 256
	beq	$a2, $a0, .LBB96_151
# %bb.154:                              #   in Loop: Header=BB96_153 Depth=1
	ld.d	$a4, $a2, -8
	ld.d	$a3, $a3, 56
	addi.d	$a2, $a2, -8
	slli.d	$a5, $a4, 5
	alsl.d	$a4, $a4, $a5, 4
	add.d	$s0, $a3, $a4
	b	.LBB96_152
.LBB96_155:                             # %._crit_edge99
	ld.d	$a0, $sp, 56
	beqz	$a0, .LBB96_161
# %bb.156:
	ld.d	$s0, $sp, 128
	ld.d	$a1, $sp, 96
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB96_160
# %bb.157:                              # %.lr.ph.i.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB96_158:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB96_158
# %bb.159:                              # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.loopexit.i.i.i
	ld.d	$a0, $sp, 56
.LBB96_160:                             # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i.i.i
	ld.d	$a1, $sp, 64
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB96_161:
	ld.d	$a1, $fp, 368
	ld.d	$a0, $fp, 352
	addi.d	$a1, $a1, -24
	beq	$a0, $a1, .LBB96_165
# %bb.162:
	ld.d	$a1, $sp, 152
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 136
.LBB96_163:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit37
	vst	$vr0, $a0, 0
.LBB96_164:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit37
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB96_167
.LBB96_165:
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 136
.LBB96_166:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushERKS5_.exit48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB96_167:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushERKS5_.exit48
	ori	$a0, $zero, 1
.LBB96_168:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit37
	ld.d	$s8, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB96_169:
	pcalau12i	$a0, %pc_hi20(.L.str.28)
	addi.d	$a1, $a0, %pc_lo12(.L.str.28)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB96_170:
	ori	$a0, $zero, 10
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB96_171:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit38
	ori	$a0, $zero, 7
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB96_172:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit41.thread
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
.LBB96_173:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit43
	ori	$a0, $zero, 6
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeE)
	jirl	$ra, $ra, 0
.LBB96_174:
.Ltmp277:                               # EH_LABEL
	b	.LBB96_176
.LBB96_175:
.Ltmp282:                               # EH_LABEL
.LBB96_176:
	move	$fp, $a0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end96:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv, .Lfunc_end96-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,comdat
	.p2align	2, 0x0
.LJTI96_0:
	.word	.LBB96_2-.LJTI96_0
	.word	.LBB96_168-.LJTI96_0
	.word	.LBB96_168-.LJTI96_0
	.word	.LBB96_168-.LJTI96_0
	.word	.LBB96_168-.LJTI96_0
	.word	.LBB96_168-.LJTI96_0
	.word	.LBB96_12-.LJTI96_0
	.word	.LBB96_168-.LJTI96_0
	.word	.LBB96_7-.LJTI96_0
	.word	.LBB96_17-.LJTI96_0
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE13_M_quantifierEv,comdat
	.p2align	2, 0x0
GCC_except_table96:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28  # >> Call Site 1 <<
	.uleb128 .Ltmp275-.Lfunc_begin28        #   Call between .Lfunc_begin28 and .Ltmp275
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp275-.Lfunc_begin28        # >> Call Site 2 <<
	.uleb128 .Ltmp276-.Ltmp275              #   Call between .Ltmp275 and .Ltmp276
	.uleb128 .Ltmp277-.Lfunc_begin28        #     jumps to .Ltmp277
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp278-.Lfunc_begin28        # >> Call Site 3 <<
	.uleb128 .Ltmp281-.Ltmp278              #   Call between .Ltmp278 and .Ltmp281
	.uleb128 .Ltmp282-.Lfunc_begin28        #     jumps to .Ltmp282
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp281-.Lfunc_begin28        # >> Call Site 4 <<
	.uleb128 .Lfunc_end96-.Ltmp281          #   Call between .Ltmp281 and .Lfunc_end96
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 4
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB97_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 24
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB97_4
.LBB97_2:
.Ltmp283:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp284:                               # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB97_4:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB97_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB97_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB97_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp285:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp286:                               # EH_LABEL
.LBB97_8:                               # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB97_9:
.Ltmp288:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp289:                               # EH_LABEL
# %bb.10:                               # %.noexc2
.LBB97_11:
.Ltmp287:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB97_12:
.Ltmp290:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end97:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv, .Lfunc_end97-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_line_beginEv,comdat
	.p2align	2, 0x0
GCC_except_table97:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Ltmp283-.Lfunc_begin29        # >> Call Site 1 <<
	.uleb128 .Ltmp284-.Ltmp283              #   Call between .Ltmp283 and .Ltmp284
	.uleb128 .Ltmp290-.Lfunc_begin29        #     jumps to .Ltmp290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp285-.Lfunc_begin29        # >> Call Site 2 <<
	.uleb128 .Ltmp286-.Ltmp285              #   Call between .Ltmp285 and .Ltmp286
	.uleb128 .Ltmp287-.Lfunc_begin29        #     jumps to .Ltmp287
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp288-.Lfunc_begin29        # >> Call Site 3 <<
	.uleb128 .Ltmp289-.Ltmp288              #   Call between .Ltmp288 and .Ltmp289
	.uleb128 .Ltmp290-.Lfunc_begin29        #     jumps to .Ltmp290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp289-.Lfunc_begin29        # >> Call Site 4 <<
	.uleb128 .Lfunc_end97-.Ltmp289          #   Call between .Ltmp289 and .Lfunc_end97
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a1, $zero, 5
	ld.d	$a0, $a0, 64
	ld.d	$a2, $fp, 72
	st.w	$a1, $sp, 8
	addi.w	$a1, $zero, -1
	st.d	$a1, $sp, 16
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB98_2
# %bb.1:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	vld	$vr0, $sp, 40
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 24
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 8
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB98_4
.LBB98_2:
.Ltmp291:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp292:                               # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB98_4:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB98_9
# %bb.5:
	ld.w	$a0, $sp, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB98_8
# %bb.6:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB98_8
# %bb.7:
	addi.d	$a0, $sp, 24
.Ltmp293:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp294:                               # EH_LABEL
.LBB98_8:                               # %_ZNSt8__detail6_StateIcED2Ev.exit
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB98_9:
.Ltmp296:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp297:                               # EH_LABEL
# %bb.10:                               # %.noexc2
.LBB98_11:
.Ltmp295:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB98_12:
.Ltmp298:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end98:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv, .Lfunc_end98-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE18_M_insert_line_endEv,comdat
	.p2align	2, 0x0
GCC_except_table98:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Ltmp291-.Lfunc_begin30        # >> Call Site 1 <<
	.uleb128 .Ltmp292-.Ltmp291              #   Call between .Ltmp291 and .Ltmp292
	.uleb128 .Ltmp298-.Lfunc_begin30        #     jumps to .Ltmp298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp293-.Lfunc_begin30        # >> Call Site 2 <<
	.uleb128 .Ltmp294-.Ltmp293              #   Call between .Ltmp293 and .Ltmp294
	.uleb128 .Ltmp295-.Lfunc_begin30        #     jumps to .Ltmp295
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp296-.Lfunc_begin30        # >> Call Site 3 <<
	.uleb128 .Ltmp297-.Ltmp296              #   Call between .Ltmp296 and .Ltmp297
	.uleb128 .Ltmp298-.Lfunc_begin30        #     jumps to .Ltmp298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp297-.Lfunc_begin30        # >> Call Site 4 <<
	.uleb128 .Lfunc_end98-.Ltmp297          #   Call between .Ltmp297 and .Lfunc_end98
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	addi.w	$a2, $zero, -1
	st.d	$a2, $sp, 64
	st.b	$a1, $sp, 80
	vld	$vr0, $sp, 88
	move	$fp, $a0
	ori	$a0, $zero, 6
	st.w	$a0, $sp, 56
	vst	$vr0, $sp, 40
	ld.d	$a1, $sp, 56
	vld	$vr0, $sp, 72
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a2, $sp, 16
	st.d	$a1, $sp, 8
	vst	$vr0, $sp, 24
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB99_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 72
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB99_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB99_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB99_4:                               # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB99_7
.LBB99_5:
.Ltmp299:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp300:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB99_7:                               # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB99_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB99_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB99_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp301:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp302:                               # EH_LABEL
.LBB99_11:                              # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB99_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB99_14
# %bb.13:
	addi.d	$a0, $sp, 72
.Ltmp304:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp305:                               # EH_LABEL
.LBB99_14:                              # %_ZNSt8__detail6_StateIcED2Ev.exit5
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB99_15:
.Ltmp307:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp308:                               # EH_LABEL
# %bb.16:                               # %.noexc3
.LBB99_17:
.Ltmp306:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB99_18:
.Ltmp303:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB99_19:
.Ltmp309:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end99:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb, .Lfunc_end99-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE20_M_insert_word_boundEb,comdat
	.p2align	2, 0x0
GCC_except_table99:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Ltmp299-.Lfunc_begin31        # >> Call Site 1 <<
	.uleb128 .Ltmp300-.Ltmp299              #   Call between .Ltmp299 and .Ltmp300
	.uleb128 .Ltmp309-.Lfunc_begin31        #     jumps to .Ltmp309
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp301-.Lfunc_begin31        # >> Call Site 2 <<
	.uleb128 .Ltmp302-.Ltmp301              #   Call between .Ltmp301 and .Ltmp302
	.uleb128 .Ltmp303-.Lfunc_begin31        #     jumps to .Ltmp303
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp304-.Lfunc_begin31        # >> Call Site 3 <<
	.uleb128 .Ltmp305-.Ltmp304              #   Call between .Ltmp304 and .Ltmp305
	.uleb128 .Ltmp306-.Lfunc_begin31        #     jumps to .Ltmp306
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp307-.Lfunc_begin31        # >> Call Site 4 <<
	.uleb128 .Ltmp308-.Ltmp307              #   Call between .Ltmp307 and .Ltmp308
	.uleb128 .Ltmp309-.Lfunc_begin31        #     jumps to .Ltmp309
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp308-.Lfunc_begin31        # >> Call Site 5 <<
	.uleb128 .Lfunc_end99-.Ltmp308          #   Call between .Ltmp308 and .Lfunc_end99
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end31:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	addi.w	$a3, $zero, -1
	st.d	$a3, $sp, 64
	st.d	$a1, $sp, 72
	st.b	$a2, $sp, 80
	vld	$vr0, $sp, 88
	move	$fp, $a0
	ori	$a0, $zero, 7
	st.w	$a0, $sp, 56
	vst	$vr0, $sp, 40
	ld.d	$a1, $sp, 56
	vld	$vr0, $sp, 72
	ld.d	$a0, $fp, 64
	ld.d	$a2, $fp, 72
	st.d	$a3, $sp, 16
	st.d	$a1, $sp, 8
	vst	$vr0, $sp, 24
	addi.d	$s0, $fp, 56
	beq	$a0, $a2, .LBB100_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 72
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB100_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB100_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB100_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB100_7
.LBB100_5:
.Ltmp310:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp311:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB100_7:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB100_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB100_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB100_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp312:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp313:                               # EH_LABEL
.LBB100_11:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB100_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB100_14
# %bb.13:
.Ltmp315:                               # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp316:                               # EH_LABEL
.LBB100_14:                             # %_ZNSt8__detail6_StateIcED2Ev.exit6
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB100_15:
.Ltmp318:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp319:                               # EH_LABEL
# %bb.16:                               # %.noexc4
.LBB100_17:
.Ltmp317:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB100_18:
.Ltmp314:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB100_19:
.Ltmp320:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end100:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb, .Lfunc_end100-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE19_M_insert_lookaheadElb,comdat
	.p2align	2, 0x0
GCC_except_table100:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Ltmp310-.Lfunc_begin32        # >> Call Site 1 <<
	.uleb128 .Ltmp311-.Ltmp310              #   Call between .Ltmp310 and .Ltmp311
	.uleb128 .Ltmp320-.Lfunc_begin32        #     jumps to .Ltmp320
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp312-.Lfunc_begin32        # >> Call Site 2 <<
	.uleb128 .Ltmp313-.Ltmp312              #   Call between .Ltmp312 and .Ltmp313
	.uleb128 .Ltmp314-.Lfunc_begin32        #     jumps to .Ltmp314
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp315-.Lfunc_begin32        # >> Call Site 3 <<
	.uleb128 .Ltmp316-.Ltmp315              #   Call between .Ltmp315 and .Ltmp316
	.uleb128 .Ltmp317-.Lfunc_begin32        #     jumps to .Ltmp317
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp318-.Lfunc_begin32        # >> Call Site 4 <<
	.uleb128 .Ltmp319-.Ltmp318              #   Call between .Ltmp318 and .Ltmp319
	.uleb128 .Ltmp320-.Lfunc_begin32        #     jumps to .Ltmp320
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp319-.Lfunc_begin32        # >> Call Site 5 <<
	.uleb128 .Lfunc_end100-.Ltmp319         #   Call between .Ltmp319 and .Lfunc_end100
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$s0, $a0, 256
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp321:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp322:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB101_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB101_4
.LBB101_3:
	addi.d	$a0, $fp, 304
.Ltmp323:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp324:                               # EH_LABEL
.LBB101_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB101_6
# %bb.5:
.Ltmp329:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp330:                               # EH_LABEL
.LBB101_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB101_7:
.Ltmp331:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB101_8:
.Ltmp325:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB101_10
# %bb.9:
.Ltmp326:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp327:                               # EH_LABEL
.LBB101_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB101_11:
.Ltmp328:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end101:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv, .Lfunc_end101-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table101:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Ltmp321-.Lfunc_begin33        # >> Call Site 1 <<
	.uleb128 .Ltmp324-.Ltmp321              #   Call between .Ltmp321 and .Ltmp324
	.uleb128 .Ltmp325-.Lfunc_begin33        #     jumps to .Ltmp325
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp329-.Lfunc_begin33        # >> Call Site 2 <<
	.uleb128 .Ltmp330-.Ltmp329              #   Call between .Ltmp329 and .Ltmp330
	.uleb128 .Ltmp331-.Lfunc_begin33        #     jumps to .Ltmp331
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp330-.Lfunc_begin33        # >> Call Site 3 <<
	.uleb128 .Ltmp326-.Ltmp330              #   Call between .Ltmp330 and .Ltmp326
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp326-.Lfunc_begin33        # >> Call Site 4 <<
	.uleb128 .Ltmp327-.Ltmp326              #   Call between .Ltmp326 and .Ltmp327
	.uleb128 .Ltmp328-.Lfunc_begin33        #     jumps to .Ltmp328
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp327-.Lfunc_begin33        # >> Call Site 5 <<
	.uleb128 .Lfunc_end101-.Ltmp327         #   Call between .Ltmp327 and .Lfunc_end101
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp332:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp333:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB102_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB102_4
.LBB102_3:
	addi.d	$a0, $fp, 304
.Ltmp334:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp335:                               # EH_LABEL
.LBB102_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB102_6
# %bb.5:
.Ltmp340:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp341:                               # EH_LABEL
.LBB102_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB102_7:
.Ltmp342:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB102_8:
.Ltmp336:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB102_10
# %bb.9:
.Ltmp337:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp338:                               # EH_LABEL
.LBB102_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB102_11:
.Ltmp339:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end102:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv, .Lfunc_end102-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table102:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Ltmp332-.Lfunc_begin34        # >> Call Site 1 <<
	.uleb128 .Ltmp335-.Ltmp332              #   Call between .Ltmp332 and .Ltmp335
	.uleb128 .Ltmp336-.Lfunc_begin34        #     jumps to .Ltmp336
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp340-.Lfunc_begin34        # >> Call Site 2 <<
	.uleb128 .Ltmp341-.Ltmp340              #   Call between .Ltmp340 and .Ltmp341
	.uleb128 .Ltmp342-.Lfunc_begin34        #     jumps to .Ltmp342
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp341-.Lfunc_begin34        # >> Call Site 3 <<
	.uleb128 .Ltmp337-.Ltmp341              #   Call between .Ltmp341 and .Ltmp337
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp337-.Lfunc_begin34        # >> Call Site 4 <<
	.uleb128 .Ltmp338-.Ltmp337              #   Call between .Ltmp337 and .Ltmp338
	.uleb128 .Ltmp339-.Lfunc_begin34        #     jumps to .Ltmp339
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp338-.Lfunc_begin34        # >> Call Site 5 <<
	.uleb128 .Lfunc_end102-.Ltmp338         #   Call between .Ltmp338 and .Lfunc_end102
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp343:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp344:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB103_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB103_4
.LBB103_3:
	addi.d	$a0, $fp, 304
.Ltmp345:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp346:                               # EH_LABEL
.LBB103_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB103_6
# %bb.5:
.Ltmp351:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp352:                               # EH_LABEL
.LBB103_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB103_7:
.Ltmp353:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB103_8:
.Ltmp347:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB103_10
# %bb.9:
.Ltmp348:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp349:                               # EH_LABEL
.LBB103_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB103_11:
.Ltmp350:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end103:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv, .Lfunc_end103-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table103:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Ltmp343-.Lfunc_begin35        # >> Call Site 1 <<
	.uleb128 .Ltmp346-.Ltmp343              #   Call between .Ltmp343 and .Ltmp346
	.uleb128 .Ltmp347-.Lfunc_begin35        #     jumps to .Ltmp347
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp351-.Lfunc_begin35        # >> Call Site 2 <<
	.uleb128 .Ltmp352-.Ltmp351              #   Call between .Ltmp351 and .Ltmp352
	.uleb128 .Ltmp353-.Lfunc_begin35        #     jumps to .Ltmp353
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp352-.Lfunc_begin35        # >> Call Site 3 <<
	.uleb128 .Ltmp348-.Ltmp352              #   Call between .Ltmp352 and .Ltmp348
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp348-.Lfunc_begin35        # >> Call Site 4 <<
	.uleb128 .Ltmp349-.Ltmp348              #   Call between .Ltmp348 and .Ltmp349
	.uleb128 .Ltmp350-.Lfunc_begin35        #     jumps to .Ltmp350
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp349-.Lfunc_begin35        # >> Call Site 5 <<
	.uleb128 .Lfunc_end103-.Ltmp349         #   Call between .Ltmp349 and .Lfunc_end103
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase17:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp354:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp355:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB104_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB104_4
.LBB104_3:
	addi.d	$a0, $fp, 304
.Ltmp356:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp357:                               # EH_LABEL
.LBB104_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB104_6
# %bb.5:
.Ltmp362:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp363:                               # EH_LABEL
.LBB104_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB104_7:
.Ltmp364:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB104_8:
.Ltmp358:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB104_10
# %bb.9:
.Ltmp359:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp360:                               # EH_LABEL
.LBB104_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB104_11:
.Ltmp361:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end104:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv, .Lfunc_end104-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE27_M_insert_any_matcher_posixILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table104:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Ltmp354-.Lfunc_begin36        # >> Call Site 1 <<
	.uleb128 .Ltmp357-.Ltmp354              #   Call between .Ltmp354 and .Ltmp357
	.uleb128 .Ltmp358-.Lfunc_begin36        #     jumps to .Ltmp358
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp362-.Lfunc_begin36        # >> Call Site 2 <<
	.uleb128 .Ltmp363-.Ltmp362              #   Call between .Ltmp362 and .Ltmp363
	.uleb128 .Ltmp364-.Lfunc_begin36        #     jumps to .Ltmp364
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp363-.Lfunc_begin36        # >> Call Site 3 <<
	.uleb128 .Ltmp359-.Ltmp363              #   Call between .Ltmp363 and .Ltmp359
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp359-.Lfunc_begin36        # >> Call Site 4 <<
	.uleb128 .Ltmp360-.Ltmp359              #   Call between .Ltmp359 and .Ltmp360
	.uleb128 .Ltmp361-.Lfunc_begin36        #     jumps to .Ltmp361
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp360-.Lfunc_begin36        # >> Call Site 5 <<
	.uleb128 .Lfunc_end104-.Ltmp360         #   Call between .Ltmp360 and .Lfunc_end104
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase18:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$s0, $a0, 256
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp365:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp366:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB105_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB105_4
.LBB105_3:
	addi.d	$a0, $fp, 304
.Ltmp367:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp368:                               # EH_LABEL
.LBB105_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB105_6
# %bb.5:
.Ltmp373:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp374:                               # EH_LABEL
.LBB105_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB105_7:
.Ltmp375:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB105_8:
.Ltmp369:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB105_10
# %bb.9:
.Ltmp370:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp371:                               # EH_LABEL
.LBB105_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB105_11:
.Ltmp372:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end105:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv, .Lfunc_end105-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table105:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Ltmp365-.Lfunc_begin37        # >> Call Site 1 <<
	.uleb128 .Ltmp368-.Ltmp365              #   Call between .Ltmp365 and .Ltmp368
	.uleb128 .Ltmp369-.Lfunc_begin37        #     jumps to .Ltmp369
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp373-.Lfunc_begin37        # >> Call Site 2 <<
	.uleb128 .Ltmp374-.Ltmp373              #   Call between .Ltmp373 and .Ltmp374
	.uleb128 .Ltmp375-.Lfunc_begin37        #     jumps to .Ltmp375
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp374-.Lfunc_begin37        # >> Call Site 3 <<
	.uleb128 .Ltmp370-.Ltmp374              #   Call between .Ltmp374 and .Ltmp370
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp370-.Lfunc_begin37        # >> Call Site 4 <<
	.uleb128 .Ltmp371-.Ltmp370              #   Call between .Ltmp370 and .Ltmp371
	.uleb128 .Ltmp372-.Lfunc_begin37        #     jumps to .Ltmp372
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp371-.Lfunc_begin37        # >> Call Site 5 <<
	.uleb128 .Lfunc_end105-.Ltmp371         #   Call between .Ltmp371 and .Lfunc_end105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end37:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp376:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp377:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB106_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB106_4
.LBB106_3:
	addi.d	$a0, $fp, 304
.Ltmp378:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp379:                               # EH_LABEL
.LBB106_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB106_6
# %bb.5:
.Ltmp384:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp385:                               # EH_LABEL
.LBB106_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB106_7:
.Ltmp386:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB106_8:
.Ltmp380:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB106_10
# %bb.9:
.Ltmp381:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp382:                               # EH_LABEL
.LBB106_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB106_11:
.Ltmp383:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end106:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv, .Lfunc_end106-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table106:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Ltmp376-.Lfunc_begin38        # >> Call Site 1 <<
	.uleb128 .Ltmp379-.Ltmp376              #   Call between .Ltmp376 and .Ltmp379
	.uleb128 .Ltmp380-.Lfunc_begin38        #     jumps to .Ltmp380
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp384-.Lfunc_begin38        # >> Call Site 2 <<
	.uleb128 .Ltmp385-.Ltmp384              #   Call between .Ltmp384 and .Ltmp385
	.uleb128 .Ltmp386-.Lfunc_begin38        #     jumps to .Ltmp386
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp385-.Lfunc_begin38        # >> Call Site 3 <<
	.uleb128 .Ltmp381-.Ltmp385              #   Call between .Ltmp385 and .Ltmp381
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp381-.Lfunc_begin38        # >> Call Site 4 <<
	.uleb128 .Ltmp382-.Ltmp381              #   Call between .Ltmp381 and .Ltmp382
	.uleb128 .Ltmp383-.Lfunc_begin38        #     jumps to .Ltmp383
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp382-.Lfunc_begin38        # >> Call Site 5 <<
	.uleb128 .Lfunc_end106-.Ltmp382         #   Call between .Ltmp382 and .Lfunc_end106
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp387:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp388:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB107_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB107_4
.LBB107_3:
	addi.d	$a0, $fp, 304
.Ltmp389:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp390:                               # EH_LABEL
.LBB107_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB107_6
# %bb.5:
.Ltmp395:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp396:                               # EH_LABEL
.LBB107_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB107_7:
.Ltmp397:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB107_8:
.Ltmp391:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB107_10
# %bb.9:
.Ltmp392:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp393:                               # EH_LABEL
.LBB107_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB107_11:
.Ltmp394:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end107:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv, .Lfunc_end107-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table107:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Ltmp387-.Lfunc_begin39        # >> Call Site 1 <<
	.uleb128 .Ltmp390-.Ltmp387              #   Call between .Ltmp387 and .Ltmp390
	.uleb128 .Ltmp391-.Lfunc_begin39        #     jumps to .Ltmp391
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp395-.Lfunc_begin39        # >> Call Site 2 <<
	.uleb128 .Ltmp396-.Ltmp395              #   Call between .Ltmp395 and .Ltmp396
	.uleb128 .Ltmp397-.Lfunc_begin39        #     jumps to .Ltmp397
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp396-.Lfunc_begin39        # >> Call Site 3 <<
	.uleb128 .Ltmp392-.Ltmp396              #   Call between .Ltmp396 and .Ltmp392
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp392-.Lfunc_begin39        # >> Call Site 4 <<
	.uleb128 .Ltmp393-.Ltmp392              #   Call between .Ltmp392 and .Ltmp393
	.uleb128 .Ltmp394-.Lfunc_begin39        #     jumps to .Ltmp394
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp393-.Lfunc_begin39        # >> Call Site 5 <<
	.uleb128 .Lfunc_end107-.Ltmp393         #   Call between .Ltmp393 and .Lfunc_end107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 384
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp398:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp399:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB108_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB108_4
.LBB108_3:
	addi.d	$a0, $fp, 304
.Ltmp400:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp401:                               # EH_LABEL
.LBB108_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB108_6
# %bb.5:
.Ltmp406:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp407:                               # EH_LABEL
.LBB108_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB108_7:
.Ltmp408:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB108_8:
.Ltmp402:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB108_10
# %bb.9:
.Ltmp403:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp404:                               # EH_LABEL
.LBB108_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB108_11:
.Ltmp405:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end108:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv, .Lfunc_end108-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE26_M_insert_any_matcher_ecmaILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table108:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Ltmp398-.Lfunc_begin40        # >> Call Site 1 <<
	.uleb128 .Ltmp401-.Ltmp398              #   Call between .Ltmp398 and .Ltmp401
	.uleb128 .Ltmp402-.Lfunc_begin40        #     jumps to .Ltmp402
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp406-.Lfunc_begin40        # >> Call Site 2 <<
	.uleb128 .Ltmp407-.Ltmp406              #   Call between .Ltmp406 and .Ltmp407
	.uleb128 .Ltmp408-.Lfunc_begin40        #     jumps to .Ltmp408
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp407-.Lfunc_begin40        # >> Call Site 3 <<
	.uleb128 .Ltmp403-.Ltmp407              #   Call between .Ltmp407 and .Ltmp403
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp403-.Lfunc_begin40        # >> Call Site 4 <<
	.uleb128 .Ltmp404-.Ltmp403              #   Call between .Ltmp403 and .Ltmp404
	.uleb128 .Ltmp405-.Lfunc_begin40        #     jumps to .Ltmp405
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp404-.Lfunc_begin40        # >> Call Site 5 <<
	.uleb128 .Lfunc_end108-.Ltmp404         #   Call between .Ltmp404 and .Lfunc_end108
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.w	$a0, $a0, 152
	ori	$a1, $zero, 1
	addi.d	$s1, $fp, 8
	beq	$a0, $a1, .LBB109_13
# %bb.1:
	ori	$a1, $zero, 3
	beq	$a0, $a1, .LBB109_8
# %bb.2:
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB109_18
# %bb.3:
	addi.d	$a1, $fp, 208
	addi.d	$s0, $fp, 272
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB109_21
# %bb.4:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB109_39
# %bb.5:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB109_31
# %bb.6:
	bnez	$a0, .LBB109_32
# %bb.7:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB109_33
	b	.LBB109_40
.LBB109_8:
	addi.d	$a1, $fp, 208
	addi.d	$s0, $fp, 272
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB109_19
# %bb.9:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB109_28
# %bb.10:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB109_22
# %bb.11:
	bnez	$a0, .LBB109_23
# %bb.12:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB109_24
	b	.LBB109_40
.LBB109_13:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB109_20
# %bb.14:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	ori	$fp, $zero, 1
	beq	$a0, $a1, .LBB109_38
# %bb.15:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB109_29
# %bb.16:
	bnez	$a0, .LBB109_42
# %bb.17:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB109_30
.LBB109_18:
	move	$fp, $zero
	b	.LBB109_42
.LBB109_19:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB109_24
	b	.LBB109_40
.LBB109_20:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	b	.LBB109_30
.LBB109_21:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB109_33
	b	.LBB109_40
.LBB109_22:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB109_23:
	ld.d	$s1, $fp, 280
	beqz	$s1, .LBB109_40
.LBB109_24:                             # %.lr.ph.i3
	ld.d	$s2, $fp, 272
	move	$a3, $zero
	ori	$s3, $zero, 15
	.p2align	4, , 16
.LBB109_25:                             # =>This Inner Loop Header: Depth=1
	addu16i.d	$a0, $a3, -2048
	bstrpick.d	$a0, $a0, 31, 28
	bltu	$a0, $s3, .LBB109_43
# %bb.26:                               #   in Loop: Header=BB109_25 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	slli.w	$s4, $a3, 4
	ori	$a2, $zero, 16
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a3, $s4, $a0
	addi.w	$a0, $a3, 0
	bne	$a0, $a3, .LBB109_43
# %bb.27:                               #   in Loop: Header=BB109_25 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB109_25
	b	.LBB109_37
.LBB109_28:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB109_24
	b	.LBB109_40
.LBB109_29:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB109_30:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit9
	ori	$fp, $zero, 1
	b	.LBB109_42
.LBB109_31:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB109_32:
	ld.d	$s1, $fp, 280
	beqz	$s1, .LBB109_40
.LBB109_33:                             # %.lr.ph.i
	ld.d	$s2, $fp, 272
	move	$a3, $zero
	ori	$s3, $zero, 7
	.p2align	4, , 16
.LBB109_34:                             # =>This Inner Loop Header: Depth=1
	addu16i.d	$a0, $a3, -4096
	bstrpick.d	$a0, $a0, 31, 29
	bltu	$a0, $s3, .LBB109_43
# %bb.35:                               #   in Loop: Header=BB109_34 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	slli.w	$s4, $a3, 3
	ori	$a2, $zero, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a3, $s4, $a0
	addi.w	$a0, $a3, 0
	bne	$a0, $a3, .LBB109_43
# %bb.36:                               #   in Loop: Header=BB109_34 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB109_34
.LBB109_37:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit.loopexit
	ld.d	$a2, $fp, 280
	b	.LBB109_41
.LBB109_38:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	b	.LBB109_42
.LBB109_39:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 280
	bnez	$s1, .LBB109_33
.LBB109_40:
	move	$a2, $zero
	move	$a3, $zero
.LBB109_41:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi.exit
	ext.w.b	$a4, $a3
	ori	$a3, $zero, 1
	ori	$fp, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
.LBB109_42:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit9
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB109_43:
	pcalau12i	$a0, %pc_hi20(.L.str.28)
	addi.d	$a1, $a0, %pc_lo12(.L.str.28)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end109:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv, .Lfunc_end109-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.b	$a0, $a0, 0
	ld.d	$s0, $fp, 256
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16
	slli.d	$a0, $a0, 8
	st.h	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp409:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp410:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB110_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB110_4
.LBB110_3:
	addi.d	$a0, $fp, 304
.Ltmp411:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp412:                               # EH_LABEL
.LBB110_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB110_6
# %bb.5:
.Ltmp417:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp418:                               # EH_LABEL
.LBB110_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB110_7:
.Ltmp419:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB110_8:
.Ltmp413:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB110_10
# %bb.9:
.Ltmp414:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp415:                               # EH_LABEL
.LBB110_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB110_11:
.Ltmp416:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end110:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv, .Lfunc_end110-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table110:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Ltmp409-.Lfunc_begin41        # >> Call Site 1 <<
	.uleb128 .Ltmp412-.Ltmp409              #   Call between .Ltmp409 and .Ltmp412
	.uleb128 .Ltmp413-.Lfunc_begin41        #     jumps to .Ltmp413
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp417-.Lfunc_begin41        # >> Call Site 2 <<
	.uleb128 .Ltmp418-.Ltmp417              #   Call between .Ltmp417 and .Ltmp418
	.uleb128 .Ltmp419-.Lfunc_begin41        #     jumps to .Ltmp419
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp418-.Lfunc_begin41        # >> Call Site 3 <<
	.uleb128 .Ltmp414-.Ltmp418              #   Call between .Ltmp418 and .Ltmp414
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp414-.Lfunc_begin41        # >> Call Site 4 <<
	.uleb128 .Ltmp415-.Ltmp414              #   Call between .Ltmp414 and .Ltmp415
	.uleb128 .Ltmp416-.Lfunc_begin41        #     jumps to .Ltmp416
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp415-.Lfunc_begin41        # >> Call Site 5 <<
	.uleb128 .Lfunc_end110-.Ltmp415         #   Call between .Ltmp415 and .Lfunc_end110
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.d	$a1, $fp, 384
	ld.b	$a0, $a0, 0
	ld.d	$s0, $fp, 256
	st.d	$zero, $sp, 24
	st.d	$a1, $sp, 16
	st.b	$a0, $sp, 24
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp420:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp421:                               # EH_LABEL
# %bb.1:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB111_3
# %bb.2:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB111_4
.LBB111_3:
	addi.d	$a0, $fp, 304
.Ltmp422:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp423:                               # EH_LABEL
.LBB111_4:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB111_6
# %bb.5:
.Ltmp428:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp429:                               # EH_LABEL
.LBB111_6:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB111_7:
.Ltmp430:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB111_8:
.Ltmp424:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB111_10
# %bb.9:
.Ltmp425:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp426:                               # EH_LABEL
.LBB111_10:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB111_11:
.Ltmp427:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end111:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv, .Lfunc_end111-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table111:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Ltmp420-.Lfunc_begin42        # >> Call Site 1 <<
	.uleb128 .Ltmp423-.Ltmp420              #   Call between .Ltmp420 and .Ltmp423
	.uleb128 .Ltmp424-.Lfunc_begin42        #     jumps to .Ltmp424
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp428-.Lfunc_begin42        # >> Call Site 2 <<
	.uleb128 .Ltmp429-.Ltmp428              #   Call between .Ltmp428 and .Ltmp429
	.uleb128 .Ltmp430-.Lfunc_begin42        #     jumps to .Ltmp430
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp429-.Lfunc_begin42        # >> Call Site 3 <<
	.uleb128 .Ltmp425-.Ltmp429              #   Call between .Ltmp429 and .Ltmp425
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp425-.Lfunc_begin42        # >> Call Site 4 <<
	.uleb128 .Ltmp426-.Ltmp425              #   Call between .Ltmp425 and .Ltmp426
	.uleb128 .Ltmp427-.Lfunc_begin42        #     jumps to .Ltmp427
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp426-.Lfunc_begin42        # >> Call Site 5 <<
	.uleb128 .Lfunc_end111-.Ltmp426         #   Call between .Ltmp426 and .Lfunc_end111
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.d	$s0, $fp, 256
	ld.b	$s1, $a0, 0
	ld.d	$s2, $fp, 384
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB112_8
# %bb.1:                                # %_ZNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2EcRKS3_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s1
	jirl	$ra, $a2, 0
	st.d	$zero, $sp, 24
	st.d	$s2, $sp, 16
	st.b	$a0, $sp, 24
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp431:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp432:                               # EH_LABEL
# %bb.2:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB112_4
# %bb.3:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB112_5
.LBB112_4:
	addi.d	$a0, $fp, 304
.Ltmp433:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp434:                               # EH_LABEL
.LBB112_5:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB112_7
# %bb.6:
.Ltmp439:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp440:                               # EH_LABEL
.LBB112_7:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB112_8:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB112_9:
.Ltmp441:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB112_10:
.Ltmp435:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB112_12
# %bb.11:
.Ltmp436:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp437:                               # EH_LABEL
.LBB112_12:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB112_13:
.Ltmp438:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end112:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv, .Lfunc_end112-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table112:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Lfunc_begin43-.Lfunc_begin43  # >> Call Site 1 <<
	.uleb128 .Ltmp431-.Lfunc_begin43        #   Call between .Lfunc_begin43 and .Ltmp431
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp431-.Lfunc_begin43        # >> Call Site 2 <<
	.uleb128 .Ltmp434-.Ltmp431              #   Call between .Ltmp431 and .Ltmp434
	.uleb128 .Ltmp435-.Lfunc_begin43        #     jumps to .Ltmp435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp439-.Lfunc_begin43        # >> Call Site 3 <<
	.uleb128 .Ltmp440-.Ltmp439              #   Call between .Ltmp439 and .Ltmp440
	.uleb128 .Ltmp441-.Lfunc_begin43        #     jumps to .Ltmp441
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp440-.Lfunc_begin43        # >> Call Site 4 <<
	.uleb128 .Ltmp436-.Ltmp440              #   Call between .Ltmp440 and .Ltmp436
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp436-.Lfunc_begin43        # >> Call Site 5 <<
	.uleb128 .Ltmp437-.Ltmp436              #   Call between .Ltmp436 and .Ltmp437
	.uleb128 .Ltmp438-.Lfunc_begin43        #     jumps to .Ltmp438
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp437-.Lfunc_begin43        # >> Call Site 6 <<
	.uleb128 .Lfunc_end112-.Ltmp437         #   Call between .Ltmp437 and .Lfunc_end112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a0, $a0, 272
	ld.d	$s0, $fp, 256
	ld.b	$s1, $a0, 0
	ld.d	$s2, $fp, 384
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB113_8
# %bb.1:                                # %_ZNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2EcRKS3_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s1
	jirl	$ra, $a2, 0
	st.d	$zero, $sp, 24
	st.d	$s2, $sp, 16
	st.b	$a0, $sp, 24
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 32
.Ltmp442:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp443:                               # EH_LABEL
# %bb.2:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 64
	beq	$a1, $a2, .LBB113_4
# %bb.3:
	ld.d	$a0, $sp, 64
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB113_5
.LBB113_4:
	addi.d	$a0, $fp, 304
.Ltmp444:                               # EH_LABEL
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp445:                               # EH_LABEL
.LBB113_5:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 32
	beqz	$a3, .LBB113_7
# %bb.6:
.Ltmp450:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp451:                               # EH_LABEL
.LBB113_7:                              # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB113_8:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB113_9:
.Ltmp452:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB113_10:
.Ltmp446:                               # EH_LABEL
	ld.d	$a3, $sp, 32
	move	$fp, $a0
	beqz	$a3, .LBB113_12
# %bb.11:
.Ltmp447:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 16
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp448:                               # EH_LABEL
.LBB113_12:                             # %_ZNSt14_Function_baseD2Ev.exit3
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB113_13:
.Ltmp449:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end113:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv, .Lfunc_end113-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE22_M_insert_char_matcherILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table113:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase26-.Lttbaseref26
.Lttbaseref26:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Lfunc_begin44-.Lfunc_begin44  # >> Call Site 1 <<
	.uleb128 .Ltmp442-.Lfunc_begin44        #   Call between .Lfunc_begin44 and .Ltmp442
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp442-.Lfunc_begin44        # >> Call Site 2 <<
	.uleb128 .Ltmp445-.Ltmp442              #   Call between .Ltmp442 and .Ltmp445
	.uleb128 .Ltmp446-.Lfunc_begin44        #     jumps to .Ltmp446
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp450-.Lfunc_begin44        # >> Call Site 3 <<
	.uleb128 .Ltmp451-.Ltmp450              #   Call between .Ltmp450 and .Ltmp451
	.uleb128 .Ltmp452-.Lfunc_begin44        #     jumps to .Ltmp452
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp451-.Lfunc_begin44        # >> Call Site 4 <<
	.uleb128 .Ltmp447-.Ltmp451              #   Call between .Ltmp451 and .Ltmp447
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp447-.Lfunc_begin44        # >> Call Site 5 <<
	.uleb128 .Ltmp448-.Ltmp447              #   Call between .Ltmp447 and .Ltmp448
	.uleb128 .Ltmp449-.Lfunc_begin44        #     jumps to .Ltmp449
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp448-.Lfunc_begin44        # >> Call Site 6 <<
	.uleb128 .Lfunc_end113-.Ltmp448         #   Call between .Ltmp448 and .Lfunc_end113
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,comdat
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.bu	$a0, $a0, 25
	andi	$a0, $a0, 4
	bnez	$a0, .LBB114_21
# %bb.1:
	ld.d	$a0, $fp, 40
	bgeu	$a1, $a0, .LBB114_22
# %bb.2:
	ld.d	$a0, $fp, 0
	ld.d	$a2, $fp, 8
	beq	$a0, $a2, .LBB114_5
	.p2align	4, , 16
.LBB114_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a0, 0
	beq	$a1, $a3, .LBB114_20
# %bb.4:                                #   in Loop: Header=BB114_3 Depth=1
	addi.d	$a0, $a0, 8
	bne	$a0, $a2, .LBB114_3
.LBB114_5:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 48
	ori	$a0, $zero, 3
	st.w	$a0, $sp, 56
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 72
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 24
	ld.d	$a1, $sp, 80
	vld	$vr0, $sp, 88
	ld.d	$a2, $sp, 56
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 32
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 8
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB114_10
# %bb.6:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 72
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB114_9
# %bb.7:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB114_9
# %bb.8:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB114_9:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB114_12
.LBB114_10:
.Ltmp453:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp454:                               # EH_LABEL
# %bb.11:                               # %.noexc
	ld.d	$a0, $fp, 64
.LBB114_12:                             # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB114_23
# %bb.13:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB114_16
# %bb.14:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB114_16
# %bb.15:
	addi.d	$a0, $sp, 24
.Ltmp455:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp456:                               # EH_LABEL
.LBB114_16:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB114_19
# %bb.17:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB114_19
# %bb.18:
.Ltmp458:                               # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp459:                               # EH_LABEL
.LBB114_19:                             # %_ZNSt8__detail6_StateIcED2Ev.exit11
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB114_20:
	pcalau12i	$a0, %pc_hi20(.L.str.27)
	addi.d	$a1, $a0, %pc_lo12(.L.str.27)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB114_21:
	pcalau12i	$a0, %pc_hi20(.L.str.25)
	addi.d	$a1, $a0, %pc_lo12(.L.str.25)
	ori	$a0, $zero, 11
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB114_22:
	pcalau12i	$a0, %pc_hi20(.L.str.26)
	addi.d	$a1, $a0, %pc_lo12(.L.str.26)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB114_23:
.Ltmp461:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp462:                               # EH_LABEL
# %bb.24:                               # %.noexc9
.LBB114_25:
.Ltmp460:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB114_26:
.Ltmp457:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB114_27:
.Ltmp463:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end114:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm, .Lfunc_end114-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_backrefEm,comdat
	.p2align	2, 0x0
GCC_except_table114:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase27-.Lttbaseref27
.Lttbaseref27:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Ltmp453-.Lfunc_begin45        # >> Call Site 1 <<
	.uleb128 .Ltmp454-.Ltmp453              #   Call between .Ltmp453 and .Ltmp454
	.uleb128 .Ltmp463-.Lfunc_begin45        #     jumps to .Ltmp463
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp455-.Lfunc_begin45        # >> Call Site 2 <<
	.uleb128 .Ltmp456-.Ltmp455              #   Call between .Ltmp455 and .Ltmp456
	.uleb128 .Ltmp457-.Lfunc_begin45        #     jumps to .Ltmp457
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp458-.Lfunc_begin45        # >> Call Site 3 <<
	.uleb128 .Ltmp459-.Ltmp458              #   Call between .Ltmp458 and .Ltmp459
	.uleb128 .Ltmp460-.Lfunc_begin45        #     jumps to .Ltmp460
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp459-.Lfunc_begin45        # >> Call Site 4 <<
	.uleb128 .Ltmp461-.Ltmp459              #   Call between .Ltmp459 and .Ltmp461
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp461-.Lfunc_begin45        # >> Call Site 5 <<
	.uleb128 .Ltmp462-.Ltmp461              #   Call between .Ltmp461 and .Ltmp462
	.uleb128 .Ltmp463-.Lfunc_begin45        #     jumps to .Ltmp463
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp462-.Lfunc_begin45        # >> Call Site 6 <<
	.uleb128 .Lfunc_end114-.Ltmp462         #   Call between .Ltmp462 and .Lfunc_end114
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase27:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$s1, $a0, 280
	beqz	$s1, .LBB115_5
# %bb.1:                                # %.lr.ph
	move	$fp, $a0
	move	$s0, $a1
	ld.d	$s2, $a0, 272
	move	$a0, $zero
	.p2align	4, , 16
.LBB115_2:                              # =>This Inner Loop Header: Depth=1
	addi.w	$a0, $a0, 0
	mul.d	$a0, $a0, $s0
	addi.w	$s3, $a0, 0
	bne	$s3, $a0, .LBB115_7
# %bb.3:                                #   in Loop: Header=BB115_2 Depth=1
	ld.b	$a1, $s2, 0
	ld.d	$a0, $fp, 384
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE5valueEci)
	jirl	$ra, $ra, 0
	add.d	$a0, $s3, $a0
	addi.w	$a1, $a0, 0
	bne	$a1, $a0, .LBB115_7
# %bb.4:                                #   in Loop: Header=BB115_2 Depth=1
	addi.d	$s1, $s1, -1
	addi.d	$s2, $s2, 1
	bnez	$s1, .LBB115_2
	b	.LBB115_6
.LBB115_5:
	move	$a0, $zero
.LBB115_6:                              # %._crit_edge
	addi.w	$a0, $a0, 0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB115_7:
	pcalau12i	$a0, %pc_hi20(.L.str.28)
	addi.d	$a1, $a0, %pc_lo12(.L.str.28)
	ori	$a0, $zero, 3
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Lfunc_end115:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi, .Lfunc_end115-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE16_M_cur_int_valueEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:
	addi.d	$sp, $sp, -288
	.cfi_def_cfa_offset 288
	st.d	$ra, $sp, 280                   # 8-byte Folded Spill
	st.d	$fp, $sp, 272                   # 8-byte Folded Spill
	st.d	$s0, $sp, 264                   # 8-byte Folded Spill
	st.d	$s1, $sp, 256                   # 8-byte Folded Spill
	st.d	$s2, $sp, 248                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$a0, $a0, 1
	ld.d	$s1, $fp, 384
	andi	$s2, $a0, 1
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	st.b	$s2, $sp, 208
	ld.d	$a0, $fp, 280
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 216
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 232
	add.d	$a2, $s0, $a0
.Ltmp464:                               # EH_LABEL
	move	$a0, $s1
	move	$a1, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp465:                               # EH_LABEL
# %bb.1:                                # %.noexc
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB116_25
# %bb.2:
	ld.h	$a1, $sp, 192
	ld.b	$a2, $sp, 194
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $sp, 192
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $sp, 194
.Ltmp466:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp467:                               # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 40
	vst	$vr0, $sp, 56
.Ltmp468:                               # EH_LABEL
	ori	$a0, $zero, 152
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp469:                               # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	addi.d	$a2, $sp, 192
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	ld.d	$a1, $sp, 136
	st.d	$zero, $sp, 112
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	st.d	$a1, $a0, 40
	vld	$vr0, $sp, 144
	ld.d	$a1, $sp, 160
	vst	$vr1, $sp, 120
	st.d	$zero, $sp, 136
	vst	$vr0, $a0, 48
	st.d	$a1, $a0, 64
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vld	$vr0, $a2, 32
	st.d	$a1, $a0, 88
	vst	$vr1, $sp, 168
	ld.d	$a1, $a2, 48
	vst	$vr0, $a0, 128
	vld	$vr0, $a2, 16
	vld	$vr1, $a2, 0
	st.d	$zero, $sp, 184
	st.d	$a1, $a0, 144
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 64
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 56
.Ltmp471:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp472:                               # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 72
	st.d	$a0, $sp, 80
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 88
	beq	$a1, $a2, .LBB116_7
# %bb.6:
	ld.d	$a0, $sp, 88
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 72
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB116_8
.LBB116_7:
.Ltmp473:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp474:                               # EH_LABEL
.LBB116_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 56
	beqz	$a3, .LBB116_10
# %bb.9:
.Ltmp479:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp480:                               # EH_LABEL
.LBB116_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 168
	beqz	$a0, .LBB116_12
# %bb.11:
	ld.d	$a1, $sp, 184
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB116_12:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 144
	beqz	$a0, .LBB116_14
# %bb.13:
	ld.d	$a1, $sp, 160
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB116_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 120
	ld.d	$fp, $sp, 128
	beq	$a0, $fp, .LBB116_20
# %bb.15:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB116_17
	.p2align	4, , 16
.LBB116_16:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB116_17 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB116_19
.LBB116_17:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB116_16
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB116_17 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB116_16
.LBB116_19:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 120
.LBB116_20:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB116_22
# %bb.21:
	ld.d	$a1, $sp, 136
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB116_22:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB116_24
# %bb.23:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB116_24:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev.exit
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	ret
.LBB116_25:
.Ltmp482:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp483:                               # EH_LABEL
# %bb.26:                               # %.noexc6
.LBB116_27:
.Ltmp481:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB116_28:
.Ltmp470:                               # EH_LABEL
	b	.LBB116_33
.LBB116_29:
.Ltmp475:                               # EH_LABEL
	ld.d	$a3, $sp, 56
	move	$fp, $a0
	beqz	$a3, .LBB116_34
# %bb.30:
.Ltmp476:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp477:                               # EH_LABEL
	b	.LBB116_34
.LBB116_31:
.Ltmp478:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB116_32:
.Ltmp484:                               # EH_LABEL
.LBB116_33:
	move	$fp, $a0
.LBB116_34:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end116:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv, .Lfunc_end116-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table116:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase28-.Lttbaseref28
.Lttbaseref28:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Lfunc_begin46-.Lfunc_begin46  # >> Call Site 1 <<
	.uleb128 .Ltmp464-.Lfunc_begin46        #   Call between .Lfunc_begin46 and .Ltmp464
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp464-.Lfunc_begin46        # >> Call Site 2 <<
	.uleb128 .Ltmp467-.Ltmp464              #   Call between .Ltmp464 and .Ltmp467
	.uleb128 .Ltmp484-.Lfunc_begin46        #     jumps to .Ltmp484
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp468-.Lfunc_begin46        # >> Call Site 3 <<
	.uleb128 .Ltmp469-.Ltmp468              #   Call between .Ltmp468 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin46        #     jumps to .Ltmp470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp471-.Lfunc_begin46        # >> Call Site 4 <<
	.uleb128 .Ltmp474-.Ltmp471              #   Call between .Ltmp471 and .Ltmp474
	.uleb128 .Ltmp475-.Lfunc_begin46        #     jumps to .Ltmp475
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp479-.Lfunc_begin46        # >> Call Site 5 <<
	.uleb128 .Ltmp480-.Ltmp479              #   Call between .Ltmp479 and .Ltmp480
	.uleb128 .Ltmp481-.Lfunc_begin46        #     jumps to .Ltmp481
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp480-.Lfunc_begin46        # >> Call Site 6 <<
	.uleb128 .Ltmp482-.Ltmp480              #   Call between .Ltmp480 and .Ltmp482
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp482-.Lfunc_begin46        # >> Call Site 7 <<
	.uleb128 .Ltmp483-.Ltmp482              #   Call between .Ltmp482 and .Ltmp483
	.uleb128 .Ltmp484-.Lfunc_begin46        #     jumps to .Ltmp484
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp483-.Lfunc_begin46        # >> Call Site 8 <<
	.uleb128 .Ltmp476-.Ltmp483              #   Call between .Ltmp483 and .Ltmp476
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp476-.Lfunc_begin46        # >> Call Site 9 <<
	.uleb128 .Ltmp477-.Ltmp476              #   Call between .Ltmp476 and .Ltmp477
	.uleb128 .Ltmp478-.Lfunc_begin46        #     jumps to .Ltmp478
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp477-.Lfunc_begin46        # >> Call Site 10 <<
	.uleb128 .Lfunc_end116-.Ltmp477         #   Call between .Ltmp477 and .Lfunc_end116
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$s2, $a0, 1
	ld.d	$s1, $fp, 384
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	andi	$a0, $s2, 1
	st.d	$s1, $sp, 208
	st.b	$a0, $sp, 216
	ld.d	$a0, $fp, 280
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 224
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 240
	add.d	$a2, $s0, $a0
.Ltmp485:                               # EH_LABEL
	move	$a0, $s1
	move	$a1, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp486:                               # EH_LABEL
# %bb.1:                                # %.noexc
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB117_11
# %bb.2:
	st.h	$a0, $sp, 192
	srli.d	$a0, $a0, 16
	st.b	$a0, $sp, 194
.Ltmp487:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp488:                               # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 40
	vst	$vr0, $sp, 56
.Ltmp489:                               # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp490:                               # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	addi.d	$a2, $sp, 192
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	st.d	$zero, $sp, 112
	ld.d	$a1, $sp, 136
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	vld	$vr0, $sp, 144
	st.d	$a1, $a0, 40
	vst	$vr1, $sp, 120
	ld.d	$a1, $sp, 160
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 136
	st.d	$a1, $a0, 64
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vst	$vr1, $sp, 168
	vld	$vr0, $a2, 48
	vld	$vr1, $a2, 32
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr0, $a0, 144
	vst	$vr1, $a0, 128
	vld	$vr0, $a2, 16
	vld	$vr1, $a2, 0
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 184
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 64
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 56
.Ltmp492:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp493:                               # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 72
	st.d	$a0, $sp, 80
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 88
	beq	$a1, $a2, .LBB117_7
# %bb.6:
	ld.d	$a0, $sp, 88
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 72
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB117_8
.LBB117_7:
.Ltmp494:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp495:                               # EH_LABEL
.LBB117_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 56
	beqz	$a3, .LBB117_10
# %bb.9:
.Ltmp500:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp501:                               # EH_LABEL
.LBB117_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB117_11:
.Ltmp503:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp504:                               # EH_LABEL
# %bb.12:                               # %.noexc6
.LBB117_13:
.Ltmp502:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB117_14:
.Ltmp491:                               # EH_LABEL
	b	.LBB117_19
.LBB117_15:
.Ltmp496:                               # EH_LABEL
	ld.d	$a3, $sp, 56
	move	$fp, $a0
	beqz	$a3, .LBB117_20
# %bb.16:
.Ltmp497:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp498:                               # EH_LABEL
	b	.LBB117_20
.LBB117_17:
.Ltmp499:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB117_18:
.Ltmp505:                               # EH_LABEL
.LBB117_19:
	move	$fp, $a0
.LBB117_20:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end117:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv, .Lfunc_end117-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb0ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table117:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase29-.Lttbaseref29
.Lttbaseref29:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Lfunc_begin47-.Lfunc_begin47  # >> Call Site 1 <<
	.uleb128 .Ltmp485-.Lfunc_begin47        #   Call between .Lfunc_begin47 and .Ltmp485
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp485-.Lfunc_begin47        # >> Call Site 2 <<
	.uleb128 .Ltmp488-.Ltmp485              #   Call between .Ltmp485 and .Ltmp488
	.uleb128 .Ltmp505-.Lfunc_begin47        #     jumps to .Ltmp505
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp489-.Lfunc_begin47        # >> Call Site 3 <<
	.uleb128 .Ltmp490-.Ltmp489              #   Call between .Ltmp489 and .Ltmp490
	.uleb128 .Ltmp491-.Lfunc_begin47        #     jumps to .Ltmp491
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp492-.Lfunc_begin47        # >> Call Site 4 <<
	.uleb128 .Ltmp495-.Ltmp492              #   Call between .Ltmp492 and .Ltmp495
	.uleb128 .Ltmp496-.Lfunc_begin47        #     jumps to .Ltmp496
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp500-.Lfunc_begin47        # >> Call Site 5 <<
	.uleb128 .Ltmp501-.Ltmp500              #   Call between .Ltmp500 and .Ltmp501
	.uleb128 .Ltmp502-.Lfunc_begin47        #     jumps to .Ltmp502
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp501-.Lfunc_begin47        # >> Call Site 6 <<
	.uleb128 .Ltmp503-.Ltmp501              #   Call between .Ltmp501 and .Ltmp503
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp503-.Lfunc_begin47        # >> Call Site 7 <<
	.uleb128 .Ltmp504-.Ltmp503              #   Call between .Ltmp503 and .Ltmp504
	.uleb128 .Ltmp505-.Lfunc_begin47        #     jumps to .Ltmp505
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp504-.Lfunc_begin47        # >> Call Site 8 <<
	.uleb128 .Ltmp497-.Ltmp504              #   Call between .Ltmp504 and .Ltmp497
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp497-.Lfunc_begin47        # >> Call Site 9 <<
	.uleb128 .Ltmp498-.Ltmp497              #   Call between .Ltmp497 and .Ltmp498
	.uleb128 .Ltmp499-.Lfunc_begin47        #     jumps to .Ltmp499
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp498-.Lfunc_begin47        # >> Call Site 10 <<
	.uleb128 .Lfunc_end117-.Ltmp498         #   Call between .Ltmp498 and .Lfunc_end117
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$s2, $a0, 1
	ld.d	$s1, $fp, 384
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	andi	$a0, $s2, 1
	st.d	$s1, $sp, 208
	st.b	$a0, $sp, 216
	ld.d	$a0, $fp, 280
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 224
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 240
	add.d	$a2, $s0, $a0
.Ltmp506:                               # EH_LABEL
	ori	$a3, $zero, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp507:                               # EH_LABEL
# %bb.1:                                # %.noexc
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB118_25
# %bb.2:
	ld.h	$a1, $sp, 192
	ld.b	$a2, $sp, 194
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $sp, 192
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $sp, 194
.Ltmp508:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp509:                               # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 40
	vst	$vr0, $sp, 56
.Ltmp510:                               # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp511:                               # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	addi.d	$a2, $sp, 192
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	st.d	$zero, $sp, 112
	ld.d	$a1, $sp, 136
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	vld	$vr0, $sp, 144
	st.d	$a1, $a0, 40
	vst	$vr1, $sp, 120
	ld.d	$a1, $sp, 160
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 136
	st.d	$a1, $a0, 64
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vst	$vr1, $sp, 168
	vld	$vr0, $a2, 48
	vld	$vr1, $a2, 32
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr0, $a0, 144
	vst	$vr1, $a0, 128
	vld	$vr0, $a2, 16
	vld	$vr1, $a2, 0
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 184
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 64
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 56
.Ltmp513:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp514:                               # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 72
	st.d	$a0, $sp, 80
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 88
	beq	$a1, $a2, .LBB118_7
# %bb.6:
	ld.d	$a0, $sp, 88
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 72
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB118_8
.LBB118_7:
.Ltmp515:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp516:                               # EH_LABEL
.LBB118_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 56
	beqz	$a3, .LBB118_10
# %bb.9:
.Ltmp521:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp522:                               # EH_LABEL
.LBB118_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 168
	beqz	$a0, .LBB118_12
# %bb.11:
	ld.d	$a1, $sp, 184
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB118_12:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 144
	beqz	$a0, .LBB118_14
# %bb.13:
	ld.d	$a1, $sp, 160
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB118_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 120
	ld.d	$fp, $sp, 128
	beq	$a0, $fp, .LBB118_20
# %bb.15:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB118_17
	.p2align	4, , 16
.LBB118_16:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB118_17 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB118_19
.LBB118_17:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB118_16
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB118_17 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB118_16
.LBB118_19:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 120
.LBB118_20:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB118_22
# %bb.21:
	ld.d	$a1, $sp, 136
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB118_22:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB118_24
# %bb.23:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB118_24:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev.exit
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB118_25:
.Ltmp524:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp525:                               # EH_LABEL
# %bb.26:                               # %.noexc6
.LBB118_27:
.Ltmp523:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB118_28:
.Ltmp512:                               # EH_LABEL
	b	.LBB118_33
.LBB118_29:
.Ltmp517:                               # EH_LABEL
	ld.d	$a3, $sp, 56
	move	$fp, $a0
	beqz	$a3, .LBB118_34
# %bb.30:
.Ltmp518:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp519:                               # EH_LABEL
	b	.LBB118_34
.LBB118_31:
.Ltmp520:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB118_32:
.Ltmp526:                               # EH_LABEL
.LBB118_33:
	move	$fp, $a0
.LBB118_34:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end118:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv, .Lfunc_end118-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb0EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table118:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase30-.Lttbaseref30
.Lttbaseref30:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Lfunc_begin48-.Lfunc_begin48  # >> Call Site 1 <<
	.uleb128 .Ltmp506-.Lfunc_begin48        #   Call between .Lfunc_begin48 and .Ltmp506
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp506-.Lfunc_begin48        # >> Call Site 2 <<
	.uleb128 .Ltmp509-.Ltmp506              #   Call between .Ltmp506 and .Ltmp509
	.uleb128 .Ltmp526-.Lfunc_begin48        #     jumps to .Ltmp526
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp510-.Lfunc_begin48        # >> Call Site 3 <<
	.uleb128 .Ltmp511-.Ltmp510              #   Call between .Ltmp510 and .Ltmp511
	.uleb128 .Ltmp512-.Lfunc_begin48        #     jumps to .Ltmp512
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp513-.Lfunc_begin48        # >> Call Site 4 <<
	.uleb128 .Ltmp516-.Ltmp513              #   Call between .Ltmp513 and .Ltmp516
	.uleb128 .Ltmp517-.Lfunc_begin48        #     jumps to .Ltmp517
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp521-.Lfunc_begin48        # >> Call Site 5 <<
	.uleb128 .Ltmp522-.Ltmp521              #   Call between .Ltmp521 and .Ltmp522
	.uleb128 .Ltmp523-.Lfunc_begin48        #     jumps to .Ltmp523
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp522-.Lfunc_begin48        # >> Call Site 6 <<
	.uleb128 .Ltmp524-.Ltmp522              #   Call between .Ltmp522 and .Ltmp524
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp524-.Lfunc_begin48        # >> Call Site 7 <<
	.uleb128 .Ltmp525-.Ltmp524              #   Call between .Ltmp524 and .Ltmp525
	.uleb128 .Ltmp526-.Lfunc_begin48        #     jumps to .Ltmp526
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp525-.Lfunc_begin48        # >> Call Site 8 <<
	.uleb128 .Ltmp518-.Ltmp525              #   Call between .Ltmp525 and .Ltmp518
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp518-.Lfunc_begin48        # >> Call Site 9 <<
	.uleb128 .Ltmp519-.Ltmp518              #   Call between .Ltmp518 and .Ltmp519
	.uleb128 .Ltmp520-.Lfunc_begin48        #     jumps to .Ltmp520
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp519-.Lfunc_begin48        # >> Call Site 10 <<
	.uleb128 .Lfunc_end118-.Ltmp519         #   Call between .Ltmp519 and .Lfunc_end118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end48:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 272
	ld.d	$a0, $a0, 392
	ld.bu	$a1, $s0, 0
	ld.d	$a0, $a0, 48
	alsl.d	$a0, $a1, $a0, 1
	ld.bu	$s2, $a0, 1
	ld.d	$s1, $fp, 384
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	andi	$a0, $s2, 1
	st.d	$s1, $sp, 208
	st.b	$a0, $sp, 216
	ld.d	$a0, $fp, 280
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 224
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 240
	add.d	$a2, $s0, $a0
.Ltmp527:                               # EH_LABEL
	ori	$a3, $zero, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
.Ltmp528:                               # EH_LABEL
# %bb.1:                                # %.noexc
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB119_11
# %bb.2:
	st.h	$a0, $sp, 192
	srli.d	$a0, $a0, 16
	st.b	$a0, $sp, 194
.Ltmp529:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp530:                               # EH_LABEL
# %bb.3:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 40
	vst	$vr0, $sp, 56
.Ltmp531:                               # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp532:                               # EH_LABEL
# %bb.4:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	addi.d	$a2, $sp, 192
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	st.d	$zero, $sp, 112
	ld.d	$a1, $sp, 136
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	vld	$vr0, $sp, 144
	st.d	$a1, $a0, 40
	vst	$vr1, $sp, 120
	ld.d	$a1, $sp, 160
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 136
	st.d	$a1, $a0, 64
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vst	$vr1, $sp, 168
	vld	$vr0, $a2, 48
	vld	$vr1, $a2, 32
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr0, $a0, 144
	vst	$vr1, $a0, 128
	vld	$vr0, $a2, 16
	vld	$vr1, $a2, 0
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 184
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 64
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 56
.Ltmp534:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp535:                               # EH_LABEL
# %bb.5:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 72
	st.d	$a0, $sp, 80
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 88
	beq	$a1, $a2, .LBB119_7
# %bb.6:
	ld.d	$a0, $sp, 88
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 72
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB119_8
.LBB119_7:
.Ltmp536:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp537:                               # EH_LABEL
.LBB119_8:                              # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 56
	beqz	$a3, .LBB119_10
# %bb.9:
.Ltmp542:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp543:                               # EH_LABEL
.LBB119_10:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB119_11:
.Ltmp545:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp546:                               # EH_LABEL
# %bb.12:                               # %.noexc6
.LBB119_13:
.Ltmp544:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB119_14:
.Ltmp533:                               # EH_LABEL
	b	.LBB119_19
.LBB119_15:
.Ltmp538:                               # EH_LABEL
	ld.d	$a3, $sp, 56
	move	$fp, $a0
	beqz	$a3, .LBB119_20
# %bb.16:
.Ltmp539:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 40
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp540:                               # EH_LABEL
	b	.LBB119_20
.LBB119_17:
.Ltmp541:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB119_18:
.Ltmp547:                               # EH_LABEL
.LBB119_19:
	move	$fp, $a0
.LBB119_20:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end119:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv, .Lfunc_end119-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE33_M_insert_character_class_matcherILb1ELb1EEEvv,comdat
	.p2align	2, 0x0
GCC_except_table119:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase31-.Lttbaseref31
.Lttbaseref31:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Lfunc_begin49-.Lfunc_begin49  # >> Call Site 1 <<
	.uleb128 .Ltmp527-.Lfunc_begin49        #   Call between .Lfunc_begin49 and .Ltmp527
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp527-.Lfunc_begin49        # >> Call Site 2 <<
	.uleb128 .Ltmp530-.Ltmp527              #   Call between .Ltmp527 and .Ltmp530
	.uleb128 .Ltmp547-.Lfunc_begin49        #     jumps to .Ltmp547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp531-.Lfunc_begin49        # >> Call Site 3 <<
	.uleb128 .Ltmp532-.Ltmp531              #   Call between .Ltmp531 and .Ltmp532
	.uleb128 .Ltmp533-.Lfunc_begin49        #     jumps to .Ltmp533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp534-.Lfunc_begin49        # >> Call Site 4 <<
	.uleb128 .Ltmp537-.Ltmp534              #   Call between .Ltmp534 and .Ltmp537
	.uleb128 .Ltmp538-.Lfunc_begin49        #     jumps to .Ltmp538
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp542-.Lfunc_begin49        # >> Call Site 5 <<
	.uleb128 .Ltmp543-.Ltmp542              #   Call between .Ltmp542 and .Ltmp543
	.uleb128 .Ltmp544-.Lfunc_begin49        #     jumps to .Ltmp544
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp543-.Lfunc_begin49        # >> Call Site 6 <<
	.uleb128 .Ltmp545-.Ltmp543              #   Call between .Ltmp543 and .Ltmp545
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp545-.Lfunc_begin49        # >> Call Site 7 <<
	.uleb128 .Ltmp546-.Ltmp545              #   Call between .Ltmp545 and .Ltmp546
	.uleb128 .Ltmp547-.Lfunc_begin49        #     jumps to .Ltmp547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp546-.Lfunc_begin49        # >> Call Site 8 <<
	.uleb128 .Ltmp539-.Ltmp546              #   Call between .Ltmp546 and .Ltmp539
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp539-.Lfunc_begin49        # >> Call Site 9 <<
	.uleb128 .Ltmp540-.Ltmp539              #   Call between .Ltmp539 and .Ltmp540
	.uleb128 .Ltmp541-.Lfunc_begin49        #     jumps to .Ltmp541
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp540-.Lfunc_begin49        # >> Call Site 10 <<
	.uleb128 .Lfunc_end119-.Ltmp540         #   Call between .Ltmp540 and .Lfunc_end119
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end49:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.w	$s1, $a0, 152
	ori	$a0, $zero, 10
	addi.d	$s0, $fp, 8
	bne	$s1, $a0, .LBB120_6
# %bb.1:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB120_14
# %bb.2:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB120_22
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB120_10
.LBB120_4:
	bnez	$a0, .LBB120_11
# %bb.5:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	beqz	$a1, .LBB120_12
	b	.LBB120_15
.LBB120_6:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a0, $zero, 9
	bne	$s1, $a0, .LBB120_17
# %bb.7:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB120_14
# %bb.8:
	ld.w	$a0, $fp, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB120_22
# %bb.9:
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB120_4
.LBB120_10:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.LBB120_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	bnez	$a1, .LBB120_15
.LBB120_12:
	bnez	$a0, .LBB120_18
# %bb.13:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb)
	jirl	$ra, $ra, 0
	b	.LBB120_20
.LBB120_14:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	beqz	$a1, .LBB120_12
.LBB120_15:
	bnez	$a0, .LBB120_19
# %bb.16:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb)
	jirl	$ra, $ra, 0
	b	.LBB120_20
.LBB120_17:
	move	$a0, $zero
	b	.LBB120_21
.LBB120_18:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb)
	jirl	$ra, $ra, 0
	b	.LBB120_20
.LBB120_19:
	addi.d	$a0, $s1, -10
	sltui	$a1, $a0, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb)
	jirl	$ra, $ra, 0
.LBB120_20:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit8
	ori	$a0, $zero, 1
.LBB120_21:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit8
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB120_22:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	ld.wu	$a0, $fp, 0
	andi	$a1, $a0, 1
	andi	$a0, $a0, 8
	beqz	$a1, .LBB120_12
	b	.LBB120_15
.Lfunc_end120:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv, .Lfunc_end120-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE21_M_bracket_expressionEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ori	$a0, $zero, 11
	st.w	$a0, $sp, 64
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 72
	addi.d	$fp, $sp, 80
	ld.d	$a0, $a1, 16
	ld.d	$a2, $a1, 24
	st.d	$zero, $sp, 128
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 112
	beqz	$a0, .LBB121_2
# %bb.1:
	vld	$vr1, $a1, 0
	addi.d	$a1, $a1, 16
	vst	$vr1, $sp, 112
	vst	$vr0, $a1, 0
.LBB121_2:
	vld	$vr1, $sp, 112
	vld	$vr2, $sp, 64
	vst	$vr1, $fp, 0
	st.d	$a0, $sp, 96
	st.d	$a2, $sp, 104
	vst	$vr2, $sp, 16
	st.d	$zero, $sp, 32
	vst	$vr0, $sp, 40
	st.d	$a2, $sp, 56
	beqz	$a0, .LBB121_4
# %bb.3:
	vld	$vr1, $fp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 32
	vst	$vr1, $a2, 0
	st.d	$a0, $sp, 48
	vst	$vr0, $a1, 0
.LBB121_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	ld.d	$a0, $s0, 64
	ld.d	$a1, $s0, 72
	addi.d	$s1, $s0, 56
	beq	$a0, $a1, .LBB121_9
# %bb.5:
	vld	$vr1, $sp, 48
	vst	$vr1, $a0, 32
	vld	$vr1, $sp, 32
	vst	$vr1, $a0, 16
	vld	$vr1, $sp, 16
	vst	$vr1, $a0, 0
	ld.w	$a1, $sp, 16
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB121_8
# %bb.6:
	st.d	$zero, $a0, 32
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 56
	ld.d	$a1, $sp, 48
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB121_8
# %bb.7:
	vld	$vr1, $sp, 32
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 48
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB121_8:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $s0, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $s0, 64
	b	.LBB121_11
.LBB121_9:
.Ltmp548:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp549:                               # EH_LABEL
# %bb.10:                               # %.noexc
	ld.d	$a0, $s0, 64
.LBB121_11:                             # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s1, 0
	sub.d	$s0, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$s0, $a0, .LBB121_19
# %bb.12:
	ld.w	$a0, $sp, 16
	ori	$s1, $zero, 11
	bne	$a0, $s1, .LBB121_15
# %bb.13:
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB121_15
# %bb.14:
	addi.d	$a0, $sp, 32
.Ltmp550:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp551:                               # EH_LABEL
.LBB121_15:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 64
	bne	$a0, $s1, .LBB121_18
# %bb.16:
	ld.d	$a3, $sp, 96
	beqz	$a3, .LBB121_18
# %bb.17:
.Ltmp553:                               # EH_LABEL
	ori	$a2, $zero, 3
	move	$a0, $fp
	move	$a1, $fp
	jirl	$ra, $a3, 0
.Ltmp554:                               # EH_LABEL
.LBB121_18:                             # %_ZNSt8__detail6_StateIcED2Ev.exit7
	bstrpick.d	$a0, $s0, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB121_19:
.Ltmp556:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp557:                               # EH_LABEL
# %bb.20:                               # %.noexc4
.LBB121_21:
.Ltmp555:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB121_22:
.Ltmp552:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB121_23:
.Ltmp558:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end121:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE, .Lfunc_end121-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE,comdat
	.p2align	2, 0x0
GCC_except_table121:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase32-.Lttbaseref32
.Lttbaseref32:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Ltmp548-.Lfunc_begin50        # >> Call Site 1 <<
	.uleb128 .Ltmp549-.Ltmp548              #   Call between .Ltmp548 and .Ltmp549
	.uleb128 .Ltmp558-.Lfunc_begin50        #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp550-.Lfunc_begin50        # >> Call Site 2 <<
	.uleb128 .Ltmp551-.Ltmp550              #   Call between .Ltmp550 and .Ltmp551
	.uleb128 .Ltmp552-.Lfunc_begin50        #     jumps to .Ltmp552
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp553-.Lfunc_begin50        # >> Call Site 3 <<
	.uleb128 .Ltmp554-.Ltmp553              #   Call between .Ltmp553 and .Ltmp554
	.uleb128 .Ltmp555-.Lfunc_begin50        #     jumps to .Ltmp555
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp556-.Lfunc_begin50        # >> Call Site 4 <<
	.uleb128 .Ltmp557-.Ltmp556              #   Call between .Ltmp556 and .Ltmp557
	.uleb128 .Ltmp558-.Lfunc_begin50        #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp557-.Lfunc_begin50        # >> Call Site 5 <<
	.uleb128 .Lfunc_end121-.Ltmp557         #   Call between .Ltmp557 and .Lfunc_end121
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase32:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.bu	$fp, $a1, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	dbar	20
	pcalau12i	$s0, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	beqz	$a0, .LBB122_2
.LBB122_1:                              # %_ZSt10__invoke_rIbRNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.bu	$a0, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB122_2:
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB122_1
# %bb.3:
	st.b	$zero, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB122_1
.Lfunc_end122:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end122-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB123_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB123_4
# %bb.2:
	bnez	$a2, .LBB123_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE)
.LBB123_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB123_5:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
.LBB123_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end123:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end123-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.bu	$fp, $a1, 0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	ld.b	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	dbar	20
	pcalau12i	$s0, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	beqz	$a0, .LBB124_2
.LBB124_1:                              # %_ZSt10__invoke_rIbRNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.bu	$a0, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB124_2:
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB124_1
# %bb.3:
	st.b	$zero, $s0, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB124_1
.Lfunc_end124:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end124-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB125_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB125_5
# %bb.2:
	bnez	$a2, .LBB125_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE)
	b	.LBB125_5
.LBB125_4:
	ld.d	$a1, $a1, 0
.LBB125_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB125_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end125:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end125-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc)
	jr	$t8
.Lfunc_end126:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end126-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB127_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB127_5
# %bb.2:
	bnez	$a2, .LBB127_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE)
	b	.LBB127_5
.LBB127_4:
	ld.d	$a1, $a1, 0
.LBB127_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB127_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end127:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end127-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
	.p2align	5
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	move	$fp, $a1
	dbar	20
	beqz	$a2, .LBB128_3
.LBB128_1:
	ld.d	$s0, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB128_6
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	ld.bu	$a1, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	andi	$a0, $a0, 255
	xor	$a0, $a0, $a1
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB128_3:
	pcalau12i	$a1, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB128_1
# %bb.4:
.Ltmp559:                               # EH_LABEL
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc)
	jirl	$ra, $ra, 0
.Ltmp560:                               # EH_LABEL
# %bb.5:
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	st.b	$a0, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB128_1
.LBB128_6:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB128_7:
.Ltmp561:                               # EH_LABEL
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_abort)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end128:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc, .Lfunc_end128-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,"aG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEc,comdat
	.p2align	2, 0x0
GCC_except_table128:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Lfunc_begin51-.Lfunc_begin51  # >> Call Site 1 <<
	.uleb128 .Ltmp559-.Lfunc_begin51        #   Call between .Lfunc_begin51 and .Ltmp559
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp559-.Lfunc_begin51        # >> Call Site 2 <<
	.uleb128 .Ltmp560-.Ltmp559              #   Call between .Ltmp559 and .Ltmp560
	.uleb128 .Ltmp561-.Lfunc_begin51        #     jumps to .Ltmp561
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp560-.Lfunc_begin51        # >> Call Site 3 <<
	.uleb128 .Lfunc_end128-.Ltmp560         #   Call between .Ltmp560 and .Lfunc_end128
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.p2align	5
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$s0, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB129_2
# %bb.1:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a2
.LBB129_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end129:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc, .Lfunc_end129-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc)
	jr	$t8
.Lfunc_end130:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end130-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB131_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB131_5
# %bb.2:
	bnez	$a2, .LBB131_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE)
	b	.LBB131_5
.LBB131_4:
	ld.d	$a1, $a1, 0
.LBB131_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB131_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end131:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end131-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
	.p2align	5
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a2, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	ld.b	$a2, $a2, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	move	$fp, $a1
	dbar	20
	beqz	$a2, .LBB132_3
.LBB132_1:
	ld.d	$s0, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB132_6
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	ld.bu	$a1, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	andi	$a0, $a0, 255
	xor	$a0, $a0, $a1
	sltu	$a0, $zero, $a0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB132_3:
	pcalau12i	$a1, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	addi.d	$a1, $a1, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	addi.w	$a1, $a1, 0
	beqz	$a1, .LBB132_1
# %bb.4:
.Ltmp562:                               # EH_LABEL
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc)
	jirl	$ra, $ra, 0
.Ltmp563:                               # EH_LABEL
# %bb.5:
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	st.b	$a0, $a1, %pc_lo12(_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB132_1
.LBB132_6:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB132_7:
.Ltmp564:                               # EH_LABEL
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul)
	pcaddu18i	$ra, %call36(__cxa_guard_abort)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end132:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc, .Lfunc_end132-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,"aG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEc,comdat
	.p2align	2, 0x0
GCC_except_table132:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp562-.Lfunc_begin52        #   Call between .Lfunc_begin52 and .Ltmp562
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp562-.Lfunc_begin52        # >> Call Site 2 <<
	.uleb128 .Ltmp563-.Ltmp562              #   Call between .Ltmp562 and .Ltmp563
	.uleb128 .Ltmp564-.Lfunc_begin52        #     jumps to .Ltmp564
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp563-.Lfunc_begin52        # >> Call Site 3 <<
	.uleb128 .Lfunc_end132-.Ltmp563         #   Call between .Ltmp563 and .Lfunc_end132
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.p2align	5
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$s0, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB133_2
# %bb.1:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a2
.LBB133_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end133:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc, .Lfunc_end133-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a0, $a1, 0
	addi.d	$a1, $a0, -10
	sltu	$a1, $zero, $a1
	addi.d	$a0, $a0, -13
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ret
.Lfunc_end134:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end134-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB135_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB135_4
# %bb.2:
	bnez	$a2, .LBB135_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE)
.LBB135_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB135_5:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
.LBB135_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end135:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end135-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a0, $a1, 0
	addi.d	$a1, $a0, -10
	sltu	$a1, $zero, $a1
	addi.d	$a0, $a0, -13
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ret
.Lfunc_end136:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end136-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB137_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB137_5
# %bb.2:
	bnez	$a2, .LBB137_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE)
	b	.LBB137_5
.LBB137_4:
	ld.d	$a1, $a1, 0
.LBB137_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB137_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end137:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end137-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	move	$a2, $zero
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE)
	jr	$t8
.Lfunc_end138:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end138-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB139_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB139_5
# %bb.2:
	bnez	$a2, .LBB139_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE)
	b	.LBB139_5
.LBB139_4:
	ld.d	$a1, $a1, 0
.LBB139_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB139_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end139:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end139-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.p2align	5
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ld.d	$s1, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB140_4
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB140_4
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit6
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 10
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$s0, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB140_4
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit8
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 13
	jirl	$ra, $a2, 0
	xor	$a1, $fp, $s0
	sltu	$a1, $zero, $a1
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB140_4:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end140:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE, .Lfunc_end140-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.b	$a1, $a1, 0
	move	$a2, $zero
	pcaddu18i	$t8, %call36(_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE)
	jr	$t8
.Lfunc_end141:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end141-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB142_4
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB142_5
# %bb.2:
	bnez	$a2, .LBB142_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE)
	b	.LBB142_5
.LBB142_4:
	ld.d	$a1, $a1, 0
.LBB142_5:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB142_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end142:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end142-_ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE,"axG",@progbits,_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE,comdat
	.hidden	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE # -- Begin function _ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.weak	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.p2align	5
	.type	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE,@function
_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE: # @_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ld.d	$s1, $a0, 0
	move	$fp, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB143_4
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB143_4
# %bb.2:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit6
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 10
	jirl	$ra, $a2, 0
	ld.d	$s1, $s0, 0
	move	$s0, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB143_4
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit8
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	ori	$a1, $zero, 13
	jirl	$ra, $a2, 0
	xor	$a1, $fp, $s0
	sltu	$a1, $zero, $a1
	xor	$a0, $fp, $a0
	sltu	$a0, $zero, $a0
	and	$a0, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB143_4:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end143:
	.size	_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE, .Lfunc_end143-_ZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EE8_M_applyEcSt17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.bu	$a0, $a0, 1
	xor	$a0, $a0, $a1
	sltui	$a0, $a0, 1
	ret
.Lfunc_end144:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end144-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB145_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB145_4
# %bb.2:
	bnez	$a2, .LBB145_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
.LBB145_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB145_5:
	ld.h	$a1, $a1, 0
	st.h	$a1, $a0, 0
.LBB145_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end145:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end145-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.bu	$a0, $a0, 8
	xor	$a0, $a0, $a1
	sltui	$a0, $a0, 1
	ret
.Lfunc_end146:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end146-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB147_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB147_4
# %bb.2:
	bnez	$a2, .LBB147_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
.LBB147_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB147_5:
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
.LBB147_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end147:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end147-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.b	$fp, $a1, 0
	ld.bu	$s0, $a0, 8
	ld.d	$s1, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB148_2
# %bb.1:                                # %_ZSt10__invoke_rIbRNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB148_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end148:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end148-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB149_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB149_4
# %bb.2:
	bnez	$a2, .LBB149_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
.LBB149_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB149_5:
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
.LBB149_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end149:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end149-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.b	$fp, $a1, 0
	ld.bu	$s0, $a0, 8
	ld.d	$s1, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB150_2
# %bb.1:                                # %_ZSt10__invoke_rIbRNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEJcEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES8_E4typeEOS9_DpOSA_.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB150_2:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end150:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end150-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	ori	$a3, $zero, 2
	beq	$a2, $a3, .LBB151_5
# %bb.1:
	ori	$a3, $zero, 1
	beq	$a2, $a3, .LBB151_4
# %bb.2:
	bnez	$a2, .LBB151_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
.LBB151_4:
	st.d	$a1, $a0, 0
	move	$a0, $zero
	ret
.LBB151_5:
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
.LBB151_6:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ret
.Lfunc_end151:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end151-_ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE5valueEci,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE5valueEci,comdat
	.weak	_ZNKSt7__cxx1112regex_traitsIcE5valueEci # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE5valueEci
	.p2align	5
	.type	_ZNKSt7__cxx1112regex_traitsIcE5valueEci,@function
_ZNKSt7__cxx1112regex_traitsIcE5valueEci: # @_ZNKSt7__cxx1112regex_traitsIcE5valueEci
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	addi.d	$sp, $sp, -464
	.cfi_def_cfa_offset 464
	st.d	$ra, $sp, 456                   # 8-byte Folded Spill
	st.d	$fp, $sp, 448                   # 8-byte Folded Spill
	st.d	$s0, $sp, 440                   # 8-byte Folded Spill
	st.d	$s1, $sp, 432                   # 8-byte Folded Spill
	st.d	$s2, $sp, 424                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$a2, $a1
	addi.d	$s0, $sp, 24
	st.d	$s0, $sp, 8
.Ltmp565:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp566:                               # EH_LABEL
# %bb.1:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_.exit
.Ltmp568:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	ori	$a2, $zero, 8
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode)
	jirl	$ra, $ra, 0
.Ltmp569:                               # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB152_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB152_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ori	$a0, $zero, 8
	beq	$fp, $a0, .LBB152_7
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ori	$a0, $zero, 16
	bne	$fp, $a0, .LBB152_9
# %bb.6:
	ori	$a0, $zero, 8
	b	.LBB152_8
.LBB152_7:
	ori	$a0, $zero, 64
.LBB152_8:                              # %.sink.split
	ld.d	$a1, $sp, 40
	ld.d	$a1, $a1, -24
	addi.d	$a2, $sp, 40
	add.d	$a1, $a2, $a1
	ld.wu	$a2, $a1, 24
	addi.w	$a3, $zero, -75
	lu32i.d	$a3, 0
	and	$a2, $a2, $a3
	or	$a0, $a2, $a0
	st.w	$a0, $a1, 24
.LBB152_9:
.Ltmp571:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	addi.d	$s2, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSi10_M_extractIlEERSiRT_)
	jirl	$ra, $ra, 0
.Ltmp572:                               # EH_LABEL
# %bb.10:
	ld.d	$a0, $sp, 40
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.w	$s1, $a0, 32
	ld.w	$fp, $sp, 8
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZTTNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $s0, 0
	st.d	$a0, $sp, 40
	ld.d	$a1, $s0, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s2
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a1, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a1, 16
	addi.d	$a2, $sp, 144
	st.d	$a1, $sp, 56
	beq	$a0, $a2, .LBB152_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB152_12:                             # %_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	andi	$a0, $s1, 5
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $fp, $a0
	or	$fp, $a0, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 56
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 8
	st.d	$a0, $sp, 40
	ld.d	$a1, $s0, 16
	ld.d	$a0, $a0, -24
	addi.d	$a2, $sp, 40
	stx.d	$a1, $a0, $a2
	st.d	$zero, $sp, 48
	addi.d	$a0, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$s2, $sp, 424                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 440                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 448                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 456                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 464
	ret
.LBB152_13:
.Ltmp573:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB152_14:
.Ltmp570:                               # EH_LABEL
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	bne	$a2, $s0, .LBB152_16
# %bb.15:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB152_16:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i11
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB152_17:
.Ltmp567:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end152:
	.size	_ZNKSt7__cxx1112regex_traitsIcE5valueEci, .Lfunc_end152-_ZNKSt7__cxx1112regex_traitsIcE5valueEci
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE5valueEci,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE5valueEci,comdat
	.p2align	2, 0x0
GCC_except_table152:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Ltmp565-.Lfunc_begin53        # >> Call Site 1 <<
	.uleb128 .Ltmp566-.Ltmp565              #   Call between .Ltmp565 and .Ltmp566
	.uleb128 .Ltmp567-.Lfunc_begin53        #     jumps to .Ltmp567
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp568-.Lfunc_begin53        # >> Call Site 2 <<
	.uleb128 .Ltmp569-.Ltmp568              #   Call between .Ltmp568 and .Ltmp569
	.uleb128 .Ltmp570-.Lfunc_begin53        #     jumps to .Ltmp570
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp569-.Lfunc_begin53        # >> Call Site 3 <<
	.uleb128 .Ltmp571-.Ltmp569              #   Call between .Ltmp569 and .Ltmp571
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp571-.Lfunc_begin53        # >> Call Site 4 <<
	.uleb128 .Ltmp572-.Ltmp571              #   Call between .Ltmp571 and .Ltmp572
	.uleb128 .Ltmp573-.Lfunc_begin53        #     jumps to .Ltmp573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp572-.Lfunc_begin53        # >> Call Site 5 <<
	.uleb128 .Lfunc_end152-.Ltmp572         #   Call between .Ltmp572 and .Lfunc_end152
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a3, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 104
	move	$s0, $a2
	add.d	$a2, $a3, $a1
	move	$a1, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB153_17
# %bb.1:
	beqz	$s0, .LBB153_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB153_5
# %bb.3:
	bstrpick.d	$a0, $a0, 23, 0
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB153_16
.LBB153_4:
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $fp, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB153_16
.LBB153_5:
	move	$s5, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB153_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	bstrpick.d	$a0, $s5, 23, 0
	stx.w	$a0, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB153_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 28
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB153_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 32
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB153_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 3
	slli.d	$a2, $a0, 3
	slli.d	$a0, $a0, 5
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 16
	addi.d	$a4, $s2, 16
	move	$a5, $a2
	.p2align	4, , 16
.LBB153_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a3, -16
	vld	$vr1, $a3, 0
	vst	$vr0, $a4, -16
	vst	$vr1, $a4, 0
	addi.d	$a3, $a3, 32
	addi.d	$a5, $a5, -8
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB153_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB153_13
	.p2align	4, , 16
.LBB153_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB153_12
.LBB153_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB153_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB153_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB153_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB153_17:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB153_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end153:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end153-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB154_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB154_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB154_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB154_8
# %bb.4:                                #   in Loop: Header=BB154_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB154_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB154_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB154_8
.LBB154_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB154_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 120
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB154_10
	.p2align	4, , 16
.LBB154_9:                              #   in Loop: Header=BB154_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB154_12
.LBB154_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 112
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB154_9
# %bb.11:                               #   in Loop: Header=BB154_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB154_10
.LBB154_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB154_13:                             #   in Loop: Header=BB154_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB154_16
.LBB154_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB154_13
# %bb.15:                               #   in Loop: Header=BB154_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB154_13
.LBB154_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB154_7
	b	.LBB154_8
.Lfunc_end154:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv, .Lfunc_end154-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB155_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB155_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB155_4
# %bb.3:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB155_4:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB155_10
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB155_7
	.p2align	4, , 16
.LBB155_6:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB155_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB155_9
.LBB155_7:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB155_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB155_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB155_6
.LBB155_9:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB155_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB155_12
# %bb.11:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB155_12:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB155_14
# %bb.13:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB155_14:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end155:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev, .Lfunc_end155-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,comdat
	.weak	_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b
	.p2align	5
	.type	_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,@function
_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b: # @_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB156_55
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 32
	st.d	$s5, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $sp, 32
	beq	$s1, $s0, .LBB156_18
# %bb.2:                                # %.lr.ph
	addi.d	$s6, $s2, 313
	ori	$s7, $zero, 15
	b	.LBB156_5
	.p2align	4, , 16
.LBB156_3:                              # %.noexc45
                                        #   in Loop: Header=BB156_5 Depth=1
	ld.d	$a0, $sp, 16
.LBB156_4:                              #   in Loop: Header=BB156_5 Depth=1
	stx.b	$s3, $a0, $s4
	ld.d	$a0, $sp, 16
	addi.d	$a1, $s4, 1
	st.d	$a1, $sp, 24
	addi.d	$s1, $s1, 1
	stx.b	$zero, $a0, $a1
	beq	$s1, $s0, .LBB156_13
.LBB156_5:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ld.b	$a1, $s1, 0
	ld.d	$a2, $a0, 32
.Ltmp574:                               # EH_LABEL
	move	$a0, $s2
	jirl	$ra, $a2, 0
	move	$a1, $a0
.Ltmp575:                               # EH_LABEL
# %bb.6:                                # %_ZNKSt5ctypeIcE7tolowerEc.exit
                                        #   in Loop: Header=BB156_5 Depth=1
	andi	$s4, $a1, 255
	ldx.bu	$s3, $s6, $s4
	bnez	$s3, .LBB156_11
# %bb.7:                                #   in Loop: Header=BB156_5 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 64
.Ltmp576:                               # EH_LABEL
	move	$a0, $s2
	move	$a2, $zero
	jirl	$ra, $a3, 0
.Ltmp577:                               # EH_LABEL
# %bb.8:                                # %.noexc
                                        #   in Loop: Header=BB156_5 Depth=1
	move	$s3, $a0
	beqz	$a0, .LBB156_10
# %bb.9:                                #   in Loop: Header=BB156_5 Depth=1
	stx.b	$s3, $s6, $s4
	b	.LBB156_11
.LBB156_10:                             #   in Loop: Header=BB156_5 Depth=1
	move	$s3, $zero
	.p2align	4, , 16
.LBB156_11:                             # %_ZNKSt5ctypeIcE6narrowEcc.exit
                                        #   in Loop: Header=BB156_5 Depth=1
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 32
	ld.d	$s4, $sp, 24
	xor	$a2, $a0, $s5
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s7, $a2
	or	$a1, $a2, $a1
	bltu	$s4, $a1, .LBB156_4
# %bb.12:                               #   in Loop: Header=BB156_5 Depth=1
.Ltmp578:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 1
	move	$a1, $s4
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp579:                               # EH_LABEL
	b	.LBB156_3
.LBB156_13:                             # %.preheader
	ld.d	$s1, $sp, 24
	ld.d	$s0, $sp, 16
	ori	$a0, $zero, 1
	beq	$s1, $a0, .LBB156_31
# %bb.14:                               # %.preheader
	ori	$a0, $zero, 5
	beq	$s1, $a0, .LBB156_19
# %bb.15:                               # %.preheader
	ori	$a0, $zero, 6
	bne	$s1, $a0, .LBB156_34
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.14
	pcalau12i	$a0, %pc_hi20(.L.str.45)
	addi.d	$a1, $a0, %pc_lo12(.L.str.45)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB156_34
# %bb.17:
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11+224)
	addi.d	$a0, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11+224)
	b	.LBB156_48
.LBB156_18:
	move	$s2, $zero
	move	$s1, $zero
	move	$fp, $zero
	b	.LBB156_54
.LBB156_19:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.3
	pcalau12i	$a0, %pc_hi20(.L.str.34)
	addi.d	$a1, $a0, %pc_lo12(.L.str.34)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	addi.d	$s2, $a1, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	beqz	$a0, .LBB156_35
# %bb.20:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.4
	pcalau12i	$a0, %pc_hi20(.L.str.35)
	addi.d	$a1, $a0, %pc_lo12(.L.str.35)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_37
# %bb.21:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.5
	pcalau12i	$a0, %pc_hi20(.L.str.36)
	addi.d	$a1, $a0, %pc_lo12(.L.str.36)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_39
# %bb.22:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.6
	pcalau12i	$a0, %pc_hi20(.L.str.37)
	addi.d	$a1, $a0, %pc_lo12(.L.str.37)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_41
# %bb.23:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.7
	pcalau12i	$a0, %pc_hi20(.L.str.38)
	addi.d	$a1, $a0, %pc_lo12(.L.str.38)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_42
# %bb.24:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.8
	pcalau12i	$a0, %pc_hi20(.L.str.39)
	addi.d	$a1, $a0, %pc_lo12(.L.str.39)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_43
# %bb.25:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.9
	pcalau12i	$a0, %pc_hi20(.L.str.40)
	addi.d	$a1, $a0, %pc_lo12(.L.str.40)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_44
# %bb.26:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.10
	pcalau12i	$a0, %pc_hi20(.L.str.41)
	addi.d	$a1, $a0, %pc_lo12(.L.str.41)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_45
# %bb.27:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.11
	pcalau12i	$a0, %pc_hi20(.L.str.42)
	addi.d	$a1, $a0, %pc_lo12(.L.str.42)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_46
# %bb.28:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.12
	pcalau12i	$a0, %pc_hi20(.L.str.43)
	addi.d	$a1, $a0, %pc_lo12(.L.str.43)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_47
# %bb.29:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.13
	pcalau12i	$a0, %pc_hi20(.L.str.44)
	addi.d	$a1, $a0, %pc_lo12(.L.str.44)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB156_34
# %bb.30:
	addi.d	$a0, $s2, 208
	b	.LBB156_48
.LBB156_31:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	pcalau12i	$a0, %pc_hi20(.L.str.31)
	addi.d	$a1, $a0, %pc_lo12(.L.str.31)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_36
# %bb.32:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.1
	pcalau12i	$a0, %pc_hi20(.L.str.32)
	addi.d	$a1, $a0, %pc_lo12(.L.str.32)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	addi.d	$s2, $a1, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	beqz	$a0, .LBB156_38
# %bb.33:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.2
	pcalau12i	$a0, %pc_hi20(.L.str.33)
	addi.d	$a1, $a0, %pc_lo12(.L.str.33)
	move	$a0, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB156_40
.LBB156_34:
	move	$fp, $zero
	move	$s1, $zero
	move	$s2, $zero
	b	.LBB156_52
.LBB156_35:
	addi.d	$a0, $s2, 48
	b	.LBB156_48
.LBB156_36:
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	addi.d	$a0, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11)
	b	.LBB156_48
.LBB156_37:
	addi.d	$a0, $s2, 64
	b	.LBB156_48
.LBB156_38:
	addi.d	$a0, $s2, 16
	b	.LBB156_48
.LBB156_39:
	addi.d	$a0, $s2, 80
	b	.LBB156_48
.LBB156_40:
	addi.d	$a0, $s2, 32
	b	.LBB156_48
.LBB156_41:
	addi.d	$a0, $s2, 96
	b	.LBB156_48
.LBB156_42:
	addi.d	$a0, $s2, 112
	b	.LBB156_48
.LBB156_43:
	addi.d	$a0, $s2, 128
	b	.LBB156_48
.LBB156_44:
	addi.d	$a0, $s2, 144
	b	.LBB156_48
.LBB156_45:
	addi.d	$a0, $s2, 160
	b	.LBB156_48
.LBB156_46:
	addi.d	$a0, $s2, 176
	b	.LBB156_48
.LBB156_47:
	addi.d	$a0, $s2, 192
.LBB156_48:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	beqz	$fp, .LBB156_51
# %bb.49:
	ld.hu	$a1, $a0, 8
	andi	$a1, $a1, 768
	beqz	$a1, .LBB156_51
# %bb.50:
	move	$s1, $zero
	move	$s2, $zero
	ori	$fp, $zero, 1024
	b	.LBB156_52
.LBB156_51:                             # %.critedge
	ld.wu	$a0, $a0, 8
	lu12i.w	$a1, -4096
	lu32i.d	$a1, 0
	and	$s2, $a0, $a1
	lu12i.w	$a1, 4080
	and	$s1, $a0, $a1
	bstrpick.d	$fp, $a0, 15, 0
.LBB156_52:                             # %.critedge44
	beq	$s0, $s5, .LBB156_54
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB156_54:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	or	$a0, $s1, $fp
	or	$a0, $a0, $s2
	bstrpick.d	$a0, $a0, 31, 0
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB156_55:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB156_56:
.Ltmp580:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s5, .LBB156_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i46
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB156_58:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end156:
	.size	_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b, .Lfunc_end156-_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b,comdat
	.p2align	2, 0x0
GCC_except_table156:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54  # >> Call Site 1 <<
	.uleb128 .Ltmp574-.Lfunc_begin54        #   Call between .Lfunc_begin54 and .Ltmp574
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp574-.Lfunc_begin54        # >> Call Site 2 <<
	.uleb128 .Ltmp579-.Ltmp574              #   Call between .Ltmp574 and .Ltmp579
	.uleb128 .Ltmp580-.Lfunc_begin54        #     jumps to .Ltmp580
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp579-.Lfunc_begin54        # >> Call Site 3 <<
	.uleb128 .Lfunc_end156-.Ltmp579         #   Call between .Ltmp579 and .Lfunc_end156
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_,"axG",@progbits,_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_,comdat
	.hidden	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ # -- Begin function _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.weak	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.p2align	5
	.type	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_,@function
_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_: # @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	sub.d	$a0, $a1, $a0
	ori	$a3, $zero, 17
	blt	$a0, $a3, .LBB157_35
# %bb.1:                                # %.lr.ph
	move	$s0, $a2
	addi.d	$s2, $fp, 1
	sub.d	$s3, $zero, $fp
	ori	$s4, $zero, 16
	b	.LBB157_3
	.p2align	4, , 16
.LBB157_2:                              # %_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_.exit
                                        #   in Loop: Header=BB157_3 Depth=1
	move	$a0, $s1
	move	$a2, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	add.d	$a0, $s3, $s1
	move	$a1, $s1
	bge	$s4, $a0, .LBB157_35
.LBB157_3:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB157_16 Depth 2
                                        #       Child Loop BB157_17 Depth 3
                                        #       Child Loop BB157_19 Depth 3
	beqz	$s0, .LBB157_22
# %bb.4:                                #   in Loop: Header=BB157_3 Depth=1
	srli.d	$a0, $a0, 1
	ld.b	$a3, $fp, 1
	ldx.b	$a4, $fp, $a0
	ld.b	$a2, $a1, -1
	bge	$a3, $a4, .LBB157_7
# %bb.5:                                #   in Loop: Header=BB157_3 Depth=1
	bge	$a4, $a2, .LBB157_9
# %bb.6:                                #   in Loop: Header=BB157_3 Depth=1
	ld.b	$a2, $fp, 0
	st.b	$a4, $fp, 0
	stx.b	$a2, $fp, $a0
	b	.LBB157_15
	.p2align	4, , 16
.LBB157_7:                              #   in Loop: Header=BB157_3 Depth=1
	bge	$a3, $a2, .LBB157_12
# %bb.8:                                #   in Loop: Header=BB157_3 Depth=1
	ld.b	$a0, $fp, 0
	b	.LBB157_11
	.p2align	4, , 16
.LBB157_9:                              #   in Loop: Header=BB157_3 Depth=1
	ld.bu	$a0, $fp, 0
	bge	$a3, $a2, .LBB157_11
# %bb.10:                               #   in Loop: Header=BB157_3 Depth=1
	st.b	$a2, $fp, 0
	st.b	$a0, $a1, -1
	b	.LBB157_15
	.p2align	4, , 16
.LBB157_11:                             #   in Loop: Header=BB157_3 Depth=1
	st.b	$a3, $fp, 0
	st.b	$a0, $fp, 1
	b	.LBB157_15
	.p2align	4, , 16
.LBB157_12:                             #   in Loop: Header=BB157_3 Depth=1
	ld.bu	$a3, $fp, 0
	bge	$a4, $a2, .LBB157_14
# %bb.13:                               #   in Loop: Header=BB157_3 Depth=1
	st.b	$a2, $fp, 0
	st.b	$a3, $a1, -1
	b	.LBB157_15
.LBB157_14:                             #   in Loop: Header=BB157_3 Depth=1
	st.b	$a4, $fp, 0
	stx.b	$a3, $fp, $a0
	.p2align	4, , 16
.LBB157_15:                             # %_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_.exit.i.preheader
                                        #   in Loop: Header=BB157_3 Depth=1
	addi.d	$s0, $s0, -1
	move	$a2, $a1
	move	$a0, $s2
	.p2align	4, , 16
.LBB157_16:                             # %_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_.exit.i
                                        #   Parent Loop BB157_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB157_17 Depth 3
                                        #       Child Loop BB157_19 Depth 3
	ld.b	$a3, $fp, 0
	addi.d	$s1, $a0, -1
	.p2align	4, , 16
.LBB157_17:                             #   Parent Loop BB157_3 Depth=1
                                        #     Parent Loop BB157_16 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.b	$a4, $a0, 0
	addi.d	$a0, $a0, 1
	addi.d	$s1, $s1, 1
	blt	$a4, $a3, .LBB157_17
# %bb.18:                               # %.preheader.i.i.preheader
                                        #   in Loop: Header=BB157_16 Depth=2
	addi.d	$a5, $a0, -1
	.p2align	4, , 16
.LBB157_19:                             # %.preheader.i.i
                                        #   Parent Loop BB157_3 Depth=1
                                        #     Parent Loop BB157_16 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.b	$a6, $a2, -1
	addi.d	$a2, $a2, -1
	blt	$a3, $a6, .LBB157_19
# %bb.20:                               #   in Loop: Header=BB157_16 Depth=2
	bgeu	$a5, $a2, .LBB157_2
# %bb.21:                               #   in Loop: Header=BB157_16 Depth=2
	st.b	$a6, $a5, 0
	st.b	$a4, $a2, 0
	b	.LBB157_16
.LBB157_22:                             # %.lr.ph.preheader.i.i
	move	$a0, $fp
	move	$s0, $a1
	move	$a2, $a1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 3
	ori	$a1, $zero, 1
	b	.LBB157_25
	.p2align	4, , 16
.LBB157_23:                             #   in Loop: Header=BB157_25 Depth=1
	move	$a4, $zero
.LBB157_24:                             # %_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_RT0_.exit.i.i
                                        #   in Loop: Header=BB157_25 Depth=1
	stx.b	$a2, $fp, $a4
	bge	$a1, $a3, .LBB157_35
.LBB157_25:                             # %.lr.ph.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB157_27 Depth 2
                                        #     Child Loop BB157_33 Depth 2
	move	$a4, $s0
	ld.b	$a5, $fp, 0
	ld.b	$a2, $s0, -1
	addi.d	$s0, $s0, -1
	sub.d	$a3, $s0, $fp
	st.b	$a5, $a4, -1
	blt	$a3, $a0, .LBB157_29
# %bb.26:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB157_25 Depth=1
	move	$a5, $zero
	addi.d	$a4, $a3, -1
	srli.d	$a6, $a4, 63
	add.d	$a4, $a4, $a6
	srai.d	$a6, $a4, 1
	.p2align	4, , 16
.LBB157_27:                             # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB157_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	slli.d	$a4, $a5, 1
	addi.d	$a7, $a4, 2
	addi.d	$a4, $a4, 1
	ldx.b	$t0, $fp, $a7
	ldx.b	$t1, $fp, $a4
	slt	$t0, $t0, $t1
	masknez	$a7, $a7, $t0
	maskeqz	$a4, $a4, $t0
	or	$a4, $a4, $a7
	ldx.b	$a7, $fp, $a4
	stx.b	$a7, $fp, $a5
	move	$a5, $a4
	blt	$a4, $a6, .LBB157_27
# %bb.28:                               # %._crit_edge.i.i.i.i
                                        #   in Loop: Header=BB157_25 Depth=1
	andi	$a5, $a3, 1
	beqz	$a5, .LBB157_30
	b	.LBB157_32
	.p2align	4, , 16
.LBB157_29:                             #   in Loop: Header=BB157_25 Depth=1
	move	$a4, $zero
	andi	$a5, $a3, 1
	bnez	$a5, .LBB157_32
.LBB157_30:                             #   in Loop: Header=BB157_25 Depth=1
	addi.d	$a5, $a3, -2
	srai.d	$a5, $a5, 1
	bne	$a4, $a5, .LBB157_32
# %bb.31:                               # %.thread.i.i.i
                                        #   in Loop: Header=BB157_25 Depth=1
	slli.d	$a5, $a4, 1
	addi.d	$a5, $a5, 1
	ldx.b	$a6, $fp, $a5
	stx.b	$a6, $fp, $a4
	move	$a4, $a5
	b	.LBB157_33
	.p2align	4, , 16
.LBB157_32:                             #   in Loop: Header=BB157_25 Depth=1
	beqz	$a4, .LBB157_23
	.p2align	4, , 16
.LBB157_33:                             # %.lr.ph.i.i.i.i.i
                                        #   Parent Loop BB157_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a5, $a4, -1
	srli.d	$a6, $a5, 1
	ldx.b	$a7, $fp, $a6
	bge	$a7, $a2, .LBB157_24
# %bb.34:                               #   in Loop: Header=BB157_33 Depth=2
	stx.b	$a7, $fp, $a4
	move	$a4, $a6
	bltu	$a1, $a5, .LBB157_33
	b	.LBB157_23
.LBB157_35:                             # %_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_.exit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end157:
	.size	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_, .Lfunc_end157-_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_,"axG",@progbits,_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_,comdat
	.hidden	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ # -- Begin function _ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.weak	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.p2align	5
	.type	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_,@function
_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_: # @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a1
	move	$s0, $a0
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 17
	blt	$a0, $a1, .LBB158_7
# %bb.1:
	addi.d	$s1, $s0, 16
	beqz	$zero, .LBB158_20
.LBB158_2:                              # %_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_.exit
	bne	$fp, $s1, .LBB158_4
	b	.LBB158_19
	.p2align	4, , 16
.LBB158_3:                              # %_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops14_Val_less_iterEEvT_T0_.exit.i
                                        #   in Loop: Header=BB158_4 Depth=1
	addi.d	$s1, $s1, 1
	st.b	$a0, $a1, 0
	beq	$s1, $fp, .LBB158_19
.LBB158_4:                              # %.lr.ph.i10
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB158_6 Depth 2
	ld.b	$a0, $s1, 0
	ld.b	$a2, $s1, -1
	move	$a1, $s1
	bge	$a0, $a2, .LBB158_3
# %bb.5:                                # %.lr.ph.i.i12.preheader
                                        #   in Loop: Header=BB158_4 Depth=1
	move	$a1, $s1
	.p2align	4, , 16
.LBB158_6:                              # %.lr.ph.i.i12
                                        #   Parent Loop BB158_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	st.b	$a2, $a1, 0
	ld.b	$a2, $a1, -2
	addi.d	$a1, $a1, -1
	blt	$a0, $a2, .LBB158_6
	b	.LBB158_3
.LBB158_7:
	beq	$fp, $s0, .LBB158_19
# %bb.8:
	addi.d	$a0, $s0, 1
	beq	$a0, $fp, .LBB158_19
# %bb.9:                                # %.lr.ph.i19.preheader
	ori	$s1, $zero, 2
	ori	$s2, $zero, 1
	move	$s3, $s0
	b	.LBB158_11
	.p2align	4, , 16
.LBB158_10:                             # %_ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_.exit.i22
                                        #   in Loop: Header=BB158_11 Depth=1
	addi.d	$a0, $s3, 1
	st.b	$s4, $a1, 0
	beq	$a0, $fp, .LBB158_19
.LBB158_11:                             # %.lr.ph.i19
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB158_16 Depth 2
	move	$a1, $s3
	move	$s3, $a0
	ld.b	$s4, $a0, 0
	ld.b	$a3, $s0, 0
	bge	$s4, $a3, .LBB158_14
# %bb.12:                               # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.i.i32
                                        #   in Loop: Header=BB158_11 Depth=1
	sub.d	$a2, $s3, $s0
	sub.d	$a0, $a1, $a2
	addi.d	$a0, $a0, 2
	move	$a1, $s0
	blt	$a2, $s1, .LBB158_17
# %bb.13:                               #   in Loop: Header=BB158_11 Depth=1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	b	.LBB158_10
	.p2align	4, , 16
.LBB158_14:                             #   in Loop: Header=BB158_11 Depth=1
	ld.b	$a0, $a1, 0
	move	$a1, $s3
	bge	$s4, $a0, .LBB158_10
# %bb.15:                               # %.lr.ph.i.i26.preheader
                                        #   in Loop: Header=BB158_11 Depth=1
	move	$a1, $s3
	.p2align	4, , 16
.LBB158_16:                             # %.lr.ph.i.i26
                                        #   Parent Loop BB158_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	st.b	$a0, $a1, 0
	ld.b	$a0, $a1, -2
	addi.d	$a1, $a1, -1
	blt	$s4, $a0, .LBB158_16
	b	.LBB158_10
.LBB158_17:                             # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i33
                                        #   in Loop: Header=BB158_11 Depth=1
	bne	$a2, $s2, .LBB158_10
# %bb.18:                               #   in Loop: Header=BB158_11 Depth=1
	st.b	$a3, $a0, 0
	move	$a1, $s0
	b	.LBB158_10
.LBB158_19:                             # %_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_.exit
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB158_20:                             # %.lr.ph.i.preheader
	addi.d	$s2, $s0, 1
	ori	$s3, $zero, 1
	ori	$s4, $zero, 2
	ori	$s5, $zero, 16
	ori	$s6, $zero, 1
	move	$s7, $s0
	b	.LBB158_22
	.p2align	4, , 16
.LBB158_21:                             # %_ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_.exit.i
                                        #   in Loop: Header=BB158_22 Depth=1
	st.b	$s8, $a1, 0
	addi.d	$s6, $s6, 1
	addi.d	$s2, $s2, 1
	beq	$s6, $s5, .LBB158_2
.LBB158_22:                             # %.lr.ph.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB158_27 Depth 2
	ldx.b	$s8, $s0, $s6
	ld.b	$a3, $s0, 0
	move	$a0, $s7
	add.d	$s7, $s0, $s6
	bge	$s8, $a3, .LBB158_25
# %bb.23:                               # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        #   in Loop: Header=BB158_22 Depth=1
	sub.d	$a2, $s7, $s0
	sub.d	$a0, $a0, $a2
	addi.d	$a0, $a0, 2
	move	$a1, $s0
	blt	$a2, $s4, .LBB158_28
# %bb.24:                               #   in Loop: Header=BB158_22 Depth=1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	b	.LBB158_21
	.p2align	4, , 16
.LBB158_25:                             #   in Loop: Header=BB158_22 Depth=1
	ld.b	$a0, $a0, 0
	move	$a1, $s7
	bge	$s8, $a0, .LBB158_21
# %bb.26:                               # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB158_22 Depth=1
	move	$a1, $s2
	.p2align	4, , 16
.LBB158_27:                             # %.lr.ph.i.i
                                        #   Parent Loop BB158_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	st.b	$a0, $a1, 0
	ld.b	$a0, $a1, -2
	addi.d	$a1, $a1, -1
	blt	$s8, $a0, .LBB158_27
	b	.LBB158_21
.LBB158_28:                             # %_ZSt9__advanceIPclEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i
                                        #   in Loop: Header=BB158_22 Depth=1
	bne	$a2, $s3, .LBB158_21
# %bb.29:                               #   in Loop: Header=BB158_22 Depth=1
	st.b	$a3, $a0, 0
	move	$a1, $s0
	b	.LBB158_21
.Lfunc_end158:
	.size	_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_, .Lfunc_end158-_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_,"axG",@progbits,_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_,comdat
	.hidden	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ # -- Begin function _ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.weak	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.p2align	5
	.type	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_,@function
_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_: # @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	st.b	$a3, $sp, 15
	addi.d	$a2, $sp, 15
	pcaddu18i	$ra, %call36(_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_)
	jirl	$ra, $ra, 0
	bgeu	$s0, $fp, .LBB159_28
# %bb.1:                                # %.lr.ph
	sub.d	$a1, $s0, $s1
	andi	$a0, $a1, 1
	ori	$a2, $zero, 3
	addi.d	$a3, $a1, -2
	blt	$a1, $a2, .LBB159_15
# %bb.2:                                # %.lr.ph.split.us.preheader
	addi.d	$a1, $a1, -1
	srli.d	$a2, $a1, 63
	add.d	$a1, $a1, $a2
	srai.d	$a1, $a1, 1
	srai.d	$a2, $a3, 1
	addi.d	$a3, $a3, 1
	ori	$a4, $zero, 1
	b	.LBB159_6
	.p2align	4, , 16
.LBB159_3:                              #   in Loop: Header=BB159_6 Depth=1
	move	$a6, $zero
.LBB159_4:                              # %_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_RT0_.exit.us
                                        #   in Loop: Header=BB159_6 Depth=1
	stx.b	$a5, $s1, $a6
.LBB159_5:                              #   in Loop: Header=BB159_6 Depth=1
	addi.d	$s0, $s0, 1
	bgeu	$s0, $fp, .LBB159_28
.LBB159_6:                              # %.lr.ph.split.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB159_8 Depth 2
                                        #     Child Loop BB159_13 Depth 2
	ld.b	$a5, $s0, 0
	ld.b	$a7, $s1, 0
	bge	$a5, $a7, .LBB159_5
# %bb.7:                                # %.lr.ph.i.i.preheader.us
                                        #   in Loop: Header=BB159_6 Depth=1
	move	$a6, $zero
	st.b	$a7, $s0, 0
	.p2align	4, , 16
.LBB159_8:                              # %.lr.ph.i.i.us
                                        #   Parent Loop BB159_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a7, $a6
	slli.d	$a6, $a6, 1
	addi.d	$t0, $a6, 2
	addi.d	$a6, $a6, 1
	ldx.b	$t1, $s1, $t0
	ldx.b	$t2, $s1, $a6
	slt	$t1, $t1, $t2
	masknez	$t0, $t0, $t1
	maskeqz	$a6, $a6, $t1
	or	$a6, $a6, $t0
	ldx.b	$t0, $s1, $a6
	stx.b	$t0, $s1, $a7
	blt	$a6, $a1, .LBB159_8
# %bb.9:                                # %._crit_edge.i.i.loopexit.us
                                        #   in Loop: Header=BB159_6 Depth=1
	bnez	$a0, .LBB159_12
# %bb.10:                               # %._crit_edge.i.i.loopexit.us
                                        #   in Loop: Header=BB159_6 Depth=1
	bne	$a6, $a2, .LBB159_12
# %bb.11:                               # %.thread.i.us
                                        #   in Loop: Header=BB159_6 Depth=1
	ldx.b	$a6, $s1, $a3
	stx.b	$a6, $s1, $a2
	move	$a6, $a3
	b	.LBB159_13
	.p2align	4, , 16
.LBB159_12:                             #   in Loop: Header=BB159_6 Depth=1
	beqz	$a6, .LBB159_3
	.p2align	4, , 16
.LBB159_13:                             # %.lr.ph.i.i.i.us
                                        #   Parent Loop BB159_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a7, $a6, -1
	srli.d	$t0, $a7, 1
	ldx.b	$t1, $s1, $t0
	bge	$t1, $a5, .LBB159_4
# %bb.14:                               #   in Loop: Header=BB159_13 Depth=2
	stx.b	$t1, $s1, $a6
	move	$a6, $t0
	bltu	$a4, $a7, .LBB159_13
	b	.LBB159_3
.LBB159_15:                             # %.lr.ph.split
	bnez	$a0, .LBB159_24
# %bb.16:                               # %.lr.ph.split.split.us
	beqz	$a3, .LBB159_22
# %bb.17:                               # %.lr.ph.split.split.us.split.preheader
	ld.bu	$a0, $s1, 0
	b	.LBB159_19
	.p2align	4, , 16
.LBB159_18:                             #   in Loop: Header=BB159_19 Depth=1
	addi.d	$s0, $s0, 1
	bgeu	$s0, $fp, .LBB159_28
.LBB159_19:                             # %.lr.ph.split.split.us.split
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a1, $s0, 0
	ext.w.b	$a2, $a0
	bge	$a1, $a2, .LBB159_18
# %bb.20:                               # %._crit_edge.i.i.us13
                                        #   in Loop: Header=BB159_19 Depth=1
	st.b	$a0, $s0, 0
	st.b	$a1, $s1, 0
	move	$a0, $a1
	b	.LBB159_18
	.p2align	4, , 16
.LBB159_21:                             #   in Loop: Header=BB159_22 Depth=1
	addi.d	$s0, $s0, 1
	bgeu	$s0, $fp, .LBB159_28
.LBB159_22:                             # %.lr.ph.split.split.us.split.us
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s0, 0
	ld.b	$a1, $s1, 0
	bge	$a0, $a1, .LBB159_21
# %bb.23:                               # %._crit_edge.i.i.us13.us
                                        #   in Loop: Header=BB159_22 Depth=1
	st.b	$a1, $s0, 0
	ld.b	$a1, $s1, 1
	st.b	$a1, $s1, 0
	slt	$a1, $a1, $a0
	xori	$a1, $a1, 1
	stx.b	$a0, $s1, $a1
	b	.LBB159_21
.LBB159_24:                             # %.lr.ph.split.split.preheader
	ld.bu	$a0, $s1, 0
	b	.LBB159_26
	.p2align	4, , 16
.LBB159_25:                             #   in Loop: Header=BB159_26 Depth=1
	addi.d	$s0, $s0, 1
	bgeu	$s0, $fp, .LBB159_28
.LBB159_26:                             # %.lr.ph.split.split
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a1, $s0, 0
	ext.w.b	$a2, $a0
	bge	$a1, $a2, .LBB159_25
# %bb.27:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB159_26 Depth=1
	st.b	$a0, $s0, 0
	st.b	$a1, $s1, 0
	move	$a0, $a1
	b	.LBB159_25
.LBB159_28:                             # %._crit_edge
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end159:
	.size	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_, .Lfunc_end159-_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_,"axG",@progbits,_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_,comdat
	.hidden	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ # -- Begin function _ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.weak	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.p2align	5
	.type	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_,@function
_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_: # @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.cfi_startproc
# %bb.0:
	sub.d	$a1, $a1, $a0
	ori	$a2, $zero, 2
	bge	$a1, $a2, .LBB160_2
.LBB160_1:                              # %.loopexit
	ret
.LBB160_2:
	addi.d	$a3, $a1, -2
	srli.d	$a2, $a3, 1
	addi.d	$a4, $a1, -1
	andi	$a5, $a1, 1
	srli.d	$a1, $a4, 1
	bnez	$a5, .LBB160_16
# %bb.3:                                # %.split.preheader
	addi.d	$a3, $a3, 1
	move	$a5, $a2
	b	.LBB160_6
	.p2align	4, , 16
.LBB160_4:                              #   in Loop: Header=BB160_6 Depth=1
	move	$a7, $a6
.LBB160_5:                              # %_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElcNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_.exit
                                        #   in Loop: Header=BB160_6 Depth=1
	stx.b	$a5, $a0, $a7
	addi.d	$a5, $a4, -1
	beqz	$a4, .LBB160_1
.LBB160_6:                              # %.split
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB160_8 Depth 2
                                        #     Child Loop BB160_12 Depth 2
	move	$a4, $a5
	ldx.b	$a5, $a0, $a5
	move	$a6, $a4
	bge	$a4, $a1, .LBB160_9
# %bb.7:                                # %.lr.ph.i.preheader
                                        #   in Loop: Header=BB160_6 Depth=1
	move	$a7, $a4
	.p2align	4, , 16
.LBB160_8:                              # %.lr.ph.i
                                        #   Parent Loop BB160_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	slli.d	$a6, $a7, 1
	addi.d	$t0, $a6, 2
	addi.d	$a6, $a6, 1
	ldx.b	$t1, $a0, $t0
	ldx.b	$t2, $a0, $a6
	slt	$t1, $t1, $t2
	masknez	$t0, $t0, $t1
	maskeqz	$a6, $a6, $t1
	or	$a6, $a6, $t0
	ldx.b	$t0, $a0, $a6
	stx.b	$t0, $a0, $a7
	move	$a7, $a6
	blt	$a6, $a1, .LBB160_8
.LBB160_9:                              # %._crit_edge.i
                                        #   in Loop: Header=BB160_6 Depth=1
	bne	$a6, $a2, .LBB160_11
# %bb.10:                               #   in Loop: Header=BB160_6 Depth=1
	ldx.b	$a6, $a0, $a3
	stx.b	$a6, $a0, $a2
	move	$a6, $a3
.LBB160_11:                             #   in Loop: Header=BB160_6 Depth=1
	bge	$a4, $a6, .LBB160_4
	.p2align	4, , 16
.LBB160_12:                             # %.lr.ph.i.i
                                        #   Parent Loop BB160_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a7, $a6, -1
	srli.d	$t0, $a7, 63
	add.d	$a7, $a7, $t0
	srai.d	$a7, $a7, 1
	ldx.b	$t0, $a0, $a7
	bge	$t0, $a5, .LBB160_4
# %bb.13:                               #   in Loop: Header=BB160_12 Depth=2
	stx.b	$t0, $a0, $a6
	move	$a6, $a7
	blt	$a4, $a7, .LBB160_12
	b	.LBB160_5
	.p2align	4, , 16
.LBB160_14:                             #   in Loop: Header=BB160_16 Depth=1
	move	$a5, $a4
.LBB160_15:                             # %_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElcNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_.exit.us
                                        #   in Loop: Header=BB160_16 Depth=1
	stx.b	$a2, $a0, $a5
	addi.d	$a2, $a3, -1
	beqz	$a3, .LBB160_1
.LBB160_16:                             # %.split.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB160_18 Depth 2
                                        #     Child Loop BB160_20 Depth 2
	move	$a3, $a2
	ldx.b	$a2, $a0, $a2
	move	$a5, $a3
	bge	$a3, $a1, .LBB160_15
# %bb.17:                               # %.lr.ph.i.us.preheader
                                        #   in Loop: Header=BB160_16 Depth=1
	move	$a4, $a3
	.p2align	4, , 16
.LBB160_18:                             # %.lr.ph.i.us
                                        #   Parent Loop BB160_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$a5, $a4
	slli.d	$a4, $a4, 1
	addi.d	$a6, $a4, 2
	addi.d	$a4, $a4, 1
	ldx.b	$a7, $a0, $a6
	ldx.b	$t0, $a0, $a4
	slt	$a7, $a7, $t0
	masknez	$a6, $a6, $a7
	maskeqz	$a4, $a4, $a7
	or	$a4, $a4, $a6
	ldx.b	$a6, $a0, $a4
	stx.b	$a6, $a0, $a5
	blt	$a4, $a1, .LBB160_18
# %bb.19:                               # %._crit_edge.i.us
                                        #   in Loop: Header=BB160_16 Depth=1
	bge	$a3, $a4, .LBB160_14
	.p2align	4, , 16
.LBB160_20:                             # %.lr.ph.i.i.us
                                        #   Parent Loop BB160_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a5, $a4, -1
	srli.d	$a6, $a5, 63
	add.d	$a5, $a5, $a6
	srai.d	$a5, $a5, 1
	ldx.b	$a6, $a0, $a5
	bge	$a6, $a2, .LBB160_14
# %bb.21:                               #   in Loop: Header=BB160_20 Depth=2
	stx.b	$a6, $a0, $a4
	move	$a4, $a5
	blt	$a3, $a5, .LBB160_20
	b	.LBB160_15
.Lfunc_end160:
	.size	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_, .Lfunc_end160-_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	5
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s0, $a0
	ld.d	$s3, $a0, 0
	ld.d	$a1, $s3, 0
	ld.d	$a0, $s3, 8
	ld.bu	$s4, $s0, 8
	sub.d	$a2, $a0, $a1
	ext.w.b	$s2, $s4
	blez	$a2, .LBB161_2
	.p2align	4, , 16
.LBB161_1:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a3, $a2, 1
	ldx.b	$a4, $a1, $a3
	add.d	$a5, $a1, $a3
	slt	$a4, $a4, $s2
	addi.d	$a5, $a5, 1
	nor	$a6, $a3, $zero
	add.d	$a2, $a2, $a6
	maskeqz	$a5, $a5, $a4
	masknez	$a1, $a1, $a4
	maskeqz	$a2, $a2, $a4
	masknez	$a3, $a3, $a4
	or	$a2, $a2, $a3
	or	$a1, $a5, $a1
	bgtz	$a2, .LBB161_1
.LBB161_2:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$a1, $a0, .LBB161_4
# %bb.3:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a0, $a1, 0
	ori	$fp, $zero, 1
	bge	$s2, $a0, .LBB161_30
.LBB161_4:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	ld.d	$a0, $s3, 48
	ld.d	$a1, $s3, 56
	bne	$a0, $a1, .LBB161_11
.LBB161_5:                              # %.critedge
	ld.d	$fp, $s3, 104
	ld.w	$s5, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB161_31
# %bb.6:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s1, 48
	slli.d	$a1, $s4, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s5, $a0
	ori	$fp, $zero, 1
	bnez	$a0, .LBB161_30
# %bb.7:
	slli.d	$a0, $s5, 47
	bgez	$a0, .LBB161_15
# %bb.8:
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB161_14
# %bb.9:
	ld.bu	$a0, $s1, 152
	andi	$a0, $a0, 255
	andi	$a1, $s2, 255
	bne	$a1, $a0, .LBB161_15
	b	.LBB161_30
	.p2align	4, , 16
.LBB161_10:                             #   in Loop: Header=BB161_11 Depth=1
	addi.d	$a0, $a0, 2
	beq	$a0, $a1, .LBB161_5
.LBB161_11:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a2, $a0, 0
	blt	$s2, $a2, .LBB161_10
# %bb.12:                               # %.lr.ph
                                        #   in Loop: Header=BB161_11 Depth=1
	ld.b	$a2, $a0, 1
	blt	$a2, $s2, .LBB161_10
# %bb.13:
	ori	$fp, $zero, 1
	b	.LBB161_30
.LBB161_14:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s1
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	andi	$a1, $s2, 255
	beq	$a1, $a0, .LBB161_30
.LBB161_15:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread60
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	addi.d	$s1, $s0, 8
	beq	$a0, $a1, .LBB161_20
# %bb.16:
	ld.d	$a1, $s3, 104
	addi.d	$a3, $s0, 9
	addi.d	$a0, $sp, 16
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp581:                               # EH_LABEL
	addi.d	$a2, $sp, 16
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp582:                               # EH_LABEL
# %bb.17:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$s0, $a0
	ld.d	$a0, $sp, 16
	ld.d	$s2, $s3, 32
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB161_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB161_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $s0, .LBB161_30
.LBB161_20:
	ld.d	$s4, $s3, 72
	ld.d	$s5, $s3, 80
	beq	$s4, $s5, .LBB161_29
# %bb.21:                               # %.lr.ph71.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB161_23
	.p2align	4, , 16
.LBB161_22:                             #   in Loop: Header=BB161_23 Depth=1
	ld.bu	$a0, $s2, 152
	andi	$a0, $a0, 255
	beq	$s6, $a0, .LBB161_25
	b	.LBB161_30
	.p2align	4, , 16
.LBB161_23:                             # %.lr.ph71
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 104
	ld.bu	$s6, $s1, 0
	ld.w	$s7, $s4, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB161_31
# %bb.24:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i42
                                        #   in Loop: Header=BB161_23 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s6, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s7, $a0
	beqz	$a0, .LBB161_26
.LBB161_25:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit49.thread
                                        #   in Loop: Header=BB161_23 Depth=1
	addi.d	$s4, $s4, 4
	bne	$s4, $s5, .LBB161_23
	b	.LBB161_29
	.p2align	4, , 16
.LBB161_26:                             #   in Loop: Header=BB161_23 Depth=1
	slli.d	$a0, $s7, 47
	bgez	$a0, .LBB161_30
# %bb.27:                               #   in Loop: Header=BB161_23 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB161_22
# %bb.28:                               #   in Loop: Header=BB161_23 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	beq	$s6, $a0, .LBB161_25
	b	.LBB161_30
.LBB161_29:
	move	$fp, $zero
.LBB161_30:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	move	$a0, $fp
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB161_31:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB161_32:
.Ltmp583:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB161_34
# %bb.33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB161_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end161:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end161-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table161:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55  # >> Call Site 1 <<
	.uleb128 .Ltmp581-.Lfunc_begin55        #   Call between .Lfunc_begin55 and .Ltmp581
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp581-.Lfunc_begin55        # >> Call Site 2 <<
	.uleb128 .Ltmp582-.Ltmp581              #   Call between .Ltmp581 and .Ltmp582
	.uleb128 .Ltmp583-.Lfunc_begin55        #     jumps to .Ltmp583
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp582-.Lfunc_begin55        # >> Call Site 3 <<
	.uleb128 .Lfunc_end161-.Ltmp582         #   Call between .Ltmp582 and .Lfunc_end161
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.hidden	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.weak	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.p2align	5
	.type	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,@function
_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_: # @_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s3, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	st.d	$zero, $a0, 8
	st.b	$zero, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx117collateIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx117collateIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB162_32
# %bb.1:                                # %_ZSt9use_facetINSt7__cxx117collateIcEEERKT_RKSt6locale.exit
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -8
	ld.d	$a0, $a0, 8
	pcalau12i	$a1, %got_pc_hi20(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a1, $a1, 8
	beq	$a0, $a1, .LBB162_4
# %bb.2:
	ld.bu	$a2, $a0, 0
	ori	$a3, $zero, 42
	beq	$a2, $a3, .LBB162_30
# %bb.3:                                # %_ZNKSt9type_infoneERKS_.exit
	ld.bu	$a2, $a1, 0
	addi.d	$a2, $a2, -42
	sltui	$a2, $a2, 1
	add.d	$a1, $a1, $a2
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB162_30
.LBB162_4:                              # %_ZNKSt9type_infoneERKS_.exit.thread38
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB162_34
# %bb.5:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	st.d	$zero, $sp, 56
	sub.d	$s3, $s3, $s1
	ori	$a1, $zero, 16
	st.d	$s3, $sp, 16
	move	$a0, $s5
	bltu	$s3, $a1, .LBB162_8
# %bb.6:                                # %.noexc.i
.Ltmp584:                               # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp585:                               # EH_LABEL
# %bb.7:                                # %.noexc25
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB162_8:                              # %._crit_edge.i.i
	beqz	$s3, .LBB162_12
# %bb.9:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB162_11
# %bb.10:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB162_12
.LBB162_11:
	move	$a1, $s1
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB162_12:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 56
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $sp, 48
	ld.d	$a1, $sp, 56
	ld.d	$a3, $a0, 40
	add.d	$s3, $s1, $a1
.Ltmp587:                               # EH_LABEL
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s3
	jirl	$ra, $a3, 0
.Ltmp588:                               # EH_LABEL
# %bb.13:                               # %_ZNKSt5ctypeIcE7tolowerEPcPKc.exit
	ld.d	$a0, $s0, 0
	ld.d	$a4, $a0, 24
.Ltmp590:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s1
	move	$a3, $s3
	jirl	$ra, $a4, 0
.Ltmp591:                               # EH_LABEL
# %bb.14:                               # %_ZNKSt7__cxx117collateIcE9transformEPKcS3_.exit
	ld.d	$a0, $fp, 0
	ld.d	$a1, $sp, 16
	addi.d	$s0, $sp, 32
	beq	$a0, $s4, .LBB162_18
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	beq	$a1, $s0, .LBB162_21
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $s4, 0
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	beqz	$a0, .LBB162_20
.LBB162_17:
	st.d	$a0, $sp, 16
	st.d	$a2, $sp, 32
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	bne	$a0, $s0, .LBB162_27
	b	.LBB162_28
.LBB162_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	beq	$a1, $s0, .LBB162_21
# %bb.19:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	bnez	$a0, .LBB162_17
.LBB162_20:
	st.d	$s0, $sp, 16
	move	$a0, $s0
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	bne	$a0, $s0, .LBB162_27
	b	.LBB162_28
.LBB162_21:
	addi.d	$a2, $sp, 16
	beq	$a2, $fp, .LBB162_31
# %bb.22:
	ld.d	$a2, $sp, 24
	beqz	$a2, .LBB162_26
# %bb.23:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB162_25
# %bb.24:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB162_26
.LBB162_25:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB162_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 24
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	beq	$a0, $s0, .LBB162_28
.LBB162_27:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB162_28:
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB162_30
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB162_30:                             # %_ZNKSt9type_infoneERKS_.exit.thread
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB162_31:
	move	$a0, $a1
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	bne	$a0, $s0, .LBB162_27
	b	.LBB162_28
.LBB162_32:
.Ltmp599:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp600:                               # EH_LABEL
# %bb.33:                               # %.noexc
.LBB162_34:
.Ltmp596:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp597:                               # EH_LABEL
# %bb.35:                               # %.noexc24
.LBB162_36:
.Ltmp586:                               # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB162_44
	b	.LBB162_48
.LBB162_37:
.Ltmp592:                               # EH_LABEL
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	move	$s0, $a0
	bne	$a1, $a2, .LBB162_42
# %bb.38:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
.Ltmp593:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp594:                               # EH_LABEL
	b	.LBB162_28
.LBB162_39:
.Ltmp595:                               # EH_LABEL
	b	.LBB162_41
.LBB162_40:
.Ltmp589:                               # EH_LABEL
.LBB162_41:
	move	$s0, $a0
.LBB162_42:
	ld.d	$a0, $sp, 48
	bne	$a0, $s5, .LBB162_45
# %bb.43:
	ld.d	$a0, $fp, 0
	bne	$a0, $s4, .LBB162_48
.LBB162_44:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB162_45:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB162_44
	b	.LBB162_48
.LBB162_46:
.Ltmp598:                               # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB162_44
	b	.LBB162_48
.LBB162_47:
.Ltmp601:                               # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB162_44
.LBB162_48:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end162:
	.size	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_, .Lfunc_end162-_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.p2align	2, 0x0
GCC_except_table162:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase33-.Lttbaseref33
.Lttbaseref33:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Lfunc_begin56-.Lfunc_begin56  # >> Call Site 1 <<
	.uleb128 .Ltmp584-.Lfunc_begin56        #   Call between .Lfunc_begin56 and .Ltmp584
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp584-.Lfunc_begin56        # >> Call Site 2 <<
	.uleb128 .Ltmp585-.Ltmp584              #   Call between .Ltmp584 and .Ltmp585
	.uleb128 .Ltmp586-.Lfunc_begin56        #     jumps to .Ltmp586
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp585-.Lfunc_begin56        # >> Call Site 3 <<
	.uleb128 .Ltmp587-.Ltmp585              #   Call between .Ltmp585 and .Ltmp587
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp587-.Lfunc_begin56        # >> Call Site 4 <<
	.uleb128 .Ltmp588-.Ltmp587              #   Call between .Ltmp587 and .Ltmp588
	.uleb128 .Ltmp589-.Lfunc_begin56        #     jumps to .Ltmp589
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp590-.Lfunc_begin56        # >> Call Site 5 <<
	.uleb128 .Ltmp591-.Ltmp590              #   Call between .Ltmp590 and .Ltmp591
	.uleb128 .Ltmp592-.Lfunc_begin56        #     jumps to .Ltmp592
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp591-.Lfunc_begin56        # >> Call Site 6 <<
	.uleb128 .Ltmp599-.Ltmp591              #   Call between .Ltmp591 and .Ltmp599
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp599-.Lfunc_begin56        # >> Call Site 7 <<
	.uleb128 .Ltmp600-.Ltmp599              #   Call between .Ltmp599 and .Ltmp600
	.uleb128 .Ltmp601-.Lfunc_begin56        #     jumps to .Ltmp601
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp596-.Lfunc_begin56        # >> Call Site 8 <<
	.uleb128 .Ltmp597-.Ltmp596              #   Call between .Ltmp596 and .Ltmp597
	.uleb128 .Ltmp598-.Lfunc_begin56        #     jumps to .Ltmp598
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp597-.Lfunc_begin56        # >> Call Site 9 <<
	.uleb128 .Ltmp593-.Ltmp597              #   Call between .Ltmp597 and .Ltmp593
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp593-.Lfunc_begin56        # >> Call Site 10 <<
	.uleb128 .Ltmp594-.Ltmp593              #   Call between .Ltmp593 and .Ltmp594
	.uleb128 .Ltmp595-.Lfunc_begin56        #     jumps to .Ltmp595
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp594-.Lfunc_begin56        # >> Call Site 11 <<
	.uleb128 .Lfunc_end162-.Ltmp594         #   Call between .Ltmp594 and .Lfunc_end162
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end56:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp602:                               # TypeInfo 1
	.word	.L_ZTISt9exception.DW.stub-.Ltmp602
.Lttbase33:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_,"axG",@progbits,_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_,comdat
	.hidden	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_ # -- Begin function _ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.weak	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.p2align	5
	.type	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_,@function
_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_: # @_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s2, $a0
	beq	$a0, $a1, .LBB163_19
# %bb.1:                                # %.lr.ph
	move	$s0, $a2
	move	$fp, $a1
	ld.d	$s1, $a2, 8
	addi.d	$s4, $s2, 64
	move	$s3, $s2
	b	.LBB163_3
	.p2align	4, , 16
.LBB163_2:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5.3
                                        #   in Loop: Header=BB163_3 Depth=1
	addi.d	$a0, $s4, 64
	addi.d	$s4, $s4, 128
	addi.d	$s3, $s3, 128
	beq	$a0, $fp, .LBB163_18
.LBB163_3:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, -56
	bne	$a0, $s1, .LBB163_6
# %bb.4:                                #   in Loop: Header=BB163_3 Depth=1
	beqz	$s1, .LBB163_20
# %bb.5:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit
                                        #   in Loop: Header=BB163_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s4, -64
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB163_21
.LBB163_6:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5
                                        #   in Loop: Header=BB163_3 Depth=1
	addi.d	$s2, $s4, -32
	beq	$s2, $fp, .LBB163_18
# %bb.7:                                #   in Loop: Header=BB163_3 Depth=1
	ld.d	$a0, $s4, -24
	bne	$a0, $s1, .LBB163_10
# %bb.8:                                #   in Loop: Header=BB163_3 Depth=1
	beqz	$s1, .LBB163_19
# %bb.9:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.1
                                        #   in Loop: Header=BB163_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB163_22
.LBB163_10:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5.1
                                        #   in Loop: Header=BB163_3 Depth=1
	beq	$s4, $fp, .LBB163_18
# %bb.11:                               #   in Loop: Header=BB163_3 Depth=1
	ld.d	$a0, $s4, 8
	bne	$a0, $s1, .LBB163_14
# %bb.12:                               #   in Loop: Header=BB163_3 Depth=1
	beqz	$s1, .LBB163_23
# %bb.13:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.2
                                        #   in Loop: Header=BB163_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s4, 0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB163_24
.LBB163_14:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread5.2
                                        #   in Loop: Header=BB163_3 Depth=1
	addi.d	$s2, $s4, 32
	beq	$s2, $fp, .LBB163_18
# %bb.15:                               #   in Loop: Header=BB163_3 Depth=1
	ld.d	$a0, $s4, 40
	bne	$a0, $s1, .LBB163_2
# %bb.16:                               #   in Loop: Header=BB163_3 Depth=1
	beqz	$s1, .LBB163_25
# %bb.17:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.3
                                        #   in Loop: Header=BB163_3 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB163_2
	b	.LBB163_19
.LBB163_18:
	move	$s2, $fp
.LBB163_19:                             # %.critedge
	move	$a0, $s2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB163_20:
	move	$s2, $s3
	b	.LBB163_19
.LBB163_21:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit..critedge.loopexit_crit_edge
	addi.d	$s2, $s4, -64
	b	.LBB163_19
.LBB163_22:
	addi.d	$s2, $s3, 32
	b	.LBB163_19
.LBB163_23:
	addi.d	$s2, $s3, 64
	b	.LBB163_19
.LBB163_24:
	move	$s2, $s4
	b	.LBB163_19
.LBB163_25:
	addi.d	$s2, $s3, 96
	b	.LBB163_19
.Lfunc_end163:
	.size	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_, .Lfunc_end163-_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 120
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end164:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end164-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB165_8
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI165_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI165_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB165_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE)
	b	.LBB165_7
.LBB165_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 152
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp603:                               # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp604:                               # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB165_8
.LBB165_5:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
	b	.LBB165_8
.LBB165_6:
	ld.d	$a1, $a1, 0
.LBB165_7:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB165_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB165_9:
.Ltmp605:                               # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 152
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end165:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end165-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI165_0:
	.word	.LBB165_2-.LJTI165_0
	.word	.LBB165_6-.LJTI165_0
	.word	.LBB165_3-.LJTI165_0
	.word	.LBB165_5-.LJTI165_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table165:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Lfunc_begin57-.Lfunc_begin57  # >> Call Site 1 <<
	.uleb128 .Ltmp603-.Lfunc_begin57        #   Call between .Lfunc_begin57 and .Ltmp603
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp603-.Lfunc_begin57        # >> Call Site 2 <<
	.uleb128 .Ltmp604-.Ltmp603              #   Call between .Ltmp603 and .Ltmp604
	.uleb128 .Ltmp605-.Lfunc_begin57        #     jumps to .Ltmp605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp604-.Lfunc_begin57        # >> Call Site 3 <<
	.uleb128 .Lfunc_end165-.Ltmp604         #   Call between .Ltmp604 and .Lfunc_end165
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end57:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,"axG",@progbits,_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,comdat
	.hidden	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE # -- Begin function _ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.weak	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.p2align	5
	.type	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,@function
_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE: # @_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB166_16
# %bb.1:
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB166_3
# %bb.2:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_3:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB166_5
# %bb.4:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_5:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB166_11
# %bb.6:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB166_8
	.p2align	4, , 16
.LBB166_7:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB166_8 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB166_10
.LBB166_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB166_7
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB166_8 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB166_7
.LBB166_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 24
.LBB166_11:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB166_13
# %bb.12:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_13:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB166_15
# %bb.14:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB166_15:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev.exit
	ori	$a1, $zero, 152
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB166_16:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end166:
	.size	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE, .Lfunc_end166-_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB167_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB167_3
.LBB167_2:
	move	$s1, $zero
.LBB167_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	blez	$s2, .LBB167_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB167_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp606:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp607:                               # EH_LABEL
# %bb.6:
	ld.d	$a0, $s0, 56
	ld.d	$a1, $s0, 48
	sub.d	$s2, $a0, $a1
	st.d	$zero, $fp, 64
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 48
	beq	$a0, $a1, .LBB167_9
# %bb.7:                                # %_ZNSt15__new_allocatorISt4pairIccEE8allocateEmPKv.exit.i.i.i.i
.Ltmp609:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp610:                               # EH_LABEL
# %bb.8:
	move	$s3, $a0
	b	.LBB167_10
.LBB167_9:
	move	$s3, $zero
.LBB167_10:                             # %.noexc
	st.d	$s3, $fp, 48
	st.d	$s3, $fp, 56
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 64
	ld.d	$a5, $s0, 48
	ld.d	$a0, $s0, 56
	move	$a1, $s3
	beq	$a5, $a0, .LBB167_18
# %bb.11:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a1, $a0, $a5
	addi.d	$a1, $a1, -2
	ori	$a2, $zero, 30
	bltu	$a1, $a2, .LBB167_16
# %bb.12:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a2, $s3, $a5
	ori	$a3, $zero, 32
	bltu	$a2, $a3, .LBB167_16
# %bb.13:                               # %vector.ph
	srli.d	$a1, $a1, 1
	addi.d	$a3, $a1, 1
	move	$a4, $a3
	bstrins.d	$a4, $zero, 3, 0
	alsl.d	$a2, $a4, $a5, 1
	alsl.d	$a1, $a4, $s3, 1
	addi.d	$a6, $s3, 16
	addi.d	$a5, $a5, 16
	move	$a7, $a4
	.p2align	4, , 16
.LBB167_14:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a5, -16
	vld	$vr1, $a5, 0
	vst	$vr0, $a6, -16
	vst	$vr1, $a6, 0
	addi.d	$a6, $a6, 32
	addi.d	$a7, $a7, -16
	addi.d	$a5, $a5, 32
	bnez	$a7, .LBB167_14
# %bb.15:                               # %middle.block
	bne	$a3, $a4, .LBB167_17
	b	.LBB167_18
.LBB167_16:
	move	$a2, $a5
	move	$a1, $s3
	.p2align	4, , 16
.LBB167_17:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a3, $a2, 0
	st.h	$a3, $a1, 0
	addi.d	$a2, $a2, 2
	addi.d	$a1, $a1, 2
	bne	$a2, $a0, .LBB167_17
.LBB167_18:                             # %.loopexit
	ld.d	$a0, $s0, 80
	ld.d	$a2, $s0, 72
	st.d	$a1, $fp, 56
	sub.d	$s5, $a0, $a2
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	st.d	$zero, $fp, 88
	beq	$a0, $a2, .LBB167_21
# %bb.19:                               # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp612:                               # EH_LABEL
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp613:                               # EH_LABEL
# %bb.20:
	move	$s4, $a0
	b	.LBB167_22
.LBB167_21:
	move	$s4, $zero
.LBB167_22:                             # %.noexc14
	st.d	$s4, $fp, 72
	st.d	$s4, $fp, 80
	add.d	$a0, $s4, $s5
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	blez	$s1, .LBB167_24
# %bb.23:
	move	$a0, $s4
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s4, $s4, $s1
.LBB167_24:
	st.d	$s4, $fp, 80
	ld.d	$a0, $s0, 96
	st.d	$a0, $fp, 96
	vld	$vr0, $s0, 104
	vst	$vr0, $fp, 104
	vld	$vr0, $s0, 120
	vst	$vr0, $fp, 120
	vld	$vr0, $s0, 136
	vst	$vr0, $fp, 136
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB167_25:
.Ltmp614:                               # EH_LABEL
	move	$s0, $a0
	beqz	$s3, .LBB167_28
# %bb.26:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB167_28
.LBB167_27:
.Ltmp611:                               # EH_LABEL
	move	$s0, $a0
.LBB167_28:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB167_30
.LBB167_29:
.Ltmp608:                               # EH_LABEL
	move	$s0, $a0
.LBB167_30:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB167_32
# %bb.31:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB167_32:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end167:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_, .Lfunc_end167-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table167:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Lfunc_begin58-.Lfunc_begin58  # >> Call Site 1 <<
	.uleb128 .Ltmp606-.Lfunc_begin58        #   Call between .Lfunc_begin58 and .Ltmp606
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp606-.Lfunc_begin58        # >> Call Site 2 <<
	.uleb128 .Ltmp607-.Ltmp606              #   Call between .Ltmp606 and .Ltmp607
	.uleb128 .Ltmp608-.Lfunc_begin58        #     jumps to .Ltmp608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp609-.Lfunc_begin58        # >> Call Site 3 <<
	.uleb128 .Ltmp610-.Ltmp609              #   Call between .Ltmp609 and .Ltmp610
	.uleb128 .Ltmp611-.Lfunc_begin58        #     jumps to .Ltmp611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp612-.Lfunc_begin58        # >> Call Site 4 <<
	.uleb128 .Ltmp613-.Ltmp612              #   Call between .Ltmp612 and .Ltmp613
	.uleb128 .Ltmp614-.Lfunc_begin58        #     jumps to .Ltmp614
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp613-.Lfunc_begin58        # >> Call Site 5 <<
	.uleb128 .Lfunc_end167-.Ltmp613         #   Call between .Ltmp613 and .Lfunc_end167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end58:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.hidden	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s1, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB168_2
# %bb.1:                                # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	b	.LBB168_3
.LBB168_2:
	move	$s0, $zero
.LBB168_3:
	st.d	$s0, $fp, 0
	st.d	$s0, $fp, 8
	add.d	$a0, $s0, $s2
	st.d	$a0, $fp, 16
	ld.d	$s2, $s1, 0
	ld.d	$s3, $s1, 8
	st.d	$s0, $sp, 32
	st.d	$s0, $sp, 16
	addi.d	$a0, $sp, 32
	st.d	$a0, $sp, 24
	beq	$s2, $s3, .LBB168_13
# %bb.4:                                # %.lr.ph.i.i.i.preheader
	ori	$s4, $zero, 16
	addi.w	$s5, $zero, -1
	b	.LBB168_7
	.p2align	4, , 16
.LBB168_5:                              #   in Loop: Header=BB168_7 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB168_6:                              #   in Loop: Header=BB168_7 Depth=1
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 32
	st.d	$a0, $s0, 8
	addi.d	$s2, $s2, 32
	addi.d	$s0, $a1, 32
	st.d	$s0, $sp, 32
	beq	$s2, $s3, .LBB168_13
.LBB168_7:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s2, 8
	ld.d	$s1, $s2, 0
	st.d	$a1, $sp, 40
	bltu	$a1, $s4, .LBB168_10
# %bb.8:                                # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB168_7 Depth=1
.Ltmp615:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp616:                               # EH_LABEL
# %bb.9:                                # %.noexc.i.i.i
                                        #   in Loop: Header=BB168_7 Depth=1
	ld.d	$a1, $sp, 40
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB168_10:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB168_7 Depth=1
	beq	$a1, $s5, .LBB168_6
# %bb.11:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB168_7 Depth=1
	bnez	$a1, .LBB168_5
# %bb.12:                               #   in Loop: Header=BB168_7 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB168_6
.LBB168_13:                             # %.loopexit
	st.d	$s0, $fp, 8
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB168_14:                             # %.body
.Ltmp617:                               # EH_LABEL
	move	$s0, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB168_16
# %bb.15:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB168_16:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end168:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_, .Lfunc_end168-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.p2align	2, 0x0
GCC_except_table168:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Lfunc_begin59-.Lfunc_begin59  # >> Call Site 1 <<
	.uleb128 .Ltmp615-.Lfunc_begin59        #   Call between .Lfunc_begin59 and .Ltmp615
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp615-.Lfunc_begin59        # >> Call Site 2 <<
	.uleb128 .Ltmp616-.Ltmp615              #   Call between .Ltmp615 and .Ltmp616
	.uleb128 .Ltmp617-.Lfunc_begin59        #     jumps to .Ltmp617
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp616-.Lfunc_begin59        # >> Call Site 3 <<
	.uleb128 .Lfunc_end168-.Ltmp616         #   Call between .Ltmp616 and .Lfunc_end168
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end59:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.hidden	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.weak	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,@function
_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev: # @_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB169_2
.LBB169_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB169_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp618:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_)
	jirl	$ra, $ra, 0
.Ltmp619:                               # EH_LABEL
	b	.LBB169_1
.LBB169_3:
.Ltmp620:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end169:
	.size	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev, .Lfunc_end169-_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table169:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase34-.Lttbaseref34
.Lttbaseref34:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Ltmp618-.Lfunc_begin60        # >> Call Site 1 <<
	.uleb128 .Ltmp619-.Ltmp618              #   Call between .Ltmp618 and .Ltmp619
	.uleb128 .Ltmp620-.Lfunc_begin60        #     jumps to .Ltmp620
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp619-.Lfunc_begin60        # >> Call Site 2 <<
	.uleb128 .Lfunc_end169-.Ltmp619         #   Call between .Ltmp619 and .Lfunc_end169
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end60:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase34:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,"axG",@progbits,_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,comdat
	.weak	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ # -- Begin function _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.p2align	5
	.type	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,@function
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_: # @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB170_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	addi.d	$s0, $a0, 16
	b	.LBB170_3
	.p2align	4, , 16
.LBB170_2:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit
                                        #   in Loop: Header=BB170_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB170_5
.LBB170_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB170_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB170_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB170_2
.LBB170_5:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB170_6:                              # %._crit_edge
	ret
.Lfunc_end170:
	.size	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_, .Lfunc_end170-_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a3, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 112
	move	$s0, $a2
	add.d	$a2, $a3, $a1
	move	$a1, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB171_17
# %bb.1:
	beqz	$s0, .LBB171_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB171_5
# %bb.3:
	bstrpick.d	$a0, $a0, 23, 0
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB171_16
.LBB171_4:
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $fp, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB171_16
.LBB171_5:
	move	$s5, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB171_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	bstrpick.d	$a0, $s5, 23, 0
	stx.w	$a0, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB171_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 28
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB171_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 32
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB171_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 3
	slli.d	$a2, $a0, 3
	slli.d	$a0, $a0, 5
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 16
	addi.d	$a4, $s2, 16
	move	$a5, $a2
	.p2align	4, , 16
.LBB171_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a3, -16
	vld	$vr1, $a3, 0
	vst	$vr0, $a4, -16
	vst	$vr1, $a4, 0
	addi.d	$a3, $a3, 32
	addi.d	$a5, $a5, -8
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB171_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB171_13
	.p2align	4, , 16
.LBB171_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB171_12
.LBB171_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB171_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB171_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB171_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB171_17:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB171_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end171:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end171-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB172_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB172_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB172_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB172_8
# %bb.4:                                #   in Loop: Header=BB172_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB172_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB172_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB172_8
.LBB172_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB172_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 128
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB172_10
	.p2align	4, , 16
.LBB172_9:                              #   in Loop: Header=BB172_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB172_12
.LBB172_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 120
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB172_9
# %bb.11:                               #   in Loop: Header=BB172_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB172_10
.LBB172_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB172_13:                             #   in Loop: Header=BB172_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB172_16
.LBB172_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB172_13
# %bb.15:                               #   in Loop: Header=BB172_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB172_13
.LBB172_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB172_7
	b	.LBB172_8
.Lfunc_end172:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv, .Lfunc_end172-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB173_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB173_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	ld.d	$s0, $fp, 56
	beq	$a0, $s0, .LBB173_10
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 48
	b	.LBB173_5
	.p2align	4, , 16
.LBB173_4:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit.i.i
                                        #   in Loop: Header=BB173_5 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 64
	beq	$a0, $s0, .LBB173_9
.LBB173_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB173_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB173_5 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB173_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i.i
                                        #   in Loop: Header=BB173_5 Depth=1
	ld.d	$a0, $s1, -48
	addi.d	$a1, $s1, -32
	beq	$a1, $a0, .LBB173_4
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i.i
                                        #   in Loop: Header=BB173_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB173_4
.LBB173_9:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 48
.LBB173_10:                             # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exit.i
	beqz	$a0, .LBB173_12
# %bb.11:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB173_12:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB173_18
# %bb.13:                               # %.lr.ph.i.i3.preheader
	addi.d	$s1, $a0, 16
	b	.LBB173_15
	.p2align	4, , 16
.LBB173_14:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB173_15 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB173_17
.LBB173_15:                             # %.lr.ph.i.i3
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB173_14
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB173_15 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB173_14
.LBB173_17:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB173_18:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB173_20
# %bb.19:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB173_20:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB173_22
# %bb.21:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB173_22:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end173:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev, .Lfunc_end173-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev,comdat
	.hidden	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev # -- Begin function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.weak	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev,@function
_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev: # @_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s0, $fp, 8
	beq	$a0, $s0, .LBB174_8
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$s1, $a0, 48
	b	.LBB174_3
	.p2align	4, , 16
.LBB174_2:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit.i
                                        #   in Loop: Header=BB174_3 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 64
	beq	$a0, $s0, .LBB174_7
.LBB174_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB174_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB174_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB174_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB174_3 Depth=1
	ld.d	$a0, $s1, -48
	addi.d	$a1, $s1, -32
	beq	$a1, $a0, .LBB174_2
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i
                                        #   in Loop: Header=BB174_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB174_2
.LBB174_7:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exitthread-pre-split
	ld.d	$a0, $fp, 0
.LBB174_8:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exit
	beqz	$a0, .LBB174_10
# %bb.9:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB174_10:                             # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end174:
	.size	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev, .Lfunc_end174-_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_,"axG",@progbits,_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_,comdat
	.weak	_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_ # -- Begin function _ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_
	.p2align	5
	.type	_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_,@function
_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_: # @_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB175_8
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	addi.d	$s0, $a0, 48
	b	.LBB175_3
	.p2align	4, , 16
.LBB175_2:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit
                                        #   in Loop: Header=BB175_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 64
	beq	$a0, $fp, .LBB175_7
.LBB175_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB175_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB175_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB175_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i
                                        #   in Loop: Header=BB175_3 Depth=1
	ld.d	$a0, $s0, -48
	addi.d	$a1, $s0, -32
	beq	$a1, $a0, .LBB175_2
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i
                                        #   in Loop: Header=BB175_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB175_2
.LBB175_7:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB175_8:                              # %._crit_edge
	ret
.Lfunc_end175:
	.size	_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_, .Lfunc_end175-_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.p2align	5
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB176_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB176_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB176_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB176_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end176:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev, .Lfunc_end176-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	5
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s3, $a0, 0
	ld.d	$a1, $s3, 0
	ld.d	$a0, $s3, 8
	ld.b	$a2, $fp, 8
	sub.d	$a3, $a0, $a1
	blez	$a3, .LBB177_2
	.p2align	4, , 16
.LBB177_1:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a4, $a3, 1
	ldx.b	$a5, $a1, $a4
	add.d	$a6, $a1, $a4
	slt	$a5, $a5, $a2
	addi.d	$a6, $a6, 1
	nor	$a7, $a4, $zero
	add.d	$a3, $a3, $a7
	maskeqz	$a6, $a6, $a5
	masknez	$a1, $a1, $a5
	maskeqz	$a3, $a3, $a5
	masknez	$a4, $a4, $a5
	or	$a3, $a3, $a4
	or	$a1, $a6, $a1
	bgtz	$a3, .LBB177_1
.LBB177_2:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$a1, $a0, .LBB177_4
# %bb.3:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a0, $a1, 0
	ori	$s0, $zero, 1
	bge	$a2, $a0, .LBB177_47
.LBB177_4:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	addi.d	$s4, $sp, 56
	st.d	$s4, $sp, 40
	addi.d	$a0, $sp, 40
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 40
	ld.d	$a0, $sp, 48
	ld.d	$a1, $s3, 104
	add.d	$a3, $a2, $a0
.Ltmp621:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp622:                               # EH_LABEL
# %bb.5:
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB177_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB177_7:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE12_M_transformEc.exit
	ld.d	$s1, $s3, 48
	ld.d	$s2, $s3, 56
	beq	$s1, $s2, .LBB177_18
# %bb.8:                                # %.lr.ph
	ld.d	$s5, $sp, 16
	ld.d	$s0, $sp, 8
	lu12i.w	$s6, -524288
	lu12i.w	$a0, 524287
	ori	$s7, $a0, 4095
	b	.LBB177_12
	.p2align	4, , 16
.LBB177_9:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i9.i
                                        #   in Loop: Header=BB177_12 Depth=1
	sub.d	$a0, $s5, $s8
	slt	$a1, $s6, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s7
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
.LBB177_10:                             # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE14_M_match_rangeERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEESB_SB_.exit
                                        #   in Loop: Header=BB177_12 Depth=1
	addi.w	$a0, $a0, 0
	blez	$a0, .LBB177_23
.LBB177_11:                             # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE14_M_match_rangeERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEESB_SB_.exit.thread
                                        #   in Loop: Header=BB177_12 Depth=1
	addi.d	$s1, $s1, 64
	beq	$s1, $s2, .LBB177_18
.LBB177_12:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s8, $s1, 8
	sltu	$a0, $s5, $s8
	masknez	$a1, $s8, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB177_15
# %bb.13:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB177_12 Depth=1
	ld.d	$a0, $s1, 0
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB177_15
# %bb.14:                               # %_ZStleIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i
                                        #   in Loop: Header=BB177_12 Depth=1
	addi.w	$a0, $a0, 0
	bgtz	$a0, .LBB177_11
	b	.LBB177_16
	.p2align	4, , 16
.LBB177_15:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB177_12 Depth=1
	sub.d	$a0, $s8, $s5
	slt	$a1, $s6, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s7
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	bgtz	$a0, .LBB177_11
.LBB177_16:                             #   in Loop: Header=BB177_12 Depth=1
	ld.d	$s8, $s1, 40
	sltu	$a0, $s8, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s8, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB177_9
# %bb.17:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i6.i
                                        #   in Loop: Header=BB177_12 Depth=1
	ld.d	$a1, $s1, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB177_10
	b	.LBB177_9
.LBB177_18:                             # %.critedge
	addi.d	$s1, $fp, 8
	ld.d	$s0, $s3, 112
	ld.bu	$s5, $s1, 0
	ld.w	$s6, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB177_50
# %bb.19:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s5, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s6, $a0
	ori	$s0, $zero, 1
	bnez	$a0, .LBB177_45
# %bb.20:
	slli.d	$a0, $s6, 47
	bgez	$a0, .LBB177_27
# %bb.21:
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB177_24
# %bb.22:
	ld.bu	$a0, $s2, 152
	b	.LBB177_26
.LBB177_23:
	ori	$s0, $zero, 1
	b	.LBB177_45
.LBB177_24:
.Ltmp624:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp625:                               # EH_LABEL
# %bb.25:                               # %.noexc44
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp626:                               # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp627:                               # EH_LABEL
.LBB177_26:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	andi	$a0, $a0, 255
	beq	$s5, $a0, .LBB177_45
.LBB177_27:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread78
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	beq	$a0, $a1, .LBB177_33
# %bb.28:
	ld.d	$a1, $s3, 112
	addi.d	$a3, $fp, 9
.Ltmp628:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
.Ltmp629:                               # EH_LABEL
# %bb.29:
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp631:                               # EH_LABEL
	addi.d	$a2, $sp, 40
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp632:                               # EH_LABEL
# %bb.30:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	ld.d	$s2, $s3, 32
	beq	$a0, $s4, .LBB177_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB177_32:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $fp, .LBB177_45
.LBB177_33:
	ld.d	$s4, $s3, 72
	ld.d	$s5, $s3, 80
	beq	$s4, $s5, .LBB177_44
# %bb.34:                               # %.lr.ph89.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB177_38
	.p2align	4, , 16
.LBB177_35:                             #   in Loop: Header=BB177_38 Depth=1
	ld.bu	$a0, $s2, 152
.LBB177_36:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61
                                        #   in Loop: Header=BB177_38 Depth=1
	andi	$a0, $a0, 255
	bne	$s6, $a0, .LBB177_45
.LBB177_37:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61.thread
                                        #   in Loop: Header=BB177_38 Depth=1
	addi.d	$s4, $s4, 4
	beq	$s4, $s5, .LBB177_44
.LBB177_38:                             # %.lr.ph89
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 112
	ld.bu	$s6, $s1, 0
	ld.w	$s7, $s4, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB177_48
# %bb.39:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i51
                                        #   in Loop: Header=BB177_38 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s6, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s7, $a0
	bnez	$a0, .LBB177_37
# %bb.40:                               #   in Loop: Header=BB177_38 Depth=1
	slli.d	$a0, $s7, 47
	bgez	$a0, .LBB177_45
# %bb.41:                               #   in Loop: Header=BB177_38 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB177_35
# %bb.42:                               #   in Loop: Header=BB177_38 Depth=1
.Ltmp634:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp635:                               # EH_LABEL
# %bb.43:                               # %.noexc59
                                        #   in Loop: Header=BB177_38 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp636:                               # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp637:                               # EH_LABEL
	b	.LBB177_36
.LBB177_44:
	move	$s0, $zero
.LBB177_45:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB177_47
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i62
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB177_47:
	move	$a0, $s0
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB177_48:
.Ltmp639:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp640:                               # EH_LABEL
# %bb.49:                               # %.noexc58
.LBB177_50:
.Ltmp642:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp643:                               # EH_LABEL
# %bb.51:                               # %.noexc
.LBB177_52:
.Ltmp633:                               # EH_LABEL
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s4, .LBB177_61
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB177_61
.LBB177_54:
.Ltmp630:                               # EH_LABEL
	b	.LBB177_60
.LBB177_55:                             # %.loopexit
.Ltmp638:                               # EH_LABEL
	b	.LBB177_60
.LBB177_56:
.Ltmp644:                               # EH_LABEL
	b	.LBB177_60
.LBB177_57:
.Ltmp623:                               # EH_LABEL
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s4, .LBB177_64
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB177_63
.LBB177_59:                             # %.loopexit.split-lp
.Ltmp641:                               # EH_LABEL
.LBB177_60:
	move	$fp, $a0
.LBB177_61:
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB177_64
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i65
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
.LBB177_63:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB177_64:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end177:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end177-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table177:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Lfunc_begin61-.Lfunc_begin61  # >> Call Site 1 <<
	.uleb128 .Ltmp621-.Lfunc_begin61        #   Call between .Lfunc_begin61 and .Ltmp621
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp621-.Lfunc_begin61        # >> Call Site 2 <<
	.uleb128 .Ltmp622-.Ltmp621              #   Call between .Ltmp621 and .Ltmp622
	.uleb128 .Ltmp623-.Lfunc_begin61        #     jumps to .Ltmp623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp622-.Lfunc_begin61        # >> Call Site 3 <<
	.uleb128 .Ltmp624-.Ltmp622              #   Call between .Ltmp622 and .Ltmp624
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp624-.Lfunc_begin61        # >> Call Site 4 <<
	.uleb128 .Ltmp627-.Ltmp624              #   Call between .Ltmp624 and .Ltmp627
	.uleb128 .Ltmp644-.Lfunc_begin61        #     jumps to .Ltmp644
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp628-.Lfunc_begin61        # >> Call Site 5 <<
	.uleb128 .Ltmp629-.Ltmp628              #   Call between .Ltmp628 and .Ltmp629
	.uleb128 .Ltmp630-.Lfunc_begin61        #     jumps to .Ltmp630
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp631-.Lfunc_begin61        # >> Call Site 6 <<
	.uleb128 .Ltmp632-.Ltmp631              #   Call between .Ltmp631 and .Ltmp632
	.uleb128 .Ltmp633-.Lfunc_begin61        #     jumps to .Ltmp633
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp632-.Lfunc_begin61        # >> Call Site 7 <<
	.uleb128 .Ltmp634-.Ltmp632              #   Call between .Ltmp632 and .Ltmp634
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp634-.Lfunc_begin61        # >> Call Site 8 <<
	.uleb128 .Ltmp637-.Ltmp634              #   Call between .Ltmp634 and .Ltmp637
	.uleb128 .Ltmp638-.Lfunc_begin61        #     jumps to .Ltmp638
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp637-.Lfunc_begin61        # >> Call Site 9 <<
	.uleb128 .Ltmp639-.Ltmp637              #   Call between .Ltmp637 and .Ltmp639
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp639-.Lfunc_begin61        # >> Call Site 10 <<
	.uleb128 .Ltmp640-.Ltmp639              #   Call between .Ltmp639 and .Ltmp640
	.uleb128 .Ltmp641-.Lfunc_begin61        #     jumps to .Ltmp641
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp642-.Lfunc_begin61        # >> Call Site 11 <<
	.uleb128 .Ltmp643-.Ltmp642              #   Call between .Ltmp642 and .Ltmp643
	.uleb128 .Ltmp644-.Lfunc_begin61        #     jumps to .Ltmp644
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp643-.Lfunc_begin61        # >> Call Site 12 <<
	.uleb128 .Lfunc_end177-.Ltmp643         #   Call between .Ltmp643 and .Lfunc_end177
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end61:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,comdat
	.hidden	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
	.weak	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
	.p2align	5
	.type	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,@function
_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_: # @_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s2, $a3
	move	$s1, $a2
	move	$s0, $a1
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx117collateIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx117collateIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB178_11
# %bb.1:                                # %_ZSt9use_facetINSt7__cxx117collateIcEEERKT_RKSt6locale.exit
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	st.d	$zero, $sp, 16
	sub.d	$s2, $s2, $s1
	ori	$a1, $zero, 16
	st.d	$s2, $sp, 40
	move	$a0, $s3
	bltu	$s2, $a1, .LBB178_3
# %bb.2:                                # %.noexc.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB178_3:                              # %._crit_edge.i.i
	beqz	$s2, .LBB178_7
# %bb.4:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB178_6
# %bb.5:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB178_7
.LBB178_6:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB178_7:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	ld.d	$a3, $s0, 0
	stx.b	$zero, $a1, $a0
	ld.d	$a2, $sp, 8
	ld.d	$a0, $sp, 16
	ld.d	$a4, $a3, 24
	add.d	$a3, $a2, $a0
.Ltmp645:                               # EH_LABEL
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a4, 0
.Ltmp646:                               # EH_LABEL
# %bb.8:                                # %_ZNKSt7__cxx117collateIcE9transformEPKcS3_.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB178_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB178_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB178_11:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB178_12:
.Ltmp647:                               # EH_LABEL
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s3, .LBB178_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB178_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end178:
	.size	_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_, .Lfunc_end178-_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_,comdat
	.p2align	2, 0x0
GCC_except_table178:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Lfunc_begin62-.Lfunc_begin62  # >> Call Site 1 <<
	.uleb128 .Ltmp645-.Lfunc_begin62        #   Call between .Lfunc_begin62 and .Ltmp645
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp645-.Lfunc_begin62        # >> Call Site 2 <<
	.uleb128 .Ltmp646-.Ltmp645              #   Call between .Ltmp645 and .Ltmp646
	.uleb128 .Ltmp647-.Lfunc_begin62        #     jumps to .Ltmp647
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp646-.Lfunc_begin62        # >> Call Site 3 <<
	.uleb128 .Lfunc_end178-.Ltmp646         #   Call between .Ltmp646 and .Lfunc_end178
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end62:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 128
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end179:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end179-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB180_9
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI180_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI180_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB180_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE)
	b	.LBB180_8
.LBB180_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp648:                               # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp649:                               # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB180_9
.LBB180_5:
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB180_9
# %bb.6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB180_9
.LBB180_7:
	ld.d	$a1, $a1, 0
.LBB180_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB180_9:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB180_10:
.Ltmp650:                               # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end180:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end180-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI180_0:
	.word	.LBB180_2-.LJTI180_0
	.word	.LBB180_7-.LJTI180_0
	.word	.LBB180_3-.LJTI180_0
	.word	.LBB180_5-.LJTI180_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table180:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Lfunc_begin63-.Lfunc_begin63  # >> Call Site 1 <<
	.uleb128 .Ltmp648-.Lfunc_begin63        #   Call between .Lfunc_begin63 and .Ltmp648
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp648-.Lfunc_begin63        # >> Call Site 2 <<
	.uleb128 .Ltmp649-.Ltmp648              #   Call between .Ltmp648 and .Ltmp649
	.uleb128 .Ltmp650-.Lfunc_begin63        #     jumps to .Ltmp650
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp649-.Lfunc_begin63        # >> Call Site 3 <<
	.uleb128 .Lfunc_end180-.Ltmp649         #   Call between .Ltmp649 and .Lfunc_end180
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end63:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB181_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB181_3
.LBB181_2:
	move	$s1, $zero
.LBB181_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	blez	$s2, .LBB181_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB181_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp651:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp652:                               # EH_LABEL
# %bb.6:
	addi.d	$s3, $fp, 48
	addi.d	$a1, $s0, 48
.Ltmp654:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_)
	jirl	$ra, $ra, 0
.Ltmp655:                               # EH_LABEL
# %bb.7:
	ld.d	$a0, $s0, 80
	ld.d	$a1, $s0, 72
	sub.d	$s4, $a0, $a1
	st.d	$zero, $fp, 88
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	beq	$a0, $a1, .LBB181_10
# %bb.8:                                # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp657:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp658:                               # EH_LABEL
# %bb.9:
	move	$s2, $a0
	b	.LBB181_11
.LBB181_10:
	move	$s2, $zero
.LBB181_11:                             # %.noexc
	st.d	$s2, $fp, 72
	st.d	$s2, $fp, 80
	add.d	$a0, $s2, $s4
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	blez	$s1, .LBB181_13
# %bb.12:
	move	$a0, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s2, $s2, $s1
.LBB181_13:
	st.d	$s2, $fp, 80
	vld	$vr0, $s0, 96
	vst	$vr0, $fp, 96
	vld	$vr0, $s0, 112
	vst	$vr0, $fp, 112
	vld	$vr0, $s0, 128
	vst	$vr0, $fp, 128
	vld	$vr0, $s0, 144
	vst	$vr0, $fp, 144
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB181_14:
.Ltmp659:                               # EH_LABEL
	move	$s0, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB181_16
.LBB181_15:
.Ltmp656:                               # EH_LABEL
	move	$s0, $a0
.LBB181_16:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB181_18
.LBB181_17:
.Ltmp653:                               # EH_LABEL
	move	$s0, $a0
.LBB181_18:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB181_20
# %bb.19:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB181_20:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end181:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_, .Lfunc_end181-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table181:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Lfunc_begin64-.Lfunc_begin64  # >> Call Site 1 <<
	.uleb128 .Ltmp651-.Lfunc_begin64        #   Call between .Lfunc_begin64 and .Ltmp651
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp651-.Lfunc_begin64        # >> Call Site 2 <<
	.uleb128 .Ltmp652-.Ltmp651              #   Call between .Ltmp651 and .Ltmp652
	.uleb128 .Ltmp653-.Lfunc_begin64        #     jumps to .Ltmp653
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp654-.Lfunc_begin64        # >> Call Site 3 <<
	.uleb128 .Ltmp655-.Ltmp654              #   Call between .Ltmp654 and .Ltmp655
	.uleb128 .Ltmp656-.Lfunc_begin64        #     jumps to .Ltmp656
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp657-.Lfunc_begin64        # >> Call Site 4 <<
	.uleb128 .Ltmp658-.Ltmp657              #   Call between .Ltmp657 and .Ltmp658
	.uleb128 .Ltmp659-.Lfunc_begin64        #     jumps to .Ltmp659
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp658-.Lfunc_begin64        # >> Call Site 5 <<
	.uleb128 .Lfunc_end181-.Ltmp658         #   Call between .Ltmp658 and .Lfunc_end181
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end64:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,"axG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,comdat
	.hidden	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_ # -- Begin function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
	.weak	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
	.p2align	5
	.type	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,@function
_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_: # @_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s1, 0
	move	$fp, $a0
	sub.d	$s0, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB182_2
# %bb.1:                                # %_ZNSt15__new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EE8allocateEmPKv.exit.i.i.i
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	b	.LBB182_3
.LBB182_2:
	move	$a0, $zero
.LBB182_3:
	st.d	$a0, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a1, $a0, $s0
	st.d	$a1, $fp, 16
	ld.d	$s0, $s1, 0
	ld.d	$s1, $s1, 8
	st.d	$a0, $sp, 24
	st.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	st.d	$a1, $sp, 16
	beq	$s0, $s1, .LBB182_6
	.p2align	4, , 16
.LBB182_4:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp660:                               # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_)
	jirl	$ra, $ra, 0
.Ltmp661:                               # EH_LABEL
# %bb.5:                                # %_ZSt10_ConstructISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EJRKS7_EEvPT_DpOT0_.exit.i.i.i
                                        #   in Loop: Header=BB182_4 Depth=1
	ld.d	$a0, $sp, 24
	addi.d	$s0, $s0, 64
	addi.d	$a0, $a0, 64
	st.d	$a0, $sp, 24
	bne	$s0, $s1, .LBB182_4
.LBB182_6:                              # %.loopexit
	st.d	$a0, $fp, 8
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB182_7:                              # %.body
.Ltmp662:                               # EH_LABEL
	move	$s0, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB182_9
# %bb.8:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB182_9:                              # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end182:
	.size	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_, .Lfunc_end182-_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,"aG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_,comdat
	.p2align	2, 0x0
GCC_except_table182:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Lfunc_begin65-.Lfunc_begin65  # >> Call Site 1 <<
	.uleb128 .Ltmp660-.Lfunc_begin65        #   Call between .Lfunc_begin65 and .Ltmp660
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp660-.Lfunc_begin65        # >> Call Site 2 <<
	.uleb128 .Ltmp661-.Ltmp660              #   Call between .Ltmp660 and .Ltmp661
	.uleb128 .Ltmp662-.Lfunc_begin65        #     jumps to .Ltmp662
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp661-.Lfunc_begin65        # >> Call Site 3 <<
	.uleb128 .Lfunc_end182-.Ltmp661         #   Call between .Ltmp661 and .Lfunc_end182
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end65:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,comdat
	.hidden	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
	.weak	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,@function
_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev: # @_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB183_2
.LBB183_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB183_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp663:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_)
	jirl	$ra, $ra, 0
.Ltmp664:                               # EH_LABEL
	b	.LBB183_1
.LBB183_3:
.Ltmp665:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end183:
	.size	_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev, .Lfunc_end183-_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EvED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table183:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase35-.Lttbaseref35
.Lttbaseref35:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Ltmp663-.Lfunc_begin66        # >> Call Site 1 <<
	.uleb128 .Ltmp664-.Ltmp663              #   Call between .Ltmp663 and .Ltmp664
	.uleb128 .Ltmp665-.Lfunc_begin66        #     jumps to .Ltmp665
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp664-.Lfunc_begin66        # >> Call Site 2 <<
	.uleb128 .Lfunc_end183-.Ltmp664         #   Call between .Ltmp664 and .Lfunc_end183
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end66:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase35:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,comdat
	.hidden	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
	.p2align	5
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s3, $a0, 16
	st.d	$s3, $a0, 0
	ld.d	$a1, $a1, 8
	ld.d	$s1, $s0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 16
	move	$a0, $s3
	bltu	$a1, $a2, .LBB184_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB184_2:                              # %._crit_edge.i.i
	addi.w	$s4, $zero, -1
	beq	$a1, $s4, .LBB184_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB184_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB184_6
.LBB184_5:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB184_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 16
	st.d	$a0, $fp, 8
	addi.d	$s1, $fp, 48
	st.d	$s1, $fp, 32
	ld.d	$a1, $s0, 40
	ld.d	$s0, $s0, 32
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 16
	bltu	$a1, $a0, .LBB184_9
# %bb.7:                                # %.noexc.i6
.Ltmp666:                               # EH_LABEL
	addi.d	$s2, $fp, 32
	addi.d	$a1, $sp, 16
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp667:                               # EH_LABEL
# %bb.8:                                # %.noexc
	ld.d	$a1, $sp, 16
	st.d	$a0, $s2, 0
	st.d	$a1, $s1, 0
	move	$s1, $a0
.LBB184_9:                              # %._crit_edge.i.i5
	beq	$a1, $s4, .LBB184_13
# %bb.10:                               # %._crit_edge.i.i5
	bnez	$a1, .LBB184_12
# %bb.11:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s1, 0
	b	.LBB184_13
.LBB184_12:
	addi.d	$a2, $a1, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB184_13:
	ld.d	$a0, $sp, 16
	st.d	$a0, $fp, 40
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB184_14:
.Ltmp668:                               # EH_LABEL
	ld.d	$a2, $fp, 0
	move	$fp, $a0
	beq	$a2, $s3, .LBB184_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s3, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB184_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end184:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_, .Lfunc_end184-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS6_,comdat
	.p2align	2, 0x0
GCC_except_table184:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Lfunc_begin67-.Lfunc_begin67  # >> Call Site 1 <<
	.uleb128 .Ltmp666-.Lfunc_begin67        #   Call between .Lfunc_begin67 and .Ltmp666
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp666-.Lfunc_begin67        # >> Call Site 2 <<
	.uleb128 .Ltmp667-.Ltmp666              #   Call between .Ltmp666 and .Ltmp667
	.uleb128 .Ltmp668-.Lfunc_begin67        #     jumps to .Ltmp668
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp667-.Lfunc_begin67        # >> Call Site 3 <<
	.uleb128 .Lfunc_end184-.Ltmp667         #   Call between .Ltmp667 and .Lfunc_end184
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end67:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a4, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 112
	move	$s0, $a2
	add.d	$a2, $a4, $a1
	ori	$a3, $zero, 1
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB185_17
# %bb.1:
	beqz	$s0, .LBB185_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB185_5
# %bb.3:
	bstrpick.d	$a0, $a0, 23, 0
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB185_16
.LBB185_4:
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $fp, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB185_16
.LBB185_5:
	move	$s5, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB185_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	bstrpick.d	$a0, $s5, 23, 0
	stx.w	$a0, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB185_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 28
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB185_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 32
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB185_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 3
	slli.d	$a2, $a0, 3
	slli.d	$a0, $a0, 5
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 16
	addi.d	$a4, $s2, 16
	move	$a5, $a2
	.p2align	4, , 16
.LBB185_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a3, -16
	vld	$vr1, $a3, 0
	vst	$vr0, $a4, -16
	vst	$vr1, $a4, 0
	addi.d	$a3, $a3, 32
	addi.d	$a5, $a5, -8
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB185_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB185_13
	.p2align	4, , 16
.LBB185_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB185_12
.LBB185_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB185_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB185_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB185_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB185_17:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB185_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end185:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end185-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB186_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB186_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB186_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB186_8
# %bb.4:                                #   in Loop: Header=BB186_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB186_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB186_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB186_8
.LBB186_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB186_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 128
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB186_10
	.p2align	4, , 16
.LBB186_9:                              #   in Loop: Header=BB186_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB186_12
.LBB186_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 120
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB186_9
# %bb.11:                               #   in Loop: Header=BB186_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB186_10
.LBB186_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB186_13:                             #   in Loop: Header=BB186_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB186_16
.LBB186_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB186_13
# %bb.15:                               #   in Loop: Header=BB186_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB186_13
.LBB186_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB186_7
	b	.LBB186_8
.Lfunc_end186:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv, .Lfunc_end186-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB187_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB187_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB187_4
# %bb.3:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB187_4:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB187_10
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB187_7
	.p2align	4, , 16
.LBB187_6:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB187_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB187_9
.LBB187_7:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB187_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB187_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB187_6
.LBB187_9:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB187_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB187_12
# %bb.11:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB187_12:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB187_14
# %bb.13:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB187_14:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end187:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev, .Lfunc_end187-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	5
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s0, $a0
	ld.d	$s3, $a0, 0
	ld.d	$s2, $s3, 0
	ld.d	$s1, $s3, 8
	ld.b	$fp, $a0, 8
	ld.d	$s4, $s3, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s4, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB188_33
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	sub.d	$a1, $s1, $s2
	blez	$a1, .LBB188_3
	.p2align	4, , 16
.LBB188_2:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a2, $a1, 1
	ldx.b	$a3, $s2, $a2
	add.d	$a4, $s2, $a2
	slt	$a3, $a3, $a0
	addi.d	$a4, $a4, 1
	nor	$a5, $a2, $zero
	add.d	$a1, $a1, $a5
	maskeqz	$a4, $a4, $a3
	masknez	$a5, $s2, $a3
	maskeqz	$a1, $a1, $a3
	masknez	$a2, $a2, $a3
	or	$a1, $a1, $a2
	or	$s2, $a4, $a5
	bgtz	$a1, .LBB188_2
.LBB188_3:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$s2, $s1, .LBB188_5
# %bb.4:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a1, $s2, 0
	ori	$s1, $zero, 1
	bge	$a0, $a1, .LBB188_32
.LBB188_5:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	addi.d	$fp, $s0, 8
	ld.d	$s4, $s3, 48
	ld.d	$s5, $s3, 56
	ld.b	$s1, $fp, 0
	beq	$s4, $s5, .LBB188_10
# %bb.6:
	addi.d	$s2, $s3, 104
	.p2align	4, , 16
.LBB188_7:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a1, $s4, 0
	ld.b	$a2, $s4, 1
	move	$a0, $s2
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB188_15
# %bb.8:                                #   in Loop: Header=BB188_7 Depth=1
	addi.d	$s4, $s4, 2
	bne	$s4, $s5, .LBB188_7
# %bb.9:                                # %.critedge.loopexit
	ld.bu	$s1, $fp, 0
.LBB188_10:                             # %.critedge
	ld.d	$s2, $s3, 112
	ld.w	$s5, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB188_33
# %bb.11:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s2, 48
	andi	$s4, $s1, 255
	slli.d	$a1, $s4, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s5, $a0
	ori	$s1, $zero, 1
	bnez	$a0, .LBB188_32
# %bb.12:
	slli.d	$a0, $s5, 47
	bgez	$a0, .LBB188_17
# %bb.13:
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB188_16
# %bb.14:
	ld.bu	$a0, $s2, 152
	andi	$a0, $a0, 255
	bne	$s4, $a0, .LBB188_17
	b	.LBB188_32
.LBB188_15:
	ori	$s1, $zero, 1
	b	.LBB188_32
.LBB188_16:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	beq	$s4, $a0, .LBB188_32
.LBB188_17:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread60
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	beq	$a0, $a1, .LBB188_22
# %bb.18:
	ld.d	$a1, $s3, 112
	addi.d	$a3, $s0, 9
	addi.d	$a0, $sp, 16
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp669:                               # EH_LABEL
	addi.d	$a2, $sp, 16
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp670:                               # EH_LABEL
# %bb.19:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$s0, $a0
	ld.d	$a0, $sp, 16
	ld.d	$s2, $s3, 32
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB188_21
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB188_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $s0, .LBB188_32
.LBB188_22:
	ld.d	$s4, $s3, 72
	ld.d	$s5, $s3, 80
	beq	$s4, $s5, .LBB188_31
# %bb.23:                               # %.lr.ph71.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB188_25
	.p2align	4, , 16
.LBB188_24:                             #   in Loop: Header=BB188_25 Depth=1
	ld.bu	$a0, $s2, 152
	andi	$a0, $a0, 255
	beq	$s6, $a0, .LBB188_27
	b	.LBB188_32
	.p2align	4, , 16
.LBB188_25:                             # %.lr.ph71
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 112
	ld.bu	$s6, $fp, 0
	ld.w	$s7, $s4, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB188_33
# %bb.26:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i42
                                        #   in Loop: Header=BB188_25 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s6, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s7, $a0
	beqz	$a0, .LBB188_28
.LBB188_27:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit49.thread
                                        #   in Loop: Header=BB188_25 Depth=1
	addi.d	$s4, $s4, 4
	bne	$s4, $s5, .LBB188_25
	b	.LBB188_31
	.p2align	4, , 16
.LBB188_28:                             #   in Loop: Header=BB188_25 Depth=1
	slli.d	$a0, $s7, 47
	bgez	$a0, .LBB188_32
# %bb.29:                               #   in Loop: Header=BB188_25 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB188_24
# %bb.30:                               #   in Loop: Header=BB188_25 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
	andi	$a0, $a0, 255
	beq	$s6, $a0, .LBB188_27
	b	.LBB188_32
.LBB188_31:
	move	$s1, $zero
.LBB188_32:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	move	$a0, $s1
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB188_33:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB188_34:
.Ltmp671:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB188_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB188_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end188:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end188-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table188:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Lfunc_begin68-.Lfunc_begin68  # >> Call Site 1 <<
	.uleb128 .Ltmp669-.Lfunc_begin68        #   Call between .Lfunc_begin68 and .Ltmp669
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp669-.Lfunc_begin68        # >> Call Site 2 <<
	.uleb128 .Ltmp670-.Ltmp669              #   Call between .Ltmp669 and .Ltmp670
	.uleb128 .Ltmp671-.Lfunc_begin68        #     jumps to .Ltmp671
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp670-.Lfunc_begin68        # >> Call Site 3 <<
	.uleb128 .Lfunc_end188-.Ltmp670         #   Call between .Ltmp670 and .Lfunc_end188
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end68:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
	.p2align	5
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$a4, $a0, 0
	move	$s1, $a3
	move	$fp, $a2
	move	$s0, $a1
	addi.d	$a0, $sp, 8
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB189_5
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 32
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s2, 0
	ld.d	$a2, $a1, 16
	move	$s3, $a0
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	blt	$s3, $s0, .LBB189_3
# %bb.2:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	ori	$a1, $zero, 1
	bge	$fp, $s3, .LBB189_4
.LBB189_3:
	slt	$a1, $a0, $s0
	xori	$a1, $a1, 1
	slt	$a0, $fp, $a0
	xori	$a0, $a0, 1
	and	$a1, $a1, $a0
.LBB189_4:
	move	$a0, $a1
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB189_5:
.Ltmp672:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp673:                               # EH_LABEL
# %bb.6:                                # %.noexc
.LBB189_7:
.Ltmp674:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end189:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc, .Lfunc_end189-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,"aG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE17_M_in_range_icaseEccc,comdat
	.p2align	2, 0x0
GCC_except_table189:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Lfunc_begin69-.Lfunc_begin69  # >> Call Site 1 <<
	.uleb128 .Ltmp672-.Lfunc_begin69        #   Call between .Lfunc_begin69 and .Ltmp672
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp672-.Lfunc_begin69        # >> Call Site 2 <<
	.uleb128 .Ltmp673-.Ltmp672              #   Call between .Ltmp672 and .Ltmp673
	.uleb128 .Ltmp674-.Lfunc_begin69        #     jumps to .Ltmp674
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp673-.Lfunc_begin69        # >> Call Site 3 <<
	.uleb128 .Lfunc_end189-.Ltmp673         #   Call between .Ltmp673 and .Lfunc_end189
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end69:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 128
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end190:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end190-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB191_8
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI191_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI191_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB191_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE)
	b	.LBB191_7
.LBB191_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp675:                               # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp676:                               # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB191_8
.LBB191_5:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
	b	.LBB191_8
.LBB191_6:
	ld.d	$a1, $a1, 0
.LBB191_7:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB191_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB191_9:
.Ltmp677:                               # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end191:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end191-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI191_0:
	.word	.LBB191_2-.LJTI191_0
	.word	.LBB191_6-.LJTI191_0
	.word	.LBB191_3-.LJTI191_0
	.word	.LBB191_5-.LJTI191_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table191:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Lfunc_begin70-.Lfunc_begin70  # >> Call Site 1 <<
	.uleb128 .Ltmp675-.Lfunc_begin70        #   Call between .Lfunc_begin70 and .Ltmp675
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp675-.Lfunc_begin70        # >> Call Site 2 <<
	.uleb128 .Ltmp676-.Ltmp675              #   Call between .Ltmp675 and .Ltmp676
	.uleb128 .Ltmp677-.Lfunc_begin70        #     jumps to .Ltmp677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp676-.Lfunc_begin70        # >> Call Site 3 <<
	.uleb128 .Lfunc_end191-.Ltmp676         #   Call between .Ltmp676 and .Lfunc_end191
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end70:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,"axG",@progbits,_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,comdat
	.hidden	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE # -- Begin function _ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.weak	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.p2align	5
	.type	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE,@function
_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE: # @_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB192_16
# %bb.1:
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB192_3
# %bb.2:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB192_3:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $fp, 48
	beqz	$a0, .LBB192_5
# %bb.4:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB192_5:                              # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB192_11
# %bb.6:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB192_8
	.p2align	4, , 16
.LBB192_7:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB192_8 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB192_10
.LBB192_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB192_7
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB192_8 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB192_7
.LBB192_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 24
.LBB192_11:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB192_13
# %bb.12:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB192_13:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB192_15
# %bb.14:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB192_15:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev.exit
	ori	$a1, $zero, 160
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB192_16:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end192:
	.size	_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE, .Lfunc_end192-_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB193_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB193_3
.LBB193_2:
	move	$s1, $zero
.LBB193_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	blez	$s2, .LBB193_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB193_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp678:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp679:                               # EH_LABEL
# %bb.6:
	ld.d	$a0, $s0, 56
	ld.d	$a1, $s0, 48
	sub.d	$s2, $a0, $a1
	st.d	$zero, $fp, 64
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 48
	beq	$a0, $a1, .LBB193_9
# %bb.7:                                # %_ZNSt15__new_allocatorISt4pairIccEE8allocateEmPKv.exit.i.i.i.i
.Ltmp681:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp682:                               # EH_LABEL
# %bb.8:
	move	$s3, $a0
	b	.LBB193_10
.LBB193_9:
	move	$s3, $zero
.LBB193_10:                             # %.noexc
	st.d	$s3, $fp, 48
	st.d	$s3, $fp, 56
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 64
	ld.d	$a5, $s0, 48
	ld.d	$a0, $s0, 56
	move	$a1, $s3
	beq	$a5, $a0, .LBB193_18
# %bb.11:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a1, $a0, $a5
	addi.d	$a1, $a1, -2
	ori	$a2, $zero, 30
	bltu	$a1, $a2, .LBB193_16
# %bb.12:                               # %.lr.ph.i.i.i.i.preheader
	sub.d	$a2, $s3, $a5
	ori	$a3, $zero, 32
	bltu	$a2, $a3, .LBB193_16
# %bb.13:                               # %vector.ph
	srli.d	$a1, $a1, 1
	addi.d	$a3, $a1, 1
	move	$a4, $a3
	bstrins.d	$a4, $zero, 3, 0
	alsl.d	$a2, $a4, $a5, 1
	alsl.d	$a1, $a4, $s3, 1
	addi.d	$a6, $s3, 16
	addi.d	$a5, $a5, 16
	move	$a7, $a4
	.p2align	4, , 16
.LBB193_14:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a5, -16
	vld	$vr1, $a5, 0
	vst	$vr0, $a6, -16
	vst	$vr1, $a6, 0
	addi.d	$a6, $a6, 32
	addi.d	$a7, $a7, -16
	addi.d	$a5, $a5, 32
	bnez	$a7, .LBB193_14
# %bb.15:                               # %middle.block
	bne	$a3, $a4, .LBB193_17
	b	.LBB193_18
.LBB193_16:
	move	$a2, $a5
	move	$a1, $s3
	.p2align	4, , 16
.LBB193_17:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a3, $a2, 0
	st.h	$a3, $a1, 0
	addi.d	$a2, $a2, 2
	addi.d	$a1, $a1, 2
	bne	$a2, $a0, .LBB193_17
.LBB193_18:                             # %.loopexit
	ld.d	$a0, $s0, 80
	ld.d	$a2, $s0, 72
	st.d	$a1, $fp, 56
	sub.d	$s5, $a0, $a2
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	st.d	$zero, $fp, 88
	beq	$a0, $a2, .LBB193_21
# %bb.19:                               # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp684:                               # EH_LABEL
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp685:                               # EH_LABEL
# %bb.20:
	move	$s4, $a0
	b	.LBB193_22
.LBB193_21:
	move	$s4, $zero
.LBB193_22:                             # %.noexc14
	st.d	$s4, $fp, 72
	st.d	$s4, $fp, 80
	add.d	$a0, $s4, $s5
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	blez	$s1, .LBB193_24
# %bb.23:
	move	$a0, $s4
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s4, $s4, $s1
.LBB193_24:
	st.d	$s4, $fp, 80
	vld	$vr0, $s0, 96
	vst	$vr0, $fp, 96
	vld	$vr0, $s0, 112
	vst	$vr0, $fp, 112
	vld	$vr0, $s0, 128
	vst	$vr0, $fp, 128
	vld	$vr0, $s0, 144
	vst	$vr0, $fp, 144
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB193_25:
.Ltmp686:                               # EH_LABEL
	move	$s0, $a0
	beqz	$s3, .LBB193_28
# %bb.26:
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB193_28
.LBB193_27:
.Ltmp683:                               # EH_LABEL
	move	$s0, $a0
.LBB193_28:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB193_30
.LBB193_29:
.Ltmp680:                               # EH_LABEL
	move	$s0, $a0
.LBB193_30:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB193_32
# %bb.31:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB193_32:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end193:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_, .Lfunc_end193-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table193:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Lfunc_begin71-.Lfunc_begin71  # >> Call Site 1 <<
	.uleb128 .Ltmp678-.Lfunc_begin71        #   Call between .Lfunc_begin71 and .Ltmp678
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp678-.Lfunc_begin71        # >> Call Site 2 <<
	.uleb128 .Ltmp679-.Ltmp678              #   Call between .Ltmp678 and .Ltmp679
	.uleb128 .Ltmp680-.Lfunc_begin71        #     jumps to .Ltmp680
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp681-.Lfunc_begin71        # >> Call Site 3 <<
	.uleb128 .Ltmp682-.Ltmp681              #   Call between .Ltmp681 and .Ltmp682
	.uleb128 .Ltmp683-.Lfunc_begin71        #     jumps to .Ltmp683
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp684-.Lfunc_begin71        # >> Call Site 4 <<
	.uleb128 .Ltmp685-.Ltmp684              #   Call between .Ltmp684 and .Ltmp685
	.uleb128 .Ltmp686-.Lfunc_begin71        #     jumps to .Ltmp686
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp685-.Lfunc_begin71        # >> Call Site 5 <<
	.uleb128 .Lfunc_end193-.Ltmp685         #   Call between .Ltmp685 and .Lfunc_end193
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end71:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a4, $a1, 0
	ld.d	$a1, $a1, 8
	ld.d	$a0, $a0, 112
	move	$s0, $a2
	add.d	$a2, $a4, $a1
	ori	$a3, $zero, 1
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB194_17
# %bb.1:
	beqz	$s0, .LBB194_4
# %bb.2:
	ld.d	$s3, $fp, 80
	ld.d	$a1, $fp, 88
	beq	$s3, $a1, .LBB194_5
# %bb.3:
	bstrpick.d	$a0, $a0, 23, 0
	st.w	$a0, $s3, 0
	ld.d	$a0, $fp, 80
	addi.d	$a0, $a0, 4
	st.d	$a0, $fp, 80
	b	.LBB194_16
.LBB194_4:
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $fp, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB194_16
.LBB194_5:
	move	$s5, $a0
	ld.d	$s0, $fp, 72
	sub.d	$s1, $s3, $s0
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB194_18
# %bb.6:                                # %_ZNKSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE12_M_check_lenEmPKc.exit.i.i
	srai.d	$a0, $s1, 2
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	bstrpick.d	$a0, $s5, 23, 0
	stx.w	$a0, $s2, $s1
	move	$s5, $s2
	beq	$s0, $s3, .LBB194_13
# %bb.7:                                # %.lr.ph.i.i.i.i.i.preheader
	addi.d	$a1, $s1, -4
	ori	$a2, $zero, 28
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a1, $a2, .LBB194_12
# %bb.8:                                # %.lr.ph.i.i.i.i.i.preheader
	sub.d	$a2, $s2, $s0
	ori	$a3, $zero, 32
	move	$s5, $s2
	move	$a0, $s0
	bltu	$a2, $a3, .LBB194_12
# %bb.9:                                # %vector.ph
	srli.d	$a0, $a1, 2
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 62, 3
	slli.d	$a2, $a0, 3
	slli.d	$a0, $a0, 5
	add.d	$s5, $s2, $a0
	add.d	$a0, $s0, $a0
	addi.d	$a3, $s0, 16
	addi.d	$a4, $s2, 16
	move	$a5, $a2
	.p2align	4, , 16
.LBB194_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a3, -16
	vld	$vr1, $a3, 0
	vst	$vr0, $a4, -16
	vst	$vr1, $a4, 0
	addi.d	$a3, $a3, 32
	addi.d	$a5, $a5, -8
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB194_10
# %bb.11:                               # %middle.block
	beq	$a1, $a2, .LBB194_13
	.p2align	4, , 16
.LBB194_12:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a1, $a0, 0
	st.w	$a1, $s5, 0
	addi.d	$a0, $a0, 4
	addi.d	$s5, $s5, 4
	bne	$a0, $s3, .LBB194_12
.LBB194_13:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i.i
	beqz	$s0, .LBB194_15
# %bb.14:                               # %_ZNSt12_Vector_baseINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE13_M_deallocateEPS3_m.exit.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB194_15:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE17_M_realloc_appendIJRKS3_EEEvDpOT_.exit.i
	addi.d	$a0, $s5, 4
	st.d	$s2, $fp, 72
	st.d	$a0, $fp, 80
	alsl.d	$a0, $s4, $s2, 2
	st.d	$a0, $fp, 88
.LBB194_16:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EE9push_backERKS3_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB194_17:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB194_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end194:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb, .Lfunc_end194-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	beq	$s0, $s1, .LBB195_8
# %bb.1:                                # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEEvT_S7_.exit
	sub.d	$a0, $s1, $s0
	clz.d	$a0, $a0
	slli.d	$a0, $a0, 1
	xori	$a2, $a0, 126
	move	$a0, $s0
	move	$a1, $s1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a0, $fp, 8
	beq	$a1, $a0, .LBB195_8
# %bb.2:                                # %.preheader.i.i.i.preheader
	addi.d	$a1, $a1, 1
	.p2align	4, , 16
.LBB195_3:                              # %.preheader.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$a1, $a0, .LBB195_8
# %bb.4:                                #   in Loop: Header=BB195_3 Depth=1
	ld.bu	$a3, $a1, -1
	ld.bu	$a2, $a1, 0
	addi.d	$a1, $a1, 1
	bne	$a3, $a2, .LBB195_3
# %bb.5:                                # %_ZSt15__adjacent_findIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEENS0_5__ops19_Iter_equal_to_iterEET_S9_S9_T0_.exit.i.i
	addi.d	$a2, $a1, -2
	bne	$a1, $a0, .LBB195_14
# %bb.6:                                # %_ZSt6uniqueIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEET_S7_S7_.exit
	addi.d	$a1, $a2, 1
	beq	$a1, $a0, .LBB195_8
.LBB195_7:                              # %_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEES6_ET0_T_S8_S7_.exit.i.i
	st.d	$a1, $fp, 8
.LBB195_8:                              # %_ZNSt6vectorIcSaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS1_EES6_.exit
	move	$s0, $zero
	addi.d	$s1, $fp, 128
	addi.w	$a0, $zero, -8
	lu52i.d	$s2, $a0, 511
	ori	$s3, $zero, 1
	ori	$s4, $zero, 256
	b	.LBB195_10
	.p2align	4, , 16
.LBB195_9:                              #   in Loop: Header=BB195_10 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	beq	$s0, $s4, .LBB195_12
.LBB195_10:                             # =>This Inner Loop Header: Depth=1
	st.d	$fp, $sp, 8
	st.b	$s0, $sp, 16
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.bu	$a3, $fp, 120
	srli.d	$a1, $s0, 3
	and	$a1, $a1, $s2
	add.d	$a1, $s1, $a1
	sll.d	$a2, $s3, $s0
	beq	$a3, $a0, .LBB195_9
# %bb.11:                               #   in Loop: Header=BB195_10 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	addi.d	$s0, $s0, 1
	st.d	$a0, $a1, 0
	bne	$s0, $s4, .LBB195_10
.LBB195_12:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_cacheESt17integral_constantIbLb1EE.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
	.p2align	4, , 16
.LBB195_13:                             #   in Loop: Header=BB195_14 Depth=1
	addi.d	$a1, $a1, 1
	beq	$a1, $a0, .LBB195_16
.LBB195_14:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a4, $a3
	ld.bu	$a3, $a1, 0
	beq	$a4, $a3, .LBB195_13
# %bb.15:                               #   in Loop: Header=BB195_14 Depth=1
	addi.d	$a4, $a2, 1
	st.b	$a3, $a2, 1
	move	$a2, $a4
	b	.LBB195_13
.LBB195_16:                             # %._crit_edge.i.i.loopexit
	ld.d	$a0, $fp, 8
	addi.d	$a1, $a2, 1
	bne	$a1, $a0, .LBB195_7
	b	.LBB195_8
.Lfunc_end195:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv, .Lfunc_end195-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB196_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_2:                              # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit
	ld.d	$a0, $fp, 48
	ld.d	$s0, $fp, 56
	beq	$a0, $s0, .LBB196_10
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 48
	b	.LBB196_5
	.p2align	4, , 16
.LBB196_4:                              # %_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_.exit.i.i
                                        #   in Loop: Header=BB196_5 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 64
	beq	$a0, $s0, .LBB196_9
.LBB196_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB196_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB196_5 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i.i.i.i
                                        #   in Loop: Header=BB196_5 Depth=1
	ld.d	$a0, $s1, -48
	addi.d	$a1, $s1, -32
	beq	$a1, $a0, .LBB196_4
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i.i.i.i
                                        #   in Loop: Header=BB196_5 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB196_4
.LBB196_9:                              # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 48
.LBB196_10:                             # %_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_EvT_S9_RSaIT0_E.exit.i
	beqz	$a0, .LBB196_12
# %bb.11:
	ld.d	$a1, $fp, 64
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_12:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev.exit
	ld.d	$a0, $fp, 24
	ld.d	$s0, $fp, 32
	beq	$a0, $s0, .LBB196_18
# %bb.13:                               # %.lr.ph.i.i3.preheader
	addi.d	$s1, $a0, 16
	b	.LBB196_15
	.p2align	4, , 16
.LBB196_14:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB196_15 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB196_17
.LBB196_15:                             # %.lr.ph.i.i3
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB196_14
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB196_15 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB196_14
.LBB196_17:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 24
.LBB196_18:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB196_20
# %bb.19:
	ld.d	$a1, $fp, 40
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB196_20:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB196_22
# %bb.21:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB196_22:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end196:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev, .Lfunc_end196-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"axG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.hidden	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv # -- Begin function _ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.weak	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.p2align	5
	.type	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,@function
_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv: # @_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
.Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception72
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s0, $a0
	ld.d	$s3, $a0, 0
	ld.d	$s2, $s3, 0
	ld.d	$s1, $s3, 8
	ld.b	$fp, $a0, 8
	ld.d	$s4, $s3, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s4, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB197_44
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $fp
	jirl	$ra, $a2, 0
	sub.d	$a1, $s1, $s2
	blez	$a1, .LBB197_3
	.p2align	4, , 16
.LBB197_2:                              # %_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a2, $a1, 1
	ldx.b	$a3, $s2, $a2
	add.d	$a4, $s2, $a2
	slt	$a3, $a3, $a0
	addi.d	$a4, $a4, 1
	nor	$a5, $a2, $zero
	add.d	$a1, $a1, $a5
	maskeqz	$a4, $a4, $a3
	masknez	$a5, $s2, $a3
	maskeqz	$a1, $a1, $a3
	masknez	$a2, $a2, $a3
	or	$a1, $a1, $a2
	or	$s2, $a4, $a5
	bgtz	$a1, .LBB197_2
.LBB197_3:                              # %_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcNS0_5__ops14_Iter_less_valEET_SA_SA_RKT0_T1_.exit.i
	beq	$s2, $s1, .LBB197_5
# %bb.4:                                # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit
	ld.b	$a1, $s2, 0
	ori	$s1, $zero, 1
	bge	$a0, $a1, .LBB197_41
.LBB197_5:                              # %_ZSt13binary_searchIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEcEbT_S8_RKT0_.exit.thread
	addi.d	$fp, $s0, 8
	ld.b	$a2, $fp, 0
	addi.d	$s1, $s3, 104
	addi.d	$s4, $sp, 64
	st.d	$s4, $sp, 48
	addi.d	$a0, $sp, 48
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 48
	ld.d	$a0, $sp, 56
	ld.d	$a1, $s1, 0
	add.d	$a3, $a2, $a0
.Ltmp687:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp688:                               # EH_LABEL
# %bb.6:
	ld.d	$a0, $sp, 48
	beq	$a0, $s4, .LBB197_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB197_8:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_transformEc.exit
	ld.d	$s2, $s3, 48
	ld.d	$s5, $s3, 56
	beq	$s2, $s5, .LBB197_12
	.p2align	4, , 16
.LBB197_9:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $s2, 32
	ld.d	$a3, $sp, 16
	ld.b	$a1, $a0, 0
	ld.b	$a2, $a2, 0
	ld.b	$a3, $a3, 0
.Ltmp690:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc)
	jirl	$ra, $ra, 0
.Ltmp691:                               # EH_LABEL
# %bb.10:                               # %_ZNKSt8__detail16_RegexTranslatorINSt7__cxx1112regex_traitsIcEELb1ELb1EE14_M_match_rangeERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEESB_SB_.exit
                                        #   in Loop: Header=BB197_9 Depth=1
	bnez	$a0, .LBB197_17
# %bb.11:                               #   in Loop: Header=BB197_9 Depth=1
	addi.d	$s2, $s2, 64
	bne	$s2, $s5, .LBB197_9
.LBB197_12:                             # %.critedge
	ld.d	$s1, $s3, 112
	ld.bu	$s5, $fp, 0
	ld.w	$s6, $s3, 96
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB197_45
# %bb.13:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s5, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s6, $a0
	ori	$s1, $zero, 1
	bnez	$a0, .LBB197_39
# %bb.14:
	slli.d	$a0, $s6, 47
	bgez	$a0, .LBB197_21
# %bb.15:
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB197_18
# %bb.16:
	ld.bu	$a0, $s2, 152
	b	.LBB197_20
.LBB197_17:
	ori	$s1, $zero, 1
	b	.LBB197_39
.LBB197_18:
.Ltmp693:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp694:                               # EH_LABEL
# %bb.19:                               # %.noexc44
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp695:                               # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp696:                               # EH_LABEL
.LBB197_20:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	andi	$a0, $a0, 255
	beq	$s5, $a0, .LBB197_39
.LBB197_21:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread78
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
	beq	$a0, $a1, .LBB197_27
# %bb.22:
	ld.d	$a1, $s3, 112
	addi.d	$a3, $s0, 9
.Ltmp697:                               # EH_LABEL
	addi.d	$a0, $sp, 48
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
.Ltmp698:                               # EH_LABEL
# %bb.23:
	ld.d	$a0, $s3, 24
	ld.d	$a1, $s3, 32
.Ltmp700:                               # EH_LABEL
	addi.d	$a2, $sp, 48
	pcaddu18i	$ra, %call36(_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_)
	jirl	$ra, $ra, 0
.Ltmp701:                               # EH_LABEL
# %bb.24:                               # %_ZSt4findIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ET_SE_SE_RKT0_.exit
	move	$s0, $a0
	ld.d	$a0, $sp, 48
	ld.d	$s2, $s3, 32
	beq	$a0, $s4, .LBB197_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB197_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bne	$s2, $s0, .LBB197_39
.LBB197_27:
	ld.d	$s4, $s3, 72
	ld.d	$s5, $s3, 80
	beq	$s4, $s5, .LBB197_38
# %bb.28:                               # %.lr.ph89.preheader
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$s0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	b	.LBB197_32
	.p2align	4, , 16
.LBB197_29:                             #   in Loop: Header=BB197_32 Depth=1
	ld.bu	$a0, $s2, 152
.LBB197_30:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61
                                        #   in Loop: Header=BB197_32 Depth=1
	andi	$a0, $a0, 255
	bne	$s6, $a0, .LBB197_39
.LBB197_31:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit61.thread
                                        #   in Loop: Header=BB197_32 Depth=1
	addi.d	$s4, $s4, 4
	beq	$s4, $s5, .LBB197_38
.LBB197_32:                             # %.lr.ph89
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s3, 112
	ld.bu	$s6, $fp, 0
	ld.w	$s7, $s4, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB197_42
# %bb.33:                               # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i51
                                        #   in Loop: Header=BB197_32 Depth=1
	ld.d	$a0, $s2, 48
	slli.d	$a1, $s6, 1
	ldx.hu	$a0, $a0, $a1
	and	$a0, $s7, $a0
	bnez	$a0, .LBB197_31
# %bb.34:                               #   in Loop: Header=BB197_32 Depth=1
	slli.d	$a0, $s7, 47
	bgez	$a0, .LBB197_39
# %bb.35:                               #   in Loop: Header=BB197_32 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB197_29
# %bb.36:                               #   in Loop: Header=BB197_32 Depth=1
.Ltmp703:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp704:                               # EH_LABEL
# %bb.37:                               # %.noexc59
                                        #   in Loop: Header=BB197_32 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp705:                               # EH_LABEL
	ori	$a1, $zero, 95
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp706:                               # EH_LABEL
	b	.LBB197_30
.LBB197_38:
	move	$s1, $zero
.LBB197_39:                             # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit.thread
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB197_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i62
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB197_41:
	move	$a0, $s1
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB197_42:
.Ltmp708:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp709:                               # EH_LABEL
# %bb.43:                               # %.noexc58
.LBB197_44:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB197_45:
.Ltmp711:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp712:                               # EH_LABEL
# %bb.46:                               # %.noexc
.LBB197_47:
.Ltmp702:                               # EH_LABEL
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s4, .LBB197_57
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB197_57
.LBB197_49:
.Ltmp699:                               # EH_LABEL
	b	.LBB197_56
.LBB197_50:                             # %.loopexit
.Ltmp707:                               # EH_LABEL
	b	.LBB197_56
.LBB197_51:
.Ltmp713:                               # EH_LABEL
	b	.LBB197_56
.LBB197_52:
.Ltmp689:                               # EH_LABEL
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s4, .LBB197_60
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB197_59
.LBB197_54:                             # %.loopexit.split-lp
.Ltmp710:                               # EH_LABEL
	b	.LBB197_56
.LBB197_55:
.Ltmp692:                               # EH_LABEL
.LBB197_56:
	move	$fp, $a0
.LBB197_57:
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB197_60
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i65
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
.LBB197_59:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB197_60:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end197:
	.size	_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv, .Lfunc_end197-_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,"aG",@progbits,_ZZNKSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_applyEcSt17integral_constantIbLb0EEENKUlvE_clEv,comdat
	.p2align	2, 0x0
GCC_except_table197:
.Lexception72:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end72-.Lcst_begin72
.Lcst_begin72:
	.uleb128 .Lfunc_begin72-.Lfunc_begin72  # >> Call Site 1 <<
	.uleb128 .Ltmp687-.Lfunc_begin72        #   Call between .Lfunc_begin72 and .Ltmp687
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp687-.Lfunc_begin72        # >> Call Site 2 <<
	.uleb128 .Ltmp688-.Ltmp687              #   Call between .Ltmp687 and .Ltmp688
	.uleb128 .Ltmp689-.Lfunc_begin72        #     jumps to .Ltmp689
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp688-.Lfunc_begin72        # >> Call Site 3 <<
	.uleb128 .Ltmp690-.Ltmp688              #   Call between .Ltmp688 and .Ltmp690
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp690-.Lfunc_begin72        # >> Call Site 4 <<
	.uleb128 .Ltmp691-.Ltmp690              #   Call between .Ltmp690 and .Ltmp691
	.uleb128 .Ltmp692-.Lfunc_begin72        #     jumps to .Ltmp692
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp691-.Lfunc_begin72        # >> Call Site 5 <<
	.uleb128 .Ltmp693-.Ltmp691              #   Call between .Ltmp691 and .Ltmp693
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp693-.Lfunc_begin72        # >> Call Site 6 <<
	.uleb128 .Ltmp696-.Ltmp693              #   Call between .Ltmp693 and .Ltmp696
	.uleb128 .Ltmp713-.Lfunc_begin72        #     jumps to .Ltmp713
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp697-.Lfunc_begin72        # >> Call Site 7 <<
	.uleb128 .Ltmp698-.Ltmp697              #   Call between .Ltmp697 and .Ltmp698
	.uleb128 .Ltmp699-.Lfunc_begin72        #     jumps to .Ltmp699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp700-.Lfunc_begin72        # >> Call Site 8 <<
	.uleb128 .Ltmp701-.Ltmp700              #   Call between .Ltmp700 and .Ltmp701
	.uleb128 .Ltmp702-.Lfunc_begin72        #     jumps to .Ltmp702
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp701-.Lfunc_begin72        # >> Call Site 9 <<
	.uleb128 .Ltmp703-.Ltmp701              #   Call between .Ltmp701 and .Ltmp703
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp703-.Lfunc_begin72        # >> Call Site 10 <<
	.uleb128 .Ltmp706-.Ltmp703              #   Call between .Ltmp703 and .Ltmp706
	.uleb128 .Ltmp707-.Lfunc_begin72        #     jumps to .Ltmp707
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp706-.Lfunc_begin72        # >> Call Site 11 <<
	.uleb128 .Ltmp708-.Ltmp706              #   Call between .Ltmp706 and .Ltmp708
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp708-.Lfunc_begin72        # >> Call Site 12 <<
	.uleb128 .Ltmp709-.Ltmp708              #   Call between .Ltmp708 and .Ltmp709
	.uleb128 .Ltmp710-.Lfunc_begin72        #     jumps to .Ltmp710
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp709-.Lfunc_begin72        # >> Call Site 13 <<
	.uleb128 .Ltmp711-.Ltmp709              #   Call between .Ltmp709 and .Ltmp711
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp711-.Lfunc_begin72        # >> Call Site 14 <<
	.uleb128 .Ltmp712-.Ltmp711              #   Call between .Ltmp711 and .Ltmp712
	.uleb128 .Ltmp713-.Lfunc_begin72        #     jumps to .Ltmp713
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp712-.Lfunc_begin72        # >> Call Site 15 <<
	.uleb128 .Lfunc_end197-.Ltmp712         #   Call between .Ltmp712 and .Lfunc_end197
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end72:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,"axG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,comdat
	.hidden	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc # -- Begin function _ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
	.weak	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
	.p2align	5
	.type	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,@function
_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc: # @_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
.Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception73
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$a4, $a0, 0
	move	$s1, $a3
	move	$fp, $a2
	move	$s0, $a1
	addi.d	$a0, $sp, 8
	move	$a1, $a4
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB198_5
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 32
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s2, 0
	ld.d	$a2, $a1, 16
	move	$s3, $a0
	move	$a0, $s2
	move	$a1, $s1
	jirl	$ra, $a2, 0
	blt	$s3, $s0, .LBB198_3
# %bb.2:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	ori	$a1, $zero, 1
	bge	$fp, $s3, .LBB198_4
.LBB198_3:
	slt	$a1, $a0, $s0
	xori	$a1, $a1, 1
	slt	$a0, $fp, $a0
	xori	$a0, $a0, 1
	and	$a1, $a1, $a0
.LBB198_4:
	move	$a0, $a1
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB198_5:
.Ltmp714:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp715:                               # EH_LABEL
# %bb.6:                                # %.noexc
.LBB198_7:
.Ltmp716:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end198:
	.size	_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc, .Lfunc_end198-_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,"aG",@progbits,_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE17_M_in_range_icaseEccc,comdat
	.p2align	2, 0x0
GCC_except_table198:
.Lexception73:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end73-.Lcst_begin73
.Lcst_begin73:
	.uleb128 .Lfunc_begin73-.Lfunc_begin73  # >> Call Site 1 <<
	.uleb128 .Ltmp714-.Lfunc_begin73        #   Call between .Lfunc_begin73 and .Ltmp714
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp714-.Lfunc_begin73        # >> Call Site 2 <<
	.uleb128 .Ltmp715-.Ltmp714              #   Call between .Ltmp714 and .Ltmp715
	.uleb128 .Ltmp716-.Lfunc_begin73        #     jumps to .Ltmp716
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp715-.Lfunc_begin73        # >> Call Site 3 <<
	.uleb128 .Lfunc_end198-.Ltmp715         #   Call between .Ltmp715 and .Lfunc_end198
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end73:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_startproc
# %bb.0:
	ld.bu	$a1, $a1, 0
	ld.d	$a0, $a0, 0
	srli.d	$a2, $a1, 3
	andi	$a2, $a2, 24
	add.d	$a0, $a0, $a2
	ld.d	$a0, $a0, 128
	srl.d	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ret
.Lfunc_end199:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc, .Lfunc_end199-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"axG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.hidden	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation # -- Begin function _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.weak	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.p2align	5
	.type	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation: # @_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
.Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception74
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB200_9
# %bb.1:
	slli.d	$a2, $a2, 2
	pcalau12i	$a3, %pc_hi20(.LJTI200_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI200_0)
	ldx.w	$a2, $a3, $a2
	add.d	$a2, $a3, $a2
	jr	$a2
.LBB200_2:
	pcalau12i	$a1, %pc_hi20(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
	addi.d	$a1, $a1, %pc_lo12(_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE)
	b	.LBB200_8
.LBB200_3:
	move	$s1, $a0
	ld.d	$s0, $a1, 0
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp717:                               # EH_LABEL
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp718:                               # EH_LABEL
# %bb.4:                                # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE15_M_init_functorIRKS6_EEvRSt9_Any_dataOT_.exit.i
	st.d	$fp, $s1, 0
	b	.LBB200_9
.LBB200_5:
	ld.d	$fp, $a0, 0
	beqz	$fp, .LBB200_9
# %bb.6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB200_9
.LBB200_7:
	ld.d	$a1, $a1, 0
.LBB200_8:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	st.d	$a1, $a0, 0
.LBB200_9:                              # %_ZNSt14_Function_base13_Base_managerINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation.exit
	move	$a0, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB200_10:
.Ltmp719:                               # EH_LABEL
	move	$s0, $a0
	ori	$a1, $zero, 160
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end200:
	.size	_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation, .Lfunc_end200-_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.cfi_endproc
	.section	.rodata._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
.LJTI200_0:
	.word	.LBB200_2-.LJTI200_0
	.word	.LBB200_7-.LJTI200_0
	.word	.LBB200_3-.LJTI200_0
	.word	.LBB200_5-.LJTI200_0
	.section	.gcc_except_table._ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,"aG",@progbits,_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation,comdat
	.p2align	2, 0x0
GCC_except_table200:
.Lexception74:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end74-.Lcst_begin74
.Lcst_begin74:
	.uleb128 .Lfunc_begin74-.Lfunc_begin74  # >> Call Site 1 <<
	.uleb128 .Ltmp717-.Lfunc_begin74        #   Call between .Lfunc_begin74 and .Ltmp717
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp717-.Lfunc_begin74        # >> Call Site 2 <<
	.uleb128 .Ltmp718-.Ltmp717              #   Call between .Ltmp717 and .Ltmp718
	.uleb128 .Ltmp719-.Lfunc_begin74        #     jumps to .Ltmp719
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp718-.Lfunc_begin74        # >> Call Site 3 <<
	.uleb128 .Lfunc_end200-.Ltmp718         #   Call between .Ltmp718 and .Lfunc_end200
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end74:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_ # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
.Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception75
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s0, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB201_2
# %bb.1:                                # %_ZNSt15__new_allocatorIcE8allocateEmPKv.exit.i.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	b	.LBB201_3
.LBB201_2:
	move	$s1, $zero
.LBB201_3:
	st.d	$s1, $fp, 0
	st.d	$s1, $fp, 8
	add.d	$a0, $s1, $s2
	st.d	$a0, $fp, 16
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s0, 8
	sub.d	$s2, $a0, $a1
	blez	$s2, .LBB201_5
# %bb.4:
	move	$a0, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s1, $s1, $s2
.LBB201_5:                              # %_ZNSt6vectorIcSaIcEEC2ERKS1_.exit
	st.d	$s1, $fp, 8
	addi.d	$s1, $fp, 24
	addi.d	$a1, $s0, 24
.Ltmp720:                               # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp721:                               # EH_LABEL
# %bb.6:
	addi.d	$s3, $fp, 48
	addi.d	$a1, $s0, 48
.Ltmp723:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EEC2ERKS9_)
	jirl	$ra, $ra, 0
.Ltmp724:                               # EH_LABEL
# %bb.7:
	ld.d	$a0, $s0, 80
	ld.d	$a1, $s0, 72
	sub.d	$s4, $a0, $a1
	st.d	$zero, $fp, 88
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $fp, 72
	beq	$a0, $a1, .LBB201_10
# %bb.8:                                # %_ZNSt15__new_allocatorINSt7__cxx1112regex_traitsIcE10_RegexMaskEE8allocateEmPKv.exit.i.i.i.i
.Ltmp726:                               # EH_LABEL
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp727:                               # EH_LABEL
# %bb.9:
	move	$s2, $a0
	b	.LBB201_11
.LBB201_10:
	move	$s2, $zero
.LBB201_11:                             # %.noexc
	st.d	$s2, $fp, 72
	st.d	$s2, $fp, 80
	add.d	$a0, $s2, $s4
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s1, $a0, $a1
	blez	$s1, .LBB201_13
# %bb.12:
	move	$a0, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s2, $s2, $s1
.LBB201_13:
	st.d	$s2, $fp, 80
	vld	$vr0, $s0, 96
	vst	$vr0, $fp, 96
	vld	$vr0, $s0, 112
	vst	$vr0, $fp, 112
	vld	$vr0, $s0, 128
	vst	$vr0, $fp, 128
	vld	$vr0, $s0, 144
	vst	$vr0, $fp, 144
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB201_14:
.Ltmp728:                               # EH_LABEL
	move	$s0, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB201_16
.LBB201_15:
.Ltmp725:                               # EH_LABEL
	move	$s0, $a0
.LBB201_16:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB201_18
.LBB201_17:
.Ltmp722:                               # EH_LABEL
	move	$s0, $a0
.LBB201_18:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB201_20
# %bb.19:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB201_20:                             # %_ZNSt6vectorIcSaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end201:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_, .Lfunc_end201-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEC2ERKS4_,comdat
	.p2align	2, 0x0
GCC_except_table201:
.Lexception75:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end75-.Lcst_begin75
.Lcst_begin75:
	.uleb128 .Lfunc_begin75-.Lfunc_begin75  # >> Call Site 1 <<
	.uleb128 .Ltmp720-.Lfunc_begin75        #   Call between .Lfunc_begin75 and .Ltmp720
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp720-.Lfunc_begin75        # >> Call Site 2 <<
	.uleb128 .Ltmp721-.Ltmp720              #   Call between .Ltmp720 and .Ltmp721
	.uleb128 .Ltmp722-.Lfunc_begin75        #     jumps to .Ltmp722
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp723-.Lfunc_begin75        # >> Call Site 3 <<
	.uleb128 .Ltmp724-.Ltmp723              #   Call between .Ltmp723 and .Ltmp724
	.uleb128 .Ltmp725-.Lfunc_begin75        #     jumps to .Ltmp725
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp726-.Lfunc_begin75        # >> Call Site 4 <<
	.uleb128 .Ltmp727-.Ltmp726              #   Call between .Ltmp726 and .Ltmp727
	.uleb128 .Ltmp728-.Lfunc_begin75        #     jumps to .Ltmp728
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp727-.Lfunc_begin75        # >> Call Site 5 <<
	.uleb128 .Lfunc_end201-.Ltmp727         #   Call between .Ltmp727 and .Lfunc_end201
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end75:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb
.Lfunc_begin76:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception76
# %bb.0:
	addi.d	$sp, $sp, -320
	.cfi_def_cfa_offset 320
	st.d	$ra, $sp, 312                   # 8-byte Folded Spill
	st.d	$fp, $sp, 304                   # 8-byte Folded Spill
	st.d	$s0, $sp, 296                   # 8-byte Folded Spill
	st.d	$s1, $sp, 288                   # 8-byte Folded Spill
	st.d	$s2, $sp, 280                   # 8-byte Folded Spill
	st.d	$s3, $sp, 272                   # 8-byte Folded Spill
	st.d	$s4, $sp, 264                   # 8-byte Folded Spill
	st.d	$s5, $sp, 256                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	st.b	$s0, $sp, 208
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 216
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 232
	st.h	$zero, $sp, 94
.Ltmp729:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp730:                               # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB202_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB202_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 94
	st.b	$s0, $sp, 95
	b	.LBB202_11
.LBB202_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB202_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp731:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp732:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB202_46
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB202_48
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB202_47
# %bb.9:
	bnez	$a1, .LBB202_3
# %bb.10:
.Ltmp737:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp738:                               # EH_LABEL
	b	.LBB202_3
	.p2align	4, , 16
.LBB202_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp739:                               # EH_LABEL
	addi.d	$a1, $sp, 94
	addi.d	$a2, $sp, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp740:                               # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB202_11 Depth=1
	bnez	$a0, .LBB202_11
# %bb.13:
	ld.bu	$a0, $sp, 94
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB202_23
# %bb.14:
	ld.d	$s4, $sp, 104
	ld.d	$a0, $sp, 112
	ld.bu	$s5, $sp, 95
	beq	$s4, $a0, .LBB202_16
# %bb.15:
	st.b	$s5, $s4, 0
	ld.d	$a0, $sp, 104
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 104
	b	.LBB202_23
.LBB202_16:
	ld.d	$s0, $sp, 96
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB202_49
# %bb.17:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
.Ltmp742:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp743:                               # EH_LABEL
# %bb.18:                               # %.noexc11
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB202_20
# %bb.19:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB202_20:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB202_22
# %bb.21:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB202_22:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $sp, 96
	st.d	$a0, $sp, 104
	add.d	$a0, $s3, $s2
	st.d	$a0, $sp, 112
.LBB202_23:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE11_M_add_charEc.exit
.Ltmp744:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp745:                               # EH_LABEL
# %bb.24:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 32
	vst	$vr0, $sp, 48
.Ltmp746:                               # EH_LABEL
	ori	$a0, $zero, 152
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp747:                               # EH_LABEL
# %bb.25:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	ld.d	$a1, $sp, 136
	st.d	$zero, $sp, 112
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	st.d	$a1, $a0, 40
	vld	$vr0, $sp, 144
	ld.d	$a1, $sp, 160
	vst	$vr1, $sp, 120
	st.d	$zero, $sp, 136
	vst	$vr0, $a0, 48
	st.d	$a1, $a0, 64
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vld	$vr0, $sp, 224
	st.d	$a1, $a0, 88
	vst	$vr1, $sp, 168
	ld.d	$a1, $sp, 240
	vst	$vr0, $a0, 128
	vld	$vr0, $sp, 208
	vld	$vr1, $sp, 192
	st.d	$zero, $sp, 184
	st.d	$a1, $a0, 144
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 32
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 56
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 48
.Ltmp749:                               # EH_LABEL
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp750:                               # EH_LABEL
# %bb.26:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 64
	st.d	$a0, $sp, 72
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 80
	beq	$a1, $a2, .LBB202_28
# %bb.27:
	ld.d	$a0, $sp, 80
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 64
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB202_29
.LBB202_28:
.Ltmp751:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp752:                               # EH_LABEL
.LBB202_29:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB202_31
# %bb.30:
.Ltmp757:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp758:                               # EH_LABEL
.LBB202_31:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 168
	beqz	$a0, .LBB202_33
# %bb.32:
	ld.d	$a1, $sp, 184
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB202_33:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 144
	beqz	$a0, .LBB202_35
# %bb.34:
	ld.d	$a1, $sp, 160
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB202_35:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 120
	ld.d	$fp, $sp, 128
	beq	$a0, $fp, .LBB202_41
# %bb.36:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB202_38
	.p2align	4, , 16
.LBB202_37:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB202_38 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB202_40
.LBB202_38:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB202_37
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB202_38 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB202_37
.LBB202_40:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 120
.LBB202_41:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB202_43
# %bb.42:
	ld.d	$a1, $sp, 136
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB202_43:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB202_45
# %bb.44:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB202_45:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev.exit
	ld.d	$s5, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 296                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 304                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 312                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 320
	ret
.LBB202_46:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB202_3
.LBB202_47:
.Ltmp733:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp734:                               # EH_LABEL
	b	.LBB202_3
.LBB202_48:
.Ltmp735:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp736:                               # EH_LABEL
	b	.LBB202_3
.LBB202_49:
.Ltmp760:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp761:                               # EH_LABEL
# %bb.50:                               # %.noexc10
.LBB202_51:
.Ltmp759:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB202_52:
.Ltmp748:                               # EH_LABEL
	b	.LBB202_58
.LBB202_53:
.Ltmp753:                               # EH_LABEL
	ld.d	$a3, $sp, 48
	move	$fp, $a0
	beqz	$a3, .LBB202_59
# %bb.54:
.Ltmp754:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp755:                               # EH_LABEL
	b	.LBB202_59
.LBB202_55:
.Ltmp756:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB202_56:                             # %.loopexit.split-lp
.Ltmp762:                               # EH_LABEL
	b	.LBB202_58
.LBB202_57:                             # %.loopexit
.Ltmp741:                               # EH_LABEL
.LBB202_58:
	move	$fp, $a0
.LBB202_59:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end202:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb, .Lfunc_end202-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb0EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table202:
.Lexception76:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase36-.Lttbaseref36
.Lttbaseref36:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end76-.Lcst_begin76
.Lcst_begin76:
	.uleb128 .Lfunc_begin76-.Lfunc_begin76  # >> Call Site 1 <<
	.uleb128 .Ltmp729-.Lfunc_begin76        #   Call between .Lfunc_begin76 and .Ltmp729
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp729-.Lfunc_begin76        # >> Call Site 2 <<
	.uleb128 .Ltmp738-.Ltmp729              #   Call between .Ltmp729 and .Ltmp738
	.uleb128 .Ltmp762-.Lfunc_begin76        #     jumps to .Ltmp762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp739-.Lfunc_begin76        # >> Call Site 3 <<
	.uleb128 .Ltmp740-.Ltmp739              #   Call between .Ltmp739 and .Ltmp740
	.uleb128 .Ltmp741-.Lfunc_begin76        #     jumps to .Ltmp741
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp742-.Lfunc_begin76        # >> Call Site 4 <<
	.uleb128 .Ltmp743-.Ltmp742              #   Call between .Ltmp742 and .Ltmp743
	.uleb128 .Ltmp762-.Lfunc_begin76        #     jumps to .Ltmp762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp743-.Lfunc_begin76        # >> Call Site 5 <<
	.uleb128 .Ltmp744-.Ltmp743              #   Call between .Ltmp743 and .Ltmp744
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp744-.Lfunc_begin76        # >> Call Site 6 <<
	.uleb128 .Ltmp745-.Ltmp744              #   Call between .Ltmp744 and .Ltmp745
	.uleb128 .Ltmp762-.Lfunc_begin76        #     jumps to .Ltmp762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp746-.Lfunc_begin76        # >> Call Site 7 <<
	.uleb128 .Ltmp747-.Ltmp746              #   Call between .Ltmp746 and .Ltmp747
	.uleb128 .Ltmp748-.Lfunc_begin76        #     jumps to .Ltmp748
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp749-.Lfunc_begin76        # >> Call Site 8 <<
	.uleb128 .Ltmp752-.Ltmp749              #   Call between .Ltmp749 and .Ltmp752
	.uleb128 .Ltmp753-.Lfunc_begin76        #     jumps to .Ltmp753
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp757-.Lfunc_begin76        # >> Call Site 9 <<
	.uleb128 .Ltmp758-.Ltmp757              #   Call between .Ltmp757 and .Ltmp758
	.uleb128 .Ltmp759-.Lfunc_begin76        #     jumps to .Ltmp759
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp758-.Lfunc_begin76        # >> Call Site 10 <<
	.uleb128 .Ltmp733-.Ltmp758              #   Call between .Ltmp758 and .Ltmp733
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp733-.Lfunc_begin76        # >> Call Site 11 <<
	.uleb128 .Ltmp761-.Ltmp733              #   Call between .Ltmp733 and .Ltmp761
	.uleb128 .Ltmp762-.Lfunc_begin76        #     jumps to .Ltmp762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp761-.Lfunc_begin76        # >> Call Site 12 <<
	.uleb128 .Ltmp754-.Ltmp761              #   Call between .Ltmp761 and .Ltmp754
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp754-.Lfunc_begin76        # >> Call Site 13 <<
	.uleb128 .Ltmp755-.Ltmp754              #   Call between .Ltmp754 and .Ltmp755
	.uleb128 .Ltmp756-.Lfunc_begin76        #     jumps to .Ltmp756
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp755-.Lfunc_begin76        # >> Call Site 14 <<
	.uleb128 .Lfunc_end202-.Ltmp755         #   Call between .Ltmp755 and .Lfunc_end202
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end76:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase36:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb
.Lfunc_begin77:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception77
# %bb.0:
	addi.d	$sp, $sp, -320
	.cfi_def_cfa_offset 320
	st.d	$ra, $sp, 312                   # 8-byte Folded Spill
	st.d	$fp, $sp, 304                   # 8-byte Folded Spill
	st.d	$s0, $sp, 296                   # 8-byte Folded Spill
	st.d	$s1, $sp, 288                   # 8-byte Folded Spill
	st.d	$s2, $sp, 280                   # 8-byte Folded Spill
	st.d	$s3, $sp, 272                   # 8-byte Folded Spill
	st.d	$s4, $sp, 264                   # 8-byte Folded Spill
	st.d	$s5, $sp, 256                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	st.d	$s1, $sp, 208
	st.b	$s0, $sp, 216
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 224
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 240
	st.h	$zero, $sp, 94
.Ltmp763:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp764:                               # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB203_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB203_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 94
	st.b	$s0, $sp, 95
	b	.LBB203_11
.LBB203_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB203_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp765:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp766:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB203_32
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB203_34
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB203_33
# %bb.9:
	bnez	$a1, .LBB203_3
# %bb.10:
.Ltmp771:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp772:                               # EH_LABEL
	b	.LBB203_3
	.p2align	4, , 16
.LBB203_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp773:                               # EH_LABEL
	addi.d	$a1, $sp, 94
	addi.d	$a2, $sp, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp774:                               # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB203_11 Depth=1
	bnez	$a0, .LBB203_11
# %bb.13:
	ld.bu	$a0, $sp, 94
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB203_23
# %bb.14:
	ld.d	$s4, $sp, 104
	ld.d	$a0, $sp, 112
	ld.bu	$s5, $sp, 95
	beq	$s4, $a0, .LBB203_16
# %bb.15:
	st.b	$s5, $s4, 0
	ld.d	$a0, $sp, 104
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 104
	b	.LBB203_23
.LBB203_16:
	ld.d	$s0, $sp, 96
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB203_35
# %bb.17:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
.Ltmp776:                               # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp777:                               # EH_LABEL
# %bb.18:                               # %.noexc11
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB203_20
# %bb.19:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB203_20:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB203_22
# %bb.21:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB203_22:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $sp, 96
	st.d	$a0, $sp, 104
	add.d	$a0, $s3, $s2
	st.d	$a0, $sp, 112
.LBB203_23:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE11_M_add_charEc.exit
.Ltmp778:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp779:                               # EH_LABEL
# %bb.24:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 32
	vst	$vr0, $sp, 48
.Ltmp780:                               # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp781:                               # EH_LABEL
# %bb.25:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	st.d	$zero, $sp, 112
	ld.d	$a1, $sp, 136
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	vld	$vr0, $sp, 144
	st.d	$a1, $a0, 40
	vst	$vr1, $sp, 120
	ld.d	$a1, $sp, 160
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 136
	st.d	$a1, $a0, 64
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vst	$vr1, $sp, 168
	vld	$vr0, $sp, 240
	vld	$vr1, $sp, 224
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr0, $a0, 144
	vst	$vr1, $a0, 128
	vld	$vr0, $sp, 208
	vld	$vr1, $sp, 192
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 184
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 32
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 56
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 48
.Ltmp783:                               # EH_LABEL
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp784:                               # EH_LABEL
# %bb.26:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 64
	st.d	$a0, $sp, 72
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 80
	beq	$a1, $a2, .LBB203_28
# %bb.27:
	ld.d	$a0, $sp, 80
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 64
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB203_29
.LBB203_28:
.Ltmp785:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp786:                               # EH_LABEL
.LBB203_29:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB203_31
# %bb.30:
.Ltmp791:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp792:                               # EH_LABEL
.LBB203_31:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 296                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 304                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 312                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 320
	ret
.LBB203_32:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB203_3
.LBB203_33:
.Ltmp767:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp768:                               # EH_LABEL
	b	.LBB203_3
.LBB203_34:
.Ltmp769:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp770:                               # EH_LABEL
	b	.LBB203_3
.LBB203_35:
.Ltmp794:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp795:                               # EH_LABEL
# %bb.36:                               # %.noexc10
.LBB203_37:
.Ltmp793:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB203_38:
.Ltmp782:                               # EH_LABEL
	b	.LBB203_44
.LBB203_39:
.Ltmp787:                               # EH_LABEL
	ld.d	$a3, $sp, 48
	move	$fp, $a0
	beqz	$a3, .LBB203_45
# %bb.40:
.Ltmp788:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp789:                               # EH_LABEL
	b	.LBB203_45
.LBB203_41:
.Ltmp790:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB203_42:                             # %.loopexit.split-lp
.Ltmp796:                               # EH_LABEL
	b	.LBB203_44
.LBB203_43:                             # %.loopexit
.Ltmp775:                               # EH_LABEL
.LBB203_44:
	move	$fp, $a0
.LBB203_45:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end203:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb, .Lfunc_end203-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb0ELb1EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table203:
.Lexception77:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase37-.Lttbaseref37
.Lttbaseref37:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end77-.Lcst_begin77
.Lcst_begin77:
	.uleb128 .Lfunc_begin77-.Lfunc_begin77  # >> Call Site 1 <<
	.uleb128 .Ltmp763-.Lfunc_begin77        #   Call between .Lfunc_begin77 and .Ltmp763
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp763-.Lfunc_begin77        # >> Call Site 2 <<
	.uleb128 .Ltmp772-.Ltmp763              #   Call between .Ltmp763 and .Ltmp772
	.uleb128 .Ltmp796-.Lfunc_begin77        #     jumps to .Ltmp796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp773-.Lfunc_begin77        # >> Call Site 3 <<
	.uleb128 .Ltmp774-.Ltmp773              #   Call between .Ltmp773 and .Ltmp774
	.uleb128 .Ltmp775-.Lfunc_begin77        #     jumps to .Ltmp775
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp776-.Lfunc_begin77        # >> Call Site 4 <<
	.uleb128 .Ltmp777-.Ltmp776              #   Call between .Ltmp776 and .Ltmp777
	.uleb128 .Ltmp796-.Lfunc_begin77        #     jumps to .Ltmp796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp777-.Lfunc_begin77        # >> Call Site 5 <<
	.uleb128 .Ltmp778-.Ltmp777              #   Call between .Ltmp777 and .Ltmp778
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp778-.Lfunc_begin77        # >> Call Site 6 <<
	.uleb128 .Ltmp779-.Ltmp778              #   Call between .Ltmp778 and .Ltmp779
	.uleb128 .Ltmp796-.Lfunc_begin77        #     jumps to .Ltmp796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp780-.Lfunc_begin77        # >> Call Site 7 <<
	.uleb128 .Ltmp781-.Ltmp780              #   Call between .Ltmp780 and .Ltmp781
	.uleb128 .Ltmp782-.Lfunc_begin77        #     jumps to .Ltmp782
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp783-.Lfunc_begin77        # >> Call Site 8 <<
	.uleb128 .Ltmp786-.Ltmp783              #   Call between .Ltmp783 and .Ltmp786
	.uleb128 .Ltmp787-.Lfunc_begin77        #     jumps to .Ltmp787
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp791-.Lfunc_begin77        # >> Call Site 9 <<
	.uleb128 .Ltmp792-.Ltmp791              #   Call between .Ltmp791 and .Ltmp792
	.uleb128 .Ltmp793-.Lfunc_begin77        #     jumps to .Ltmp793
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp792-.Lfunc_begin77        # >> Call Site 10 <<
	.uleb128 .Ltmp767-.Ltmp792              #   Call between .Ltmp792 and .Ltmp767
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp767-.Lfunc_begin77        # >> Call Site 11 <<
	.uleb128 .Ltmp795-.Ltmp767              #   Call between .Ltmp767 and .Ltmp795
	.uleb128 .Ltmp796-.Lfunc_begin77        #     jumps to .Ltmp796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp795-.Lfunc_begin77        # >> Call Site 12 <<
	.uleb128 .Ltmp788-.Ltmp795              #   Call between .Ltmp795 and .Ltmp788
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp788-.Lfunc_begin77        # >> Call Site 13 <<
	.uleb128 .Ltmp789-.Ltmp788              #   Call between .Ltmp788 and .Ltmp789
	.uleb128 .Ltmp790-.Lfunc_begin77        #     jumps to .Ltmp790
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp789-.Lfunc_begin77        # >> Call Site 14 <<
	.uleb128 .Lfunc_end203-.Ltmp789         #   Call between .Ltmp789 and .Lfunc_end203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end77:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb
.Lfunc_begin78:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception78
# %bb.0:
	addi.d	$sp, $sp, -288
	.cfi_def_cfa_offset 288
	st.d	$ra, $sp, 280                   # 8-byte Folded Spill
	st.d	$fp, $sp, 272                   # 8-byte Folded Spill
	st.d	$s0, $sp, 264                   # 8-byte Folded Spill
	st.d	$s1, $sp, 256                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	st.d	$s1, $sp, 208
	st.b	$s0, $sp, 216
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 224
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 240
	st.h	$zero, $sp, 94
.Ltmp797:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp798:                               # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB204_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB204_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 94
	st.b	$s0, $sp, 95
	b	.LBB204_11
.LBB204_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB204_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp799:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp800:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB204_38
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB204_40
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB204_39
# %bb.9:
	bnez	$a1, .LBB204_3
# %bb.10:
.Ltmp805:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp806:                               # EH_LABEL
	b	.LBB204_3
	.p2align	4, , 16
.LBB204_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp807:                               # EH_LABEL
	addi.d	$a1, $sp, 94
	addi.d	$a2, $sp, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp808:                               # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB204_11 Depth=1
	bnez	$a0, .LBB204_11
# %bb.13:
	ld.bu	$a0, $sp, 94
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB204_15
# %bb.14:
	ld.b	$a1, $sp, 95
.Ltmp810:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp811:                               # EH_LABEL
.LBB204_15:
.Ltmp812:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp813:                               # EH_LABEL
# %bb.16:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 32
	vst	$vr0, $sp, 48
.Ltmp815:                               # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp816:                               # EH_LABEL
# %bb.17:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	st.d	$zero, $sp, 112
	ld.d	$a1, $sp, 136
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	vld	$vr0, $sp, 144
	st.d	$a1, $a0, 40
	vst	$vr1, $sp, 120
	ld.d	$a1, $sp, 160
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 136
	st.d	$a1, $a0, 64
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vst	$vr1, $sp, 168
	vld	$vr0, $sp, 240
	vld	$vr1, $sp, 224
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr0, $a0, 144
	vst	$vr1, $a0, 128
	vld	$vr0, $sp, 208
	vld	$vr1, $sp, 192
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 184
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 32
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 56
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 48
.Ltmp818:                               # EH_LABEL
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp819:                               # EH_LABEL
# %bb.18:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 64
	st.d	$a0, $sp, 72
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 80
	beq	$a1, $a2, .LBB204_20
# %bb.19:
	ld.d	$a0, $sp, 80
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 64
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB204_21
.LBB204_20:
.Ltmp820:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp821:                               # EH_LABEL
.LBB204_21:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB204_23
# %bb.22:
.Ltmp826:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp827:                               # EH_LABEL
.LBB204_23:                             # %_ZNSt14_Function_baseD2Ev.exit
	ld.d	$a0, $sp, 168
	beqz	$a0, .LBB204_25
# %bb.24:
	ld.d	$a1, $sp, 184
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB204_25:                             # %_ZNSt6vectorINSt7__cxx1112regex_traitsIcE10_RegexMaskESaIS3_EED2Ev.exit.i
	ld.d	$a0, $sp, 144
	beqz	$a0, .LBB204_27
# %bb.26:
	ld.d	$a1, $sp, 160
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB204_27:                             # %_ZNSt6vectorISt4pairIccESaIS1_EED2Ev.exit.i
	ld.d	$a0, $sp, 120
	ld.d	$fp, $sp, 128
	beq	$a0, $fp, .LBB204_33
# %bb.28:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB204_30
	.p2align	4, , 16
.LBB204_29:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB204_30 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB204_32
.LBB204_30:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB204_29
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB204_30 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB204_29
.LBB204_32:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 120
.LBB204_33:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB204_35
# %bb.34:
	ld.d	$a1, $sp, 136
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB204_35:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB204_37
# %bb.36:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB204_37:                             # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev.exit
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	ret
.LBB204_38:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB204_3
.LBB204_39:
.Ltmp801:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp802:                               # EH_LABEL
	b	.LBB204_3
.LBB204_40:
.Ltmp803:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp804:                               # EH_LABEL
	b	.LBB204_3
.LBB204_41:
.Ltmp828:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB204_42:
.Ltmp817:                               # EH_LABEL
	b	.LBB204_48
.LBB204_43:
.Ltmp822:                               # EH_LABEL
	ld.d	$a3, $sp, 48
	move	$fp, $a0
	beqz	$a3, .LBB204_49
# %bb.44:
.Ltmp823:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp824:                               # EH_LABEL
	b	.LBB204_49
.LBB204_45:
.Ltmp825:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB204_46:                             # %.loopexit.split-lp
.Ltmp814:                               # EH_LABEL
	b	.LBB204_48
.LBB204_47:                             # %.loopexit
.Ltmp809:                               # EH_LABEL
.LBB204_48:
	move	$fp, $a0
.LBB204_49:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end204:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb, .Lfunc_end204-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb0EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table204:
.Lexception78:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase38-.Lttbaseref38
.Lttbaseref38:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end78-.Lcst_begin78
.Lcst_begin78:
	.uleb128 .Lfunc_begin78-.Lfunc_begin78  # >> Call Site 1 <<
	.uleb128 .Ltmp797-.Lfunc_begin78        #   Call between .Lfunc_begin78 and .Ltmp797
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp797-.Lfunc_begin78        # >> Call Site 2 <<
	.uleb128 .Ltmp806-.Ltmp797              #   Call between .Ltmp797 and .Ltmp806
	.uleb128 .Ltmp814-.Lfunc_begin78        #     jumps to .Ltmp814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp807-.Lfunc_begin78        # >> Call Site 3 <<
	.uleb128 .Ltmp808-.Ltmp807              #   Call between .Ltmp807 and .Ltmp808
	.uleb128 .Ltmp809-.Lfunc_begin78        #     jumps to .Ltmp809
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp810-.Lfunc_begin78        # >> Call Site 4 <<
	.uleb128 .Ltmp813-.Ltmp810              #   Call between .Ltmp810 and .Ltmp813
	.uleb128 .Ltmp814-.Lfunc_begin78        #     jumps to .Ltmp814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp815-.Lfunc_begin78        # >> Call Site 5 <<
	.uleb128 .Ltmp816-.Ltmp815              #   Call between .Ltmp815 and .Ltmp816
	.uleb128 .Ltmp817-.Lfunc_begin78        #     jumps to .Ltmp817
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp818-.Lfunc_begin78        # >> Call Site 6 <<
	.uleb128 .Ltmp821-.Ltmp818              #   Call between .Ltmp818 and .Ltmp821
	.uleb128 .Ltmp822-.Lfunc_begin78        #     jumps to .Ltmp822
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp826-.Lfunc_begin78        # >> Call Site 7 <<
	.uleb128 .Ltmp827-.Ltmp826              #   Call between .Ltmp826 and .Ltmp827
	.uleb128 .Ltmp828-.Lfunc_begin78        #     jumps to .Ltmp828
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp827-.Lfunc_begin78        # >> Call Site 8 <<
	.uleb128 .Ltmp801-.Ltmp827              #   Call between .Ltmp827 and .Ltmp801
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp801-.Lfunc_begin78        # >> Call Site 9 <<
	.uleb128 .Ltmp804-.Ltmp801              #   Call between .Ltmp801 and .Ltmp804
	.uleb128 .Ltmp814-.Lfunc_begin78        #     jumps to .Ltmp814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp804-.Lfunc_begin78        # >> Call Site 10 <<
	.uleb128 .Ltmp823-.Ltmp804              #   Call between .Ltmp804 and .Ltmp823
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp823-.Lfunc_begin78        # >> Call Site 11 <<
	.uleb128 .Ltmp824-.Ltmp823              #   Call between .Ltmp823 and .Ltmp824
	.uleb128 .Ltmp825-.Lfunc_begin78        #     jumps to .Ltmp825
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp824-.Lfunc_begin78        # >> Call Site 12 <<
	.uleb128 .Lfunc_end204-.Ltmp824         #   Call between .Ltmp824 and .Lfunc_end204
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end78:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase38:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb
.Lfunc_begin79:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception79
# %bb.0:
	addi.d	$sp, $sp, -288
	.cfi_def_cfa_offset 288
	st.d	$ra, $sp, 280                   # 8-byte Folded Spill
	st.d	$fp, $sp, 272                   # 8-byte Folded Spill
	st.d	$s0, $sp, 264                   # 8-byte Folded Spill
	st.d	$s1, $sp, 256                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 384
	move	$s0, $a1
	addi.d	$a0, $sp, 96
	ori	$a2, $zero, 99
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s1, $sp, 200
	st.d	$s1, $sp, 208
	st.b	$s0, $sp, 216
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 224
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 240
	st.h	$zero, $sp, 94
.Ltmp829:                               # EH_LABEL
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
.Ltmp830:                               # EH_LABEL
# %bb.1:
	beqz	$a0, .LBB205_4
# %bb.2:
	ld.d	$a0, $fp, 272
	ld.bu	$s0, $a0, 0
.LBB205_3:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $sp, 94
	st.b	$s0, $sp, 95
	b	.LBB205_11
.LBB205_4:
	ld.w	$a0, $fp, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB205_11
# %bb.5:
	addi.d	$a1, $fp, 208
	addi.d	$a0, $fp, 272
.Ltmp831:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp832:                               # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 192
	beq	$a0, $a1, .LBB205_24
# %bb.7:
	ld.w	$a1, $fp, 144
	addi.d	$a0, $fp, 8
	ori	$a2, $zero, 2
	ori	$s0, $zero, 45
	beq	$a1, $a2, .LBB205_26
# %bb.8:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB205_25
# %bb.9:
	bnez	$a1, .LBB205_3
# %bb.10:
.Ltmp837:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.Ltmp838:                               # EH_LABEL
	b	.LBB205_3
	.p2align	4, , 16
.LBB205_11:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
                                        # =>This Inner Loop Header: Depth=1
.Ltmp839:                               # EH_LABEL
	addi.d	$a1, $sp, 94
	addi.d	$a2, $sp, 96
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE)
	jirl	$ra, $ra, 0
.Ltmp840:                               # EH_LABEL
# %bb.12:                               #   in Loop: Header=BB205_11 Depth=1
	bnez	$a0, .LBB205_11
# %bb.13:
	ld.bu	$a0, $sp, 94
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB205_15
# %bb.14:
	ld.b	$a1, $sp, 95
.Ltmp842:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp843:                               # EH_LABEL
.LBB205_15:
.Ltmp844:                               # EH_LABEL
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE8_M_readyEv)
	jirl	$ra, $ra, 0
.Ltmp845:                               # EH_LABEL
# %bb.16:
	ld.d	$s0, $fp, 256
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 32
	vst	$vr0, $sp, 48
.Ltmp847:                               # EH_LABEL
	ori	$a0, $zero, 160
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp848:                               # EH_LABEL
# %bb.17:
	vld	$vr0, $sp, 96
	ld.d	$a1, $sp, 112
	vst	$vr0, $a0, 0
	st.d	$a1, $a0, 16
	vld	$vr0, $sp, 120
	st.d	$zero, $sp, 112
	ld.d	$a1, $sp, 136
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	vst	$vr1, $sp, 96
	vst	$vr0, $a0, 24
	vld	$vr0, $sp, 144
	st.d	$a1, $a0, 40
	vst	$vr1, $sp, 120
	ld.d	$a1, $sp, 160
	vst	$vr0, $a0, 48
	vld	$vr0, $sp, 168
	st.d	$zero, $sp, 136
	st.d	$a1, $a0, 64
	vst	$vr1, $sp, 144
	vst	$vr0, $a0, 72
	vst	$vr1, $sp, 168
	vld	$vr0, $sp, 240
	vld	$vr1, $sp, 224
	st.d	$zero, $sp, 160
	ld.d	$a1, $sp, 184
	vst	$vr0, $a0, 144
	vst	$vr1, $a0, 128
	vld	$vr0, $sp, 208
	vld	$vr1, $sp, 192
	st.d	$a1, $a0, 88
	st.d	$zero, $sp, 184
	vst	$vr0, $a0, 112
	vst	$vr1, $a0, 96
	st.d	$a0, $sp, 32
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc)
	st.d	$a0, $sp, 56
	pcalau12i	$a0, %pc_hi20(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation)
	st.d	$a0, $sp, 48
.Ltmp850:                               # EH_LABEL
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE17_M_insert_matcherESt8functionIFbcEE)
	jirl	$ra, $ra, 0
.Ltmp851:                               # EH_LABEL
# %bb.18:
	ld.d	$a2, $fp, 368
	ld.d	$a1, $fp, 352
	st.d	$s0, $sp, 64
	st.d	$a0, $sp, 72
	addi.d	$a2, $a2, -24
	st.d	$a0, $sp, 80
	beq	$a1, $a2, .LBB205_20
# %bb.19:
	ld.d	$a0, $sp, 80
	st.d	$a0, $a1, 16
	vld	$vr0, $sp, 64
	vst	$vr0, $a1, 0
	ld.d	$a0, $fp, 352
	addi.d	$a0, $a0, 24
	st.d	$a0, $fp, 352
	b	.LBB205_21
.LBB205_20:
.Ltmp852:                               # EH_LABEL
	addi.d	$a0, $fp, 304
	addi.d	$a1, $sp, 64
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp853:                               # EH_LABEL
.LBB205_21:                             # %_ZNSt5stackINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESt5dequeIS5_SaIS5_EEE4pushEOS5_.exit
	ld.d	$a3, $sp, 48
	beqz	$a3, .LBB205_23
# %bb.22:
.Ltmp858:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp859:                               # EH_LABEL
.LBB205_23:                             # %_ZNSt14_Function_baseD2Ev.exit
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	ret
.LBB205_24:
	ori	$a0, $zero, 27
	st.w	$a0, $fp, 152
	ori	$s0, $zero, 45
	b	.LBB205_3
.LBB205_25:
.Ltmp833:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
.Ltmp834:                               # EH_LABEL
	b	.LBB205_3
.LBB205_26:
.Ltmp835:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.Ltmp836:                               # EH_LABEL
	b	.LBB205_3
.LBB205_27:
.Ltmp860:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB205_28:
.Ltmp849:                               # EH_LABEL
	b	.LBB205_34
.LBB205_29:
.Ltmp854:                               # EH_LABEL
	ld.d	$a3, $sp, 48
	move	$fp, $a0
	beqz	$a3, .LBB205_35
# %bb.30:
.Ltmp855:                               # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 32
	ori	$a2, $zero, 3
	jirl	$ra, $a3, 0
.Ltmp856:                               # EH_LABEL
	b	.LBB205_35
.LBB205_31:
.Ltmp857:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB205_32:                             # %.loopexit.split-lp
.Ltmp846:                               # EH_LABEL
	b	.LBB205_34
.LBB205_33:                             # %.loopexit
.Ltmp841:                               # EH_LABEL
.LBB205_34:
	move	$fp, $a0
.LBB205_35:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end205:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb, .Lfunc_end205-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE25_M_insert_bracket_matcherILb1ELb1EEEvb,comdat
	.p2align	2, 0x0
GCC_except_table205:
.Lexception79:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase39-.Lttbaseref39
.Lttbaseref39:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end79-.Lcst_begin79
.Lcst_begin79:
	.uleb128 .Lfunc_begin79-.Lfunc_begin79  # >> Call Site 1 <<
	.uleb128 .Ltmp829-.Lfunc_begin79        #   Call between .Lfunc_begin79 and .Ltmp829
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp829-.Lfunc_begin79        # >> Call Site 2 <<
	.uleb128 .Ltmp838-.Ltmp829              #   Call between .Ltmp829 and .Ltmp838
	.uleb128 .Ltmp846-.Lfunc_begin79        #     jumps to .Ltmp846
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp839-.Lfunc_begin79        # >> Call Site 3 <<
	.uleb128 .Ltmp840-.Ltmp839              #   Call between .Ltmp839 and .Ltmp840
	.uleb128 .Ltmp841-.Lfunc_begin79        #     jumps to .Ltmp841
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp842-.Lfunc_begin79        # >> Call Site 4 <<
	.uleb128 .Ltmp845-.Ltmp842              #   Call between .Ltmp842 and .Ltmp845
	.uleb128 .Ltmp846-.Lfunc_begin79        #     jumps to .Ltmp846
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp847-.Lfunc_begin79        # >> Call Site 5 <<
	.uleb128 .Ltmp848-.Ltmp847              #   Call between .Ltmp847 and .Ltmp848
	.uleb128 .Ltmp849-.Lfunc_begin79        #     jumps to .Ltmp849
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp850-.Lfunc_begin79        # >> Call Site 6 <<
	.uleb128 .Ltmp853-.Ltmp850              #   Call between .Ltmp850 and .Ltmp853
	.uleb128 .Ltmp854-.Lfunc_begin79        #     jumps to .Ltmp854
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp858-.Lfunc_begin79        # >> Call Site 7 <<
	.uleb128 .Ltmp859-.Ltmp858              #   Call between .Ltmp858 and .Ltmp859
	.uleb128 .Ltmp860-.Lfunc_begin79        #     jumps to .Ltmp860
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp859-.Lfunc_begin79        # >> Call Site 8 <<
	.uleb128 .Ltmp833-.Ltmp859              #   Call between .Ltmp859 and .Ltmp833
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp833-.Lfunc_begin79        # >> Call Site 9 <<
	.uleb128 .Ltmp836-.Ltmp833              #   Call between .Ltmp833 and .Ltmp836
	.uleb128 .Ltmp846-.Lfunc_begin79        #     jumps to .Ltmp846
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp836-.Lfunc_begin79        # >> Call Site 10 <<
	.uleb128 .Ltmp855-.Ltmp836              #   Call between .Ltmp836 and .Ltmp855
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp855-.Lfunc_begin79        # >> Call Site 11 <<
	.uleb128 .Ltmp856-.Ltmp855              #   Call between .Ltmp855 and .Ltmp856
	.uleb128 .Ltmp857-.Lfunc_begin79        #     jumps to .Ltmp857
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp856-.Lfunc_begin79        # >> Call Site 12 <<
	.uleb128 .Lfunc_end205-.Ltmp856         #   Call between .Ltmp856 and .Lfunc_end205
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end79:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase39:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin80:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception80
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a1
	ori	$a1, $zero, 11
	addi.d	$s2, $s1, 8
	bne	$a0, $a1, .LBB206_6
# %bb.1:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB206_14
# %bb.2:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB206_30
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB206_29
# %bb.4:
	bnez	$a0, .LBB206_31
# %bb.5:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB206_103
.LBB206_6:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	move	$fp, $a2
	st.d	$s0, $sp, 64
	st.d	$a2, $sp, 72
	st.d	$s0, $sp, 48
	ori	$a1, $zero, 15
	st.d	$a2, $sp, 56
	beq	$a0, $a1, .LBB206_20
# %bb.7:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 17
	beq	$a0, $a1, .LBB206_15
# %bb.8:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 16
	bne	$a0, $a1, .LBB206_25
# %bb.9:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB206_40
# %bb.10:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB206_69
# %bb.11:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB206_56
# %bb.12:
	bnez	$a0, .LBB206_70
# %bb.13:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB206_70
.LBB206_14:
	move	$a0, $zero
	ori	$a1, $zero, 27
	st.w	$a1, $s1, 152
	b	.LBB206_103
.LBB206_15:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB206_38
# %bb.16:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB206_44
# %bb.17:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB206_43
# %bb.18:
	bnez	$a0, .LBB206_45
# %bb.19:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB206_45
.LBB206_20:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB206_39
# %bb.21:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB206_57
# %bb.22:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB206_55
# %bb.23:
	bnez	$a0, .LBB206_58
# %bb.24:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB206_58
.LBB206_25:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit44
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB206_32
# %bb.26:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $s0, 0
	ld.bu	$s5, $a0, 0
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB206_83
# %bb.27:
	ld.d	$s6, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a1, .LBB206_77
# %bb.28:
	st.b	$s7, $s6, 0
	ld.d	$a1, $fp, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $fp, 8
	b	.LBB206_83
.LBB206_29:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB206_103
.LBB206_30:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB206_31:
	move	$a0, $zero
	b	.LBB206_103
.LBB206_32:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB206_41
# %bb.33:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB206_84
# %bb.34:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB206_105
# %bb.35:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB206_104
# %bb.36:
	bnez	$a0, .LBB206_106
# %bb.37:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB206_106
.LBB206_38:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB206_45
.LBB206_39:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB206_58
.LBB206_40:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB206_70
.LBB206_41:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit63
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB206_119
# %bb.42:
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB206_102
.LBB206_43:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB206_45
.LBB206_44:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB206_45:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB206_54
# %bb.46:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB206_48
# %bb.47:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB206_54
.LBB206_48:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB206_118
# %bb.49:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i36
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB206_51
# %bb.50:
	move	$a0, $s5
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB206_51:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i39
	add.d	$s6, $s5, $s2
	beqz	$s1, .LBB206_53
# %bb.52:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i41
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_53:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i42
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB206_54:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit43
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	move	$a0, $fp
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	b	.LBB206_102
.LBB206_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB206_58
.LBB206_56:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB206_70
.LBB206_57:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB206_58:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB206_67
# %bb.59:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB206_61
# %bb.60:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB206_67
.LBB206_61:
	ld.d	$s2, $fp, 0
	sub.d	$s3, $s6, $s2
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s3, $a0, .LBB206_118
# %bb.62:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i46
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s3
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s3, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s3
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s3
	beq	$s6, $s2, .LBB206_64
# %bb.63:
	move	$a0, $s5
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB206_64:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i49
	add.d	$s6, $s5, $s3
	beqz	$s2, .LBB206_66
# %bb.65:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i51
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_66:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i52
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB206_67:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit53
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $fp, 104
	ori	$a3, $zero, 2
	st.b	$a3, $s0, 0
	add.d	$a2, $a1, $a2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB206_117
# %bb.68:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $fp, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB206_102
.LBB206_69:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB206_70:
	addi.d	$a0, $sp, 16
	move	$a1, $fp
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB206_74
# %bb.71:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $s0, 0
	ld.bu	$s5, $a1, 0
	bne	$a2, $a0, .LBB206_92
# %bb.72:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB206_85
# %bb.73:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB206_92
.LBB206_74:
	ld.bu	$a1, $s0, 0
	bne	$a1, $a0, .LBB206_100
# %bb.75:
	ld.d	$s5, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s6, $s0, 1
	beq	$s5, $a0, .LBB206_93
# %bb.76:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB206_100
.LBB206_77:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB206_118
# %bb.78:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i55
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB206_80
# %bb.79:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB206_80:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i58
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB206_82
# %bb.81:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i60
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_82:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i61
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
	ori	$a0, $zero, 1
.LBB206_83:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit62
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	b	.LBB206_103
.LBB206_84:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB206_106
.LBB206_85:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB206_120
# %bb.86:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp863:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp864:                               # EH_LABEL
# %bb.87:                               # %.noexc20
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB206_89
# %bb.88:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB206_89:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB206_91
# %bb.90:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_91:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB206_92:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB206_101
	b	.LBB206_102
.LBB206_93:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB206_120
# %bb.94:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i22
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp861:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp862:                               # EH_LABEL
# %bb.95:                               # %.noexc30
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB206_97
# %bb.96:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB206_97:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i25
	add.d	$s5, $s4, $s2
	beqz	$s1, .LBB206_99
# %bb.98:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i27
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_99:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i28
	addi.d	$a0, $s5, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB206_100:                            # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB206_102
.LBB206_101:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_102:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ori	$a0, $zero, 1
.LBB206_103:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB206_104:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB206_106
.LBB206_105:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB206_106:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB206_108
# %bb.107:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB206_103
.LBB206_108:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB206_112
# %bb.109:
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB206_122
# %bb.110:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB206_123
# %bb.111:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	b	.LBB206_102
.LBB206_112:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB206_114
# %bb.113:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $s0, 1
	ld.b	$a2, $a0, 0
	b	.LBB206_116
.LBB206_114:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB206_124
# %bb.115:
	ld.b	$a1, $s0, 1
	ori	$a2, $zero, 45
.LBB206_116:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $s0, 0
	b	.LBB206_102
.LBB206_117:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB206_118:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB206_119:
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a1, $a0, %pc_lo12(.L.str.49)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB206_120:                            # %.invoke
.Ltmp865:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp866:                               # EH_LABEL
# %bb.121:                              # %.cont
.LBB206_122:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB206_123:
	pcalau12i	$a0, %pc_hi20(.L.str.48)
	addi.d	$a1, $a0, %pc_lo12(.L.str.48)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB206_124:
	pcalau12i	$a0, %pc_hi20(.L.str.47)
	addi.d	$a1, $a0, %pc_lo12(.L.str.47)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB206_125:
.Ltmp867:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB206_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB206_127:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end206:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end206-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table206:
.Lexception80:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end80-.Lcst_begin80
.Lcst_begin80:
	.uleb128 .Lfunc_begin80-.Lfunc_begin80  # >> Call Site 1 <<
	.uleb128 .Ltmp863-.Lfunc_begin80        #   Call between .Lfunc_begin80 and .Ltmp863
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp863-.Lfunc_begin80        # >> Call Site 2 <<
	.uleb128 .Ltmp864-.Ltmp863              #   Call between .Ltmp863 and .Ltmp864
	.uleb128 .Ltmp867-.Lfunc_begin80        #     jumps to .Ltmp867
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp864-.Lfunc_begin80        # >> Call Site 3 <<
	.uleb128 .Ltmp861-.Ltmp864              #   Call between .Ltmp864 and .Ltmp861
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp861-.Lfunc_begin80        # >> Call Site 4 <<
	.uleb128 .Ltmp862-.Ltmp861              #   Call between .Ltmp861 and .Ltmp862
	.uleb128 .Ltmp867-.Lfunc_begin80        #     jumps to .Ltmp867
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp862-.Lfunc_begin80        # >> Call Site 5 <<
	.uleb128 .Ltmp865-.Ltmp862              #   Call between .Ltmp862 and .Ltmp865
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp865-.Lfunc_begin80        # >> Call Site 6 <<
	.uleb128 .Ltmp866-.Ltmp865              #   Call between .Ltmp865 and .Ltmp866
	.uleb128 .Ltmp867-.Lfunc_begin80        #     jumps to .Ltmp867
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp866-.Lfunc_begin80        # >> Call Site 7 <<
	.uleb128 .Lfunc_end206-.Ltmp866         #   Call between .Ltmp866 and .Lfunc_end206
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end80:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin81:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception81
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 104
	move	$s0, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB207_11
# %bb.1:
	ld.d	$a0, $s0, 0
	ld.d	$s5, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s6, $a0, 0
	beq	$s5, $a1, .LBB207_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB207_10
.LBB207_3:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB207_13
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp868:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp869:                               # EH_LABEL
# %bb.5:                                # %.noexc8
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB207_7
# %bb.6:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB207_7:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s0, $s4, $s2
	beqz	$s1, .LBB207_9
# %bb.8:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB207_9:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s0, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB207_10:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB207_11:
.Ltmp873:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a1, $a0, %pc_lo12(.L.str.50)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp874:                               # EH_LABEL
# %bb.12:
.LBB207_13:
.Ltmp870:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp871:                               # EH_LABEL
# %bb.14:                               # %.noexc
.LBB207_15:
.Ltmp872:                               # EH_LABEL
	b	.LBB207_17
.LBB207_16:
.Ltmp875:                               # EH_LABEL
.LBB207_17:
	move	$fp, $a0
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s0, 16
	beq	$a0, $a1, .LBB207_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB207_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end207:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end207-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table207:
.Lexception81:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end81-.Lcst_begin81
.Lcst_begin81:
	.uleb128 .Lfunc_begin81-.Lfunc_begin81  # >> Call Site 1 <<
	.uleb128 .Ltmp868-.Lfunc_begin81        #   Call between .Lfunc_begin81 and .Ltmp868
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp868-.Lfunc_begin81        # >> Call Site 2 <<
	.uleb128 .Ltmp869-.Ltmp868              #   Call between .Ltmp868 and .Ltmp869
	.uleb128 .Ltmp872-.Lfunc_begin81        #     jumps to .Ltmp872
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp869-.Lfunc_begin81        # >> Call Site 3 <<
	.uleb128 .Ltmp873-.Ltmp869              #   Call between .Ltmp869 and .Ltmp873
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp873-.Lfunc_begin81        # >> Call Site 4 <<
	.uleb128 .Ltmp874-.Ltmp873              #   Call between .Ltmp873 and .Ltmp874
	.uleb128 .Ltmp875-.Lfunc_begin81        #     jumps to .Ltmp875
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp870-.Lfunc_begin81        # >> Call Site 5 <<
	.uleb128 .Ltmp871-.Ltmp870              #   Call between .Ltmp870 and .Ltmp871
	.uleb128 .Ltmp872-.Lfunc_begin81        #     jumps to .Ltmp872
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp871-.Lfunc_begin81        # >> Call Site 6 <<
	.uleb128 .Lfunc_end207-.Ltmp871         #   Call between .Ltmp871 and .Lfunc_end207
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end81:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.p2align	5
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a2, $a0, 0
	ld.bu	$a3, $a2, 0
	ori	$s3, $zero, 1
	bne	$a3, $s3, .LBB208_9
# %bb.1:
	ld.d	$s4, $a0, 8
	ld.d	$s7, $s4, 8
	ld.d	$a3, $s4, 16
	ld.bu	$s8, $a2, 1
	beq	$s7, $a3, .LBB208_3
# %bb.2:
	st.b	$s8, $s7, 0
	ld.d	$a2, $s4, 8
	addi.d	$a2, $a2, 1
	st.d	$a2, $s4, 8
	b	.LBB208_9
.LBB208_3:
	move	$s6, $a0
	ld.d	$fp, $s4, 0
	sub.d	$s0, $s7, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB208_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	move	$s5, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s8, $a0, $s0
	beq	$s7, $fp, .LBB208_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB208_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s7, $s2, $s0
	beqz	$fp, .LBB208_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB208_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s7, 1
	st.d	$s2, $s4, 0
	st.d	$a0, $s4, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s4, 16
	move	$a0, $s6
	move	$a1, $s5
.LBB208_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	st.b	$s3, $a0, 0
	st.b	$a1, $a0, 1
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB208_10:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end208:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc, .Lfunc_end208-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.p2align	5
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	ld.d	$a1, $a0, 0
	ld.bu	$a2, $a1, 0
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB209_9
# %bb.1:
	ld.d	$s3, $a0, 8
	ld.d	$s5, $s3, 8
	ld.d	$a2, $s3, 16
	ld.bu	$s6, $a1, 1
	beq	$s5, $a2, .LBB209_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a1, $s3, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $s3, 8
	b	.LBB209_9
.LBB209_3:
	move	$s4, $a0
	ld.d	$fp, $s3, 0
	sub.d	$s0, $s5, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB209_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s6, $a0, $s0
	beq	$s5, $fp, .LBB209_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB209_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s5, $s2, $s0
	beqz	$fp, .LBB209_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB209_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s5, 1
	st.d	$s2, $s3, 0
	st.d	$a0, $s3, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s3, 16
	move	$a0, $s4
.LBB209_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2
	st.b	$a1, $a0, 0
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB209_10:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end209:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv, .Lfunc_end209-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin82:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception82
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB210_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp876:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp877:                               # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	addi.d	$s0, $sp, 24
	beq	$a0, $s2, .LBB210_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	beq	$a1, $s0, .LBB210_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB210_8
.LBB210_5:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	b	.LBB210_14
.LBB210_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	beq	$a1, $s0, .LBB210_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB210_5
.LBB210_8:
	st.d	$s0, $sp, 8
	move	$a0, $s0
	b	.LBB210_14
.LBB210_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB210_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB210_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB210_13
.LBB210_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB210_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB210_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB210_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB210_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB210_20
# %bb.18:                               # %.noexc.i.i
.Ltmp879:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp880:                               # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB210_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB210_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB210_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB210_28
.LBB210_23:
	addi.d	$a0, $fp, 24
.Ltmp881:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp882:                               # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB210_26
.LBB210_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB210_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB210_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB210_25
	b	.LBB210_26
.LBB210_29:
.Ltmp883:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.175)
	addi.d	$a1, $a0, %pc_lo12(.L.str.175)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp884:                               # EH_LABEL
# %bb.30:
.LBB210_31:
.Ltmp878:                               # EH_LABEL
	b	.LBB210_33
.LBB210_32:
.Ltmp885:                               # EH_LABEL
.LBB210_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB210_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB210_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end210:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end210-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table210:
.Lexception82:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end82-.Lcst_begin82
.Lcst_begin82:
	.uleb128 .Lfunc_begin82-.Lfunc_begin82  # >> Call Site 1 <<
	.uleb128 .Ltmp876-.Lfunc_begin82        #   Call between .Lfunc_begin82 and .Ltmp876
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp876-.Lfunc_begin82        # >> Call Site 2 <<
	.uleb128 .Ltmp877-.Ltmp876              #   Call between .Ltmp876 and .Ltmp877
	.uleb128 .Ltmp878-.Lfunc_begin82        #     jumps to .Ltmp878
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp877-.Lfunc_begin82        # >> Call Site 3 <<
	.uleb128 .Ltmp879-.Ltmp877              #   Call between .Ltmp877 and .Ltmp879
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp879-.Lfunc_begin82        # >> Call Site 4 <<
	.uleb128 .Ltmp882-.Ltmp879              #   Call between .Ltmp879 and .Ltmp882
	.uleb128 .Ltmp885-.Lfunc_begin82        #     jumps to .Ltmp885
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp882-.Lfunc_begin82        # >> Call Site 5 <<
	.uleb128 .Ltmp883-.Ltmp882              #   Call between .Ltmp882 and .Ltmp883
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp883-.Lfunc_begin82        # >> Call Site 6 <<
	.uleb128 .Ltmp884-.Ltmp883              #   Call between .Ltmp883 and .Ltmp884
	.uleb128 .Ltmp885-.Lfunc_begin82        #     jumps to .Ltmp885
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp884-.Lfunc_begin82        # >> Call Site 7 <<
	.uleb128 .Lfunc_end210-.Ltmp884         #   Call between .Ltmp884 and .Lfunc_end210
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end82:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	blt	$a2, $a1, .LBB211_15
# %bb.1:
	ld.d	$s3, $a0, 56
	ld.d	$a3, $a0, 64
	bstrins.d	$a1, $a2, 63, 8
	beq	$s3, $a3, .LBB211_3
# %bb.2:
	st.h	$a1, $s3, 0
	ld.d	$a1, $a0, 56
	addi.d	$a1, $a1, 2
	st.d	$a1, $a0, 56
	b	.LBB211_14
.LBB211_3:
	move	$s2, $a0
	ld.d	$fp, $a0, 48
	sub.d	$s0, $s3, $fp
	addi.w	$a0, $zero, -2
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB211_16
# %bb.4:                                # %_ZNKSt6vectorISt4pairIccESaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
	move	$s5, $a1
	srai.d	$a0, $s0, 1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 1023
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	stx.h	$s5, $a0, $s0
	move	$s5, $a0
	beq	$fp, $s3, .LBB211_11
# %bb.5:                                # %.lr.ph.i.i.i.i.i.i.preheader
	addi.d	$a1, $s0, -2
	ori	$a2, $zero, 30
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a1, $a2, .LBB211_10
# %bb.6:                                # %.lr.ph.i.i.i.i.i.i.preheader
	sub.d	$a2, $s1, $fp
	ori	$a3, $zero, 32
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a2, $a3, .LBB211_10
# %bb.7:                                # %vector.ph
	srli.d	$a0, $a1, 1
	addi.d	$a1, $a0, 1
	move	$a2, $a1
	bstrins.d	$a2, $zero, 3, 0
	alsl.d	$s5, $a2, $s1, 1
	alsl.d	$a0, $a2, $fp, 1
	addi.d	$a3, $fp, 16
	addi.d	$a4, $s1, 16
	move	$a5, $a2
	.p2align	4, , 16
.LBB211_8:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a3, -16
	vld	$vr1, $a3, 0
	vst	$vr0, $a4, -16
	vst	$vr1, $a4, 0
	addi.d	$a3, $a3, 32
	addi.d	$a5, $a5, -16
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB211_8
# %bb.9:                                # %middle.block
	beq	$a1, $a2, .LBB211_11
	.p2align	4, , 16
.LBB211_10:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a1, $a0, 0
	st.h	$a1, $s5, 0
	addi.d	$a0, $a0, 2
	addi.d	$s5, $s5, 2
	bne	$a0, $s3, .LBB211_10
.LBB211_11:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit.i.i.i
	beqz	$fp, .LBB211_13
# %bb.12:                               # %_ZNSt12_Vector_baseISt4pairIccESaIS1_EE13_M_deallocateEPS1_m.exit.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB211_13:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE17_M_realloc_appendIJS1_EEEvDpOT_.exit.i.i
	addi.d	$a0, $s5, 2
	st.d	$s1, $s2, 48
	st.d	$a0, $s2, 56
	alsl.d	$a0, $s4, $s1, 1
	st.d	$a0, $s2, 64
.LBB211_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE9push_backEOS1_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB211_15:
	pcalau12i	$a0, %pc_hi20(.L.str.176)
	addi.d	$a1, $a0, %pc_lo12(.L.str.176)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB211_16:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end211:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc, .Lfunc_end211-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EE13_M_make_rangeEcc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.weak	_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.p2align	5
	.type	_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,@function
_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_: # @_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
.Lfunc_begin83:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception83
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a3
	move	$s2, $a2
	move	$s0, $a1
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB212_29
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 32
	st.d	$s5, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $sp, 32
	move	$s3, $s5
	beq	$s2, $s1, .LBB212_19
# %bb.2:                                # %.lr.ph
	addi.d	$s6, $s0, 313
	ori	$s7, $zero, 15
	b	.LBB212_5
	.p2align	4, , 16
.LBB212_3:                              # %.noexc29
                                        #   in Loop: Header=BB212_5 Depth=1
	ld.d	$a0, $sp, 16
.LBB212_4:                              #   in Loop: Header=BB212_5 Depth=1
	stx.b	$s3, $a0, $s4
	ld.d	$a0, $sp, 16
	addi.d	$a1, $s4, 1
	st.d	$a1, $sp, 24
	addi.d	$s2, $s2, 1
	stx.b	$zero, $a0, $a1
	beq	$s2, $s1, .LBB212_12
.LBB212_5:                              # =>This Inner Loop Header: Depth=1
	ld.bu	$s4, $s2, 0
	ldx.bu	$s3, $s6, $s4
	bnez	$s3, .LBB212_10
# %bb.6:                                #   in Loop: Header=BB212_5 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 64
	ext.w.b	$a1, $s4
.Ltmp886:                               # EH_LABEL
	move	$a0, $s0
	move	$a2, $zero
	jirl	$ra, $a3, 0
.Ltmp887:                               # EH_LABEL
# %bb.7:                                # %.noexc
                                        #   in Loop: Header=BB212_5 Depth=1
	move	$s3, $a0
	beqz	$a0, .LBB212_9
# %bb.8:                                #   in Loop: Header=BB212_5 Depth=1
	stx.b	$s3, $s6, $s4
	b	.LBB212_10
.LBB212_9:                              #   in Loop: Header=BB212_5 Depth=1
	move	$s3, $zero
	.p2align	4, , 16
.LBB212_10:                             # %_ZNKSt5ctypeIcE6narrowEcc.exit
                                        #   in Loop: Header=BB212_5 Depth=1
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 32
	ld.d	$s4, $sp, 24
	xor	$a2, $a0, $s5
	sltui	$a2, $a2, 1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s7, $a2
	or	$a1, $a2, $a1
	bltu	$s4, $a1, .LBB212_4
# %bb.11:                               #   in Loop: Header=BB212_5 Depth=1
.Ltmp888:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	ori	$a4, $zero, 1
	move	$a1, $s4
	move	$a2, $zero
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp889:                               # EH_LABEL
	b	.LBB212_3
.LBB212_12:                             # %.preheader
	ld.d	$s1, $sp, 24
	ld.d	$s3, $sp, 16
	beqz	$s1, .LBB212_19
# %bb.13:                               # %.preheader.split.preheader
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	addi.d	$s6, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	move	$s4, $zero
	ori	$s7, $zero, 1024
	b	.LBB212_15
	.p2align	4, , 16
.LBB212_14:                             # %.critedge
                                        #   in Loop: Header=BB212_15 Depth=1
	addi.d	$s4, $s4, 8
	beq	$s4, $s7, .LBB212_22
.LBB212_15:                             # %.preheader.split
                                        # =>This Inner Loop Header: Depth=1
	ldx.d	$s2, $s6, $s4
	move	$a0, $s2
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	bne	$s1, $a0, .LBB212_14
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB212_15 Depth=1
	move	$a0, $s3
	move	$a1, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB212_14
.LBB212_17:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.bu	$a0, $s0, 56
	srli.d	$s1, $s4, 3
	beqz	$a0, .LBB212_25
# %bb.18:
	andi	$a0, $s1, 255
	add.d	$a0, $s0, $a0
	ld.bu	$a0, $a0, 57
	b	.LBB212_27
.LBB212_19:                             # %.preheader.split.us.preheader
	pcalau12i	$a0, %pc_hi20(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	addi.d	$a0, $a0, %pc_lo12(_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames)
	move	$s4, $zero
	ori	$a1, $zero, 1024
	.p2align	4, , 16
.LBB212_20:                             # %.preheader.split.us
                                        # =>This Inner Loop Header: Depth=1
	ldx.d	$a2, $a0, $s4
	ld.bu	$a2, $a2, 0
	beqz	$a2, .LBB212_17
# %bb.21:                               # %.critedge.us
                                        #   in Loop: Header=BB212_20 Depth=1
	addi.d	$s4, $s4, 8
	bne	$s4, $a1, .LBB212_20
.LBB212_22:                             # %.critedge28
	addi.d	$a0, $fp, 16
	st.d	$a0, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
	beq	$s3, $s5, .LBB212_24
.LBB212_23:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB212_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB212_25:
.Ltmp891:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp892:                               # EH_LABEL
# %bb.26:                               # %.noexc32
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp893:                               # EH_LABEL
	ext.w.b	$a1, $s1
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp894:                               # EH_LABEL
.LBB212_27:                             # %_ZNKSt5ctypeIcE5widenEc.exit
	addi.d	$a1, $fp, 16
	st.d	$a1, $fp, 0
.Ltmp896:                               # EH_LABEL
	ext.w.b	$a2, $a0
	ori	$a1, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp897:                               # EH_LABEL
# %bb.28:                               # %_ZNKSt5ctypeIcE5widenEc.exit._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_.exit_crit_edge
	ld.d	$s3, $sp, 16
	bne	$s3, $s5, .LBB212_23
	b	.LBB212_24
.LBB212_29:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB212_30:
.Ltmp895:                               # EH_LABEL
	b	.LBB212_33
.LBB212_31:
.Ltmp898:                               # EH_LABEL
	b	.LBB212_33
.LBB212_32:
.Ltmp890:                               # EH_LABEL
.LBB212_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 16
	beq	$a0, $s5, .LBB212_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB212_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end212:
	.size	_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_, .Lfunc_end212-_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_,comdat
	.p2align	2, 0x0
GCC_except_table212:
.Lexception83:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end83-.Lcst_begin83
.Lcst_begin83:
	.uleb128 .Lfunc_begin83-.Lfunc_begin83  # >> Call Site 1 <<
	.uleb128 .Ltmp886-.Lfunc_begin83        #   Call between .Lfunc_begin83 and .Ltmp886
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp886-.Lfunc_begin83        # >> Call Site 2 <<
	.uleb128 .Ltmp889-.Ltmp886              #   Call between .Ltmp886 and .Ltmp889
	.uleb128 .Ltmp890-.Lfunc_begin83        #     jumps to .Ltmp890
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp889-.Lfunc_begin83        # >> Call Site 3 <<
	.uleb128 .Ltmp891-.Ltmp889              #   Call between .Ltmp889 and .Ltmp891
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp891-.Lfunc_begin83        # >> Call Site 4 <<
	.uleb128 .Ltmp894-.Ltmp891              #   Call between .Ltmp891 and .Ltmp894
	.uleb128 .Ltmp895-.Lfunc_begin83        #     jumps to .Ltmp895
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp896-.Lfunc_begin83        # >> Call Site 5 <<
	.uleb128 .Ltmp897-.Ltmp896              #   Call between .Ltmp896 and .Ltmp897
	.uleb128 .Ltmp898-.Lfunc_begin83        #     jumps to .Ltmp898
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp897-.Lfunc_begin83        # >> Call Site 6 <<
	.uleb128 .Lfunc_end212-.Ltmp897         #   Call between .Ltmp897 and .Lfunc_end212
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end83:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,"axG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,comdat
	.hidden	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_ # -- Begin function _ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
	.weak	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
	.p2align	5
	.type	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,@function
_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_: # @_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
.Lfunc_begin84:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception84
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s3, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	st.d	$zero, $a0, 8
	st.b	$zero, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx117collateIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx117collateIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s0, $a1, $a0
	beqz	$s0, .LBB213_32
# %bb.1:                                # %_ZSt9use_facetINSt7__cxx117collateIcEEERKT_RKSt6locale.exit
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -8
	ld.d	$a0, $a0, 8
	pcalau12i	$a1, %got_pc_hi20(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTINSt7__cxx117collateIcEE)
	ld.d	$a1, $a1, 8
	beq	$a0, $a1, .LBB213_4
# %bb.2:
	ld.bu	$a2, $a0, 0
	ori	$a3, $zero, 42
	beq	$a2, $a3, .LBB213_30
# %bb.3:                                # %_ZNKSt9type_infoneERKS_.exit
	ld.bu	$a2, $a1, 0
	addi.d	$a2, $a2, -42
	sltui	$a2, $a2, 1
	add.d	$a1, $a1, $a2
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB213_30
.LBB213_4:                              # %_ZNKSt9type_infoneERKS_.exit.thread38
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB213_34
# %bb.5:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	st.d	$zero, $sp, 56
	sub.d	$s3, $s3, $s1
	ori	$a1, $zero, 16
	st.d	$s3, $sp, 16
	move	$a0, $s5
	bltu	$s3, $a1, .LBB213_8
# %bb.6:                                # %.noexc.i
.Ltmp899:                               # EH_LABEL
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp900:                               # EH_LABEL
# %bb.7:                                # %.noexc25
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB213_8:                              # %._crit_edge.i.i
	beqz	$s3, .LBB213_12
# %bb.9:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB213_11
# %bb.10:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB213_12
.LBB213_11:
	move	$a1, $s1
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB213_12:
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 56
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s2, 0
	ld.d	$s1, $sp, 48
	ld.d	$a1, $sp, 56
	ld.d	$a3, $a0, 40
	add.d	$s3, $s1, $a1
.Ltmp902:                               # EH_LABEL
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s3
	jirl	$ra, $a3, 0
.Ltmp903:                               # EH_LABEL
# %bb.13:                               # %_ZNKSt5ctypeIcE7tolowerEPcPKc.exit
	ld.d	$a0, $s0, 0
	ld.d	$a4, $a0, 24
.Ltmp905:                               # EH_LABEL
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s1
	move	$a3, $s3
	jirl	$ra, $a4, 0
.Ltmp906:                               # EH_LABEL
# %bb.14:                               # %_ZNKSt7__cxx117collateIcE9transformEPKcS3_.exit
	ld.d	$a0, $fp, 0
	ld.d	$a1, $sp, 16
	addi.d	$s0, $sp, 32
	beq	$a0, $s4, .LBB213_18
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	beq	$a1, $s0, .LBB213_21
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $s4, 0
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	beqz	$a0, .LBB213_20
.LBB213_17:
	st.d	$a0, $sp, 16
	st.d	$a2, $sp, 32
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	bne	$a0, $s0, .LBB213_27
	b	.LBB213_28
.LBB213_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	beq	$a1, $s0, .LBB213_21
# %bb.19:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 24
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	bnez	$a0, .LBB213_17
.LBB213_20:
	st.d	$s0, $sp, 16
	move	$a0, $s0
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	bne	$a0, $s0, .LBB213_27
	b	.LBB213_28
.LBB213_21:
	addi.d	$a2, $sp, 16
	beq	$a2, $fp, .LBB213_31
# %bb.22:
	ld.d	$a2, $sp, 24
	beqz	$a2, .LBB213_26
# %bb.23:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB213_25
# %bb.24:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB213_26
.LBB213_25:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB213_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 24
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	beq	$a0, $s0, .LBB213_28
.LBB213_27:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB213_28:
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB213_30
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB213_30:                             # %_ZNKSt9type_infoneERKS_.exit.thread
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB213_31:
	move	$a0, $a1
	st.d	$zero, $sp, 24
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 16
	bne	$a0, $s0, .LBB213_27
	b	.LBB213_28
.LBB213_32:
.Ltmp914:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp915:                               # EH_LABEL
# %bb.33:                               # %.noexc
.LBB213_34:
.Ltmp911:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp912:                               # EH_LABEL
# %bb.35:                               # %.noexc24
.LBB213_36:
.Ltmp901:                               # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB213_44
	b	.LBB213_48
.LBB213_37:
.Ltmp907:                               # EH_LABEL
	addi.w	$a1, $a1, 0
	ori	$a2, $zero, 1
	move	$s0, $a0
	bne	$a1, $a2, .LBB213_42
# %bb.38:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
.Ltmp908:                               # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp909:                               # EH_LABEL
	b	.LBB213_28
.LBB213_39:
.Ltmp910:                               # EH_LABEL
	b	.LBB213_41
.LBB213_40:
.Ltmp904:                               # EH_LABEL
.LBB213_41:
	move	$s0, $a0
.LBB213_42:
	ld.d	$a0, $sp, 48
	bne	$a0, $s5, .LBB213_45
# %bb.43:
	ld.d	$a0, $fp, 0
	bne	$a0, $s4, .LBB213_48
.LBB213_44:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB213_45:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB213_44
	b	.LBB213_48
.LBB213_46:
.Ltmp913:                               # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB213_44
	b	.LBB213_48
.LBB213_47:
.Ltmp916:                               # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB213_44
.LBB213_48:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end213:
	.size	_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_, .Lfunc_end213-_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,"aG",@progbits,_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_,comdat
	.p2align	2, 0x0
GCC_except_table213:
.Lexception84:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase40-.Lttbaseref40
.Lttbaseref40:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end84-.Lcst_begin84
.Lcst_begin84:
	.uleb128 .Lfunc_begin84-.Lfunc_begin84  # >> Call Site 1 <<
	.uleb128 .Ltmp899-.Lfunc_begin84        #   Call between .Lfunc_begin84 and .Ltmp899
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp899-.Lfunc_begin84        # >> Call Site 2 <<
	.uleb128 .Ltmp900-.Ltmp899              #   Call between .Ltmp899 and .Ltmp900
	.uleb128 .Ltmp901-.Lfunc_begin84        #     jumps to .Ltmp901
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp900-.Lfunc_begin84        # >> Call Site 3 <<
	.uleb128 .Ltmp902-.Ltmp900              #   Call between .Ltmp900 and .Ltmp902
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp902-.Lfunc_begin84        # >> Call Site 4 <<
	.uleb128 .Ltmp903-.Ltmp902              #   Call between .Ltmp902 and .Ltmp903
	.uleb128 .Ltmp904-.Lfunc_begin84        #     jumps to .Ltmp904
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp905-.Lfunc_begin84        # >> Call Site 5 <<
	.uleb128 .Ltmp906-.Ltmp905              #   Call between .Ltmp905 and .Ltmp906
	.uleb128 .Ltmp907-.Lfunc_begin84        #     jumps to .Ltmp907
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp906-.Lfunc_begin84        # >> Call Site 6 <<
	.uleb128 .Ltmp914-.Ltmp906              #   Call between .Ltmp906 and .Ltmp914
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp914-.Lfunc_begin84        # >> Call Site 7 <<
	.uleb128 .Ltmp915-.Ltmp914              #   Call between .Ltmp914 and .Ltmp915
	.uleb128 .Ltmp916-.Lfunc_begin84        #     jumps to .Ltmp916
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp911-.Lfunc_begin84        # >> Call Site 8 <<
	.uleb128 .Ltmp912-.Ltmp911              #   Call between .Ltmp911 and .Ltmp912
	.uleb128 .Ltmp913-.Lfunc_begin84        #     jumps to .Ltmp913
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp912-.Lfunc_begin84        # >> Call Site 9 <<
	.uleb128 .Ltmp908-.Ltmp912              #   Call between .Ltmp912 and .Ltmp908
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp908-.Lfunc_begin84        # >> Call Site 10 <<
	.uleb128 .Ltmp909-.Ltmp908              #   Call between .Ltmp908 and .Ltmp909
	.uleb128 .Ltmp910-.Lfunc_begin84        #     jumps to .Ltmp910
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp909-.Lfunc_begin84        # >> Call Site 11 <<
	.uleb128 .Lfunc_end213-.Ltmp909         #   Call between .Ltmp909 and .Lfunc_end213
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end84:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp917:                               # TypeInfo 1
	.word	.L_ZTISt9exception.DW.stub-.Ltmp917
.Lttbase40:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
.Lfunc_begin85:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception85
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB214_18
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	move	$s4, $a1
	srai.d	$a0, $s7, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$s6, $zero, -1
	lu52i.d	$a1, $s6, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	add.d	$s3, $a0, $s7
	addi.d	$a0, $s3, 16
	ld.d	$a1, $s4, 8
	ld.d	$s4, $s4, 0
	stx.d	$a0, $s2, $s7
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 16
	bltu	$a1, $a2, .LBB214_4
# %bb.2:                                # %.noexc.i
.Ltmp918:                               # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp919:                               # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a1, $sp, 16
	st.d	$a0, $s3, 0
	st.d	$a1, $s3, 16
.LBB214_4:                              # %._crit_edge.i.i
	beq	$a1, $s6, .LBB214_7
# %bb.5:                                # %._crit_edge.i.i
	bnez	$a1, .LBB214_11
# %bb.6:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
.LBB214_7:
	ld.d	$a0, $sp, 16
	st.d	$a0, $s3, 8
	move	$s3, $s2
	bne	$s0, $s5, .LBB214_12
.LBB214_8:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	beqz	$s0, .LBB214_10
.LBB214_9:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB214_10:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB214_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 16
	st.d	$a0, $s3, 8
	move	$s3, $s2
	beq	$s0, $s5, .LBB214_8
.LBB214_12:                             # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB214_15
	.p2align	4, , 16
.LBB214_13:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB214_15 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB214_14:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB214_15 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	addi.d	$s4, $s4, 32
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB214_17
.LBB214_15:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	bne	$s3, $a1, .LBB214_13
# %bb.16:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB214_15 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB214_14
.LBB214_17:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	add.d	$s3, $s2, $s4
	bnez	$s0, .LBB214_9
	b	.LBB214_10
.LBB214_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB214_19:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22
.Ltmp920:                               # EH_LABEL
	move	$fp, $a0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end214:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_, .Lfunc_end214-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table214:
.Lexception85:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end85-.Lcst_begin85
.Lcst_begin85:
	.uleb128 .Lfunc_begin85-.Lfunc_begin85  # >> Call Site 1 <<
	.uleb128 .Ltmp918-.Lfunc_begin85        #   Call between .Lfunc_begin85 and .Ltmp918
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp918-.Lfunc_begin85        # >> Call Site 2 <<
	.uleb128 .Ltmp919-.Ltmp918              #   Call between .Ltmp918 and .Ltmp919
	.uleb128 .Ltmp920-.Lfunc_begin85        #     jumps to .Ltmp920
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp919-.Lfunc_begin85        # >> Call Site 3 <<
	.uleb128 .Lfunc_end214-.Ltmp919         #   Call between .Ltmp919 and .Lfunc_end214
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end85:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin86:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception86
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a1
	ori	$a1, $zero, 11
	addi.d	$s2, $s1, 8
	bne	$a0, $a1, .LBB215_6
# %bb.1:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB215_14
# %bb.2:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB215_30
# %bb.3:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB215_29
# %bb.4:
	bnez	$a0, .LBB215_31
# %bb.5:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB215_103
.LBB215_6:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	move	$fp, $a2
	st.d	$s0, $sp, 64
	st.d	$a2, $sp, 72
	st.d	$s0, $sp, 48
	ori	$a1, $zero, 15
	st.d	$a2, $sp, 56
	beq	$a0, $a1, .LBB215_20
# %bb.7:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 17
	beq	$a0, $a1, .LBB215_15
# %bb.8:                                # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit
	ori	$a1, $zero, 16
	bne	$a0, $a1, .LBB215_25
# %bb.9:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB215_40
# %bb.10:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB215_69
# %bb.11:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB215_56
# %bb.12:
	bnez	$a0, .LBB215_70
# %bb.13:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB215_70
.LBB215_14:
	move	$a0, $zero
	ori	$a1, $zero, 27
	st.w	$a1, $s1, 152
	b	.LBB215_103
.LBB215_15:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB215_38
# %bb.16:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB215_44
# %bb.17:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB215_43
# %bb.18:
	bnez	$a0, .LBB215_45
# %bb.19:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB215_45
.LBB215_20:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB215_39
# %bb.21:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB215_57
# %bb.22:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB215_55
# %bb.23:
	bnez	$a0, .LBB215_58
# %bb.24:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB215_58
.LBB215_25:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit44
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB215_32
# %bb.26:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $s0, 0
	ld.bu	$s5, $a0, 0
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB215_83
# %bb.27:
	ld.d	$s6, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a1, .LBB215_77
# %bb.28:
	st.b	$s7, $s6, 0
	ld.d	$a1, $fp, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $fp, 8
	b	.LBB215_83
.LBB215_29:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB215_103
.LBB215_30:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB215_31:
	move	$a0, $zero
	b	.LBB215_103
.LBB215_32:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB215_41
# %bb.33:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB215_84
# %bb.34:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB215_105
# %bb.35:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB215_104
# %bb.36:
	bnez	$a0, .LBB215_106
# %bb.37:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB215_106
.LBB215_38:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB215_45
.LBB215_39:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB215_58
.LBB215_40:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB215_70
.LBB215_41:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit63
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB215_119
# %bb.42:
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB215_102
.LBB215_43:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB215_45
.LBB215_44:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB215_45:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB215_54
# %bb.46:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB215_48
# %bb.47:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB215_54
.LBB215_48:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB215_118
# %bb.49:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i36
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB215_51
# %bb.50:
	move	$a0, $s5
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB215_51:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i39
	add.d	$s6, $s5, $s2
	beqz	$s1, .LBB215_53
# %bb.52:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i41
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_53:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i42
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB215_54:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit43
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	move	$a0, $fp
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	b	.LBB215_102
.LBB215_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB215_58
.LBB215_56:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB215_70
.LBB215_57:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB215_58:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB215_67
# %bb.59:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB215_61
# %bb.60:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB215_67
.LBB215_61:
	ld.d	$s2, $fp, 0
	sub.d	$s3, $s6, $s2
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s3, $a0, .LBB215_118
# %bb.62:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i46
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s3
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s3, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s3
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s4, $a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	stx.b	$s7, $a0, $s3
	beq	$s6, $s2, .LBB215_64
# %bb.63:
	move	$a0, $s5
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB215_64:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i49
	add.d	$s6, $s5, $s3
	beqz	$s2, .LBB215_66
# %bb.65:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i51
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_66:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i52
	addi.d	$a0, $s6, 1
	st.d	$s5, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s5, $s4
	st.d	$a0, $fp, 16
.LBB215_67:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit53
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $fp, 112
	ori	$a3, $zero, 2
	st.b	$a3, $s0, 0
	add.d	$a2, $a1, $a2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB215_117
# %bb.68:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $fp, 96
	ld.b	$a2, $fp, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $fp, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $fp, 98
	b	.LBB215_102
.LBB215_69:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB215_70:
	addi.d	$a0, $sp, 16
	move	$a1, $fp
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB215_74
# %bb.71:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $s0, 0
	ld.bu	$s5, $a1, 0
	bne	$a2, $a0, .LBB215_92
# %bb.72:
	ld.d	$s6, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s7, $s0, 1
	beq	$s6, $a0, .LBB215_85
# %bb.73:
	st.b	$s7, $s6, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB215_92
.LBB215_74:
	ld.bu	$a1, $s0, 0
	bne	$a1, $a0, .LBB215_100
# %bb.75:
	ld.d	$s5, $fp, 8
	ld.d	$a0, $fp, 16
	ld.bu	$s6, $s0, 1
	beq	$s5, $a0, .LBB215_93
# %bb.76:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB215_100
.LBB215_77:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB215_118
# %bb.78:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i55
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB215_80
# %bb.79:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB215_80:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i58
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB215_82
# %bb.81:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i60
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_82:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i61
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
	ori	$a0, $zero, 1
.LBB215_83:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit62
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	b	.LBB215_103
.LBB215_84:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB215_106
.LBB215_85:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s6, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB215_120
# %bb.86:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp923:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp924:                               # EH_LABEL
# %bb.87:                               # %.noexc20
	move	$s4, $a0
	stx.b	$s7, $a0, $s2
	beq	$s6, $s1, .LBB215_89
# %bb.88:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB215_89:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i
	add.d	$s6, $s4, $s2
	beqz	$s1, .LBB215_91
# %bb.90:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_91:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i
	addi.d	$a0, $s6, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB215_92:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $s0, 0
	st.b	$s5, $s0, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB215_101
	b	.LBB215_102
.LBB215_93:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB215_120
# %bb.94:                               # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i.i22
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp921:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp922:                               # EH_LABEL
# %bb.95:                               # %.noexc30
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB215_97
# %bb.96:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB215_97:                             # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i.i25
	add.d	$s5, $s4, $s2
	beqz	$s1, .LBB215_99
# %bb.98:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i.i27
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_99:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i.i28
	addi.d	$a0, $s5, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB215_100:                            # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $s0, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB215_102
.LBB215_101:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_102:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ori	$a0, $zero, 1
.LBB215_103:                            # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB215_104:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB215_106
.LBB215_105:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB215_106:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB215_108
# %bb.107:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB215_103
.LBB215_108:
	ld.bu	$a0, $s0, 0
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB215_112
# %bb.109:
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB215_122
# %bb.110:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB215_123
# %bb.111:
	addi.d	$a0, $sp, 64
	ori	$a1, $zero, 45
	pcaddu18i	$ra, %call36(_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc)
	jirl	$ra, $ra, 0
	b	.LBB215_102
.LBB215_112:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB215_114
# %bb.113:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $s0, 1
	ld.b	$a2, $a0, 0
	b	.LBB215_116
.LBB215_114:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB215_124
# %bb.115:
	ld.b	$a1, $s0, 1
	ori	$a2, $zero, 45
.LBB215_116:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $s0, 0
	b	.LBB215_102
.LBB215_117:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB215_118:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB215_119:
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a1, $a0, %pc_lo12(.L.str.49)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB215_120:                            # %.invoke
.Ltmp925:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp926:                               # EH_LABEL
# %bb.121:                              # %.cont
.LBB215_122:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB215_123:
	pcalau12i	$a0, %pc_hi20(.L.str.48)
	addi.d	$a1, $a0, %pc_lo12(.L.str.48)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB215_124:
	pcalau12i	$a0, %pc_hi20(.L.str.47)
	addi.d	$a1, $a0, %pc_lo12(.L.str.47)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB215_125:
.Ltmp927:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB215_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB215_127:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end215:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end215-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table215:
.Lexception86:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end86-.Lcst_begin86
.Lcst_begin86:
	.uleb128 .Lfunc_begin86-.Lfunc_begin86  # >> Call Site 1 <<
	.uleb128 .Ltmp923-.Lfunc_begin86        #   Call between .Lfunc_begin86 and .Ltmp923
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp923-.Lfunc_begin86        # >> Call Site 2 <<
	.uleb128 .Ltmp924-.Ltmp923              #   Call between .Ltmp923 and .Ltmp924
	.uleb128 .Ltmp927-.Lfunc_begin86        #     jumps to .Ltmp927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp924-.Lfunc_begin86        # >> Call Site 3 <<
	.uleb128 .Ltmp921-.Ltmp924              #   Call between .Ltmp924 and .Ltmp921
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp921-.Lfunc_begin86        # >> Call Site 4 <<
	.uleb128 .Ltmp922-.Ltmp921              #   Call between .Ltmp921 and .Ltmp922
	.uleb128 .Ltmp927-.Lfunc_begin86        #     jumps to .Ltmp927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp922-.Lfunc_begin86        # >> Call Site 5 <<
	.uleb128 .Ltmp925-.Ltmp922              #   Call between .Ltmp922 and .Ltmp925
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp925-.Lfunc_begin86        # >> Call Site 6 <<
	.uleb128 .Ltmp926-.Ltmp925              #   Call between .Ltmp925 and .Ltmp926
	.uleb128 .Ltmp927-.Lfunc_begin86        #     jumps to .Ltmp927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp926-.Lfunc_begin86        # >> Call Site 7 <<
	.uleb128 .Lfunc_end215-.Ltmp926         #   Call between .Ltmp926 and .Lfunc_end215
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end86:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin87:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception87
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 112
	move	$s0, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB216_11
# %bb.1:
	ld.d	$a0, $s0, 0
	ld.d	$s5, $fp, 8
	ld.d	$a1, $fp, 16
	ld.bu	$s6, $a0, 0
	beq	$s5, $a1, .LBB216_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB216_10
.LBB216_3:
	ld.d	$s1, $fp, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB216_13
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp928:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp929:                               # EH_LABEL
# %bb.5:                                # %.noexc8
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB216_7
# %bb.6:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB216_7:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s0, $s4, $s2
	beqz	$s1, .LBB216_9
# %bb.8:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB216_9:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s0, 1
	st.d	$s4, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $fp, 16
.LBB216_10:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB216_11:
.Ltmp933:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a1, $a0, %pc_lo12(.L.str.50)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp934:                               # EH_LABEL
# %bb.12:
.LBB216_13:
.Ltmp930:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp931:                               # EH_LABEL
# %bb.14:                               # %.noexc
.LBB216_15:
.Ltmp932:                               # EH_LABEL
	b	.LBB216_17
.LBB216_16:
.Ltmp935:                               # EH_LABEL
.LBB216_17:
	move	$fp, $a0
	ld.d	$a0, $s0, 0
	addi.d	$a1, $s0, 16
	beq	$a0, $a1, .LBB216_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB216_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end216:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end216-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table216:
.Lexception87:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end87-.Lcst_begin87
.Lcst_begin87:
	.uleb128 .Lfunc_begin87-.Lfunc_begin87  # >> Call Site 1 <<
	.uleb128 .Ltmp928-.Lfunc_begin87        #   Call between .Lfunc_begin87 and .Ltmp928
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp928-.Lfunc_begin87        # >> Call Site 2 <<
	.uleb128 .Ltmp929-.Ltmp928              #   Call between .Ltmp928 and .Ltmp929
	.uleb128 .Ltmp932-.Lfunc_begin87        #     jumps to .Ltmp932
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp929-.Lfunc_begin87        # >> Call Site 3 <<
	.uleb128 .Ltmp933-.Ltmp929              #   Call between .Ltmp929 and .Ltmp933
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp933-.Lfunc_begin87        # >> Call Site 4 <<
	.uleb128 .Ltmp934-.Ltmp933              #   Call between .Ltmp933 and .Ltmp934
	.uleb128 .Ltmp935-.Lfunc_begin87        #     jumps to .Ltmp935
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp930-.Lfunc_begin87        # >> Call Site 5 <<
	.uleb128 .Ltmp931-.Ltmp930              #   Call between .Ltmp930 and .Ltmp931
	.uleb128 .Ltmp932-.Lfunc_begin87        #     jumps to .Ltmp932
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp931-.Lfunc_begin87        # >> Call Site 6 <<
	.uleb128 .Lfunc_end216-.Ltmp931         #   Call between .Ltmp931 and .Lfunc_end216
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end87:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.p2align	5
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a2, $a0, 0
	ld.bu	$a3, $a2, 0
	ori	$s3, $zero, 1
	bne	$a3, $s3, .LBB217_9
# %bb.1:
	ld.d	$s4, $a0, 8
	ld.d	$s7, $s4, 8
	ld.d	$a3, $s4, 16
	ld.bu	$s8, $a2, 1
	beq	$s7, $a3, .LBB217_3
# %bb.2:
	st.b	$s8, $s7, 0
	ld.d	$a2, $s4, 8
	addi.d	$a2, $a2, 1
	st.d	$a2, $s4, 8
	b	.LBB217_9
.LBB217_3:
	move	$s6, $a0
	ld.d	$fp, $s4, 0
	sub.d	$s0, $s7, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB217_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	move	$s5, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s8, $a0, $s0
	beq	$s7, $fp, .LBB217_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB217_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s7, $s2, $s0
	beqz	$fp, .LBB217_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB217_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s7, 1
	st.d	$s2, $s4, 0
	st.d	$a0, $s4, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s4, 16
	move	$a0, $s6
	move	$a1, $s5
.LBB217_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	st.b	$s3, $a0, 0
	st.b	$a1, $a0, 1
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB217_10:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end217:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc, .Lfunc_end217-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,"axG",@progbits,_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,comdat
	.hidden	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv # -- Begin function _ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.weak	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.p2align	5
	.type	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv,@function
_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv: # @_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	ld.d	$a1, $a0, 0
	ld.bu	$a2, $a1, 0
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB218_9
# %bb.1:
	ld.d	$s3, $a0, 8
	ld.d	$s5, $s3, 8
	ld.d	$a2, $s3, 16
	ld.bu	$s6, $a1, 1
	beq	$s5, $a2, .LBB218_3
# %bb.2:
	st.b	$s6, $s5, 0
	ld.d	$a1, $s3, 8
	addi.d	$a1, $a1, 1
	st.d	$a1, $s3, 8
	b	.LBB218_9
.LBB218_3:
	move	$s4, $a0
	ld.d	$fp, $s3, 0
	sub.d	$s0, $s5, $fp
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB218_10
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s0, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s1, $a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	stx.b	$s6, $a0, $s0
	beq	$s5, $fp, .LBB218_6
# %bb.5:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB218_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i.i
	add.d	$s5, $s2, $s0
	beqz	$fp, .LBB218_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB218_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i.i
	addi.d	$a0, $s5, 1
	st.d	$s2, $s3, 0
	st.d	$a0, $s3, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $s3, 16
	move	$a0, $s4
.LBB218_9:                              # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE11_M_add_charEc.exit
	ld.d	$a0, $a0, 0
	ori	$a1, $zero, 2
	st.b	$a1, $a0, 0
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB218_10:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end218:
	.size	_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv, .Lfunc_end218-_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb0ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin88:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception88
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB219_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
.Ltmp936:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp937:                               # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	addi.d	$s0, $sp, 24
	beq	$a0, $s2, .LBB219_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	beq	$a1, $s0, .LBB219_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB219_8
.LBB219_5:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	b	.LBB219_14
.LBB219_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	beq	$a1, $s0, .LBB219_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB219_5
.LBB219_8:
	st.d	$s0, $sp, 8
	move	$a0, $s0
	b	.LBB219_14
.LBB219_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB219_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB219_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB219_13
.LBB219_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB219_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB219_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB219_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB219_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB219_20
# %bb.18:                               # %.noexc.i.i
.Ltmp939:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp940:                               # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB219_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB219_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB219_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB219_28
.LBB219_23:
	addi.d	$a0, $fp, 24
.Ltmp941:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp942:                               # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB219_26
.LBB219_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB219_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB219_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB219_25
	b	.LBB219_26
.LBB219_29:
.Ltmp943:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.175)
	addi.d	$a1, $a0, %pc_lo12(.L.str.175)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp944:                               # EH_LABEL
# %bb.30:
.LBB219_31:
.Ltmp938:                               # EH_LABEL
	b	.LBB219_33
.LBB219_32:
.Ltmp945:                               # EH_LABEL
.LBB219_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB219_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB219_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end219:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end219-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table219:
.Lexception88:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end88-.Lcst_begin88
.Lcst_begin88:
	.uleb128 .Lfunc_begin88-.Lfunc_begin88  # >> Call Site 1 <<
	.uleb128 .Ltmp936-.Lfunc_begin88        #   Call between .Lfunc_begin88 and .Ltmp936
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp936-.Lfunc_begin88        # >> Call Site 2 <<
	.uleb128 .Ltmp937-.Ltmp936              #   Call between .Ltmp936 and .Ltmp937
	.uleb128 .Ltmp938-.Lfunc_begin88        #     jumps to .Ltmp938
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp937-.Lfunc_begin88        # >> Call Site 3 <<
	.uleb128 .Ltmp939-.Ltmp937              #   Call between .Ltmp937 and .Ltmp939
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp939-.Lfunc_begin88        # >> Call Site 4 <<
	.uleb128 .Ltmp942-.Ltmp939              #   Call between .Ltmp939 and .Ltmp942
	.uleb128 .Ltmp945-.Lfunc_begin88        #     jumps to .Ltmp945
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp942-.Lfunc_begin88        # >> Call Site 5 <<
	.uleb128 .Ltmp943-.Ltmp942              #   Call between .Ltmp942 and .Ltmp943
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp943-.Lfunc_begin88        # >> Call Site 6 <<
	.uleb128 .Ltmp944-.Ltmp943              #   Call between .Ltmp943 and .Ltmp944
	.uleb128 .Ltmp945-.Lfunc_begin88        #     jumps to .Ltmp945
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp944-.Lfunc_begin88        # >> Call Site 7 <<
	.uleb128 .Lfunc_end219-.Ltmp944         #   Call between .Ltmp944 and .Lfunc_end219
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end88:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
.Lfunc_begin89:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception89
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a2
	blt	$a2, $a1, .LBB220_32
# %bb.1:
	move	$a2, $a1
	move	$fp, $a0
	addi.d	$s1, $sp, 152
	st.d	$s1, $sp, 136
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp946:                               # EH_LABEL
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp947:                               # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB220_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_4:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb0ELb1EE12_M_transformEc.exit
	st.d	$s1, $sp, 136
.Ltmp949:                               # EH_LABEL
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp950:                               # EH_LABEL
# %bb.5:                                # %.noexc
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp952:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp953:                               # EH_LABEL
# %bb.6:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB220_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i13
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_8:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i.i14
	ld.d	$a0, $sp, 40
	addi.d	$s1, $sp, 88
	addi.d	$s0, $sp, 56
	st.d	$s1, $sp, 72
	beq	$a0, $s0, .LBB220_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i16
	ld.d	$a1, $sp, 56
	ld.d	$s4, $sp, 48
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
	b	.LBB220_11
.LBB220_10:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
	ld.d	$s4, $sp, 48
	addi.d	$a2, $s4, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB220_11:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i
	st.d	$s4, $sp, 80
	st.d	$s0, $sp, 40
	st.d	$zero, $sp, 48
	ld.d	$a0, $sp, 8
	st.b	$zero, $sp, 56
	addi.d	$s3, $sp, 120
	addi.d	$s2, $sp, 24
	st.d	$s3, $sp, 104
	beq	$a0, $s2, .LBB220_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i3.i.i
	ld.d	$a1, $sp, 24
	ld.d	$s6, $sp, 16
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
	b	.LBB220_14
.LBB220_13:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i4.i.i
	ld.d	$s6, $sp, 16
	addi.d	$a2, $s6, 1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB220_14:
	ld.d	$s5, $fp, 56
	ld.d	$a0, $fp, 64
	st.d	$s6, $sp, 112
	st.d	$s2, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beq	$s5, $a0, .LBB220_17
# %bb.15:
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 72
	beq	$a1, $s1, .LBB220_20
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	st.d	$a1, $s5, 0
	ld.d	$a0, $sp, 88
	st.d	$a0, $s5, 16
	b	.LBB220_21
.LBB220_17:
.Ltmp955:                               # EH_LABEL
	addi.d	$a0, $fp, 48
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp956:                               # EH_LABEL
# %bb.18:                               # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit
	ld.d	$a0, $sp, 104
	beq	$a0, $s3, .LBB220_25
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i18
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB220_25
.LBB220_20:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i
	addi.d	$a2, $s4, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB220_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i
	st.d	$s4, $s5, 8
	addi.d	$a0, $s5, 48
	st.d	$a0, $s5, 32
	ld.d	$a1, $sp, 104
	st.d	$s1, $sp, 72
	st.d	$zero, $sp, 80
	st.b	$zero, $sp, 88
	beq	$a1, $s3, .LBB220_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i.i.i
	st.d	$a1, $s5, 32
	ld.d	$a0, $sp, 120
	ld.d	$s4, $sp, 112
	st.d	$a0, $s5, 48
	b	.LBB220_24
.LBB220_23:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i.i.i
	ld.d	$s4, $sp, 112
	addi.d	$a2, $s4, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB220_24:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit.thread
	st.d	$s4, $s5, 40
	ld.d	$a0, $fp, 56
	st.d	$s3, $sp, 104
	st.d	$zero, $sp, 112
	st.b	$zero, $sp, 120
	addi.d	$a0, $a0, 64
	st.d	$a0, $fp, 56
.LBB220_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $sp, 72
	beq	$a0, $s1, .LBB220_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_27:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB220_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB220_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_31:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB220_32:
	pcalau12i	$a0, %pc_hi20(.L.str.176)
	addi.d	$a1, $a0, %pc_lo12(.L.str.176)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB220_33:
.Ltmp957:                               # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB220_39
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	b	.LBB220_37
.LBB220_35:
.Ltmp954:                               # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB220_39
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i10
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB220_37:                             # %.body
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB220_39
.LBB220_38:
.Ltmp951:                               # EH_LABEL
	move	$fp, $a0
.LBB220_39:                             # %.body
	ld.d	$a0, $sp, 40
	addi.d	$a1, $sp, 56
	beq	$a0, $a1, .LBB220_44
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	b	.LBB220_43
.LBB220_41:
.Ltmp948:                               # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB220_44
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB220_43:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB220_44:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end220:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc, .Lfunc_end220-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EE13_M_make_rangeEcc,comdat
	.p2align	2, 0x0
GCC_except_table220:
.Lexception89:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end89-.Lcst_begin89
.Lcst_begin89:
	.uleb128 .Lfunc_begin89-.Lfunc_begin89  # >> Call Site 1 <<
	.uleb128 .Ltmp946-.Lfunc_begin89        #   Call between .Lfunc_begin89 and .Ltmp946
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp946-.Lfunc_begin89        # >> Call Site 2 <<
	.uleb128 .Ltmp947-.Ltmp946              #   Call between .Ltmp946 and .Ltmp947
	.uleb128 .Ltmp948-.Lfunc_begin89        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp947-.Lfunc_begin89        # >> Call Site 3 <<
	.uleb128 .Ltmp949-.Ltmp947              #   Call between .Ltmp947 and .Ltmp949
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp949-.Lfunc_begin89        # >> Call Site 4 <<
	.uleb128 .Ltmp950-.Ltmp949              #   Call between .Ltmp949 and .Ltmp950
	.uleb128 .Ltmp951-.Lfunc_begin89        #     jumps to .Ltmp951
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp952-.Lfunc_begin89        # >> Call Site 5 <<
	.uleb128 .Ltmp953-.Ltmp952              #   Call between .Ltmp952 and .Ltmp953
	.uleb128 .Ltmp954-.Lfunc_begin89        #     jumps to .Ltmp954
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp953-.Lfunc_begin89        # >> Call Site 6 <<
	.uleb128 .Ltmp955-.Ltmp953              #   Call between .Ltmp953 and .Ltmp955
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp955-.Lfunc_begin89        # >> Call Site 7 <<
	.uleb128 .Ltmp956-.Ltmp955              #   Call between .Ltmp955 and .Ltmp956
	.uleb128 .Ltmp957-.Lfunc_begin89        #     jumps to .Ltmp957
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp956-.Lfunc_begin89        # >> Call Site 8 <<
	.uleb128 .Lfunc_end220-.Ltmp956         #   Call between .Ltmp956 and .Lfunc_end220
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end89:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_ # -- Begin function _ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_,@function
_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_: # @_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -64
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB221_20
# %bb.1:                                # %_ZNKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_M_check_lenEmPKc.exit
	move	$s3, $a1
	srai.d	$a0, $s7, 6
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 31
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 6
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$a1, $s3, 0
	add.d	$s6, $a0, $s7
	addi.d	$a0, $s6, 16
	addi.d	$s4, $s3, 16
	stx.d	$a0, $s2, $s7
	beq	$a1, $s4, .LBB221_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $s3, 16
	ld.d	$s7, $s3, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
	b	.LBB221_4
.LBB221_3:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	ld.d	$s7, $s3, 8
	addi.d	$a2, $s7, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB221_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	st.d	$s7, $s6, 8
	st.d	$s4, $s3, 0
	st.d	$zero, $s3, 8
	ld.d	$a1, $s3, 32
	st.b	$zero, $s3, 16
	addi.d	$a0, $s6, 48
	addi.d	$s4, $s3, 48
	st.d	$a0, $s6, 32
	beq	$a1, $s4, .LBB221_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i
	ld.d	$a0, $s3, 48
	ld.d	$s7, $s3, 40
	st.d	$a1, $s6, 32
	st.d	$a0, $s6, 48
	b	.LBB221_7
.LBB221_6:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i
	ld.d	$s7, $s3, 40
	addi.d	$a2, $s7, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB221_7:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2EOS6_.exit
	st.d	$s7, $s6, 40
	st.d	$s4, $s3, 32
	st.d	$zero, $s3, 40
	st.b	$zero, $s3, 48
	move	$s3, $s2
	beq	$s0, $s5, .LBB221_17
# %bb.8:                                # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB221_11
	.p2align	4, , 16
.LBB221_9:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i.i.i.i.i
                                        #   in Loop: Header=BB221_11 Depth=1
	ld.d	$a2, $s3, 0
	ld.d	$s8, $s7, 40
	st.d	$a1, $s6, 32
	st.d	$a2, $a0, 0
.LBB221_10:                             # %_ZSt19__relocate_object_aISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ES7_SaIS7_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB221_11 Depth=1
	st.d	$s8, $s6, 40
	st.d	$s3, $s7, 32
	st.d	$zero, $s7, 40
	addi.d	$s4, $s4, 64
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB221_16
.LBB221_11:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	beq	$s3, $a1, .LBB221_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB221_11 Depth=1
	ld.d	$a2, $s3, 0
	ld.d	$s8, $s7, 8
	stx.d	$a1, $s2, $s4
	st.d	$a2, $a0, 0
	b	.LBB221_14
	.p2align	4, , 16
.LBB221_13:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB221_11 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB221_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB221_11 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	ld.d	$a1, $s7, 32
	st.b	$zero, $s3, 0
	addi.d	$a0, $s6, 48
	addi.d	$s3, $s7, 48
	st.d	$a0, $s6, 32
	bne	$s3, $a1, .LBB221_9
# %bb.15:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i.i.i.i.i
                                        #   in Loop: Header=BB221_11 Depth=1
	ld.d	$s8, $s7, 40
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB221_10
.LBB221_16:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE11_S_relocateEPS7_SA_SA_RS8_.exit.loopexit
	add.d	$s3, $s2, $s4
.LBB221_17:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE11_S_relocateEPS7_SA_SA_RS8_.exit
	beqz	$s0, .LBB221_19
# %bb.18:                               # %_ZNSt12_Vector_baseISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE13_M_deallocateEPS7_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB221_19:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 64
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB221_20:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end221:
	.size	_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_, .Lfunc_end221-_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin90:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception90
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a2
	move	$fp, $a1
	addi.d	$a0, $a0, -11
	ori	$a1, $zero, 6
	addi.d	$s2, $s1, 8
	bltu	$a1, $a0, .LBB222_23
# %bb.1:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI222_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI222_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB222_2:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB222_34
# %bb.3:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB222_54
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB222_52
# %bb.5:
	bnez	$a0, .LBB222_7
# %bb.6:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.LBB222_7:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$s2, $zero
	b	.LBB222_65
.LBB222_8:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB222_33
# %bb.9:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB222_42
# %bb.10:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB222_41
# %bb.11:
	bnez	$a0, .LBB222_43
# %bb.12:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB222_43
.LBB222_13:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB222_35
# %bb.14:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB222_55
# %bb.15:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB222_53
# %bb.16:
	bnez	$a0, .LBB222_56
# %bb.17:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB222_56
.LBB222_18:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB222_36
# %bb.19:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB222_61
# %bb.20:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB222_60
# %bb.21:
	bnez	$a0, .LBB222_62
# %bb.22:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB222_62
.LBB222_23:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB222_27
# %bb.24:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $fp, 0
	ld.bu	$s1, $a0, 0
	ori	$s2, $zero, 1
	bne	$a1, $s2, .LBB222_26
# %bb.25:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB222_26:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit32
	st.b	$s2, $fp, 0
	st.b	$s1, $fp, 1
	b	.LBB222_65
.LBB222_27:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB222_37
# %bb.28:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB222_66
# %bb.29:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB222_68
# %bb.30:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB222_67
# %bb.31:
	bnez	$a0, .LBB222_69
# %bb.32:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB222_69
.LBB222_33:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB222_43
.LBB222_34:
	move	$s2, $zero
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB222_65
.LBB222_35:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB222_56
.LBB222_36:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB222_62
.LBB222_37:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit33
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB222_83
# %bb.38:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB222_40
# %bb.39:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB222_40:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit39
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ori	$a2, $zero, 2
	st.b	$a2, $fp, 0
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB222_65
.LBB222_41:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB222_43
.LBB222_42:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB222_43:
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB222_47
# %bb.44:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $fp, 0
	ld.bu	$s1, $a1, 0
	bne	$a2, $a0, .LBB222_46
# %bb.45:
	ld.b	$a1, $fp, 1
.Ltmp960:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp961:                               # EH_LABEL
.LBB222_46:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 0
	st.b	$s1, $fp, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB222_50
	b	.LBB222_51
.LBB222_47:
	ld.bu	$a1, $fp, 0
	bne	$a1, $a0, .LBB222_49
# %bb.48:
	ld.b	$a1, $fp, 1
.Ltmp958:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp959:                               # EH_LABEL
.LBB222_49:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB222_51
.LBB222_50:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB222_51:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	ori	$s2, $zero, 1
	b	.LBB222_65
.LBB222_52:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB222_65
.LBB222_53:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB222_56
.LBB222_54:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB222_65
.LBB222_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB222_56:
	ld.bu	$a0, $fp, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB222_58
# %bb.57:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB222_58:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit30
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $s0, 112
	ori	$a3, $zero, 2
	st.b	$a3, $fp, 0
	add.d	$a2, $a1, $a2
	ori	$a3, $zero, 1
	ori	$s2, $zero, 1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB222_82
# %bb.59:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $s0, 96
	ld.b	$a2, $s0, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $s0, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $s0, 98
	b	.LBB222_65
.LBB222_60:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB222_62
.LBB222_61:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB222_62:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB222_64
# %bb.63:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB222_64:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit27
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.LBB222_65:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s2
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB222_66:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB222_69
.LBB222_67:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB222_69
.LBB222_68:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB222_69:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	ld.bu	$a1, $fp, 0
	beqz	$a0, .LBB222_73
# %bb.70:
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB222_72
# %bb.71:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB222_72:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit35
	move	$s2, $zero
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	b	.LBB222_65
.LBB222_73:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB222_77
# %bb.74:
	ori	$a0, $zero, 2
	beq	$a1, $a0, .LBB222_84
# %bb.75:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB222_85
# %bb.76:                               # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit37
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB222_65
.LBB222_77:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB222_79
# %bb.78:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $fp, 1
	ld.b	$a2, $a0, 0
	b	.LBB222_81
.LBB222_79:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB222_86
# %bb.80:
	ld.b	$a1, $fp, 1
	ori	$a2, $zero, 45
.LBB222_81:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB222_65
.LBB222_82:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB222_83:
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a1, $a0, %pc_lo12(.L.str.49)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB222_84:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB222_85:
	pcalau12i	$a0, %pc_hi20(.L.str.48)
	addi.d	$a1, $a0, %pc_lo12(.L.str.48)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB222_86:
	pcalau12i	$a0, %pc_hi20(.L.str.47)
	addi.d	$a1, $a0, %pc_lo12(.L.str.47)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB222_87:
.Ltmp962:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB222_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB222_89:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end222:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end222-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
.LJTI222_0:
	.word	.LBB222_2-.LJTI222_0
	.word	.LBB222_23-.LJTI222_0
	.word	.LBB222_23-.LJTI222_0
	.word	.LBB222_23-.LJTI222_0
	.word	.LBB222_13-.LJTI222_0
	.word	.LBB222_8-.LJTI222_0
	.word	.LBB222_18-.LJTI222_0
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb0EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table222:
.Lexception90:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end90-.Lcst_begin90
.Lcst_begin90:
	.uleb128 .Lfunc_begin90-.Lfunc_begin90  # >> Call Site 1 <<
	.uleb128 .Ltmp960-.Lfunc_begin90        #   Call between .Lfunc_begin90 and .Ltmp960
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp960-.Lfunc_begin90        # >> Call Site 2 <<
	.uleb128 .Ltmp959-.Ltmp960              #   Call between .Ltmp960 and .Ltmp959
	.uleb128 .Ltmp962-.Lfunc_begin90        #     jumps to .Ltmp962
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp959-.Lfunc_begin90        # >> Call Site 3 <<
	.uleb128 .Lfunc_end222-.Ltmp959         #   Call between .Ltmp959 and .Lfunc_end222
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end90:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 104
	move	$s0, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB223_10
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s0
	jirl	$ra, $a2, 0
	ld.d	$s4, $fp, 8
	ld.d	$a1, $fp, 16
	beq	$s4, $a1, .LBB223_3
# %bb.2:
	st.b	$a0, $s4, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB223_9
.LBB223_3:
	move	$s5, $a0
	ld.d	$s0, $fp, 0
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB223_11
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB223_6
# %bb.5:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB223_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB223_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB223_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 16
.LBB223_9:                              # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB223_10:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB223_11:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end223:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc, .Lfunc_end223-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE11_M_add_charEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin91:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception91
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 112
	move	$fp, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 8
	beqz	$a0, .LBB224_13
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.b	$s1, $a0, 0
	ld.d	$s2, $s0, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB224_15
# %bb.2:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit.i
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
.Ltmp963:                               # EH_LABEL
	move	$a1, $s1
	jirl	$ra, $a2, 0
.Ltmp964:                               # EH_LABEL
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb0EE12_M_translateEc.exit
	ld.d	$s5, $s0, 8
	ld.d	$a1, $s0, 16
	beq	$s5, $a1, .LBB224_5
# %bb.4:
	st.b	$a0, $s5, 0
	ld.d	$a0, $s0, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 8
	b	.LBB224_12
.LBB224_5:
	move	$s6, $a0
	ld.d	$s1, $s0, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB224_17
# %bb.6:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp965:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp966:                               # EH_LABEL
# %bb.7:                                # %.noexc10
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB224_9
# %bb.8:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB224_9:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$fp, $s4, $s2
	beqz	$s1, .LBB224_11
# %bb.10:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_11:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $fp, 1
	st.d	$s4, $s0, 0
	st.d	$a0, $s0, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $s0, 16
.LBB224_12:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB224_13:
.Ltmp972:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a1, $a0, %pc_lo12(.L.str.50)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp973:                               # EH_LABEL
# %bb.14:
.LBB224_15:
.Ltmp969:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp970:                               # EH_LABEL
# %bb.16:                               # %.noexc
.LBB224_17:
.Ltmp967:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp968:                               # EH_LABEL
# %bb.18:                               # %.noexc9
.LBB224_19:
.Ltmp974:                               # EH_LABEL
	b	.LBB224_21
.LBB224_20:
.Ltmp971:                               # EH_LABEL
.LBB224_21:
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB224_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB224_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end224:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end224-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table224:
.Lexception91:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end91-.Lcst_begin91
.Lcst_begin91:
	.uleb128 .Lfunc_begin91-.Lfunc_begin91  # >> Call Site 1 <<
	.uleb128 .Ltmp963-.Lfunc_begin91        #   Call between .Lfunc_begin91 and .Ltmp963
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp963-.Lfunc_begin91        # >> Call Site 2 <<
	.uleb128 .Ltmp966-.Ltmp963              #   Call between .Ltmp963 and .Ltmp966
	.uleb128 .Ltmp971-.Lfunc_begin91        #     jumps to .Ltmp971
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp966-.Lfunc_begin91        # >> Call Site 3 <<
	.uleb128 .Ltmp972-.Ltmp966              #   Call between .Ltmp966 and .Ltmp972
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp972-.Lfunc_begin91        # >> Call Site 4 <<
	.uleb128 .Ltmp973-.Ltmp972              #   Call between .Ltmp972 and .Ltmp973
	.uleb128 .Ltmp974-.Lfunc_begin91        #     jumps to .Ltmp974
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp969-.Lfunc_begin91        # >> Call Site 5 <<
	.uleb128 .Ltmp968-.Ltmp969              #   Call between .Ltmp969 and .Ltmp968
	.uleb128 .Ltmp971-.Lfunc_begin91        #     jumps to .Ltmp971
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp968-.Lfunc_begin91        # >> Call Site 6 <<
	.uleb128 .Lfunc_end224-.Ltmp968         #   Call between .Ltmp968 and .Lfunc_end224
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end91:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin92:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception92
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB225_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
.Ltmp975:                               # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp976:                               # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	addi.d	$s0, $sp, 24
	beq	$a0, $s2, .LBB225_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	beq	$a1, $s0, .LBB225_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB225_8
.LBB225_5:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	b	.LBB225_14
.LBB225_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	beq	$a1, $s0, .LBB225_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB225_5
.LBB225_8:
	st.d	$s0, $sp, 8
	move	$a0, $s0
	b	.LBB225_14
.LBB225_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB225_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB225_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB225_13
.LBB225_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB225_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB225_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB225_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB225_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB225_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB225_20
# %bb.18:                               # %.noexc.i.i
.Ltmp978:                               # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp979:                               # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB225_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB225_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB225_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB225_28
.LBB225_23:
	addi.d	$a0, $fp, 24
.Ltmp980:                               # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp981:                               # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB225_26
.LBB225_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB225_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB225_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB225_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB225_25
	b	.LBB225_26
.LBB225_29:
.Ltmp982:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.175)
	addi.d	$a1, $a0, %pc_lo12(.L.str.175)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp983:                               # EH_LABEL
# %bb.30:
.LBB225_31:
.Ltmp977:                               # EH_LABEL
	b	.LBB225_33
.LBB225_32:
.Ltmp984:                               # EH_LABEL
.LBB225_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB225_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB225_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end225:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end225-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table225:
.Lexception92:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end92-.Lcst_begin92
.Lcst_begin92:
	.uleb128 .Lfunc_begin92-.Lfunc_begin92  # >> Call Site 1 <<
	.uleb128 .Ltmp975-.Lfunc_begin92        #   Call between .Lfunc_begin92 and .Ltmp975
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp975-.Lfunc_begin92        # >> Call Site 2 <<
	.uleb128 .Ltmp976-.Ltmp975              #   Call between .Ltmp975 and .Ltmp976
	.uleb128 .Ltmp977-.Lfunc_begin92        #     jumps to .Ltmp977
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp976-.Lfunc_begin92        # >> Call Site 3 <<
	.uleb128 .Ltmp978-.Ltmp976              #   Call between .Ltmp976 and .Ltmp978
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp978-.Lfunc_begin92        # >> Call Site 4 <<
	.uleb128 .Ltmp981-.Ltmp978              #   Call between .Ltmp978 and .Ltmp981
	.uleb128 .Ltmp984-.Lfunc_begin92        #     jumps to .Ltmp984
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp981-.Lfunc_begin92        # >> Call Site 5 <<
	.uleb128 .Ltmp982-.Ltmp981              #   Call between .Ltmp981 and .Ltmp982
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp982-.Lfunc_begin92        # >> Call Site 6 <<
	.uleb128 .Ltmp983-.Ltmp982              #   Call between .Ltmp982 and .Ltmp983
	.uleb128 .Ltmp984-.Lfunc_begin92        #     jumps to .Ltmp984
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp983-.Lfunc_begin92        # >> Call Site 7 <<
	.uleb128 .Lfunc_end225-.Ltmp983         #   Call between .Ltmp983 and .Lfunc_end225
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end92:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	blt	$a2, $a1, .LBB226_15
# %bb.1:
	ld.d	$s3, $a0, 56
	ld.d	$a3, $a0, 64
	bstrins.d	$a1, $a2, 63, 8
	beq	$s3, $a3, .LBB226_3
# %bb.2:
	st.h	$a1, $s3, 0
	ld.d	$a1, $a0, 56
	addi.d	$a1, $a1, 2
	st.d	$a1, $a0, 56
	b	.LBB226_14
.LBB226_3:
	move	$s2, $a0
	ld.d	$fp, $a0, 48
	sub.d	$s0, $s3, $fp
	addi.w	$a0, $zero, -2
	lu52i.d	$a0, $a0, 2047
	beq	$s0, $a0, .LBB226_16
# %bb.4:                                # %_ZNKSt6vectorISt4pairIccESaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
	move	$s5, $a1
	srai.d	$a0, $s0, 1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 1023
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	stx.h	$s5, $a0, $s0
	move	$s5, $a0
	beq	$fp, $s3, .LBB226_11
# %bb.5:                                # %.lr.ph.i.i.i.i.i.i.preheader
	addi.d	$a1, $s0, -2
	ori	$a2, $zero, 30
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a1, $a2, .LBB226_10
# %bb.6:                                # %.lr.ph.i.i.i.i.i.i.preheader
	sub.d	$a2, $s1, $fp
	ori	$a3, $zero, 32
	move	$s5, $s1
	move	$a0, $fp
	bltu	$a2, $a3, .LBB226_10
# %bb.7:                                # %vector.ph
	srli.d	$a0, $a1, 1
	addi.d	$a1, $a0, 1
	move	$a2, $a1
	bstrins.d	$a2, $zero, 3, 0
	alsl.d	$s5, $a2, $s1, 1
	alsl.d	$a0, $a2, $fp, 1
	addi.d	$a3, $fp, 16
	addi.d	$a4, $s1, 16
	move	$a5, $a2
	.p2align	4, , 16
.LBB226_8:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a3, -16
	vld	$vr1, $a3, 0
	vst	$vr0, $a4, -16
	vst	$vr1, $a4, 0
	addi.d	$a3, $a3, 32
	addi.d	$a5, $a5, -16
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB226_8
# %bb.9:                                # %middle.block
	beq	$a1, $a2, .LBB226_11
	.p2align	4, , 16
.LBB226_10:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.h	$a1, $a0, 0
	st.h	$a1, $s5, 0
	addi.d	$a0, $a0, 2
	addi.d	$s5, $s5, 2
	bne	$a0, $s3, .LBB226_10
.LBB226_11:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit.i.i.i
	beqz	$fp, .LBB226_13
# %bb.12:                               # %_ZNSt12_Vector_baseISt4pairIccESaIS1_EE13_M_deallocateEPS1_m.exit.i.i.i.i
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB226_13:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE17_M_realloc_appendIJS1_EEEvDpOT_.exit.i.i
	addi.d	$a0, $s5, 2
	st.d	$s1, $s2, 48
	st.d	$a0, $s2, 56
	alsl.d	$a0, $s4, $s1, 1
	st.d	$a0, $s2, 64
.LBB226_14:                             # %_ZNSt6vectorISt4pairIccESaIS1_EE9push_backEOS1_.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB226_15:
	pcalau12i	$a0, %pc_hi20(.L.str.176)
	addi.d	$a1, $a0, %pc_lo12(.L.str.176)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB226_16:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end226:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc, .Lfunc_end226-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EE13_M_make_rangeEcc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"axG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.weak	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE # -- Begin function _ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.p2align	5
	.type	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,@function
_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE: # @_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
.Lfunc_begin93:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception93
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ld.w	$a0, $a0, 152
	move	$s0, $a2
	move	$fp, $a1
	addi.d	$a0, $a0, -11
	ori	$a1, $zero, 6
	addi.d	$s2, $s1, 8
	bltu	$a1, $a0, .LBB227_23
# %bb.1:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI227_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI227_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB227_2:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB227_34
# %bb.3:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB227_54
# %bb.4:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB227_52
# %bb.5:
	bnez	$a0, .LBB227_7
# %bb.6:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
.LBB227_7:                              # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$s2, $zero
	b	.LBB227_65
.LBB227_8:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB227_33
# %bb.9:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB227_42
# %bb.10:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB227_41
# %bb.11:
	bnez	$a0, .LBB227_43
# %bb.12:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB227_43
.LBB227_13:
	addi.d	$a1, $s1, 208
	addi.d	$a0, $s1, 272
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB227_35
# %bb.14:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB227_55
# %bb.15:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB227_53
# %bb.16:
	bnez	$a0, .LBB227_56
# %bb.17:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB227_56
.LBB227_18:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB227_36
# %bb.19:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB227_61
# %bb.20:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB227_60
# %bb.21:
	bnez	$a0, .LBB227_62
# %bb.22:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB227_62
.LBB227_23:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB227_27
# %bb.24:
	ld.d	$a0, $s1, 272
	ld.bu	$a1, $fp, 0
	ld.bu	$s1, $a0, 0
	ori	$s2, $zero, 1
	bne	$a1, $s2, .LBB227_26
# %bb.25:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB227_26:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit32
	st.b	$s2, $fp, 0
	st.b	$s1, $fp, 1
	b	.LBB227_65
.LBB227_27:
	ld.w	$a0, $s1, 152
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB227_37
# %bb.28:
	addi.d	$a1, $s1, 208
	addi.d	$s3, $s1, 272
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 184
	ld.d	$a1, $s1, 192
	beq	$a0, $a1, .LBB227_66
# %bb.29:
	ld.w	$a0, $s1, 144
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB227_68
# %bb.30:
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB227_67
# %bb.31:
	bnez	$a0, .LBB227_69
# %bb.32:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE14_M_scan_normalEv)
	jirl	$ra, $ra, 0
	b	.LBB227_69
.LBB227_33:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB227_43
.LBB227_34:
	move	$s2, $zero
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB227_65
.LBB227_35:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB227_56
.LBB227_36:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB227_62
.LBB227_37:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit33
	ori	$a1, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB227_83
# %bb.38:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB227_40
# %bb.39:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB227_40:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit39
	ld.d	$a0, $s1, 272
	ld.d	$a1, $s1, 392
	ori	$a2, $zero, 2
	st.b	$a2, $fp, 0
	ld.bu	$a0, $a0, 0
	ld.d	$a1, $a1, 48
	slli.d	$a0, $a0, 1
	ldx.hu	$a0, $a1, $a0
	addi.d	$a1, $s1, 272
	bstrpick.d	$a2, $a0, 8, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb)
	jirl	$ra, $ra, 0
	b	.LBB227_65
.LBB227_41:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB227_43
.LBB227_42:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB227_43:
	addi.d	$a0, $sp, 16
	move	$a1, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB227_47
# %bb.44:
	ld.d	$a1, $sp, 16
	ld.bu	$a2, $fp, 0
	ld.bu	$s1, $a1, 0
	bne	$a2, $a0, .LBB227_46
# %bb.45:
	ld.b	$a1, $fp, 1
.Ltmp987:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp988:                               # EH_LABEL
.LBB227_46:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 0
	st.b	$s1, $fp, 1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB227_50
	b	.LBB227_51
.LBB227_47:
	ld.bu	$a1, $fp, 0
	bne	$a1, $a0, .LBB227_49
# %bb.48:
	ld.b	$a1, $fp, 1
.Ltmp985:                               # EH_LABEL
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.Ltmp986:                               # EH_LABEL
.LBB227_49:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB227_51
.LBB227_50:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB227_51:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	ori	$s2, $zero, 1
	b	.LBB227_65
.LBB227_52:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB227_65
.LBB227_53:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB227_56
.LBB227_54:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	b	.LBB227_65
.LBB227_55:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB227_56:
	ld.bu	$a0, $fp, 0
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB227_58
# %bb.57:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB227_58:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit30
	ld.d	$a1, $s1, 272
	ld.d	$a2, $s1, 280
	ld.d	$a0, $s0, 112
	ori	$a3, $zero, 2
	st.b	$a3, $fp, 0
	add.d	$a2, $a1, $a2
	ori	$a3, $zero, 1
	ori	$s2, $zero, 1
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	slli.d	$a1, $a0, 47
	beqz	$a1, .LBB227_82
# %bb.59:                               # %_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_character_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEEb.exit
	ld.h	$a1, $s0, 96
	ld.b	$a2, $s0, 98
	or	$a1, $a1, $a0
	srli.d	$a0, $a0, 16
	or	$a0, $a2, $a0
	st.h	$a1, $s0, 96
	bstrpick.d	$a0, $a0, 47, 0
	st.b	$a0, $s0, 98
	b	.LBB227_65
.LBB227_60:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB227_62
.LBB227_61:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB227_62:
	ld.bu	$a0, $fp, 0
	ori	$s2, $zero, 1
	bne	$a0, $s2, .LBB227_64
# %bb.63:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB227_64:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlvE_clEv.exit27
	ori	$a0, $zero, 2
	st.b	$a0, $fp, 0
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.LBB227_65:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s2
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB227_66:
	ori	$a0, $zero, 27
	st.w	$a0, $s1, 152
	b	.LBB227_69
.LBB227_67:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE16_M_scan_in_braceEv)
	jirl	$ra, $ra, 0
	b	.LBB227_69
.LBB227_68:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt8__detail8_ScannerIcE18_M_scan_in_bracketEv)
	jirl	$ra, $ra, 0
.LBB227_69:
	ori	$a1, $zero, 11
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	ld.bu	$a1, $fp, 0
	beqz	$a0, .LBB227_73
# %bb.70:
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB227_72
# %bb.71:
	ld.b	$a1, $fp, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc)
	jirl	$ra, $ra, 0
.LBB227_72:                             # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit35
	move	$s2, $zero
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	b	.LBB227_65
.LBB227_73:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB227_77
# %bb.74:
	ori	$a0, $zero, 2
	beq	$a1, $a0, .LBB227_84
# %bb.75:
	ld.bu	$a0, $s1, 0
	andi	$a0, $a0, 16
	beqz	$a0, .LBB227_85
# %bb.76:                               # %_ZZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEEENKUlcE_clEc.exit37
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3329
	st.h	$a0, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB227_65
.LBB227_77:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE11_M_try_charEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB227_79
# %bb.78:
	ld.d	$a0, $s3, 0
	ld.b	$a1, $fp, 1
	ld.b	$a2, $a0, 0
	b	.LBB227_81
.LBB227_79:
	ori	$a1, $zero, 28
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB227_86
# %bb.80:
	ld.b	$a1, $fp, 1
	ori	$a2, $zero, 45
.LBB227_81:                             # %_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE14_M_match_tokenENS_12_ScannerBase7_TokenTE.exit.thread
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc)
	jirl	$ra, $ra, 0
	st.b	$zero, $fp, 0
	ori	$s2, $zero, 1
	b	.LBB227_65
.LBB227_82:
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB227_83:
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a1, $a0, %pc_lo12(.L.str.49)
	ori	$a0, $zero, 4
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB227_84:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB227_85:
	pcalau12i	$a0, %pc_hi20(.L.str.48)
	addi.d	$a1, $a0, %pc_lo12(.L.str.48)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB227_86:
	pcalau12i	$a0, %pc_hi20(.L.str.47)
	addi.d	$a1, $a0, %pc_lo12(.L.str.47)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB227_87:
.Ltmp989:                               # EH_LABEL
	ld.d	$a2, $sp, 16
	addi.d	$a1, $sp, 32
	move	$fp, $a0
	beq	$a2, $a1, .LBB227_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB227_89:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end227:
	.size	_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE, .Lfunc_end227-_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
.LJTI227_0:
	.word	.LBB227_2-.LJTI227_0
	.word	.LBB227_23-.LJTI227_0
	.word	.LBB227_23-.LJTI227_0
	.word	.LBB227_23-.LJTI227_0
	.word	.LBB227_13-.LJTI227_0
	.word	.LBB227_8-.LJTI227_0
	.word	.LBB227_18-.LJTI227_0
	.section	.gcc_except_table._ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,"aG",@progbits,_ZNSt8__detail9_CompilerINSt7__cxx1112regex_traitsIcEEE18_M_expression_termILb1ELb1EEEbRNS4_13_BracketStateERNS_15_BracketMatcherIS3_XT_EXT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table227:
.Lexception93:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end93-.Lcst_begin93
.Lcst_begin93:
	.uleb128 .Lfunc_begin93-.Lfunc_begin93  # >> Call Site 1 <<
	.uleb128 .Ltmp987-.Lfunc_begin93        #   Call between .Lfunc_begin93 and .Ltmp987
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp987-.Lfunc_begin93        # >> Call Site 2 <<
	.uleb128 .Ltmp986-.Ltmp987              #   Call between .Ltmp987 and .Ltmp986
	.uleb128 .Ltmp989-.Lfunc_begin93        #     jumps to .Ltmp989
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp986-.Lfunc_begin93        # >> Call Site 3 <<
	.uleb128 .Lfunc_end227-.Ltmp986         #   Call between .Ltmp986 and .Lfunc_end227
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end93:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s1, $a0, 104
	move	$s0, $a1
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB228_10
# %bb.1:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
	move	$a1, $s0
	jirl	$ra, $a2, 0
	ld.d	$s4, $fp, 8
	ld.d	$a1, $fp, 16
	beq	$s4, $a1, .LBB228_3
# %bb.2:
	st.b	$a0, $s4, 0
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 8
	b	.LBB228_9
.LBB228_3:
	move	$s5, $a0
	ld.d	$s0, $fp, 0
	sub.d	$s1, $s4, $s0
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s1, $a0, .LBB228_11
# %bb.4:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s1
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s1, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s2, $a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	stx.b	$s5, $a0, $s1
	beq	$s4, $s0, .LBB228_6
# %bb.5:
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB228_6:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$s4, $s3, $s1
	beqz	$s0, .LBB228_8
# %bb.7:                                # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB228_8:                              # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $s4, 1
	st.d	$s3, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s3, $s2
	st.d	$a0, $fp, 16
.LBB228_9:                              # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB228_10:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB228_11:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end228:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc, .Lfunc_end228-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE11_M_add_charEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin94:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception94
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	ld.d	$a4, $a2, 0
	ld.d	$a2, $a2, 8
	ld.d	$a1, $a1, 112
	move	$fp, $a0
	add.d	$a3, $a4, $a2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 8
	beqz	$a0, .LBB229_13
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.b	$s1, $a0, 0
	ld.d	$s2, $s0, 104
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$a0, $a1, $a0
	beqz	$a0, .LBB229_15
# %bb.2:                                # %_ZNKSt7__cxx1112regex_traitsIcE16translate_nocaseEc.exit.i
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 32
.Ltmp990:                               # EH_LABEL
	move	$a1, $s1
	jirl	$ra, $a2, 0
.Ltmp991:                               # EH_LABEL
# %bb.3:                                # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_translateEc.exit
	ld.d	$s5, $s0, 8
	ld.d	$a1, $s0, 16
	beq	$s5, $a1, .LBB229_5
# %bb.4:
	st.b	$a0, $s5, 0
	ld.d	$a0, $s0, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 8
	b	.LBB229_12
.LBB229_5:
	move	$s6, $a0
	ld.d	$s1, $s0, 0
	sub.d	$s2, $s5, $s1
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 2047
	beq	$s2, $a0, .LBB229_17
# %bb.6:                                # %_ZNKSt6vectorIcSaIcEE12_M_check_lenEmPKc.exit.i.i.i
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $s2
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $s2, $a2
	or	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	sltu	$a2, $a1, $a0
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$s3, $a1, $a0
.Ltmp992:                               # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp993:                               # EH_LABEL
# %bb.7:                                # %.noexc10
	move	$s4, $a0
	stx.b	$s6, $a0, $s2
	beq	$s5, $s1, .LBB229_9
# %bb.8:
	move	$a0, $s4
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB229_9:                              # %_ZNSt6vectorIcSaIcEE11_S_relocateEPcS2_S2_RS0_.exit.i.i.i
	add.d	$fp, $s4, $s2
	beqz	$s1, .LBB229_11
# %bb.10:                               # %_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm.exit.i.i.i.i
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB229_11:                             # %_ZNSt6vectorIcSaIcEE17_M_realloc_appendIJcEEEvDpOT_.exit.i.i
	addi.d	$a0, $fp, 1
	st.d	$s4, $s0, 0
	st.d	$a0, $s0, 8
	add.d	$a0, $s4, $s3
	st.d	$a0, $s0, 16
.LBB229_12:                             # %_ZNSt6vectorIcSaIcEE9push_backEOc.exit
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB229_13:
.Ltmp999:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a1, $a0, %pc_lo12(.L.str.50)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1000:                              # EH_LABEL
# %bb.14:
.LBB229_15:
.Ltmp996:                               # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp997:                               # EH_LABEL
# %bb.16:                               # %.noexc
.LBB229_17:
.Ltmp994:                               # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp995:                               # EH_LABEL
# %bb.18:                               # %.noexc9
.LBB229_19:
.Ltmp1001:                              # EH_LABEL
	b	.LBB229_21
.LBB229_20:
.Ltmp998:                               # EH_LABEL
.LBB229_21:
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB229_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB229_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end229:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end229-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE22_M_add_collate_elementERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table229:
.Lexception94:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end94-.Lcst_begin94
.Lcst_begin94:
	.uleb128 .Lfunc_begin94-.Lfunc_begin94  # >> Call Site 1 <<
	.uleb128 .Ltmp990-.Lfunc_begin94        #   Call between .Lfunc_begin94 and .Ltmp990
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp990-.Lfunc_begin94        # >> Call Site 2 <<
	.uleb128 .Ltmp993-.Ltmp990              #   Call between .Ltmp990 and .Ltmp993
	.uleb128 .Ltmp998-.Lfunc_begin94        #     jumps to .Ltmp998
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp993-.Lfunc_begin94        # >> Call Site 3 <<
	.uleb128 .Ltmp999-.Ltmp993              #   Call between .Ltmp993 and .Ltmp999
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp999-.Lfunc_begin94        # >> Call Site 4 <<
	.uleb128 .Ltmp1000-.Ltmp999             #   Call between .Ltmp999 and .Ltmp1000
	.uleb128 .Ltmp1001-.Lfunc_begin94       #     jumps to .Ltmp1001
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp996-.Lfunc_begin94        # >> Call Site 5 <<
	.uleb128 .Ltmp995-.Ltmp996              #   Call between .Ltmp996 and .Ltmp995
	.uleb128 .Ltmp998-.Lfunc_begin94        #     jumps to .Ltmp998
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp995-.Lfunc_begin94        # >> Call Site 6 <<
	.uleb128 .Lfunc_end229-.Ltmp995         #   Call between .Ltmp995 and .Lfunc_end229
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end94:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin95:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception95
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$a2, $a1, 0
	ld.d	$a0, $a1, 8
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	addi.d	$s2, $sp, 56
	beqz	$a0, .LBB230_29
# %bb.1:
	ld.d	$a2, $sp, 40
	ld.d	$a1, $fp, 112
	add.d	$a3, $a2, $a0
.Ltmp1002:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE17transform_primaryIPcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_S9_)
	jirl	$ra, $ra, 0
.Ltmp1003:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	addi.d	$s0, $sp, 24
	beq	$a0, $s2, .LBB230_6
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	beq	$a1, $s0, .LBB230_9
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $sp, 56
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	beqz	$a0, .LBB230_8
.LBB230_5:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	b	.LBB230_14
.LBB230_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	beq	$a1, $s0, .LBB230_9
# %bb.7:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 16
	st.d	$a1, $sp, 40
	vst	$vr0, $sp, 48
	bnez	$a0, .LBB230_5
.LBB230_8:
	st.d	$s0, $sp, 8
	move	$a0, $s0
	b	.LBB230_14
.LBB230_9:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB230_13
# %bb.10:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB230_12
# %bb.11:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB230_13
.LBB230_12:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB230_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 48
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB230_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s0, .LBB230_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB230_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	beq	$s0, $a0, .LBB230_23
# %bb.17:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 48
	ld.d	$s1, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	bltu	$a1, $a2, .LBB230_20
# %bb.18:                               # %.noexc.i.i
.Ltmp1005:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1006:                              # EH_LABEL
# %bb.19:                               # %.noexc
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	st.d	$a1, $s0, 16
.LBB230_20:                             # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB230_28
# %bb.21:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB230_27
# %bb.22:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB230_28
.LBB230_23:
	addi.d	$a0, $fp, 24
.Ltmp1007:                              # EH_LABEL
	addi.d	$a1, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1008:                              # EH_LABEL
# %bb.24:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB230_26
.LBB230_25:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i9
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB230_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB230_27:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB230_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 8
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 32
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 32
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB230_25
	b	.LBB230_26
.LBB230_29:
.Ltmp1009:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.175)
	addi.d	$a1, $a0, %pc_lo12(.L.str.175)
	move	$a0, $zero
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1010:                              # EH_LABEL
# %bb.30:
.LBB230_31:
.Ltmp1004:                              # EH_LABEL
	b	.LBB230_33
.LBB230_32:
.Ltmp1011:                              # EH_LABEL
.LBB230_33:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB230_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB230_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end230:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end230-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE24_M_add_equivalence_classERKNS1_12basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table230:
.Lexception95:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end95-.Lcst_begin95
.Lcst_begin95:
	.uleb128 .Lfunc_begin95-.Lfunc_begin95  # >> Call Site 1 <<
	.uleb128 .Ltmp1002-.Lfunc_begin95       #   Call between .Lfunc_begin95 and .Ltmp1002
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1002-.Lfunc_begin95       # >> Call Site 2 <<
	.uleb128 .Ltmp1003-.Ltmp1002            #   Call between .Ltmp1002 and .Ltmp1003
	.uleb128 .Ltmp1004-.Lfunc_begin95       #     jumps to .Ltmp1004
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1003-.Lfunc_begin95       # >> Call Site 3 <<
	.uleb128 .Ltmp1005-.Ltmp1003            #   Call between .Ltmp1003 and .Ltmp1005
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1005-.Lfunc_begin95       # >> Call Site 4 <<
	.uleb128 .Ltmp1008-.Ltmp1005            #   Call between .Ltmp1005 and .Ltmp1008
	.uleb128 .Ltmp1011-.Lfunc_begin95       #     jumps to .Ltmp1011
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1008-.Lfunc_begin95       # >> Call Site 5 <<
	.uleb128 .Ltmp1009-.Ltmp1008            #   Call between .Ltmp1008 and .Ltmp1009
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1009-.Lfunc_begin95       # >> Call Site 6 <<
	.uleb128 .Ltmp1010-.Ltmp1009            #   Call between .Ltmp1009 and .Ltmp1010
	.uleb128 .Ltmp1011-.Lfunc_begin95       #     jumps to .Ltmp1011
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1010-.Lfunc_begin95       # >> Call Site 7 <<
	.uleb128 .Lfunc_end230-.Ltmp1010        #   Call between .Ltmp1010 and .Lfunc_end230
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end95:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,"axG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,comdat
	.hidden	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc # -- Begin function _ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
	.weak	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
	.p2align	5
	.type	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,@function
_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc: # @_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
.Lfunc_begin96:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception96
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a2
	blt	$a2, $a1, .LBB231_32
# %bb.1:
	move	$a2, $a1
	move	$fp, $a0
	addi.d	$s1, $sp, 152
	st.d	$s1, $sp, 136
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp1012:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1013:                              # EH_LABEL
# %bb.2:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB231_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB231_4:                              # %_ZNKSt8__detail20_RegexTranslatorBaseINSt7__cxx1112regex_traitsIcEELb1ELb1EE12_M_transformEc.exit
	st.d	$s1, $sp, 136
.Ltmp1015:                              # EH_LABEL
	addi.d	$a0, $sp, 136
	ori	$a1, $zero, 1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc)
	jirl	$ra, $ra, 0
.Ltmp1016:                              # EH_LABEL
# %bb.5:                                # %.noexc
	ld.d	$a2, $sp, 136
	ld.d	$a0, $sp, 144
	ld.d	$a1, $fp, 104
	add.d	$a3, $a2, $a0
.Ltmp1018:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE9transformIN9__gnu_cxx17__normal_iteratorIPcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESA_T_SC_)
	jirl	$ra, $ra, 0
.Ltmp1019:                              # EH_LABEL
# %bb.6:
	ld.d	$a0, $sp, 136
	beq	$a0, $s1, .LBB231_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i13
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB231_8:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i.i14
	ld.d	$a0, $sp, 40
	addi.d	$s1, $sp, 88
	addi.d	$s0, $sp, 56
	st.d	$s1, $sp, 72
	beq	$a0, $s0, .LBB231_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i16
	ld.d	$a1, $sp, 56
	ld.d	$s4, $sp, 48
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
	b	.LBB231_11
.LBB231_10:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
	ld.d	$s4, $sp, 48
	addi.d	$a2, $s4, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB231_11:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i
	st.d	$s4, $sp, 80
	st.d	$s0, $sp, 40
	st.d	$zero, $sp, 48
	ld.d	$a0, $sp, 8
	st.b	$zero, $sp, 56
	addi.d	$s3, $sp, 120
	addi.d	$s2, $sp, 24
	st.d	$s3, $sp, 104
	beq	$a0, $s2, .LBB231_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i3.i.i
	ld.d	$a1, $sp, 24
	ld.d	$s6, $sp, 16
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
	b	.LBB231_14
.LBB231_13:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i4.i.i
	ld.d	$s6, $sp, 16
	addi.d	$a2, $s6, 1
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB231_14:
	ld.d	$s5, $fp, 56
	ld.d	$a0, $fp, 64
	st.d	$s6, $sp, 112
	st.d	$s2, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $sp, 24
	beq	$s5, $a0, .LBB231_17
# %bb.15:
	addi.d	$a0, $s5, 16
	st.d	$a0, $s5, 0
	ld.d	$a1, $sp, 72
	beq	$a1, $s1, .LBB231_20
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	st.d	$a1, $s5, 0
	ld.d	$a0, $sp, 88
	st.d	$a0, $s5, 16
	b	.LBB231_21
.LBB231_17:
.Ltmp1021:                              # EH_LABEL
	addi.d	$a0, $fp, 48
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE17_M_realloc_appendIJS7_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1022:                              # EH_LABEL
# %bb.18:                               # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit
	ld.d	$a0, $sp, 104
	beq	$a0, $s3, .LBB231_25
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i18
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB231_25
.LBB231_20:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i
	addi.d	$a2, $s4, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB231_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i.i.i
	st.d	$s4, $s5, 8
	addi.d	$a0, $s5, 48
	st.d	$a0, $s5, 32
	ld.d	$a1, $sp, 104
	st.d	$s1, $sp, 72
	st.d	$zero, $sp, 80
	st.b	$zero, $sp, 88
	beq	$a1, $s3, .LBB231_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i4.i.i.i
	st.d	$a1, $s5, 32
	ld.d	$a0, $sp, 120
	ld.d	$s4, $sp, 112
	st.d	$a0, $s5, 48
	b	.LBB231_24
.LBB231_23:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i5.i.i.i
	ld.d	$s4, $sp, 112
	addi.d	$a2, $s4, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB231_24:                             # %_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS7_EE9push_backEOS7_.exit.thread
	st.d	$s4, $s5, 40
	ld.d	$a0, $fp, 56
	st.d	$s3, $sp, 104
	st.d	$zero, $sp, 112
	st.b	$zero, $sp, 120
	addi.d	$a0, $a0, 64
	st.d	$a0, $fp, 56
.LBB231_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $sp, 72
	beq	$a0, $s1, .LBB231_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1.i
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB231_27:                             # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB231_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB231_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB231_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB231_31:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB231_32:
	pcalau12i	$a0, %pc_hi20(.L.str.176)
	addi.d	$a1, $a0, %pc_lo12(.L.str.176)
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.LBB231_33:
.Ltmp1023:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s2, .LBB231_39
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	b	.LBB231_37
.LBB231_35:
.Ltmp1020:                              # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB231_39
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i10
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB231_37:                             # %.body
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB231_39
.LBB231_38:
.Ltmp1017:                              # EH_LABEL
	move	$fp, $a0
.LBB231_39:                             # %.body
	ld.d	$a0, $sp, 40
	addi.d	$a1, $sp, 56
	beq	$a0, $a1, .LBB231_44
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	b	.LBB231_43
.LBB231_41:
.Ltmp1014:                              # EH_LABEL
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s1, .LBB231_44
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB231_43:                             # %common.resume
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB231_44:                             # %common.resume
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end231:
	.size	_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc, .Lfunc_end231-_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,"aG",@progbits,_ZNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EE13_M_make_rangeEcc,comdat
	.p2align	2, 0x0
GCC_except_table231:
.Lexception96:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end96-.Lcst_begin96
.Lcst_begin96:
	.uleb128 .Lfunc_begin96-.Lfunc_begin96  # >> Call Site 1 <<
	.uleb128 .Ltmp1012-.Lfunc_begin96       #   Call between .Lfunc_begin96 and .Ltmp1012
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1012-.Lfunc_begin96       # >> Call Site 2 <<
	.uleb128 .Ltmp1013-.Ltmp1012            #   Call between .Ltmp1012 and .Ltmp1013
	.uleb128 .Ltmp1014-.Lfunc_begin96       #     jumps to .Ltmp1014
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1013-.Lfunc_begin96       # >> Call Site 3 <<
	.uleb128 .Ltmp1015-.Ltmp1013            #   Call between .Ltmp1013 and .Ltmp1015
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1015-.Lfunc_begin96       # >> Call Site 4 <<
	.uleb128 .Ltmp1016-.Ltmp1015            #   Call between .Ltmp1015 and .Ltmp1016
	.uleb128 .Ltmp1017-.Lfunc_begin96       #     jumps to .Ltmp1017
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1018-.Lfunc_begin96       # >> Call Site 5 <<
	.uleb128 .Ltmp1019-.Ltmp1018            #   Call between .Ltmp1018 and .Ltmp1019
	.uleb128 .Ltmp1020-.Lfunc_begin96       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1019-.Lfunc_begin96       # >> Call Site 6 <<
	.uleb128 .Ltmp1021-.Ltmp1019            #   Call between .Ltmp1019 and .Ltmp1021
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1021-.Lfunc_begin96       # >> Call Site 7 <<
	.uleb128 .Ltmp1022-.Ltmp1021            #   Call between .Ltmp1021 and .Ltmp1022
	.uleb128 .Ltmp1023-.Lfunc_begin96       #     jumps to .Ltmp1023
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1022-.Lfunc_begin96       # >> Call Site 8 <<
	.uleb128 .Lfunc_end231-.Ltmp1022        #   Call between .Ltmp1022 and .Lfunc_end231
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end96:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,"axG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,comdat
	.hidden	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb # -- Begin function _ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
	.weak	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
	.p2align	5
	.type	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,@function
_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb: # @_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
.Lfunc_begin97:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception97
# %bb.0:                                # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	st.d	$a1, $sp, 64
	st.d	$a2, $sp, 72
	st.b	$a3, $sp, 80
	vld	$vr0, $sp, 88
	move	$fp, $a0
	ori	$a0, $zero, 2
	st.w	$a0, $sp, 56
	vst	$vr0, $sp, 40
	ld.d	$a2, $sp, 56
	vld	$vr0, $sp, 72
	ld.d	$a0, $fp, 64
	ld.d	$a3, $fp, 72
	st.d	$a1, $sp, 16
	st.d	$a2, $sp, 8
	vst	$vr0, $sp, 24
	addi.d	$s0, $fp, 56
	beq	$a0, $a3, .LBB232_5
# %bb.1:
	vld	$vr0, $sp, 88
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 72
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 56
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 8
	ori	$a2, $zero, 11
	bne	$a1, $a2, .LBB232_4
# %bb.2:
	st.d	$zero, $a0, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 40
	st.d	$a2, $a0, 40
	beqz	$a1, .LBB232_4
# %bb.3:
	vld	$vr1, $sp, 72
	addi.d	$a2, $a0, 16
	addi.d	$a3, $sp, 40
	vst	$vr1, $a2, 0
	st.d	$a1, $a0, 32
	vst	$vr0, $a3, 0
.LBB232_4:                              # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	b	.LBB232_7
.LBB232_5:
.Ltmp1024:                              # EH_LABEL
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1025:                              # EH_LABEL
# %bb.6:                                # %.noexc
	ld.d	$a0, $fp, 64
.LBB232_7:                              # %_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE9push_backEOS2_.exit.i
	ld.d	$a1, $s0, 0
	sub.d	$fp, $a0, $a1
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	bgeu	$fp, $a0, .LBB232_15
# %bb.8:
	ld.w	$a0, $sp, 8
	ori	$s0, $zero, 11
	bne	$a0, $s0, .LBB232_11
# %bb.9:
	ld.d	$a3, $sp, 40
	beqz	$a3, .LBB232_11
# %bb.10:
	addi.d	$a0, $sp, 24
.Ltmp1026:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1027:                              # EH_LABEL
.LBB232_11:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
	ld.w	$a0, $sp, 56
	bne	$a0, $s0, .LBB232_14
# %bb.12:
	ld.d	$a3, $sp, 88
	beqz	$a3, .LBB232_14
# %bb.13:
.Ltmp1029:                              # EH_LABEL
	addi.d	$a0, $sp, 72
	ori	$a2, $zero, 3
	move	$a1, $a0
	jirl	$ra, $a3, 0
.Ltmp1030:                              # EH_LABEL
.LBB232_14:                             # %_ZNSt8__detail6_StateIcED2Ev.exit7
	bstrpick.d	$a0, $fp, 31, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	mul.d	$a0, $a0, $a1
	bstrpick.d	$a0, $a0, 31, 0
	addi.d	$a0, $a0, -1
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB232_15:
.Ltmp1032:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1033:                              # EH_LABEL
# %bb.16:                               # %.noexc5
.LBB232_17:
.Ltmp1031:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB232_18:
.Ltmp1028:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB232_19:
.Ltmp1034:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end232:
	.size	_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb, .Lfunc_end232-_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,"aG",@progbits,_ZNSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEE16_M_insert_repeatEllb,comdat
	.p2align	2, 0x0
GCC_except_table232:
.Lexception97:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase41-.Lttbaseref41
.Lttbaseref41:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end97-.Lcst_begin97
.Lcst_begin97:
	.uleb128 .Ltmp1024-.Lfunc_begin97       # >> Call Site 1 <<
	.uleb128 .Ltmp1025-.Ltmp1024            #   Call between .Ltmp1024 and .Ltmp1025
	.uleb128 .Ltmp1034-.Lfunc_begin97       #     jumps to .Ltmp1034
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1026-.Lfunc_begin97       # >> Call Site 2 <<
	.uleb128 .Ltmp1027-.Ltmp1026            #   Call between .Ltmp1026 and .Ltmp1027
	.uleb128 .Ltmp1028-.Lfunc_begin97       #     jumps to .Ltmp1028
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1029-.Lfunc_begin97       # >> Call Site 3 <<
	.uleb128 .Ltmp1030-.Ltmp1029            #   Call between .Ltmp1029 and .Ltmp1030
	.uleb128 .Ltmp1031-.Lfunc_begin97       #     jumps to .Ltmp1031
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1032-.Lfunc_begin97       # >> Call Site 4 <<
	.uleb128 .Ltmp1033-.Ltmp1032            #   Call between .Ltmp1032 and .Ltmp1033
	.uleb128 .Ltmp1034-.Lfunc_begin97       #     jumps to .Ltmp1034
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1033-.Lfunc_begin97       # >> Call Site 5 <<
	.uleb128 .Lfunc_end232-.Ltmp1033        #   Call between .Ltmp1033 and .Lfunc_end232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end97:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase41:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,"axG",@progbits,_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,comdat
	.weak	_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv # -- Begin function _ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv
	.p2align	5
	.type	_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,@function
_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv: # @_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv
.Lfunc_begin98:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception98
# %bb.0:
	addi.d	$sp, $sp, -368
	.cfi_def_cfa_offset 368
	st.d	$ra, $sp, 360                   # 8-byte Folded Spill
	st.d	$fp, $sp, 352                   # 8-byte Folded Spill
	st.d	$s0, $sp, 344                   # 8-byte Folded Spill
	st.d	$s1, $sp, 336                   # 8-byte Folded Spill
	st.d	$s2, $sp, 328                   # 8-byte Folded Spill
	st.d	$s3, $sp, 320                   # 8-byte Folded Spill
	st.d	$s4, $sp, 312                   # 8-byte Folded Spill
	st.d	$s5, $sp, 304                   # 8-byte Folded Spill
	st.d	$s6, $sp, 296                   # 8-byte Folded Spill
	st.d	$s7, $sp, 288                   # 8-byte Folded Spill
	st.d	$s8, $sp, 280                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s6, $sp, 240
	st.w	$zero, $sp, 240
	st.d	$zero, $sp, 248
	st.d	$s6, $sp, 256
	st.d	$s6, $sp, 264
	st.d	$zero, $sp, 272
	addi.d	$a0, $sp, 152
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp1035:                              # EH_LABEL
	addi.d	$a0, $sp, 152
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1036:                              # EH_LABEL
# %bb.1:                                # %_ZNSt5stackIlSt5dequeIlSaIlEEEC2IS2_vEEv.exit
	st.d	$fp, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a1, $sp, 216
	ld.d	$a0, $sp, 200
	addi.d	$a2, $a1, -8
	addi.d	$a1, $s0, 8
	beq	$a0, $a2, .LBB233_3
# %bb.2:
	ld.d	$a1, $a1, 0
	st.d	$a1, $a0, 0
	addi.d	$a1, $a0, 8
	st.d	$a1, $sp, 200
	ld.d	$a0, $sp, 168
	bne	$a1, $a0, .LBB233_5
	b	.LBB233_52
.LBB233_3:
.Ltmp1038:                              # EH_LABEL
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1039:                              # EH_LABEL
# %bb.4:                                # %._ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit_crit_edge
	ld.d	$a1, $sp, 200
	ld.d	$a0, $sp, 168
	beq	$a1, $a0, .LBB233_52
.LBB233_5:                              # %.lr.ph
	addi.d	$s2, $sp, 112
	addi.d	$s3, $sp, 64
	ori	$s4, $zero, 11
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 32                   # 16-byte Folded Spill
	lu12i.w	$a0, 1171
	ori	$a0, $a0, 3585
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	addi.w	$s1, $zero, -1
	ori	$s7, $zero, 16
	ori	$s8, $zero, 24
	b	.LBB233_7
	.p2align	4, , 16
.LBB233_6:                              # %_ZNSt8__detail6_StateIcED2Ev.exit55
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a1, $sp, 200
	ld.d	$a0, $sp, 168
	beq	$a1, $a0, .LBB233_52
.LBB233_7:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB233_33 Depth 2
                                        #     Child Loop BB233_43 Depth 2
	ld.d	$a0, $sp, 208
	beq	$a1, $a0, .LBB233_9
# %bb.8:                                #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a0, $a1, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $sp, 144
	b	.LBB233_10
	.p2align	4, , 16
.LBB233_9:                              #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a1, $sp, 224
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	st.d	$a1, $sp, 144
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 224
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $sp, 224
	st.d	$a1, $sp, 208
	ld.d	$a0, $sp, 144
	addi.d	$a2, $a1, 512
	st.d	$a2, $sp, 216
	addi.d	$a1, $a1, 504
.LBB233_10:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE3popEv.exit
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$fp, $s0, 0
	ld.d	$a2, $fp, 56
	st.d	$a1, $sp, 200
	ori	$a1, $zero, 48
	mul.d	$a0, $a0, $a1
	vldx	$vr0, $a2, $a0
	add.d	$s5, $a2, $a0
	vst	$vr0, $sp, 96
	vld	$vr0, $s5, 32
	vst	$vr0, $sp, 128
	vld	$vr0, $s5, 16
	vst	$vr0, $sp, 112
	ldx.w	$a0, $a2, $a0
	bne	$a0, $s4, .LBB233_14
# %bb.11:                               #   in Loop: Header=BB233_7 Depth=1
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $s2, 16
	vst	$vr0, $s2, 0
	ld.d	$a3, $s5, 32
	beqz	$a3, .LBB233_14
# %bb.12:                               #   in Loop: Header=BB233_7 Depth=1
	addi.d	$a1, $s5, 16
.Ltmp1040:                              # EH_LABEL
	ori	$a2, $zero, 2
	move	$a0, $s2
	jirl	$ra, $a3, 0
.Ltmp1041:                              # EH_LABEL
# %bb.13:                               #   in Loop: Header=BB233_7 Depth=1
	vld	$vr0, $s5, 32
	ld.d	$fp, $s0, 0
	vst	$vr0, $sp, 128
.LBB233_14:                             # %_ZNSt8__detail6_StateIcEC2ERKS1_.exit
                                        #   in Loop: Header=BB233_7 Depth=1
	vld	$vr0, $sp, 128
	vld	$vr1, $sp, 112
	vld	$vr2, $sp, 96
	ld.w	$a0, $sp, 96
	vst	$vr0, $sp, 80
	vst	$vr1, $sp, 64
	vst	$vr2, $sp, 48
	bne	$a0, $s4, .LBB233_17
# %bb.15:                               #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a1, $sp, 136
	ld.d	$a0, $sp, 128
	st.d	$zero, $s3, 16
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $s3, 0
	st.d	$a1, $sp, 88
	beqz	$a0, .LBB233_17
# %bb.16:                               #   in Loop: Header=BB233_7 Depth=1
	vld	$vr0, $s2, 0
	vst	$vr0, $s3, 0
	st.d	$a0, $sp, 80
	addi.d	$a0, $sp, 128
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $a0, 0
.LBB233_17:                             # %_ZNSt8__detail6_StateIcEC2EOS1_.exit
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a0, $fp, 64
	ld.d	$a1, $fp, 72
	addi.d	$s5, $fp, 56
	beq	$a0, $a1, .LBB233_22
# %bb.18:                               #   in Loop: Header=BB233_7 Depth=1
	vld	$vr0, $sp, 80
	vst	$vr0, $a0, 32
	vld	$vr0, $sp, 64
	vst	$vr0, $a0, 16
	vld	$vr0, $sp, 48
	vst	$vr0, $a0, 0
	ld.w	$a1, $sp, 48
	bne	$a1, $s4, .LBB233_21
# %bb.19:                               #   in Loop: Header=BB233_7 Depth=1
	st.d	$zero, $a0, 32
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $a0, 16
	ld.d	$a1, $sp, 88
	ld.d	$a2, $sp, 80
	st.d	$a1, $a0, 40
	beqz	$a2, .LBB233_21
# %bb.20:                               #   in Loop: Header=BB233_7 Depth=1
	vld	$vr0, $s3, 0
	addi.d	$a1, $a0, 16
	vst	$vr0, $a1, 0
	ld.d	$a1, $sp, 80
	st.d	$a1, $a0, 32
	addi.d	$a0, $sp, 80
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $a0, 0
.LBB233_21:                             # %_ZNSt8__detail6_StateIcEC2EOS1_.exit.i.i.i
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a0, $fp, 64
	addi.d	$a0, $a0, 48
	st.d	$a0, $fp, 64
	ld.d	$a1, $s5, 0
	sub.d	$fp, $a0, $a1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	bltu	$fp, $a0, .LBB233_24
	b	.LBB233_81
	.p2align	4, , 16
.LBB233_22:                             #   in Loop: Header=BB233_7 Depth=1
.Ltmp1046:                              # EH_LABEL
	addi.d	$a1, $sp, 48
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt8__detail6_StateIcEESaIS2_EE17_M_realloc_appendIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1047:                              # EH_LABEL
# %bb.23:                               # %.noexc32
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a0, $fp, 64
	ld.d	$a1, $s5, 0
	sub.d	$fp, $a0, $a1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	bgeu	$fp, $a0, .LBB233_81
.LBB233_24:                             #   in Loop: Header=BB233_7 Depth=1
	ld.w	$a0, $sp, 48
	bne	$a0, $s4, .LBB233_27
# %bb.25:                               #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a3, $sp, 80
	beqz	$a3, .LBB233_27
# %bb.26:                               #   in Loop: Header=BB233_7 Depth=1
.Ltmp1049:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a0, $s3
	move	$a1, $s3
	jirl	$ra, $a3, 0
.Ltmp1050:                              # EH_LABEL
.LBB233_27:                             # %_ZNSt8__detail6_StateIcED2Ev.exit
                                        #   in Loop: Header=BB233_7 Depth=1
.Ltmp1052:                              # EH_LABEL
	addi.d	$a0, $sp, 232
	addi.d	$a1, $sp, 144
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_)
	jirl	$ra, $ra, 0
.Ltmp1053:                              # EH_LABEL
# %bb.28:                               #   in Loop: Header=BB233_7 Depth=1
	bstrpick.d	$a2, $fp, 31, 4
	ld.w	$a1, $sp, 96
	ld.d	$a3, $sp, 16                    # 8-byte Folded Reload
	mul.d	$a2, $a2, $a3
	bstrpick.d	$a2, $a2, 31, 0
	addi.d	$a2, $a2, -1
	st.d	$a2, $a0, 0
	ori	$a0, $zero, 7
	bltu	$a0, $a1, .LBB233_39
# %bb.29:                               #   in Loop: Header=BB233_7 Depth=1
	ori	$a0, $zero, 1
	sll.d	$a0, $a0, $a1
	andi	$a0, $a0, 134
	beqz	$a0, .LBB233_39
# %bb.30:                               # %_ZNKSt8__detail11_State_base10_M_has_altEv.exit
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a0, $sp, 112
	beq	$a0, $s1, .LBB233_39
# %bb.31:                               #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a1, $sp, 248
	beqz	$a1, .LBB233_36
# %bb.32:                               # %.lr.ph.i.i.i.preheader
                                        #   in Loop: Header=BB233_7 Depth=1
	move	$a2, $s6
	.p2align	4, , 16
.LBB233_33:                             # %.lr.ph.i.i.i
                                        #   Parent Loop BB233_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a3, $a1, 32
	slt	$a4, $a3, $a0
	masknez	$a3, $a1, $a4
	masknez	$a5, $s7, $a4
	maskeqz	$a6, $s8, $a4
	or	$a5, $a6, $a5
	ldx.d	$a1, $a1, $a5
	maskeqz	$a4, $a2, $a4
	or	$a2, $a4, $a3
	bnez	$a1, .LBB233_33
# %bb.34:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i
                                        #   in Loop: Header=BB233_7 Depth=1
	beq	$a2, $s6, .LBB233_36
# %bb.35:                               # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit
                                        #   in Loop: Header=BB233_7 Depth=1
	or	$a1, $a4, $a3
	ld.d	$a1, $a1, 32
	bge	$a0, $a1, .LBB233_39
.LBB233_36:                             # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit.thread
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a2, $sp, 216
	ld.d	$a1, $sp, 200
	addi.d	$a2, $a2, -8
	beq	$a1, $a2, .LBB233_38
# %bb.37:                               #   in Loop: Header=BB233_7 Depth=1
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $sp, 200
	b	.LBB233_39
.LBB233_38:                             #   in Loop: Header=BB233_7 Depth=1
.Ltmp1054:                              # EH_LABEL
	addi.d	$a0, $sp, 152
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1055:                              # EH_LABEL
	.p2align	4, , 16
.LBB233_39:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit38
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a0, $sp, 144
	ld.d	$a1, $s0, 16
	beq	$a0, $a1, .LBB233_49
# %bb.40:                               #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a0, $sp, 104
	beq	$a0, $s1, .LBB233_49
# %bb.41:                               #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a1, $sp, 248
	beqz	$a1, .LBB233_46
# %bb.42:                               # %.lr.ph.i.i.i40.preheader
                                        #   in Loop: Header=BB233_7 Depth=1
	move	$a2, $s6
	.p2align	4, , 16
.LBB233_43:                             # %.lr.ph.i.i.i40
                                        #   Parent Loop BB233_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a3, $a1, 32
	slt	$a4, $a3, $a0
	masknez	$a3, $a1, $a4
	masknez	$a5, $s7, $a4
	maskeqz	$a6, $s8, $a4
	or	$a5, $a6, $a5
	ldx.d	$a1, $a1, $a5
	maskeqz	$a4, $a2, $a4
	or	$a2, $a4, $a3
	bnez	$a1, .LBB233_43
# %bb.44:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i48
                                        #   in Loop: Header=BB233_7 Depth=1
	beq	$a2, $s6, .LBB233_46
# %bb.45:                               # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit50
                                        #   in Loop: Header=BB233_7 Depth=1
	or	$a1, $a4, $a3
	ld.d	$a1, $a1, 32
	bge	$a0, $a1, .LBB233_49
.LBB233_46:                             # %_ZNKSt3mapIllSt4lessIlESaISt4pairIKllEEE5countERS3_.exit50.thread
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a2, $sp, 216
	ld.d	$a1, $sp, 200
	addi.d	$a2, $a2, -8
	beq	$a1, $a2, .LBB233_48
# %bb.47:                               #   in Loop: Header=BB233_7 Depth=1
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $sp, 200
	b	.LBB233_49
.LBB233_48:                             #   in Loop: Header=BB233_7 Depth=1
.Ltmp1056:                              # EH_LABEL
	addi.d	$a0, $sp, 152
	addi.d	$a1, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1057:                              # EH_LABEL
	.p2align	4, , 16
.LBB233_49:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEE4pushERKl.exit53
                                        #   in Loop: Header=BB233_7 Depth=1
	ld.w	$a0, $sp, 96
	bne	$a0, $s4, .LBB233_6
# %bb.50:                               #   in Loop: Header=BB233_7 Depth=1
	ld.d	$a3, $sp, 128
	beqz	$a3, .LBB233_6
# %bb.51:                               #   in Loop: Header=BB233_7 Depth=1
.Ltmp1059:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a0, $s2
	move	$a1, $s2
	jirl	$ra, $a3, 0
.Ltmp1060:                              # EH_LABEL
	b	.LBB233_6
.LBB233_52:                             # %._crit_edge
	ld.d	$a0, $sp, 256
	beq	$a0, $s6, .LBB233_71
# %bb.53:
	addi.w	$fp, $zero, -1
	ori	$s1, $zero, 7
	ori	$s2, $zero, 1
	ori	$s3, $zero, 16
	ori	$s4, $zero, 24
	b	.LBB233_56
	.p2align	4, , 16
.LBB233_54:                             # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEE4findERS3_.exit81
                                        #   in Loop: Header=BB233_56 Depth=1
	ld.d	$a2, $a5, 40
	st.d	$a2, $a1, 16
.LBB233_55:                             # %_ZNKSt8__detail11_State_base10_M_has_altEv.exit67
                                        #   in Loop: Header=BB233_56 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	beq	$a0, $s6, .LBB233_71
.LBB233_56:                             # %.lr.ph107
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB233_59 Depth 2
                                        #     Child Loop BB233_68 Depth 2
	ld.d	$a1, $s0, 0
	ld.d	$a2, $a0, 40
	ld.d	$a1, $a1, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$a1, $a1, $a2
	ld.d	$a2, $a1, 8
	beq	$a2, $fp, .LBB233_63
# %bb.57:                               #   in Loop: Header=BB233_56 Depth=1
	ld.d	$a4, $sp, 248
	move	$a5, $s6
	beqz	$a4, .LBB233_62
# %bb.58:                               # %.lr.ph.i.i.i57.preheader
                                        #   in Loop: Header=BB233_56 Depth=1
	move	$a3, $s6
	.p2align	4, , 16
.LBB233_59:                             # %.lr.ph.i.i.i57
                                        #   Parent Loop BB233_56 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a5, $a4, 32
	slt	$a5, $a5, $a2
	masknez	$a6, $a4, $a5
	masknez	$a7, $s3, $a5
	maskeqz	$t0, $s4, $a5
	or	$a7, $t0, $a7
	ldx.d	$a4, $a4, $a7
	maskeqz	$a3, $a3, $a5
	or	$a3, $a3, $a6
	bnez	$a4, .LBB233_59
# %bb.60:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i65
                                        #   in Loop: Header=BB233_56 Depth=1
	move	$a5, $s6
	beq	$a3, $s6, .LBB233_62
# %bb.61:                               #   in Loop: Header=BB233_56 Depth=1
	ld.d	$a4, $a3, 32
	slt	$a2, $a2, $a4
	masknez	$a3, $a3, $a2
	maskeqz	$a2, $s6, $a2
	or	$a5, $a2, $a3
.LBB233_62:                             # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEE4findERS3_.exit
                                        #   in Loop: Header=BB233_56 Depth=1
	ld.d	$a2, $a5, 40
	st.d	$a2, $a1, 8
.LBB233_63:                             #   in Loop: Header=BB233_56 Depth=1
	ld.w	$a2, $a1, 0
	bltu	$s1, $a2, .LBB233_55
# %bb.64:                               #   in Loop: Header=BB233_56 Depth=1
	sll.d	$a2, $s2, $a2
	andi	$a2, $a2, 134
	beqz	$a2, .LBB233_55
# %bb.65:                               #   in Loop: Header=BB233_56 Depth=1
	ld.d	$a2, $a1, 16
	beq	$a2, $fp, .LBB233_55
# %bb.66:                               #   in Loop: Header=BB233_56 Depth=1
	ld.d	$a4, $sp, 248
	move	$a5, $s6
	beqz	$a4, .LBB233_54
# %bb.67:                               # %.lr.ph.i.i.i69.preheader
                                        #   in Loop: Header=BB233_56 Depth=1
	move	$a3, $s6
	.p2align	4, , 16
.LBB233_68:                             # %.lr.ph.i.i.i69
                                        #   Parent Loop BB233_56 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a5, $a4, 32
	slt	$a5, $a5, $a2
	masknez	$a6, $a4, $a5
	masknez	$a7, $s3, $a5
	maskeqz	$t0, $s4, $a5
	or	$a7, $t0, $a7
	ldx.d	$a4, $a4, $a7
	maskeqz	$a3, $a3, $a5
	or	$a3, $a3, $a6
	bnez	$a4, .LBB233_68
# %bb.69:                               # %_ZNKSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSA_RS1_.exit.i.i77
                                        #   in Loop: Header=BB233_56 Depth=1
	move	$a5, $s6
	beq	$a3, $s6, .LBB233_54
# %bb.70:                               #   in Loop: Header=BB233_56 Depth=1
	ld.d	$a4, $a3, 32
	slt	$a2, $a2, $a4
	masknez	$a3, $a3, $a2
	maskeqz	$a2, $s6, $a2
	or	$a5, $a2, $a3
	b	.LBB233_54
.LBB233_71:                             # %._crit_edge108
	ld.d	$fp, $s0, 0
.Ltmp1065:                              # EH_LABEL
	addi.d	$a0, $sp, 232
	addi.d	$a1, $s0, 8
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_)
	jirl	$ra, $ra, 0
.Ltmp1066:                              # EH_LABEL
# %bb.72:
	ld.d	$s1, $a0, 0
	addi.d	$a1, $s0, 16
.Ltmp1067:                              # EH_LABEL
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_)
	jirl	$ra, $ra, 0
.Ltmp1068:                              # EH_LABEL
# %bb.73:
	ld.d	$a1, $a0, 0
	ld.d	$a0, $sp, 152
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	st.d	$fp, $a2, 0
	st.d	$s1, $a2, 8
	st.d	$a1, $a2, 16
	beqz	$a0, .LBB233_79
# %bb.74:
	ld.d	$fp, $sp, 224
	ld.d	$a1, $sp, 192
	addi.d	$a2, $fp, 8
	bgeu	$a1, $a2, .LBB233_78
# %bb.75:                               # %.lr.ph.i.i.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB233_76:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s0, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	bltu	$s0, $fp, .LBB233_76
# %bb.77:                               # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.loopexit.i.i.i
	ld.d	$a0, $sp, 152
.LBB233_78:                             # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i.i.i
	ld.d	$a1, $sp, 160
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB233_79:                             # %_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev.exit
	ld.d	$a1, $sp, 248
.Ltmp1070:                              # EH_LABEL
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp1071:                              # EH_LABEL
# %bb.80:                               # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev.exit
	ld.d	$s8, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 312                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 320                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 328                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 336                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 344                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 352                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 360                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 368
	ret
.LBB233_81:
.Ltmp1062:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a0, $zero, 9
	pcaddu18i	$ra, %call36(_ZSt19__throw_regex_errorNSt15regex_constants10error_typeEPKc)
	jirl	$ra, $ra, 0
.Ltmp1063:                              # EH_LABEL
# %bb.82:                               # %.noexc33
.LBB233_83:
.Ltmp1072:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB233_84:
.Ltmp1037:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB233_85:
.Ltmp1069:                              # EH_LABEL
	move	$fp, $a0
	b	.LBB233_96
.LBB233_86:
.Ltmp1051:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB233_87:
.Ltmp1061:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB233_88:
.Ltmp1042:                              # EH_LABEL
	ld.d	$a3, $sp, 128
	move	$fp, $a0
	beqz	$a3, .LBB233_96
# %bb.89:
.Ltmp1043:                              # EH_LABEL
	ori	$a2, $zero, 3
	move	$a0, $s2
	move	$a1, $s2
	jirl	$ra, $a3, 0
.Ltmp1044:                              # EH_LABEL
	b	.LBB233_96
.LBB233_90:
.Ltmp1045:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB233_91:                             # %.loopexit
.Ltmp1048:                              # EH_LABEL
	b	.LBB233_93
.LBB233_92:                             # %.loopexit.split-lp
.Ltmp1064:                              # EH_LABEL
.LBB233_93:
	move	$fp, $a0
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB233_95
.LBB233_94:
.Ltmp1058:                              # EH_LABEL
	move	$fp, $a0
.LBB233_95:
	addi.d	$a0, $sp, 96
	pcaddu18i	$ra, %call36(_ZNSt8__detail6_StateIcED2Ev)
	jirl	$ra, $ra, 0
.LBB233_96:
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end233:
	.size	_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv, .Lfunc_end233-_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,"aG",@progbits,_ZNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEE8_M_cloneEv,comdat
	.p2align	2, 0x0
GCC_except_table233:
.Lexception98:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase42-.Lttbaseref42
.Lttbaseref42:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end98-.Lcst_begin98
.Lcst_begin98:
	.uleb128 .Lfunc_begin98-.Lfunc_begin98  # >> Call Site 1 <<
	.uleb128 .Ltmp1035-.Lfunc_begin98       #   Call between .Lfunc_begin98 and .Ltmp1035
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1035-.Lfunc_begin98       # >> Call Site 2 <<
	.uleb128 .Ltmp1036-.Ltmp1035            #   Call between .Ltmp1035 and .Ltmp1036
	.uleb128 .Ltmp1037-.Lfunc_begin98       #     jumps to .Ltmp1037
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1038-.Lfunc_begin98       # >> Call Site 3 <<
	.uleb128 .Ltmp1039-.Ltmp1038            #   Call between .Ltmp1038 and .Ltmp1039
	.uleb128 .Ltmp1069-.Lfunc_begin98       #     jumps to .Ltmp1069
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1039-.Lfunc_begin98       # >> Call Site 4 <<
	.uleb128 .Ltmp1040-.Ltmp1039            #   Call between .Ltmp1039 and .Ltmp1040
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1040-.Lfunc_begin98       # >> Call Site 5 <<
	.uleb128 .Ltmp1041-.Ltmp1040            #   Call between .Ltmp1040 and .Ltmp1041
	.uleb128 .Ltmp1042-.Lfunc_begin98       #     jumps to .Ltmp1042
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1046-.Lfunc_begin98       # >> Call Site 6 <<
	.uleb128 .Ltmp1047-.Ltmp1046            #   Call between .Ltmp1046 and .Ltmp1047
	.uleb128 .Ltmp1048-.Lfunc_begin98       #     jumps to .Ltmp1048
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1049-.Lfunc_begin98       # >> Call Site 7 <<
	.uleb128 .Ltmp1050-.Ltmp1049            #   Call between .Ltmp1049 and .Ltmp1050
	.uleb128 .Ltmp1051-.Lfunc_begin98       #     jumps to .Ltmp1051
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1052-.Lfunc_begin98       # >> Call Site 8 <<
	.uleb128 .Ltmp1057-.Ltmp1052            #   Call between .Ltmp1052 and .Ltmp1057
	.uleb128 .Ltmp1058-.Lfunc_begin98       #     jumps to .Ltmp1058
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1059-.Lfunc_begin98       # >> Call Site 9 <<
	.uleb128 .Ltmp1060-.Ltmp1059            #   Call between .Ltmp1059 and .Ltmp1060
	.uleb128 .Ltmp1061-.Lfunc_begin98       #     jumps to .Ltmp1061
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1060-.Lfunc_begin98       # >> Call Site 10 <<
	.uleb128 .Ltmp1065-.Ltmp1060            #   Call between .Ltmp1060 and .Ltmp1065
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1065-.Lfunc_begin98       # >> Call Site 11 <<
	.uleb128 .Ltmp1068-.Ltmp1065            #   Call between .Ltmp1065 and .Ltmp1068
	.uleb128 .Ltmp1069-.Lfunc_begin98       #     jumps to .Ltmp1069
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1068-.Lfunc_begin98       # >> Call Site 12 <<
	.uleb128 .Ltmp1070-.Ltmp1068            #   Call between .Ltmp1068 and .Ltmp1070
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1070-.Lfunc_begin98       # >> Call Site 13 <<
	.uleb128 .Ltmp1071-.Ltmp1070            #   Call between .Ltmp1070 and .Ltmp1071
	.uleb128 .Ltmp1072-.Lfunc_begin98       #     jumps to .Ltmp1072
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1062-.Lfunc_begin98       # >> Call Site 14 <<
	.uleb128 .Ltmp1063-.Ltmp1062            #   Call between .Ltmp1062 and .Ltmp1063
	.uleb128 .Ltmp1064-.Lfunc_begin98       #     jumps to .Ltmp1064
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1063-.Lfunc_begin98       # >> Call Site 15 <<
	.uleb128 .Ltmp1043-.Ltmp1063            #   Call between .Ltmp1063 and .Ltmp1043
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1043-.Lfunc_begin98       # >> Call Site 16 <<
	.uleb128 .Ltmp1044-.Ltmp1043            #   Call between .Ltmp1043 and .Ltmp1044
	.uleb128 .Ltmp1045-.Lfunc_begin98       #     jumps to .Ltmp1045
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1044-.Lfunc_begin98       # >> Call Site 17 <<
	.uleb128 .Lfunc_end233-.Ltmp1044        #   Call between .Ltmp1044 and .Lfunc_end233
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end98:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase42:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5stackIlSt5dequeIlSaIlEEED2Ev,"axG",@progbits,_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev,comdat
	.hidden	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev # -- Begin function _ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.weak	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.p2align	5
	.type	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev,@function
_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev:     # @_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB234_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB234_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB234_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB234_3
# %bb.4:                                # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB234_5:                              # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB234_6:                              # %_ZNSt5dequeIlSaIlEED2Ev.exit
	ret
.Lfunc_end234:
	.size	_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev, .Lfunc_end234-_ZNSt5stackIlSt5dequeIlSaIlEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,"axG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,comdat
	.hidden	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_ # -- Begin function _ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
	.weak	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
	.p2align	5
	.type	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,@function
_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_: # @_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
.Lfunc_begin99:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception99
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 16
	ld.d	$s4, $a1, 0
	addi.d	$s1, $fp, 8
	move	$s3, $s1
	beqz	$a0, .LBB235_5
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	ori	$a1, $zero, 16
	ori	$a2, $zero, 24
	move	$s0, $s1
	.p2align	4, , 16
.LBB235_2:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a0, 32
	slt	$a3, $a3, $s4
	masknez	$a4, $a0, $a3
	masknez	$a5, $a1, $a3
	maskeqz	$a6, $a2, $a3
	or	$a5, $a6, $a5
	ldx.d	$a0, $a0, $a5
	maskeqz	$a3, $s0, $a3
	or	$s0, $a3, $a4
	bnez	$a0, .LBB235_2
# %bb.3:                                # %_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEE11lower_boundERS3_.exit
	move	$s3, $s1
	beq	$s0, $s1, .LBB235_5
# %bb.4:
	ld.d	$a0, $s0, 32
	move	$s3, $s0
	bge	$s4, $a0, .LBB235_12
.LBB235_5:                              # %.critedge
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	addi.d	$s2, $a0, 32
	st.d	$s4, $a0, 32
	st.d	$zero, $a0, 40
.Ltmp1073:                              # EH_LABEL
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_)
	jirl	$ra, $ra, 0
.Ltmp1074:                              # EH_LABEL
# %bb.6:
	move	$a2, $a1
	beqz	$a1, .LBB235_11
# %bb.7:
	ori	$a1, $zero, 1
	bnez	$a0, .LBB235_10
# %bb.8:
	beq	$s1, $a2, .LBB235_10
# %bb.9:
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a2, 32
	slt	$a1, $a0, $a1
.LBB235_10:                             # %.thread.i
	move	$a0, $a1
	move	$a1, $s0
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 40
	b	.LBB235_12
.LBB235_11:
	ori	$a1, $zero, 48
	move	$fp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $fp
.LBB235_12:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_.exit
	addi.d	$a0, $s0, 40
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB235_13:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE10_Auto_nodeD2Ev.exit.i
.Ltmp1075:                              # EH_LABEL
	move	$fp, $a0
	ori	$a1, $zero, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end235:
	.size	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_, .Lfunc_end235-_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,"aG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEEixERS3_,comdat
	.p2align	2, 0x0
GCC_except_table235:
.Lexception99:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end99-.Lcst_begin99
.Lcst_begin99:
	.uleb128 .Lfunc_begin99-.Lfunc_begin99  # >> Call Site 1 <<
	.uleb128 .Ltmp1073-.Lfunc_begin99       #   Call between .Lfunc_begin99 and .Ltmp1073
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1073-.Lfunc_begin99       # >> Call Site 2 <<
	.uleb128 .Ltmp1074-.Ltmp1073            #   Call between .Ltmp1073 and .Ltmp1074
	.uleb128 .Ltmp1075-.Lfunc_begin99       #     jumps to .Ltmp1075
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1074-.Lfunc_begin99       # >> Call Site 3 <<
	.uleb128 .Lfunc_end235-.Ltmp1074        #   Call between .Ltmp1074 and .Lfunc_end235
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end99:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,"axG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,comdat
	.hidden	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev # -- Begin function _ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
	.weak	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
	.p2align	5
	.type	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,@function
_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev: # @_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
.Lfunc_begin100:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception100
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 16
.Ltmp1076:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp1077:                              # EH_LABEL
# %bb.1:                                # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EED2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB236_2:
.Ltmp1078:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end236:
	.size	_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev, .Lfunc_end236-_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,"aG",@progbits,_ZNSt3mapIllSt4lessIlESaISt4pairIKllEEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table236:
.Lexception100:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase43-.Lttbaseref43
.Lttbaseref43:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end100-.Lcst_begin100
.Lcst_begin100:
	.uleb128 .Ltmp1076-.Lfunc_begin100      # >> Call Site 1 <<
	.uleb128 .Ltmp1077-.Ltmp1076            #   Call between .Ltmp1076 and .Ltmp1077
	.uleb128 .Ltmp1078-.Lfunc_begin100      #     jumps to .Ltmp1078
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1077-.Lfunc_begin100      # >> Call Site 2 <<
	.uleb128 .Lfunc_end236-.Ltmp1077        #   Call between .Ltmp1077 and .Lfunc_end236
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end100:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase43:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,"axG",@progbits,_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,comdat
	.weak	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ # -- Begin function _ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.p2align	5
	.type	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,@function
_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_: # @_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$a3, $a0
	addi.d	$fp, $a0, 8
	beq	$fp, $a1, .LBB237_5
# %bb.1:
	move	$a0, $a1
	ld.d	$s0, $a2, 0
	ld.d	$a1, $a1, 32
	bge	$s0, $a1, .LBB237_8
# %bb.2:
	ld.d	$s1, $a3, 24
	beq	$s1, $a0, .LBB237_20
# %bb.3:
	move	$s3, $a3
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 32
	bge	$a1, $s0, .LBB237_21
# %bb.4:
	ld.d	$a1, $a0, 24
	sltui	$a1, $a1, 1
	move	$a2, $a0
	masknez	$a0, $s2, $a1
	maskeqz	$a1, $a2, $a1
	or	$a1, $a1, $a0
	b	.LBB237_36
.LBB237_5:
	ld.d	$a0, $a3, 40
	beqz	$a0, .LBB237_12
# %bb.6:
	ld.d	$a1, $a3, 32
	ld.d	$a0, $a1, 32
	ld.d	$a4, $a2, 0
	bge	$a0, $a4, .LBB237_12
.LBB237_7:
	move	$a0, $zero
	b	.LBB237_36
.LBB237_8:
	bge	$a1, $s0, .LBB237_19
# %bb.9:
	ld.d	$a1, $a3, 32
	beq	$a1, $a0, .LBB237_26
# %bb.10:
	move	$s1, $a3
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 32
	bge	$s0, $a1, .LBB237_27
# %bb.11:
	ld.d	$a1, $s2, 24
	sltui	$a1, $a1, 1
	maskeqz	$a2, $s2, $a1
	masknez	$a0, $a0, $a1
	or	$a1, $a2, $a0
	b	.LBB237_36
.LBB237_12:
	ld.d	$a5, $a3, 16
	beqz	$a5, .LBB237_16
# %bb.13:                               # %.lr.ph.i
	ld.d	$a1, $a2, 0
	ori	$a0, $zero, 24
	ori	$a6, $zero, 16
	.p2align	4, , 16
.LBB237_14:                             # =>This Inner Loop Header: Depth=1
	move	$fp, $a5
	ld.d	$a4, $a5, 32
	slt	$a5, $a1, $a4
	masknez	$a7, $a0, $a5
	maskeqz	$a5, $a6, $a5
	or	$a5, $a5, $a7
	ldx.d	$a5, $fp, $a5
	bnez	$a5, .LBB237_14
# %bb.15:                               # %._crit_edge.i
	move	$a0, $fp
	bge	$a1, $a4, .LBB237_18
.LBB237_16:                             # %._crit_edge.thread.i
	ld.d	$a0, $a3, 24
	beq	$fp, $a0, .LBB237_35
# %bb.17:
	move	$a0, $fp
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a4, $a0, 32
	ld.d	$a1, $s0, 0
.LBB237_18:
	slt	$a2, $a4, $a1
	b	.LBB237_34
.LBB237_19:
	move	$a1, $zero
	b	.LBB237_36
.LBB237_20:
	move	$a1, $a0
	b	.LBB237_36
.LBB237_21:
	ld.d	$a4, $s3, 16
	move	$a1, $s1
	beqz	$a4, .LBB237_25
# %bb.22:                               # %.lr.ph.i23.preheader
	ori	$a0, $zero, 24
	ori	$a3, $zero, 16
	.p2align	4, , 16
.LBB237_23:                             # %.lr.ph.i23
                                        # =>This Inner Loop Header: Depth=1
	move	$fp, $a4
	ld.d	$a2, $a4, 32
	slt	$a4, $s0, $a2
	masknez	$a5, $a0, $a4
	maskeqz	$a4, $a3, $a4
	or	$a4, $a4, $a5
	ldx.d	$a4, $fp, $a4
	bnez	$a4, .LBB237_23
# %bb.24:                               # %._crit_edge.i29
	move	$a0, $fp
	bge	$s0, $a2, .LBB237_33
.LBB237_25:                             # %._crit_edge.thread.i37
	bne	$fp, $a1, .LBB237_32
	b	.LBB237_7
.LBB237_26:
	move	$a1, $a0
	move	$a0, $zero
	b	.LBB237_36
.LBB237_27:
	move	$a1, $s1
	ld.d	$a4, $s1, 16
	beqz	$a4, .LBB237_31
# %bb.28:                               # %.lr.ph.i42.preheader
	ori	$a0, $zero, 24
	ori	$a3, $zero, 16
	.p2align	4, , 16
.LBB237_29:                             # %.lr.ph.i42
                                        # =>This Inner Loop Header: Depth=1
	move	$fp, $a4
	ld.d	$a2, $a4, 32
	slt	$a4, $s0, $a2
	masknez	$a5, $a0, $a4
	maskeqz	$a4, $a3, $a4
	or	$a4, $a4, $a5
	ldx.d	$a4, $fp, $a4
	bnez	$a4, .LBB237_29
# %bb.30:                               # %._crit_edge.i48
	move	$a0, $fp
	bge	$s0, $a2, .LBB237_33
.LBB237_31:                             # %._crit_edge.thread.i56
	ld.d	$a0, $a1, 24
	beq	$fp, $a0, .LBB237_35
.LBB237_32:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a2, $a0, 32
.LBB237_33:
	slt	$a2, $a2, $s0
.LBB237_34:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE24_M_get_insert_unique_posERS1_.exit
	maskeqz	$a1, $fp, $a2
	masknez	$a0, $a0, $a2
	b	.LBB237_36
.LBB237_35:
	move	$a0, $zero
	move	$a1, $fp
.LBB237_36:                             # %_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE24_M_get_insert_unique_posERS1_.exit
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end237:
	.size	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_, .Lfunc_end237-_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	5
	.type	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB238_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB238_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ori	$a1, $zero, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB238_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB238_4:                              # %._crit_edge
	ret
.Lfunc_end238:
	.size	_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end238-_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm
.Lfunc_begin101:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception101
# %bb.0:                                # %_ZNSt11_Deque_baseIlSaIlEE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB239_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1079:                              # EH_LABEL
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1080:                              # EH_LABEL
# %bb.2:                                # %_ZNSt11_Deque_baseIlSaIlEE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB239_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB239_1
# %bb.3:                                # %_ZNSt11_Deque_baseIlSaIlEE15_M_create_nodesEPPlS3_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB239_4:
.Ltmp1081:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB239_6
	.p2align	4, , 16
.LBB239_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB239_5
.LBB239_6:                              # %_ZNSt11_Deque_baseIlSaIlEE16_M_destroy_nodesEPPlS3_.exit.i
.Ltmp1082:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1083:                              # EH_LABEL
# %bb.7:
.LBB239_8:
.Ltmp1084:                              # EH_LABEL
	move	$s0, $a0
.Ltmp1085:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1086:                              # EH_LABEL
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp1088:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1089:                              # EH_LABEL
# %bb.10:
.LBB239_11:
.Ltmp1090:                              # EH_LABEL
	move	$fp, $a0
.Ltmp1091:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1092:                              # EH_LABEL
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB239_13:
.Ltmp1093:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB239_14:
.Ltmp1087:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end239:
	.size	_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm, .Lfunc_end239-_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table239:
.Lexception101:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase44-.Lttbaseref44
.Lttbaseref44:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end101-.Lcst_begin101
.Lcst_begin101:
	.uleb128 .Lfunc_begin101-.Lfunc_begin101 # >> Call Site 1 <<
	.uleb128 .Ltmp1079-.Lfunc_begin101      #   Call between .Lfunc_begin101 and .Ltmp1079
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1079-.Lfunc_begin101      # >> Call Site 2 <<
	.uleb128 .Ltmp1080-.Ltmp1079            #   Call between .Ltmp1079 and .Ltmp1080
	.uleb128 .Ltmp1081-.Lfunc_begin101      #     jumps to .Ltmp1081
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1080-.Lfunc_begin101      # >> Call Site 3 <<
	.uleb128 .Ltmp1082-.Ltmp1080            #   Call between .Ltmp1080 and .Ltmp1082
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1082-.Lfunc_begin101      # >> Call Site 4 <<
	.uleb128 .Ltmp1083-.Ltmp1082            #   Call between .Ltmp1082 and .Ltmp1083
	.uleb128 .Ltmp1084-.Lfunc_begin101      #     jumps to .Ltmp1084
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1085-.Lfunc_begin101      # >> Call Site 5 <<
	.uleb128 .Ltmp1086-.Ltmp1085            #   Call between .Ltmp1085 and .Ltmp1086
	.uleb128 .Ltmp1087-.Lfunc_begin101      #     jumps to .Ltmp1087
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1086-.Lfunc_begin101      # >> Call Site 6 <<
	.uleb128 .Ltmp1088-.Ltmp1086            #   Call between .Ltmp1086 and .Ltmp1088
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1088-.Lfunc_begin101      # >> Call Site 7 <<
	.uleb128 .Ltmp1089-.Ltmp1088            #   Call between .Ltmp1088 and .Ltmp1089
	.uleb128 .Ltmp1090-.Lfunc_begin101      #     jumps to .Ltmp1090
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1091-.Lfunc_begin101      # >> Call Site 8 <<
	.uleb128 .Ltmp1092-.Ltmp1091            #   Call between .Ltmp1091 and .Ltmp1092
	.uleb128 .Ltmp1093-.Lfunc_begin101      #     jumps to .Ltmp1093
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1092-.Lfunc_begin101      # >> Call Site 9 <<
	.uleb128 .Lfunc_end239-.Ltmp1092        #   Call between .Ltmp1092 and .Lfunc_end239
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end101:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase44:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_,"axG",@progbits,_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_,comdat
	.weak	_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_ # -- Begin function _ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_,@function
_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_: # @_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB240_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB240_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB240_3:                              # %_ZNSt5dequeIlSaIlEE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB240_4:
	pcalau12i	$a0, %pc_hi20(.L.str.177)
	addi.d	$a0, $a0, %pc_lo12(.L.str.177)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end240:
	.size	_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_, .Lfunc_end240-_ZNSt5dequeIlSaIlEE16_M_push_back_auxIJRKlEEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB241_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB241_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB241_12
# %bb.3:
	move	$a0, $s0
	b	.LBB241_8
.LBB241_4:                              # %_ZNSt11_Deque_baseIlSaIlEE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB241_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB241_6:                              # %_ZSt4copyIPPlS1_ET0_T_S3_S2_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB241_9
.LBB241_7:                              # %_ZSt9__advanceIPPllEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB241_14
.LBB241_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB241_9:                              # %_ZSt4copyIPPlS1_ET0_T_S3_S2_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB241_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB241_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB241_6
.LBB241_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB241_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB241_9
.LBB241_14:                             # %_ZSt9__advanceIPPllEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB241_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB241_9
.Lfunc_end241:
	.size	_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb, .Lfunc_end241-_ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # -- Begin function _ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_,@function
_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_: # @_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sltu	$a2, $zero, $s1
	sub.d	$a0, $a0, $a2
	alsl.d	$a2, $a0, $a0, 2
	vld	$vr0, $fp, 48
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	alsl.d	$a0, $a2, $a0, 2
	vreplvei.d	$vr1, $vr0, 1
	vinsgr2vr.d	$vr0, $a3, 1
	vinsgr2vr.d	$vr1, $a4, 1
	vsub.d	$vr0, $vr0, $vr1
	vsrai.d	$vr0, $vr0, 3
	lu12i.w	$a2, -349526
	ori	$a2, $a2, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$a2, $a2, -1366
	vreplgr2vr.d	$vr1, $a2
	vmul.d	$vr0, $vr0, $vr1
	vpickve2gr.d	$a2, $vr0, 0
	add.d	$a0, $a0, $a2
	vpickve2gr.d	$a2, $vr0, 1
	add.d	$a0, $a0, $a2
	lu12i.w	$a2, 349525
	ori	$a2, $a2, 1365
	bstrins.d	$a2, $a2, 58, 32
	beq	$a0, $a2, .LBB242_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB242_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB242_3:                              # %_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 504
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
	ld.d	$a1, $s0, 16
	st.d	$a1, $a0, 16
	vld	$vr0, $s0, 0
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB242_4:
	pcalau12i	$a0, %pc_hi20(.L.str.177)
	addi.d	$a0, $a0, %pc_lo12(.L.str.177)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end242:
	.size	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_, .Lfunc_end242-_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB243_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB243_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB243_12
# %bb.3:
	move	$a0, $s0
	b	.LBB243_8
.LBB243_4:                              # %_ZNSt11_Deque_baseINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB243_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB243_6:                              # %_ZSt4copyIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEES7_ET0_T_S9_S8_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB243_9
.LBB243_7:                              # %_ZSt9__advanceIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB243_14
.LBB243_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB243_9:                              # %_ZSt4copyIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEES7_ET0_T_S9_S8_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 504
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB243_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB243_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB243_6
.LBB243_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB243_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB243_9
.LBB243_14:                             # %_ZSt9__advanceIPPNSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB243_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB243_9
.Lfunc_end243:
	.size	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb, .Lfunc_end243-_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_ # -- Begin function _ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_,@function
_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_: # @_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sltu	$a2, $zero, $s1
	sub.d	$a0, $a0, $a2
	alsl.d	$a2, $a0, $a0, 2
	vld	$vr0, $fp, 48
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	alsl.d	$a0, $a2, $a0, 2
	vreplvei.d	$vr1, $vr0, 1
	vinsgr2vr.d	$vr0, $a3, 1
	vinsgr2vr.d	$vr1, $a4, 1
	vsub.d	$vr0, $vr0, $vr1
	vsrai.d	$vr0, $vr0, 3
	lu12i.w	$a2, -349526
	ori	$a2, $a2, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$a2, $a2, -1366
	vreplgr2vr.d	$vr1, $a2
	vmul.d	$vr0, $vr0, $vr1
	vpickve2gr.d	$a2, $vr0, 0
	add.d	$a0, $a0, $a2
	vpickve2gr.d	$a2, $vr0, 1
	add.d	$a0, $a0, $a2
	lu12i.w	$a2, 349525
	ori	$a2, $a2, 1365
	bstrins.d	$a2, $a2, 58, 32
	beq	$a0, $a2, .LBB244_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB244_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB244_3:                              # %_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 504
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
	ld.d	$a1, $s0, 16
	st.d	$a1, $a0, 16
	vld	$vr0, $s0, 0
	vst	$vr0, $a0, 0
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 504
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB244_4:
	pcalau12i	$a0, %pc_hi20(.L.str.177)
	addi.d	$a0, $a0, %pc_lo12(.L.str.177)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end244:
	.size	_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_, .Lfunc_end244-_ZNSt5dequeINSt8__detail9_StateSeqINSt7__cxx1112regex_traitsIcEEEESaIS5_EE16_M_push_back_auxIJS5_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,comdat
	.hidden	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.p2align	5
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 16
	move	$a0, $fp
	jirl	$ra, $a1, 0
	pcalau12i	$a0, %got_pc_hi20(__libc_single_threaded)
	ld.d	$a0, $a0, %got_pc_lo12(__libc_single_threaded)
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB245_3
# %bb.1:
	ld.w	$a0, $fp, 12
	addi.d	$a1, $a0, -1
	st.w	$a1, $fp, 12
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB245_4
.LBB245_2:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a1
.LBB245_3:
	addi.d	$a1, $fp, 12
	addi.w	$a2, $zero, -1
	amadd_db.w	$a0, $a2, $a1
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB245_2
.LBB245_4:                              # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end245:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, .Lfunc_end245-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,"axG",@progbits,_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,comdat
	.weak	_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb # -- Begin function _ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb
	.p2align	5
	.type	_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,@function
_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb: # @_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb
.Lfunc_begin102:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception102
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	st.d	$s5, $sp, 192                   # 8-byte Folded Spill
	st.d	$s6, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s4, $a3
	ld.d	$a3, $a3, 16
	beqz	$a3, .LBB246_10
# %bb.1:
	move	$s1, $a6
	move	$s5, $a5
	move	$s3, $a4
	move	$s2, $a2
	move	$fp, $a1
	move	$s0, $a0
	st.d	$a0, $a2, 24
	ld.d	$a0, $a3, 40
	addi.d	$a0, $a0, 3
	bstrpick.d	$a1, $a0, 31, 0
	st.b	$zero, $sp, 56
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	vst	$vr0, $sp, 40
	addi.d	$a2, $sp, 40
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $s4, 1
	andi	$a0, $a0, 4
	bnez	$a0, .LBB246_7
# %bb.2:
	ld.d	$s6, $s4, 16
	ori	$a0, $zero, 1
	bne	$s5, $a0, .LBB246_4
# %bb.3:
	ld.bu	$a0, $s6, 48
	beqz	$a0, .LBB246_7
.LBB246_4:
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vst	$vr0, $sp, 56
	vst	$vr0, $sp, 40
	st.d	$s0, $sp, 72
	st.d	$s6, $sp, 96
	st.d	$s2, $sp, 104
	ld.d	$a0, $s6, 64
	ld.d	$a1, $s6, 56
	st.d	$fp, $sp, 80
	st.d	$s4, $sp, 88
	vst	$vr0, $sp, 112
	st.d	$zero, $sp, 128
	beq	$a0, $a1, .LBB246_18
# %bb.5:                                # %_ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_.exit.i.i
	sub.d	$s5, $a0, $a1
	srli.d	$a0, $s5, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mul.d	$s4, $a0, $a1
	slli.d	$a0, $s4, 4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 112
	alsl.d	$a1, $s4, $a0, 4
	ori	$a2, $zero, 96
	st.d	$a1, $sp, 128
	bgeu	$s5, $a2, .LBB246_19
# %bb.6:
	move	$a2, $s4
	move	$a1, $a0
	b	.LBB246_22
.LBB246_7:
	addi.d	$a0, $sp, 40
	move	$a1, $s0
	move	$a2, $fp
	move	$a3, $s2
	move	$a4, $s4
	move	$a5, $s3
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 72
	st.d	$a0, $sp, 64
	beqz	$s1, .LBB246_11
# %bb.8:
.Ltmp1099:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp1100:                              # EH_LABEL
# %bb.9:
	move	$s3, $a0
	b	.LBB246_35
.LBB246_10:
	move	$a0, $zero
	b	.LBB246_58
.LBB246_11:
.Ltmp1094:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	ori	$a1, $zero, 1
	ori	$s3, $zero, 1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp1095:                              # EH_LABEL
# %bb.12:                               # %.noexc
	bnez	$a0, .LBB246_35
# %bb.13:
	ld.wu	$a0, $sp, 176
	andi	$a1, $a0, 64
	bnez	$a1, .LBB246_34
# %bb.14:
	ori	$a0, $a0, 128
	st.w	$a0, $sp, 176
	.p2align	4, , 16
.LBB246_15:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $sp, 72
	ld.d	$a1, $sp, 80
	xor	$a2, $a0, $a1
	sltu	$s3, $zero, $a2
	beq	$a0, $a1, .LBB246_35
# %bb.16:                               #   in Loop: Header=BB246_15 Depth=1
	addi.d	$a0, $a0, 1
	st.d	$a0, $sp, 72
	st.d	$a0, $sp, 64
.Ltmp1096:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	ori	$a1, $zero, 1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp1097:                              # EH_LABEL
# %bb.17:                               # %.noexc65
                                        #   in Loop: Header=BB246_15 Depth=1
	beqz	$a0, .LBB246_15
	b	.LBB246_35
.LBB246_18:
	move	$a1, $zero
	b	.LBB246_23
.LBB246_19:                             # %vector.ph
	bstrpick.d	$a1, $s4, 57, 1
	slli.d	$a3, $a1, 1
	andi	$a2, $s4, 1
	slli.d	$a1, $a1, 5
	add.d	$a1, $a0, $a1
	addi.d	$a0, $a0, 16
	move	$a4, $a3
	.p2align	4, , 16
.LBB246_20:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a0, -16
	st.d	$zero, $a0, 0
	st.w	$zero, $a0, -8
	st.w	$zero, $a0, 8
	addi.d	$a4, $a4, -2
	addi.d	$a0, $a0, 32
	bnez	$a4, .LBB246_20
# %bb.21:                               # %middle.block
	beq	$s4, $a3, .LBB246_23
	.p2align	4, , 16
.LBB246_22:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a1, 0
	st.w	$zero, $a1, 8
	addi.d	$a2, $a2, -1
	addi.d	$a1, $a1, 16
	bnez	$a2, .LBB246_22
.LBB246_23:                             # %.loopexit.i
	st.d	$a1, $sp, 120
	ld.d	$a0, $s6, 32
	st.d	$a0, $sp, 136
	st.d	$zero, $sp, 144
	andi	$a0, $s3, 128
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -6
	lu32i.d	$a1, 0
	and	$a1, $s3, $a1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s3, $a0
	or	$a0, $a0, $a1
	st.w	$a0, $sp, 152
	beqz	$s1, .LBB246_27
# %bb.24:
	st.d	$s0, $sp, 64
	st.b	$zero, $sp, 156
	st.d	$zero, $sp, 144
.Ltmp1104:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
.Ltmp1105:                              # EH_LABEL
# %bb.25:                               # %.noexc68
	ld.d	$a2, $sp, 136
.Ltmp1106:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.Ltmp1107:                              # EH_LABEL
# %bb.26:                               # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE8_M_matchEv.exit
	ld.b	$s3, $sp, 156
	ld.d	$a0, $sp, 112
	bnez	$a0, .LBB246_29
	b	.LBB246_30
.LBB246_27:
.Ltmp1102:                              # EH_LABEL
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv)
	jirl	$ra, $ra, 0
.Ltmp1103:                              # EH_LABEL
# %bb.28:
	move	$s3, $a0
	ld.d	$a0, $sp, 112
	beqz	$a0, .LBB246_30
.LBB246_29:
	ld.d	$a1, $sp, 128
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB246_30:                             # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i71
	ld.d	$a0, $sp, 40
	beqz	$a0, .LBB246_32
# %bb.31:
	ld.d	$a1, $sp, 56
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB246_32:
	andi	$a0, $s3, 1
	bnez	$a0, .LBB246_45
.LBB246_33:
	move	$a0, $s2
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	b	.LBB246_58
.LBB246_34:
	move	$s3, $zero
.LBB246_35:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE8_M_matchEv.exit
	ld.d	$a0, $sp, 160
	beqz	$a0, .LBB246_37
# %bb.36:
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
.LBB246_37:
	ld.d	$s4, $sp, 136
	ld.d	$s5, $sp, 144
	bne	$s4, $s5, .LBB246_48
# %bb.38:                               # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i.i
	beqz	$s4, .LBB246_40
.LBB246_39:
	ld.d	$a0, $sp, 152
	sub.d	$a1, $a0, $s4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB246_40:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EED2Ev.exit.i
	ld.d	$a0, $sp, 112
	beqz	$a0, .LBB246_42
# %bb.41:
	ld.d	$a1, $sp, 128
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB246_42:                             # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i
	ld.d	$a0, $sp, 40
	beqz	$a0, .LBB246_44
# %bb.43:
	ld.d	$a1, $sp, 56
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB246_44:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev.exit
	beqz	$s3, .LBB246_33
.LBB246_45:
	ld.d	$a1, $s2, 0
	ld.d	$a0, $s2, 8
	beq	$a1, $a0, .LBB246_53
# %bb.46:
	move	$a2, $a1
	b	.LBB246_51
	.p2align	4, , 16
.LBB246_47:                             # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB246_48 Depth=1
	addi.d	$s4, $s4, 32
	beq	$s4, $s5, .LBB246_55
.LBB246_48:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, 8
	beqz	$a0, .LBB246_47
# %bb.49:                               #   in Loop: Header=BB246_48 Depth=1
	ld.d	$a1, $s4, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB246_47
	.p2align	4, , 16
.LBB246_50:                             #   in Loop: Header=BB246_51 Depth=1
	addi.d	$a2, $a2, 24
	beq	$a2, $a0, .LBB246_53
.LBB246_51:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.bu	$a3, $a2, 16
	bnez	$a3, .LBB246_50
# %bb.52:                               #   in Loop: Header=BB246_51 Depth=1
	st.d	$fp, $a2, 8
	st.d	$fp, $a2, 0
	b	.LBB246_50
.LBB246_53:                             # %._crit_edge
	beqz	$s1, .LBB246_56
# %bb.54:
	st.b	$zero, $a0, -32
	st.d	$s0, $a0, -48
	st.d	$s0, $a0, -40
	st.b	$zero, $a0, -8
	st.d	$fp, $a0, -24
	st.d	$fp, $a0, -16
	b	.LBB246_57
.LBB246_55:                             # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split.i.i.i
	ld.d	$s4, $sp, 136
	bnez	$s4, .LBB246_39
	b	.LBB246_40
.LBB246_56:
	st.d	$s0, $a0, -48
	ld.d	$a2, $a1, 0
	st.d	$a2, $a0, -40
	xor	$a2, $s0, $a2
	sltu	$a2, $zero, $a2
	st.b	$a2, $a0, -32
	ld.d	$a1, $a1, 8
	st.d	$a1, $a0, -24
	st.d	$fp, $a0, -16
	xor	$a1, $a1, $fp
	sltu	$a1, $zero, $a1
	st.b	$a1, $a0, -8
.LBB246_57:
	ori	$a0, $zero, 1
.LBB246_58:
	ld.d	$s6, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB246_59:
.Ltmp1108:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB246_60:                             # %.loopexit.split-lp
.Ltmp1101:                              # EH_LABEL
	b	.LBB246_62
.LBB246_61:                             # %.loopexit
.Ltmp1098:                              # EH_LABEL
.LBB246_62:
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end246:
	.size	_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb, .Lfunc_end246-_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,"aG",@progbits,_ZNSt8__detail17__regex_algo_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEEcNS5_12regex_traitsIcEEEEbT_SH_RNS5_13match_resultsISH_T0_EERKNS5_11basic_regexIT1_T2_EENSt15regex_constants15match_flag_typeENS_20_RegexExecutorPolicyEb,comdat
	.p2align	2, 0x0
GCC_except_table246:
.Lexception102:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end102-.Lcst_begin102
.Lcst_begin102:
	.uleb128 .Lfunc_begin102-.Lfunc_begin102 # >> Call Site 1 <<
	.uleb128 .Ltmp1099-.Lfunc_begin102      #   Call between .Lfunc_begin102 and .Ltmp1099
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1099-.Lfunc_begin102      # >> Call Site 2 <<
	.uleb128 .Ltmp1095-.Ltmp1099            #   Call between .Ltmp1099 and .Ltmp1095
	.uleb128 .Ltmp1101-.Lfunc_begin102      #     jumps to .Ltmp1101
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1096-.Lfunc_begin102      # >> Call Site 3 <<
	.uleb128 .Ltmp1097-.Ltmp1096            #   Call between .Ltmp1096 and .Ltmp1097
	.uleb128 .Ltmp1098-.Lfunc_begin102      #     jumps to .Ltmp1098
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1104-.Lfunc_begin102      # >> Call Site 4 <<
	.uleb128 .Ltmp1103-.Ltmp1104            #   Call between .Ltmp1104 and .Ltmp1103
	.uleb128 .Ltmp1108-.Lfunc_begin102      #     jumps to .Ltmp1108
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1103-.Lfunc_begin102      # >> Call Site 5 <<
	.uleb128 .Lfunc_end246-.Ltmp1103        #   Call between .Ltmp1103 and .Lfunc_end246
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end102:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,comdat
	.hidden	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
.Lfunc_begin103:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception103
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a5
	move	$fp, $a0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	vst	$vr0, $a0, 0
	ld.d	$s2, $a4, 16
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	st.d	$a4, $a0, 48
	st.d	$s2, $a0, 56
	st.d	$a3, $a0, 64
	ld.d	$a0, $s2, 64
	ld.d	$a1, $s2, 56
	lu12i.w	$a2, -349526
	ori	$a2, $a2, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$s3, $a2, -1366
	vst	$vr0, $fp, 72
	st.d	$zero, $fp, 88
	beq	$a0, $a1, .LBB247_4
# %bb.1:                                # %_ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_.exit.i
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	sub.d	$s4, $a0, $a1
	mulh.du	$a0, $s4, $s3
	srli.d	$s1, $a0, 5
	slli.d	$a0, $s1, 4
.Ltmp1109:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1110:                              # EH_LABEL
# %bb.2:                                # %.noexc
	st.d	$a0, $fp, 72
	alsl.d	$a1, $s1, $a0, 4
	ori	$a2, $zero, 96
	st.d	$a1, $fp, 88
	bgeu	$s4, $a2, .LBB247_5
# %bb.3:
	move	$a2, $s1
	move	$a1, $a0
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	b	.LBB247_8
.LBB247_4:
	move	$a1, $zero
	b	.LBB247_9
.LBB247_5:                              # %vector.ph
	bstrpick.d	$a1, $s1, 57, 1
	slli.d	$a3, $a1, 1
	andi	$a2, $s1, 1
	slli.d	$a1, $a1, 5
	add.d	$a1, $a0, $a1
	addi.d	$a0, $a0, 16
	move	$a4, $a3
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	.p2align	4, , 16
.LBB247_6:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a0, -16
	st.d	$zero, $a0, 0
	st.w	$zero, $a0, -8
	st.w	$zero, $a0, 8
	addi.d	$a4, $a4, -2
	addi.d	$a0, $a0, 32
	bnez	$a4, .LBB247_6
# %bb.7:                                # %middle.block
	beq	$s1, $a3, .LBB247_9
	.p2align	4, , 16
.LBB247_8:                              # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a1, 0
	st.w	$zero, $a1, 8
	addi.d	$a2, $a2, -1
	addi.d	$a1, $a1, 16
	bnez	$a2, .LBB247_8
.LBB247_9:                              # %.loopexit
	addi.d	$s4, $fp, 72
	ld.d	$a0, $s2, 64
	ld.d	$a2, $s2, 56
	st.d	$a1, $fp, 80
	addi.d	$s1, $fp, 96
	ld.d	$s5, $s2, 32
	sub.d	$a0, $a0, $a2
	srli.d	$a0, $a0, 4
	mul.d	$s2, $a0, $s3
	st.d	$zero, $fp, 112
	vst	$vr0, $fp, 96
.Ltmp1112:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
.Ltmp1113:                              # EH_LABEL
# %bb.10:
	move	$s3, $a0
	move	$a1, $zero
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	st.d	$s3, $fp, 120
	st.d	$s5, $fp, 128
	andi	$a0, $s0, 128
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -6
	lu32i.d	$a1, 0
	and	$a1, $s0, $a1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s0, $a0
	or	$a0, $a0, $a1
	st.w	$a0, $fp, 136
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB247_11:
.Ltmp1111:                              # EH_LABEL
	move	$s0, $a0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB247_14
	b	.LBB247_16
.LBB247_12:                             # %.body
.Ltmp1114:                              # EH_LABEL
	move	$s0, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	bnez	$a0, .LBB247_15
# %bb.13:                               # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit
	ld.d	$a0, $fp, 0
	bnez	$a0, .LBB247_16
.LBB247_14:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB247_15:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB247_14
.LBB247_16:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end247:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE, .Lfunc_end247-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE,comdat
	.p2align	2, 0x0
GCC_except_table247:
.Lexception103:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end103-.Lcst_begin103
.Lcst_begin103:
	.uleb128 .Ltmp1109-.Lfunc_begin103      # >> Call Site 1 <<
	.uleb128 .Ltmp1110-.Ltmp1109            #   Call between .Ltmp1109 and .Ltmp1110
	.uleb128 .Ltmp1111-.Lfunc_begin103      #     jumps to .Ltmp1111
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1112-.Lfunc_begin103      # >> Call Site 2 <<
	.uleb128 .Ltmp1113-.Ltmp1112            #   Call between .Ltmp1112 and .Ltmp1113
	.uleb128 .Ltmp1114-.Lfunc_begin103      #     jumps to .Ltmp1114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1113-.Lfunc_begin103      # >> Call Site 3 <<
	.uleb128 .Lfunc_end247-.Ltmp1113        #   Call between .Ltmp1113 and .Lfunc_end247
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end103:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev,comdat
	.hidden	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 120
	beqz	$a0, .LBB248_2
# %bb.1:
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
.LBB248_2:
	ld.d	$s0, $fp, 96
	ld.d	$s1, $fp, 104
	bne	$s0, $s1, .LBB248_10
# %bb.3:                                # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i
	beqz	$s0, .LBB248_5
.LBB248_4:
	ld.d	$a0, $fp, 112
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB248_5:                              # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EED2Ev.exit
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB248_7
# %bb.6:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB248_7:                              # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB248_13
# %bb.8:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB248_9:                              # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB248_10 Depth=1
	addi.d	$s0, $s0, 32
	beq	$s0, $s1, .LBB248_12
.LBB248_10:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB248_9
# %bb.11:                               #   in Loop: Header=BB248_10 Depth=1
	ld.d	$a1, $s0, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB248_9
.LBB248_12:                             # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$s0, $fp, 96
	bnez	$s0, .LBB248_4
	b	.LBB248_5
.LBB248_13:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end248:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev, .Lfunc_end248-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 32
	ld.d	$a1, $fp, 64
	st.d	$a0, $fp, 24
	st.b	$zero, $fp, 116
	st.d	$zero, $fp, 104
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 96
	ori	$a1, $zero, 1
	ori	$s0, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $fp, 116
	bnez	$a0, .LBB249_6
# %bb.1:
	ld.wu	$a0, $fp, 112
	andi	$a1, $a0, 64
	bnez	$a1, .LBB249_5
# %bb.2:
	ori	$a0, $a0, 128
	st.w	$a0, $fp, 112
	.p2align	4, , 16
.LBB249_3:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 32
	ld.d	$a1, $fp, 40
	xor	$a2, $a0, $a1
	sltu	$s0, $zero, $a2
	beq	$a0, $a1, .LBB249_6
# %bb.4:                                #   in Loop: Header=BB249_3 Depth=1
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 32
	ld.d	$a1, $fp, 64
	st.d	$a0, $fp, 24
	st.b	$zero, $fp, 116
	st.d	$zero, $fp, 104
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 96
	ori	$a1, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $fp, 116
	beqz	$a0, .LBB249_3
	b	.LBB249_6
.LBB249_5:
	move	$s0, $zero
.LBB249_6:                              # %.loopexit
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end249:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv, .Lfunc_end249-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_searchEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev,comdat
	.hidden	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	beqz	$a0, .LBB250_2
# %bb.1:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB250_2:                              # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB250_4
# %bb.3:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB250_4:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end250:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev, .Lfunc_end250-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_,"axG",@progbits,_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_,comdat
	.hidden	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_ # -- Begin function _ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.weak	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.p2align	5
	.type	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_,@function
_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_: # @_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s1, $a0, 0
	ld.d	$a0, $a0, 16
	sub.d	$s2, $a0, $s1
	ori	$a3, $zero, 71
	move	$s0, $a1
	bltu	$a3, $s2, .LBB251_3
# %bb.1:                                # %.lr.ph.i.i.i.i.i.i
	ori	$a0, $zero, 72
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s0, $a0, 0
	st.d	$s0, $a0, 8
	st.b	$zero, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$s0, $a0, 32
	st.b	$zero, $a0, 40
	st.d	$s0, $a0, 48
	st.d	$s0, $a0, 56
	st.b	$zero, $a0, 64
	addi.d	$a1, $a0, 72
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 8
	st.d	$a1, $fp, 16
	beqz	$s1, .LBB251_16
# %bb.2:
	move	$a0, $s1
	move	$a1, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB251_3:
	ld.d	$a0, $fp, 8
	sub.d	$a2, $a0, $s1
	bltu	$a3, $a2, .LBB251_7
# %bb.4:
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a3, $a1, -1366
	mulh.du	$a1, $a2, $a3
	srli.d	$a1, $a1, 4
	beq	$s1, $a0, .LBB251_13
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$a2, $a2, -24
	ori	$a4, $zero, 24
	bgeu	$a2, $a4, .LBB251_9
# %bb.6:
	move	$a2, $s1
	b	.LBB251_12
.LBB251_7:                              # %_ZSt10__fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_ET_SE_T0_RKT1_St26random_access_iterator_tag.exit.i
	st.d	$s0, $s1, 0
	st.d	$s0, $s1, 8
	st.b	$zero, $s1, 16
	st.d	$s0, $s1, 24
	st.d	$s0, $s1, 32
	st.b	$zero, $s1, 40
	st.d	$s0, $s1, 48
	st.d	$s0, $s1, 56
	addi.d	$a1, $s1, 72
	st.b	$zero, $s1, 64
	beq	$a0, $a1, .LBB251_16
# %bb.8:
	st.d	$a1, $fp, 8
	b	.LBB251_16
.LBB251_9:                              # %vector.ph
	mulh.du	$a2, $a2, $a3
	srli.d	$a2, $a2, 4
	addi.d	$a3, $a2, 1
	bstrpick.d	$a2, $a3, 60, 1
	slli.d	$a4, $a2, 1
	slli.d	$a5, $a2, 5
	alsl.d	$a2, $a2, $a5, 4
	add.d	$a2, $s1, $a2
	addi.d	$a5, $s1, 24
	move	$a6, $a4
	.p2align	4, , 16
.LBB251_10:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s0, $a5, -24
	st.d	$s0, $a5, 0
	st.d	$s0, $a5, -16
	st.d	$s0, $a5, 8
	st.b	$zero, $a5, -8
	st.b	$zero, $a5, 16
	addi.d	$a6, $a6, -2
	addi.d	$a5, $a5, 48
	bnez	$a6, .LBB251_10
# %bb.11:                               # %middle.block
	beq	$a3, $a4, .LBB251_13
	.p2align	4, , 16
.LBB251_12:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s0, $a2, 0
	st.d	$s0, $a2, 8
	st.b	$zero, $a2, 16
	addi.d	$a2, $a2, 24
	bne	$a2, $a0, .LBB251_12
.LBB251_13:                             # %_ZSt9__fill_a1IPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESC_EvT_SE_RKT0_.exit.i
	addi.d	$a1, $a1, -3
	.p2align	4, , 16
.LBB251_14:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s0, $a0, 0
	st.d	$s0, $a0, 8
	st.b	$zero, $a0, 16
	addi.d	$a1, $a1, 1
	addi.d	$a0, $a0, 24
	bnez	$a1, .LBB251_14
# %bb.15:                               # %_ZSt24__uninitialized_fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E.exit.i
	st.d	$a0, $fp, 8
.LBB251_16:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_.exit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end251:
	.size	_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_, .Lfunc_end251-_ZNSt7__cxx1113match_resultsIN9__gnu_cxx17__normal_iteratorIPKcNS_12basic_stringIcSt11char_traitsIcESaIcEEEEESaINS_9sub_matchISA_EEEE25_M_establish_failed_matchESA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_,"axG",@progbits,_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_,comdat
	.weak	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_ # -- Begin function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_,@function
_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_: # @_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	lu12i.w	$a0, -349526
	ld.d	$a4, $fp, 16
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a3, $a0, -1366
	sub.d	$s3, $a4, $s0
	srli.d	$a0, $s3, 3
	mul.d	$a0, $a0, $a3
	move	$s1, $a2
	move	$s2, $a1
	bgeu	$a0, $a1, .LBB252_6
# %bb.1:
	lu12i.w	$a0, 349525
	ori	$a0, $a0, 1366
	lu32i.d	$a0, 349525
	lu52i.d	$a0, $a0, 85
	bgeu	$s2, $a0, .LBB252_20
# %bb.2:                                # %_ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2EmRKSD_.exit.i
	slli.d	$a0, $s2, 4
	alsl.d	$s4, $s2, $a0, 3
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	.p2align	4, , 16
.LBB252_3:                              # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s1, 16
	vld	$vr0, $s1, 0
	addi.d	$s2, $s2, -1
	st.d	$a2, $a1, 16
	vst	$vr0, $a1, 0
	addi.d	$a1, $a1, 24
	bnez	$s2, .LBB252_3
# %bb.4:                                # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2EmRKSC_RKSD_.exit
	add.d	$a2, $a0, $s4
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 8
	st.d	$a2, $fp, 16
	beqz	$s0, .LBB252_19
# %bb.5:
	move	$a0, $s0
	move	$a1, $s3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB252_6:
	ld.d	$a0, $fp, 8
	sub.d	$a1, $a0, $s0
	mulh.du	$a1, $a1, $a3
	srli.d	$a1, $a1, 4
	bgeu	$a1, $s2, .LBB252_13
# %bb.7:
	beq	$s0, $a0, .LBB252_10
# %bb.8:                                # %.lr.ph.i
	ld.bu	$a2, $s1, 16
	.p2align	4, , 16
.LBB252_9:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $s1, 0
	st.d	$a3, $s0, 0
	ld.d	$a3, $s1, 8
	st.d	$a3, $s0, 8
	st.b	$a2, $s0, 16
	addi.d	$s0, $s0, 24
	bne	$s0, $a0, .LBB252_9
.LBB252_10:                             # %_ZSt9__fill_a1IPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESC_EvT_SE_RKT0_.exit
	sub.d	$a1, $a1, $s2
	.p2align	4, , 16
.LBB252_11:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s1, 16
	st.d	$a2, $a0, 16
	vld	$vr0, $s1, 0
	vst	$vr0, $a0, 0
	addi.d	$a1, $a1, 1
	addi.d	$a0, $a0, 24
	bnez	$a1, .LBB252_11
# %bb.12:                               # %_ZSt24__uninitialized_fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_SC_ET_SE_T0_RKT1_RSaIT2_E.exit
	st.d	$a0, $fp, 8
	b	.LBB252_19
.LBB252_13:
	beqz	$s2, .LBB252_17
# %bb.14:                               # %.lr.ph.i18
	ld.bu	$a1, $s1, 16
	slli.d	$a2, $s2, 4
	alsl.d	$a2, $s2, $a2, 3
	add.d	$a2, $s0, $a2
	.p2align	4, , 16
.LBB252_15:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $s1, 0
	st.d	$a3, $s0, 0
	ld.d	$a3, $s1, 8
	st.d	$a3, $s0, 8
	st.b	$a1, $s0, 16
	addi.d	$s0, $s0, 24
	bne	$s0, $a2, .LBB252_15
# %bb.16:
	move	$s0, $a2
.LBB252_17:                             # %_ZSt10__fill_n_aIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEmSC_ET_SE_T0_RKT1_St26random_access_iterator_tag.exit
	beq	$a0, $s0, .LBB252_19
# %bb.18:
	st.d	$s0, $fp, 8
.LBB252_19:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB252_20:
	pcalau12i	$a0, %pc_hi20(.L.str.178)
	addi.d	$a0, $a0, %pc_lo12(.L.str.178)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end252:
	.size	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_, .Lfunc_end252-_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE14_M_fill_assignEmRKSC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev,comdat
	.hidden	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev # -- Begin function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.weak	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev,@function
_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev: # @_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s0, $a0, 0
	ld.d	$s1, $a0, 8
	bne	$s0, $s1, .LBB253_4
# %bb.1:                                # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit
	beqz	$s0, .LBB253_7
.LBB253_2:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
	.p2align	4, , 16
.LBB253_3:                              # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i
                                        #   in Loop: Header=BB253_4 Depth=1
	addi.d	$s0, $s0, 32
	beq	$s0, $s1, .LBB253_6
.LBB253_4:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB253_3
# %bb.5:                                #   in Loop: Header=BB253_4 Depth=1
	ld.d	$a1, $s0, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB253_3
.LBB253_6:                              # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split
	ld.d	$s0, $fp, 0
	bnez	$s0, .LBB253_2
.LBB253_7:                              # %_ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end253:
	.size	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev, .Lfunc_end253-_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE
.Lfunc_begin104:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception104
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a1
	move	$s0, $a0
	ld.d	$a2, $a0, 128
	ld.d	$s4, $a0, 104
	ld.d	$a1, $a0, 112
	ld.d	$s2, $a0, 64
	addi.d	$a0, $a0, 96
	st.d	$a2, $sp, 32
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	beq	$s4, $a1, .LBB254_3
# %bb.1:
	st.d	$a2, $s4, 0
	ld.d	$a0, $s2, 8
	ld.d	$a1, $s2, 0
	sub.d	$s3, $a0, $a1
	vst	$vr0, $s4, 8
	st.d	$zero, $s4, 24
	beq	$a0, $a1, .LBB254_4
# %bb.2:                                # %_ZNSt15__new_allocatorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEE8allocateEmPKv.exit.i.i.i.i.i.i.i
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	b	.LBB254_5
.LBB254_3:
	addi.d	$a1, $sp, 32
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	b	.LBB254_10
.LBB254_4:
	move	$a0, $zero
.LBB254_5:
	st.d	$a0, $s4, 8
	st.d	$a0, $s4, 16
	add.d	$a1, $a0, $s3
	st.d	$a1, $s4, 24
	ld.d	$a1, $s2, 0
	ld.d	$a2, $s2, 8
	beq	$a1, $a2, .LBB254_8
# %bb.6:                                # %.lr.ph.i.i.i.i.i.i.i.preheader
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	.p2align	4, , 16
.LBB254_7:                              # %.lr.ph.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a1, 16
	st.d	$a3, $a0, 16
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
	addi.d	$a1, $a1, 24
	addi.d	$a0, $a0, 24
	bne	$a1, $a2, .LBB254_7
	b	.LBB254_9
.LBB254_8:
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
.LBB254_9:                              # %_ZNSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEEC2IRlRKSF_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISM_SN_EEEbE4typeELb1EEEOSM_OSN_.exit.i.i
	st.d	$a0, $s4, 16
	ld.d	$a0, $s0, 104
	addi.d	$a0, $a0, 32
	st.d	$a0, $s0, 104
.LBB254_10:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EE8_M_queueElRKSM_.exit
	move	$s3, $zero
	addi.d	$a0, $fp, -1
	sltui	$s4, $a0, 1
	lu12i.w	$a0, -349526
	ori	$a0, $a0, 2731
	lu32i.d	$a0, -349526
	lu52i.d	$a0, $a0, -1366
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	b	.LBB254_12
	.p2align	4, , 16
.LBB254_11:                             # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev.exit
                                        #   in Loop: Header=BB254_12 Depth=1
	beq	$s8, $s1, .LBB254_29
.LBB254_12:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB254_16 Depth 2
                                        #     Child Loop BB254_24 Depth 2
	ld.d	$s5, $s0, 96
	ld.d	$s6, $s0, 104
	st.b	$zero, $s0, 140
	beq	$s5, $s6, .LBB254_28
# %bb.13:                               #   in Loop: Header=BB254_12 Depth=1
	ld.d	$a0, $s0, 56
	ld.d	$a1, $a0, 64
	ld.d	$a2, $a0, 56
	beq	$a1, $a2, .LBB254_15
# %bb.14:                               # %.lr.ph.preheader.i
                                        #   in Loop: Header=BB254_12 Depth=1
	ld.d	$a0, $s0, 120
	sub.d	$a1, $a1, $a2
	srli.d	$a1, $a1, 4
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	mul.d	$a2, $a1, $a2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
.LBB254_15:                             # %.lr.ph.preheader
                                        #   in Loop: Header=BB254_12 Depth=1
	ld.d	$s7, $s0, 112
	st.d	$s5, $sp, 32
	st.d	$s6, $sp, 40
	st.d	$s7, $sp, 48
	addi.d	$a0, $s0, 96
	vst	$vr1, $a0, 0
	st.d	$zero, $a0, 16
	move	$s1, $s5
	.p2align	4, , 16
.LBB254_16:                             # %.lr.ph
                                        #   Parent Loop BB254_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $s1, 24
	vld	$vr0, $s1, 8
	st.d	$zero, $s1, 8
	vst	$vr1, $s1, 16
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s0, 16
	vst	$vr0, $s0, 0
	st.d	$a2, $s0, 16
	beqz	$a0, .LBB254_18
# %bb.17:                               #   in Loop: Header=BB254_16 Depth=2
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB254_18:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
                                        #   in Loop: Header=BB254_16 Depth=2
	ld.d	$a2, $s1, 0
.Ltmp1115:                              # EH_LABEL
	move	$a0, $s0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.Ltmp1116:                              # EH_LABEL
# %bb.19:                               #   in Loop: Header=BB254_16 Depth=2
	addi.d	$s1, $s1, 32
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	bne	$s1, $s6, .LBB254_16
# %bb.20:                               # %._crit_edge
                                        #   in Loop: Header=BB254_12 Depth=1
	ld.d	$s8, $s0, 24
	ld.d	$s1, $s0, 40
	beq	$s8, $s1, .LBB254_22
# %bb.21:                               #   in Loop: Header=BB254_12 Depth=1
	addi.d	$a0, $s8, 1
	st.d	$a0, $s0, 24
.LBB254_22:                             # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB254_12 Depth=1
	ld.b	$a0, $s0, 140
	or	$a0, $a0, $s3
	andi	$a0, $a0, 1
	masknez	$a1, $s3, $s4
	maskeqz	$a0, $a0, $s4
	or	$s3, $a0, $a1
	move	$s2, $s5
	b	.LBB254_24
	.p2align	4, , 16
.LBB254_23:                             # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB254_24 Depth=2
	addi.d	$s2, $s2, 32
	beq	$s2, $s6, .LBB254_26
.LBB254_24:                             # %.lr.ph.i.i
                                        #   Parent Loop BB254_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a0, $s2, 8
	beqz	$a0, .LBB254_23
# %bb.25:                               #   in Loop: Header=BB254_24 Depth=2
	ld.d	$a1, $s2, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	b	.LBB254_23
	.p2align	4, , 16
.LBB254_26:                             # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i
                                        #   in Loop: Header=BB254_12 Depth=1
	beqz	$s5, .LBB254_11
# %bb.27:                               #   in Loop: Header=BB254_12 Depth=1
	sub.d	$a1, $s7, $s5
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	b	.LBB254_11
.LBB254_28:
	move	$s1, $zero
	b	.LBB254_35
.LBB254_29:                             # %split
	ld.d	$s2, $s0, 96
	ld.d	$s4, $s0, 104
	ld.bu	$s1, $s0, 140
	beq	$s4, $s2, .LBB254_35
# %bb.30:                               # %.lr.ph.i.i.i.preheader
	move	$s5, $s2
	b	.LBB254_32
	.p2align	4, , 16
.LBB254_31:                             # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB254_32 Depth=1
	addi.d	$s5, $s5, 32
	beq	$s5, $s4, .LBB254_34
.LBB254_32:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s5, 8
	beqz	$a0, .LBB254_31
# %bb.33:                               #   in Loop: Header=BB254_32 Depth=1
	ld.d	$a1, $s5, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB254_31
.LBB254_34:                             # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i
	st.d	$s2, $s0, 104
.LBB254_35:                             # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE5clearEv.exit
	sltui	$a0, $fp, 1
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s1, $a0
	or	$a0, $a0, $a1
	andi	$a0, $a0, 1
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB254_36:
.Ltmp1117:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end254:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE, .Lfunc_end254-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE,comdat
	.p2align	2, 0x0
GCC_except_table254:
.Lexception104:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end104-.Lcst_begin104
.Lcst_begin104:
	.uleb128 .Lfunc_begin104-.Lfunc_begin104 # >> Call Site 1 <<
	.uleb128 .Ltmp1115-.Lfunc_begin104      #   Call between .Lfunc_begin104 and .Ltmp1115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1115-.Lfunc_begin104      # >> Call Site 2 <<
	.uleb128 .Ltmp1116-.Ltmp1115            #   Call between .Ltmp1115 and .Ltmp1116
	.uleb128 .Ltmp1117-.Lfunc_begin104      #     jumps to .Ltmp1117
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1116-.Lfunc_begin104      # >> Call Site 3 <<
	.uleb128 .Lfunc_end254-.Ltmp1116        #   Call between .Ltmp1116 and .Lfunc_end254
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end104:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 120
	ldx.bu	$a3, $a0, $a2
	beqz	$a3, .LBB255_2
.LBB255_1:                              # %common.ret
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB255_2:                              # %.lr.ph.lr.ph
	move	$s0, $a1
	add.d	$a0, $a0, $a2
	ori	$s2, $zero, 1
	ori	$s3, $zero, 11
	pcalau12i	$a1, %pc_hi20(.LJTI255_0)
	addi.d	$s4, $a1, %pc_lo12(.LJTI255_0)
	ori	$s5, $zero, 2064
	b	.LBB255_6
.LBB255_3:                              #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a1, $s6, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl)
	jirl	$ra, $ra, 0
.LBB255_4:                              # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_word_boundaryEv.exit
                                        #   in Loop: Header=BB255_6 Depth=1
	ld.bu	$a1, $s6, 24
	beq	$a1, $a0, .LBB255_1
.LBB255_5:                              # %tailrecurse.backedge
                                        #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a2, $s6, 8
	ld.d	$a0, $fp, 120
	ldx.bu	$a1, $a0, $a2
	add.d	$a0, $a0, $a2
	bnez	$a1, .LBB255_1
.LBB255_6:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 56
	ld.d	$a3, $a1, 56
	slli.d	$a4, $a2, 5
	alsl.d	$a4, $a2, $a4, 4
	ldx.w	$a5, $a3, $a4
	addi.d	$a5, $a5, -1
	st.b	$s2, $a0, 0
	bltu	$s3, $a5, .LBB255_1
# %bb.7:                                # %.lr.ph
                                        #   in Loop: Header=BB255_6 Depth=1
	slli.d	$a0, $a5, 2
	ldx.w	$a0, $s4, $a0
	add.d	$a0, $s4, $a0
	add.d	$s6, $a3, $a4
	jr	$a0
.LBB255_8:                              #   in Loop: Header=BB255_6 Depth=1
	ld.wu	$a0, $a1, 24
	ld.d	$a2, $s6, 16
	andi	$s7, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$s1, $fp, 140
	beqz	$s7, .LBB255_48
# %bb.9:                                #   in Loop: Header=BB255_6 Depth=1
	beqz	$s1, .LBB255_5
	b	.LBB255_1
.LBB255_10:                             #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	bne	$a0, $a1, .LBB255_13
# %bb.11:                               #   in Loop: Header=BB255_6 Depth=1
	ld.wu	$a1, $fp, 136
	andi	$a2, $a1, 1
	bnez	$a2, .LBB255_1
# %bb.12:                               #   in Loop: Header=BB255_6 Depth=1
	andi	$a1, $a1, 128
	beqz	$a1, .LBB255_5
.LBB255_13:                             #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s5, .LBB255_1
# %bb.14:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_M_at_beginEv.exit
                                        #   in Loop: Header=BB255_6 Depth=1
	ld.b	$a1, $a0, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB255_5
	b	.LBB255_1
.LBB255_15:                             #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB255_34
# %bb.16:                               #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s5, .LBB255_1
# %bb.17:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE9_M_at_endEv.exit
                                        #   in Loop: Header=BB255_6 Depth=1
	ld.b	$a1, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB255_5
	b	.LBB255_1
.LBB255_18:                             #   in Loop: Header=BB255_6 Depth=1
	ld.bu	$a0, $s6, 24
	bnez	$a0, .LBB255_49
# %bb.19:                               #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a0, $fp, 72
	alsl.d	$s1, $a2, $a0, 4
	ld.w	$s7, $s1, 8
	beqz	$s7, .LBB255_35
# %bb.20:                               #   in Loop: Header=BB255_6 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
	bne	$s8, $a0, .LBB255_36
# %bb.21:                               #   in Loop: Header=BB255_6 Depth=1
	blt	$s2, $s7, .LBB255_5
# %bb.22:                               #   in Loop: Header=BB255_6 Depth=1
	addi.d	$a0, $s7, 1
	st.w	$a0, $s1, 8
	ld.d	$a2, $s6, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 8
	addi.d	$s7, $a0, -1
	b	.LBB255_37
.LBB255_23:                             #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 32
	bne	$a1, $a0, .LBB255_25
# %bb.24:                               #   in Loop: Header=BB255_6 Depth=1
	ld.bu	$a2, $fp, 136
	andi	$a2, $a2, 4
	bnez	$a2, .LBB255_38
.LBB255_25:                             #   in Loop: Header=BB255_6 Depth=1
	ld.d	$a2, $fp, 40
	bne	$a1, $a2, .LBB255_27
# %bb.26:                               #   in Loop: Header=BB255_6 Depth=1
	ld.bu	$a3, $fp, 136
	andi	$a3, $a3, 8
	bnez	$a3, .LBB255_38
.LBB255_27:                             #   in Loop: Header=BB255_6 Depth=1
	bne	$a1, $a0, .LBB255_31
# %bb.28:                               #   in Loop: Header=BB255_6 Depth=1
	ld.bu	$a0, $fp, 136
	andi	$a0, $a0, 128
	bnez	$a0, .LBB255_31
# %bb.29:                               #   in Loop: Header=BB255_6 Depth=1
	move	$s1, $zero
	bne	$a1, $a2, .LBB255_32
.LBB255_30:                             #   in Loop: Header=BB255_6 Depth=1
	move	$a0, $zero
	b	.LBB255_33
.LBB255_31:                             #   in Loop: Header=BB255_6 Depth=1
	ld.b	$a1, $a1, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 24
	ld.d	$a2, $fp, 40
	move	$s1, $a0
	beq	$a1, $a2, .LBB255_30
.LBB255_32:                             #   in Loop: Header=BB255_6 Depth=1
	ld.b	$a1, $a1, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
.LBB255_33:                             #   in Loop: Header=BB255_6 Depth=1
	xor	$a0, $s1, $a0
	sltu	$a0, $zero, $a0
	b	.LBB255_4
.LBB255_34:                             #   in Loop: Header=BB255_6 Depth=1
	ld.bu	$a0, $fp, 136
	andi	$a0, $a0, 2
	beqz	$a0, .LBB255_5
	b	.LBB255_1
.LBB255_35:                             # %._crit_edge
                                        #   in Loop: Header=BB255_6 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
.LBB255_36:                             #   in Loop: Header=BB255_6 Depth=1
	st.d	$a0, $s1, 0
	st.w	$s2, $s1, 8
	ld.d	$a2, $s6, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s8, $s1, 0
.LBB255_37:                             # %tailrecurse.backedge.sink.split
                                        #   in Loop: Header=BB255_6 Depth=1
	st.w	$s7, $s1, 8
	b	.LBB255_5
.LBB255_38:                             #   in Loop: Header=BB255_6 Depth=1
	move	$a0, $zero
	b	.LBB255_4
.LBB255_39:
	ld.d	$a0, $s6, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s2, $a0, $a1
	add.d	$s3, $s1, $s2
	ld.b	$s4, $s3, 16
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s6, 8
	vldx	$vr0, $s1, $s2
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	ori	$a1, $zero, 1
	st.b	$a1, $s3, 16
	st.d	$a0, $s3, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vstx	$vr0, $s1, $s2
	st.b	$s4, $s3, 16
	b	.LBB255_1
.LBB255_40:
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl)
	jr	$t8
.LBB255_41:
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	bne	$a0, $a1, .LBB255_43
# %bb.42:
	ld.bu	$a1, $fp, 136
	andi	$a1, $a1, 32
	bnez	$a1, .LBB255_1
.LBB255_43:
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, -1
	sltu	$a2, $zero, $a2
	xor	$a0, $a0, $a1
	sltu	$a0, $zero, $a0
	and	$a0, $a2, $a0
	bnez	$a0, .LBB255_1
# %bb.44:
	ld.b	$a0, $fp, 140
	andi	$a0, $a0, 1
	bnez	$a0, .LBB255_1
# %bb.45:
	ld.d	$a0, $fp, 64
	ori	$a1, $zero, 1
	st.b	$a1, $fp, 140
	move	$a1, $fp
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jr	$t8
.LBB255_46:
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl)
	jr	$t8
.LBB255_47:
	ld.d	$a0, $s6, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s2, $a0, $a1
	ldx.d	$s3, $s1, $s2
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s6, 8
	stx.d	$a0, $s1, $s2
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	stx.d	$s3, $s1, $s2
	b	.LBB255_1
.LBB255_48:
	ld.d	$a2, $s6, 8
	st.b	$zero, $fp, 140
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.b	$a0, $fp, 140
	or	$a0, $a0, $s1
	st.b	$a0, $fp, 140
	b	.LBB255_1
.LBB255_49:
	ld.bu	$a0, $fp, 140
	bnez	$a0, .LBB255_1
# %bb.50:
	ld.d	$a3, $s6, 8
	move	$a0, $fp
	move	$a1, $s0
	move	$s1, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $fp, 140
	bnez	$a0, .LBB255_1
# %bb.51:
	move	$a2, $s1
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl)
	jr	$t8
.Lfunc_end255:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl, .Lfunc_end255-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl,comdat
	.p2align	2, 0x0
.LJTI255_0:
	.word	.LBB255_8-.LJTI255_0
	.word	.LBB255_18-.LJTI255_0
	.word	.LBB255_40-.LJTI255_0
	.word	.LBB255_10-.LJTI255_0
	.word	.LBB255_15-.LJTI255_0
	.word	.LBB255_23-.LJTI255_0
	.word	.LBB255_3-.LJTI255_0
	.word	.LBB255_47-.LJTI255_0
	.word	.LBB255_39-.LJTI255_0
	.word	.LBB255_1-.LJTI255_0
	.word	.LBB255_46-.LJTI255_0
	.word	.LBB255_41-.LJTI255_0
                                        # -- End function
	.section	.text._ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_ # -- Begin function _ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,@function
_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_: # @_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_
.Lfunc_begin105:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception105
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s4, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s8, $s4, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s8, $a0, .LBB256_12
# %bb.1:                                # %_ZNKSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE12_M_check_lenEmS6_.exit
	move	$s2, $a2
	move	$s3, $a1
	srai.d	$a0, $s8, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 0
	ld.d	$s5, $s2, 8
	ld.d	$s6, $s2, 0
	move	$s2, $a0
	add.d	$s7, $a0, $s8
	stx.d	$a1, $a0, $s8
	sub.d	$s3, $s5, $s6
	st.d	$zero, $s7, 8
	vrepli.b	$vr0, 0
	vst	$vr0, $s7, 16
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	beq	$s5, $s6, .LBB256_6
# %bb.2:                                # %_ZNSt15__new_allocatorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEE8allocateEmPKv.exit.i.i.i.i.i
.Ltmp1118:                              # EH_LABEL
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1119:                              # EH_LABEL
# %bb.3:                                # %.noexc
	st.d	$a0, $s7, 8
	addi.d	$a1, $s7, 16
	st.d	$a0, $s7, 16
	add.d	$a2, $a0, $s3
	st.d	$a2, $s7, 24
	.p2align	4, , 16
.LBB256_4:                              # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s6, 16
	st.d	$a2, $a0, 16
	vld	$vr0, $s6, 0
	vst	$vr0, $a0, 0
	addi.d	$s6, $s6, 24
	addi.d	$a0, $a0, 24
	bne	$s6, $s5, .LBB256_4
# %bb.5:                                # %.loopexit
	st.d	$a0, $a1, 0
	move	$s3, $s2
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	bne	$s0, $s4, .LBB256_7
	b	.LBB256_9
.LBB256_6:                              # %.noexc.thread
	move	$a0, $zero
	addi.d	$a2, $s7, 8
	addi.d	$a1, $s7, 16
	vst	$vr0, $a2, 0
	st.d	$s3, $s7, 24
	st.d	$a0, $a1, 0
	move	$s3, $s2
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	beq	$s0, $s4, .LBB256_9
.LBB256_7:                              # %.lr.ph.i.i.i.preheader
	move	$s3, $s2
	move	$a0, $s0
	.p2align	4, , 16
.LBB256_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 0
	vld	$vr0, $a0, 8
	ld.d	$a2, $a0, 24
	st.d	$a1, $s3, 0
	vst	$vr0, $s3, 8
	st.d	$a2, $s3, 24
	vst	$vr1, $a0, 8
	st.d	$zero, $a0, 24
	addi.d	$a0, $a0, 32
	addi.d	$s3, $s3, 32
	bne	$a0, $s4, .LBB256_8
.LBB256_9:                              # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE11_S_relocateEPSG_SJ_SJ_RSH_.exit
	beqz	$s0, .LBB256_11
# %bb.10:                               # %_ZNSt12_Vector_baseISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESaISH_EE13_M_deallocateEPSH_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB256_11:                             # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB256_12:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB256_13:                             # %_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE12_Guard_allocD2Ev.exit23
.Ltmp1120:                              # EH_LABEL
	move	$fp, $a0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end256:
	.size	_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_, .Lfunc_end256-_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table256:
.Lexception105:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end105-.Lcst_begin105
.Lcst_begin105:
	.uleb128 .Lfunc_begin105-.Lfunc_begin105 # >> Call Site 1 <<
	.uleb128 .Ltmp1118-.Lfunc_begin105      #   Call between .Lfunc_begin105 and .Ltmp1118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1118-.Lfunc_begin105      # >> Call Site 2 <<
	.uleb128 .Ltmp1119-.Ltmp1118            #   Call between .Ltmp1118 and .Ltmp1119
	.uleb128 .Ltmp1120-.Lfunc_begin105      #     jumps to .Ltmp1120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1119-.Lfunc_begin105      # >> Call Site 3 <<
	.uleb128 .Lfunc_end256-.Ltmp1119        #   Call between .Ltmp1119 and .Lfunc_end256
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end105:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB257_11
# %bb.1:
	ld.d	$a1, $fp, 56
	ld.d	$a1, $a1, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$s0, $a1, $a2
	ld.b	$a0, $a0, 0
	ld.d	$a1, $s0, 32
	st.b	$a0, $sp, 7
	beqz	$a1, .LBB257_12
# %bb.2:                                # %_ZNKSt8__detail6_StateIcE10_M_matchesEc.exit
	ld.d	$a2, $s0, 40
	addi.d	$a0, $s0, 16
	addi.d	$a1, $sp, 7
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB257_11
# %bb.3:
	ld.d	$a0, $s0, 8
	ld.d	$s1, $fp, 104
	ld.d	$a1, $fp, 112
	st.d	$a0, $sp, 8
	beq	$s1, $a1, .LBB257_6
# %bb.4:
	ld.d	$a1, $fp, 8
	ld.d	$a2, $fp, 0
	st.d	$a0, $s1, 0
	sub.d	$s0, $a1, $a2
	vrepli.b	$vr0, 0
	vst	$vr0, $s1, 8
	st.d	$zero, $s1, 24
	beq	$a1, $a2, .LBB257_7
# %bb.5:                                # %_ZNSt15__new_allocatorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEE8allocateEmPKv.exit.i.i.i.i.i.i.i
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	b	.LBB257_8
.LBB257_6:
	addi.d	$a0, $fp, 96
	addi.d	$a1, $sp, 8
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorISt4pairIlS_INSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEESaISG_EE17_M_realloc_appendIJRlRKSF_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB257_11
.LBB257_7:
	move	$a0, $zero
.LBB257_8:
	st.d	$a0, $s1, 8
	st.d	$a0, $s1, 16
	add.d	$a1, $a0, $s0
	st.d	$a1, $s1, 24
	ld.d	$a1, $fp, 0
	ld.d	$a2, $fp, 8
	beq	$a1, $a2, .LBB257_10
	.p2align	4, , 16
.LBB257_9:                              # %.lr.ph.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a1, 16
	st.d	$a3, $a0, 16
	vld	$vr0, $a1, 0
	vst	$vr0, $a0, 0
	addi.d	$a1, $a1, 24
	addi.d	$a0, $a0, 24
	bne	$a1, $a2, .LBB257_9
.LBB257_10:                             # %_ZNSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS1_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISD_EEEC2IRlRKSF_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISM_SN_EEEbE4typeELb1EEEOSM_OSN_.exit.i.i
	ld.d	$a1, $fp, 104
	st.d	$a0, $s1, 16
	addi.d	$a0, $a1, 32
	st.d	$a0, $fp, 104
.LBB257_11:
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB257_12:
	pcaddu18i	$ra, %call36(_ZSt25__throw_bad_function_callv)
	jirl	$ra, $ra, 0
.Lfunc_end257:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl, .Lfunc_end257-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE15_M_handle_matchENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 56
	ld.d	$a0, $a0, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$s2, $a0, $a2
	ld.d	$a0, $s2, 16
	ld.d	$a2, $fp, 0
	slli.d	$a3, $a0, 4
	alsl.d	$a0, $a0, $a3, 3
	add.d	$a2, $a2, $a0
	ld.bu	$a0, $a2, 16
	beqz	$a0, .LBB258_13
# %bb.1:
	move	$s0, $a1
	ld.d	$a3, $fp, 24
	ld.d	$a0, $fp, 40
	beq	$a0, $a3, .LBB258_8
# %bb.2:                                # %.lr.ph
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	nor	$a4, $a3, $zero
	add.d	$a4, $a4, $a0
	sub.d	$a5, $a2, $a1
	sltu	$a6, $a4, $a5
	masknez	$a5, $a5, $a6
	maskeqz	$a4, $a4, $a6
	or	$a5, $a4, $a5
	addi.d	$a6, $a5, 1
	ori	$a7, $zero, 3
	move	$a4, $a1
	move	$s1, $a3
	bltu	$a6, $a7, .LBB258_5
# %bb.3:                                # %vector.ph
	bstrins.d	$a5, $zero, 0, 0
	add.d	$a4, $a1, $a5
	add.d	$s1, $a3, $a5
	.p2align	4, , 16
.LBB258_4:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a5, $a5, -2
	bnez	$a5, .LBB258_4
	.p2align	4, , 16
.LBB258_5:                              # %scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	beq	$a4, $a2, .LBB258_9
# %bb.6:                                #   in Loop: Header=BB258_5 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$a4, $a4, 1
	bne	$s1, $a0, .LBB258_5
# %bb.7:
	move	$s1, $a0
	b	.LBB258_9
.LBB258_8:                              # %..critedge_crit_edge
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	move	$s1, $a3
.LBB258_9:                              # %.critedge
	ld.d	$a0, $fp, 48
	ld.d	$a4, $a0, 16
	ld.bu	$a0, $a0, 0
	addi.d	$a4, $a4, 80
	andi	$a0, $a0, 1
	st.b	$a0, $sp, 16
	st.d	$a4, $sp, 24
	addi.d	$a0, $sp, 16
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB258_13
# %bb.10:
	ld.d	$s3, $fp, 24
	beq	$s1, $s3, .LBB258_12
# %bb.11:
	ld.d	$a2, $s2, 8
	st.d	$s1, $fp, 24
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s3, $fp, 24
	b	.LBB258_13
.LBB258_12:
	ld.d	$a2, $s2, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.LBB258_13:
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end258:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl, .Lfunc_end258-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 56
	ld.d	$a4, $a0, 72
	ld.d	$a3, $a3, 56
	alsl.d	$fp, $a2, $a4, 4
	ld.w	$s0, $fp, 8
	slli.d	$a4, $a2, 5
	alsl.d	$a2, $a2, $a4, 4
	add.d	$a2, $a3, $a2
	beqz	$s0, .LBB259_4
# %bb.1:
	ld.d	$s1, $fp, 0
	ld.d	$a3, $a0, 24
	bne	$s1, $a3, .LBB259_5
# %bb.2:
	ori	$a3, $zero, 1
	blt	$a3, $s0, .LBB259_7
# %bb.3:
	addi.d	$a3, $s0, 1
	st.w	$a3, $fp, 8
	ld.d	$a2, $a2, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 8
	addi.d	$s0, $a0, -1
	b	.LBB259_6
.LBB259_4:                              # %._crit_edge
	ld.d	$s1, $fp, 0
	ld.d	$a3, $a0, 24
.LBB259_5:
	st.d	$a3, $fp, 0
	ori	$a3, $zero, 1
	st.w	$a3, $fp, 8
	ld.d	$a2, $a2, 16
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s1, $fp, 0
.LBB259_6:                              # %.sink.split
	st.w	$s0, $fp, 8
.LBB259_7:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end259:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl, .Lfunc_end259-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_rep_once_moreENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
	.p2align	5
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
.Lfunc_begin106:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception106
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	addi.d	$a1, $a0, 80
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB260_7
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s1, 313
	andi	$s4, $s0, 255
	ldx.bu	$s2, $s3, $s4
	beqz	$s2, .LBB260_3
# %bb.2:                                # %_ZNKSt5ctypeIcE6narrowEcc.exit
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	bne	$a1, $a2, .LBB260_5
	b	.LBB260_6
.LBB260_3:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 64
	ori	$a2, $zero, 32
	ori	$s2, $zero, 32
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	beq	$a0, $s2, .LBB260_5
# %bb.4:
	stx.b	$a0, $s3, $s4
	move	$s2, $a0
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	beq	$a1, $a2, .LBB260_6
.LBB260_5:                              # %_ZNKSt5ctypeIcE6narrowEcc.exit.thread
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 16
	ld.bu	$a0, $a0, 24
	bstrpick.d	$a0, $a0, 4, 4
	andi	$a1, $s2, 255
	addi.d	$a1, $a1, -13
	sltui	$a1, $a1, 1
	and	$a0, $a1, $a0
.LBB260_6:
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB260_7:
.Ltmp1121:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1122:                              # EH_LABEL
# %bb.8:                                # %.noexc
.LBB260_9:
.Ltmp1123:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end260:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc, .Lfunc_end260-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,"aG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE21_M_is_line_terminatorEc,comdat
	.p2align	2, 0x0
GCC_except_table260:
.Lexception106:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end106-.Lcst_begin106
.Lcst_begin106:
	.uleb128 .Lfunc_begin106-.Lfunc_begin106 # >> Call Site 1 <<
	.uleb128 .Ltmp1121-.Lfunc_begin106      #   Call between .Lfunc_begin106 and .Ltmp1121
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1121-.Lfunc_begin106      # >> Call Site 2 <<
	.uleb128 .Ltmp1122-.Ltmp1121            #   Call between .Ltmp1121 and .Ltmp1122
	.uleb128 .Ltmp1123-.Lfunc_begin106      #     jumps to .Ltmp1123
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1122-.Lfunc_begin106      # >> Call Site 3 <<
	.uleb128 .Lfunc_end260-.Ltmp1122        #   Call between .Ltmp1122 and .Lfunc_end260
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end106:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.p2align	5
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a0, $a0, 48
	ld.d	$fp, $a0, 16
	move	$s0, $a1
	addi.d	$a0, $fp, 80
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s)
	addi.d	$a1, $a1, %pc_lo12(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s)
	addi.d	$a2, $a1, 1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 80
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$fp, $a1, $a0
	beqz	$fp, .LBB261_9
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $fp, 48
	andi	$s0, $s0, 255
	slli.d	$a1, $s0, 1
	ldx.hu	$a0, $a0, $a1
	and	$a1, $s1, $a0
	ori	$a0, $zero, 1
	bnez	$a1, .LBB261_8
# %bb.2:
	slli.d	$a0, $s1, 47
	bltz	$a0, .LBB261_4
# %bb.3:
	move	$a0, $zero
	b	.LBB261_8
.LBB261_4:
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB261_6
# %bb.5:
	ld.bu	$a0, $fp, 152
	b	.LBB261_7
.LBB261_6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $fp
	jirl	$ra, $a2, 0
.LBB261_7:                              # %_ZNKSt5ctypeIcE5widenEc.exit.i
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
.LBB261_8:                              # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB261_9:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end261:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc, .Lfunc_end261-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl
.Lfunc_begin107:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception107
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	st.d	$s1, $sp, 192                   # 8-byte Folded Spill
	st.d	$s2, $sp, 184                   # 8-byte Folded Spill
	st.d	$s3, $sp, 176                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ld.d	$s2, $a0, 8
	ld.d	$s3, $a0, 0
	move	$fp, $a1
	sub.d	$s1, $s2, $s3
	st.d	$zero, $sp, 152
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 160
	beq	$s2, $s3, .LBB262_3
# %bb.1:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 152
	st.d	$a0, $sp, 160
	add.d	$a1, $a0, $s1
	st.d	$a1, $sp, 168
	.p2align	4, , 16
.LBB262_2:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s3, 16
	st.d	$a1, $a0, 16
	vld	$vr0, $s3, 0
	vst	$vr0, $a0, 0
	addi.d	$s3, $s3, 24
	addi.d	$a0, $a0, 24
	bne	$s3, $s2, .LBB262_2
	b	.LBB262_4
.LBB262_3:                              # %.thread
	move	$a0, $zero
	vst	$vr0, $sp, 152
	st.d	$s1, $sp, 168
.LBB262_4:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSE_.exit
	ld.d	$a1, $s0, 24
	ld.d	$a2, $s0, 40
	ld.d	$a4, $s0, 48
	ld.w	$a5, $s0, 136
	st.d	$a0, $sp, 160
.Ltmp1124:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	addi.d	$a3, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EEC2ESB_SB_RSt6vectorISD_SE_ERKNS5_11basic_regexIcSG_EENSt15regex_constants15match_flag_typeE)
	jirl	$ra, $ra, 0
.Ltmp1125:                              # EH_LABEL
# %bb.5:
	ld.d	$a0, $sp, 40
	st.d	$fp, $sp, 136
	st.d	$a0, $sp, 32
.Ltmp1127:                              # EH_LABEL
	addi.d	$a0, $sp, 8
	ori	$a1, $zero, 1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE16_M_main_dispatchENSH_11_Match_modeESt17integral_constantIbLb0EE)
	jirl	$ra, $ra, 0
.Ltmp1128:                              # EH_LABEL
# %bb.6:                                # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE20_M_search_from_firstEv.exit
	move	$fp, $a0
	beqz	$a0, .LBB262_12
# %bb.7:                                # %.preheader
	ld.d	$a0, $sp, 160
	ld.d	$a2, $sp, 152
	beq	$a0, $a2, .LBB262_12
# %bb.8:                                # %.lr.ph
	sub.d	$a0, $a0, $a2
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mulh.du	$a0, $a0, $a1
	srli.d	$a1, $a0, 4
	ld.d	$a3, $s0, 0
	ori	$a0, $zero, 1
	sltu	$a4, $a0, $a1
	maskeqz	$a1, $a1, $a4
	masknez	$a4, $a0, $a4
	or	$a1, $a1, $a4
	addi.d	$a2, $a2, 16
	addi.d	$a3, $a3, 16
	b	.LBB262_10
	.p2align	4, , 16
.LBB262_9:                              #   in Loop: Header=BB262_10 Depth=1
	addi.d	$a1, $a1, -1
	addi.d	$a2, $a2, 24
	addi.d	$a3, $a3, 24
	beqz	$a1, .LBB262_12
.LBB262_10:                             # =>This Inner Loop Header: Depth=1
	ld.bu	$a4, $a2, 0
	beqz	$a4, .LBB262_9
# %bb.11:                               #   in Loop: Header=BB262_10 Depth=1
	ld.d	$a4, $a2, -16
	st.d	$a4, $a3, -16
	ld.d	$a4, $a2, -8
	st.d	$a4, $a3, -8
	st.b	$a0, $a3, 0
	b	.LBB262_9
.LBB262_12:                             # %.loopexit
	ld.d	$a0, $sp, 128
	beqz	$a0, .LBB262_14
# %bb.13:
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
.LBB262_14:
	ld.d	$s0, $sp, 104
	ld.d	$s1, $sp, 112
	bne	$s0, $s1, .LBB262_25
# %bb.15:                               # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exit.i.i.i
	beqz	$s0, .LBB262_17
.LBB262_16:
	ld.d	$a0, $sp, 120
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB262_17:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE11_State_infoISt17integral_constantIbLb0EESt6vectorISD_SE_EED2Ev.exit.i
	ld.d	$a0, $sp, 80
	beqz	$a0, .LBB262_19
# %bb.18:
	ld.d	$a1, $sp, 96
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB262_19:                             # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i
	ld.d	$a0, $sp, 8
	beqz	$a0, .LBB262_21
# %bb.20:
	ld.d	$a1, $sp, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB262_21:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev.exit
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB262_23
# %bb.22:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB262_23:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	move	$a0, $fp
	ld.d	$s3, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
	.p2align	4, , 16
.LBB262_24:                             # %_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB262_25 Depth=1
	addi.d	$s0, $s0, 32
	beq	$s0, $s1, .LBB262_27
.LBB262_25:                             # %.lr.ph.i.i.i.i16
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 8
	beqz	$a0, .LBB262_24
# %bb.26:                               #   in Loop: Header=BB262_25 Depth=1
	ld.d	$a1, $s0, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB262_24
.LBB262_27:                             # %_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEESH_EvT_SJ_RSaIT0_E.exitthread-pre-split.i.i.i
	ld.d	$s0, $sp, 104
	bnez	$s0, .LBB262_16
	b	.LBB262_17
.LBB262_28:
.Ltmp1129:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB262_30
.LBB262_29:
.Ltmp1126:                              # EH_LABEL
	move	$fp, $a0
.LBB262_30:
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB262_32
# %bb.31:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB262_32:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit19
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end262:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl, .Lfunc_end262-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE12_M_lookaheadEl,comdat
	.p2align	2, 0x0
GCC_except_table262:
.Lexception107:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end107-.Lcst_begin107
.Lcst_begin107:
	.uleb128 .Lfunc_begin107-.Lfunc_begin107 # >> Call Site 1 <<
	.uleb128 .Ltmp1124-.Lfunc_begin107      #   Call between .Lfunc_begin107 and .Ltmp1124
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1124-.Lfunc_begin107      # >> Call Site 2 <<
	.uleb128 .Ltmp1125-.Ltmp1124            #   Call between .Ltmp1124 and .Ltmp1125
	.uleb128 .Ltmp1126-.Lfunc_begin107      #     jumps to .Ltmp1126
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1127-.Lfunc_begin107      # >> Call Site 3 <<
	.uleb128 .Ltmp1128-.Ltmp1127            #   Call between .Ltmp1127 and .Ltmp1128
	.uleb128 .Ltmp1129-.Lfunc_begin107      #     jumps to .Ltmp1129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1128-.Lfunc_begin107      # >> Call Site 4 <<
	.uleb128 .Lfunc_end262-.Ltmp1128        #   Call between .Ltmp1128 and .Lfunc_end262
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end107:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,"axG",@progbits,_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,comdat
	.hidden	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_ # -- Begin function _ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
	.weak	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
	.p2align	5
	.type	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,@function
_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_: # @_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
.Lfunc_begin108:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception108
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.bu	$a5, $a0, 0
	move	$s3, $a4
	move	$fp, $a3
	move	$s0, $a2
	move	$s2, $a1
	beqz	$a5, .LBB263_7
# %bb.1:
	ld.d	$a1, $a0, 8
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB263_12
# %bb.2:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	sub.d	$a0, $s0, $s2
	sub.d	$a1, $s3, $fp
	bne	$a0, $a1, .LBB263_10
# %bb.3:
	ori	$a0, $zero, 1
	beq	$s0, $s2, .LBB263_11
# %bb.4:                                # %.lr.ph.i.preheader.i
	addi.d	$a1, $s2, 1
	.p2align	4, , 16
.LBB263_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	move	$s4, $a1
	ld.b	$a1, $a1, -1
	ld.b	$s2, $fp, 0
	ld.d	$a2, $a0, 32
	move	$a0, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s1, 0
	ld.d	$a2, $a1, 32
	move	$s3, $a0
	move	$a0, $s1
	move	$a1, $s2
	jirl	$ra, $a2, 0
	move	$a1, $a0
	xor	$a0, $s3, $a0
	sltui	$a0, $a0, 1
	bne	$s3, $a1, .LBB263_11
# %bb.6:                                # %.lr.ph.i.i
                                        #   in Loop: Header=BB263_5 Depth=1
	addi.d	$fp, $fp, 1
	addi.d	$a1, $s4, 1
	bne	$s4, $s0, .LBB263_5
	b	.LBB263_11
.LBB263_7:
	sub.d	$a2, $s0, $s2
	sub.d	$a0, $s3, $fp
	bne	$a2, $a0, .LBB263_10
# %bb.8:
	ori	$a0, $zero, 1
	beq	$s0, $s2, .LBB263_11
# %bb.9:
	move	$a0, $s2
	move	$a1, $fp
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	b	.LBB263_11
.LBB263_10:
	move	$a0, $zero
.LBB263_11:                             # %_ZSt8__equal4IN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESA_EbT_SB_T0_SC_.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB263_12:
.Ltmp1130:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1131:                              # EH_LABEL
# %bb.13:                               # %.noexc
.LBB263_14:
.Ltmp1132:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end263:
	.size	_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_, .Lfunc_end263-_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,"aG",@progbits,_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_,comdat
	.p2align	2, 0x0
GCC_except_table263:
.Lexception108:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end108-.Lcst_begin108
.Lcst_begin108:
	.uleb128 .Lfunc_begin108-.Lfunc_begin108 # >> Call Site 1 <<
	.uleb128 .Ltmp1130-.Lfunc_begin108      #   Call between .Lfunc_begin108 and .Ltmp1130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1130-.Lfunc_begin108      # >> Call Site 2 <<
	.uleb128 .Ltmp1131-.Ltmp1130            #   Call between .Ltmp1130 and .Ltmp1131
	.uleb128 .Ltmp1132-.Lfunc_begin108      #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1131-.Lfunc_begin108      # >> Call Site 3 <<
	.uleb128 .Lfunc_end263-.Ltmp1131        #   Call between .Ltmp1131 and .Lfunc_end263
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end108:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_,"axG",@progbits,_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_,comdat
	.weak	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_ # -- Begin function _ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_,@function
_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_: # @_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_
	.cfi_startproc
# %bb.0:
	beq	$a1, $a0, .LBB264_18
# %bb.1:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	ld.d	$s4, $a1, 8
	ld.d	$s1, $a1, 0
	ld.d	$a1, $a0, 16
	ld.d	$s0, $a0, 0
	sub.d	$fp, $s4, $s1
	sub.d	$s2, $a1, $s0
	bgeu	$s2, $fp, .LBB264_7
# %bb.2:                                # %_ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE11_M_allocateEm.exit.i
	move	$s5, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	beq	$s1, $s4, .LBB264_4
# %bb.3:                                # %.lr.ph.preheader.i.i.i.i
	addi.d	$a0, $fp, -24
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mulh.du	$a0, $a0, $a1
	srli.d	$a0, $a0, 4
	alsl.d	$a0, $a0, $a0, 1
	slli.d	$a0, $a0, 3
	addi.d	$a2, $a0, 24
	move	$a0, $s3
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB264_4:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE20_M_allocate_and_copyINS3_IPKSC_SE_EEEEPSC_mT_SK_.exit
	beqz	$s0, .LBB264_6
# %bb.5:
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB264_6:                              # %_ZNSt12_Vector_baseINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EE13_M_deallocateEPSC_m.exit
	move	$a0, $s5
	st.d	$s3, $s5, 0
	add.d	$a1, $s3, $fp
	st.d	$a1, $s5, 16
	move	$s0, $s3
	b	.LBB264_17
.LBB264_7:
	ld.d	$a1, $a0, 8
	sub.d	$a2, $a1, $s0
	bgeu	$a2, $fp, .LBB264_14
# %bb.8:
	add.d	$a2, $s1, $a2
	beq	$a1, $s0, .LBB264_11
# %bb.9:                                # %.lr.ph.i.i27.preheader
	move	$a3, $s0
	.p2align	4, , 16
.LBB264_10:                             # %.lr.ph.i.i27
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a4, $s1, 0
	st.d	$a4, $a3, 0
	ld.d	$a4, $s1, 8
	ld.b	$a5, $s1, 16
	st.d	$a4, $a3, 8
	st.b	$a5, $a3, 16
	addi.d	$s1, $s1, 24
	addi.d	$a3, $a3, 24
	bne	$s1, $a2, .LBB264_10
.LBB264_11:                             # %_ZSt4copyIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESD_ET0_T_SF_SE_.exit
	beq	$a2, $s4, .LBB264_17
	.p2align	4, , 16
.LBB264_12:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a2, 16
	st.d	$a3, $a1, 16
	vld	$vr0, $a2, 0
	vst	$vr0, $a1, 0
	addi.d	$a2, $a2, 24
	addi.d	$a1, $a1, 24
	bne	$a2, $s4, .LBB264_12
# %bb.13:                               # %_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx119sub_matchINS1_IPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISC_SaISC_EEEENS1_IPSC_SH_EEET0_T_SM_SL_.exit.loopexit
	ld.d	$s0, $a0, 0
	b	.LBB264_17
.LBB264_14:
	beq	$s1, $s4, .LBB264_17
# %bb.15:                               # %.lr.ph.i.i.preheader
	move	$a1, $zero
	.p2align	4, , 16
.LBB264_16:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ldx.d	$a2, $s1, $a1
	add.d	$a3, $s1, $a1
	stx.d	$a2, $s0, $a1
	ld.d	$a2, $a3, 8
	ld.b	$a4, $a3, 16
	add.d	$a5, $s0, $a1
	st.d	$a2, $a5, 8
	st.b	$a4, $a5, 16
	addi.d	$a2, $a3, 24
	addi.d	$a1, $a1, 24
	bne	$a2, $s4, .LBB264_16
.LBB264_17:                             # %_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx119sub_matchINS1_IPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISC_SaISC_EEEENS1_IPSC_SH_EEET0_T_SM_SL_.exit
	add.d	$a1, $s0, $fp
	st.d	$a1, $a0, 8
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
.LBB264_18:
	ret
.Lfunc_end264:
	.size	_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_, .Lfunc_end264-_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	move	$fp, $a0
	ori	$s3, $zero, 11
	pcalau12i	$a0, %pc_hi20(.LJTI265_0)
	addi.d	$s4, $a0, %pc_lo12(.LJTI265_0)
	ori	$s5, $zero, 1
	ori	$s6, $zero, 2064
	b	.LBB265_4
.LBB265_1:                              #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a1, $s2, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl)
	jirl	$ra, $ra, 0
.LBB265_2:                              # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE16_M_word_boundaryEv.exit
                                        #   in Loop: Header=BB265_4 Depth=1
	ld.bu	$a1, $s2, 24
	beq	$a1, $a0, .LBB265_64
.LBB265_3:                              # %tailrecurse.backedge291
                                        #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a2, $s2, 8
.LBB265_4:                              # %tailrecurse
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 56
	ld.d	$a1, $a0, 56
	slli.d	$a3, $a2, 5
	alsl.d	$s7, $a2, $a3, 4
	ldx.w	$a3, $a1, $s7
	addi.d	$a3, $a3, -1
	bltu	$s3, $a3, .LBB265_64
# %bb.5:                                # %tailrecurse
                                        #   in Loop: Header=BB265_4 Depth=1
	slli.d	$a3, $a3, 2
	ldx.w	$a3, $s4, $a3
	add.d	$a3, $s4, $a3
	add.d	$s2, $a1, $s7
	jr	$a3
.LBB265_6:                              #   in Loop: Header=BB265_4 Depth=1
	ld.wu	$a0, $a0, 24
	ld.d	$a2, $s2, 16
	andi	$s7, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$s1, $fp, 116
	beqz	$s7, .LBB265_57
# %bb.7:                                #   in Loop: Header=BB265_4 Depth=1
	beqz	$s1, .LBB265_3
	b	.LBB265_64
.LBB265_8:                              #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	bne	$a0, $a1, .LBB265_11
# %bb.9:                                #   in Loop: Header=BB265_4 Depth=1
	ld.wu	$a1, $fp, 112
	andi	$a2, $a1, 1
	bnez	$a2, .LBB265_64
# %bb.10:                               #   in Loop: Header=BB265_4 Depth=1
	andi	$a1, $a1, 128
	beqz	$a1, .LBB265_3
.LBB265_11:                             #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s6, .LBB265_64
# %bb.12:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE11_M_at_beginEv.exit
                                        #   in Loop: Header=BB265_4 Depth=1
	ld.b	$a1, $a0, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB265_3
	b	.LBB265_64
.LBB265_13:                             #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB265_32
# %bb.14:                               #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a1, $fp, 48
	ld.d	$a1, $a1, 16
	ld.wu	$a1, $a1, 24
	andi	$a1, $a1, 2064
	bne	$a1, $s6, .LBB265_64
# %bb.15:                               # %_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE9_M_at_endEv.exit
                                        #   in Loop: Header=BB265_4 Depth=1
	ld.b	$a1, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB265_3
	b	.LBB265_64
.LBB265_16:                             #   in Loop: Header=BB265_4 Depth=1
	ld.bu	$a0, $s2, 24
	bnez	$a0, .LBB265_52
# %bb.17:                               #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a0, $fp, 72
	alsl.d	$s1, $a2, $a0, 4
	ld.w	$s7, $s1, 8
	beqz	$s7, .LBB265_33
# %bb.18:                               #   in Loop: Header=BB265_4 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
	bne	$s8, $a0, .LBB265_34
# %bb.19:                               #   in Loop: Header=BB265_4 Depth=1
	blt	$s5, $s7, .LBB265_36
# %bb.20:                               #   in Loop: Header=BB265_4 Depth=1
	addi.d	$a0, $s7, 1
	st.w	$a0, $s1, 8
	ld.d	$a2, $s2, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 8
	addi.d	$s7, $a0, -1
	b	.LBB265_35
.LBB265_21:                             #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 32
	bne	$a1, $a0, .LBB265_23
# %bb.22:                               #   in Loop: Header=BB265_4 Depth=1
	ld.bu	$a2, $fp, 112
	andi	$a2, $a2, 4
	bnez	$a2, .LBB265_37
.LBB265_23:                             #   in Loop: Header=BB265_4 Depth=1
	ld.d	$a2, $fp, 40
	bne	$a1, $a2, .LBB265_25
# %bb.24:                               #   in Loop: Header=BB265_4 Depth=1
	ld.bu	$a3, $fp, 112
	andi	$a3, $a3, 8
	bnez	$a3, .LBB265_37
.LBB265_25:                             #   in Loop: Header=BB265_4 Depth=1
	bne	$a1, $a0, .LBB265_29
# %bb.26:                               #   in Loop: Header=BB265_4 Depth=1
	ld.bu	$a0, $fp, 112
	andi	$a0, $a0, 128
	bnez	$a0, .LBB265_29
# %bb.27:                               #   in Loop: Header=BB265_4 Depth=1
	move	$s1, $zero
	bne	$a1, $a2, .LBB265_30
.LBB265_28:                             #   in Loop: Header=BB265_4 Depth=1
	move	$a0, $zero
	b	.LBB265_31
.LBB265_29:                             #   in Loop: Header=BB265_4 Depth=1
	ld.b	$a1, $a1, -1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 24
	ld.d	$a2, $fp, 40
	move	$s1, $a0
	beq	$a1, $a2, .LBB265_28
.LBB265_30:                             #   in Loop: Header=BB265_4 Depth=1
	ld.b	$a1, $a1, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc)
	jirl	$ra, $ra, 0
.LBB265_31:                             #   in Loop: Header=BB265_4 Depth=1
	xor	$a0, $s1, $a0
	sltu	$a0, $zero, $a0
	b	.LBB265_2
.LBB265_32:                             #   in Loop: Header=BB265_4 Depth=1
	ld.bu	$a0, $fp, 112
	andi	$a0, $a0, 2
	beqz	$a0, .LBB265_3
	b	.LBB265_64
.LBB265_33:                             # %._crit_edge
                                        #   in Loop: Header=BB265_4 Depth=1
	ld.d	$s8, $s1, 0
	ld.d	$a0, $fp, 24
.LBB265_34:                             #   in Loop: Header=BB265_4 Depth=1
	st.d	$a0, $s1, 0
	st.w	$s5, $s1, 8
	ld.d	$a2, $s2, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s8, $s1, 0
.LBB265_35:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE16_M_rep_once_moreENSH_11_Match_modeEl.exit.sink.split
                                        #   in Loop: Header=BB265_4 Depth=1
	st.w	$s7, $s1, 8
.LBB265_36:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE16_M_rep_once_moreENSH_11_Match_modeEl.exit
                                        #   in Loop: Header=BB265_4 Depth=1
	ld.bu	$a0, $fp, 116
	beqz	$a0, .LBB265_3
	b	.LBB265_64
.LBB265_37:                             #   in Loop: Header=BB265_4 Depth=1
	move	$a0, $zero
	b	.LBB265_2
.LBB265_38:
	ld.d	$a0, $s2, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s3, $a0, $a1
	add.d	$s4, $s1, $s3
	ld.b	$s5, $s4, 16
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s2, 8
	vldx	$vr0, $s1, $s3
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	ori	$a1, $zero, 1
	st.b	$a1, $s4, 16
	st.d	$a0, $s4, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	vld	$vr0, $sp, 16                   # 16-byte Folded Reload
	vstx	$vr0, $s1, $s3
	st.b	$s5, $s4, 16
	b	.LBB265_64
.LBB265_39:
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl)
	jr	$t8
.LBB265_40:
	ld.d	$a1, $fp, 24
	ld.d	$a3, $fp, 40
	sltu	$a4, $zero, $s0
	ld.d	$a2, $fp, 32
	xor	$a3, $a1, $a3
	sltui	$a3, $a3, 1
	or	$a3, $a4, $a3
	st.b	$a3, $fp, 116
	bne	$a1, $a2, .LBB265_42
# %bb.41:
	ld.bu	$a4, $fp, 112
	andi	$a4, $a4, 32
	bnez	$a4, .LBB265_60
.LBB265_42:
	beqz	$a3, .LBB265_64
# %bb.43:
	ld.bu	$a0, $a0, 24
	andi	$a0, $a0, 16
	bnez	$a0, .LBB265_58
# %bb.44:
	ld.d	$a0, $fp, 104
	beqz	$a0, .LBB265_46
# %bb.45:
	sub.d	$a0, $a0, $a2
	sub.d	$a2, $a1, $a2
	bge	$a0, $a2, .LBB265_64
.LBB265_46:                             # %.critedge.i
	ld.d	$a0, $fp, 64
	st.d	$a1, $fp, 104
	b	.LBB265_59
.LBB265_47:
	ld.d	$a0, $fp, 24
	ld.d	$a1, $fp, 40
	beq	$a0, $a1, .LBB265_64
# %bb.48:
	ld.b	$a0, $a0, 0
	ld.d	$a1, $s2, 32
	st.b	$a0, $sp, 39
	beqz	$a1, .LBB265_65
# %bb.49:                               # %_ZNKSt8__detail6_StateIcE10_M_matchesEc.exit
	ld.d	$a2, $s2, 40
	addi.d	$a0, $s2, 16
	addi.d	$a1, $sp, 39
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB265_64
# %bb.50:
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s2, 8
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 24
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 24
	addi.d	$a0, $a0, -1
	st.d	$a0, $fp, 24
	b	.LBB265_64
.LBB265_51:
	ld.d	$a0, $s2, 16
	ld.d	$s1, $fp, 0
	ori	$a1, $zero, 24
	mul.d	$s3, $a0, $a1
	ldx.d	$s4, $s1, $s3
	ld.d	$a0, $fp, 24
	ld.d	$a2, $s2, 8
	stx.d	$a0, $s1, $s3
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	stx.d	$s4, $s1, $s3
	b	.LBB265_64
.LBB265_52:
	ld.d	$a3, $s2, 8
	move	$a0, $fp
	move	$a1, $s0
	move	$s1, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.bu	$a1, $fp, 116
	bnez	$a1, .LBB265_64
# %bb.53:
	ld.d	$a1, $fp, 56
	ld.d	$a2, $fp, 72
	ld.d	$a1, $a1, 56
	alsl.d	$s1, $s1, $a2, 4
	ld.w	$s2, $s1, 8
	add.d	$a0, $a1, $s7
	beqz	$s2, .LBB265_61
# %bb.54:
	ld.d	$s3, $s1, 0
	ld.d	$a1, $fp, 24
	bne	$s3, $a1, .LBB265_62
# %bb.55:
	ori	$a1, $zero, 1
	blt	$a1, $s2, .LBB265_64
# %bb.56:
	addi.d	$a1, $s2, 1
	st.w	$a1, $s1, 8
	ld.d	$a2, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 8
	addi.d	$s2, $a0, -1
	b	.LBB265_63
.LBB265_57:
	ld.d	$a2, $s2, 8
	st.b	$zero, $fp, 116
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	ld.b	$a0, $fp, 116
	or	$a0, $a0, $s1
	st.b	$a0, $fp, 116
	b	.LBB265_64
.LBB265_58:
	ld.d	$a0, $fp, 64
.LBB265_59:
	move	$a1, $fp
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	pcaddu18i	$t8, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jr	$t8
.LBB265_60:                             # %.thread.i
	st.b	$zero, $fp, 116
	b	.LBB265_64
.LBB265_61:                             # %._crit_edge.i
	ld.d	$s3, $s1, 0
	ld.d	$a1, $fp, 24
.LBB265_62:
	st.d	$a1, $s1, 0
	ori	$a1, $zero, 1
	st.w	$a1, $s1, 8
	ld.d	$a2, $a0, 16
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s3, $s1, 0
.LBB265_63:                             # %.sink.split.i
	st.w	$s2, $s1, 8
.LBB265_64:                             # %common.ret
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB265_65:
	pcaddu18i	$ra, %call36(_ZSt25__throw_bad_function_callv)
	jirl	$ra, $ra, 0
.Lfunc_end265:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl, .Lfunc_end265-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl
	.cfi_endproc
	.section	.rodata._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl,comdat
	.p2align	2, 0x0
.LJTI265_0:
	.word	.LBB265_6-.LJTI265_0
	.word	.LBB265_16-.LJTI265_0
	.word	.LBB265_39-.LJTI265_0
	.word	.LBB265_8-.LJTI265_0
	.word	.LBB265_13-.LJTI265_0
	.word	.LBB265_21-.LJTI265_0
	.word	.LBB265_1-.LJTI265_0
	.word	.LBB265_51-.LJTI265_0
	.word	.LBB265_38-.LJTI265_0
	.word	.LBB265_64-.LJTI265_0
	.word	.LBB265_47-.LJTI265_0
	.word	.LBB265_40-.LJTI265_0
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 56
	ld.d	$a0, $a0, 56
	slli.d	$a3, $a2, 5
	alsl.d	$a2, $a2, $a3, 4
	add.d	$s2, $a0, $a2
	ld.d	$a0, $s2, 16
	ld.d	$a2, $fp, 0
	slli.d	$a3, $a0, 4
	alsl.d	$a0, $a0, $a3, 3
	add.d	$a2, $a2, $a0
	ld.bu	$a0, $a2, 16
	beqz	$a0, .LBB266_13
# %bb.1:
	move	$s0, $a1
	ld.d	$a3, $fp, 24
	ld.d	$a0, $fp, 40
	beq	$a0, $a3, .LBB266_8
# %bb.2:                                # %.lr.ph
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	nor	$a4, $a3, $zero
	add.d	$a4, $a4, $a0
	sub.d	$a5, $a2, $a1
	sltu	$a6, $a4, $a5
	masknez	$a5, $a5, $a6
	maskeqz	$a4, $a4, $a6
	or	$a5, $a4, $a5
	addi.d	$a6, $a5, 1
	ori	$a7, $zero, 3
	move	$a4, $a1
	move	$s1, $a3
	bltu	$a6, $a7, .LBB266_5
# %bb.3:                                # %vector.ph
	bstrins.d	$a5, $zero, 0, 0
	add.d	$a4, $a1, $a5
	add.d	$s1, $a3, $a5
	.p2align	4, , 16
.LBB266_4:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a5, $a5, -2
	bnez	$a5, .LBB266_4
	.p2align	4, , 16
.LBB266_5:                              # %scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	beq	$a4, $a2, .LBB266_9
# %bb.6:                                #   in Loop: Header=BB266_5 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$a4, $a4, 1
	bne	$s1, $a0, .LBB266_5
# %bb.7:
	move	$s1, $a0
	b	.LBB266_9
.LBB266_8:                              # %..critedge_crit_edge
	ld.d	$a1, $a2, 0
	ld.d	$a2, $a2, 8
	move	$s1, $a3
.LBB266_9:                              # %.critedge
	ld.d	$a0, $fp, 48
	ld.d	$a4, $a0, 16
	ld.bu	$a0, $a0, 0
	addi.d	$a4, $a4, 80
	andi	$a0, $a0, 1
	st.b	$a0, $sp, 16
	st.d	$a4, $sp, 24
	addi.d	$a0, $sp, 16
	move	$a4, $s1
	pcaddu18i	$ra, %call36(_ZNSt8__detail16_Backref_matcherIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS5_12regex_traitsIcEEE8_M_applyESB_SB_SB_SB_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB266_13
# %bb.10:
	ld.d	$s3, $fp, 24
	beq	$s1, $s3, .LBB266_12
# %bb.11:
	ld.d	$a2, $s2, 8
	st.d	$s1, $fp, 24
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
	st.d	$s3, $fp, 24
	b	.LBB266_13
.LBB266_12:
	ld.d	$a2, $s2, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.LBB266_13:
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end266:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl, .Lfunc_end266-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE17_M_handle_backrefENSH_11_Match_modeEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
	.p2align	5
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
.Lfunc_begin109:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception109
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	addi.d	$a1, $a0, 80
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeC1ERKS_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$s1, $a1, $a0
	beqz	$s1, .LBB267_7
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s1, 313
	andi	$s4, $s0, 255
	ldx.bu	$s2, $s3, $s4
	beqz	$s2, .LBB267_3
# %bb.2:                                # %_ZNKSt5ctypeIcE6narrowEcc.exit
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	bne	$a1, $a2, .LBB267_5
	b	.LBB267_6
.LBB267_3:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 64
	ori	$a2, $zero, 32
	ori	$s2, $zero, 32
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	beq	$a0, $s2, .LBB267_5
# %bb.4:
	stx.b	$a0, $s3, $s4
	move	$s2, $a0
	andi	$a1, $s2, 255
	ori	$a2, $zero, 10
	ori	$a0, $zero, 1
	beq	$a1, $a2, .LBB267_6
.LBB267_5:                              # %_ZNKSt5ctypeIcE6narrowEcc.exit.thread
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 16
	ld.bu	$a0, $a0, 24
	bstrpick.d	$a0, $a0, 4, 4
	andi	$a1, $s2, 255
	addi.d	$a1, $a1, -13
	sltui	$a1, $a1, 1
	and	$a0, $a1, $a0
.LBB267_6:
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB267_7:
.Ltmp1133:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1134:                              # EH_LABEL
# %bb.8:                                # %.noexc
.LBB267_9:
.Ltmp1135:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end267:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc, .Lfunc_end267-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,"aG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE21_M_is_line_terminatorEc,comdat
	.p2align	2, 0x0
GCC_except_table267:
.Lexception109:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end109-.Lcst_begin109
.Lcst_begin109:
	.uleb128 .Lfunc_begin109-.Lfunc_begin109 # >> Call Site 1 <<
	.uleb128 .Ltmp1133-.Lfunc_begin109      #   Call between .Lfunc_begin109 and .Ltmp1133
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1133-.Lfunc_begin109      # >> Call Site 2 <<
	.uleb128 .Ltmp1134-.Ltmp1133            #   Call between .Ltmp1133 and .Ltmp1134
	.uleb128 .Ltmp1135-.Lfunc_begin109      #     jumps to .Ltmp1135
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1134-.Lfunc_begin109      # >> Call Site 3 <<
	.uleb128 .Lfunc_end267-.Ltmp1134        #   Call between .Ltmp1134 and .Lfunc_end267
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end109:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc,"axG",@progbits,_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc,comdat
	.hidden	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc # -- Begin function _ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.weak	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.p2align	5
	.type	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc,@function
_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc: # @_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a0, $a0, 48
	ld.d	$fp, $a0, 16
	move	$s0, $a1
	addi.d	$a0, $fp, 80
	pcalau12i	$a1, %pc_hi20(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s)
	addi.d	$a1, $a1, %pc_lo12(_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s)
	addi.d	$a2, $a1, 1
	move	$a3, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_b)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZNSt5ctypeIcE2idE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt5ctypeIcE2idE)
	pcaddu18i	$ra, %call36(_ZNKSt6locale2id5_M_idEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 80
	ld.d	$a1, $a1, 8
	slli.d	$a0, $a0, 3
	ldx.d	$fp, $a1, $a0
	beqz	$fp, .LBB268_9
# %bb.1:                                # %_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale.exit.i
	ld.d	$a0, $fp, 48
	andi	$s0, $s0, 255
	slli.d	$a1, $s0, 1
	ldx.hu	$a0, $a0, $a1
	and	$a1, $s1, $a0
	ori	$a0, $zero, 1
	bnez	$a1, .LBB268_8
# %bb.2:
	slli.d	$a0, $s1, 47
	bltz	$a0, .LBB268_4
# %bb.3:
	move	$a0, $zero
	b	.LBB268_8
.LBB268_4:
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB268_6
# %bb.5:
	ld.bu	$a0, $fp, 152
	b	.LBB268_7
.LBB268_6:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 95
	move	$a0, $fp
	jirl	$ra, $a2, 0
.LBB268_7:                              # %_ZNKSt5ctypeIcE5widenEc.exit.i
	andi	$a0, $a0, 255
	xor	$a0, $s0, $a0
	sltui	$a0, $a0, 1
.LBB268_8:                              # %_ZNKSt7__cxx1112regex_traitsIcE7isctypeEcNS1_10_RegexMaskE.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB268_9:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end268:
	.size	_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc, .Lfunc_end268-_ZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,"axG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,comdat
	.weak	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl # -- Begin function _ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl
	.p2align	5
	.type	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,@function
_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl: # @_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl
.Lfunc_begin110:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception110
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s3, $a0, 8
	ld.d	$s4, $a0, 0
	move	$s0, $a1
	sub.d	$s2, $s3, $s4
	st.d	$zero, $sp, 152
	vrepli.b	$vr1, 0
	vst	$vr1, $sp, 160
	beq	$s3, $s4, .LBB269_4
# %bb.1:
	vst	$vr1, $sp, 16                   # 16-byte Folded Spill
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	move	$a0, $zero
	st.d	$s1, $sp, 152
	st.d	$s1, $sp, 160
	add.d	$a1, $s1, $s2
	st.d	$a1, $sp, 168
	.p2align	4, , 16
.LBB269_2:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	vldx	$vr0, $s4, $a0
	add.d	$a1, $s4, $a0
	vstx	$vr0, $s1, $a0
	ld.d	$a1, $a1, 16
	add.d	$a2, $s1, $a0
	addi.d	$a0, $a0, 24
	add.d	$a3, $s4, $a0
	st.d	$a1, $a2, 16
	bne	$a3, $s3, .LBB269_2
# %bb.3:                                # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSE_.exit.loopexit
	add.d	$a0, $s1, $a0
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	b	.LBB269_5
.LBB269_4:                              # %.thread
	move	$s1, $zero
	move	$a0, $zero
	vst	$vr1, $sp, 152
	st.d	$s2, $sp, 168
.LBB269_5:                              # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEC2ERKSE_.exit
	vld	$vr0, $fp, 40
	ld.d	$a1, $fp, 48
	vst	$vr1, $sp, 40
	vst	$vr0, $sp, 72
	ld.d	$a1, $a1, 16
	st.d	$a0, $sp, 160
	ld.d	$s2, $fp, 24
	ld.w	$s3, $fp, 112
	st.d	$a1, $sp, 88
	addi.d	$a0, $sp, 152
	st.d	$a0, $sp, 96
	ld.d	$a0, $a1, 64
	ld.d	$a1, $a1, 56
	st.d	$zero, $sp, 32
	st.d	$s2, $sp, 64
	vst	$vr1, $sp, 104
	st.d	$zero, $sp, 120
	beq	$a0, $a1, .LBB269_9
# %bb.6:                                # %_ZNSt12_Vector_baseISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EEC2EmRKSD_.exit.i.i
	sub.d	$s5, $a0, $a1
	srli.d	$a0, $s5, 4
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mul.d	$s4, $a0, $a1
	slli.d	$a0, $s4, 4
.Ltmp1136:                              # EH_LABEL
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1137:                              # EH_LABEL
# %bb.7:                                # %.noexc
	st.d	$a0, $sp, 104
	alsl.d	$a1, $s4, $a0, 4
	ori	$a2, $zero, 96
	st.d	$a1, $sp, 120
	bgeu	$s5, $a2, .LBB269_10
# %bb.8:
	move	$a2, $s4
	move	$a1, $a0
	b	.LBB269_13
.LBB269_9:
	move	$a1, $zero
	b	.LBB269_14
.LBB269_10:                             # %vector.ph
	bstrpick.d	$a1, $s4, 57, 1
	slli.d	$a3, $a1, 1
	andi	$a2, $s4, 1
	slli.d	$a1, $a1, 5
	add.d	$a1, $a0, $a1
	addi.d	$a0, $a0, 16
	move	$a4, $a3
	.p2align	4, , 16
.LBB269_11:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a0, -16
	st.d	$zero, $a0, 0
	st.w	$zero, $a0, -8
	st.w	$zero, $a0, 8
	addi.d	$a4, $a4, -2
	addi.d	$a0, $a0, 32
	bnez	$a4, .LBB269_11
# %bb.12:                               # %middle.block
	beq	$s4, $a3, .LBB269_14
	.p2align	4, , 16
.LBB269_13:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$zero, $a1, 0
	st.w	$zero, $a1, 8
	addi.d	$a2, $a2, -1
	addi.d	$a1, $a1, 16
	bnez	$a2, .LBB269_13
.LBB269_14:                             # %.loopexit.i
	st.d	$a1, $sp, 112
	andi	$a0, $s3, 128
	sltui	$a0, $a0, 1
	addi.w	$a1, $zero, -6
	lu32i.d	$a1, 0
	and	$a1, $s3, $a1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s3, $a0
	or	$a0, $a0, $a1
	st.w	$a0, $sp, 144
	st.d	$s0, $sp, 128
	st.d	$s2, $sp, 56
	st.b	$zero, $sp, 148
	st.d	$zero, $sp, 136
.Ltmp1139:                              # EH_LABEL
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EEaSERKSE_)
	jirl	$ra, $ra, 0
.Ltmp1140:                              # EH_LABEL
# %bb.15:                               # %.noexc20
	ld.d	$a2, $sp, 128
.Ltmp1141:                              # EH_LABEL
	addi.d	$a0, $sp, 32
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE6_M_dfsENSH_11_Match_modeEl)
	jirl	$ra, $ra, 0
.Ltmp1142:                              # EH_LABEL
# %bb.16:
	ld.bu	$s0, $sp, 148
	beqz	$s0, .LBB269_22
# %bb.17:                               # %.preheader
	ld.d	$a0, $sp, 160
	ld.d	$a2, $sp, 152
	beq	$a0, $a2, .LBB269_22
# %bb.18:                               # %.lr.ph
	sub.d	$a0, $a0, $a2
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mulh.du	$a0, $a0, $a1
	srli.d	$a1, $a0, 4
	ld.d	$a3, $fp, 0
	ori	$a0, $zero, 1
	sltu	$a4, $a0, $a1
	maskeqz	$a1, $a1, $a4
	masknez	$a4, $a0, $a4
	or	$a1, $a1, $a4
	addi.d	$a2, $a2, 16
	addi.d	$a3, $a3, 16
	b	.LBB269_20
	.p2align	4, , 16
.LBB269_19:                             #   in Loop: Header=BB269_20 Depth=1
	addi.d	$a1, $a1, -1
	addi.d	$a2, $a2, 24
	addi.d	$a3, $a3, 24
	beqz	$a1, .LBB269_22
.LBB269_20:                             # =>This Inner Loop Header: Depth=1
	ld.bu	$a4, $a2, 0
	beqz	$a4, .LBB269_19
# %bb.21:                               #   in Loop: Header=BB269_20 Depth=1
	ld.d	$a4, $a2, -16
	st.d	$a4, $a3, -16
	ld.d	$a4, $a2, -8
	st.d	$a4, $a3, -8
	st.b	$a0, $a3, 0
	b	.LBB269_19
.LBB269_22:                             # %.loopexit
	ld.d	$a0, $sp, 104
	beqz	$a0, .LBB269_24
# %bb.23:
	ld.d	$a1, $sp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB269_24:                             # %_ZNSt6vectorISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiESaISC_EED2Ev.exit.i
	ld.d	$a0, $sp, 32
	beqz	$a0, .LBB269_26
# %bb.25:
	ld.d	$a1, $sp, 48
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB269_26:                             # %_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev.exit
	ld.d	$a0, $sp, 152
	beqz	$a0, .LBB269_28
# %bb.27:
	ld.d	$a1, $sp, 168
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB269_28:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit
	move	$a0, $s0
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB269_29:
.Ltmp1138:                              # EH_LABEL
	move	$fp, $a0
	b	.LBB269_31
.LBB269_30:
.Ltmp1143:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 152
.LBB269_31:
	beqz	$s1, .LBB269_33
# %bb.32:
	ld.d	$a0, $sp, 168
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB269_33:                             # %_ZNSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISC_EED2Ev.exit19
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end269:
	.size	_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl, .Lfunc_end269-_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,"aG",@progbits,_ZNSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE12_M_lookaheadEl,comdat
	.p2align	2, 0x0
GCC_except_table269:
.Lexception110:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end110-.Lcst_begin110
.Lcst_begin110:
	.uleb128 .Lfunc_begin110-.Lfunc_begin110 # >> Call Site 1 <<
	.uleb128 .Ltmp1136-.Lfunc_begin110      #   Call between .Lfunc_begin110 and .Ltmp1136
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1136-.Lfunc_begin110      # >> Call Site 2 <<
	.uleb128 .Ltmp1137-.Ltmp1136            #   Call between .Ltmp1136 and .Ltmp1137
	.uleb128 .Ltmp1138-.Lfunc_begin110      #     jumps to .Ltmp1138
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1139-.Lfunc_begin110      # >> Call Site 3 <<
	.uleb128 .Ltmp1142-.Ltmp1139            #   Call between .Ltmp1139 and .Ltmp1142
	.uleb128 .Ltmp1143-.Lfunc_begin110      #     jumps to .Ltmp1143
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1142-.Lfunc_begin110      # >> Call Site 4 <<
	.uleb128 .Lfunc_end269-.Ltmp1142        #   Call between .Ltmp1142 and .Lfunc_end269
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end110:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark13BenchmarkNameD2Ev,"axG",@progbits,_ZN9benchmark13BenchmarkNameD2Ev,comdat
	.hidden	_ZN9benchmark13BenchmarkNameD2Ev # -- Begin function _ZN9benchmark13BenchmarkNameD2Ev
	.weak	_ZN9benchmark13BenchmarkNameD2Ev
	.p2align	5
	.type	_ZN9benchmark13BenchmarkNameD2Ev,@function
_ZN9benchmark13BenchmarkNameD2Ev:       # @_ZN9benchmark13BenchmarkNameD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a0, $a0, 224
	addi.d	$a1, $fp, 240
	beq	$a0, $a1, .LBB270_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB270_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 192
	addi.d	$a1, $fp, 208
	beq	$a0, $a1, .LBB270_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB270_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3
	ld.d	$a0, $fp, 160
	addi.d	$a1, $fp, 176
	beq	$a0, $a1, .LBB270_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i4
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB270_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	ld.d	$a0, $fp, 128
	addi.d	$a1, $fp, 144
	beq	$a0, $a1, .LBB270_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB270_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	ld.d	$a0, $fp, 96
	addi.d	$a1, $fp, 112
	beq	$a0, $a1, .LBB270_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB270_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
	ld.d	$a0, $fp, 64
	addi.d	$a1, $fp, 80
	beq	$a0, $a1, .LBB270_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB270_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB270_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i16
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB270_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit18
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB270_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i19
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB270_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end270:
	.size	_ZN9benchmark13BenchmarkNameD2Ev, .Lfunc_end270-_ZN9benchmark13BenchmarkNameD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,comdat
	.hidden	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB271_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	b	.LBB271_3
	.p2align	4, , 16
.LBB271_2:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E.exit
                                        #   in Loop: Header=BB271_3 Depth=1
	ori	$a1, $zero, 80
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	beqz	$s1, .LBB271_5
.LBB271_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 32
	ld.d	$s1, $s0, 16
	addi.d	$a1, $s0, 48
	beq	$a0, $a1, .LBB271_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB271_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB271_2
.LBB271_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB271_6:                              # %._crit_edge
	ret
.Lfunc_end271:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E, .Lfunc_end271-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N9benchmark7CounterEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_,"axG",@progbits,_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_,comdat
	.hidden	_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_ # -- Begin function _ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_
	.weak	_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_
	.p2align	5
	.type	_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_,@function
_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_: # @_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_
.Lfunc_begin111:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception111
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ld.d	$fp, $a0, 0
	ld.d	$s2, $a0, 8
	sub.d	$s1, $s2, $fp
	addi.w	$a0, $zero, -7
	lu52i.d	$a0, $a0, 2047
	bgeu	$s1, $a0, .LBB272_18
# %bb.1:                                # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EE17_S_check_init_lenEmRKS7_.exit.i.i.i
	beq	$s2, $fp, .LBB272_14
# %bb.2:                                # %.lr.ph.i.i.i.i.preheader.i.i
.Ltmp1144:                              # EH_LABEL
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1145:                              # EH_LABEL
# %bb.3:                                # %.lr.ph.i.i.i.i.i.i.preheader
	addi.d	$a3, $s1, -8
	ori	$a4, $zero, 88
	move	$a2, $fp
	move	$a1, $a0
	bltu	$a3, $a4, .LBB272_9
# %bb.4:                                # %vector.memcheck
	addi.w	$a1, $zero, -8
	and	$a1, $a3, $a1
	addi.d	$a1, $a1, 8
	add.d	$a2, $fp, $a1
	bgeu	$a0, $a2, .LBB272_6
# %bb.5:                                # %vector.memcheck
	add.d	$a4, $a0, $a1
	move	$a2, $fp
	move	$a1, $a0
	bltu	$fp, $a4, .LBB272_9
.LBB272_6:                              # %vector.ph
	srli.d	$a1, $a3, 3
	addi.d	$a3, $a1, 1
	bstrpick.d	$a1, $a3, 61, 2
	slli.d	$a4, $a1, 2
	slli.d	$a1, $a1, 5
	add.d	$a2, $fp, $a1
	add.d	$a1, $a0, $a1
	addi.d	$a5, $a0, 16
	addi.d	$a6, $fp, 16
	vrepli.b	$vr0, 0
	move	$a7, $a4
	.p2align	4, , 16
.LBB272_7:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr1, $a6, -16
	vld	$vr2, $a6, 0
	vst	$vr1, $a5, -16
	vst	$vr2, $a5, 0
	vst	$vr0, $a6, -16
	vst	$vr0, $a6, 0
	addi.d	$a5, $a5, 32
	addi.d	$a7, $a7, -4
	addi.d	$a6, $a6, 32
	bnez	$a7, .LBB272_7
# %bb.8:                                # %middle.block
	beq	$a3, $a4, .LBB272_10
	.p2align	4, , 16
.LBB272_9:                              # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a2, 0
	st.d	$a3, $a1, 0
	st.d	$zero, $a2, 0
	addi.d	$a2, $a2, 8
	addi.d	$a1, $a1, 8
	bne	$a2, $s2, .LBB272_9
.LBB272_10:                             # %.lr.ph.i.i.preheader
	add.d	$a2, $a0, $s1
	ld.d	$s3, $s0, 16
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 8
	st.d	$a2, $s0, 16
	move	$s0, $fp
	b	.LBB272_12
	.p2align	4, , 16
.LBB272_11:                             # %_ZSt8_DestroyISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EEEvPT_.exit.i.i
                                        #   in Loop: Header=BB272_12 Depth=1
	st.d	$zero, $s0, 0
	addi.d	$s0, $s0, 8
	beq	$s0, $s2, .LBB272_15
.LBB272_12:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	beqz	$a0, .LBB272_11
# %bb.13:                               # %_ZNKSt14default_deleteIN9benchmark8internal9BenchmarkEEclEPS2_.exit.i.i.i.i
                                        #   in Loop: Header=BB272_12 Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 8
	jirl	$ra, $a1, 0
	b	.LBB272_11
.LBB272_14:                             # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPS6_S8_EEEvEET_SG_RKS7_.exit.thread
	ld.d	$s3, $s0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 0
	st.d	$s1, $s0, 16
.LBB272_15:                             # %_ZSt8_DestroyIPSt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EES6_EvT_S8_RSaIT0_E.exit.i
	ori	$s0, $zero, 1
	beqz	$fp, .LBB272_17
# %bb.16:
	sub.d	$a1, $s3, $fp
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB272_17:                             # %_ZNSt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EED2Ev.exit
	move	$a0, $s0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB272_18:
.Ltmp1146:                              # EH_LABEL
	pcalau12i	$a0, %pc_hi20(.L.str.178)
	addi.d	$a0, $a0, %pc_lo12(.L.str.178)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1147:                              # EH_LABEL
# %bb.19:                               # %.noexc.i
.LBB272_20:                             # %_ZNSt12_Vector_baseISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS3_EESaIS6_EED2Ev.exit.i
.Ltmp1148:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
.Ltmp1149:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1150:                              # EH_LABEL
# %bb.21:
	move	$s0, $zero
	b	.LBB272_17
.LBB272_22:
.Ltmp1151:                              # EH_LABEL
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end272:
	.size	_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_, .Lfunc_end272-_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_,"aG",@progbits,_ZNSt19__shrink_to_fit_auxISt6vectorISt10unique_ptrIN9benchmark8internal9BenchmarkESt14default_deleteIS4_EESaIS7_EELb1EE8_S_do_itERS9_,comdat
	.p2align	2, 0x0
GCC_except_table272:
.Lexception111:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase45-.Lttbaseref45
.Lttbaseref45:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end111-.Lcst_begin111
.Lcst_begin111:
	.uleb128 .Ltmp1144-.Lfunc_begin111      # >> Call Site 1 <<
	.uleb128 .Ltmp1145-.Ltmp1144            #   Call between .Ltmp1144 and .Ltmp1145
	.uleb128 .Ltmp1148-.Lfunc_begin111      #     jumps to .Ltmp1148
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1145-.Lfunc_begin111      # >> Call Site 2 <<
	.uleb128 .Ltmp1146-.Ltmp1145            #   Call between .Ltmp1145 and .Ltmp1146
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1146-.Lfunc_begin111      # >> Call Site 3 <<
	.uleb128 .Ltmp1147-.Ltmp1146            #   Call between .Ltmp1146 and .Ltmp1147
	.uleb128 .Ltmp1148-.Lfunc_begin111      #     jumps to .Ltmp1148
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1147-.Lfunc_begin111      # >> Call Site 4 <<
	.uleb128 .Ltmp1149-.Ltmp1147            #   Call between .Ltmp1147 and .Ltmp1149
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1149-.Lfunc_begin111      # >> Call Site 5 <<
	.uleb128 .Ltmp1150-.Ltmp1149            #   Call between .Ltmp1149 and .Ltmp1150
	.uleb128 .Ltmp1151-.Lfunc_begin111      #     jumps to .Ltmp1151
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1150-.Lfunc_begin111      # >> Call Site 6 <<
	.uleb128 .Lfunc_end272-.Ltmp1150        #   Call between .Ltmp1150 and .Lfunc_end272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end111:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase45:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark13BenchmarkNameC2EOS0_,"axG",@progbits,_ZN9benchmark13BenchmarkNameC2EOS0_,comdat
	.hidden	_ZN9benchmark13BenchmarkNameC2EOS0_ # -- Begin function _ZN9benchmark13BenchmarkNameC2EOS0_
	.weak	_ZN9benchmark13BenchmarkNameC2EOS0_
	.p2align	5
	.type	_ZN9benchmark13BenchmarkNameC2EOS0_,@function
_ZN9benchmark13BenchmarkNameC2EOS0_:    # @_ZN9benchmark13BenchmarkNameC2EOS0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	addi.d	$a0, $a0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $a1, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB273_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 0
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 16
	b	.LBB273_3
.LBB273_2:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 8
	st.d	$s1, $fp, 0
	st.b	$zero, $fp, 16
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 32
	addi.d	$s1, $fp, 48
	st.d	$zero, $fp, 8
	beq	$a1, $s1, .LBB273_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i9
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB273_6
.LBB273_5:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i10
	ld.d	$a1, $fp, 40
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit11
	ld.d	$a0, $fp, 40
	st.d	$a0, $s0, 40
	st.d	$s1, $fp, 32
	st.b	$zero, $fp, 48
	addi.d	$a0, $s0, 80
	st.d	$a0, $s0, 64
	ld.d	$a1, $fp, 64
	addi.d	$s1, $fp, 80
	st.d	$zero, $fp, 40
	beq	$a1, $s1, .LBB273_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i12
	st.d	$a1, $s0, 64
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 80
	b	.LBB273_9
.LBB273_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i13
	ld.d	$a1, $fp, 72
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit14
	ld.d	$a0, $fp, 72
	st.d	$a0, $s0, 72
	st.d	$s1, $fp, 64
	st.b	$zero, $fp, 80
	addi.d	$a0, $s0, 112
	st.d	$a0, $s0, 96
	ld.d	$a1, $fp, 96
	addi.d	$s1, $fp, 112
	st.d	$zero, $fp, 72
	beq	$a1, $s1, .LBB273_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i15
	st.d	$a1, $s0, 96
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 112
	b	.LBB273_12
.LBB273_11:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i16
	ld.d	$a1, $fp, 104
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit17
	ld.d	$a0, $fp, 104
	st.d	$a0, $s0, 104
	st.d	$s1, $fp, 96
	st.b	$zero, $fp, 112
	addi.d	$a0, $s0, 144
	st.d	$a0, $s0, 128
	ld.d	$a1, $fp, 128
	addi.d	$s1, $fp, 144
	st.d	$zero, $fp, 104
	beq	$a1, $s1, .LBB273_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i18
	st.d	$a1, $s0, 128
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 144
	b	.LBB273_15
.LBB273_14:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i19
	ld.d	$a1, $fp, 136
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_15:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit20
	ld.d	$a0, $fp, 136
	st.d	$a0, $s0, 136
	st.d	$s1, $fp, 128
	st.b	$zero, $fp, 144
	addi.d	$a0, $s0, 176
	st.d	$a0, $s0, 160
	ld.d	$a1, $fp, 160
	addi.d	$s1, $fp, 176
	st.d	$zero, $fp, 136
	beq	$a1, $s1, .LBB273_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i21
	st.d	$a1, $s0, 160
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 176
	b	.LBB273_18
.LBB273_17:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i22
	ld.d	$a1, $fp, 168
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_18:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit23
	ld.d	$a0, $fp, 168
	st.d	$a0, $s0, 168
	st.d	$s1, $fp, 160
	st.b	$zero, $fp, 176
	addi.d	$a0, $s0, 208
	st.d	$a0, $s0, 192
	ld.d	$a1, $fp, 192
	addi.d	$s1, $fp, 208
	st.d	$zero, $fp, 168
	beq	$a1, $s1, .LBB273_20
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i24
	st.d	$a1, $s0, 192
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 208
	b	.LBB273_21
.LBB273_20:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i25
	ld.d	$a1, $fp, 200
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit26
	ld.d	$a0, $fp, 200
	st.d	$a0, $s0, 200
	st.d	$s1, $fp, 192
	st.b	$zero, $fp, 208
	addi.d	$a0, $s0, 240
	st.d	$a0, $s0, 224
	ld.d	$a1, $fp, 224
	addi.d	$s1, $fp, 240
	st.d	$zero, $fp, 200
	beq	$a1, $s1, .LBB273_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i27
	st.d	$a1, $s0, 224
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 240
	b	.LBB273_24
.LBB273_23:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i28
	ld.d	$a1, $fp, 232
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB273_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit29
	ld.d	$a0, $fp, 232
	st.d	$a0, $s0, 232
	st.d	$s1, $fp, 224
	st.d	$zero, $fp, 232
	st.b	$zero, $fp, 240
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end273:
	.size	_ZN9benchmark13BenchmarkNameC2EOS0_, .Lfunc_end273-_ZN9benchmark13BenchmarkNameC2EOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i,"axG",@progbits,_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i,comdat
	.hidden	_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i # -- Begin function _ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.weak	_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.p2align	5
	.type	_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i,@function
_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i: # @_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	pcalau12i	$s0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	dbar	20
	beqz	$a4, .LBB274_15
.LBB274_1:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB274_17
.LBB274_2:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit13
	ld.b	$a0, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB274_19
.LBB274_3:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit15
	ld.b	$a0, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB274_21
.LBB274_4:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit17
	sub.d	$a4, $zero, $a1
	sub.d	$a1, $zero, $a2
	move	$a0, $fp
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	beq	$a0, $a1, .LBB274_10
# %bb.5:                                # %.lr.ph.i.preheader
	sub.d	$a2, $a1, $a0
	addi.d	$a3, $a2, -8
	ori	$a4, $zero, 24
	move	$a2, $a0
	bltu	$a3, $a4, .LBB274_9
# %bb.6:                                # %vector.ph
	srli.d	$a2, $a3, 3
	addi.d	$a3, $a2, 1
	bstrpick.d	$a2, $a3, 61, 2
	slli.d	$a4, $a2, 2
	slli.d	$a2, $a2, 5
	add.d	$a2, $a0, $a2
	addi.d	$a5, $a0, 16
	move	$a6, $a4
	.p2align	4, , 16
.LBB274_7:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a5, -16
	vld	$vr1, $a5, 0
	vneg.d	$vr0, $vr0
	vneg.d	$vr1, $vr1
	vst	$vr0, $a5, -16
	vst	$vr1, $a5, 0
	addi.d	$a6, $a6, -4
	addi.d	$a5, $a5, 32
	bnez	$a6, .LBB274_7
# %bb.8:                                # %middle.block
	beq	$a3, $a4, .LBB274_10
	.p2align	4, , 16
.LBB274_9:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a3, $a2, 0
	sub.d	$a3, $zero, $a3
	st.d	$a3, $a2, 0
	addi.d	$a2, $a2, 8
	bne	$a2, $a1, .LBB274_9
.LBB274_10:                             # %_ZSt8for_eachIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEZN9benchmark8internal16AddNegatedPowersIlEEvPS3_IT_SaISA_EESA_SA_iEUlRlE_ET0_SA_SA_SG_.exit
	beq	$a0, $a1, .LBB274_14
# %bb.11:                               # %_ZSt8for_eachIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEZN9benchmark8internal16AddNegatedPowersIlEEvPS3_IT_SaISA_EESA_SA_iEUlRlE_ET0_SA_SA_SG_.exit
	addi.d	$a1, $a1, -8
	bgeu	$a0, $a1, .LBB274_14
# %bb.12:                               # %.lr.ph.i.i.preheader
	addi.d	$a0, $a0, 8
	.p2align	4, , 16
.LBB274_13:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a2, $a0
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a2, -8
	st.d	$a0, $a2, -8
	st.d	$a3, $a1, 0
	addi.d	$a1, $a1, -8
	addi.d	$a0, $a2, 8
	bltu	$a2, $a1, .LBB274_13
.LBB274_14:                             # %_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEEvT_S7_.exit
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB274_15:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s2, $a3
	move	$s3, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB274_1
# %bb.16:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	b	.LBB274_1
.LBB274_17:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s2, $a3
	move	$s3, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB274_2
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	b	.LBB274_2
.LBB274_19:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s2, $a3
	move	$s3, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB274_3
# %bb.20:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	b	.LBB274_3
.LBB274_21:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s1, $a3
	move	$s2, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $s2
	move	$a3, $s1
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB274_4
# %bb.22:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $s2
	move	$a3, $s1
	b	.LBB274_4
.Lfunc_end274:
	.size	_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i, .Lfunc_end274-_ZN9benchmark8internal16AddNegatedPowersIlEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i,"axG",@progbits,_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i,comdat
	.hidden	_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i # -- Begin function _ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.weak	_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.p2align	5
	.type	_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i,@function
_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i: # @_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$s3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a3
	move	$s0, $a2
	move	$s2, $a1
	move	$s1, $a0
	dbar	20
	beqz	$a4, .LBB275_19
.LBB275_1:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB275_21
.LBB275_2:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit10
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB275_23
.LBB275_3:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit12
	ld.d	$s3, $s1, 0
	ld.d	$a2, $s1, 8
	move	$a0, $s3
	blez	$s0, .LBB275_17
# %bb.4:                                # %.lr.ph
	addi.w	$a0, $zero, -1
	lu52i.d	$a1, $a0, 2047
	div.d	$s7, $a1, $fp
	addi.w	$a1, $zero, -8
	lu52i.d	$a1, $a1, 2047
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	lu52i.d	$a0, $a0, 255
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	move	$a0, $a2
	ori	$s6, $zero, 1
	.p2align	4, , 16
.LBB275_5:                              # =>This Inner Loop Header: Depth=1
	bge	$s6, $s2, .LBB275_7
# %bb.6:                                #   in Loop: Header=BB275_5 Depth=1
	move	$s4, $s3
	bge	$s7, $s6, .LBB275_15
	b	.LBB275_16
	.p2align	4, , 16
.LBB275_7:                              #   in Loop: Header=BB275_5 Depth=1
	ld.d	$a1, $s1, 16
	beq	$a0, $a1, .LBB275_9
# %bb.8:                                #   in Loop: Header=BB275_5 Depth=1
	st.d	$s6, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s1, 8
	move	$s4, $s3
	bge	$s7, $s6, .LBB275_15
	b	.LBB275_16
.LBB275_9:                              #   in Loop: Header=BB275_5 Depth=1
	sub.d	$s5, $a0, $s3
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	beq	$s5, $a0, .LBB275_18
# %bb.10:                               # %_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc.exit.i.i
                                        #   in Loop: Header=BB275_5 Depth=1
	srai.d	$a0, $s5, 3
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	sltu	$a1, $a0, $a2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$s8, $a0, $a1
	slli.d	$a0, $s8, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	stx.d	$s6, $a0, $s5
	blez	$s5, .LBB275_12
# %bb.11:                               #   in Loop: Header=BB275_5 Depth=1
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB275_12:                             # %_ZNSt6vectorIlSaIlEE11_S_relocateEPlS2_S2_RS0_.exit.i.i
                                        #   in Loop: Header=BB275_5 Depth=1
	beqz	$s3, .LBB275_14
# %bb.13:                               # %_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm.exit.i.i.i
                                        #   in Loop: Header=BB275_5 Depth=1
	move	$a0, $s3
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB275_14:                             # %_ZNSt6vectorIlSaIlEE17_M_realloc_appendIJRKlEEEvDpOT_.exit.i
                                        #   in Loop: Header=BB275_5 Depth=1
	add.d	$a0, $s4, $s5
	addi.d	$a0, $a0, 8
	st.d	$s4, $s1, 0
	st.d	$a0, $s1, 8
	alsl.d	$a1, $s8, $s4, 3
	st.d	$a1, $s1, 16
	blt	$s7, $s6, .LBB275_16
	.p2align	4, , 16
.LBB275_15:                             # %_ZNSt6vectorIlSaIlEE9push_backERKl.exit
                                        #   in Loop: Header=BB275_5 Depth=1
	mul.d	$s6, $s6, $fp
	move	$s3, $s4
	bge	$s0, $s6, .LBB275_5
.LBB275_16:                             # %_ZNSt6vectorIlSaIlEE9push_backERKl.exit._crit_edge.loopexit
	ld.d	$a0, $s1, 0
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
.LBB275_17:                             # %_ZNSt6vectorIlSaIlEE9push_backERKl.exit._crit_edge
	sub.d	$a1, $a2, $s3
	slli.d	$a1, $a1, 29
	srai.d	$a1, $a1, 29
	add.d	$a0, $a0, $a1
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB275_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB275_19:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB275_1
# %bb.20:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB275_1
.LBB275_21:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB275_2
# %bb.22:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB275_2
.LBB275_23:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB275_3
# %bb.24:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB275_3
.Lfunc_end275:
	.size	_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i, .Lfunc_end275-_ZN9benchmark8internal9AddPowersIlEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_ # -- Begin function _ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_,@function
_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_: # @_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_
.Lfunc_begin112:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception112
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -8
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB276_10
# %bb.1:                                # %_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc.exit
	move	$s1, $a1
	srli.d	$a0, $s7, 3
	lu12i.w	$a1, -349526
	ori	$a1, $a1, 2731
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, -1366
	mul.d	$a0, $a0, $a1
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	maskeqz	$a3, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a1, $a3, $a1
	add.d	$a0, $a1, $a0
	lu12i.w	$a1, 349525
	ori	$a1, $a1, 1365
	bstrins.d	$a1, $a1, 58, 32
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s6, $a0, $a1
	slli.d	$a0, $s6, 4
	alsl.d	$s3, $s6, $a0, 3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 8
	ld.d	$s4, $s1, 0
	move	$s1, $a0
	add.d	$s8, $a0, $s7
	sub.d	$s2, $a1, $s4
	stx.d	$zero, $a0, $s7
	vrepli.b	$vr0, 0
	vst	$vr0, $s8, 8
	vst	$vr0, $sp, 16                   # 16-byte Folded Spill
	beq	$a1, $s4, .LBB276_4
# %bb.2:                                # %_ZNSt15__new_allocatorIlE8allocateEmPKv.exit.i.i.i.i
.Ltmp1152:                              # EH_LABEL
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1153:                              # EH_LABEL
# %bb.3:
	st.d	$a0, $s8, 0
	addi.d	$s3, $s8, 8
	st.d	$a0, $s8, 8
	add.d	$s7, $a0, $s2
	st.d	$s7, $s8, 16
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	st.d	$s7, $s3, 0
	move	$s2, $s1
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	bne	$s0, $s5, .LBB276_5
	b	.LBB276_7
.LBB276_4:                              # %.noexc
	move	$s7, $zero
	addi.d	$s3, $s8, 8
	vst	$vr0, $s8, 0
	st.d	$s2, $s8, 16
	st.d	$s7, $s3, 0
	move	$s2, $s1
	vld	$vr1, $sp, 16                   # 16-byte Folded Reload
	beq	$s0, $s5, .LBB276_7
.LBB276_5:                              # %.lr.ph.i.i.i.preheader
	move	$s2, $s1
	move	$a0, $s0
	.p2align	4, , 16
.LBB276_6:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a0, 0
	ld.d	$a1, $a0, 16
	vst	$vr0, $s2, 0
	st.d	$a1, $s2, 16
	st.d	$zero, $a0, 16
	vst	$vr1, $a0, 0
	addi.d	$a0, $a0, 24
	addi.d	$s2, $s2, 24
	bne	$a0, $s5, .LBB276_6
.LBB276_7:                              # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit
	beqz	$s0, .LBB276_9
# %bb.8:                                # %_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB276_9:                              # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 24
	st.d	$s1, $fp, 0
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 24
	mul.d	$a0, $s6, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB276_10:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB276_11:                             # %_ZNSt6vectorIS_IlSaIlEESaIS1_EE12_Guard_allocD2Ev.exit22
.Ltmp1154:                              # EH_LABEL
	move	$fp, $a0
	move	$a0, $s1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end276:
	.size	_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_, .Lfunc_end276-_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorIS_IlSaIlEESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table276:
.Lexception112:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end112-.Lcst_begin112
.Lcst_begin112:
	.uleb128 .Lfunc_begin112-.Lfunc_begin112 # >> Call Site 1 <<
	.uleb128 .Ltmp1152-.Lfunc_begin112      #   Call between .Lfunc_begin112 and .Ltmp1152
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1152-.Lfunc_begin112      # >> Call Site 2 <<
	.uleb128 .Ltmp1153-.Ltmp1152            #   Call between .Ltmp1152 and .Ltmp1153
	.uleb128 .Ltmp1154-.Lfunc_begin112      #     jumps to .Ltmp1154
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1153-.Lfunc_begin112      # >> Call Site 3 <<
	.uleb128 .Lfunc_end276-.Ltmp1153        #   Call between .Ltmp1153 and .Lfunc_end276
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end112:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag
.Lfunc_begin113:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception113
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$s2, $a0, 0
	ld.d	$a0, $a0, 16
	move	$s0, $a2
	move	$s3, $a1
	sub.d	$s1, $a2, $a1
	srai.d	$a1, $s1, 5
	sub.d	$a0, $a0, $s2
	srai.d	$a0, $a0, 5
	bgeu	$a0, $a1, .LBB277_7
# %bb.1:
	srli.d	$a0, $a1, 58
	bnez	$a0, .LBB277_36
# %bb.2:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_.exit
	move	$a0, $fp
	move	$a2, $s3
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 0
	ld.d	$s2, $fp, 8
	move	$s0, $a0
	beq	$a2, $s2, .LBB277_22
# %bb.3:                                # %.lr.ph.i.preheader
	addi.d	$s3, $a2, 16
	b	.LBB277_5
	.p2align	4, , 16
.LBB277_4:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB277_5 Depth=1
	addi.d	$a0, $s3, 16
	addi.d	$s3, $s3, 32
	beq	$a0, $s2, .LBB277_21
.LBB277_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s3, -16
	beq	$s3, $a0, .LBB277_4
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB277_5 Depth=1
	ld.d	$a1, $s3, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB277_4
.LBB277_7:
	ld.d	$s1, $fp, 8
	sub.d	$s5, $s1, $s2
	srai.d	$a0, $s5, 5
	bgeu	$a0, $a1, .LBB277_25
# %bb.8:                                # %_ZSt9__advanceIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEElEvRT_T0_St26random_access_iterator_tag.exit
	add.d	$s4, $s3, $s5
	beq	$s1, $s2, .LBB277_11
	.p2align	4, , 16
.LBB277_9:                              # %.lr.ph.i.i28
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 32
	addi.d	$s5, $s5, -32
	addi.d	$s3, $s3, 32
	bnez	$s5, .LBB277_9
# %bb.10:                               # %_ZSt4copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET0_T_SA_S9_.exit33.loopexit
	ld.d	$s1, $fp, 8
.LBB277_11:                             # %_ZSt4copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET0_T_SA_S9_.exit33
	st.d	$s1, $sp, 32
	st.d	$s1, $sp, 16
	addi.d	$a0, $sp, 32
	st.d	$a0, $sp, 24
	beq	$s4, $s0, .LBB277_33
# %bb.12:                               # %.lr.ph.i.i.i.preheader
	ori	$s3, $zero, 16
	addi.w	$s5, $zero, -1
	b	.LBB277_15
	.p2align	4, , 16
.LBB277_13:                             #   in Loop: Header=BB277_15 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB277_14:                             #   in Loop: Header=BB277_15 Depth=1
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 32
	st.d	$a0, $s1, 8
	addi.d	$s4, $s4, 32
	addi.d	$s1, $a1, 32
	st.d	$s1, $sp, 32
	beq	$s4, $s0, .LBB277_33
.LBB277_15:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s1, 16
	st.d	$a0, $s1, 0
	ld.d	$a1, $s4, 8
	ld.d	$s2, $s4, 0
	st.d	$a1, $sp, 40
	bltu	$a1, $s3, .LBB277_18
# %bb.16:                               # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB277_15 Depth=1
.Ltmp1155:                              # EH_LABEL
	addi.d	$a1, $sp, 40
	move	$a0, $s1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1156:                              # EH_LABEL
# %bb.17:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB277_15 Depth=1
	ld.d	$a1, $sp, 40
	st.d	$a0, $s1, 0
	st.d	$a1, $s1, 16
.LBB277_18:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB277_15 Depth=1
	beq	$a1, $s5, .LBB277_14
# %bb.19:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB277_15 Depth=1
	bnez	$a1, .LBB277_13
# %bb.20:                               #   in Loop: Header=BB277_15 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB277_14
.LBB277_21:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exitthread-pre-split
	ld.d	$a2, $fp, 0
.LBB277_22:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exit
	beqz	$a2, .LBB277_24
# %bb.23:
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB277_24:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit
	st.d	$s0, $fp, 0
	add.d	$a0, $s0, $s1
	st.d	$a0, $fp, 8
	st.d	$a0, $fp, 16
	b	.LBB277_35
.LBB277_25:
	beq	$s3, $s0, .LBB277_28
	.p2align	4, , 16
.LBB277_26:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 32
	addi.d	$s2, $s2, 32
	bne	$s3, $s0, .LBB277_26
# %bb.27:                               # %_ZSt4copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET0_T_SA_S9_.exit.loopexit
	ld.d	$s1, $fp, 8
.LBB277_28:                             # %_ZSt4copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET0_T_SA_S9_.exit
	beq	$s1, $s2, .LBB277_35
# %bb.29:                               # %.lr.ph.i.i25.preheader
	addi.d	$s0, $s2, 16
	b	.LBB277_31
	.p2align	4, , 16
.LBB277_30:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB277_31 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $s1, .LBB277_34
.LBB277_31:                             # %.lr.ph.i.i25
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB277_30
# %bb.32:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB277_31 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB277_30
.LBB277_33:                             # %_ZSt22__uninitialized_copy_aIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_PS5_S5_ET1_T_T0_S9_RSaIT2_E.exit
	st.d	$s1, $fp, 8
	b	.LBB277_35
.LBB277_34:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	st.d	$s2, $fp, 8
.LBB277_35:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_.exit
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB277_36:
	pcalau12i	$a0, %pc_hi20(.L.str.178)
	addi.d	$a0, $a0, %pc_lo12(.L.str.178)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB277_37:
.Ltmp1157:                              # EH_LABEL
	move	$fp, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end277:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag, .Lfunc_end277-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_assign_auxIPKS5_EEvT_SB_St20forward_iterator_tag,comdat
	.p2align	2, 0x0
GCC_except_table277:
.Lexception113:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end113-.Lcst_begin113
.Lcst_begin113:
	.uleb128 .Lfunc_begin113-.Lfunc_begin113 # >> Call Site 1 <<
	.uleb128 .Ltmp1155-.Lfunc_begin113      #   Call between .Lfunc_begin113 and .Ltmp1155
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1155-.Lfunc_begin113      # >> Call Site 2 <<
	.uleb128 .Ltmp1156-.Ltmp1155            #   Call between .Ltmp1155 and .Ltmp1156
	.uleb128 .Ltmp1157-.Lfunc_begin113      #     jumps to .Ltmp1157
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1156-.Lfunc_begin113      # >> Call Site 3 <<
	.uleb128 .Lfunc_end277-.Ltmp1156        #   Call between .Ltmp1156 and .Lfunc_end277
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end113:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_,comdat
	.hidden	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_
.Lfunc_begin114:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception114
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a3
	move	$s1, $a2
	move	$fp, $a1
	beqz	$a1, .LBB278_3
# %bb.1:
	srli.d	$a0, $fp, 58
	bnez	$a0, .LBB278_15
# %bb.2:                                # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i
	slli.d	$a0, $fp, 5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	b	.LBB278_4
.LBB278_3:
	move	$s2, $zero
.LBB278_4:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
	st.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	addi.d	$a0, $sp, 24
	st.d	$a0, $sp, 16
	beq	$s1, $s0, .LBB278_14
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	ori	$s5, $zero, 16
	addi.w	$s6, $zero, -1
	move	$s3, $s2
	b	.LBB278_8
	.p2align	4, , 16
.LBB278_6:                              #   in Loop: Header=BB278_8 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB278_7:                              #   in Loop: Header=BB278_8 Depth=1
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 24
	st.d	$a0, $s3, 8
	addi.d	$s1, $s1, 32
	addi.d	$s3, $a1, 32
	st.d	$s3, $sp, 24
	beq	$s1, $s0, .LBB278_14
.LBB278_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s3, 16
	st.d	$a0, $s3, 0
	ld.d	$a1, $s1, 8
	ld.d	$s4, $s1, 0
	st.d	$a1, $sp, 32
	bltu	$a1, $s5, .LBB278_11
# %bb.9:                                # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB278_8 Depth=1
.Ltmp1158:                              # EH_LABEL
	addi.d	$a1, $sp, 32
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1159:                              # EH_LABEL
# %bb.10:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB278_8 Depth=1
	ld.d	$a1, $sp, 32
	st.d	$a0, $s3, 0
	st.d	$a1, $s3, 16
.LBB278_11:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB278_8 Depth=1
	beq	$a1, $s6, .LBB278_7
# %bb.12:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB278_8 Depth=1
	bnez	$a1, .LBB278_6
# %bb.13:                               #   in Loop: Header=BB278_8 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB278_7
.LBB278_14:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	move	$a0, $s2
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB278_15:
	srli.d	$a0, $fp, 59
	beqz	$a0, .LBB278_17
# %bb.16:
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB278_17:
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB278_18:                             # %.body
.Ltmp1160:                              # EH_LABEL
	move	$s0, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	beqz	$s2, .LBB278_20
# %bb.19:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i8
	slli.d	$a1, $fp, 5
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB278_20:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit9
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end278:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_, .Lfunc_end278-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIPKS5_EEPS5_mT_SC_,comdat
	.p2align	2, 0x0
GCC_except_table278:
.Lexception114:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end114-.Lcst_begin114
.Lcst_begin114:
	.uleb128 .Lfunc_begin114-.Lfunc_begin114 # >> Call Site 1 <<
	.uleb128 .Ltmp1158-.Lfunc_begin114      #   Call between .Lfunc_begin114 and .Ltmp1158
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1158-.Lfunc_begin114      # >> Call Site 2 <<
	.uleb128 .Ltmp1159-.Ltmp1158            #   Call between .Ltmp1158 and .Ltmp1159
	.uleb128 .Ltmp1160-.Lfunc_begin114      #     jumps to .Ltmp1160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1159-.Lfunc_begin114      # >> Call Site 3 <<
	.uleb128 .Lfunc_end278-.Ltmp1159        #   Call between .Ltmp1159 and .Lfunc_end278
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end114:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,comdat
	.hidden	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_
.Lfunc_begin115:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception115
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a3
	move	$s1, $a2
	move	$fp, $a1
	beqz	$a1, .LBB279_3
# %bb.1:
	srli.d	$a0, $fp, 58
	bnez	$a0, .LBB279_15
# %bb.2:                                # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i
	slli.d	$a0, $fp, 5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	b	.LBB279_4
.LBB279_3:
	move	$s2, $zero
.LBB279_4:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
	st.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	addi.d	$a0, $sp, 24
	st.d	$a0, $sp, 16
	bne	$s1, $s0, .LBB279_6
.LBB279_5:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	move	$a0, $s2
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB279_6:                              # %.lr.ph.preheader.i.i.i
	ori	$s5, $zero, 16
	addi.w	$s6, $zero, -1
	move	$s3, $s2
	b	.LBB279_9
	.p2align	4, , 16
.LBB279_7:                              #   in Loop: Header=BB279_9 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB279_8:                              #   in Loop: Header=BB279_9 Depth=1
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 24
	st.d	$a0, $s3, 8
	addi.d	$s1, $s1, 32
	addi.d	$s3, $a1, 32
	st.d	$s3, $sp, 24
	beq	$s1, $s0, .LBB279_5
.LBB279_9:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s3, 16
	st.d	$a0, $s3, 0
	ld.d	$a1, $s1, 8
	ld.d	$s4, $s1, 0
	st.d	$a1, $sp, 32
	bltu	$a1, $s5, .LBB279_12
# %bb.10:                               # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB279_9 Depth=1
.Ltmp1161:                              # EH_LABEL
	addi.d	$a1, $sp, 32
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1162:                              # EH_LABEL
# %bb.11:                               # %.noexc.i.i.i
                                        #   in Loop: Header=BB279_9 Depth=1
	ld.d	$a1, $sp, 32
	st.d	$a0, $s3, 0
	st.d	$a1, $s3, 16
.LBB279_12:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB279_9 Depth=1
	beq	$a1, $s6, .LBB279_8
# %bb.13:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB279_9 Depth=1
	bnez	$a1, .LBB279_7
# %bb.14:                               #   in Loop: Header=BB279_9 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB279_8
.LBB279_15:
	srli.d	$a0, $fp, 59
	beqz	$a0, .LBB279_17
# %bb.16:
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB279_17:
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB279_18:                             # %.body
.Ltmp1163:                              # EH_LABEL
	move	$s0, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	beqz	$s2, .LBB279_20
# %bb.19:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i9
	slli.d	$a1, $fp, 5
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB279_20:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit10
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end279:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_, .Lfunc_end279-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEEEPS5_mT_SF_,comdat
	.p2align	2, 0x0
GCC_except_table279:
.Lexception115:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end115-.Lcst_begin115
.Lcst_begin115:
	.uleb128 .Lfunc_begin115-.Lfunc_begin115 # >> Call Site 1 <<
	.uleb128 .Ltmp1161-.Lfunc_begin115      #   Call between .Lfunc_begin115 and .Ltmp1161
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1161-.Lfunc_begin115      # >> Call Site 2 <<
	.uleb128 .Ltmp1162-.Ltmp1161            #   Call between .Ltmp1161 and .Ltmp1162
	.uleb128 .Ltmp1163-.Lfunc_begin115      #     jumps to .Ltmp1163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1162-.Lfunc_begin115      # >> Call Site 3 <<
	.uleb128 .Lfunc_end279-.Ltmp1162        #   Call between .Ltmp1162 and .Lfunc_end279
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end115:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_,"axG",@progbits,_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_,comdat
	.hidden	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_ # -- Begin function _ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_
	.weak	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_,@function
_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_: # @_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_
.Lfunc_begin116:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception116
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s7, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s8, $s7, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s8, $a0, .LBB280_18
# %bb.1:                                # %_ZNKSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE12_M_check_lenEmPKc.exit
	move	$s5, $a3
	move	$s6, $a2
	move	$s3, $a1
	srli.d	$a0, $s8, 4
	lu12i.w	$a1, -349526
	ori	$a2, $a1, 2731
	lu32i.d	$a2, -349526
	lu52i.d	$a2, $a2, -1366
	mul.d	$a0, $a0, $a2
	ori	$a2, $zero, 1
	sltu	$a3, $a2, $a0
	maskeqz	$a4, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a2, $a4, $a2
	add.d	$a0, $a2, $a0
	ori	$a1, $a1, 2730
	lu32i.d	$a1, -349526
	lu52i.d	$a1, $a1, 42
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a1, $a0, $a1
	slli.d	$a0, $a1, 5
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	alsl.d	$s4, $a1, $a0, 4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	add.d	$s2, $a0, $s8
	ld.d	$s6, $s6, 0
	ld.w	$s5, $s5, 0
	addi.d	$a0, $s2, 16
	ld.d	$a1, $s3, 8
	ld.d	$s3, $s3, 0
	stx.d	$a0, $s1, $s8
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 16
	bltu	$a1, $a2, .LBB280_4
# %bb.2:                                # %.noexc.i.i
.Ltmp1164:                              # EH_LABEL
	addi.d	$a1, $sp, 16
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1165:                              # EH_LABEL
# %bb.3:                                # %.noexc
	ld.d	$a1, $sp, 16
	st.d	$a0, $s2, 0
	st.d	$a1, $s2, 16
.LBB280_4:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB280_8
# %bb.5:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB280_7
# %bb.6:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB280_8
.LBB280_7:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB280_8:
	ld.d	$a0, $sp, 16
	st.d	$a0, $s2, 8
	st.d	$s6, $s2, 32
	st.w	$s5, $s2, 40
	move	$s2, $s1
	beq	$s0, $s7, .LBB280_15
# %bb.9:                                # %.lr.ph.i.i.i.preheader
	move	$s3, $zero
	b	.LBB280_12
	.p2align	4, , 16
.LBB280_10:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB280_12 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$s6, $s5, 8
	st.d	$a1, $s4, 0
	st.d	$a0, $s4, 16
.LBB280_11:                             # %_ZSt19__relocate_object_aIN9benchmark8internal10StatisticsES2_SaIS2_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB280_12 Depth=1
	st.d	$s6, $s4, 8
	ld.w	$a0, $s5, 40
	stx.d	$s2, $s0, $s3
	st.d	$zero, $s5, 8
	st.b	$zero, $s2, 0
	st.w	$a0, $s4, 40
	ld.d	$a0, $s5, 32
	addi.d	$s3, $s3, 48
	add.d	$a1, $s0, $s3
	st.d	$a0, $s4, 32
	beq	$a1, $s7, .LBB280_14
.LBB280_12:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s4, $s1, $s3
	ldx.d	$a1, $s0, $s3
	add.d	$s5, $s0, $s3
	addi.d	$a0, $s4, 16
	addi.d	$s2, $s5, 16
	stx.d	$a0, $s1, $s3
	bne	$s2, $a1, .LBB280_10
# %bb.13:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB280_12 Depth=1
	ld.d	$s6, $s5, 8
	addi.d	$a2, $s6, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB280_11
.LBB280_14:                             # %_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.loopexit
	add.d	$s2, $s1, $s3
.LBB280_15:                             # %_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit
	beqz	$s0, .LBB280_17
# %bb.16:                               # %_ZNSt12_Vector_baseIN9benchmark8internal10StatisticsESaIS2_EE13_M_deallocateEPS2_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB280_17:                             # %_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s2, 48
	st.d	$s1, $fp, 0
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 48
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	mul.d	$a0, $a1, $a0
	add.d	$a0, $s1, $a0
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB280_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB280_19:                             # %_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE12_Guard_allocD2Ev.exit24
.Ltmp1166:                              # EH_LABEL
	move	$fp, $a0
	move	$a0, $s1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end280:
	.size	_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_, .Lfunc_end280-_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_,"aG",@progbits,_ZNSt6vectorIN9benchmark8internal10StatisticsESaIS2_EE17_M_realloc_appendIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPFdRKS_IdSaIdEEERNS0_13StatisticUnitEEEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table280:
.Lexception116:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end116-.Lcst_begin116
.Lcst_begin116:
	.uleb128 .Lfunc_begin116-.Lfunc_begin116 # >> Call Site 1 <<
	.uleb128 .Ltmp1164-.Lfunc_begin116      #   Call between .Lfunc_begin116 and .Ltmp1164
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1164-.Lfunc_begin116      # >> Call Site 2 <<
	.uleb128 .Ltmp1165-.Ltmp1164            #   Call between .Ltmp1164 and .Ltmp1165
	.uleb128 .Ltmp1166-.Lfunc_begin116      #     jumps to .Ltmp1166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1165-.Lfunc_begin116      # >> Call Site 3 <<
	.uleb128 .Lfunc_end280-.Ltmp1165        #   Call between .Ltmp1165 and .Lfunc_end280
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end116:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i,"axG",@progbits,_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i,comdat
	.hidden	_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i # -- Begin function _ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.weak	_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.p2align	5
	.type	_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i,@function
_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i: # @_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	pcalau12i	$s0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a0
	dbar	20
	beqz	$a4, .LBB281_15
.LBB281_1:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB281_17
.LBB281_2:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit13
	ld.b	$a0, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB281_19
.LBB281_3:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit15
	ld.b	$a0, $s0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB281_21
.LBB281_4:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit17
	sub.w	$a4, $zero, $a1
	sub.w	$a1, $zero, $a2
	move	$a0, $fp
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	beq	$a0, $a1, .LBB281_10
# %bb.5:                                # %.lr.ph.i.preheader
	sub.d	$a2, $a1, $a0
	addi.d	$a3, $a2, -4
	ori	$a4, $zero, 28
	move	$a2, $a0
	bltu	$a3, $a4, .LBB281_9
# %bb.6:                                # %vector.ph
	srli.d	$a2, $a3, 2
	addi.d	$a3, $a2, 1
	bstrpick.d	$a2, $a3, 62, 3
	slli.d	$a4, $a2, 3
	slli.d	$a2, $a2, 5
	add.d	$a2, $a0, $a2
	addi.d	$a5, $a0, 16
	move	$a6, $a4
	.p2align	4, , 16
.LBB281_7:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr0, $a5, -16
	vld	$vr1, $a5, 0
	vneg.w	$vr0, $vr0
	vneg.w	$vr1, $vr1
	vst	$vr0, $a5, -16
	vst	$vr1, $a5, 0
	addi.d	$a6, $a6, -8
	addi.d	$a5, $a5, 32
	bnez	$a6, .LBB281_7
# %bb.8:                                # %middle.block
	beq	$a3, $a4, .LBB281_10
	.p2align	4, , 16
.LBB281_9:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a3, $a2, 0
	sub.d	$a3, $zero, $a3
	st.w	$a3, $a2, 0
	addi.d	$a2, $a2, 4
	bne	$a2, $a1, .LBB281_9
.LBB281_10:                             # %_ZSt8for_eachIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEZN9benchmark8internal16AddNegatedPowersIiEEvPS3_IT_SaISA_EESA_SA_iEUlRiE_ET0_SA_SA_SG_.exit
	beq	$a0, $a1, .LBB281_14
# %bb.11:                               # %_ZSt8for_eachIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEZN9benchmark8internal16AddNegatedPowersIiEEvPS3_IT_SaISA_EESA_SA_iEUlRiE_ET0_SA_SA_SG_.exit
	addi.d	$a1, $a1, -4
	bgeu	$a0, $a1, .LBB281_14
# %bb.12:                               # %.lr.ph.i.i.preheader
	addi.d	$a0, $a0, 4
	.p2align	4, , 16
.LBB281_13:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a2, $a0
	ld.w	$a0, $a1, 0
	ld.w	$a3, $a2, -4
	st.w	$a0, $a2, -4
	st.w	$a3, $a1, 0
	addi.d	$a1, $a1, -4
	addi.d	$a0, $a2, 4
	bltu	$a2, $a1, .LBB281_13
.LBB281_14:                             # %_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_.exit
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB281_15:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s2, $a3
	move	$s3, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB281_1
# %bb.16:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	b	.LBB281_1
.LBB281_17:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s2, $a3
	move	$s3, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB281_2
# %bb.18:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	b	.LBB281_2
.LBB281_19:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s2, $a3
	move	$s3, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB281_3
# %bb.20:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	move	$a2, $s3
	move	$a3, $s2
	b	.LBB281_3
.LBB281_21:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$s1, $a3
	move	$s2, $a2
	move	$s0, $a1
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $s2
	move	$a3, $s1
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB281_4
# %bb.22:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	move	$a2, $s2
	move	$a3, $s1
	b	.LBB281_4
.Lfunc_end281:
	.size	_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i, .Lfunc_end281-_ZN9benchmark8internal16AddNegatedPowersIiEEvPSt6vectorIT_SaIS3_EES3_S3_i
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i,"axG",@progbits,_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i,comdat
	.hidden	_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i # -- Begin function _ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.weak	_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.p2align	5
	.type	_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i,@function
_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i: # @_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	pcalau12i	$s3, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	ld.b	$a4, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	move	$fp, $a3
	move	$s0, $a2
	move	$s2, $a1
	move	$s1, $a0
	dbar	20
	beqz	$a4, .LBB282_19
.LBB282_1:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB282_21
.LBB282_2:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit10
	ld.b	$a0, $s3, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	dbar	20
	beqz	$a0, .LBB282_23
.LBB282_3:                              # %_ZN9benchmark8internal18GetNullLogInstanceEv.exit12
	ld.d	$s3, $s1, 0
	ld.d	$a1, $s1, 8
	move	$a0, $s3
	blez	$s0, .LBB282_17
# %bb.4:                                # %.lr.ph
	lu12i.w	$a0, 524287
	ori	$a0, $a0, 4095
	div.w	$s7, $a0, $fp
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 511
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	move	$a0, $a1
	ori	$s6, $zero, 1
	.p2align	4, , 16
.LBB282_5:                              # =>This Inner Loop Header: Depth=1
	bge	$s6, $s2, .LBB282_7
# %bb.6:                                #   in Loop: Header=BB282_5 Depth=1
	move	$s4, $s3
	bge	$s7, $s6, .LBB282_15
	b	.LBB282_16
	.p2align	4, , 16
.LBB282_7:                              #   in Loop: Header=BB282_5 Depth=1
	ld.d	$a1, $s1, 16
	beq	$a0, $a1, .LBB282_9
# %bb.8:                                #   in Loop: Header=BB282_5 Depth=1
	st.w	$s6, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $s1, 8
	move	$s4, $s3
	bge	$s7, $s6, .LBB282_15
	b	.LBB282_16
.LBB282_9:                              #   in Loop: Header=BB282_5 Depth=1
	sub.d	$s5, $a0, $s3
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	beq	$s5, $a0, .LBB282_18
# %bb.10:                               # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
                                        #   in Loop: Header=BB282_5 Depth=1
	srai.d	$a0, $s5, 2
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	sltu	$a1, $a0, $a2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$s8, $a0, $a1
	slli.d	$a0, $s8, 2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	stx.w	$s6, $a0, $s5
	blez	$s5, .LBB282_12
# %bb.11:                               #   in Loop: Header=BB282_5 Depth=1
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB282_12:                             # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i
                                        #   in Loop: Header=BB282_5 Depth=1
	beqz	$s3, .LBB282_14
# %bb.13:                               # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i
                                        #   in Loop: Header=BB282_5 Depth=1
	move	$a0, $s3
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB282_14:                             # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i
                                        #   in Loop: Header=BB282_5 Depth=1
	add.d	$a0, $s4, $s5
	addi.d	$a0, $a0, 4
	st.d	$s4, $s1, 0
	st.d	$a0, $s1, 8
	alsl.d	$a1, $s8, $s4, 2
	st.d	$a1, $s1, 16
	blt	$s7, $s6, .LBB282_16
	.p2align	4, , 16
.LBB282_15:                             # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit
                                        #   in Loop: Header=BB282_5 Depth=1
	mul.w	$s6, $s6, $fp
	move	$s3, $s4
	bge	$s0, $s6, .LBB282_5
.LBB282_16:                             # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit._crit_edge.loopexit
	ld.d	$a0, $s1, 0
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
.LBB282_17:                             # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit._crit_edge
	sub.d	$a1, $a1, $s3
	slli.d	$a1, $a1, 30
	srai.d	$a1, $a1, 30
	add.d	$a0, $a0, $a1
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB282_18:
	pcalau12i	$a0, %pc_hi20(.L.str.23)
	addi.d	$a0, $a0, %pc_lo12(.L.str.23)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB282_19:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB282_1
# %bb.20:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB282_1
.LBB282_21:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB282_2
# %bb.22:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB282_2
.LBB282_23:
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_acquire)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	beqz	$a0, .LBB282_3
# %bb.24:
	pcalau12i	$a0, %pc_hi20(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	st.d	$zero, $a0, %pc_lo12(_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcalau12i	$a0, %pc_hi20(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	addi.d	$a0, $a0, %pc_lo12(_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log)
	pcaddu18i	$ra, %call36(__cxa_guard_release)
	jirl	$ra, $ra, 0
	b	.LBB282_3
.Lfunc_end282:
	.size	_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i, .Lfunc_end282-_ZN9benchmark8internal9AddPowersIiEENSt6vectorIT_SaIS3_EE8iteratorEPS5_S3_S3_i
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	5                               # -- Begin function _GLOBAL__sub_I_benchmark_register.cc
	.type	_GLOBAL__sub_I_benchmark_register.cc,@function
_GLOBAL__sub_I_benchmark_register.cc:   # @_GLOBAL__sub_I_benchmark_register.cc
	.cfi_startproc
# %bb.0:
	pcaddu18i	$t8, %call36(_ZN9benchmark8internal17InitializeStreamsEv)
	jr	$t8
.Lfunc_end283:
	.size	_GLOBAL__sub_I_benchmark_register.cc, .Lfunc_end283-_GLOBAL__sub_I_benchmark_register.cc
	.cfi_endproc
                                        # -- End function
	.type	_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance,@object # @_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance
	.local	_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance
	.comm	_ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance,64,8
	.type	_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance,@object # @_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance
	.local	_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance
	.comm	_ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance,8,8
	.hidden	__dso_handle
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.space	1
	.size	.L.str, 1

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"Could not compile benchmark re: "
	.size	.L.str.1, 33

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"The number of inputs is very large. "
	.size	.L.str.2, 37

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	" will be repeated at least "
	.size	.L.str.3, 28

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	" times.\n"
	.size	.L.str.4, 9

	.type	_ZN9benchmark12_GLOBAL__N_115kDisabledPrefixE,@object # @_ZN9benchmark12_GLOBAL__N_115kDisabledPrefixE
	.section	.rodata,"a",@progbits
_ZN9benchmark12_GLOBAL__N_115kDisabledPrefixE:
	.asciz	"DISABLED_"
	.size	_ZN9benchmark12_GLOBAL__N_115kDisabledPrefixE, 10

	.hidden	_ZTVN9benchmark8internal9BenchmarkE # @_ZTVN9benchmark8internal9BenchmarkE
	.type	_ZTVN9benchmark8internal9BenchmarkE,@object
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN9benchmark8internal9BenchmarkE
	.p2align	3, 0x0
_ZTVN9benchmark8internal9BenchmarkE:
	.dword	0
	.dword	_ZTIN9benchmark8internal9BenchmarkE
	.dword	_ZN9benchmark8internal9BenchmarkD2Ev
	.dword	_ZN9benchmark8internal9BenchmarkD0Ev
	.dword	__cxa_pure_virtual
	.size	_ZTVN9benchmark8internal9BenchmarkE, 40

	.type	.L.str.7,@object                # @.str.7
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.7:
	.asciz	"median"
	.size	.L.str.7, 7

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"stddev"
	.size	.L.str.8, 7

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"Cannot set UseRealTime and UseManualTime simultaneously."
	.size	.L.str.10, 57

	.hidden	_ZTVN9benchmark8internal17FunctionBenchmarkE # @_ZTVN9benchmark8internal17FunctionBenchmarkE
	.type	_ZTVN9benchmark8internal17FunctionBenchmarkE,@object
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN9benchmark8internal17FunctionBenchmarkE
	.p2align	3, 0x0
_ZTVN9benchmark8internal17FunctionBenchmarkE:
	.dword	0
	.dword	_ZTIN9benchmark8internal17FunctionBenchmarkE
	.dword	_ZN9benchmark8internal9BenchmarkD2Ev
	.dword	_ZN9benchmark8internal17FunctionBenchmarkD0Ev
	.dword	_ZN9benchmark8internal17FunctionBenchmark3RunERNS_5StateE
	.size	_ZTVN9benchmark8internal17FunctionBenchmarkE, 40

	.hidden	_ZTIN9benchmark8internal17FunctionBenchmarkE # @_ZTIN9benchmark8internal17FunctionBenchmarkE
	.type	_ZTIN9benchmark8internal17FunctionBenchmarkE,@object
	.globl	_ZTIN9benchmark8internal17FunctionBenchmarkE
	.p2align	3, 0x0
_ZTIN9benchmark8internal17FunctionBenchmarkE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN9benchmark8internal17FunctionBenchmarkE
	.dword	_ZTIN9benchmark8internal9BenchmarkE
	.size	_ZTIN9benchmark8internal17FunctionBenchmarkE, 24

	.hidden	_ZTSN9benchmark8internal17FunctionBenchmarkE # @_ZTSN9benchmark8internal17FunctionBenchmarkE
	.type	_ZTSN9benchmark8internal17FunctionBenchmarkE,@object
	.section	.rodata,"a",@progbits
	.globl	_ZTSN9benchmark8internal17FunctionBenchmarkE
_ZTSN9benchmark8internal17FunctionBenchmarkE:
	.asciz	"N9benchmark8internal17FunctionBenchmarkE"
	.size	_ZTSN9benchmark8internal17FunctionBenchmarkE, 41

	.hidden	_ZTIN9benchmark8internal9BenchmarkE # @_ZTIN9benchmark8internal9BenchmarkE
	.type	_ZTIN9benchmark8internal9BenchmarkE,@object
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN9benchmark8internal9BenchmarkE
	.p2align	3, 0x0
_ZTIN9benchmark8internal9BenchmarkE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSN9benchmark8internal9BenchmarkE
	.size	_ZTIN9benchmark8internal9BenchmarkE, 16

	.hidden	_ZTSN9benchmark8internal9BenchmarkE # @_ZTSN9benchmark8internal9BenchmarkE
	.type	_ZTSN9benchmark8internal9BenchmarkE,@object
	.section	.rodata,"a",@progbits
	.globl	_ZTSN9benchmark8internal9BenchmarkE
_ZTSN9benchmark8internal9BenchmarkE:
	.asciz	"N9benchmark8internal9BenchmarkE"
	.size	_ZTSN9benchmark8internal9BenchmarkE, 32

	.hidden	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log # @_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.type	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log,@object
	.section	.bss._ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log,"awG",@nobits,_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log,comdat
	.weak	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.p2align	3, 0x0
_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log:
	.space	8
	.size	_ZZN9benchmark8internal18GetNullLogInstanceEvE8null_log, 8

	.hidden	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log # @_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.type	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log,@object
	.section	.bss._ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log,"awG",@nobits,_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log,comdat
	.weak	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.p2align	3, 0x0
_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log:
	.dword	0                               # 0x0
	.size	_ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log, 8

	.type	.L.str.11,@object               # @.str.11
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.11:
	.asciz	"conflicting grammar options"
	.size	.L.str.11, 28

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"^$\\.*+?()[]{}|"
	.size	.L.str.12, 15

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	".[\\*^$"
	.size	.L.str.13, 7

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	".[\\()*+?{|^$"
	.size	.L.str.14, 13

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	".[\\*^$\n"
	.size	.L.str.15, 8

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	".[\\()*+?{|^$\n"
	.size	.L.str.16, 14

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"invalid '\\cX' control character in regular expression"
	.size	.L.str.17, 54

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"Invalid '\\xNN' control character in regular expression"
	.size	.L.str.18, 55

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"Invalid '\\uNNNN' control character in regular expression"
	.size	.L.str.19, 57

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"Invalid escape at end of regular expression"
	.size	.L.str.20, 44

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"Invalid '(?...)' zero-width assertion in regular expression"
	.size	.L.str.21, 60

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	"Incomplete '[[' character class in regular expression"
	.size	.L.str.22, 54

	.type	_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.dword	0
	.dword	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.dword	_ZNSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE, 113

	.type	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.dword	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 52

	.type	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 16

	.type	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 47

	.type	_ZTSSt19_Sp_make_shared_tag,@object # @_ZTSSt19_Sp_make_shared_tag
	.section	.rodata._ZTSSt19_Sp_make_shared_tag,"aG",@progbits,_ZTSSt19_Sp_make_shared_tag,comdat
	.weak	_ZTSSt19_Sp_make_shared_tag
_ZTSSt19_Sp_make_shared_tag:
	.asciz	"St19_Sp_make_shared_tag"
	.size	_ZTSSt19_Sp_make_shared_tag, 24

	.type	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,@object # @_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.section	.rodata._ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,"aG",@progbits,_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,comdat
	.weak	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.p2align	3, 0x0
_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag:
	.space	16
	.size	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag, 16

	.type	.L.str.23,@object               # @.str.23
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.23:
	.asciz	"vector::_M_realloc_append"
	.size	.L.str.23, 26

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"Number of NFA states exceeds limit. Please use shorter regex string, or use smaller brace expression, or make _GLIBCXX_REGEX_STATE_LIMIT larger."
	.size	.L.str.24, 145

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE, 70

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE, 70

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE, 70

	.type	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,@object # @_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.section	.bss._ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,"awG",@nobits,_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,comdat
	.weak	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul:
	.byte	0                               # 0x0
	.size	_ZZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul, 1

	.type	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,@object # @_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.section	.bss._ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,"awG",@nobits,_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul,comdat
	.weak	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.p2align	3, 0x0
_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul:
	.dword	0                               # 0x0
	.size	_ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul, 8

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE, 70

	.type	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,@object # @_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.size	_ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,@object # @_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE:
	.asciz	"NSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE"
	.size	_ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE, 70

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 67

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 67

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 67

	.type	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.size	_ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.asciz	"NSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE"
	.size	_ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 67

	.type	.L.str.25,@object               # @.str.25
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.25:
	.asciz	"Unexpected back-reference in polynomial mode."
	.size	.L.str.25, 46

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"Back-reference index exceeds current sub-expression count."
	.size	.L.str.26, 59

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"Back-reference referred to an opened sub-expression."
	.size	.L.str.27, 53

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"invalid back reference"
	.size	.L.str.28, 23

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"Invalid character class."
	.size	.L.str.30, 25

	.type	_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11,@object # @_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11
	.section	.data.rel.ro._ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11,"awG",@progbits,_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11,comdat
	.weak	_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11
	.p2align	3, 0x0
_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11:
	.dword	.L.str.31
	.half	2048                            # 0x800
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.32
	.half	3072                            # 0xc00
	.byte	1                               # 0x1
	.space	1
	.space	4
	.dword	.L.str.33
	.half	8192                            # 0x2000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.34
	.half	3072                            # 0xc00
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.35
	.half	1024                            # 0x400
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.36
	.half	1                               # 0x1
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.37
	.half	2                               # 0x2
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.38
	.half	2048                            # 0x800
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.39
	.half	3076                            # 0xc04
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.40
	.half	512                             # 0x200
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.41
	.half	16384                           # 0x4000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.42
	.half	4                               # 0x4
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.43
	.half	8192                            # 0x2000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.44
	.half	256                             # 0x100
	.byte	0                               # 0x0
	.space	1
	.space	4
	.dword	.L.str.45
	.half	4096                            # 0x1000
	.byte	0                               # 0x0
	.space	1
	.space	4
	.size	_ZZNKSt7__cxx1112regex_traitsIcE16lookup_classnameIPKcEENS1_10_RegexMaskET_S6_bE12__classnamesB5cxx11, 240

	.type	.L.str.31,@object               # @.str.31
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.31:
	.asciz	"d"
	.size	.L.str.31, 2

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"w"
	.size	.L.str.32, 2

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"s"
	.size	.L.str.33, 2

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"alnum"
	.size	.L.str.34, 6

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"alpha"
	.size	.L.str.35, 6

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"blank"
	.size	.L.str.36, 6

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"cntrl"
	.size	.L.str.37, 6

	.type	.L.str.38,@object               # @.str.38
.L.str.38:
	.asciz	"digit"
	.size	.L.str.38, 6

	.type	.L.str.39,@object               # @.str.39
.L.str.39:
	.asciz	"graph"
	.size	.L.str.39, 6

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	"lower"
	.size	.L.str.40, 6

	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"print"
	.size	.L.str.41, 6

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"punct"
	.size	.L.str.42, 6

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"space"
	.size	.L.str.43, 6

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"upper"
	.size	.L.str.44, 6

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"xdigit"
	.size	.L.str.45, 7

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE, 70

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE, 70

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE, 70

	.type	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.data.rel.ro._ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"awG",@progbits,_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.p2align	3, 0x0
_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.size	_ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 16

	.type	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,@object # @_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.section	.rodata._ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,"aG",@progbits,_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE,comdat
	.weak	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE:
	.asciz	"NSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE"
	.size	_ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE, 70

	.type	.L.str.46,@object               # @.str.46
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.46:
	.asciz	"Invalid start of '[x-x]' range in regular expression"
	.size	.L.str.46, 53

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"Invalid end of '[x-x]' range in regular expression"
	.size	.L.str.47, 51

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"Invalid location of '-' within '[...]' in POSIX regular expression"
	.size	.L.str.48, 67

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"Unexpected character within '[...]' in regular expression"
	.size	.L.str.49, 58

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"Invalid collate element."
	.size	.L.str.50, 25

	.type	_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames,@object # @_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames
	.section	.data._ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames,"awG",@progbits,_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames,comdat
	.weak	_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames
	.p2align	3, 0x0
_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames:
	.dword	.L.str.51
	.dword	.L.str.52
	.dword	.L.str.53
	.dword	.L.str.54
	.dword	.L.str.55
	.dword	.L.str.56
	.dword	.L.str.57
	.dword	.L.str.58
	.dword	.L.str.59
	.dword	.L.str.60
	.dword	.L.str.61
	.dword	.L.str.62
	.dword	.L.str.63
	.dword	.L.str.64
	.dword	.L.str.65
	.dword	.L.str.66
	.dword	.L.str.67
	.dword	.L.str.68
	.dword	.L.str.69
	.dword	.L.str.70
	.dword	.L.str.71
	.dword	.L.str.72
	.dword	.L.str.73
	.dword	.L.str.74
	.dword	.L.str.75
	.dword	.L.str.76
	.dword	.L.str.77
	.dword	.L.str.78
	.dword	.L.str.79
	.dword	.L.str.80
	.dword	.L.str.81
	.dword	.L.str.82
	.dword	.L.str.43
	.dword	.L.str.83
	.dword	.L.str.84
	.dword	.L.str.85
	.dword	.L.str.86
	.dword	.L.str.87
	.dword	.L.str.88
	.dword	.L.str.89
	.dword	.L.str.90
	.dword	.L.str.91
	.dword	.L.str.92
	.dword	.L.str.93
	.dword	.L.str.94
	.dword	.L.str.95
	.dword	.L.str.96
	.dword	.L.str.97
	.dword	.L.str.98
	.dword	.L.str.99
	.dword	.L.str.100
	.dword	.L.str.101
	.dword	.L.str.102
	.dword	.L.str.103
	.dword	.L.str.104
	.dword	.L.str.105
	.dword	.L.str.106
	.dword	.L.str.107
	.dword	.L.str.108
	.dword	.L.str.109
	.dword	.L.str.110
	.dword	.L.str.111
	.dword	.L.str.112
	.dword	.L.str.113
	.dword	.L.str.114
	.dword	.L.str.115
	.dword	.L.str.116
	.dword	.L.str.117
	.dword	.L.str.118
	.dword	.L.str.119
	.dword	.L.str.120
	.dword	.L.str.121
	.dword	.L.str.122
	.dword	.L.str.123
	.dword	.L.str.124
	.dword	.L.str.125
	.dword	.L.str.126
	.dword	.L.str.127
	.dword	.L.str.128
	.dword	.L.str.129
	.dword	.L.str.130
	.dword	.L.str.131
	.dword	.L.str.132
	.dword	.L.str.133
	.dword	.L.str.134
	.dword	.L.str.135
	.dword	.L.str.136
	.dword	.L.str.137
	.dword	.L.str.138
	.dword	.L.str.139
	.dword	.L.str.140
	.dword	.L.str.141
	.dword	.L.str.142
	.dword	.L.str.143
	.dword	.L.str.144
	.dword	.L.str.145
	.dword	.L.str.146
	.dword	.L.str.147
	.dword	.L.str.148
	.dword	.L.str.149
	.dword	.L.str.31
	.dword	.L.str.150
	.dword	.L.str.151
	.dword	.L.str.152
	.dword	.L.str.153
	.dword	.L.str.154
	.dword	.L.str.155
	.dword	.L.str.156
	.dword	.L.str.157
	.dword	.L.str.158
	.dword	.L.str.159
	.dword	.L.str.160
	.dword	.L.str.161
	.dword	.L.str.162
	.dword	.L.str.163
	.dword	.L.str.33
	.dword	.L.str.164
	.dword	.L.str.165
	.dword	.L.str.166
	.dword	.L.str.32
	.dword	.L.str.167
	.dword	.L.str.168
	.dword	.L.str.169
	.dword	.L.str.170
	.dword	.L.str.171
	.dword	.L.str.172
	.dword	.L.str.173
	.dword	.L.str.174
	.size	_ZZNKSt7__cxx1112regex_traitsIcE18lookup_collatenameIPKcEENS_12basic_stringIcSt11char_traitsIcESaIcEEET_SA_E14__collatenames, 1024

	.type	.L.str.51,@object               # @.str.51
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.51:
	.asciz	"NUL"
	.size	.L.str.51, 4

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"SOH"
	.size	.L.str.52, 4

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"STX"
	.size	.L.str.53, 4

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"ETX"
	.size	.L.str.54, 4

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"EOT"
	.size	.L.str.55, 4

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"ENQ"
	.size	.L.str.56, 4

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"ACK"
	.size	.L.str.57, 4

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"alert"
	.size	.L.str.58, 6

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"backspace"
	.size	.L.str.59, 10

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"tab"
	.size	.L.str.60, 4

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"newline"
	.size	.L.str.61, 8

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"vertical-tab"
	.size	.L.str.62, 13

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"form-feed"
	.size	.L.str.63, 10

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"carriage-return"
	.size	.L.str.64, 16

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"SO"
	.size	.L.str.65, 3

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"SI"
	.size	.L.str.66, 3

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"DLE"
	.size	.L.str.67, 4

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"DC1"
	.size	.L.str.68, 4

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"DC2"
	.size	.L.str.69, 4

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	"DC3"
	.size	.L.str.70, 4

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"DC4"
	.size	.L.str.71, 4

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"NAK"
	.size	.L.str.72, 4

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"SYN"
	.size	.L.str.73, 4

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"ETB"
	.size	.L.str.74, 4

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"CAN"
	.size	.L.str.75, 4

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"EM"
	.size	.L.str.76, 3

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"SUB"
	.size	.L.str.77, 4

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"ESC"
	.size	.L.str.78, 4

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"IS4"
	.size	.L.str.79, 4

	.type	.L.str.80,@object               # @.str.80
.L.str.80:
	.asciz	"IS3"
	.size	.L.str.80, 4

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"IS2"
	.size	.L.str.81, 4

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"IS1"
	.size	.L.str.82, 4

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"exclamation-mark"
	.size	.L.str.83, 17

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"quotation-mark"
	.size	.L.str.84, 15

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"number-sign"
	.size	.L.str.85, 12

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"dollar-sign"
	.size	.L.str.86, 12

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"percent-sign"
	.size	.L.str.87, 13

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	"ampersand"
	.size	.L.str.88, 10

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"apostrophe"
	.size	.L.str.89, 11

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"left-parenthesis"
	.size	.L.str.90, 17

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"right-parenthesis"
	.size	.L.str.91, 18

	.type	.L.str.92,@object               # @.str.92
.L.str.92:
	.asciz	"asterisk"
	.size	.L.str.92, 9

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	"plus-sign"
	.size	.L.str.93, 10

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"comma"
	.size	.L.str.94, 6

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"hyphen"
	.size	.L.str.95, 7

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"period"
	.size	.L.str.96, 7

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	"slash"
	.size	.L.str.97, 6

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"zero"
	.size	.L.str.98, 5

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	"one"
	.size	.L.str.99, 4

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	"two"
	.size	.L.str.100, 4

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	"three"
	.size	.L.str.101, 6

	.type	.L.str.102,@object              # @.str.102
.L.str.102:
	.asciz	"four"
	.size	.L.str.102, 5

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"five"
	.size	.L.str.103, 5

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	"six"
	.size	.L.str.104, 4

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	"seven"
	.size	.L.str.105, 6

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	"eight"
	.size	.L.str.106, 6

	.type	.L.str.107,@object              # @.str.107
.L.str.107:
	.asciz	"nine"
	.size	.L.str.107, 5

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"colon"
	.size	.L.str.108, 6

	.type	.L.str.109,@object              # @.str.109
.L.str.109:
	.asciz	"semicolon"
	.size	.L.str.109, 10

	.type	.L.str.110,@object              # @.str.110
.L.str.110:
	.asciz	"less-than-sign"
	.size	.L.str.110, 15

	.type	.L.str.111,@object              # @.str.111
.L.str.111:
	.asciz	"equals-sign"
	.size	.L.str.111, 12

	.type	.L.str.112,@object              # @.str.112
.L.str.112:
	.asciz	"greater-than-sign"
	.size	.L.str.112, 18

	.type	.L.str.113,@object              # @.str.113
.L.str.113:
	.asciz	"question-mark"
	.size	.L.str.113, 14

	.type	.L.str.114,@object              # @.str.114
.L.str.114:
	.asciz	"commercial-at"
	.size	.L.str.114, 14

	.type	.L.str.115,@object              # @.str.115
.L.str.115:
	.asciz	"A"
	.size	.L.str.115, 2

	.type	.L.str.116,@object              # @.str.116
.L.str.116:
	.asciz	"B"
	.size	.L.str.116, 2

	.type	.L.str.117,@object              # @.str.117
.L.str.117:
	.asciz	"C"
	.size	.L.str.117, 2

	.type	.L.str.118,@object              # @.str.118
.L.str.118:
	.asciz	"D"
	.size	.L.str.118, 2

	.type	.L.str.119,@object              # @.str.119
.L.str.119:
	.asciz	"E"
	.size	.L.str.119, 2

	.type	.L.str.120,@object              # @.str.120
.L.str.120:
	.asciz	"F"
	.size	.L.str.120, 2

	.type	.L.str.121,@object              # @.str.121
.L.str.121:
	.asciz	"G"
	.size	.L.str.121, 2

	.type	.L.str.122,@object              # @.str.122
.L.str.122:
	.asciz	"H"
	.size	.L.str.122, 2

	.type	.L.str.123,@object              # @.str.123
.L.str.123:
	.asciz	"I"
	.size	.L.str.123, 2

	.type	.L.str.124,@object              # @.str.124
.L.str.124:
	.asciz	"J"
	.size	.L.str.124, 2

	.type	.L.str.125,@object              # @.str.125
.L.str.125:
	.asciz	"K"
	.size	.L.str.125, 2

	.type	.L.str.126,@object              # @.str.126
.L.str.126:
	.asciz	"L"
	.size	.L.str.126, 2

	.type	.L.str.127,@object              # @.str.127
.L.str.127:
	.asciz	"M"
	.size	.L.str.127, 2

	.type	.L.str.128,@object              # @.str.128
.L.str.128:
	.asciz	"N"
	.size	.L.str.128, 2

	.type	.L.str.129,@object              # @.str.129
.L.str.129:
	.asciz	"O"
	.size	.L.str.129, 2

	.type	.L.str.130,@object              # @.str.130
.L.str.130:
	.asciz	"P"
	.size	.L.str.130, 2

	.type	.L.str.131,@object              # @.str.131
.L.str.131:
	.asciz	"Q"
	.size	.L.str.131, 2

	.type	.L.str.132,@object              # @.str.132
.L.str.132:
	.asciz	"R"
	.size	.L.str.132, 2

	.type	.L.str.133,@object              # @.str.133
.L.str.133:
	.asciz	"S"
	.size	.L.str.133, 2

	.type	.L.str.134,@object              # @.str.134
.L.str.134:
	.asciz	"T"
	.size	.L.str.134, 2

	.type	.L.str.135,@object              # @.str.135
.L.str.135:
	.asciz	"U"
	.size	.L.str.135, 2

	.type	.L.str.136,@object              # @.str.136
.L.str.136:
	.asciz	"V"
	.size	.L.str.136, 2

	.type	.L.str.137,@object              # @.str.137
.L.str.137:
	.asciz	"W"
	.size	.L.str.137, 2

	.type	.L.str.138,@object              # @.str.138
.L.str.138:
	.asciz	"X"
	.size	.L.str.138, 2

	.type	.L.str.139,@object              # @.str.139
.L.str.139:
	.asciz	"Y"
	.size	.L.str.139, 2

	.type	.L.str.140,@object              # @.str.140
.L.str.140:
	.asciz	"Z"
	.size	.L.str.140, 2

	.type	.L.str.141,@object              # @.str.141
.L.str.141:
	.asciz	"left-square-bracket"
	.size	.L.str.141, 20

	.type	.L.str.142,@object              # @.str.142
.L.str.142:
	.asciz	"backslash"
	.size	.L.str.142, 10

	.type	.L.str.143,@object              # @.str.143
.L.str.143:
	.asciz	"right-square-bracket"
	.size	.L.str.143, 21

	.type	.L.str.144,@object              # @.str.144
.L.str.144:
	.asciz	"circumflex"
	.size	.L.str.144, 11

	.type	.L.str.145,@object              # @.str.145
.L.str.145:
	.asciz	"underscore"
	.size	.L.str.145, 11

	.type	.L.str.146,@object              # @.str.146
.L.str.146:
	.asciz	"grave-accent"
	.size	.L.str.146, 13

	.type	.L.str.147,@object              # @.str.147
.L.str.147:
	.asciz	"a"
	.size	.L.str.147, 2

	.type	.L.str.148,@object              # @.str.148
.L.str.148:
	.asciz	"b"
	.size	.L.str.148, 2

	.type	.L.str.149,@object              # @.str.149
.L.str.149:
	.asciz	"c"
	.size	.L.str.149, 2

	.type	.L.str.150,@object              # @.str.150
.L.str.150:
	.asciz	"e"
	.size	.L.str.150, 2

	.type	.L.str.151,@object              # @.str.151
.L.str.151:
	.asciz	"f"
	.size	.L.str.151, 2

	.type	.L.str.152,@object              # @.str.152
.L.str.152:
	.asciz	"g"
	.size	.L.str.152, 2

	.type	.L.str.153,@object              # @.str.153
.L.str.153:
	.asciz	"h"
	.size	.L.str.153, 2

	.type	.L.str.154,@object              # @.str.154
.L.str.154:
	.asciz	"i"
	.size	.L.str.154, 2

	.type	.L.str.155,@object              # @.str.155
.L.str.155:
	.asciz	"j"
	.size	.L.str.155, 2

	.type	.L.str.156,@object              # @.str.156
.L.str.156:
	.asciz	"k"
	.size	.L.str.156, 2

	.type	.L.str.157,@object              # @.str.157
.L.str.157:
	.asciz	"l"
	.size	.L.str.157, 2

	.type	.L.str.158,@object              # @.str.158
.L.str.158:
	.asciz	"m"
	.size	.L.str.158, 2

	.type	.L.str.159,@object              # @.str.159
.L.str.159:
	.asciz	"n"
	.size	.L.str.159, 2

	.type	.L.str.160,@object              # @.str.160
.L.str.160:
	.asciz	"o"
	.size	.L.str.160, 2

	.type	.L.str.161,@object              # @.str.161
.L.str.161:
	.asciz	"p"
	.size	.L.str.161, 2

	.type	.L.str.162,@object              # @.str.162
.L.str.162:
	.asciz	"q"
	.size	.L.str.162, 2

	.type	.L.str.163,@object              # @.str.163
.L.str.163:
	.asciz	"r"
	.size	.L.str.163, 2

	.type	.L.str.164,@object              # @.str.164
.L.str.164:
	.asciz	"t"
	.size	.L.str.164, 2

	.type	.L.str.165,@object              # @.str.165
.L.str.165:
	.asciz	"u"
	.size	.L.str.165, 2

	.type	.L.str.166,@object              # @.str.166
.L.str.166:
	.asciz	"v"
	.size	.L.str.166, 2

	.type	.L.str.167,@object              # @.str.167
.L.str.167:
	.asciz	"x"
	.size	.L.str.167, 2

	.type	.L.str.168,@object              # @.str.168
.L.str.168:
	.asciz	"y"
	.size	.L.str.168, 2

	.type	.L.str.169,@object              # @.str.169
.L.str.169:
	.asciz	"z"
	.size	.L.str.169, 2

	.type	.L.str.170,@object              # @.str.170
.L.str.170:
	.asciz	"left-curly-bracket"
	.size	.L.str.170, 19

	.type	.L.str.171,@object              # @.str.171
.L.str.171:
	.asciz	"vertical-line"
	.size	.L.str.171, 14

	.type	.L.str.172,@object              # @.str.172
.L.str.172:
	.asciz	"right-curly-bracket"
	.size	.L.str.172, 20

	.type	.L.str.173,@object              # @.str.173
.L.str.173:
	.asciz	"tilde"
	.size	.L.str.173, 6

	.type	.L.str.174,@object              # @.str.174
.L.str.174:
	.asciz	"DEL"
	.size	.L.str.174, 4

	.type	.L.str.175,@object              # @.str.175
.L.str.175:
	.asciz	"Invalid equivalence class."
	.size	.L.str.175, 27

	.type	.L.str.176,@object              # @.str.176
.L.str.176:
	.asciz	"Invalid range in bracket expression."
	.size	.L.str.176, 37

	.type	.L.str.177,@object              # @.str.177
.L.str.177:
	.asciz	"cannot create std::deque larger than max_size()"
	.size	.L.str.177, 48

	.type	.L.str.178,@object              # @.str.178
.L.str.178:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.178, 49

	.type	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s,@object # @_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s
	.section	.rodata._ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s,"aG",@progbits,_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s,comdat
	.weak	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s
_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s:
	.asciz	"w"
	.size	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s, 2

	.type	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s,@object # @_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s
	.section	.rodata._ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s,"aG",@progbits,_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s,comdat
	.weak	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s
_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s:
	.asciz	"w"
	.size	_ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s, 2

	.type	.L.str.181,@object              # @.str.181
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.181:
	.asciz	"vector::reserve"
	.size	.L.str.181, 16

	.section	.init_array,"aw",@init_array
	.p2align	3, 0x0
	.dword	_GLOBAL__sub_I_benchmark_register.cc
	.data
	.p2align	3, 0x0
.L_ZTISt11regex_error.DW.stub:
	.dword	_ZTISt11regex_error
.L_ZTISt9exception.DW.stub:
	.dword	_ZTISt9exception
	.globl	_ZN9benchmark8internal9BenchmarkD1Ev
	.type	_ZN9benchmark8internal9BenchmarkD1Ev,@function
	.hidden	_ZN9benchmark8internal9BenchmarkD1Ev
_ZN9benchmark8internal9BenchmarkD1Ev = _ZN9benchmark8internal9BenchmarkD2Ev
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.dword	__gxx_personality_v0
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _ZN9benchmark14StatisticsMeanERKSt6vectorIdSaIdEE
	.addrsig_sym _ZN9benchmark16StatisticsMedianERKSt6vectorIdSaIdEE
	.addrsig_sym _ZN9benchmark16StatisticsStdDevERKSt6vectorIdSaIdEE
	.addrsig_sym _ZN9benchmark12StatisticsCVERKSt6vectorIdSaIdEE
	.addrsig_sym _ZNSt8__detail8_ScannerIcE18_M_eat_escape_ecmaEv
	.addrsig_sym _ZNSt8__detail8_ScannerIcE19_M_eat_escape_posixEv
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE9_M_invokeERKSt9_Any_dataOc
	.addrsig_sym _ZNSt17_Function_handlerIFbcENSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEEE10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation
	.addrsig_sym _GLOBAL__sub_I_benchmark_register.cc
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance
	.addrsig_sym _ZGVZN9benchmark8internal17BenchmarkFamilies11GetInstanceEvE8instance
	.addrsig_sym __dso_handle
	.addrsig_sym _ZN9benchmark12_GLOBAL__N_115kDisabledPrefixE
	.addrsig_sym _ZTIN9benchmark8internal17FunctionBenchmarkE
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSN9benchmark8internal17FunctionBenchmarkE
	.addrsig_sym _ZTIN9benchmark8internal9BenchmarkE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSN9benchmark8internal9BenchmarkE
	.addrsig_sym _ZGVZN9benchmark8internal18GetNullLogInstanceEvE8null_log
	.addrsig_sym _ZTISt11regex_error
	.addrsig_sym _ZNSt5ctypeIcE2idE
	.addrsig_sym _ZTISt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt23_Sp_counted_ptr_inplaceINSt8__detail4_NFAINSt7__cxx1112regex_traitsIcEEEESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt19_Sp_make_shared_tag
	.addrsig_sym _ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb0EEE
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0ELb1EEE
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb0EEE
	.addrsig_sym _ZGVZNKSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEclEcE5__nul
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1ELb1EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb0EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0ELb1EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb0EEE
	.addrsig_sym _ZTINSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail11_AnyMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1ELb1EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTINSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail12_CharMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZTISt9exception
	.addrsig_sym _ZNSt7__cxx117collateIcE2idE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb0EEE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb0ELb1EEE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb0EEE
	.addrsig_sym _ZTINSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZTSNSt8__detail15_BracketMatcherINSt7__cxx1112regex_traitsIcEELb1ELb1EEE
	.addrsig_sym _ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb0EE10_M_is_wordEcE3__s
	.addrsig_sym _ZZNKSt8__detail9_ExecutorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESaINS5_9sub_matchISB_EEENS5_12regex_traitsIcEELb1EE10_M_is_wordEcE3__s
